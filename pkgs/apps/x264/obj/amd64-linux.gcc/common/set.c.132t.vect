
;; Function x264_cqm_parse_jmlist (x264_cqm_parse_jmlist, funcdef_no=117, decl_uid=5840, cgraph_uid=117, symbol_order=165)


Analyzing loop at common/set.c:218
common/set.c:218:36: note: ===== analyze_loop_nest =====
common/set.c:218:36: note: === vect_analyze_loop_form ===
common/set.c:218:36: note: not vectorized: control flow in loop.
common/set.c:218:36: note: bad loop form.
common/set.c:198:12: note: vectorized 0 loops in function.
x264_cqm_parse_jmlist (struct x264_t * h, const char * buf, const char * name, uint8_t * cqm, const uint8_t * jvt, int length)
{
  int coef;
  int i;
  char * nextvar;
  char * p;
  _Bool _3;
  int _5;
  int _6;
  long unsigned int _15;
  long unsigned int _18;
  char _20;
  unsigned char _21;
  unsigned char _22;
  unsigned int coef.14_31;
  unsigned int _32;
  sizetype _33;
  uint8_t * _34;
  unsigned char _35;
  int coef.13_41;
  long unsigned int _42;
  _Bool _45;
  _Bool _46;
  _Bool _47;
  _Bool _51;
  int prephitmp_55;
  int pretmp_67;

  <bb 2>:
  p_13 = strstr (buf_11(D), name_12(D));
  # DEBUG p => p_13
  if (p_13 == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _15 = (long unsigned int) length_14(D);
  # DEBUG __dest => cqm_16(D)
  # DEBUG __ch => 16
  # DEBUG __len => _15
  __builtin_memset (cqm_16(D), 16, _15);
  # DEBUG __dest => NULL
  # DEBUG __ch => NULL
  # DEBUG __len => NULL
  goto <bb 22>;

  <bb 4>:
  _18 = strlen (name_12(D));
  p_19 = p_13 + _18;
  # DEBUG p => p_19
  _20 = *p_19;
  _21 = (unsigned char) _20;
  _22 = _21 + 171;
  if (_22 <= 1)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  p_23 = p_19 + 1;
  # DEBUG p => p_23

  <bb 6>:
  # p_1 = PHI <p_19(4), p_23(5)>
  # DEBUG p => p_1
  nextvar_24 = strstr (p_1, "INT");
  # DEBUG nextvar => nextvar_24
  # DEBUG i => 0
  # DEBUG i => 0
  # DEBUG p => p_1
  if (length_14(D) > 0)
    goto <bb 17>;
  else
    goto <bb 21>;

  <bb 7>:
  coef = -1;
  sscanf (p_27, "%d", &coef);
  if (i_60 == 0)
    goto <bb 8>;
  else
    goto <bb 10>;

  <bb 8>:
  coef.13_41 = coef;
  if (coef.13_41 == 0)
    goto <bb 9>;
  else
    goto <bb 11>;

  <bb 9>:
  _42 = (long unsigned int) length_14(D);
  # DEBUG __dest => cqm_16(D)
  # DEBUG __src => jvt_43(D)
  # DEBUG __len => _42
  __builtin_memcpy (cqm_16(D), jvt_43(D), _42);
  # DEBUG __dest => NULL
  # DEBUG __src => NULL
  # DEBUG __len => NULL
  goto <bb 16>;

  <bb 10>:
  pretmp_67 = coef;

  <bb 11>:
  # prephitmp_55 = PHI <pretmp_67(10), coef.13_41(8)>
  coef.14_31 = (unsigned int) prephitmp_55;
  _32 = coef.14_31 + 4294967295;
  if (_32 > 254)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  x264_log (h_39(D), 0, "bad coefficient in list \'%s\'\n", name_12(D));
  goto <bb 16>;

  <bb 13>:
  _33 = (sizetype) i_60;
  _34 = cqm_16(D) + _33;
  _35 = (unsigned char) prephitmp_55;
  *_34 = _35;
  coef ={v} {CLOBBER};
  i_38 = i_60 + 1;
  # DEBUG i => i_38
  # DEBUG i => i_38
  # DEBUG p => p_27
  if (length_14(D) > i_38)
    goto <bb 15>;
  else
    goto <bb 14>;

  <bb 14>:
  # p_8 = PHI <p_27(13)>
  # i_4 = PHI <i_38(13)>
  goto <bb 21>;

  <bb 15>:
  goto <bb 18>;

  <bb 16>:
  # _5 = PHI <0(9), -1(12)>
  coef ={v} {CLOBBER};
  goto <bb 22>;

  <bb 17>:

  <bb 18>:
  # p_64 = PHI <p_1(17), p_27(15)>
  # i_60 = PHI <0(17), i_38(15)>
  # DEBUG i => i_60
  # DEBUG p => p_64
  # DEBUG __a0 => 32
  # DEBUG __a1 => 9
  # DEBUG __a2 => 10
  p_25 = __builtin_strpbrk (p_64, " \t\n,");
  # DEBUG p => p_25
  if (p_25 != 0B)
    goto <bb 20>;
  else
    goto <bb 19>;

  <bb 19>:
  x264_log (h_39(D), 0, "not enough coefficients in list \'%s\'\n", name_12(D));
  goto <bb 22>;

  <bb 20>:
  # DEBUG __a0 => 48
  # DEBUG __a1 => 49
  # DEBUG __a2 => 50
  p_27 = __builtin_strpbrk (p_25, "0123456789");
  # DEBUG p => p_27
  if (p_27 != 0B)
    goto <bb 7>;
  else
    goto <bb 19>;

  <bb 21>:
  # p_53 = PHI <p_8(14), p_1(6)>
  # i_17 = PHI <i_4(14), 0(6)>
  # DEBUG p => p_53
  _45 = nextvar_24 != 0B;
  _46 = nextvar_24 < p_53;
  _47 = _45 & _46;
  _3 = length_14(D) != i_17;
  _51 = _3 | _47;
  if (_51 != 0)
    goto <bb 19>;
  else
    goto <bb 22>;

  <bb 22>:
  # _6 = PHI <0(3), _5(16), -1(19), 0(21)>
  return _6;

}



;; Function x264_cqm_init (x264_cqm_init, funcdef_no=115, decl_uid=4535, cgraph_uid=115, symbol_order=163)


Analyzing loop at common/set.c:142
common/set.c:142:5: note: ===== analyze_loop_nest =====
common/set.c:142:5: note: === vect_analyze_loop_form ===
common/set.c:142:5: note: not vectorized: multiple nested loops.
common/set.c:142:5: note: bad loop form.

Analyzing loop at common/set.c:155
common/set.c:155:9: note: ===== analyze_loop_nest =====
common/set.c:155:9: note: === vect_analyze_loop_form ===
common/set.c:155:9: note: ===== analyze_loop_nest_1 =====
common/set.c:155:9: note: === vect_analyze_loop_form ===
common/set.c:155:9: note: === get_loop_niters ===
Analyzing # of iterations of loop 7
  exit condition [63, + , 4294967295] != 0
  bounds on difference of bases: -63 ... -63
  result:
    # of iterations 63, bounded by 63
common/set.c:155:9: note: Considering outer-loop vectorization.
common/set.c:155:9: note: === get_loop_niters ===
Analyzing # of iterations of loop 6
  exit condition [1, + , 4294967295] != 0
  bounds on difference of bases: -1 ... -1
  result:
    # of iterations 1, bounded by 1
common/set.c:155:9: note: === vect_analyze_data_refs ===
Creating dr for h_51(D)->unquant8_mf[i_list_185]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: h_51(D)
	offset from base address: 0
	constant offset from base address: 3424
	step: 8
	aligned to: 128
	base_object: *h_51(D)
	Access function 0: {0, +, 1}_6
	Access function 1: 27392
Creating dr for h_51(D)->quant8_mf[i_list_185]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: h_51(D)
	offset from base address: 0
	constant offset from base address: 3472
	step: 8
	aligned to: 128
	base_object: *h_51(D)
	Access function 0: {0, +, 1}_6
	Access function 1: 27776
Creating dr for h_51(D)->quant8_bias[i_list_185]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: h_51(D)
	offset from base address: 0
	constant offset from base address: 3520
	step: 8
	aligned to: 128
	base_object: *h_51(D)
	Access function 0: {0, +, 1}_6
	Access function 1: 28160
Creating dr for deadzone[i_list_185]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &deadzone
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 128
	base_object: deadzone
	Access function 0: {0, +, 1}_6
Creating dr for quant8_mf[i_list_185][pretmp_518][0][i_60]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &quant8_mf
	offset from base address: (ssizetype) (((sizetype) i_list_185 * 6 + (sizetype) pretmp_518) * 256)
	constant offset from base address: 0
	step: 4
	aligned to: 128
	base_object: quant8_mf
	Access function 0: {0, +, 1}_7
	Access function 1: 0
	Access function 2: pretmp_518
	Access function 3: {0, +, 1}_6
Creating dr for *pretmp_552[i_60]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: pretmp_549 + (long unsigned int) max_qp_err_296 * 256
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 128
	base_object: *pretmp_552
	Access function 0: {0, +, 1}_7
Creating dr for *pretmp_558[i_60]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: pretmp_555 + (long unsigned int) max_qp_err_296 * 128
	offset from base address: 0
	constant offset from base address: 0
	step: 2
	aligned to: 128
	base_object: *pretmp_558
	Access function 0: {0, +, 1}_7
Creating dr for *pretmp_562[i_60]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: pretmp_560 + (long unsigned int) max_qp_err_296 * 128
	offset from base address: 0
	constant offset from base address: 0
	step: 2
	aligned to: 128
	base_object: *pretmp_562
	Access function 0: {0, +, 1}_7
common/set.c:155:9: note: got vectype for stmt: pretmp_549 = h_51(D)->unquant8_mf[i_list_185];
vector(2) long unsigned int
common/set.c:155:9: note: got vectype for stmt: pretmp_555 = h_51(D)->quant8_mf[i_list_185];
vector(2) long unsigned int
common/set.c:155:9: note: got vectype for stmt: pretmp_560 = h_51(D)->quant8_bias[i_list_185];
vector(2) long unsigned int
common/set.c:155:9: note: got vectype for stmt: pretmp_563 = deadzone[i_list_185];
vector(4) int
Applying pattern match.pd:49, generic-match.c:4015
common/set.c:155:9: note: analyze in outer-loop: quant8_mf
Applying pattern match.pd:724, generic-match.c:1428
Applying pattern match.pd:129, generic-match.c:6863
common/set.c:155:9: note: 	outer base_address: &quant8_mf
	outer offset from base address: (ssizetype) ((sizetype) pretmp_518 * 256)
	outer constant offset from base address: 0
	outer step: 1536
	outer aligned to: 128
common/set.c:155:9: note: got vectype for stmt: j_247 = quant8_mf[i_list_185][pretmp_518][0][i_60];
vector(4) int
Applying pattern match.pd:49, generic-match.c:4015
common/set.c:155:9: note: analyze in outer-loop: *(pretmp_549 + (long unsigned int) max_qp_err_296 * 256)
common/set.c:155:9: note: failed: evolution of base is not affine.
common/set.c:155:9: note: bad data references.

Analyzing loop at common/set.c:156
common/set.c:156:13: note: ===== analyze_loop_nest =====
common/set.c:156:13: note: === vect_analyze_loop_form ===
common/set.c:156:13: note: === get_loop_niters ===
common/set.c:156:13: note: === vect_analyze_data_refs ===
Creating dr for quant8_mf[i_list_185][pretmp_518][0][i_60]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &quant8_mf
	offset from base address: (ssizetype) (((sizetype) i_list_185 * 6 + (sizetype) pretmp_518) * 256)
	constant offset from base address: 0
	step: 4
	aligned to: 128
	base_object: quant8_mf
	Access function 0: {0, +, 1}_7
	Access function 1: 0
	Access function 2: pretmp_518
	Access function 3: i_list_185
Creating dr for *pretmp_552[i_60]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: pretmp_549 + (long unsigned int) max_qp_err_296 * 256
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 128
	base_object: *pretmp_552
	Access function 0: {0, +, 1}_7
Creating dr for *pretmp_558[i_60]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: pretmp_555 + (long unsigned int) max_qp_err_296 * 128
	offset from base address: 0
	constant offset from base address: 0
	step: 2
	aligned to: 128
	base_object: *pretmp_558
	Access function 0: {0, +, 1}_7
Creating dr for *pretmp_562[i_60]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: pretmp_560 + (long unsigned int) max_qp_err_296 * 128
	offset from base address: 0
	constant offset from base address: 0
	step: 2
	aligned to: 128
	base_object: *pretmp_562
	Access function 0: {0, +, 1}_7
common/set.c:156:13: note: got vectype for stmt: j_247 = quant8_mf[i_list_185][pretmp_518][0][i_60];
vector(4) int
common/set.c:156:13: note: got vectype for stmt: *pretmp_552[i_60] = _250;
vector(4) int
common/set.c:156:13: note: got vectype for stmt: *pretmp_558[i_60] = _263;
vector(8) short unsigned int
common/set.c:156:13: note: got vectype for stmt: *pretmp_562[i_60] = _274;
vector(8) short unsigned int
common/set.c:156:13: note: === vect_analyze_scalar_cycles ===
common/set.c:156:13: note: Analyze phi: i_60 = PHI <i_279(63), 0(68)>

common/set.c:156:13: note: Access function of PHI: {0, +, 1}_7
common/set.c:156:13: note: step: 1,  init: 0
common/set.c:156:13: note: Detected induction.
common/set.c:156:13: note: Analyze phi: max_qp_err_301 = PHI <max_qp_err_20(63), max_qp_err_255(68)>

common/set.c:156:13: note: Access function of PHI: max_qp_err_301
common/set.c:156:13: note: Analyze phi: .MEM_372 = PHI <.MEM_275(63), .MEM_333(68)>

common/set.c:156:13: note: Analyze phi: ivtmp_441 = PHI <ivtmp_433(63), 64(68)>

common/set.c:156:13: note: Access function of PHI: {64, +, 4294967295}_7
common/set.c:156:13: note: step: 4294967295,  init: 64
common/set.c:156:13: note: Detected induction.
common/set.c:156:13: note: Analyze phi: max_qp_err_301 = PHI <max_qp_err_20(63), max_qp_err_255(68)>

common/set.c:156:13: note: reduction used in loop.
common/set.c:156:13: note: Unknown def-use cycle pattern.
common/set.c:156:13: note: === vect_pattern_recog ===
common/set.c:156:13: note: vect_is_simple_use: operand j_247
common/set.c:156:13: note: def_stmt: j_247 = quant8_mf[i_list_185][pretmp_518][0][i_60];
common/set.c:156:13: note: type of def: 3.
common/set.c:156:13: note: vect_is_simple_use: operand _278
common/set.c:156:13: note: def_stmt: _278 = _276 & _277;
common/set.c:156:13: note: type of def: 3.
common/set.c:156:13: note: vect_is_simple_use: operand _276
common/set.c:156:13: note: def_stmt: _276 = j_29 > 65535;
common/set.c:156:13: note: type of def: 3.
common/set.c:156:13: note: vect_is_simple_use: operand _277
common/set.c:156:13: note: def_stmt: _277 = max_qp_err_296 > max_qp_err_301;
common/set.c:156:13: note: type of def: 3.
common/set.c:156:13: note: vect_recog_bool_pattern: detected:
common/set.c:156:13: note: pattern recognized: patt_410 = patt_411 != 0 ? max_qp_err_296 : max_qp_err_301;
common/set.c:156:13: note: additional pattern stmt: patt_412 = j_29 > 65535 ? 1 : 0;
common/set.c:156:13: note: additional pattern stmt: patt_411 = max_qp_err_296 > max_qp_err_301 ? patt_412 : 0;
common/set.c:156:13: note: === vect_analyze_data_ref_accesses ===
common/set.c:156:13: note: === vect_mark_stmts_to_be_vectorized ===
common/set.c:156:13: note: init: phi relevant? i_60 = PHI <i_279(63), 0(68)>
common/set.c:156:13: note: init: phi relevant? max_qp_err_301 = PHI <max_qp_err_20(63), max_qp_err_255(68)>
common/set.c:156:13: note: init: phi relevant? .MEM_372 = PHI <.MEM_275(63), .MEM_333(68)>
common/set.c:156:13: note: init: phi relevant? ivtmp_441 = PHI <ivtmp_433(63), 64(68)>
common/set.c:156:13: note: init: stmt relevant? # DEBUG max_qp_err => NULL
common/set.c:156:13: note: init: stmt relevant? # DEBUG i => NULL
common/set.c:156:13: note: init: stmt relevant? j_247 = quant8_mf[i_list_185][pretmp_518][0][i_60];
common/set.c:156:13: note: init: stmt relevant? _248 = (long long unsigned int) j_247;
common/set.c:156:13: note: init: stmt relevant? _249 = pretmp_544 / _248;
common/set.c:156:13: note: init: stmt relevant? _250 = (int) _249;
common/set.c:156:13: note: init: stmt relevant? *pretmp_552[i_60] = _250;
common/set.c:156:13: note: vec_stmt_relevant_p: stmt has vdefs.
common/set.c:156:13: note: mark relevant 4, live 0.
common/set.c:156:13: note: init: stmt relevant? _261 = j_247 + _260;
common/set.c:156:13: note: init: stmt relevant? j_262 = _261 >> pretmp_515;
common/set.c:156:13: note: init: stmt relevant? j_29 = pretmp_546 <= 10 ? j_247 : j_262;
common/set.c:156:13: note: init: stmt relevant? # DEBUG j => NULL
common/set.c:156:13: note: init: stmt relevant? _263 = (short unsigned int) j_29;
common/set.c:156:13: note: init: stmt relevant? *pretmp_558[i_60] = _263;
common/set.c:156:13: note: vec_stmt_relevant_p: stmt has vdefs.
common/set.c:156:13: note: mark relevant 4, live 0.
common/set.c:156:13: note: init: stmt relevant? _267 = 32768 / j_29;
common/set.c:156:13: note: init: stmt relevant? _270 = j_29 >> 1;
common/set.c:156:13: note: init: stmt relevant? _271 = _270 + pretmp_565;
common/set.c:156:13: note: init: stmt relevant? _272 = _271 / j_29;
common/set.c:156:13: note: init: stmt relevant? _273 = MIN_EXPR <_267, _272>;
common/set.c:156:13: note: init: stmt relevant? _274 = (short unsigned int) _273;
common/set.c:156:13: note: init: stmt relevant? *pretmp_562[i_60] = _274;
common/set.c:156:13: note: vec_stmt_relevant_p: stmt has vdefs.
common/set.c:156:13: note: mark relevant 4, live 0.
common/set.c:156:13: note: init: stmt relevant? _276 = j_29 > 65535;
common/set.c:156:13: note: init: stmt relevant? _277 = max_qp_err_296 > max_qp_err_301;
common/set.c:156:13: note: init: stmt relevant? _278 = _276 & _277;
common/set.c:156:13: note: init: stmt relevant? max_qp_err_20 = _278 ? max_qp_err_296 : max_qp_err_301;
common/set.c:156:13: note: vec_stmt_relevant_p: used out of loop.
common/set.c:156:13: note: mark relevant 0, live 1.
common/set.c:156:13: note: last stmt in pattern. don't mark relevant/live.
common/set.c:156:13: note: init: stmt relevant? # DEBUG max_qp_err => max_qp_err_20
common/set.c:156:13: note: init: stmt relevant? i_279 = i_60 + 1;
common/set.c:156:13: note: init: stmt relevant? # DEBUG i => i_279
common/set.c:156:13: note: init: stmt relevant? # DEBUG max_qp_err => max_qp_err_20
common/set.c:156:13: note: init: stmt relevant? # DEBUG i => i_279
common/set.c:156:13: note: init: stmt relevant? ivtmp_433 = ivtmp_441 - 1;
common/set.c:156:13: note: init: stmt relevant? if (ivtmp_433 != 0)
common/set.c:156:13: note: worklist: examine stmt: patt_410 = patt_411 != 0 ? max_qp_err_296 : max_qp_err_301;
common/set.c:156:13: note: vect_is_simple_use: operand patt_411
common/set.c:156:13: note: def_stmt: patt_411 = max_qp_err_296 > max_qp_err_301 ? patt_412 : 0;
common/set.c:156:13: note: type of def: 3.
common/set.c:156:13: note: mark relevant 0, live 1.
common/set.c:156:13: note: vect_is_simple_use: operand 0
common/set.c:156:13: note: vect_is_simple_use: operand max_qp_err_296
common/set.c:156:13: note: def_stmt: max_qp_err_296 = PHI <0(71), max_qp_err_281(70)>
common/set.c:156:13: note: type of def: 2.
common/set.c:156:13: note: def_stmt is out of loop.
common/set.c:156:13: note: vect_is_simple_use: operand max_qp_err_301
common/set.c:156:13: note: def_stmt: max_qp_err_301 = PHI <max_qp_err_20(63), max_qp_err_255(68)>
common/set.c:156:13: note: Unsupported pattern.
common/set.c:156:13: note: not vectorized: unsupported use in stmt.
common/set.c:156:13: note: unexpected pattern.

Analyzing loop at common/set.c:144
common/set.c:144:9: note: ===== analyze_loop_nest =====
common/set.c:144:9: note: === vect_analyze_loop_form ===
common/set.c:144:9: note: ===== analyze_loop_nest_1 =====
common/set.c:144:9: note: === vect_analyze_loop_form ===
common/set.c:144:9: note: not vectorized: control flow in loop.
common/set.c:144:9: note: bad inner-loop form.
common/set.c:144:9: note: not vectorized: Bad inner loop.
common/set.c:144:9: note: bad loop form.

Analyzing loop at common/set.c:145
common/set.c:145:13: note: ===== analyze_loop_nest =====
common/set.c:145:13: note: === vect_analyze_loop_form ===
common/set.c:145:13: note: not vectorized: control flow in loop.
common/set.c:145:13: note: bad loop form.

Analyzing loop at common/set.c:127
common/set.c:127:5: note: ===== analyze_loop_nest =====
common/set.c:127:5: note: === vect_analyze_loop_form ===
common/set.c:127:5: note: not vectorized: multiple nested loops.
common/set.c:127:5: note: bad loop form.

Analyzing loop at common/set.c:135
common/set.c:135:9: note: ===== analyze_loop_nest =====
common/set.c:135:9: note: === vect_analyze_loop_form ===
common/set.c:135:9: note: ===== analyze_loop_nest_1 =====
common/set.c:135:9: note: === vect_analyze_loop_form ===
common/set.c:135:9: note: === get_loop_niters ===
Analyzing # of iterations of loop 11
  exit condition [63, + , 4294967295] != 0
  bounds on difference of bases: -63 ... -63
  result:
    # of iterations 63, bounded by 63
common/set.c:135:9: note: Considering outer-loop vectorization.
common/set.c:135:9: note: === get_loop_niters ===
Analyzing # of iterations of loop 10
  exit condition [1, + , 4294967295] != 0
  bounds on difference of bases: -1 ... -1
  result:
    # of iterations 1, bounded by 1
common/set.c:135:9: note: === vect_analyze_data_refs ===
Creating dr for h_51(D)->dequant8_mf[i_list_155]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: h_51(D)
	offset from base address: 0
	constant offset from base address: 3376
	step: 8
	aligned to: 128
	base_object: *h_51(D)
	Access function 0: {0, +, 1}_10
	Access function 1: 27008
Creating dr for pretmp_476->scaling_list[pretmp_499]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: pretmp_476
	offset from base address: 0
	constant offset from base address: 104
	step: 8
	aligned to: 128
	base_object: *pretmp_476
	Access function 0: {4, +, 1}_10
	Access function 1: 576
Creating dr for def_dequant8[q_80][i_298]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &def_dequant8
	offset from base address: (ssizetype) ((sizetype) q_80 * 256)
	constant offset from base address: 0
	step: 4
	aligned to: 128
	base_object: def_dequant8
	Access function 0: {0, +, 1}_11
	Access function 1: q_80
Creating dr for *_170
analyze_innermost: success.
	base_address: pretmp_500
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *_170
Creating dr for *pretmp_498[0][i_298]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: pretmp_495 + (long unsigned int) q_80 * 256
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 128
	base_object: *pretmp_498
	Access function 0: {0, +, 1}_11
	Access function 1: 0
Creating dr for def_quant8[q_80][i_298]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &def_quant8
	offset from base address: (ssizetype) ((sizetype) q_80 * 256)
	constant offset from base address: 0
	step: 4
	aligned to: 128
	base_object: def_quant8
	Access function 0: {0, +, 1}_11
	Access function 1: q_80
Creating dr for *_170
analyze_innermost: success.
	base_address: pretmp_500
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *_170
Creating dr for quant8_mf[i_list_155][q_80][0][i_298]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &quant8_mf
	offset from base address: (ssizetype) (((sizetype) i_list_155 * 6 + (sizetype) q_80) * 256)
	constant offset from base address: 0
	step: 4
	aligned to: 128
	base_object: quant8_mf
	Access function 0: {0, +, 1}_11
	Access function 1: 0
	Access function 2: q_80
	Access function 3: {0, +, 1}_10
common/set.c:135:9: note: got vectype for stmt: pretmp_495 = h_51(D)->dequant8_mf[i_list_155];
vector(2) long unsigned int
common/set.c:135:9: note: got vectype for stmt: pretmp_500 = pretmp_476->scaling_list[pretmp_499];
vector(2) long unsigned int
Applying pattern match.pd:49, generic-match.c:4015
common/set.c:135:9: note: analyze in outer-loop: def_dequant8
common/set.c:135:9: note: 	outer base_address: &def_dequant8
	outer offset from base address: (ssizetype) ((sizetype) q_80 * 256)
	outer constant offset from base address: 0
	outer step: 0
	outer aligned to: 128
common/set.c:135:9: note: got vectype for stmt: _165 = def_dequant8[q_80][i_298];
vector(4) int
Applying pattern match.pd:49, generic-match.c:4015
common/set.c:135:9: note: analyze in outer-loop: *pretmp_500
common/set.c:135:9: note: failed: evolution of base is not affine.
common/set.c:135:9: note: bad data references.

Analyzing loop at common/set.c:136
common/set.c:136:13: note: ===== analyze_loop_nest =====
common/set.c:136:13: note: === vect_analyze_loop_form ===
common/set.c:136:13: note: === get_loop_niters ===
common/set.c:136:13: note: === vect_analyze_data_refs ===
Creating dr for def_dequant8[q_80][i_298]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &def_dequant8
	offset from base address: (ssizetype) ((sizetype) q_80 * 256)
	constant offset from base address: 0
	step: 4
	aligned to: 128
	base_object: def_dequant8
	Access function 0: {0, +, 1}_11
	Access function 1: q_80
Creating dr for *_170
analyze_innermost: success.
	base_address: pretmp_500
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pretmp_500
	Access function 0: {0B, +, 1}_11
Creating dr for *pretmp_498[0][i_298]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: pretmp_495 + (long unsigned int) q_80 * 256
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 128
	base_object: *pretmp_498
	Access function 0: {0, +, 1}_11
	Access function 1: 0
Creating dr for def_quant8[q_80][i_298]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &def_quant8
	offset from base address: (ssizetype) ((sizetype) q_80 * 256)
	constant offset from base address: 0
	step: 4
	aligned to: 128
	base_object: def_quant8
	Access function 0: {0, +, 1}_11
	Access function 1: q_80
Creating dr for *_170
analyze_innermost: success.
	base_address: pretmp_500
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pretmp_500
	Access function 0: {0B, +, 1}_11
Creating dr for quant8_mf[i_list_155][q_80][0][i_298]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &quant8_mf
	offset from base address: (ssizetype) (((sizetype) i_list_155 * 6 + (sizetype) q_80) * 256)
	constant offset from base address: 0
	step: 4
	aligned to: 128
	base_object: quant8_mf
	Access function 0: {0, +, 1}_11
	Access function 1: 0
	Access function 2: q_80
	Access function 3: i_list_155
common/set.c:136:13: note: got vectype for stmt: _165 = def_dequant8[q_80][i_298];
vector(4) int
common/set.c:136:13: note: got vectype for stmt: _171 = *_170;
const vector(16) unsigned char
common/set.c:136:13: note: got vectype for stmt: *pretmp_498[0][i_298] = _173;
vector(4) int
common/set.c:136:13: note: got vectype for stmt: _175 = def_quant8[q_80][i_298];
vector(4) int
common/set.c:136:13: note: got vectype for stmt: _179 = *_170;
const vector(16) unsigned char
common/set.c:136:13: note: got vectype for stmt: quant8_mf[i_list_155][q_80][0][i_298] = _187;
vector(4) int
common/set.c:136:13: note: === vect_analyze_scalar_cycles ===
common/set.c:136:13: note: Analyze phi: i_298 = PHI <i_189(42), 0(46)>

common/set.c:136:13: note: Access function of PHI: {0, +, 1}_11
common/set.c:136:13: note: step: 1,  init: 0
common/set.c:136:13: note: Detected induction.
common/set.c:136:13: note: Analyze phi: .MEM_332 = PHI <.MEM_188(42), .MEM_331(46)>

common/set.c:136:13: note: Analyze phi: ivtmp_124 = PHI <ivtmp_440(42), 64(46)>

common/set.c:136:13: note: Access function of PHI: {64, +, 4294967295}_11
common/set.c:136:13: note: step: 4294967295,  init: 64
common/set.c:136:13: note: Detected induction.
common/set.c:136:13: note: === vect_pattern_recog ===
common/set.c:136:13: note: vect_is_simple_use: operand _165
common/set.c:136:13: note: def_stmt: _165 = def_dequant8[q_80][i_298];
common/set.c:136:13: note: type of def: 3.
common/set.c:136:13: note: vect_is_simple_use: operand _175
common/set.c:136:13: note: def_stmt: _175 = def_quant8[q_80][i_298];
common/set.c:136:13: note: type of def: 3.
common/set.c:136:13: note: === vect_analyze_data_ref_accesses ===
common/set.c:136:13: note: === vect_mark_stmts_to_be_vectorized ===
common/set.c:136:13: note: init: phi relevant? i_298 = PHI <i_189(42), 0(46)>
common/set.c:136:13: note: init: phi relevant? .MEM_332 = PHI <.MEM_188(42), .MEM_331(46)>
common/set.c:136:13: note: init: phi relevant? ivtmp_124 = PHI <ivtmp_440(42), 64(46)>
common/set.c:136:13: note: init: stmt relevant? # DEBUG i => i_298
common/set.c:136:13: note: init: stmt relevant? _165 = def_dequant8[q_80][i_298];
common/set.c:136:13: note: init: stmt relevant? _169 = (sizetype) i_298;
common/set.c:136:13: note: init: stmt relevant? _170 = pretmp_500 + _169;
common/set.c:136:13: note: init: stmt relevant? _171 = *_170;
common/set.c:136:13: note: init: stmt relevant? _172 = (int) _171;
common/set.c:136:13: note: init: stmt relevant? _173 = _165 * _172;
common/set.c:136:13: note: init: stmt relevant? *pretmp_498[0][i_298] = _173;
common/set.c:136:13: note: vec_stmt_relevant_p: stmt has vdefs.
common/set.c:136:13: note: mark relevant 4, live 0.
common/set.c:136:13: note: init: stmt relevant? _175 = def_quant8[q_80][i_298];
common/set.c:136:13: note: init: stmt relevant? _176 = _175 * 16;
common/set.c:136:13: note: init: stmt relevant? _179 = *_170;
common/set.c:136:13: note: init: stmt relevant? _180 = _179 >> 1;
common/set.c:136:13: note: init: stmt relevant? _181 = (int) _180;
common/set.c:136:13: note: init: stmt relevant? _182 = _176 + _181;
common/set.c:136:13: note: init: stmt relevant? _186 = (int) _179;
common/set.c:136:13: note: init: stmt relevant? _187 = _182 / _186;
common/set.c:136:13: note: init: stmt relevant? quant8_mf[i_list_155][q_80][0][i_298] = _187;
common/set.c:136:13: note: vec_stmt_relevant_p: stmt has vdefs.
common/set.c:136:13: note: mark relevant 4, live 0.
common/set.c:136:13: note: init: stmt relevant? i_189 = i_298 + 1;
common/set.c:136:13: note: init: stmt relevant? # DEBUG i => i_189
common/set.c:136:13: note: init: stmt relevant? # DEBUG i => i_189
common/set.c:136:13: note: init: stmt relevant? ivtmp_440 = ivtmp_124 - 1;
common/set.c:136:13: note: init: stmt relevant? if (ivtmp_440 != 0)
common/set.c:136:13: note: worklist: examine stmt: quant8_mf[i_list_155][q_80][0][i_298] = _187;
common/set.c:136:13: note: vect_is_simple_use: operand _187
common/set.c:136:13: note: def_stmt: _187 = _182 / _186;
common/set.c:136:13: note: type of def: 3.
common/set.c:136:13: note: mark relevant 4, live 0.
common/set.c:136:13: note: worklist: examine stmt: _187 = _182 / _186;
common/set.c:136:13: note: vect_is_simple_use: operand _182
common/set.c:136:13: note: def_stmt: _182 = _176 + _181;
common/set.c:136:13: note: type of def: 3.
common/set.c:136:13: note: mark relevant 4, live 0.
common/set.c:136:13: note: vect_is_simple_use: operand _186
common/set.c:136:13: note: def_stmt: _186 = (int) _179;
common/set.c:136:13: note: type of def: 3.
common/set.c:136:13: note: mark relevant 4, live 0.
common/set.c:136:13: note: worklist: examine stmt: _186 = (int) _179;
common/set.c:136:13: note: vect_is_simple_use: operand _179
common/set.c:136:13: note: def_stmt: _179 = *_170;
common/set.c:136:13: note: type of def: 3.
common/set.c:136:13: note: mark relevant 4, live 0.
common/set.c:136:13: note: worklist: examine stmt: _179 = *_170;
common/set.c:136:13: note: worklist: examine stmt: _182 = _176 + _181;
common/set.c:136:13: note: vect_is_simple_use: operand _176
common/set.c:136:13: note: def_stmt: _176 = _175 * 16;
common/set.c:136:13: note: type of def: 3.
common/set.c:136:13: note: mark relevant 4, live 0.
common/set.c:136:13: note: vect_is_simple_use: operand _181
common/set.c:136:13: note: def_stmt: _181 = (int) _180;
common/set.c:136:13: note: type of def: 3.
common/set.c:136:13: note: mark relevant 4, live 0.
common/set.c:136:13: note: worklist: examine stmt: _181 = (int) _180;
common/set.c:136:13: note: vect_is_simple_use: operand _180
common/set.c:136:13: note: def_stmt: _180 = _179 >> 1;
common/set.c:136:13: note: type of def: 3.
common/set.c:136:13: note: mark relevant 4, live 0.
common/set.c:136:13: note: worklist: examine stmt: _180 = _179 >> 1;
common/set.c:136:13: note: vect_is_simple_use: operand _179
common/set.c:136:13: note: def_stmt: _179 = *_170;
common/set.c:136:13: note: type of def: 3.
common/set.c:136:13: note: mark relevant 4, live 0.
common/set.c:136:13: note: already marked relevant/live.
common/set.c:136:13: note: worklist: examine stmt: _176 = _175 * 16;
common/set.c:136:13: note: vect_is_simple_use: operand _175
common/set.c:136:13: note: def_stmt: _175 = def_quant8[q_80][i_298];
common/set.c:136:13: note: type of def: 3.
common/set.c:136:13: note: mark relevant 4, live 0.
common/set.c:136:13: note: worklist: examine stmt: _175 = def_quant8[q_80][i_298];
common/set.c:136:13: note: worklist: examine stmt: *pretmp_498[0][i_298] = _173;
common/set.c:136:13: note: vect_is_simple_use: operand _173
common/set.c:136:13: note: def_stmt: _173 = _165 * _172;
common/set.c:136:13: note: type of def: 3.
common/set.c:136:13: note: mark relevant 4, live 0.
common/set.c:136:13: note: worklist: examine stmt: _173 = _165 * _172;
common/set.c:136:13: note: vect_is_simple_use: operand _165
common/set.c:136:13: note: def_stmt: _165 = def_dequant8[q_80][i_298];
common/set.c:136:13: note: type of def: 3.
common/set.c:136:13: note: mark relevant 4, live 0.
common/set.c:136:13: note: vect_is_simple_use: operand _172
common/set.c:136:13: note: def_stmt: _172 = (int) _171;
common/set.c:136:13: note: type of def: 3.
common/set.c:136:13: note: mark relevant 4, live 0.
common/set.c:136:13: note: worklist: examine stmt: _172 = (int) _171;
common/set.c:136:13: note: vect_is_simple_use: operand _171
common/set.c:136:13: note: def_stmt: _171 = *_170;
common/set.c:136:13: note: type of def: 3.
common/set.c:136:13: note: mark relevant 4, live 0.
common/set.c:136:13: note: worklist: examine stmt: _171 = *_170;
common/set.c:136:13: note: worklist: examine stmt: _165 = def_dequant8[q_80][i_298];
common/set.c:136:13: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _165 = def_dequant8[q_80][i_298];
  stmt_b: _171 = *_170;
) -> no dependence
(compute_affine_dependence
  stmt_a: _165 = def_dequant8[q_80][i_298];
  stmt_b: *pretmp_498[0][i_298] = _173;
) -> no dependence
(compute_affine_dependence
  stmt_a: _165 = def_dequant8[q_80][i_298];
  stmt_b: _175 = def_quant8[q_80][i_298];
) -> no dependence
(compute_affine_dependence
  stmt_a: _165 = def_dequant8[q_80][i_298];
  stmt_b: _179 = *_170;
) -> no dependence
(compute_affine_dependence
  stmt_a: _165 = def_dequant8[q_80][i_298];
  stmt_b: quant8_mf[i_list_155][q_80][0][i_298] = _187;
) -> no dependence
(compute_affine_dependence
  stmt_a: _171 = *_170;
  stmt_b: *pretmp_498[0][i_298] = _173;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _171 = *_170;
  stmt_b: _175 = def_quant8[q_80][i_298];
) -> no dependence
(compute_affine_dependence
  stmt_a: _171 = *_170;
  stmt_b: _179 = *_170;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_11)
  (chrec_b = {0B, +, 1}_11)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _171 = *_170;
  stmt_b: quant8_mf[i_list_155][q_80][0][i_298] = _187;
) -> no dependence
(compute_affine_dependence
  stmt_a: *pretmp_498[0][i_298] = _173;
  stmt_b: _175 = def_quant8[q_80][i_298];
) -> no dependence
(compute_affine_dependence
  stmt_a: *pretmp_498[0][i_298] = _173;
  stmt_b: _179 = *_170;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: *pretmp_498[0][i_298] = _173;
  stmt_b: quant8_mf[i_list_155][q_80][0][i_298] = _187;
) -> no dependence
(compute_affine_dependence
  stmt_a: _175 = def_quant8[q_80][i_298];
  stmt_b: _179 = *_170;
) -> no dependence
(compute_affine_dependence
  stmt_a: _175 = def_quant8[q_80][i_298];
  stmt_b: quant8_mf[i_list_155][q_80][0][i_298] = _187;
) -> no dependence
(compute_affine_dependence
  stmt_a: _179 = *_170;
  stmt_b: quant8_mf[i_list_155][q_80][0][i_298] = _187;
) -> no dependence
(compute_affine_dependence
  stmt_a: _165 = def_dequant8[q_80][i_298];
  stmt_b: _165 = def_dequant8[q_80][i_298];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_11)
  (chrec_b = {0, +, 1}_11)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = q_80)
  (chrec_b = q_80)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _171 = *_170;
  stmt_b: _171 = *_170;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_11)
  (chrec_b = {0B, +, 1}_11)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: *pretmp_498[0][i_298] = _173;
  stmt_b: *pretmp_498[0][i_298] = _173;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_11)
  (chrec_b = {0, +, 1}_11)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 0)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _175 = def_quant8[q_80][i_298];
  stmt_b: _175 = def_quant8[q_80][i_298];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_11)
  (chrec_b = {0, +, 1}_11)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = q_80)
  (chrec_b = q_80)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _179 = *_170;
  stmt_b: _179 = *_170;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_11)
  (chrec_b = {0B, +, 1}_11)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: quant8_mf[i_list_155][q_80][0][i_298] = _187;
  stmt_b: quant8_mf[i_list_155][q_80][0][i_298] = _187;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_11)
  (chrec_b = {0, +, 1}_11)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 0)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = q_80)
  (chrec_b = q_80)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = i_list_155)
  (chrec_b = i_list_155)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/set.c:136:13: note: versioning for alias required: can't determine dependence between *_170 and *pretmp_498[0][i_298]
common/set.c:136:13: note: mark for run-time aliasing test between *_170 and *pretmp_498[0][i_298]
common/set.c:136:13: note: versioning for alias required: can't determine dependence between *pretmp_498[0][i_298] and *_170
common/set.c:136:13: note: mark for run-time aliasing test between *pretmp_498[0][i_298] and *_170
common/set.c:136:13: note: === vect_determine_vectorization_factor ===
common/set.c:136:13: note: ==> examining phi: i_298 = PHI <i_189(42), 0(46)>

common/set.c:136:13: note: ==> examining phi: .MEM_332 = PHI <.MEM_188(42), .MEM_331(46)>

common/set.c:136:13: note: ==> examining phi: ivtmp_124 = PHI <ivtmp_440(42), 64(46)>

common/set.c:136:13: note: ==> examining statement: # DEBUG i => i_298

common/set.c:136:13: note: skip.
common/set.c:136:13: note: ==> examining statement: _165 = def_dequant8[q_80][i_298];

common/set.c:136:13: note: get vectype for scalar type:  int
common/set.c:136:13: note: vectype: vector(4) int
common/set.c:136:13: note: nunits = 4
common/set.c:136:13: note: ==> examining statement: _169 = (sizetype) i_298;

common/set.c:136:13: note: skip.
common/set.c:136:13: note: ==> examining statement: _170 = pretmp_500 + _169;

common/set.c:136:13: note: skip.
common/set.c:136:13: note: ==> examining statement: _171 = *_170;

common/set.c:136:13: note: get vectype for scalar type:  unsigned char
common/set.c:136:13: note: vectype: vector(16) unsigned char
common/set.c:136:13: note: nunits = 16
common/set.c:136:13: note: ==> examining statement: _172 = (int) _171;

common/set.c:136:13: note: get vectype for scalar type:  int
common/set.c:136:13: note: vectype: vector(4) int
common/set.c:136:13: note: get vectype for scalar type:  unsigned char
common/set.c:136:13: note: vectype: vector(16) unsigned char
common/set.c:136:13: note: nunits = 16
common/set.c:136:13: note: ==> examining statement: _173 = _165 * _172;

common/set.c:136:13: note: get vectype for scalar type:  int
common/set.c:136:13: note: vectype: vector(4) int
common/set.c:136:13: note: get vectype for scalar type:  int
common/set.c:136:13: note: vectype: vector(4) int
common/set.c:136:13: note: nunits = 4
common/set.c:136:13: note: ==> examining statement: *pretmp_498[0][i_298] = _173;

common/set.c:136:13: note: get vectype for scalar type:  int
common/set.c:136:13: note: vectype: vector(4) int
common/set.c:136:13: note: nunits = 4
common/set.c:136:13: note: ==> examining statement: _175 = def_quant8[q_80][i_298];

common/set.c:136:13: note: get vectype for scalar type:  int
common/set.c:136:13: note: vectype: vector(4) int
common/set.c:136:13: note: nunits = 4
common/set.c:136:13: note: ==> examining statement: _176 = _175 * 16;

common/set.c:136:13: note: get vectype for scalar type:  int
common/set.c:136:13: note: vectype: vector(4) int
common/set.c:136:13: note: get vectype for scalar type:  int
common/set.c:136:13: note: vectype: vector(4) int
common/set.c:136:13: note: nunits = 4
common/set.c:136:13: note: ==> examining statement: _179 = *_170;

common/set.c:136:13: note: get vectype for scalar type:  unsigned char
common/set.c:136:13: note: vectype: vector(16) unsigned char
common/set.c:136:13: note: nunits = 16
common/set.c:136:13: note: ==> examining statement: _180 = _179 >> 1;

common/set.c:136:13: note: get vectype for scalar type:  unsigned char
common/set.c:136:13: note: vectype: vector(16) unsigned char
common/set.c:136:13: note: get vectype for scalar type:  unsigned char
common/set.c:136:13: note: vectype: vector(16) unsigned char
common/set.c:136:13: note: nunits = 16
common/set.c:136:13: note: ==> examining statement: _181 = (int) _180;

common/set.c:136:13: note: get vectype for scalar type:  int
common/set.c:136:13: note: vectype: vector(4) int
common/set.c:136:13: note: get vectype for scalar type:  unsigned char
common/set.c:136:13: note: vectype: vector(16) unsigned char
common/set.c:136:13: note: nunits = 16
common/set.c:136:13: note: ==> examining statement: _182 = _176 + _181;

common/set.c:136:13: note: get vectype for scalar type:  int
common/set.c:136:13: note: vectype: vector(4) int
common/set.c:136:13: note: get vectype for scalar type:  int
common/set.c:136:13: note: vectype: vector(4) int
common/set.c:136:13: note: nunits = 4
common/set.c:136:13: note: ==> examining statement: _186 = (int) _179;

common/set.c:136:13: note: get vectype for scalar type:  int
common/set.c:136:13: note: vectype: vector(4) int
common/set.c:136:13: note: get vectype for scalar type:  unsigned char
common/set.c:136:13: note: vectype: vector(16) unsigned char
common/set.c:136:13: note: nunits = 16
common/set.c:136:13: note: ==> examining statement: _187 = _182 / _186;

common/set.c:136:13: note: get vectype for scalar type:  int
common/set.c:136:13: note: vectype: vector(4) int
common/set.c:136:13: note: get vectype for scalar type:  int
common/set.c:136:13: note: vectype: vector(4) int
common/set.c:136:13: note: nunits = 4
common/set.c:136:13: note: ==> examining statement: quant8_mf[i_list_155][q_80][0][i_298] = _187;

common/set.c:136:13: note: get vectype for scalar type:  int
common/set.c:136:13: note: vectype: vector(4) int
common/set.c:136:13: note: nunits = 4
common/set.c:136:13: note: ==> examining statement: i_189 = i_298 + 1;

common/set.c:136:13: note: skip.
common/set.c:136:13: note: ==> examining statement: # DEBUG i => i_189

common/set.c:136:13: note: skip.
common/set.c:136:13: note: ==> examining statement: # DEBUG i => i_189

common/set.c:136:13: note: skip.
common/set.c:136:13: note: ==> examining statement: ivtmp_440 = ivtmp_124 - 1;

common/set.c:136:13: note: skip.
common/set.c:136:13: note: ==> examining statement: if (ivtmp_440 != 0)

common/set.c:136:13: note: skip.
common/set.c:136:13: note: vectorization factor = 16
common/set.c:136:13: note: === vect_analyze_data_refs_alignment ===
common/set.c:136:13: note: dependence distance  = 0.
common/set.c:136:13: note: accesses have the same alignment.
dependence distance modulo vf == 0 between *_170 and *_170
common/set.c:136:13: note: vect_compute_data_ref_alignment:
common/set.c:136:13: note: misalign = 0 bytes of ref def_dequant8[q_80][i_298]
common/set.c:136:13: note: vect_compute_data_ref_alignment:
common/set.c:136:13: note: can't force alignment of ref: *_170
common/set.c:136:13: note: vect_compute_data_ref_alignment:
common/set.c:136:13: note: can't force alignment of ref: *pretmp_498[0][i_298]
common/set.c:136:13: note: vect_compute_data_ref_alignment:
common/set.c:136:13: note: misalign = 0 bytes of ref def_quant8[q_80][i_298]
common/set.c:136:13: note: vect_compute_data_ref_alignment:
common/set.c:136:13: note: can't force alignment of ref: *_170
common/set.c:136:13: note: vect_compute_data_ref_alignment:
common/set.c:136:13: note: misalign = 0 bytes of ref quant8_mf[i_list_155][q_80][0][i_298]
common/set.c:136:13: note: === vect_prune_runtime_alias_test_list ===
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
common/set.c:136:13: note: found equal ranges *pretmp_498[0][i_298], *_170 and *pretmp_498[0][i_298], *_170
common/set.c:136:13: note: improved number of alias checks from 2 to 1
common/set.c:136:13: note: === vect_enhance_data_refs_alignment ===
common/set.c:136:13: note: Unknown misalignment, is_packed = 0
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
common/set.c:136:13: note: Unknown misalignment, is_packed = 0
common/set.c:136:13: note: Unknown misalignment, is_packed = 0
common/set.c:136:13: note: vect_can_advance_ivs_p:
common/set.c:136:13: note: Analyze phi: i_298 = PHI <i_189(42), 0(46)>

common/set.c:136:13: note: Analyze phi: .MEM_332 = PHI <.MEM_188(42), .MEM_331(46)>

common/set.c:136:13: note: virtual phi. skip.
common/set.c:136:13: note: Analyze phi: ivtmp_124 = PHI <ivtmp_440(42), 64(46)>

common/set.c:136:13: note: vect_model_load_cost: aligned.
common/set.c:136:13: note: vect_get_data_access_cost: inside_cost = 4, outside_cost = 0.
common/set.c:136:13: note: Setting misalignment to -1.
common/set.c:136:13: note: vect_model_load_cost: unaligned supported by hardware.
common/set.c:136:13: note: vect_get_data_access_cost: inside_cost = 6, outside_cost = 0.
common/set.c:136:13: note: Setting misalignment to -1.
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
common/set.c:136:13: note: vect_model_store_cost: unaligned supported by hardware.
common/set.c:136:13: note: vect_get_data_access_cost: inside_cost = 14, outside_cost = 0.
common/set.c:136:13: note: vect_model_load_cost: aligned.
common/set.c:136:13: note: vect_get_data_access_cost: inside_cost = 18, outside_cost = 0.
common/set.c:136:13: note: Setting misalignment to -1.
common/set.c:136:13: note: vect_model_load_cost: unaligned supported by hardware.
common/set.c:136:13: note: vect_get_data_access_cost: inside_cost = 20, outside_cost = 0.
common/set.c:136:13: note: vect_model_store_cost: aligned.
common/set.c:136:13: note: vect_get_data_access_cost: inside_cost = 24, outside_cost = 0.
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
common/set.c:136:13: note: Vectorizing an unaligned access.
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
common/set.c:136:13: note: Vectorizing an unaligned access.
common/set.c:136:13: note: Vectorizing an unaligned access.
common/set.c:136:13: note: === vect_analyze_slp ===
common/set.c:136:13: note: === vect_make_slp_decision ===
common/set.c:136:13: note: === vect_detect_hybrid_slp ===
common/set.c:136:13: note: === vect_analyze_loop_operations ===
common/set.c:136:13: note: examining phi: i_298 = PHI <i_189(42), 0(46)>

common/set.c:136:13: note: examining phi: .MEM_332 = PHI <.MEM_188(42), .MEM_331(46)>

common/set.c:136:13: note: examining phi: ivtmp_124 = PHI <ivtmp_440(42), 64(46)>

common/set.c:136:13: note: ==> examining statement: # DEBUG i => i_298
common/set.c:136:13: note: irrelevant.
common/set.c:136:13: note: ==> examining statement: _165 = def_dequant8[q_80][i_298];
common/set.c:136:13: note: num. args = 4 (not unary/binary/ternary op).
common/set.c:136:13: note: vect_is_simple_use: operand def_dequant8[q_80][i_298]
common/set.c:136:13: note: not ssa-name.
common/set.c:136:13: note: use not simple.
common/set.c:136:13: note: vect_model_load_cost: aligned.
common/set.c:136:13: note: vect_model_load_cost: inside_cost = 4, prologue_cost = 0 .
common/set.c:136:13: note: ==> examining statement: _169 = (sizetype) i_298;
common/set.c:136:13: note: irrelevant.
common/set.c:136:13: note: ==> examining statement: _170 = pretmp_500 + _169;
common/set.c:136:13: note: irrelevant.
common/set.c:136:13: note: ==> examining statement: _171 = *_170;
common/set.c:136:13: note: vect_is_simple_use: operand *_170
common/set.c:136:13: note: not ssa-name.
common/set.c:136:13: note: use not simple.
common/set.c:136:13: note: vect_is_simple_use: operand *_170
common/set.c:136:13: note: not ssa-name.
common/set.c:136:13: note: use not simple.
common/set.c:136:13: note: vect_model_load_cost: unaligned supported by hardware.
common/set.c:136:13: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/set.c:136:13: note: ==> examining statement: _172 = (int) _171;
common/set.c:136:13: note: vect_is_simple_use: operand _171
common/set.c:136:13: note: def_stmt: _171 = *_170;
common/set.c:136:13: note: type of def: 3.
common/set.c:136:13: note: === vectorizable_conversion ===
common/set.c:136:13: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/set.c:136:13: note: ==> examining statement: _173 = _165 * _172;
common/set.c:136:13: note: vect_is_simple_use: operand _165
common/set.c:136:13: note: def_stmt: _165 = def_dequant8[q_80][i_298];
common/set.c:136:13: note: type of def: 3.
common/set.c:136:13: note: vect_is_simple_use: operand _172
common/set.c:136:13: note: def_stmt: _172 = (int) _171;
common/set.c:136:13: note: type of def: 3.
common/set.c:136:13: note: === vectorizable_operation ===
common/set.c:136:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/set.c:136:13: note: ==> examining statement: *pretmp_498[0][i_298] = _173;
common/set.c:136:13: note: vect_is_simple_use: operand _173
common/set.c:136:13: note: def_stmt: _173 = _165 * _172;
common/set.c:136:13: note: type of def: 3.
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
common/set.c:136:13: note: vect_model_store_cost: unaligned supported by hardware.
common/set.c:136:13: note: vect_model_store_cost: inside_cost = 8, prologue_cost = 0 .
common/set.c:136:13: note: ==> examining statement: _175 = def_quant8[q_80][i_298];
common/set.c:136:13: note: num. args = 4 (not unary/binary/ternary op).
common/set.c:136:13: note: vect_is_simple_use: operand def_quant8[q_80][i_298]
common/set.c:136:13: note: not ssa-name.
common/set.c:136:13: note: use not simple.
common/set.c:136:13: note: vect_model_load_cost: aligned.
common/set.c:136:13: note: vect_model_load_cost: inside_cost = 4, prologue_cost = 0 .
common/set.c:136:13: note: ==> examining statement: _176 = _175 * 16;
common/set.c:136:13: note: vect_is_simple_use: operand _175
common/set.c:136:13: note: def_stmt: _175 = def_quant8[q_80][i_298];
common/set.c:136:13: note: type of def: 3.
common/set.c:136:13: note: vect_is_simple_use: operand 16
common/set.c:136:13: note: === vectorizable_operation ===
common/set.c:136:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 1 .
common/set.c:136:13: note: ==> examining statement: _179 = *_170;
common/set.c:136:13: note: vect_is_simple_use: operand *_170
common/set.c:136:13: note: not ssa-name.
common/set.c:136:13: note: use not simple.
common/set.c:136:13: note: vect_is_simple_use: operand *_170
common/set.c:136:13: note: not ssa-name.
common/set.c:136:13: note: use not simple.
common/set.c:136:13: note: vect_model_load_cost: unaligned supported by hardware.
common/set.c:136:13: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/set.c:136:13: note: ==> examining statement: _180 = _179 >> 1;
common/set.c:136:13: note: vect_is_simple_use: operand _179
common/set.c:136:13: note: def_stmt: _179 = *_170;
common/set.c:136:13: note: type of def: 3.
common/set.c:136:13: note: vect_is_simple_use: operand 1
common/set.c:136:13: note: vector/scalar shift/rotate found.
common/set.c:136:13: note: === vectorizable_shift ===
common/set.c:136:13: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
common/set.c:136:13: note: ==> examining statement: _181 = (int) _180;
common/set.c:136:13: note: vect_is_simple_use: operand _180
common/set.c:136:13: note: def_stmt: _180 = _179 >> 1;
common/set.c:136:13: note: type of def: 3.
common/set.c:136:13: note: === vectorizable_conversion ===
common/set.c:136:13: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/set.c:136:13: note: ==> examining statement: _182 = _176 + _181;
common/set.c:136:13: note: vect_is_simple_use: operand _176
common/set.c:136:13: note: def_stmt: _176 = _175 * 16;
common/set.c:136:13: note: type of def: 3.
common/set.c:136:13: note: vect_is_simple_use: operand _181
common/set.c:136:13: note: def_stmt: _181 = (int) _180;
common/set.c:136:13: note: type of def: 3.
common/set.c:136:13: note: === vectorizable_operation ===
common/set.c:136:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/set.c:136:13: note: ==> examining statement: _186 = (int) _179;
common/set.c:136:13: note: vect_is_simple_use: operand _179
common/set.c:136:13: note: def_stmt: _179 = *_170;
common/set.c:136:13: note: type of def: 3.
common/set.c:136:13: note: === vectorizable_conversion ===
common/set.c:136:13: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/set.c:136:13: note: ==> examining statement: _187 = _182 / _186;
common/set.c:136:13: note: vect_is_simple_use: operand _182
common/set.c:136:13: note: def_stmt: _182 = _176 + _181;
common/set.c:136:13: note: type of def: 3.
common/set.c:136:13: note: vect_is_simple_use: operand _186
common/set.c:136:13: note: def_stmt: _186 = (int) _179;
common/set.c:136:13: note: type of def: 3.
common/set.c:136:13: note: op not supported by target.
common/set.c:136:13: note: not vectorized: relevant stmt not supported: _187 = _182 / _186;
common/set.c:136:13: note: bad operation or unsupported loop bound.

Analyzing loop at common/set.c:129
common/set.c:129:9: note: ===== analyze_loop_nest =====
common/set.c:129:9: note: === vect_analyze_loop_form ===
common/set.c:129:9: note: ===== analyze_loop_nest_1 =====
common/set.c:129:9: note: === vect_analyze_loop_form ===
common/set.c:129:9: note: === get_loop_niters ===
Analyzing # of iterations of loop 12
  exit condition [15, + , 4294967295] != 0
  bounds on difference of bases: -15 ... -15
  result:
    # of iterations 15, bounded by 15
common/set.c:129:9: note: Considering outer-loop vectorization.
common/set.c:129:9: note: === get_loop_niters ===
Analyzing # of iterations of loop 9
  exit condition [3, + , 4294967295] != 0
  bounds on difference of bases: -3 ... -3
  result:
    # of iterations 3, bounded by 3
common/set.c:129:9: note: === vect_analyze_data_refs ===
Creating dr for h_51(D)->dequant4_mf[i_list_299]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: h_51(D)
	offset from base address: 0
	constant offset from base address: 3344
	step: 8
	aligned to: 128
	base_object: *h_51(D)
	Access function 0: {0, +, 1}_9
	Access function 1: 26752
Creating dr for pretmp_476->scaling_list[i_list_299]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: pretmp_476
	offset from base address: 0
	constant offset from base address: 72
	step: 8
	aligned to: 128
	base_object: *pretmp_476
	Access function 0: {0, +, 1}_9
	Access function 1: 576
Creating dr for def_dequant4[q_80][i_300]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &def_dequant4
	offset from base address: (ssizetype) ((sizetype) q_80 * 64)
	constant offset from base address: 0
	step: 4
	aligned to: 64
	base_object: def_dequant4
	Access function 0: {0, +, 1}_12
	Access function 1: q_80
Creating dr for *_140
analyze_innermost: success.
	base_address: pretmp_488
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *_140
Creating dr for *pretmp_487[0][i_300]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: pretmp_483 + (long unsigned int) q_80 * 64
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 128
	base_object: *pretmp_487
	Access function 0: {0, +, 1}_12
	Access function 1: 0
Creating dr for def_quant4[q_80][i_300]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &def_quant4
	offset from base address: (ssizetype) ((sizetype) q_80 * 64)
	constant offset from base address: 0
	step: 4
	aligned to: 64
	base_object: def_quant4
	Access function 0: {0, +, 1}_12
	Access function 1: q_80
Creating dr for *_140
analyze_innermost: success.
	base_address: pretmp_488
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *_140
Creating dr for quant4_mf[i_list_299][q_80][0][i_300]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &quant4_mf
	offset from base address: (ssizetype) (((sizetype) i_list_299 * 6 + (sizetype) q_80) * 64)
	constant offset from base address: 0
	step: 4
	aligned to: 64
	base_object: quant4_mf
	Access function 0: {0, +, 1}_12
	Access function 1: 0
	Access function 2: q_80
	Access function 3: {0, +, 1}_9
common/set.c:129:9: note: got vectype for stmt: pretmp_483 = h_51(D)->dequant4_mf[i_list_299];
vector(2) long unsigned int
common/set.c:129:9: note: got vectype for stmt: pretmp_488 = pretmp_476->scaling_list[i_list_299];
vector(2) long unsigned int
Applying pattern match.pd:49, generic-match.c:4015
common/set.c:129:9: note: analyze in outer-loop: def_dequant4
common/set.c:129:9: note: 	outer base_address: &def_dequant4
	outer offset from base address: (ssizetype) ((sizetype) q_80 * 64)
	outer constant offset from base address: 0
	outer step: 0
	outer aligned to: 64
common/set.c:129:9: note: got vectype for stmt: _136 = def_dequant4[q_80][i_300];
vector(4) int
Applying pattern match.pd:49, generic-match.c:4015
common/set.c:129:9: note: analyze in outer-loop: *pretmp_488
common/set.c:129:9: note: failed: evolution of base is not affine.
common/set.c:129:9: note: bad data references.

Analyzing loop at common/set.c:130
common/set.c:130:13: note: ===== analyze_loop_nest =====
common/set.c:130:13: note: === vect_analyze_loop_form ===
common/set.c:130:13: note: === get_loop_niters ===
common/set.c:130:13: note: === vect_analyze_data_refs ===
Creating dr for def_dequant4[q_80][i_300]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &def_dequant4
	offset from base address: (ssizetype) ((sizetype) q_80 * 64)
	constant offset from base address: 0
	step: 4
	aligned to: 64
	base_object: def_dequant4
	Access function 0: {0, +, 1}_12
	Access function 1: q_80
Creating dr for *_140
analyze_innermost: success.
	base_address: pretmp_488
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pretmp_488
	Access function 0: {0B, +, 1}_12
Creating dr for *pretmp_487[0][i_300]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: pretmp_483 + (long unsigned int) q_80 * 64
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 128
	base_object: *pretmp_487
	Access function 0: {0, +, 1}_12
	Access function 1: 0
Creating dr for def_quant4[q_80][i_300]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &def_quant4
	offset from base address: (ssizetype) ((sizetype) q_80 * 64)
	constant offset from base address: 0
	step: 4
	aligned to: 64
	base_object: def_quant4
	Access function 0: {0, +, 1}_12
	Access function 1: q_80
Creating dr for *_140
analyze_innermost: success.
	base_address: pretmp_488
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pretmp_488
	Access function 0: {0B, +, 1}_12
Creating dr for quant4_mf[i_list_299][q_80][0][i_300]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &quant4_mf
	offset from base address: (ssizetype) (((sizetype) i_list_299 * 6 + (sizetype) q_80) * 64)
	constant offset from base address: 0
	step: 4
	aligned to: 64
	base_object: quant4_mf
	Access function 0: {0, +, 1}_12
	Access function 1: 0
	Access function 2: q_80
	Access function 3: i_list_299
common/set.c:130:13: note: got vectype for stmt: _136 = def_dequant4[q_80][i_300];
vector(4) int
common/set.c:130:13: note: got vectype for stmt: _141 = *_140;
const vector(16) unsigned char
common/set.c:130:13: note: got vectype for stmt: *pretmp_487[0][i_300] = _143;
vector(4) int
common/set.c:130:13: note: got vectype for stmt: _145 = def_quant4[q_80][i_300];
vector(4) int
common/set.c:130:13: note: got vectype for stmt: _149 = *_140;
const vector(16) unsigned char
common/set.c:130:13: note: got vectype for stmt: quant4_mf[i_list_299][q_80][0][i_300] = _157;
vector(4) int
common/set.c:130:13: note: === vect_analyze_scalar_cycles ===
common/set.c:130:13: note: Analyze phi: i_300 = PHI <i_159(36), 0(41)>

common/set.c:130:13: note: Access function of PHI: {0, +, 1}_12
common/set.c:130:13: note: step: 1,  init: 0
common/set.c:130:13: note: Detected induction.
common/set.c:130:13: note: Analyze phi: .MEM_350 = PHI <.MEM_158(36), .MEM_329(41)>

common/set.c:130:13: note: Analyze phi: ivtmp_436 = PHI <ivtmp_435(36), 16(41)>

common/set.c:130:13: note: Access function of PHI: {16, +, 4294967295}_12
common/set.c:130:13: note: step: 4294967295,  init: 16
common/set.c:130:13: note: Detected induction.
common/set.c:130:13: note: === vect_pattern_recog ===
common/set.c:130:13: note: vect_is_simple_use: operand _136
common/set.c:130:13: note: def_stmt: _136 = def_dequant4[q_80][i_300];
common/set.c:130:13: note: type of def: 3.
common/set.c:130:13: note: vect_is_simple_use: operand _145
common/set.c:130:13: note: def_stmt: _145 = def_quant4[q_80][i_300];
common/set.c:130:13: note: type of def: 3.
common/set.c:130:13: note: === vect_analyze_data_ref_accesses ===
common/set.c:130:13: note: === vect_mark_stmts_to_be_vectorized ===
common/set.c:130:13: note: init: phi relevant? i_300 = PHI <i_159(36), 0(41)>
common/set.c:130:13: note: init: phi relevant? .MEM_350 = PHI <.MEM_158(36), .MEM_329(41)>
common/set.c:130:13: note: init: phi relevant? ivtmp_436 = PHI <ivtmp_435(36), 16(41)>
common/set.c:130:13: note: init: stmt relevant? # DEBUG i => i_300
common/set.c:130:13: note: init: stmt relevant? _136 = def_dequant4[q_80][i_300];
common/set.c:130:13: note: init: stmt relevant? _139 = (sizetype) i_300;
common/set.c:130:13: note: init: stmt relevant? _140 = pretmp_488 + _139;
common/set.c:130:13: note: init: stmt relevant? _141 = *_140;
common/set.c:130:13: note: init: stmt relevant? _142 = (int) _141;
common/set.c:130:13: note: init: stmt relevant? _143 = _136 * _142;
common/set.c:130:13: note: init: stmt relevant? *pretmp_487[0][i_300] = _143;
common/set.c:130:13: note: vec_stmt_relevant_p: stmt has vdefs.
common/set.c:130:13: note: mark relevant 4, live 0.
common/set.c:130:13: note: init: stmt relevant? _145 = def_quant4[q_80][i_300];
common/set.c:130:13: note: init: stmt relevant? _146 = _145 * 16;
common/set.c:130:13: note: init: stmt relevant? _149 = *_140;
common/set.c:130:13: note: init: stmt relevant? _150 = _149 >> 1;
common/set.c:130:13: note: init: stmt relevant? _151 = (int) _150;
common/set.c:130:13: note: init: stmt relevant? _152 = _146 + _151;
common/set.c:130:13: note: init: stmt relevant? _156 = (int) _149;
common/set.c:130:13: note: init: stmt relevant? _157 = _152 / _156;
common/set.c:130:13: note: init: stmt relevant? quant4_mf[i_list_299][q_80][0][i_300] = _157;
common/set.c:130:13: note: vec_stmt_relevant_p: stmt has vdefs.
common/set.c:130:13: note: mark relevant 4, live 0.
common/set.c:130:13: note: init: stmt relevant? i_159 = i_300 + 1;
common/set.c:130:13: note: init: stmt relevant? # DEBUG i => i_159
common/set.c:130:13: note: init: stmt relevant? # DEBUG i => i_159
common/set.c:130:13: note: init: stmt relevant? ivtmp_435 = ivtmp_436 - 1;
common/set.c:130:13: note: init: stmt relevant? if (ivtmp_435 != 0)
common/set.c:130:13: note: worklist: examine stmt: quant4_mf[i_list_299][q_80][0][i_300] = _157;
common/set.c:130:13: note: vect_is_simple_use: operand _157
common/set.c:130:13: note: def_stmt: _157 = _152 / _156;
common/set.c:130:13: note: type of def: 3.
common/set.c:130:13: note: mark relevant 4, live 0.
common/set.c:130:13: note: worklist: examine stmt: _157 = _152 / _156;
common/set.c:130:13: note: vect_is_simple_use: operand _152
common/set.c:130:13: note: def_stmt: _152 = _146 + _151;
common/set.c:130:13: note: type of def: 3.
common/set.c:130:13: note: mark relevant 4, live 0.
common/set.c:130:13: note: vect_is_simple_use: operand _156
common/set.c:130:13: note: def_stmt: _156 = (int) _149;
common/set.c:130:13: note: type of def: 3.
common/set.c:130:13: note: mark relevant 4, live 0.
common/set.c:130:13: note: worklist: examine stmt: _156 = (int) _149;
common/set.c:130:13: note: vect_is_simple_use: operand _149
common/set.c:130:13: note: def_stmt: _149 = *_140;
common/set.c:130:13: note: type of def: 3.
common/set.c:130:13: note: mark relevant 4, live 0.
common/set.c:130:13: note: worklist: examine stmt: _149 = *_140;
common/set.c:130:13: note: worklist: examine stmt: _152 = _146 + _151;
common/set.c:130:13: note: vect_is_simple_use: operand _146
common/set.c:130:13: note: def_stmt: _146 = _145 * 16;
common/set.c:130:13: note: type of def: 3.
common/set.c:130:13: note: mark relevant 4, live 0.
common/set.c:130:13: note: vect_is_simple_use: operand _151
common/set.c:130:13: note: def_stmt: _151 = (int) _150;
common/set.c:130:13: note: type of def: 3.
common/set.c:130:13: note: mark relevant 4, live 0.
common/set.c:130:13: note: worklist: examine stmt: _151 = (int) _150;
common/set.c:130:13: note: vect_is_simple_use: operand _150
common/set.c:130:13: note: def_stmt: _150 = _149 >> 1;
common/set.c:130:13: note: type of def: 3.
common/set.c:130:13: note: mark relevant 4, live 0.
common/set.c:130:13: note: worklist: examine stmt: _150 = _149 >> 1;
common/set.c:130:13: note: vect_is_simple_use: operand _149
common/set.c:130:13: note: def_stmt: _149 = *_140;
common/set.c:130:13: note: type of def: 3.
common/set.c:130:13: note: mark relevant 4, live 0.
common/set.c:130:13: note: already marked relevant/live.
common/set.c:130:13: note: worklist: examine stmt: _146 = _145 * 16;
common/set.c:130:13: note: vect_is_simple_use: operand _145
common/set.c:130:13: note: def_stmt: _145 = def_quant4[q_80][i_300];
common/set.c:130:13: note: type of def: 3.
common/set.c:130:13: note: mark relevant 4, live 0.
common/set.c:130:13: note: worklist: examine stmt: _145 = def_quant4[q_80][i_300];
common/set.c:130:13: note: worklist: examine stmt: *pretmp_487[0][i_300] = _143;
common/set.c:130:13: note: vect_is_simple_use: operand _143
common/set.c:130:13: note: def_stmt: _143 = _136 * _142;
common/set.c:130:13: note: type of def: 3.
common/set.c:130:13: note: mark relevant 4, live 0.
common/set.c:130:13: note: worklist: examine stmt: _143 = _136 * _142;
common/set.c:130:13: note: vect_is_simple_use: operand _136
common/set.c:130:13: note: def_stmt: _136 = def_dequant4[q_80][i_300];
common/set.c:130:13: note: type of def: 3.
common/set.c:130:13: note: mark relevant 4, live 0.
common/set.c:130:13: note: vect_is_simple_use: operand _142
common/set.c:130:13: note: def_stmt: _142 = (int) _141;
common/set.c:130:13: note: type of def: 3.
common/set.c:130:13: note: mark relevant 4, live 0.
common/set.c:130:13: note: worklist: examine stmt: _142 = (int) _141;
common/set.c:130:13: note: vect_is_simple_use: operand _141
common/set.c:130:13: note: def_stmt: _141 = *_140;
common/set.c:130:13: note: type of def: 3.
common/set.c:130:13: note: mark relevant 4, live 0.
common/set.c:130:13: note: worklist: examine stmt: _141 = *_140;
common/set.c:130:13: note: worklist: examine stmt: _136 = def_dequant4[q_80][i_300];
common/set.c:130:13: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _136 = def_dequant4[q_80][i_300];
  stmt_b: _141 = *_140;
) -> no dependence
(compute_affine_dependence
  stmt_a: _136 = def_dequant4[q_80][i_300];
  stmt_b: *pretmp_487[0][i_300] = _143;
) -> no dependence
(compute_affine_dependence
  stmt_a: _136 = def_dequant4[q_80][i_300];
  stmt_b: _145 = def_quant4[q_80][i_300];
) -> no dependence
(compute_affine_dependence
  stmt_a: _136 = def_dequant4[q_80][i_300];
  stmt_b: _149 = *_140;
) -> no dependence
(compute_affine_dependence
  stmt_a: _136 = def_dequant4[q_80][i_300];
  stmt_b: quant4_mf[i_list_299][q_80][0][i_300] = _157;
) -> no dependence
(compute_affine_dependence
  stmt_a: _141 = *_140;
  stmt_b: *pretmp_487[0][i_300] = _143;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _141 = *_140;
  stmt_b: _145 = def_quant4[q_80][i_300];
) -> no dependence
(compute_affine_dependence
  stmt_a: _141 = *_140;
  stmt_b: _149 = *_140;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_12)
  (chrec_b = {0B, +, 1}_12)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _141 = *_140;
  stmt_b: quant4_mf[i_list_299][q_80][0][i_300] = _157;
) -> no dependence
(compute_affine_dependence
  stmt_a: *pretmp_487[0][i_300] = _143;
  stmt_b: _145 = def_quant4[q_80][i_300];
) -> no dependence
(compute_affine_dependence
  stmt_a: *pretmp_487[0][i_300] = _143;
  stmt_b: _149 = *_140;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: *pretmp_487[0][i_300] = _143;
  stmt_b: quant4_mf[i_list_299][q_80][0][i_300] = _157;
) -> no dependence
(compute_affine_dependence
  stmt_a: _145 = def_quant4[q_80][i_300];
  stmt_b: _149 = *_140;
) -> no dependence
(compute_affine_dependence
  stmt_a: _145 = def_quant4[q_80][i_300];
  stmt_b: quant4_mf[i_list_299][q_80][0][i_300] = _157;
) -> no dependence
(compute_affine_dependence
  stmt_a: _149 = *_140;
  stmt_b: quant4_mf[i_list_299][q_80][0][i_300] = _157;
) -> no dependence
(compute_affine_dependence
  stmt_a: _136 = def_dequant4[q_80][i_300];
  stmt_b: _136 = def_dequant4[q_80][i_300];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_12)
  (chrec_b = {0, +, 1}_12)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = q_80)
  (chrec_b = q_80)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _141 = *_140;
  stmt_b: _141 = *_140;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_12)
  (chrec_b = {0B, +, 1}_12)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: *pretmp_487[0][i_300] = _143;
  stmt_b: *pretmp_487[0][i_300] = _143;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_12)
  (chrec_b = {0, +, 1}_12)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 0)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _145 = def_quant4[q_80][i_300];
  stmt_b: _145 = def_quant4[q_80][i_300];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_12)
  (chrec_b = {0, +, 1}_12)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = q_80)
  (chrec_b = q_80)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _149 = *_140;
  stmt_b: _149 = *_140;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_12)
  (chrec_b = {0B, +, 1}_12)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: quant4_mf[i_list_299][q_80][0][i_300] = _157;
  stmt_b: quant4_mf[i_list_299][q_80][0][i_300] = _157;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_12)
  (chrec_b = {0, +, 1}_12)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 0)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = q_80)
  (chrec_b = q_80)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = i_list_299)
  (chrec_b = i_list_299)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/set.c:130:13: note: versioning for alias required: can't determine dependence between *_140 and *pretmp_487[0][i_300]
common/set.c:130:13: note: mark for run-time aliasing test between *_140 and *pretmp_487[0][i_300]
common/set.c:130:13: note: versioning for alias required: can't determine dependence between *pretmp_487[0][i_300] and *_140
common/set.c:130:13: note: mark for run-time aliasing test between *pretmp_487[0][i_300] and *_140
common/set.c:130:13: note: === vect_determine_vectorization_factor ===
common/set.c:130:13: note: ==> examining phi: i_300 = PHI <i_159(36), 0(41)>

common/set.c:130:13: note: ==> examining phi: .MEM_350 = PHI <.MEM_158(36), .MEM_329(41)>

common/set.c:130:13: note: ==> examining phi: ivtmp_436 = PHI <ivtmp_435(36), 16(41)>

common/set.c:130:13: note: ==> examining statement: # DEBUG i => i_300

common/set.c:130:13: note: skip.
common/set.c:130:13: note: ==> examining statement: _136 = def_dequant4[q_80][i_300];

common/set.c:130:13: note: get vectype for scalar type:  int
common/set.c:130:13: note: vectype: vector(4) int
common/set.c:130:13: note: nunits = 4
common/set.c:130:13: note: ==> examining statement: _139 = (sizetype) i_300;

common/set.c:130:13: note: skip.
common/set.c:130:13: note: ==> examining statement: _140 = pretmp_488 + _139;

common/set.c:130:13: note: skip.
common/set.c:130:13: note: ==> examining statement: _141 = *_140;

common/set.c:130:13: note: get vectype for scalar type:  unsigned char
common/set.c:130:13: note: vectype: vector(16) unsigned char
common/set.c:130:13: note: nunits = 16
common/set.c:130:13: note: ==> examining statement: _142 = (int) _141;

common/set.c:130:13: note: get vectype for scalar type:  int
common/set.c:130:13: note: vectype: vector(4) int
common/set.c:130:13: note: get vectype for scalar type:  unsigned char
common/set.c:130:13: note: vectype: vector(16) unsigned char
common/set.c:130:13: note: nunits = 16
common/set.c:130:13: note: ==> examining statement: _143 = _136 * _142;

common/set.c:130:13: note: get vectype for scalar type:  int
common/set.c:130:13: note: vectype: vector(4) int
common/set.c:130:13: note: get vectype for scalar type:  int
common/set.c:130:13: note: vectype: vector(4) int
common/set.c:130:13: note: nunits = 4
common/set.c:130:13: note: ==> examining statement: *pretmp_487[0][i_300] = _143;

common/set.c:130:13: note: get vectype for scalar type:  int
common/set.c:130:13: note: vectype: vector(4) int
common/set.c:130:13: note: nunits = 4
common/set.c:130:13: note: ==> examining statement: _145 = def_quant4[q_80][i_300];

common/set.c:130:13: note: get vectype for scalar type:  int
common/set.c:130:13: note: vectype: vector(4) int
common/set.c:130:13: note: nunits = 4
common/set.c:130:13: note: ==> examining statement: _146 = _145 * 16;

common/set.c:130:13: note: get vectype for scalar type:  int
common/set.c:130:13: note: vectype: vector(4) int
common/set.c:130:13: note: get vectype for scalar type:  int
common/set.c:130:13: note: vectype: vector(4) int
common/set.c:130:13: note: nunits = 4
common/set.c:130:13: note: ==> examining statement: _149 = *_140;

common/set.c:130:13: note: get vectype for scalar type:  unsigned char
common/set.c:130:13: note: vectype: vector(16) unsigned char
common/set.c:130:13: note: nunits = 16
common/set.c:130:13: note: ==> examining statement: _150 = _149 >> 1;

common/set.c:130:13: note: get vectype for scalar type:  unsigned char
common/set.c:130:13: note: vectype: vector(16) unsigned char
common/set.c:130:13: note: get vectype for scalar type:  unsigned char
common/set.c:130:13: note: vectype: vector(16) unsigned char
common/set.c:130:13: note: nunits = 16
common/set.c:130:13: note: ==> examining statement: _151 = (int) _150;

common/set.c:130:13: note: get vectype for scalar type:  int
common/set.c:130:13: note: vectype: vector(4) int
common/set.c:130:13: note: get vectype for scalar type:  unsigned char
common/set.c:130:13: note: vectype: vector(16) unsigned char
common/set.c:130:13: note: nunits = 16
common/set.c:130:13: note: ==> examining statement: _152 = _146 + _151;

common/set.c:130:13: note: get vectype for scalar type:  int
common/set.c:130:13: note: vectype: vector(4) int
common/set.c:130:13: note: get vectype for scalar type:  int
common/set.c:130:13: note: vectype: vector(4) int
common/set.c:130:13: note: nunits = 4
common/set.c:130:13: note: ==> examining statement: _156 = (int) _149;

common/set.c:130:13: note: get vectype for scalar type:  int
common/set.c:130:13: note: vectype: vector(4) int
common/set.c:130:13: note: get vectype for scalar type:  unsigned char
common/set.c:130:13: note: vectype: vector(16) unsigned char
common/set.c:130:13: note: nunits = 16
common/set.c:130:13: note: ==> examining statement: _157 = _152 / _156;

common/set.c:130:13: note: get vectype for scalar type:  int
common/set.c:130:13: note: vectype: vector(4) int
common/set.c:130:13: note: get vectype for scalar type:  int
common/set.c:130:13: note: vectype: vector(4) int
common/set.c:130:13: note: nunits = 4
common/set.c:130:13: note: ==> examining statement: quant4_mf[i_list_299][q_80][0][i_300] = _157;

common/set.c:130:13: note: get vectype for scalar type:  int
common/set.c:130:13: note: vectype: vector(4) int
common/set.c:130:13: note: nunits = 4
common/set.c:130:13: note: ==> examining statement: i_159 = i_300 + 1;

common/set.c:130:13: note: skip.
common/set.c:130:13: note: ==> examining statement: # DEBUG i => i_159

common/set.c:130:13: note: skip.
common/set.c:130:13: note: ==> examining statement: # DEBUG i => i_159

common/set.c:130:13: note: skip.
common/set.c:130:13: note: ==> examining statement: ivtmp_435 = ivtmp_436 - 1;

common/set.c:130:13: note: skip.
common/set.c:130:13: note: ==> examining statement: if (ivtmp_435 != 0)

common/set.c:130:13: note: skip.
common/set.c:130:13: note: vectorization factor = 16
common/set.c:130:13: note: === vect_analyze_data_refs_alignment ===
common/set.c:130:13: note: dependence distance  = 0.
common/set.c:130:13: note: accesses have the same alignment.
dependence distance modulo vf == 0 between *_140 and *_140
common/set.c:130:13: note: vect_compute_data_ref_alignment:
common/set.c:130:13: note: misalign = 0 bytes of ref def_dequant4[q_80][i_300]
common/set.c:130:13: note: vect_compute_data_ref_alignment:
common/set.c:130:13: note: can't force alignment of ref: *_140
common/set.c:130:13: note: vect_compute_data_ref_alignment:
common/set.c:130:13: note: can't force alignment of ref: *pretmp_487[0][i_300]
common/set.c:130:13: note: vect_compute_data_ref_alignment:
common/set.c:130:13: note: misalign = 0 bytes of ref def_quant4[q_80][i_300]
common/set.c:130:13: note: vect_compute_data_ref_alignment:
common/set.c:130:13: note: can't force alignment of ref: *_140
common/set.c:130:13: note: vect_compute_data_ref_alignment:
common/set.c:130:13: note: misalign = 0 bytes of ref quant4_mf[i_list_299][q_80][0][i_300]
common/set.c:130:13: note: === vect_prune_runtime_alias_test_list ===
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
common/set.c:130:13: note: found equal ranges *pretmp_487[0][i_300], *_140 and *pretmp_487[0][i_300], *_140
common/set.c:130:13: note: improved number of alias checks from 2 to 1
common/set.c:130:13: note: === vect_enhance_data_refs_alignment ===
common/set.c:130:13: note: Unknown misalignment, is_packed = 0
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
common/set.c:130:13: note: Unknown misalignment, is_packed = 0
common/set.c:130:13: note: Unknown misalignment, is_packed = 0
common/set.c:130:13: note: vect_can_advance_ivs_p:
common/set.c:130:13: note: Analyze phi: i_300 = PHI <i_159(36), 0(41)>

common/set.c:130:13: note: Analyze phi: .MEM_350 = PHI <.MEM_158(36), .MEM_329(41)>

common/set.c:130:13: note: virtual phi. skip.
common/set.c:130:13: note: Analyze phi: ivtmp_436 = PHI <ivtmp_435(36), 16(41)>

common/set.c:130:13: note: vect_model_load_cost: aligned.
common/set.c:130:13: note: vect_get_data_access_cost: inside_cost = 4, outside_cost = 0.
common/set.c:130:13: note: Setting misalignment to -1.
common/set.c:130:13: note: vect_model_load_cost: unaligned supported by hardware.
common/set.c:130:13: note: vect_get_data_access_cost: inside_cost = 6, outside_cost = 0.
common/set.c:130:13: note: Setting misalignment to -1.
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
common/set.c:130:13: note: vect_model_store_cost: unaligned supported by hardware.
common/set.c:130:13: note: vect_get_data_access_cost: inside_cost = 14, outside_cost = 0.
common/set.c:130:13: note: vect_model_load_cost: aligned.
common/set.c:130:13: note: vect_get_data_access_cost: inside_cost = 18, outside_cost = 0.
common/set.c:130:13: note: Setting misalignment to -1.
common/set.c:130:13: note: vect_model_load_cost: unaligned supported by hardware.
common/set.c:130:13: note: vect_get_data_access_cost: inside_cost = 20, outside_cost = 0.
common/set.c:130:13: note: vect_model_store_cost: aligned.
common/set.c:130:13: note: vect_get_data_access_cost: inside_cost = 24, outside_cost = 0.
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
common/set.c:130:13: note: Vectorizing an unaligned access.
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
common/set.c:130:13: note: Vectorizing an unaligned access.
common/set.c:130:13: note: Vectorizing an unaligned access.
common/set.c:130:13: note: === vect_analyze_slp ===
common/set.c:130:13: note: === vect_make_slp_decision ===
common/set.c:130:13: note: === vect_detect_hybrid_slp ===
common/set.c:130:13: note: === vect_analyze_loop_operations ===
common/set.c:130:13: note: examining phi: i_300 = PHI <i_159(36), 0(41)>

common/set.c:130:13: note: examining phi: .MEM_350 = PHI <.MEM_158(36), .MEM_329(41)>

common/set.c:130:13: note: examining phi: ivtmp_436 = PHI <ivtmp_435(36), 16(41)>

common/set.c:130:13: note: ==> examining statement: # DEBUG i => i_300
common/set.c:130:13: note: irrelevant.
common/set.c:130:13: note: ==> examining statement: _136 = def_dequant4[q_80][i_300];
common/set.c:130:13: note: num. args = 4 (not unary/binary/ternary op).
common/set.c:130:13: note: vect_is_simple_use: operand def_dequant4[q_80][i_300]
common/set.c:130:13: note: not ssa-name.
common/set.c:130:13: note: use not simple.
common/set.c:130:13: note: vect_model_load_cost: aligned.
common/set.c:130:13: note: vect_model_load_cost: inside_cost = 4, prologue_cost = 0 .
common/set.c:130:13: note: ==> examining statement: _139 = (sizetype) i_300;
common/set.c:130:13: note: irrelevant.
common/set.c:130:13: note: ==> examining statement: _140 = pretmp_488 + _139;
common/set.c:130:13: note: irrelevant.
common/set.c:130:13: note: ==> examining statement: _141 = *_140;
common/set.c:130:13: note: vect_is_simple_use: operand *_140
common/set.c:130:13: note: not ssa-name.
common/set.c:130:13: note: use not simple.
common/set.c:130:13: note: vect_is_simple_use: operand *_140
common/set.c:130:13: note: not ssa-name.
common/set.c:130:13: note: use not simple.
common/set.c:130:13: note: vect_model_load_cost: unaligned supported by hardware.
common/set.c:130:13: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/set.c:130:13: note: ==> examining statement: _142 = (int) _141;
common/set.c:130:13: note: vect_is_simple_use: operand _141
common/set.c:130:13: note: def_stmt: _141 = *_140;
common/set.c:130:13: note: type of def: 3.
common/set.c:130:13: note: === vectorizable_conversion ===
common/set.c:130:13: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/set.c:130:13: note: ==> examining statement: _143 = _136 * _142;
common/set.c:130:13: note: vect_is_simple_use: operand _136
common/set.c:130:13: note: def_stmt: _136 = def_dequant4[q_80][i_300];
common/set.c:130:13: note: type of def: 3.
common/set.c:130:13: note: vect_is_simple_use: operand _142
common/set.c:130:13: note: def_stmt: _142 = (int) _141;
common/set.c:130:13: note: type of def: 3.
common/set.c:130:13: note: === vectorizable_operation ===
common/set.c:130:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/set.c:130:13: note: ==> examining statement: *pretmp_487[0][i_300] = _143;
common/set.c:130:13: note: vect_is_simple_use: operand _143
common/set.c:130:13: note: def_stmt: _143 = _136 * _142;
common/set.c:130:13: note: type of def: 3.
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
common/set.c:130:13: note: vect_model_store_cost: unaligned supported by hardware.
common/set.c:130:13: note: vect_model_store_cost: inside_cost = 8, prologue_cost = 0 .
common/set.c:130:13: note: ==> examining statement: _145 = def_quant4[q_80][i_300];
common/set.c:130:13: note: num. args = 4 (not unary/binary/ternary op).
common/set.c:130:13: note: vect_is_simple_use: operand def_quant4[q_80][i_300]
common/set.c:130:13: note: not ssa-name.
common/set.c:130:13: note: use not simple.
common/set.c:130:13: note: vect_model_load_cost: aligned.
common/set.c:130:13: note: vect_model_load_cost: inside_cost = 4, prologue_cost = 0 .
common/set.c:130:13: note: ==> examining statement: _146 = _145 * 16;
common/set.c:130:13: note: vect_is_simple_use: operand _145
common/set.c:130:13: note: def_stmt: _145 = def_quant4[q_80][i_300];
common/set.c:130:13: note: type of def: 3.
common/set.c:130:13: note: vect_is_simple_use: operand 16
common/set.c:130:13: note: === vectorizable_operation ===
common/set.c:130:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 1 .
common/set.c:130:13: note: ==> examining statement: _149 = *_140;
common/set.c:130:13: note: vect_is_simple_use: operand *_140
common/set.c:130:13: note: not ssa-name.
common/set.c:130:13: note: use not simple.
common/set.c:130:13: note: vect_is_simple_use: operand *_140
common/set.c:130:13: note: not ssa-name.
common/set.c:130:13: note: use not simple.
common/set.c:130:13: note: vect_model_load_cost: unaligned supported by hardware.
common/set.c:130:13: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/set.c:130:13: note: ==> examining statement: _150 = _149 >> 1;
common/set.c:130:13: note: vect_is_simple_use: operand _149
common/set.c:130:13: note: def_stmt: _149 = *_140;
common/set.c:130:13: note: type of def: 3.
common/set.c:130:13: note: vect_is_simple_use: operand 1
common/set.c:130:13: note: vector/scalar shift/rotate found.
common/set.c:130:13: note: === vectorizable_shift ===
common/set.c:130:13: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
common/set.c:130:13: note: ==> examining statement: _151 = (int) _150;
common/set.c:130:13: note: vect_is_simple_use: operand _150
common/set.c:130:13: note: def_stmt: _150 = _149 >> 1;
common/set.c:130:13: note: type of def: 3.
common/set.c:130:13: note: === vectorizable_conversion ===
common/set.c:130:13: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/set.c:130:13: note: ==> examining statement: _152 = _146 + _151;
common/set.c:130:13: note: vect_is_simple_use: operand _146
common/set.c:130:13: note: def_stmt: _146 = _145 * 16;
common/set.c:130:13: note: type of def: 3.
common/set.c:130:13: note: vect_is_simple_use: operand _151
common/set.c:130:13: note: def_stmt: _151 = (int) _150;
common/set.c:130:13: note: type of def: 3.
common/set.c:130:13: note: === vectorizable_operation ===
common/set.c:130:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/set.c:130:13: note: ==> examining statement: _156 = (int) _149;
common/set.c:130:13: note: vect_is_simple_use: operand _149
common/set.c:130:13: note: def_stmt: _149 = *_140;
common/set.c:130:13: note: type of def: 3.
common/set.c:130:13: note: === vectorizable_conversion ===
common/set.c:130:13: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/set.c:130:13: note: ==> examining statement: _157 = _152 / _156;
common/set.c:130:13: note: vect_is_simple_use: operand _152
common/set.c:130:13: note: def_stmt: _152 = _146 + _151;
common/set.c:130:13: note: type of def: 3.
common/set.c:130:13: note: vect_is_simple_use: operand _156
common/set.c:130:13: note: def_stmt: _156 = (int) _149;
common/set.c:130:13: note: type of def: 3.
common/set.c:130:13: note: op not supported by target.
common/set.c:130:13: note: not vectorized: relevant stmt not supported: _157 = _152 / _156;
common/set.c:130:13: note: bad operation or unsupported loop bound.

Analyzing loop at common/set.c:111
common/set.c:111:5: note: ===== analyze_loop_nest =====
common/set.c:111:5: note: === vect_analyze_loop_form ===
common/set.c:111:5: note: not vectorized: multiple nested loops.
common/set.c:111:5: note: bad loop form.

Analyzing loop at common/set.c:119
common/set.c:119:9: note: ===== analyze_loop_nest =====
common/set.c:119:9: note: === vect_analyze_loop_form ===
common/set.c:119:9: note: not vectorized: latch block not empty.
common/set.c:119:9: note: bad loop form.

Analyzing loop at common/set.c:113
common/set.c:113:9: note: ===== analyze_loop_nest =====
common/set.c:113:9: note: === vect_analyze_loop_form ===
common/set.c:113:9: note: not vectorized: latch block not empty.
common/set.c:113:9: note: bad loop form.

Analyzing loop at common/set.c:82
common/set.c:82:5: note: ===== analyze_loop_nest =====
common/set.c:82:5: note: === vect_analyze_loop_form ===
common/set.c:82:5: note: not vectorized: multiple nested loops.
common/set.c:82:5: note: bad loop form.

Analyzing loop at common/set.c:102
common/set.c:102:27: note: ===== analyze_loop_nest =====
common/set.c:102:27: note: === vect_analyze_loop_form ===
common/set.c:102:27: note: not vectorized: control flow in loop.
common/set.c:102:27: note: bad loop form.

Analyzing loop at common/set.c:86
common/set.c:86:71: note: ===== analyze_loop_nest =====
common/set.c:86:71: note: === vect_analyze_loop_form ===
common/set.c:86:71: note: not vectorized: control flow in loop.
common/set.c:86:71: note: bad loop form.
common/set.c:68:5: note: vectorized 0 loops in function.
x264_cqm_init (struct x264_t * h)
{
  int j;
  int j;
  int size;
  int max_qp_err;
  int deadzone[4];
  int i_list;
  int j;
  int i;
  int q;
  int quant8_mf[2][6][8][8];
  int quant4_mf[4][6][4][4];
  int def_dequant8[6][64];
  int def_dequant4[6][16];
  int def_quant8[6][64];
  int def_quant4[6][16];
  int _31;
  int _52;
  int _53;
  int _55;
  int _56;
  const uint8_t * _63;
  int _66;
  uint16_t[16] * _68;
  int[4][4] * _70;
  int[16] * _72;
  unsigned int size.2_74;
  unsigned int _75;
  int _76;
  void * _78;
  unsigned int _81;
  int _82;
  void * _84;
  unsigned int _86;
  int _87;
  void * _89;
  int _92;
  int _93;
  long unsigned int _97;
  struct x264_pps_t * _98;
  const uint8_t * _99;
  const uint8_t * _101;
  int _102;
  uint16_t[16] * _103;
  unsigned int size.2_105;
  unsigned int _106;
  int _107;
  void * _109;
  unsigned int ivtmp_112;
  unsigned int ivtmp_113;
  unsigned int ivtmp_114;
  unsigned int ivtmp_115;
  unsigned int ivtmp_121;
  unsigned int ivtmp_122;
  unsigned int ivtmp_123;
  unsigned int ivtmp_124;
  int _136;
  sizetype _139;
  const uint8_t * _140;
  unsigned char _141;
  int _142;
  int _143;
  int _145;
  int _146;
  unsigned char _149;
  unsigned char _150;
  int _151;
  int _152;
  int _156;
  int _157;
  int _165;
  sizetype _169;
  const uint8_t * _170;
  unsigned char _171;
  int _172;
  int _173;
  int _175;
  int _176;
  unsigned char _179;
  unsigned char _180;
  int _181;
  int _182;
  int _186;
  int _187;
  long long unsigned int _201;
  long long unsigned int _202;
  int _203;
  unsigned int q.6_213;
  unsigned int _214;
  int _215;
  int _216;
  int _217;
  int _218;
  short unsigned int _220;
  int _224;
  int _227;
  int _228;
  int _229;
  int _230;
  short unsigned int _231;
  _Bool _233;
  _Bool _234;
  _Bool _235;
  int _238;
  long long unsigned int _248;
  long long unsigned int _249;
  int _250;
  int _259;
  int _260;
  int _261;
  short unsigned int _263;
  int _267;
  int _270;
  int _271;
  int _272;
  int _273;
  short unsigned int _274;
  _Bool _276;
  _Bool _277;
  _Bool _278;
  int _282;
  int _283;
  int _285;
  int _286;
  unsigned int ivtmp_413;
  unsigned int ivtmp_414;
  unsigned int ivtmp_415;
  unsigned int ivtmp_416;
  unsigned int ivtmp_417;
  unsigned int ivtmp_418;
  unsigned int ivtmp_419;
  unsigned int _420;
  unsigned int _421;
  unsigned int _422;
  unsigned int _423;
  unsigned int ivtmp_431;
  unsigned int ivtmp_432;
  unsigned int ivtmp_433;
  unsigned int ivtmp_434;
  unsigned int ivtmp_435;
  unsigned int ivtmp_436;
  unsigned int ivtmp_437;
  unsigned int ivtmp_438;
  unsigned int ivtmp_439;
  unsigned int ivtmp_440;
  unsigned int ivtmp_441;
  unsigned int ivtmp_442;
  unsigned int ivtmp_443;
  int pretmp_446;
  int prephitmp_447;
  int pretmp_448;
  int prephitmp_449;
  int pretmp_450;
  int prephitmp_451;
  int pretmp_452;
  int prephitmp_453;
  int pretmp_454;
  int pretmp_455;
  int pretmp_456;
  int pretmp_457;
  int pretmp_458;
  int prephitmp_459;
  int pretmp_460;
  int prephitmp_461;
  int pretmp_463;
  int pretmp_464;
  int pretmp_465;
  int pretmp_466;
  int pretmp_467;
  int pretmp_469;
  int prephitmp_470;
  int pretmp_471;
  int prephitmp_472;
  struct x264_pps_t * pretmp_476;
  long unsigned int pretmp_480;
  long unsigned int pretmp_481;
  int[4][4] * pretmp_483;
  int[4][4] * pretmp_487;
  const uint8_t * pretmp_488;
  long unsigned int pretmp_492;
  int[8][8] * pretmp_495;
  int[8][8] * pretmp_498;
  int pretmp_499;
  const uint8_t * pretmp_500;
  long unsigned int pretmp_513;
  long unsigned int pretmp_514;
  int pretmp_515;
  int pretmp_516;
  long long unsigned int pretmp_517;
  int pretmp_518;
  long unsigned int pretmp_519;
  int[16] * pretmp_521;
  int[16] * pretmp_525;
  uint16_t[16] * pretmp_530;
  uint16_t[16] * pretmp_533;
  uint16_t[16] * pretmp_534;
  uint16_t[16] * pretmp_536;
  int pretmp_537;
  int pretmp_539;
  unsigned int pretmp_541;
  long unsigned int pretmp_542;
  int pretmp_543;
  long long unsigned int pretmp_544;
  long unsigned int pretmp_545;
  unsigned int pretmp_546;
  int[64] * pretmp_549;
  int[64] * pretmp_552;
  uint16_t[64] * pretmp_555;
  uint16_t[64] * pretmp_558;
  uint16_t[64] * pretmp_560;
  uint16_t[64] * pretmp_562;
  int pretmp_563;
  int pretmp_565;
  int pretmp_567;
  int pretmp_568;
  long unsigned int pretmp_570;
  struct x264_pps_t * pretmp_571;
  const uint8_t * pretmp_573;

  <bb 2>:
  _52 = h_51(D)->param.analyse.i_luma_deadzone[1];
  _53 = 32 - _52;
  deadzone[0] = _53;
  _55 = h_51(D)->param.analyse.i_luma_deadzone[0];
  _56 = 32 - _55;
  deadzone[1] = _56;
  deadzone[2] = 21;
  deadzone[3] = 11;
  # DEBUG max_qp_err => -1
  # DEBUG i => 0
  # DEBUG i => 0
  # DEBUG i => 0
  goto <bb 6>;

  <bb 3>:
  # DEBUG i => i_111
  if (i_111 <= 3)
    goto <bb 5>;
  else
    goto <bb 4>;

  <bb 4>:

  <bb 5>:
  # j_16 = PHI <0(3), 4(4)>
  # size_21 = PHI <16(3), 64(4)>

  <bb 6>:
  # j_153 = PHI <j_16(5), 0(2)>
  # size_327 = PHI <size_21(5), 16(2)>
  # i_10 = PHI <i_111(5), 0(2)>
  # ivtmp_414 = PHI <ivtmp_413(5), 6(2)>
  # DEBUG j => j_153
  if (i_10 > j_153)
    goto <bb 7>;
  else
    goto <bb 13>;

  <bb 7>:
  pretmp_570 = (long unsigned int) size_327;
  pretmp_571 = h_51(D)->pps;
  pretmp_573 = pretmp_571->scaling_list[i_10];

  <bb 8>:
  # j_366 = PHI <j_153(7), j_67(10)>
  # DEBUG j => j_366
  _63 = pretmp_571->scaling_list[j_366];
  _66 = memcmp (pretmp_573, _63, pretmp_570);
  if (_66 == 0)
    goto <bb 11>;
  else
    goto <bb 9>;

  <bb 9>:
  j_67 = j_366 + 1;
  # DEBUG j => j_67
  # DEBUG j => j_67
  if (i_10 > j_67)
    goto <bb 10>;
  else
    goto <bb 13>;

  <bb 10>:
  goto <bb 8>;

  <bb 11>:
  # j_424 = PHI <j_366(8)>
  if (i_10 > j_424)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  _68 = h_51(D)->quant4_mf[j_424];
  h_51(D)->quant4_mf[i_10] = _68;
  _70 = h_51(D)->dequant4_mf[j_424];
  h_51(D)->dequant4_mf[i_10] = _70;
  _72 = h_51(D)->unquant4_mf[j_424];
  h_51(D)->unquant4_mf[i_10] = _72;
  goto <bb 14>;

  <bb 13>:
  size.2_74 = (unsigned int) size_327;
  _75 = size.2_74 * 104;
  _76 = (int) _75;
  _78 = x264_malloc (_76);
  h_51(D)->quant4_mf[i_10] = _78;
  _81 = size.2_74 * 24;
  _82 = (int) _81;
  _84 = x264_malloc (_82);
  h_51(D)->dequant4_mf[i_10] = _84;
  _86 = size.2_74 * 208;
  _87 = (int) _86;
  _89 = x264_malloc (_87);
  h_51(D)->unquant4_mf[i_10] = _89;

  <bb 14>:
  if (i_10 <= 3)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 15>:

  <bb 16>:
  # j_184 = PHI <0(15), 4(14)>
  # DEBUG j => j_184
  if (i_10 > j_184)
    goto <bb 17>;
  else
    goto <bb 24>;

  <bb 17>:
  pretmp_567 = i_10 & 3;
  pretmp_568 = deadzone[pretmp_567];

  <bb 18>:
  # j_3 = PHI <j_184(17), j_96(21)>
  # DEBUG j => j_3
  _92 = j_3 & 3;
  _93 = deadzone[_92];
  if (_93 == pretmp_568)
    goto <bb 19>;
  else
    goto <bb 20>;

  <bb 19>:
  _97 = (long unsigned int) size_327;
  _98 = h_51(D)->pps;
  _99 = _98->scaling_list[j_3];
  _101 = _98->scaling_list[i_10];
  _102 = memcmp (_101, _99, _97);
  if (_102 == 0)
    goto <bb 22>;
  else
    goto <bb 20>;

  <bb 20>:
  j_96 = j_3 + 1;
  # DEBUG j => j_96
  # DEBUG j => j_96
  if (i_10 > j_96)
    goto <bb 21>;
  else
    goto <bb 24>;

  <bb 21>:
  goto <bb 18>;

  <bb 22>:
  # j_430 = PHI <j_3(19)>
  if (j_430 < i_10)
    goto <bb 23>;
  else
    goto <bb 24>;

  <bb 23>:
  _103 = h_51(D)->quant4_bias[j_430];
  h_51(D)->quant4_bias[i_10] = _103;
  goto <bb 25>;

  <bb 24>:
  size.2_105 = (unsigned int) size_327;
  _106 = size.2_105 * 104;
  _107 = (int) _106;
  _109 = x264_malloc (_107);
  h_51(D)->quant4_bias[i_10] = _109;

  <bb 25>:
  i_111 = i_10 + 1;
  # DEBUG i => i_111
  # DEBUG i => i_111
  ivtmp_413 = ivtmp_414 - 1;
  if (ivtmp_413 != 0)
    goto <bb 3>;
  else
    goto <bb 26>;

  <bb 26>:
  goto <bb 35>;

  <bb 27>:
  pretmp_454 = i_120 & 1;
  pretmp_455 = i_120 >> 2;
  pretmp_456 = pretmp_455 & 1;
  pretmp_457 = pretmp_454 + pretmp_456;
  pretmp_458 = dequant4_scale[q_183][pretmp_457];
  pretmp_460 = quant4_scale[q_183][pretmp_457];

  <bb 28>:
  # i_148 = PHI <i_120(27), 0(35)>
  # prephitmp_459 = PHI <pretmp_458(27), prephitmp_451(35)>
  # prephitmp_461 = PHI <pretmp_460(27), prephitmp_453(35)>
  # ivtmp_418 = PHI <ivtmp_417(27), 16(35)>
  # DEBUG i => i_148
  # DEBUG D#12 => i_148 & 1
  # DEBUG D#11 => i_148 >> 2
  # DEBUG D#10 => D#11 & 1
  # DEBUG j => D#12 + D#10
  def_dequant4[q_183][i_148] = prephitmp_459;
  def_quant4[q_183][i_148] = prephitmp_461;
  i_120 = i_148 + 1;
  # DEBUG i => i_120
  # DEBUG i => i_120
  ivtmp_417 = ivtmp_418 - 1;
  if (ivtmp_417 != 0)
    goto <bb 27>;
  else
    goto <bb 29>;

  <bb 29>:

  <bb 30>:
  # i_100 = PHI <0(29), i_130(31)>
  # prephitmp_470 = PHI <prephitmp_447(29), pretmp_469(31)>
  # prephitmp_472 = PHI <prephitmp_449(29), pretmp_471(31)>
  # ivtmp_442 = PHI <64(29), ivtmp_419(31)>
  # DEBUG i => i_100
  # DEBUG D#9 => i_100 >> 1
  # DEBUG D#8 => D#9 & 12
  # DEBUG D#7 => i_100 & 3
  # DEBUG D#6 => D#8 | D#7
  # DEBUG D#5 => quant8_scan[D#6]
  # DEBUG j => D#5
  def_dequant8[q_183][i_100] = prephitmp_470;
  def_quant8[q_183][i_100] = prephitmp_472;
  i_130 = i_100 + 1;
  # DEBUG i => i_130
  # DEBUG i => i_130
  ivtmp_419 = ivtmp_442 - 1;
  if (ivtmp_419 != 0)
    goto <bb 31>;
  else
    goto <bb 32>;

  <bb 31>:
  pretmp_463 = i_130 >> 1;
  pretmp_464 = pretmp_463 & 12;
  pretmp_465 = i_130 & 3;
  pretmp_466 = pretmp_464 | pretmp_465;
  pretmp_467 = quant8_scan[pretmp_466];
  pretmp_469 = dequant8_scale[q_183][pretmp_467];
  pretmp_471 = quant8_scale[q_183][pretmp_467];
  goto <bb 30>;

  <bb 32>:
  q_131 = q_183 + 1;
  # DEBUG q => q_131
  # DEBUG q => q_131
  ivtmp_415 = ivtmp_416 - 1;
  if (ivtmp_415 != 0)
    goto <bb 34>;
  else
    goto <bb 33>;

  <bb 33>:
  pretmp_476 = h_51(D)->pps;
  goto <bb 49>;

  <bb 34>:
  pretmp_446 = dequant8_scale[q_131][0];
  pretmp_448 = quant8_scale[q_131][0];
  pretmp_450 = dequant4_scale[q_131][0];
  pretmp_452 = quant4_scale[q_131][0];

  <bb 35>:
  # q_183 = PHI <0(26), q_131(34)>
  # prephitmp_447 = PHI <20(26), pretmp_446(34)>
  # prephitmp_449 = PHI <13107(26), pretmp_448(34)>
  # prephitmp_451 = PHI <10(26), pretmp_450(34)>
  # prephitmp_453 = PHI <13107(26), pretmp_452(34)>
  # ivtmp_416 = PHI <6(26), ivtmp_415(34)>
  # DEBUG q => q_183
  # DEBUG i => 0
  goto <bb 28>;

  <bb 36>:

  <bb 37>:
  # i_300 = PHI <i_159(36), 0(41)>
  # ivtmp_436 = PHI <ivtmp_435(36), 16(41)>
  # DEBUG i => i_300
  _136 = def_dequant4[q_80][i_300];
  _139 = (sizetype) i_300;
  _140 = pretmp_488 + _139;
  _141 = *_140;
  _142 = (int) _141;
  _143 = _136 * _142;
  *pretmp_487[0][i_300] = _143;
  _145 = def_quant4[q_80][i_300];
  _146 = _145 * 16;
  _149 = *_140;
  _150 = _149 >> 1;
  _151 = (int) _150;
  _152 = _146 + _151;
  _156 = (int) _149;
  _157 = _152 / _156;
  quant4_mf[i_list_299][q_80][0][i_300] = _157;
  i_159 = i_300 + 1;
  # DEBUG i => i_159
  # DEBUG i => i_159
  ivtmp_435 = ivtmp_436 - 1;
  if (ivtmp_435 != 0)
    goto <bb 36>;
  else
    goto <bb 38>;

  <bb 38>:
  i_list_160 = i_list_299 + 1;
  # DEBUG i_list => i_list_160
  # DEBUG i_list => i_list_160
  ivtmp_432 = ivtmp_434 - 1;
  if (ivtmp_432 != 0)
    goto <bb 40>;
  else
    goto <bb 39>;

  <bb 39>:
  pretmp_492 = pretmp_480 * 256;
  goto <bb 46>;

  <bb 40>:

  <bb 41>:
  # i_list_299 = PHI <i_list_160(40), 0(49)>
  # ivtmp_434 = PHI <ivtmp_432(40), 4(49)>
  # DEBUG i_list => i_list_299
  # DEBUG i => 0
  pretmp_483 = h_51(D)->dequant4_mf[i_list_299];
  pretmp_487 = pretmp_483 + pretmp_481;
  pretmp_488 = pretmp_476->scaling_list[i_list_299];
  goto <bb 37>;

  <bb 42>:

  <bb 43>:
  # i_298 = PHI <i_189(42), 0(46)>
  # ivtmp_124 = PHI <ivtmp_440(42), 64(46)>
  # DEBUG i => i_298
  _165 = def_dequant8[q_80][i_298];
  _169 = (sizetype) i_298;
  _170 = pretmp_500 + _169;
  _171 = *_170;
  _172 = (int) _171;
  _173 = _165 * _172;
  *pretmp_498[0][i_298] = _173;
  _175 = def_quant8[q_80][i_298];
  _176 = _175 * 16;
  _179 = *_170;
  _180 = _179 >> 1;
  _181 = (int) _180;
  _182 = _176 + _181;
  _186 = (int) _179;
  _187 = _182 / _186;
  quant8_mf[i_list_155][q_80][0][i_298] = _187;
  i_189 = i_298 + 1;
  # DEBUG i => i_189
  # DEBUG i => i_189
  ivtmp_440 = ivtmp_124 - 1;
  if (ivtmp_440 != 0)
    goto <bb 42>;
  else
    goto <bb 44>;

  <bb 44>:
  i_list_190 = i_list_155 + 1;
  # DEBUG i_list => i_list_190
  # DEBUG i_list => i_list_190
  ivtmp_437 = ivtmp_438 - 1;
  if (ivtmp_437 != 0)
    goto <bb 45>;
  else
    goto <bb 47>;

  <bb 45>:

  <bb 46>:
  # i_list_155 = PHI <0(39), i_list_190(45)>
  # ivtmp_438 = PHI <2(39), ivtmp_437(45)>
  # DEBUG i_list => i_list_155
  # DEBUG i => 0
  pretmp_495 = h_51(D)->dequant8_mf[i_list_155];
  pretmp_498 = pretmp_495 + pretmp_492;
  pretmp_499 = i_list_155 + 4;
  pretmp_500 = pretmp_476->scaling_list[pretmp_499];
  goto <bb 43>;

  <bb 47>:
  q_191 = q_80 + 1;
  # DEBUG q => q_191
  # DEBUG q => q_191
  ivtmp_443 = ivtmp_431 - 1;
  if (ivtmp_443 != 0)
    goto <bb 48>;
  else
    goto <bb 71>;

  <bb 48>:

  <bb 49>:
  # q_80 = PHI <0(33), q_191(48)>
  # ivtmp_431 = PHI <6(33), ivtmp_443(48)>
  # DEBUG q => q_80
  # DEBUG i_list => 0
  pretmp_480 = (long unsigned int) q_80;
  pretmp_481 = pretmp_480 * 64;
  goto <bb 41>;

  <bb 50>:

  <bb 51>:
  # i_91 = PHI <i_236(50), 0(60)>
  # max_qp_err_297 = PHI <max_qp_err_17(50), max_qp_err_295(60)>
  # ivtmp_113 = PHI <ivtmp_114(50), 16(60)>
  # DEBUG max_qp_err => max_qp_err_297
  # DEBUG i => i_91
  j_200 = quant4_mf[i_list_177][pretmp_518][0][i_91];
  _201 = (long long unsigned int) j_200;
  _202 = pretmp_517 / _201;
  _203 = (int) _202;
  *pretmp_525[i_91] = _203;
  if (max_qp_err_296 <= 5)
    goto <bb 52>;
  else
    goto <bb 53>;

  <bb 52>:
  j_212 = j_200 << 1;
  goto <bb 55>;

  <bb 53>:
  q.6_213 = (unsigned int) max_qp_err_296;
  _214 = q.6_213 + 4294967290;
  if (_214 <= 5)
    goto <bb 55>;
  else
    goto <bb 54>;

  <bb 54>:
  _217 = j_200 + _216;
  _218 = pretmp_515 + -1;
  j_219 = _217 >> _218;

  <bb 55>:
  # j_28 = PHI <j_212(52), j_219(54), j_200(53)>
  # DEBUG j => j_28
  _220 = (short unsigned int) j_28;
  *pretmp_533[i_91] = _220;
  _224 = 32768 / j_28;
  _227 = j_28 >> 1;
  _228 = _227 + pretmp_539;
  _229 = _228 / j_28;
  _230 = MIN_EXPR <_224, _229>;
  _231 = (short unsigned int) _230;
  *pretmp_536[i_91] = _231;
  _233 = j_28 > 65535;
  _234 = max_qp_err_296 > max_qp_err_297;
  _235 = _233 & _234;
  if (_235 != 0)
    goto <bb 56>;
  else
    goto <bb 57>;

  <bb 56>:

  <bb 57>:
  # max_qp_err_17 = PHI <max_qp_err_297(55), max_qp_err_296(56)>
  # DEBUG max_qp_err => max_qp_err_17
  i_236 = i_91 + 1;
  # DEBUG i => i_236
  # DEBUG max_qp_err => max_qp_err_17
  # DEBUG i => i_236
  ivtmp_114 = ivtmp_113 - 1;
  if (ivtmp_114 != 0)
    goto <bb 50>;
  else
    goto <bb 58>;

  <bb 58>:
  # max_qp_err_429 = PHI <max_qp_err_17(57)>
  i_list_237 = i_list_177 + 1;
  # DEBUG i_list => i_list_237
  # DEBUG max_qp_err => max_qp_err_429
  # DEBUG i_list => i_list_237
  ivtmp_121 = ivtmp_115 - 1;
  if (ivtmp_121 != 0)
    goto <bb 59>;
  else
    goto <bb 61>;

  <bb 59>:

  <bb 60>:
  # i_list_177 = PHI <i_list_237(59), 0(72)>
  # max_qp_err_295 = PHI <max_qp_err_429(59), max_qp_err_256(72)>
  # ivtmp_115 = PHI <ivtmp_121(59), 4(72)>
  # DEBUG max_qp_err => max_qp_err_295
  # DEBUG i_list => i_list_177
  # DEBUG max_qp_err => max_qp_err_295
  # DEBUG i => 0
  pretmp_521 = h_51(D)->unquant4_mf[i_list_177];
  pretmp_525 = pretmp_521 + pretmp_514;
  pretmp_530 = h_51(D)->quant4_mf[i_list_177];
  pretmp_533 = pretmp_530 + pretmp_519;
  pretmp_534 = h_51(D)->quant4_bias[i_list_177];
  pretmp_536 = pretmp_534 + pretmp_519;
  pretmp_537 = deadzone[i_list_177];
  pretmp_539 = pretmp_537 << 10;
  goto <bb 51>;

  <bb 61>:
  # max_qp_err_428 = PHI <max_qp_err_429(58)>
  _238 = h_51(D)->param.analyse.b_transform_8x8;
  if (_238 != 0)
    goto <bb 62>;
  else
    goto <bb 69>;

  <bb 62>:
  pretmp_541 = (unsigned int) max_qp_err_296;
  pretmp_542 = pretmp_513 * 256;
  pretmp_543 = pretmp_515 + 24;
  pretmp_544 = 1 << pretmp_543;
  pretmp_545 = pretmp_513 * 128;
  pretmp_546 = pretmp_541 + 5;
  _421 = (unsigned int) pretmp_515;
  _420 = _421 + 4294967295;
  _259 = (int) _420;
  _260 = 1 << _259;
  goto <bb 68>;

  <bb 63>:

  <bb 64>:
  # i_60 = PHI <i_279(63), 0(68)>
  # max_qp_err_301 = PHI <max_qp_err_20(63), max_qp_err_255(68)>
  # ivtmp_441 = PHI <ivtmp_433(63), 64(68)>
  # DEBUG max_qp_err => NULL
  # DEBUG i => NULL
  j_247 = quant8_mf[i_list_185][pretmp_518][0][i_60];
  _248 = (long long unsigned int) j_247;
  _249 = pretmp_544 / _248;
  _250 = (int) _249;
  *pretmp_552[i_60] = _250;
  _261 = j_247 + _260;
  j_262 = _261 >> pretmp_515;
  j_29 = pretmp_546 <= 10 ? j_247 : j_262;
  # DEBUG j => NULL
  _263 = (short unsigned int) j_29;
  *pretmp_558[i_60] = _263;
  _267 = 32768 / j_29;
  _270 = j_29 >> 1;
  _271 = _270 + pretmp_565;
  _272 = _271 / j_29;
  _273 = MIN_EXPR <_267, _272>;
  _274 = (short unsigned int) _273;
  *pretmp_562[i_60] = _274;
  _276 = j_29 > 65535;
  _277 = max_qp_err_296 > max_qp_err_301;
  _278 = _276 & _277;
  max_qp_err_20 = _278 ? max_qp_err_296 : max_qp_err_301;
  # DEBUG max_qp_err => max_qp_err_20
  i_279 = i_60 + 1;
  # DEBUG i => i_279
  # DEBUG max_qp_err => max_qp_err_20
  # DEBUG i => i_279
  ivtmp_433 = ivtmp_441 - 1;
  if (ivtmp_433 != 0)
    goto <bb 63>;
  else
    goto <bb 65>;

  <bb 65>:
  # max_qp_err_427 = PHI <max_qp_err_20(64)>
  i_list_280 = i_list_185 + 1;
  # DEBUG i_list => i_list_280
  # DEBUG max_qp_err => max_qp_err_427
  # DEBUG i_list => i_list_280
  ivtmp_112 = ivtmp_439 - 1;
  if (ivtmp_112 != 0)
    goto <bb 67>;
  else
    goto <bb 66>;

  <bb 66>:
  # max_qp_err_426 = PHI <max_qp_err_427(65)>
  goto <bb 69>;

  <bb 67>:

  <bb 68>:
  # i_list_185 = PHI <0(62), i_list_280(67)>
  # max_qp_err_255 = PHI <max_qp_err_428(62), max_qp_err_427(67)>
  # ivtmp_439 = PHI <2(62), ivtmp_112(67)>
  # DEBUG max_qp_err => max_qp_err_255
  # DEBUG i_list => i_list_185
  # DEBUG max_qp_err => max_qp_err_255
  # DEBUG i => 0
  pretmp_549 = h_51(D)->unquant8_mf[i_list_185];
  pretmp_552 = pretmp_549 + pretmp_542;
  pretmp_555 = h_51(D)->quant8_mf[i_list_185];
  pretmp_558 = pretmp_555 + pretmp_545;
  pretmp_560 = h_51(D)->quant8_bias[i_list_185];
  pretmp_562 = pretmp_560 + pretmp_545;
  pretmp_563 = deadzone[i_list_185];
  pretmp_565 = pretmp_563 << 10;
  goto <bb 64>;

  <bb 69>:
  # max_qp_err_23 = PHI <max_qp_err_428(61), max_qp_err_426(66)>
  # DEBUG max_qp_err => max_qp_err_23
  max_qp_err_281 = max_qp_err_296 + 1;
  # DEBUG q => max_qp_err_281
  # DEBUG max_qp_err => max_qp_err_23
  # DEBUG q => max_qp_err_281
  ivtmp_123 = ivtmp_122 - 1;
  if (ivtmp_123 != 0)
    goto <bb 70>;
  else
    goto <bb 73>;

  <bb 70>:
  goto <bb 72>;

  <bb 71>:

  <bb 72>:
  # max_qp_err_296 = PHI <0(71), max_qp_err_281(70)>
  # max_qp_err_256 = PHI <-1(71), max_qp_err_23(70)>
  # ivtmp_122 = PHI <52(71), ivtmp_123(70)>
  # DEBUG max_qp_err => max_qp_err_256
  # DEBUG q => max_qp_err_296
  # DEBUG max_qp_err => max_qp_err_256
  # DEBUG i_list => 0
  pretmp_513 = (long unsigned int) max_qp_err_296;
  pretmp_514 = pretmp_513 * 64;
  pretmp_515 = max_qp_err_296 / 6;
  pretmp_516 = pretmp_515 + 23;
  pretmp_517 = 1 << pretmp_516;
  pretmp_518 = max_qp_err_296 % 6;
  pretmp_519 = pretmp_513 * 32;
  _423 = (unsigned int) pretmp_515;
  _422 = _423 + 4294967294;
  _215 = (int) _422;
  _216 = 1 << _215;
  goto <bb 60>;

  <bb 73>:
  # max_qp_err_425 = PHI <max_qp_err_23(69)>
  _282 = h_51(D)->mb.b_lossless;
  if (_282 == 0)
    goto <bb 74>;
  else
    goto <bb 76>;

  <bb 74>:
  _283 = h_51(D)->param.rc.i_qp_min;
  if (max_qp_err_425 >= _283)
    goto <bb 75>;
  else
    goto <bb 76>;

  <bb 75>:
  x264_log (h_51(D), 0, "Quantization overflow.\n");
  _285 = h_51(D)->param.rc.i_qp_min;
  _286 = max_qp_err_425 + 1;
  x264_log (h_51(D), 0, "Your CQM is incompatible with QP < %d, but min QP is set to %d\n", _286, _285);

  <bb 76>:
  # _31 = PHI <-1(75), 0(74), 0(73)>
  def_quant4 ={v} {CLOBBER};
  def_quant8 ={v} {CLOBBER};
  def_dequant4 ={v} {CLOBBER};
  def_dequant8 ={v} {CLOBBER};
  quant4_mf ={v} {CLOBBER};
  quant8_mf ={v} {CLOBBER};
  deadzone ={v} {CLOBBER};
  return _31;

}



;; Function x264_cqm_delete (x264_cqm_delete, funcdef_no=116, decl_uid=4537, cgraph_uid=116, symbol_order=164)


Analyzing loop at common/set.c:179
common/set.c:179:5: note: ===== analyze_loop_nest =====
common/set.c:179:5: note: === vect_analyze_loop_form ===
common/set.c:179:5: note: not vectorized: multiple nested loops.
common/set.c:179:5: note: bad loop form.

Analyzing loop at common/set.c:190
common/set.c:190:29: note: ===== analyze_loop_nest =====
common/set.c:190:29: note: === vect_analyze_loop_form ===
common/set.c:190:29: note: not vectorized: control flow in loop.
common/set.c:190:29: note: bad loop form.

Analyzing loop at common/set.c:181
common/set.c:181:29: note: ===== analyze_loop_nest =====
common/set.c:181:29: note: === vect_analyze_loop_form ===
common/set.c:181:29: note: not vectorized: control flow in loop.
common/set.c:181:29: note: bad loop form.
common/set.c:176:6: note: vectorized 0 loops in function.
x264_cqm_delete (struct x264_t * h)
{
  int j;
  int i;
  uint16_t[16] * _1;
  uint16_t[16] * prephitmp_3;
  unsigned int ivtmp_4;
  uint16_t[16] * _6;
  uint16_t[16] * _11;
  int[4][4] * _15;
  int[16] * _17;
  uint16_t[16] * _20;
  uint16_t[16] * _22;
  uint16_t[16] * _26;
  uint16_t[16] * _27;
  unsigned int ivtmp_31;
  uint16_t[16] * pretmp_35;

  <bb 2>:
  # DEBUG i => 0
  # DEBUG i => 0
  goto <bb 21>;

  <bb 3>:
  _11 = h_9(D)->quant4_mf[j_12];
  if (_11 == _27)
    goto <bb 24>;
  else
    goto <bb 4>;

  <bb 4>:
  goto <bb 6>;

  <bb 5>:

  <bb 6>:
  # j_39 = PHI <0(5), j_12(4)>
  # DEBUG j => j_39
  j_12 = j_39 + 1;
  # DEBUG j => j_12
  # DEBUG j => j_12
  if (i_7 > j_12)
    goto <bb 3>;
  else
    goto <bb 7>;

  <bb 7>:
  # j_25 = PHI <j_12(6)>
  goto <bb 25>;

  <bb 8>:
  # prephitmp_3 = PHI <pretmp_35(27), _27(25)>
  x264_free (prephitmp_3);
  _15 = h_9(D)->dequant4_mf[i_7];
  x264_free (_15);
  _17 = h_9(D)->unquant4_mf[i_7];
  x264_free (_17);
  # DEBUG j => 0
  # DEBUG j => 0
  if (i_7 > 0)
    goto <bb 10>;
  else
    goto <bb 9>;

  <bb 9>:
  goto <bb 17>;

  <bb 10>:
  # DEBUG j => 0
  _26 = h_9(D)->quant4_bias[i_7];
  _1 = h_9(D)->quant4_bias[0];
  if (_1 == _26)
    goto <bb 9>;
  else
    goto <bb 14>;

  <bb 11>:
  _20 = h_9(D)->quant4_bias[j_21];
  if (_20 == _26)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  # j_29 = PHI <j_21(11)>
  goto <bb 17>;

  <bb 13>:
  goto <bb 15>;

  <bb 14>:

  <bb 15>:
  # j_40 = PHI <0(14), j_21(13)>
  # DEBUG j => j_40
  j_21 = j_40 + 1;
  # DEBUG j => j_21
  # DEBUG j => j_21
  if (i_7 > j_21)
    goto <bb 11>;
  else
    goto <bb 16>;

  <bb 16>:
  # j_41 = PHI <j_21(15)>

  <bb 17>:
  # j_38 = PHI <j_29(12), j_41(16), 0(9)>
  if (i_7 == j_38)
    goto <bb 18>;
  else
    goto <bb 19>;

  <bb 18>:
  _22 = h_9(D)->quant4_bias[i_7];
  x264_free (_22);

  <bb 19>:
  i_24 = i_7 + 1;
  # DEBUG i => i_24
  # DEBUG i => i_24
  ivtmp_31 = ivtmp_4 - 1;
  if (ivtmp_31 != 0)
    goto <bb 20>;
  else
    goto <bb 23>;

  <bb 20>:

  <bb 21>:
  # i_7 = PHI <i_24(20), 0(2)>
  # ivtmp_4 = PHI <ivtmp_31(20), 6(2)>
  # DEBUG i => i_7
  # DEBUG j => 0
  if (i_7 > 0)
    goto <bb 22>;
  else
    goto <bb 26>;

  <bb 22>:
  _27 = h_9(D)->quant4_mf[i_7];
  _6 = h_9(D)->quant4_mf[0];
  if (_6 == _27)
    goto <bb 25>;
  else
    goto <bb 5>;

  <bb 23>:
  return;

  <bb 24>:
  # j_13 = PHI <j_12(3)>

  <bb 25>:
  # j_2 = PHI <0(22), j_25(7), j_13(24)>
  if (j_2 == i_7)
    goto <bb 8>;
  else
    goto <bb 10>;

  <bb 26>:
  if (i_7 == 0)
    goto <bb 27>;
  else
    goto <bb 9>;

  <bb 27>:
  pretmp_35 = h_9(D)->quant4_mf[i_7];
  goto <bb 8>;

}



;; Function x264_cqm_parse_file (x264_cqm_parse_file, funcdef_no=118, decl_uid=4540, cgraph_uid=118, symbol_order=166)


Analyzing loop at common/set.c:258
common/set.c:258:10: note: ===== analyze_loop_nest =====
common/set.c:258:10: note: === vect_analyze_loop_form ===
common/set.c:258:10: note: ===== analyze_loop_nest_1 =====
common/set.c:258:10: note: === vect_analyze_loop_form ===
common/set.c:258:10: note: === get_loop_niters ===
common/set.c:258:10: note: not vectorized: number of iterations cannot be computed.
common/set.c:258:10: note: bad inner-loop form.
common/set.c:258:10: note: not vectorized: Bad inner loop.
common/set.c:258:10: note: bad loop form.

Analyzing loop at /usr/include/x86_64-linux-gnu/bits/string2.h:950
/usr/include/x86_64-linux-gnu/bits/string2.h:950:32: note: ===== analyze_loop_nest =====
/usr/include/x86_64-linux-gnu/bits/string2.h:950:32: note: === vect_analyze_loop_form ===
/usr/include/x86_64-linux-gnu/bits/string2.h:950:32: note: === get_loop_niters ===
/usr/include/x86_64-linux-gnu/bits/string2.h:950:32: note: not vectorized: number of iterations cannot be computed.
/usr/include/x86_64-linux-gnu/bits/string2.h:950:32: note: bad loop form.
common/set.c:244:5: note: vectorized 0 loops in function.
x264_cqm_parse_file (struct x264_t * h, const char * filename)
{
  size_t __result;
  int b_error;
  char * p;
  char * buf;
  int _1;
  const char * _12;
  _Bool _15;
  uint8_t[16] * _16;
  int _18;
  uint8_t[16] * _19;
  int _21;
  uint8_t[16] * _23;
  int _25;
  uint8_t[16] * _27;
  int _29;
  uint8_t[64] * _31;
  int _33;
  uint8_t[64] * _35;
  int _37;
  char _41;
  _Bool _42;
  _Bool _44;
  char _45;
  _Bool _49;
  _Bool _50;
  _Bool _51;

  <bb 2>:
  # DEBUG b_error => 0
  h_5(D)->param.i_cqm_preset = 2;
  buf_9 = x264_slurp_file (filename_7(D));
  # DEBUG buf => buf_9
  if (buf_9 == 0B)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  goto <bb 9>;

  <bb 4>:
  x264_log (h_5(D), 0, "can\'t open file \'%s\'\n", filename_7(D));
  goto <bb 13>;

  <bb 5>:

  <bb 6>:
  # __result_52 = PHI <0(11), __result_13(5)>
  # DEBUG __result => __result_52
  __result_13 = __result_52 + 1;
  # DEBUG __result => __result_13
  # DEBUG __result => __result_13
  _12 = p_11 + __result_13;
  _41 = *_12;
  _15 = _41 != 10;
  _44 = _41 != 0;
  _42 = _15 & _44;
  if (_42 != 0)
    goto <bb 5>;
  else
    goto <bb 7>;

  <bb 7>:
  # __result_57 = PHI <__result_13(6)>

  <bb 8>:
  # __result_53 = PHI <__result_57(7), 0(10)>
  # DEBUG __s => NULL
  # DEBUG __reject => NULL
  # DEBUG __result => NULL
  # DEBUG __dest => p_11
  # DEBUG __ch => 32
  # DEBUG __len => __result_53
  __builtin_memset (p_11, 32, __result_53);

  <bb 9>:
  p_11 = __builtin_strchr (buf_9, 35);
  # DEBUG p => p_11
  if (p_11 != 0B)
    goto <bb 10>;
  else
    goto <bb 12>;

  <bb 10>:
  # DEBUG __result => 0
  _45 = MEM[(const char *)p_11];
  _49 = _45 != 10;
  _50 = _45 != 0;
  _51 = _49 & _50;
  if (_51 != 0)
    goto <bb 11>;
  else
    goto <bb 8>;

  <bb 11>:
  goto <bb 6>;

  <bb 12>:
  _16 = &h_5(D)->param.cqm_4iy;
  _18 = x264_cqm_parse_jmlist (h_5(D), buf_9, "INTRA4X4_LUMA", _16, &x264_cqm_jvt4i, 16);
  # DEBUG b_error => _18
  _19 = &h_5(D)->param.cqm_4ic;
  _21 = x264_cqm_parse_jmlist (h_5(D), buf_9, "INTRA4X4_CHROMA", _19, &x264_cqm_jvt4i, 16);
  b_error_22 = _18 | _21;
  # DEBUG b_error => b_error_22
  _23 = &h_5(D)->param.cqm_4py;
  _25 = x264_cqm_parse_jmlist (h_5(D), buf_9, "INTER4X4_LUMA", _23, &x264_cqm_jvt4p, 16);
  b_error_26 = b_error_22 | _25;
  # DEBUG b_error => b_error_26
  _27 = &h_5(D)->param.cqm_4pc;
  _29 = x264_cqm_parse_jmlist (h_5(D), buf_9, "INTER4X4_CHROMA", _27, &x264_cqm_jvt4p, 16);
  b_error_30 = b_error_26 | _29;
  # DEBUG b_error => b_error_30
  _31 = &h_5(D)->param.cqm_8iy;
  _33 = x264_cqm_parse_jmlist (h_5(D), buf_9, "INTRA8X8_LUMA", _31, &x264_cqm_jvt8i, 64);
  b_error_34 = b_error_30 | _33;
  # DEBUG b_error => b_error_34
  _35 = &h_5(D)->param.cqm_8py;
  _37 = x264_cqm_parse_jmlist (h_5(D), buf_9, "INTER8X8_LUMA", _35, &x264_cqm_jvt8p, 64);
  b_error_38 = b_error_34 | _37;
  # DEBUG b_error => b_error_38
  x264_free (buf_9);

  <bb 13>:
  # _1 = PHI <-1(4), b_error_38(12)>
  return _1;

}


