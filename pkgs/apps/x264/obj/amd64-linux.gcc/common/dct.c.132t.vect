
;; Function dct4x4dc (dct4x4dc, funcdef_no=115, decl_uid=5844, cgraph_uid=115, symbol_order=160)


Analyzing loop at common/dct.c:59
common/dct.c:59:5: note: ===== analyze_loop_nest =====
common/dct.c:59:5: note: === vect_analyze_loop_form ===
common/dct.c:59:5: note: === get_loop_niters ===
Analyzing # of iterations of loop 2
  exit condition [3, + , 4294967295] != 0
  bounds on difference of bases: -3 ... -3
  result:
    # of iterations 3, bounded by 3
common/dct.c:59:5: note: === vect_analyze_data_refs ===
Creating dr for tmp[i_83][0]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &tmp
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 128
	base_object: tmp
	Access function 0: 0
	Access function 1: {0, +, 1}_2
Creating dr for tmp[i_83][1]
analyze_innermost: success.
	base_address: &tmp
	offset from base address: 0
	constant offset from base address: 2
	step: 8
	aligned to: 128
	base_object: tmp
	Access function 0: 1
	Access function 1: {0, +, 1}_2
Creating dr for tmp[i_83][2]
analyze_innermost: success.
	base_address: &tmp
	offset from base address: 0
	constant offset from base address: 4
	step: 8
	aligned to: 128
	base_object: tmp
	Access function 0: 2
	Access function 1: {0, +, 1}_2
Creating dr for tmp[i_83][3]
analyze_innermost: success.
	base_address: &tmp
	offset from base address: 0
	constant offset from base address: 6
	step: 8
	aligned to: 128
	base_object: tmp
	Access function 0: 3
	Access function 1: {0, +, 1}_2
Creating dr for *_54[0]
analyze_innermost: success.
	base_address: d_8(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 128
	base_object: *d_8(D)
	Access function 0: 0
	Access function 1: {0B, +, 8}_2
Creating dr for *_54[1]
analyze_innermost: success.
	base_address: d_8(D)
	offset from base address: 0
	constant offset from base address: 2
	step: 8
	aligned to: 128
	base_object: *d_8(D)
	Access function 0: 1
	Access function 1: {0B, +, 8}_2
Creating dr for *_54[2]
analyze_innermost: success.
	base_address: d_8(D)
	offset from base address: 0
	constant offset from base address: 4
	step: 8
	aligned to: 128
	base_object: *d_8(D)
	Access function 0: 2
	Access function 1: {0B, +, 8}_2
Creating dr for *_54[3]
analyze_innermost: success.
	base_address: d_8(D)
	offset from base address: 0
	constant offset from base address: 6
	step: 8
	aligned to: 128
	base_object: *d_8(D)
	Access function 0: 3
	Access function 1: {0B, +, 8}_2
common/dct.c:59:5: note: got vectype for stmt: _40 = tmp[i_83][0];
vector(8) short int
common/dct.c:59:5: note: got vectype for stmt: _42 = tmp[i_83][1];
vector(8) short int
common/dct.c:59:5: note: got vectype for stmt: _46 = tmp[i_83][2];
vector(8) short int
common/dct.c:59:5: note: got vectype for stmt: _48 = tmp[i_83][3];
vector(8) short int
common/dct.c:59:5: note: got vectype for stmt: *_54[0] = _58;
vector(8) short int
common/dct.c:59:5: note: got vectype for stmt: *_54[1] = _63;
vector(8) short int
common/dct.c:59:5: note: got vectype for stmt: *_54[2] = _68;
vector(8) short int
common/dct.c:59:5: note: got vectype for stmt: *_54[3] = _73;
vector(8) short int
common/dct.c:59:5: note: === vect_analyze_scalar_cycles ===
common/dct.c:59:5: note: Analyze phi: i_83 = PHI <0(5), i_75(7)>

common/dct.c:59:5: note: Access function of PHI: {0, +, 1}_2
common/dct.c:59:5: note: step: 1,  init: 0
common/dct.c:59:5: note: Detected induction.
common/dct.c:59:5: note: Analyze phi: .MEM_85 = PHI <.MEM_38(5), .MEM_74(7)>

common/dct.c:59:5: note: Analyze phi: ivtmp_169 = PHI <4(5), ivtmp_168(7)>

common/dct.c:59:5: note: Access function of PHI: {4, +, 4294967295}_2
common/dct.c:59:5: note: step: 4294967295,  init: 4
common/dct.c:59:5: note: Detected induction.
common/dct.c:59:5: note: === vect_pattern_recog ===
common/dct.c:59:5: note: vect_is_simple_use: operand _52
common/dct.c:59:5: note: def_stmt: _52 = (long unsigned int) i_83;
common/dct.c:59:5: note: type of def: 3.
common/dct.c:59:5: note: vect_is_simple_use: operand i_83
common/dct.c:59:5: note: def_stmt: i_83 = PHI <0(5), i_75(7)>
common/dct.c:59:5: note: type of def: 4.
common/dct.c:59:5: note: vect_is_simple_use: operand 8
common/dct.c:59:5: note: vect_is_simple_use: operand _56
common/dct.c:59:5: note: def_stmt: _56 = _55 + 1;
common/dct.c:59:5: note: type of def: 3.
common/dct.c:59:5: note: vect_is_simple_use: operand _61
common/dct.c:59:5: note: def_stmt: _61 = _60 + 1;
common/dct.c:59:5: note: type of def: 3.
common/dct.c:59:5: note: vect_is_simple_use: operand _66
common/dct.c:59:5: note: def_stmt: _66 = _65 + 1;
common/dct.c:59:5: note: type of def: 3.
common/dct.c:59:5: note: vect_is_simple_use: operand _71
common/dct.c:59:5: note: def_stmt: _71 = _70 + 1;
common/dct.c:59:5: note: type of def: 3.
common/dct.c:59:5: note: === vect_analyze_data_ref_accesses ===
common/dct.c:59:5: note: Detected interleaving tmp[i_83][0] and tmp[i_83][1]
common/dct.c:59:5: note: Detected interleaving tmp[i_83][0] and tmp[i_83][2]
common/dct.c:59:5: note: Detected interleaving tmp[i_83][0] and tmp[i_83][3]
common/dct.c:59:5: note: Detected interleaving *_54[0] and *_54[1]
common/dct.c:59:5: note: Detected interleaving *_54[0] and *_54[2]
common/dct.c:59:5: note: Detected interleaving *_54[0] and *_54[3]
common/dct.c:59:5: note: Detected interleaving of size 4
common/dct.c:59:5: note: Detected interleaving of size 4
common/dct.c:59:5: note: === vect_mark_stmts_to_be_vectorized ===
common/dct.c:59:5: note: init: phi relevant? i_83 = PHI <0(5), i_75(7)>
common/dct.c:59:5: note: init: phi relevant? .MEM_85 = PHI <.MEM_38(5), .MEM_74(7)>
common/dct.c:59:5: note: init: phi relevant? ivtmp_169 = PHI <4(5), ivtmp_168(7)>
common/dct.c:59:5: note: init: stmt relevant? # DEBUG i => i_83
common/dct.c:59:5: note: init: stmt relevant? _40 = tmp[i_83][0];
common/dct.c:59:5: note: init: stmt relevant? _41 = (int) _40;
common/dct.c:59:5: note: init: stmt relevant? _42 = tmp[i_83][1];
common/dct.c:59:5: note: init: stmt relevant? _43 = (int) _42;
common/dct.c:59:5: note: init: stmt relevant? s01_44 = _41 + _43;
common/dct.c:59:5: note: init: stmt relevant? # DEBUG s01 => s01_44
common/dct.c:59:5: note: init: stmt relevant? d01_45 = _41 - _43;
common/dct.c:59:5: note: init: stmt relevant? # DEBUG d01 => d01_45
common/dct.c:59:5: note: init: stmt relevant? _46 = tmp[i_83][2];
common/dct.c:59:5: note: init: stmt relevant? _47 = (int) _46;
common/dct.c:59:5: note: init: stmt relevant? _48 = tmp[i_83][3];
common/dct.c:59:5: note: init: stmt relevant? _49 = (int) _48;
common/dct.c:59:5: note: init: stmt relevant? s23_50 = _47 + _49;
common/dct.c:59:5: note: init: stmt relevant? # DEBUG s23 => s23_50
common/dct.c:59:5: note: init: stmt relevant? d23_51 = _47 - _49;
common/dct.c:59:5: note: init: stmt relevant? # DEBUG d23 => d23_51
common/dct.c:59:5: note: init: stmt relevant? _52 = (long unsigned int) i_83;
common/dct.c:59:5: note: init: stmt relevant? _53 = _52 * 8;
common/dct.c:59:5: note: init: stmt relevant? _54 = d_8(D) + _53;
common/dct.c:59:5: note: init: stmt relevant? _55 = s01_44 + s23_50;
common/dct.c:59:5: note: init: stmt relevant? _56 = _55 + 1;
common/dct.c:59:5: note: init: stmt relevant? _57 = _56 >> 1;
common/dct.c:59:5: note: init: stmt relevant? _58 = (short int) _57;
common/dct.c:59:5: note: init: stmt relevant? *_54[0] = _58;
common/dct.c:59:5: note: vec_stmt_relevant_p: stmt has vdefs.
common/dct.c:59:5: note: mark relevant 4, live 0.
common/dct.c:59:5: note: init: stmt relevant? _60 = s01_44 - s23_50;
common/dct.c:59:5: note: init: stmt relevant? _61 = _60 + 1;
common/dct.c:59:5: note: init: stmt relevant? _62 = _61 >> 1;
common/dct.c:59:5: note: init: stmt relevant? _63 = (short int) _62;
common/dct.c:59:5: note: init: stmt relevant? *_54[1] = _63;
common/dct.c:59:5: note: vec_stmt_relevant_p: stmt has vdefs.
common/dct.c:59:5: note: mark relevant 4, live 0.
common/dct.c:59:5: note: init: stmt relevant? _65 = d01_45 - d23_51;
common/dct.c:59:5: note: init: stmt relevant? _66 = _65 + 1;
common/dct.c:59:5: note: init: stmt relevant? _67 = _66 >> 1;
common/dct.c:59:5: note: init: stmt relevant? _68 = (short int) _67;
common/dct.c:59:5: note: init: stmt relevant? *_54[2] = _68;
common/dct.c:59:5: note: vec_stmt_relevant_p: stmt has vdefs.
common/dct.c:59:5: note: mark relevant 4, live 0.
common/dct.c:59:5: note: init: stmt relevant? _70 = d01_45 + d23_51;
common/dct.c:59:5: note: init: stmt relevant? _71 = _70 + 1;
common/dct.c:59:5: note: init: stmt relevant? _72 = _71 >> 1;
common/dct.c:59:5: note: init: stmt relevant? _73 = (short int) _72;
common/dct.c:59:5: note: init: stmt relevant? *_54[3] = _73;
common/dct.c:59:5: note: vec_stmt_relevant_p: stmt has vdefs.
common/dct.c:59:5: note: mark relevant 4, live 0.
common/dct.c:59:5: note: init: stmt relevant? i_75 = i_83 + 1;
common/dct.c:59:5: note: init: stmt relevant? # DEBUG i => i_75
common/dct.c:59:5: note: init: stmt relevant? # DEBUG i => i_75
common/dct.c:59:5: note: init: stmt relevant? ivtmp_168 = ivtmp_169 - 1;
common/dct.c:59:5: note: init: stmt relevant? if (ivtmp_168 != 0)
common/dct.c:59:5: note: worklist: examine stmt: *_54[3] = _73;
common/dct.c:59:5: note: vect_is_simple_use: operand _73
common/dct.c:59:5: note: def_stmt: _73 = (short int) _72;
common/dct.c:59:5: note: type of def: 3.
common/dct.c:59:5: note: mark relevant 4, live 0.
common/dct.c:59:5: note: worklist: examine stmt: _73 = (short int) _72;
common/dct.c:59:5: note: vect_is_simple_use: operand _72
common/dct.c:59:5: note: def_stmt: _72 = _71 >> 1;
common/dct.c:59:5: note: type of def: 3.
common/dct.c:59:5: note: mark relevant 4, live 0.
common/dct.c:59:5: note: worklist: examine stmt: _72 = _71 >> 1;
common/dct.c:59:5: note: vect_is_simple_use: operand _71
common/dct.c:59:5: note: def_stmt: _71 = _70 + 1;
common/dct.c:59:5: note: type of def: 3.
common/dct.c:59:5: note: mark relevant 4, live 0.
common/dct.c:59:5: note: worklist: examine stmt: _71 = _70 + 1;
common/dct.c:59:5: note: vect_is_simple_use: operand _70
common/dct.c:59:5: note: def_stmt: _70 = d01_45 + d23_51;
common/dct.c:59:5: note: type of def: 3.
common/dct.c:59:5: note: mark relevant 4, live 0.
common/dct.c:59:5: note: worklist: examine stmt: _70 = d01_45 + d23_51;
common/dct.c:59:5: note: vect_is_simple_use: operand d01_45
common/dct.c:59:5: note: def_stmt: d01_45 = _41 - _43;
common/dct.c:59:5: note: type of def: 3.
common/dct.c:59:5: note: mark relevant 4, live 0.
common/dct.c:59:5: note: vect_is_simple_use: operand d23_51
common/dct.c:59:5: note: def_stmt: d23_51 = _47 - _49;
common/dct.c:59:5: note: type of def: 3.
common/dct.c:59:5: note: mark relevant 4, live 0.
common/dct.c:59:5: note: worklist: examine stmt: d23_51 = _47 - _49;
common/dct.c:59:5: note: vect_is_simple_use: operand _47
common/dct.c:59:5: note: def_stmt: _47 = (int) _46;
common/dct.c:59:5: note: type of def: 3.
common/dct.c:59:5: note: mark relevant 4, live 0.
common/dct.c:59:5: note: vect_is_simple_use: operand _49
common/dct.c:59:5: note: def_stmt: _49 = (int) _48;
common/dct.c:59:5: note: type of def: 3.
common/dct.c:59:5: note: mark relevant 4, live 0.
common/dct.c:59:5: note: worklist: examine stmt: _49 = (int) _48;
common/dct.c:59:5: note: vect_is_simple_use: operand _48
common/dct.c:59:5: note: def_stmt: _48 = tmp[i_83][3];
common/dct.c:59:5: note: type of def: 3.
common/dct.c:59:5: note: mark relevant 4, live 0.
common/dct.c:59:5: note: worklist: examine stmt: _48 = tmp[i_83][3];
common/dct.c:59:5: note: worklist: examine stmt: _47 = (int) _46;
common/dct.c:59:5: note: vect_is_simple_use: operand _46
common/dct.c:59:5: note: def_stmt: _46 = tmp[i_83][2];
common/dct.c:59:5: note: type of def: 3.
common/dct.c:59:5: note: mark relevant 4, live 0.
common/dct.c:59:5: note: worklist: examine stmt: _46 = tmp[i_83][2];
common/dct.c:59:5: note: worklist: examine stmt: d01_45 = _41 - _43;
common/dct.c:59:5: note: vect_is_simple_use: operand _41
common/dct.c:59:5: note: def_stmt: _41 = (int) _40;
common/dct.c:59:5: note: type of def: 3.
common/dct.c:59:5: note: mark relevant 4, live 0.
common/dct.c:59:5: note: vect_is_simple_use: operand _43
common/dct.c:59:5: note: def_stmt: _43 = (int) _42;
common/dct.c:59:5: note: type of def: 3.
common/dct.c:59:5: note: mark relevant 4, live 0.
common/dct.c:59:5: note: worklist: examine stmt: _43 = (int) _42;
common/dct.c:59:5: note: vect_is_simple_use: operand _42
common/dct.c:59:5: note: def_stmt: _42 = tmp[i_83][1];
common/dct.c:59:5: note: type of def: 3.
common/dct.c:59:5: note: mark relevant 4, live 0.
common/dct.c:59:5: note: worklist: examine stmt: _42 = tmp[i_83][1];
common/dct.c:59:5: note: worklist: examine stmt: _41 = (int) _40;
common/dct.c:59:5: note: vect_is_simple_use: operand _40
common/dct.c:59:5: note: def_stmt: _40 = tmp[i_83][0];
common/dct.c:59:5: note: type of def: 3.
common/dct.c:59:5: note: mark relevant 4, live 0.
common/dct.c:59:5: note: worklist: examine stmt: _40 = tmp[i_83][0];
common/dct.c:59:5: note: worklist: examine stmt: *_54[2] = _68;
common/dct.c:59:5: note: vect_is_simple_use: operand _68
common/dct.c:59:5: note: def_stmt: _68 = (short int) _67;
common/dct.c:59:5: note: type of def: 3.
common/dct.c:59:5: note: mark relevant 4, live 0.
common/dct.c:59:5: note: worklist: examine stmt: _68 = (short int) _67;
common/dct.c:59:5: note: vect_is_simple_use: operand _67
common/dct.c:59:5: note: def_stmt: _67 = _66 >> 1;
common/dct.c:59:5: note: type of def: 3.
common/dct.c:59:5: note: mark relevant 4, live 0.
common/dct.c:59:5: note: worklist: examine stmt: _67 = _66 >> 1;
common/dct.c:59:5: note: vect_is_simple_use: operand _66
common/dct.c:59:5: note: def_stmt: _66 = _65 + 1;
common/dct.c:59:5: note: type of def: 3.
common/dct.c:59:5: note: mark relevant 4, live 0.
common/dct.c:59:5: note: worklist: examine stmt: _66 = _65 + 1;
common/dct.c:59:5: note: vect_is_simple_use: operand _65
common/dct.c:59:5: note: def_stmt: _65 = d01_45 - d23_51;
common/dct.c:59:5: note: type of def: 3.
common/dct.c:59:5: note: mark relevant 4, live 0.
common/dct.c:59:5: note: worklist: examine stmt: _65 = d01_45 - d23_51;
common/dct.c:59:5: note: vect_is_simple_use: operand d01_45
common/dct.c:59:5: note: def_stmt: d01_45 = _41 - _43;
common/dct.c:59:5: note: type of def: 3.
common/dct.c:59:5: note: mark relevant 4, live 0.
common/dct.c:59:5: note: already marked relevant/live.
common/dct.c:59:5: note: vect_is_simple_use: operand d23_51
common/dct.c:59:5: note: def_stmt: d23_51 = _47 - _49;
common/dct.c:59:5: note: type of def: 3.
common/dct.c:59:5: note: mark relevant 4, live 0.
common/dct.c:59:5: note: already marked relevant/live.
common/dct.c:59:5: note: worklist: examine stmt: *_54[1] = _63;
common/dct.c:59:5: note: vect_is_simple_use: operand _63
common/dct.c:59:5: note: def_stmt: _63 = (short int) _62;
common/dct.c:59:5: note: type of def: 3.
common/dct.c:59:5: note: mark relevant 4, live 0.
common/dct.c:59:5: note: worklist: examine stmt: _63 = (short int) _62;
common/dct.c:59:5: note: vect_is_simple_use: operand _62
common/dct.c:59:5: note: def_stmt: _62 = _61 >> 1;
common/dct.c:59:5: note: type of def: 3.
common/dct.c:59:5: note: mark relevant 4, live 0.
common/dct.c:59:5: note: worklist: examine stmt: _62 = _61 >> 1;
common/dct.c:59:5: note: vect_is_simple_use: operand _61
common/dct.c:59:5: note: def_stmt: _61 = _60 + 1;
common/dct.c:59:5: note: type of def: 3.
common/dct.c:59:5: note: mark relevant 4, live 0.
common/dct.c:59:5: note: worklist: examine stmt: _61 = _60 + 1;
common/dct.c:59:5: note: vect_is_simple_use: operand _60
common/dct.c:59:5: note: def_stmt: _60 = s01_44 - s23_50;
common/dct.c:59:5: note: type of def: 3.
common/dct.c:59:5: note: mark relevant 4, live 0.
common/dct.c:59:5: note: worklist: examine stmt: _60 = s01_44 - s23_50;
common/dct.c:59:5: note: vect_is_simple_use: operand s01_44
common/dct.c:59:5: note: def_stmt: s01_44 = _41 + _43;
common/dct.c:59:5: note: type of def: 3.
common/dct.c:59:5: note: mark relevant 4, live 0.
common/dct.c:59:5: note: vect_is_simple_use: operand s23_50
common/dct.c:59:5: note: def_stmt: s23_50 = _47 + _49;
common/dct.c:59:5: note: type of def: 3.
common/dct.c:59:5: note: mark relevant 4, live 0.
common/dct.c:59:5: note: worklist: examine stmt: s23_50 = _47 + _49;
common/dct.c:59:5: note: vect_is_simple_use: operand _47
common/dct.c:59:5: note: def_stmt: _47 = (int) _46;
common/dct.c:59:5: note: type of def: 3.
common/dct.c:59:5: note: mark relevant 4, live 0.
common/dct.c:59:5: note: already marked relevant/live.
common/dct.c:59:5: note: vect_is_simple_use: operand _49
common/dct.c:59:5: note: def_stmt: _49 = (int) _48;
common/dct.c:59:5: note: type of def: 3.
common/dct.c:59:5: note: mark relevant 4, live 0.
common/dct.c:59:5: note: already marked relevant/live.
common/dct.c:59:5: note: worklist: examine stmt: s01_44 = _41 + _43;
common/dct.c:59:5: note: vect_is_simple_use: operand _41
common/dct.c:59:5: note: def_stmt: _41 = (int) _40;
common/dct.c:59:5: note: type of def: 3.
common/dct.c:59:5: note: mark relevant 4, live 0.
common/dct.c:59:5: note: already marked relevant/live.
common/dct.c:59:5: note: vect_is_simple_use: operand _43
common/dct.c:59:5: note: def_stmt: _43 = (int) _42;
common/dct.c:59:5: note: type of def: 3.
common/dct.c:59:5: note: mark relevant 4, live 0.
common/dct.c:59:5: note: already marked relevant/live.
common/dct.c:59:5: note: worklist: examine stmt: *_54[0] = _58;
common/dct.c:59:5: note: vect_is_simple_use: operand _58
common/dct.c:59:5: note: def_stmt: _58 = (short int) _57;
common/dct.c:59:5: note: type of def: 3.
common/dct.c:59:5: note: mark relevant 4, live 0.
common/dct.c:59:5: note: worklist: examine stmt: _58 = (short int) _57;
common/dct.c:59:5: note: vect_is_simple_use: operand _57
common/dct.c:59:5: note: def_stmt: _57 = _56 >> 1;
common/dct.c:59:5: note: type of def: 3.
common/dct.c:59:5: note: mark relevant 4, live 0.
common/dct.c:59:5: note: worklist: examine stmt: _57 = _56 >> 1;
common/dct.c:59:5: note: vect_is_simple_use: operand _56
common/dct.c:59:5: note: def_stmt: _56 = _55 + 1;
common/dct.c:59:5: note: type of def: 3.
common/dct.c:59:5: note: mark relevant 4, live 0.
common/dct.c:59:5: note: worklist: examine stmt: _56 = _55 + 1;
common/dct.c:59:5: note: vect_is_simple_use: operand _55
common/dct.c:59:5: note: def_stmt: _55 = s01_44 + s23_50;
common/dct.c:59:5: note: type of def: 3.
common/dct.c:59:5: note: mark relevant 4, live 0.
common/dct.c:59:5: note: worklist: examine stmt: _55 = s01_44 + s23_50;
common/dct.c:59:5: note: vect_is_simple_use: operand s01_44
common/dct.c:59:5: note: def_stmt: s01_44 = _41 + _43;
common/dct.c:59:5: note: type of def: 3.
common/dct.c:59:5: note: mark relevant 4, live 0.
common/dct.c:59:5: note: already marked relevant/live.
common/dct.c:59:5: note: vect_is_simple_use: operand s23_50
common/dct.c:59:5: note: def_stmt: s23_50 = _47 + _49;
common/dct.c:59:5: note: type of def: 3.
common/dct.c:59:5: note: mark relevant 4, live 0.
common/dct.c:59:5: note: already marked relevant/live.
common/dct.c:59:5: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _40 = tmp[i_83][0];
  stmt_b: _42 = tmp[i_83][1];
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 1)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _40 = tmp[i_83][0];
  stmt_b: _46 = tmp[i_83][2];
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _40 = tmp[i_83][0];
  stmt_b: _48 = tmp[i_83][3];
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _40 = tmp[i_83][0];
  stmt_b: *_54[0] = _58;
) -> no dependence
(compute_affine_dependence
  stmt_a: _40 = tmp[i_83][0];
  stmt_b: *_54[1] = _63;
) -> no dependence
(compute_affine_dependence
  stmt_a: _40 = tmp[i_83][0];
  stmt_b: *_54[2] = _68;
) -> no dependence
(compute_affine_dependence
  stmt_a: _40 = tmp[i_83][0];
  stmt_b: *_54[3] = _73;
) -> no dependence
(compute_affine_dependence
  stmt_a: _42 = tmp[i_83][1];
  stmt_b: _46 = tmp[i_83][2];
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _42 = tmp[i_83][1];
  stmt_b: _48 = tmp[i_83][3];
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _42 = tmp[i_83][1];
  stmt_b: *_54[0] = _58;
) -> no dependence
(compute_affine_dependence
  stmt_a: _42 = tmp[i_83][1];
  stmt_b: *_54[1] = _63;
) -> no dependence
(compute_affine_dependence
  stmt_a: _42 = tmp[i_83][1];
  stmt_b: *_54[2] = _68;
) -> no dependence
(compute_affine_dependence
  stmt_a: _42 = tmp[i_83][1];
  stmt_b: *_54[3] = _73;
) -> no dependence
(compute_affine_dependence
  stmt_a: _46 = tmp[i_83][2];
  stmt_b: _48 = tmp[i_83][3];
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _46 = tmp[i_83][2];
  stmt_b: *_54[0] = _58;
) -> no dependence
(compute_affine_dependence
  stmt_a: _46 = tmp[i_83][2];
  stmt_b: *_54[1] = _63;
) -> no dependence
(compute_affine_dependence
  stmt_a: _46 = tmp[i_83][2];
  stmt_b: *_54[2] = _68;
) -> no dependence
(compute_affine_dependence
  stmt_a: _46 = tmp[i_83][2];
  stmt_b: *_54[3] = _73;
) -> no dependence
(compute_affine_dependence
  stmt_a: _48 = tmp[i_83][3];
  stmt_b: *_54[0] = _58;
) -> no dependence
(compute_affine_dependence
  stmt_a: _48 = tmp[i_83][3];
  stmt_b: *_54[1] = _63;
) -> no dependence
(compute_affine_dependence
  stmt_a: _48 = tmp[i_83][3];
  stmt_b: *_54[2] = _68;
) -> no dependence
(compute_affine_dependence
  stmt_a: _48 = tmp[i_83][3];
  stmt_b: *_54[3] = _73;
) -> no dependence
(compute_affine_dependence
  stmt_a: *_54[0] = _58;
  stmt_b: *_54[1] = _63;
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 1)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: *_54[0] = _58;
  stmt_b: *_54[2] = _68;
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: *_54[0] = _58;
  stmt_b: *_54[3] = _73;
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: *_54[1] = _63;
  stmt_b: *_54[2] = _68;
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: *_54[1] = _63;
  stmt_b: *_54[3] = _73;
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: *_54[2] = _68;
  stmt_b: *_54[3] = _73;
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _40 = tmp[i_83][0];
  stmt_b: _40 = tmp[i_83][0];
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 0)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_2)
  (chrec_b = {0, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _42 = tmp[i_83][1];
  stmt_b: _42 = tmp[i_83][1];
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_2)
  (chrec_b = {0, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _46 = tmp[i_83][2];
  stmt_b: _46 = tmp[i_83][2];
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_2)
  (chrec_b = {0, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _48 = tmp[i_83][3];
  stmt_b: _48 = tmp[i_83][3];
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_2)
  (chrec_b = {0, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: *_54[0] = _58;
  stmt_b: *_54[0] = _58;
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 0)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 8}_2)
  (chrec_b = {0B, +, 8}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: *_54[1] = _63;
  stmt_b: *_54[1] = _63;
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 8}_2)
  (chrec_b = {0B, +, 8}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: *_54[2] = _68;
  stmt_b: *_54[2] = _68;
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 8}_2)
  (chrec_b = {0B, +, 8}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: *_54[3] = _73;
  stmt_b: *_54[3] = _73;
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 8}_2)
  (chrec_b = {0B, +, 8}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/dct.c:59:5: note: === vect_determine_vectorization_factor ===
common/dct.c:59:5: note: ==> examining phi: i_83 = PHI <0(5), i_75(7)>

common/dct.c:59:5: note: ==> examining phi: .MEM_85 = PHI <.MEM_38(5), .MEM_74(7)>

common/dct.c:59:5: note: ==> examining phi: ivtmp_169 = PHI <4(5), ivtmp_168(7)>

common/dct.c:59:5: note: ==> examining statement: # DEBUG i => i_83

common/dct.c:59:5: note: skip.
common/dct.c:59:5: note: ==> examining statement: _40 = tmp[i_83][0];

common/dct.c:59:5: note: get vectype for scalar type:  short int
common/dct.c:59:5: note: vectype: vector(8) short int
common/dct.c:59:5: note: nunits = 8
common/dct.c:59:5: note: ==> examining statement: _41 = (int) _40;

common/dct.c:59:5: note: get vectype for scalar type:  int
common/dct.c:59:5: note: vectype: vector(4) int
common/dct.c:59:5: note: get vectype for scalar type:  short int
common/dct.c:59:5: note: vectype: vector(8) short int
common/dct.c:59:5: note: nunits = 8
common/dct.c:59:5: note: ==> examining statement: _42 = tmp[i_83][1];

common/dct.c:59:5: note: get vectype for scalar type:  short int
common/dct.c:59:5: note: vectype: vector(8) short int
common/dct.c:59:5: note: nunits = 8
common/dct.c:59:5: note: ==> examining statement: _43 = (int) _42;

common/dct.c:59:5: note: get vectype for scalar type:  int
common/dct.c:59:5: note: vectype: vector(4) int
common/dct.c:59:5: note: get vectype for scalar type:  short int
common/dct.c:59:5: note: vectype: vector(8) short int
common/dct.c:59:5: note: nunits = 8
common/dct.c:59:5: note: ==> examining statement: s01_44 = _41 + _43;

common/dct.c:59:5: note: get vectype for scalar type:  int
common/dct.c:59:5: note: vectype: vector(4) int
common/dct.c:59:5: note: get vectype for scalar type:  int
common/dct.c:59:5: note: vectype: vector(4) int
common/dct.c:59:5: note: nunits = 4
common/dct.c:59:5: note: ==> examining statement: # DEBUG s01 => s01_44

common/dct.c:59:5: note: skip.
common/dct.c:59:5: note: ==> examining statement: d01_45 = _41 - _43;

common/dct.c:59:5: note: get vectype for scalar type:  int
common/dct.c:59:5: note: vectype: vector(4) int
common/dct.c:59:5: note: get vectype for scalar type:  int
common/dct.c:59:5: note: vectype: vector(4) int
common/dct.c:59:5: note: nunits = 4
common/dct.c:59:5: note: ==> examining statement: # DEBUG d01 => d01_45

common/dct.c:59:5: note: skip.
common/dct.c:59:5: note: ==> examining statement: _46 = tmp[i_83][2];

common/dct.c:59:5: note: get vectype for scalar type:  short int
common/dct.c:59:5: note: vectype: vector(8) short int
common/dct.c:59:5: note: nunits = 8
common/dct.c:59:5: note: ==> examining statement: _47 = (int) _46;

common/dct.c:59:5: note: get vectype for scalar type:  int
common/dct.c:59:5: note: vectype: vector(4) int
common/dct.c:59:5: note: get vectype for scalar type:  short int
common/dct.c:59:5: note: vectype: vector(8) short int
common/dct.c:59:5: note: nunits = 8
common/dct.c:59:5: note: ==> examining statement: _48 = tmp[i_83][3];

common/dct.c:59:5: note: get vectype for scalar type:  short int
common/dct.c:59:5: note: vectype: vector(8) short int
common/dct.c:59:5: note: nunits = 8
common/dct.c:59:5: note: ==> examining statement: _49 = (int) _48;

common/dct.c:59:5: note: get vectype for scalar type:  int
common/dct.c:59:5: note: vectype: vector(4) int
common/dct.c:59:5: note: get vectype for scalar type:  short int
common/dct.c:59:5: note: vectype: vector(8) short int
common/dct.c:59:5: note: nunits = 8
common/dct.c:59:5: note: ==> examining statement: s23_50 = _47 + _49;

common/dct.c:59:5: note: get vectype for scalar type:  int
common/dct.c:59:5: note: vectype: vector(4) int
common/dct.c:59:5: note: get vectype for scalar type:  int
common/dct.c:59:5: note: vectype: vector(4) int
common/dct.c:59:5: note: nunits = 4
common/dct.c:59:5: note: ==> examining statement: # DEBUG s23 => s23_50

common/dct.c:59:5: note: skip.
common/dct.c:59:5: note: ==> examining statement: d23_51 = _47 - _49;

common/dct.c:59:5: note: get vectype for scalar type:  int
common/dct.c:59:5: note: vectype: vector(4) int
common/dct.c:59:5: note: get vectype for scalar type:  int
common/dct.c:59:5: note: vectype: vector(4) int
common/dct.c:59:5: note: nunits = 4
common/dct.c:59:5: note: ==> examining statement: # DEBUG d23 => d23_51

common/dct.c:59:5: note: skip.
common/dct.c:59:5: note: ==> examining statement: _52 = (long unsigned int) i_83;

common/dct.c:59:5: note: skip.
common/dct.c:59:5: note: ==> examining statement: _53 = _52 * 8;

common/dct.c:59:5: note: skip.
common/dct.c:59:5: note: ==> examining statement: _54 = d_8(D) + _53;

common/dct.c:59:5: note: skip.
common/dct.c:59:5: note: ==> examining statement: _55 = s01_44 + s23_50;

common/dct.c:59:5: note: get vectype for scalar type:  int
common/dct.c:59:5: note: vectype: vector(4) int
common/dct.c:59:5: note: get vectype for scalar type:  int
common/dct.c:59:5: note: vectype: vector(4) int
common/dct.c:59:5: note: nunits = 4
common/dct.c:59:5: note: ==> examining statement: _56 = _55 + 1;

common/dct.c:59:5: note: get vectype for scalar type:  int
common/dct.c:59:5: note: vectype: vector(4) int
common/dct.c:59:5: note: get vectype for scalar type:  int
common/dct.c:59:5: note: vectype: vector(4) int
common/dct.c:59:5: note: nunits = 4
common/dct.c:59:5: note: ==> examining statement: _57 = _56 >> 1;

common/dct.c:59:5: note: get vectype for scalar type:  int
common/dct.c:59:5: note: vectype: vector(4) int
common/dct.c:59:5: note: get vectype for scalar type:  int
common/dct.c:59:5: note: vectype: vector(4) int
common/dct.c:59:5: note: nunits = 4
common/dct.c:59:5: note: ==> examining statement: _58 = (short int) _57;

common/dct.c:59:5: note: get vectype for scalar type:  short int
common/dct.c:59:5: note: vectype: vector(8) short int
common/dct.c:59:5: note: get vectype for scalar type:  short int
common/dct.c:59:5: note: vectype: vector(8) short int
common/dct.c:59:5: note: nunits = 8
common/dct.c:59:5: note: ==> examining statement: *_54[0] = _58;

common/dct.c:59:5: note: get vectype for scalar type:  int16_t
common/dct.c:59:5: note: vectype: vector(8) short int
common/dct.c:59:5: note: nunits = 8
common/dct.c:59:5: note: ==> examining statement: _60 = s01_44 - s23_50;

common/dct.c:59:5: note: get vectype for scalar type:  int
common/dct.c:59:5: note: vectype: vector(4) int
common/dct.c:59:5: note: get vectype for scalar type:  int
common/dct.c:59:5: note: vectype: vector(4) int
common/dct.c:59:5: note: nunits = 4
common/dct.c:59:5: note: ==> examining statement: _61 = _60 + 1;

common/dct.c:59:5: note: get vectype for scalar type:  int
common/dct.c:59:5: note: vectype: vector(4) int
common/dct.c:59:5: note: get vectype for scalar type:  int
common/dct.c:59:5: note: vectype: vector(4) int
common/dct.c:59:5: note: nunits = 4
common/dct.c:59:5: note: ==> examining statement: _62 = _61 >> 1;

common/dct.c:59:5: note: get vectype for scalar type:  int
common/dct.c:59:5: note: vectype: vector(4) int
common/dct.c:59:5: note: get vectype for scalar type:  int
common/dct.c:59:5: note: vectype: vector(4) int
common/dct.c:59:5: note: nunits = 4
common/dct.c:59:5: note: ==> examining statement: _63 = (short int) _62;

common/dct.c:59:5: note: get vectype for scalar type:  short int
common/dct.c:59:5: note: vectype: vector(8) short int
common/dct.c:59:5: note: get vectype for scalar type:  short int
common/dct.c:59:5: note: vectype: vector(8) short int
common/dct.c:59:5: note: nunits = 8
common/dct.c:59:5: note: ==> examining statement: *_54[1] = _63;

common/dct.c:59:5: note: get vectype for scalar type:  int16_t
common/dct.c:59:5: note: vectype: vector(8) short int
common/dct.c:59:5: note: nunits = 8
common/dct.c:59:5: note: ==> examining statement: _65 = d01_45 - d23_51;

common/dct.c:59:5: note: get vectype for scalar type:  int
common/dct.c:59:5: note: vectype: vector(4) int
common/dct.c:59:5: note: get vectype for scalar type:  int
common/dct.c:59:5: note: vectype: vector(4) int
common/dct.c:59:5: note: nunits = 4
common/dct.c:59:5: note: ==> examining statement: _66 = _65 + 1;

common/dct.c:59:5: note: get vectype for scalar type:  int
common/dct.c:59:5: note: vectype: vector(4) int
common/dct.c:59:5: note: get vectype for scalar type:  int
common/dct.c:59:5: note: vectype: vector(4) int
common/dct.c:59:5: note: nunits = 4
common/dct.c:59:5: note: ==> examining statement: _67 = _66 >> 1;

common/dct.c:59:5: note: get vectype for scalar type:  int
common/dct.c:59:5: note: vectype: vector(4) int
common/dct.c:59:5: note: get vectype for scalar type:  int
common/dct.c:59:5: note: vectype: vector(4) int
common/dct.c:59:5: note: nunits = 4
common/dct.c:59:5: note: ==> examining statement: _68 = (short int) _67;

common/dct.c:59:5: note: get vectype for scalar type:  short int
common/dct.c:59:5: note: vectype: vector(8) short int
common/dct.c:59:5: note: get vectype for scalar type:  short int
common/dct.c:59:5: note: vectype: vector(8) short int
common/dct.c:59:5: note: nunits = 8
common/dct.c:59:5: note: ==> examining statement: *_54[2] = _68;

common/dct.c:59:5: note: get vectype for scalar type:  int16_t
common/dct.c:59:5: note: vectype: vector(8) short int
common/dct.c:59:5: note: nunits = 8
common/dct.c:59:5: note: ==> examining statement: _70 = d01_45 + d23_51;

common/dct.c:59:5: note: get vectype for scalar type:  int
common/dct.c:59:5: note: vectype: vector(4) int
common/dct.c:59:5: note: get vectype for scalar type:  int
common/dct.c:59:5: note: vectype: vector(4) int
common/dct.c:59:5: note: nunits = 4
common/dct.c:59:5: note: ==> examining statement: _71 = _70 + 1;

common/dct.c:59:5: note: get vectype for scalar type:  int
common/dct.c:59:5: note: vectype: vector(4) int
common/dct.c:59:5: note: get vectype for scalar type:  int
common/dct.c:59:5: note: vectype: vector(4) int
common/dct.c:59:5: note: nunits = 4
common/dct.c:59:5: note: ==> examining statement: _72 = _71 >> 1;

common/dct.c:59:5: note: get vectype for scalar type:  int
common/dct.c:59:5: note: vectype: vector(4) int
common/dct.c:59:5: note: get vectype for scalar type:  int
common/dct.c:59:5: note: vectype: vector(4) int
common/dct.c:59:5: note: nunits = 4
common/dct.c:59:5: note: ==> examining statement: _73 = (short int) _72;

common/dct.c:59:5: note: get vectype for scalar type:  short int
common/dct.c:59:5: note: vectype: vector(8) short int
common/dct.c:59:5: note: get vectype for scalar type:  short int
common/dct.c:59:5: note: vectype: vector(8) short int
common/dct.c:59:5: note: nunits = 8
common/dct.c:59:5: note: ==> examining statement: *_54[3] = _73;

common/dct.c:59:5: note: get vectype for scalar type:  int16_t
common/dct.c:59:5: note: vectype: vector(8) short int
common/dct.c:59:5: note: nunits = 8
common/dct.c:59:5: note: ==> examining statement: i_75 = i_83 + 1;

common/dct.c:59:5: note: skip.
common/dct.c:59:5: note: ==> examining statement: # DEBUG i => i_75

common/dct.c:59:5: note: skip.
common/dct.c:59:5: note: ==> examining statement: # DEBUG i => i_75

common/dct.c:59:5: note: skip.
common/dct.c:59:5: note: ==> examining statement: ivtmp_168 = ivtmp_169 - 1;

common/dct.c:59:5: note: skip.
common/dct.c:59:5: note: ==> examining statement: if (ivtmp_168 != 0)

common/dct.c:59:5: note: skip.
common/dct.c:59:5: note: vectorization factor = 8
common/dct.c:59:5: note: === vect_analyze_data_refs_alignment ===
common/dct.c:59:5: note: vect_compute_data_ref_alignment:
common/dct.c:59:5: note: misalign = 0 bytes of ref tmp[i_83][0]
common/dct.c:59:5: note: vect_compute_data_ref_alignment:
common/dct.c:59:5: note: misalign = 2 bytes of ref tmp[i_83][1]
common/dct.c:59:5: note: vect_compute_data_ref_alignment:
common/dct.c:59:5: note: misalign = 4 bytes of ref tmp[i_83][2]
common/dct.c:59:5: note: vect_compute_data_ref_alignment:
common/dct.c:59:5: note: misalign = 6 bytes of ref tmp[i_83][3]
common/dct.c:59:5: note: vect_compute_data_ref_alignment:
common/dct.c:59:5: note: can't force alignment of ref: *_54[0]
common/dct.c:59:5: note: vect_compute_data_ref_alignment:
common/dct.c:59:5: note: can't force alignment of ref: *_54[1]
common/dct.c:59:5: note: vect_compute_data_ref_alignment:
common/dct.c:59:5: note: can't force alignment of ref: *_54[2]
common/dct.c:59:5: note: vect_compute_data_ref_alignment:
common/dct.c:59:5: note: can't force alignment of ref: *_54[3]
common/dct.c:59:5: note: === vect_prune_runtime_alias_test_list ===
common/dct.c:59:5: note: === vect_enhance_data_refs_alignment ===
common/dct.c:59:5: note: vector alignment may not be reachable
common/dct.c:59:5: note: vect_can_advance_ivs_p:
common/dct.c:59:5: note: Analyze phi: i_83 = PHI <0(5), i_75(7)>

common/dct.c:59:5: note: Analyze phi: .MEM_85 = PHI <.MEM_38(5), .MEM_74(7)>

common/dct.c:59:5: note: virtual phi. skip.
common/dct.c:59:5: note: Analyze phi: ivtmp_169 = PHI <4(5), ivtmp_168(7)>

common/dct.c:59:5: note: Vectorizing an unaligned access.
common/dct.c:59:5: note: === vect_analyze_slp ===
common/dct.c:59:5: note: Build SLP for *_54[0] = _58;

common/dct.c:59:5: note: Build SLP for *_54[1] = _63;

common/dct.c:59:5: note: Build SLP for *_54[2] = _68;

common/dct.c:59:5: note: Build SLP for *_54[3] = _73;

common/dct.c:59:5: note: vect_is_simple_use: operand _58
common/dct.c:59:5: note: def_stmt: _58 = (short int) _57;
common/dct.c:59:5: note: type of def: 3.
common/dct.c:59:5: note: vect_is_simple_use: operand _63
common/dct.c:59:5: note: def_stmt: _63 = (short int) _62;
common/dct.c:59:5: note: type of def: 3.
common/dct.c:59:5: note: vect_is_simple_use: operand _68
common/dct.c:59:5: note: def_stmt: _68 = (short int) _67;
common/dct.c:59:5: note: type of def: 3.
common/dct.c:59:5: note: vect_is_simple_use: operand _73
common/dct.c:59:5: note: def_stmt: _73 = (short int) _72;
common/dct.c:59:5: note: type of def: 3.
common/dct.c:59:5: note: Build SLP for _58 = (short int) _57;

common/dct.c:59:5: note: Build SLP for _63 = (short int) _62;

common/dct.c:59:5: note: Build SLP for _68 = (short int) _67;

common/dct.c:59:5: note: Build SLP for _73 = (short int) _72;

common/dct.c:59:5: note: vect_is_simple_use: operand _57
common/dct.c:59:5: note: def_stmt: _57 = _56 >> 1;
common/dct.c:59:5: note: type of def: 3.
common/dct.c:59:5: note: vect_is_simple_use: operand _62
common/dct.c:59:5: note: def_stmt: _62 = _61 >> 1;
common/dct.c:59:5: note: type of def: 3.
common/dct.c:59:5: note: vect_is_simple_use: operand _67
common/dct.c:59:5: note: def_stmt: _67 = _66 >> 1;
common/dct.c:59:5: note: type of def: 3.
common/dct.c:59:5: note: vect_is_simple_use: operand _72
common/dct.c:59:5: note: def_stmt: _72 = _71 >> 1;
common/dct.c:59:5: note: type of def: 3.
common/dct.c:59:5: note: Build SLP for _57 = _56 >> 1;

common/dct.c:59:5: note: Build SLP for _62 = _61 >> 1;

common/dct.c:59:5: note: Build SLP for _67 = _66 >> 1;

common/dct.c:59:5: note: Build SLP for _72 = _71 >> 1;

common/dct.c:59:5: note: vect_is_simple_use: operand _56
common/dct.c:59:5: note: def_stmt: _56 = _55 + 1;
common/dct.c:59:5: note: type of def: 3.
common/dct.c:59:5: note: vect_is_simple_use: operand 1
common/dct.c:59:5: note: vect_is_simple_use: operand _61
common/dct.c:59:5: note: def_stmt: _61 = _60 + 1;
common/dct.c:59:5: note: type of def: 3.
common/dct.c:59:5: note: vect_is_simple_use: operand 1
common/dct.c:59:5: note: vect_is_simple_use: operand _66
common/dct.c:59:5: note: def_stmt: _66 = _65 + 1;
common/dct.c:59:5: note: type of def: 3.
common/dct.c:59:5: note: vect_is_simple_use: operand 1
common/dct.c:59:5: note: vect_is_simple_use: operand _71
common/dct.c:59:5: note: def_stmt: _71 = _70 + 1;
common/dct.c:59:5: note: type of def: 3.
common/dct.c:59:5: note: vect_is_simple_use: operand 1
common/dct.c:59:5: note: Build SLP for _56 = _55 + 1;

common/dct.c:59:5: note: Build SLP for _61 = _60 + 1;

common/dct.c:59:5: note: Build SLP for _66 = _65 + 1;

common/dct.c:59:5: note: Build SLP for _71 = _70 + 1;

common/dct.c:59:5: note: vect_is_simple_use: operand _55
common/dct.c:59:5: note: def_stmt: _55 = s01_44 + s23_50;
common/dct.c:59:5: note: type of def: 3.
common/dct.c:59:5: note: vect_is_simple_use: operand 1
common/dct.c:59:5: note: vect_is_simple_use: operand _60
common/dct.c:59:5: note: def_stmt: _60 = s01_44 - s23_50;
common/dct.c:59:5: note: type of def: 3.
common/dct.c:59:5: note: vect_is_simple_use: operand 1
common/dct.c:59:5: note: vect_is_simple_use: operand _65
common/dct.c:59:5: note: def_stmt: _65 = d01_45 - d23_51;
common/dct.c:59:5: note: type of def: 3.
common/dct.c:59:5: note: vect_is_simple_use: operand 1
common/dct.c:59:5: note: vect_is_simple_use: operand _70
common/dct.c:59:5: note: def_stmt: _70 = d01_45 + d23_51;
common/dct.c:59:5: note: type of def: 3.
common/dct.c:59:5: note: vect_is_simple_use: operand 1
common/dct.c:59:5: note: Build SLP for _55 = s01_44 + s23_50;

common/dct.c:59:5: note: Build SLP for _60 = s01_44 - s23_50;

common/dct.c:59:5: note: Build SLP failed: different operation in stmt _60 = s01_44 - s23_50;

common/dct.c:59:5: note: Build SLP for _65 = d01_45 - d23_51;

common/dct.c:59:5: note: Build SLP failed: different operation in stmt _65 = d01_45 - d23_51;

common/dct.c:59:5: note: Build SLP for _70 = d01_45 + d23_51;

common/dct.c:59:5: note: === vect_make_slp_decision ===
common/dct.c:59:5: note: === vect_detect_hybrid_slp ===
common/dct.c:59:5: note: === vect_analyze_loop_operations ===
common/dct.c:59:5: note: examining phi: i_83 = PHI <0(5), i_75(7)>

common/dct.c:59:5: note: examining phi: .MEM_85 = PHI <.MEM_38(5), .MEM_74(7)>

common/dct.c:59:5: note: examining phi: ivtmp_169 = PHI <4(5), ivtmp_168(7)>

common/dct.c:59:5: note: ==> examining statement: # DEBUG i => i_83
common/dct.c:59:5: note: irrelevant.
common/dct.c:59:5: note: ==> examining statement: _40 = tmp[i_83][0];
common/dct.c:59:5: note: num. args = 4 (not unary/binary/ternary op).
common/dct.c:59:5: note: vect_is_simple_use: operand tmp[i_83][0]
common/dct.c:59:5: note: not ssa-name.
common/dct.c:59:5: note: use not simple.
common/dct.c:59:5: note: no array mode for V8HI[4]
common/dct.c:59:5: note: vect_model_load_cost: strided group_size = 4 .
common/dct.c:59:5: note: vect_model_load_cost: aligned.
common/dct.c:59:5: note: vect_model_load_cost: inside_cost = 9, prologue_cost = 0 .
common/dct.c:59:5: note: ==> examining statement: _41 = (int) _40;
common/dct.c:59:5: note: vect_is_simple_use: operand _40
common/dct.c:59:5: note: def_stmt: _40 = tmp[i_83][0];
common/dct.c:59:5: note: type of def: 3.
common/dct.c:59:5: note: === vectorizable_conversion ===
common/dct.c:59:5: note: vect_model_promotion_demotion_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:59:5: note: ==> examining statement: _42 = tmp[i_83][1];
common/dct.c:59:5: note: num. args = 4 (not unary/binary/ternary op).
common/dct.c:59:5: note: vect_is_simple_use: operand tmp[i_83][1]
common/dct.c:59:5: note: not ssa-name.
common/dct.c:59:5: note: use not simple.
common/dct.c:59:5: note: no array mode for V8HI[4]
common/dct.c:59:5: note: vect_model_load_cost: aligned.
common/dct.c:59:5: note: vect_model_load_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:59:5: note: ==> examining statement: _43 = (int) _42;
common/dct.c:59:5: note: vect_is_simple_use: operand _42
common/dct.c:59:5: note: def_stmt: _42 = tmp[i_83][1];
common/dct.c:59:5: note: type of def: 3.
common/dct.c:59:5: note: === vectorizable_conversion ===
common/dct.c:59:5: note: vect_model_promotion_demotion_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:59:5: note: ==> examining statement: s01_44 = _41 + _43;
common/dct.c:59:5: note: vect_is_simple_use: operand _41
common/dct.c:59:5: note: def_stmt: _41 = (int) _40;
common/dct.c:59:5: note: type of def: 3.
common/dct.c:59:5: note: vect_is_simple_use: operand _43
common/dct.c:59:5: note: def_stmt: _43 = (int) _42;
common/dct.c:59:5: note: type of def: 3.
common/dct.c:59:5: note: === vectorizable_operation ===
common/dct.c:59:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:59:5: note: ==> examining statement: # DEBUG s01 => s01_44
common/dct.c:59:5: note: irrelevant.
common/dct.c:59:5: note: ==> examining statement: d01_45 = _41 - _43;
common/dct.c:59:5: note: vect_is_simple_use: operand _41
common/dct.c:59:5: note: def_stmt: _41 = (int) _40;
common/dct.c:59:5: note: type of def: 3.
common/dct.c:59:5: note: vect_is_simple_use: operand _43
common/dct.c:59:5: note: def_stmt: _43 = (int) _42;
common/dct.c:59:5: note: type of def: 3.
common/dct.c:59:5: note: === vectorizable_operation ===
common/dct.c:59:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:59:5: note: ==> examining statement: # DEBUG d01 => d01_45
common/dct.c:59:5: note: irrelevant.
common/dct.c:59:5: note: ==> examining statement: _46 = tmp[i_83][2];
common/dct.c:59:5: note: num. args = 4 (not unary/binary/ternary op).
common/dct.c:59:5: note: vect_is_simple_use: operand tmp[i_83][2]
common/dct.c:59:5: note: not ssa-name.
common/dct.c:59:5: note: use not simple.
common/dct.c:59:5: note: no array mode for V8HI[4]
common/dct.c:59:5: note: vect_model_load_cost: aligned.
common/dct.c:59:5: note: vect_model_load_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:59:5: note: ==> examining statement: _47 = (int) _46;
common/dct.c:59:5: note: vect_is_simple_use: operand _46
common/dct.c:59:5: note: def_stmt: _46 = tmp[i_83][2];
common/dct.c:59:5: note: type of def: 3.
common/dct.c:59:5: note: === vectorizable_conversion ===
common/dct.c:59:5: note: vect_model_promotion_demotion_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:59:5: note: ==> examining statement: _48 = tmp[i_83][3];
common/dct.c:59:5: note: num. args = 4 (not unary/binary/ternary op).
common/dct.c:59:5: note: vect_is_simple_use: operand tmp[i_83][3]
common/dct.c:59:5: note: not ssa-name.
common/dct.c:59:5: note: use not simple.
common/dct.c:59:5: note: no array mode for V8HI[4]
common/dct.c:59:5: note: vect_model_load_cost: aligned.
common/dct.c:59:5: note: vect_model_load_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:59:5: note: ==> examining statement: _49 = (int) _48;
common/dct.c:59:5: note: vect_is_simple_use: operand _48
common/dct.c:59:5: note: def_stmt: _48 = tmp[i_83][3];
common/dct.c:59:5: note: type of def: 3.
common/dct.c:59:5: note: === vectorizable_conversion ===
common/dct.c:59:5: note: vect_model_promotion_demotion_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:59:5: note: ==> examining statement: s23_50 = _47 + _49;
common/dct.c:59:5: note: vect_is_simple_use: operand _47
common/dct.c:59:5: note: def_stmt: _47 = (int) _46;
common/dct.c:59:5: note: type of def: 3.
common/dct.c:59:5: note: vect_is_simple_use: operand _49
common/dct.c:59:5: note: def_stmt: _49 = (int) _48;
common/dct.c:59:5: note: type of def: 3.
common/dct.c:59:5: note: === vectorizable_operation ===
common/dct.c:59:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:59:5: note: ==> examining statement: # DEBUG s23 => s23_50
common/dct.c:59:5: note: irrelevant.
common/dct.c:59:5: note: ==> examining statement: d23_51 = _47 - _49;
common/dct.c:59:5: note: vect_is_simple_use: operand _47
common/dct.c:59:5: note: def_stmt: _47 = (int) _46;
common/dct.c:59:5: note: type of def: 3.
common/dct.c:59:5: note: vect_is_simple_use: operand _49
common/dct.c:59:5: note: def_stmt: _49 = (int) _48;
common/dct.c:59:5: note: type of def: 3.
common/dct.c:59:5: note: === vectorizable_operation ===
common/dct.c:59:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:59:5: note: ==> examining statement: # DEBUG d23 => d23_51
common/dct.c:59:5: note: irrelevant.
common/dct.c:59:5: note: ==> examining statement: _52 = (long unsigned int) i_83;
common/dct.c:59:5: note: irrelevant.
common/dct.c:59:5: note: ==> examining statement: _53 = _52 * 8;
common/dct.c:59:5: note: irrelevant.
common/dct.c:59:5: note: ==> examining statement: _54 = d_8(D) + _53;
common/dct.c:59:5: note: irrelevant.
common/dct.c:59:5: note: ==> examining statement: _55 = s01_44 + s23_50;
common/dct.c:59:5: note: vect_is_simple_use: operand s01_44
common/dct.c:59:5: note: def_stmt: s01_44 = _41 + _43;
common/dct.c:59:5: note: type of def: 3.
common/dct.c:59:5: note: vect_is_simple_use: operand s23_50
common/dct.c:59:5: note: def_stmt: s23_50 = _47 + _49;
common/dct.c:59:5: note: type of def: 3.
common/dct.c:59:5: note: === vectorizable_operation ===
common/dct.c:59:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:59:5: note: ==> examining statement: _56 = _55 + 1;
common/dct.c:59:5: note: vect_is_simple_use: operand _55
common/dct.c:59:5: note: def_stmt: _55 = s01_44 + s23_50;
common/dct.c:59:5: note: type of def: 3.
common/dct.c:59:5: note: vect_is_simple_use: operand 1
common/dct.c:59:5: note: === vectorizable_operation ===
common/dct.c:59:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 1 .
common/dct.c:59:5: note: ==> examining statement: _57 = _56 >> 1;
common/dct.c:59:5: note: vect_is_simple_use: operand _56
common/dct.c:59:5: note: def_stmt: _56 = _55 + 1;
common/dct.c:59:5: note: type of def: 3.
common/dct.c:59:5: note: vect_is_simple_use: operand 1
common/dct.c:59:5: note: vector/scalar shift/rotate found.
common/dct.c:59:5: note: === vectorizable_shift ===
common/dct.c:59:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 1 .
common/dct.c:59:5: note: ==> examining statement: _58 = (short int) _57;
common/dct.c:59:5: note: vect_is_simple_use: operand _57
common/dct.c:59:5: note: def_stmt: _57 = _56 >> 1;
common/dct.c:59:5: note: type of def: 3.
common/dct.c:59:5: note: === vectorizable_conversion ===
common/dct.c:59:5: note: vect_model_promotion_demotion_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:59:5: note: ==> examining statement: *_54[0] = _58;
common/dct.c:59:5: note: vect_is_simple_use: operand _58
common/dct.c:59:5: note: def_stmt: _58 = (short int) _57;
common/dct.c:59:5: note: type of def: 3.
common/dct.c:59:5: note: no array mode for V8HI[4]
common/dct.c:59:5: note: vect_is_simple_use: operand _63
common/dct.c:59:5: note: def_stmt: _63 = (short int) _62;
common/dct.c:59:5: note: type of def: 3.
common/dct.c:59:5: note: vect_is_simple_use: operand _68
common/dct.c:59:5: note: def_stmt: _68 = (short int) _67;
common/dct.c:59:5: note: type of def: 3.
common/dct.c:59:5: note: vect_is_simple_use: operand _73
common/dct.c:59:5: note: def_stmt: _73 = (short int) _72;
common/dct.c:59:5: note: type of def: 3.
common/dct.c:59:5: note: vect_model_store_cost: strided group_size = 4 .
common/dct.c:59:5: note: vect_model_store_cost: unaligned supported by hardware.
common/dct.c:59:5: note: vect_model_store_cost: inside_cost = 10, prologue_cost = 0 .
common/dct.c:59:5: note: ==> examining statement: _60 = s01_44 - s23_50;
common/dct.c:59:5: note: vect_is_simple_use: operand s01_44
common/dct.c:59:5: note: def_stmt: s01_44 = _41 + _43;
common/dct.c:59:5: note: type of def: 3.
common/dct.c:59:5: note: vect_is_simple_use: operand s23_50
common/dct.c:59:5: note: def_stmt: s23_50 = _47 + _49;
common/dct.c:59:5: note: type of def: 3.
common/dct.c:59:5: note: === vectorizable_operation ===
common/dct.c:59:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:59:5: note: ==> examining statement: _61 = _60 + 1;
common/dct.c:59:5: note: vect_is_simple_use: operand _60
common/dct.c:59:5: note: def_stmt: _60 = s01_44 - s23_50;
common/dct.c:59:5: note: type of def: 3.
common/dct.c:59:5: note: vect_is_simple_use: operand 1
common/dct.c:59:5: note: === vectorizable_operation ===
common/dct.c:59:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 1 .
common/dct.c:59:5: note: ==> examining statement: _62 = _61 >> 1;
common/dct.c:59:5: note: vect_is_simple_use: operand _61
common/dct.c:59:5: note: def_stmt: _61 = _60 + 1;
common/dct.c:59:5: note: type of def: 3.
common/dct.c:59:5: note: vect_is_simple_use: operand 1
common/dct.c:59:5: note: vector/scalar shift/rotate found.
common/dct.c:59:5: note: === vectorizable_shift ===
common/dct.c:59:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 1 .
common/dct.c:59:5: note: ==> examining statement: _63 = (short int) _62;
common/dct.c:59:5: note: vect_is_simple_use: operand _62
common/dct.c:59:5: note: def_stmt: _62 = _61 >> 1;
common/dct.c:59:5: note: type of def: 3.
common/dct.c:59:5: note: === vectorizable_conversion ===
common/dct.c:59:5: note: vect_model_promotion_demotion_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:59:5: note: ==> examining statement: *_54[1] = _63;
common/dct.c:59:5: note: vect_is_simple_use: operand _63
common/dct.c:59:5: note: def_stmt: _63 = (short int) _62;
common/dct.c:59:5: note: type of def: 3.
common/dct.c:59:5: note: no array mode for V8HI[4]
common/dct.c:59:5: note: vect_model_store_cost: unaligned supported by hardware.
common/dct.c:59:5: note: vect_model_store_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:59:5: note: ==> examining statement: _65 = d01_45 - d23_51;
common/dct.c:59:5: note: vect_is_simple_use: operand d01_45
common/dct.c:59:5: note: def_stmt: d01_45 = _41 - _43;
common/dct.c:59:5: note: type of def: 3.
common/dct.c:59:5: note: vect_is_simple_use: operand d23_51
common/dct.c:59:5: note: def_stmt: d23_51 = _47 - _49;
common/dct.c:59:5: note: type of def: 3.
common/dct.c:59:5: note: === vectorizable_operation ===
common/dct.c:59:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:59:5: note: ==> examining statement: _66 = _65 + 1;
common/dct.c:59:5: note: vect_is_simple_use: operand _65
common/dct.c:59:5: note: def_stmt: _65 = d01_45 - d23_51;
common/dct.c:59:5: note: type of def: 3.
common/dct.c:59:5: note: vect_is_simple_use: operand 1
common/dct.c:59:5: note: === vectorizable_operation ===
common/dct.c:59:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 1 .
common/dct.c:59:5: note: ==> examining statement: _67 = _66 >> 1;
common/dct.c:59:5: note: vect_is_simple_use: operand _66
common/dct.c:59:5: note: def_stmt: _66 = _65 + 1;
common/dct.c:59:5: note: type of def: 3.
common/dct.c:59:5: note: vect_is_simple_use: operand 1
common/dct.c:59:5: note: vector/scalar shift/rotate found.
common/dct.c:59:5: note: === vectorizable_shift ===
common/dct.c:59:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 1 .
common/dct.c:59:5: note: ==> examining statement: _68 = (short int) _67;
common/dct.c:59:5: note: vect_is_simple_use: operand _67
common/dct.c:59:5: note: def_stmt: _67 = _66 >> 1;
common/dct.c:59:5: note: type of def: 3.
common/dct.c:59:5: note: === vectorizable_conversion ===
common/dct.c:59:5: note: vect_model_promotion_demotion_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:59:5: note: ==> examining statement: *_54[2] = _68;
common/dct.c:59:5: note: vect_is_simple_use: operand _68
common/dct.c:59:5: note: def_stmt: _68 = (short int) _67;
common/dct.c:59:5: note: type of def: 3.
common/dct.c:59:5: note: no array mode for V8HI[4]
common/dct.c:59:5: note: vect_model_store_cost: unaligned supported by hardware.
common/dct.c:59:5: note: vect_model_store_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:59:5: note: ==> examining statement: _70 = d01_45 + d23_51;
common/dct.c:59:5: note: vect_is_simple_use: operand d01_45
common/dct.c:59:5: note: def_stmt: d01_45 = _41 - _43;
common/dct.c:59:5: note: type of def: 3.
common/dct.c:59:5: note: vect_is_simple_use: operand d23_51
common/dct.c:59:5: note: def_stmt: d23_51 = _47 - _49;
common/dct.c:59:5: note: type of def: 3.
common/dct.c:59:5: note: === vectorizable_operation ===
common/dct.c:59:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:59:5: note: ==> examining statement: _71 = _70 + 1;
common/dct.c:59:5: note: vect_is_simple_use: operand _70
common/dct.c:59:5: note: def_stmt: _70 = d01_45 + d23_51;
common/dct.c:59:5: note: type of def: 3.
common/dct.c:59:5: note: vect_is_simple_use: operand 1
common/dct.c:59:5: note: === vectorizable_operation ===
common/dct.c:59:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 1 .
common/dct.c:59:5: note: ==> examining statement: _72 = _71 >> 1;
common/dct.c:59:5: note: vect_is_simple_use: operand _71
common/dct.c:59:5: note: def_stmt: _71 = _70 + 1;
common/dct.c:59:5: note: type of def: 3.
common/dct.c:59:5: note: vect_is_simple_use: operand 1
common/dct.c:59:5: note: vector/scalar shift/rotate found.
common/dct.c:59:5: note: === vectorizable_shift ===
common/dct.c:59:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 1 .
common/dct.c:59:5: note: ==> examining statement: _73 = (short int) _72;
common/dct.c:59:5: note: vect_is_simple_use: operand _72
common/dct.c:59:5: note: def_stmt: _72 = _71 >> 1;
common/dct.c:59:5: note: type of def: 3.
common/dct.c:59:5: note: === vectorizable_conversion ===
common/dct.c:59:5: note: vect_model_promotion_demotion_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:59:5: note: ==> examining statement: *_54[3] = _73;
common/dct.c:59:5: note: vect_is_simple_use: operand _73
common/dct.c:59:5: note: def_stmt: _73 = (short int) _72;
common/dct.c:59:5: note: type of def: 3.
common/dct.c:59:5: note: no array mode for V8HI[4]
common/dct.c:59:5: note: vect_model_store_cost: unaligned supported by hardware.
common/dct.c:59:5: note: vect_model_store_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:59:5: note: ==> examining statement: i_75 = i_83 + 1;
common/dct.c:59:5: note: irrelevant.
common/dct.c:59:5: note: ==> examining statement: # DEBUG i => i_75
common/dct.c:59:5: note: irrelevant.
common/dct.c:59:5: note: ==> examining statement: # DEBUG i => i_75
common/dct.c:59:5: note: irrelevant.
common/dct.c:59:5: note: ==> examining statement: ivtmp_168 = ivtmp_169 - 1;
common/dct.c:59:5: note: irrelevant.
common/dct.c:59:5: note: ==> examining statement: if (ivtmp_168 != 0)
common/dct.c:59:5: note: irrelevant.
common/dct.c:59:5: note: vectorization_factor = 8, niters = 4
common/dct.c:59:5: note: not vectorized: iteration count too small.
common/dct.c:59:5: note: not vectorized: iteration count smaller than vectorization factor.
common/dct.c:59:5: note: bad operation or unsupported loop bound.

Analyzing loop at common/dct.c:46
common/dct.c:46:5: note: ===== analyze_loop_nest =====
common/dct.c:46:5: note: === vect_analyze_loop_form ===
common/dct.c:46:5: note: === get_loop_niters ===
Analyzing # of iterations of loop 1
  exit condition [3, + , 4294967295] != 0
  bounds on difference of bases: -3 ... -3
  result:
    # of iterations 3, bounded by 3
common/dct.c:46:5: note: === vect_analyze_data_refs ===
Creating dr for *_9[0]
analyze_innermost: success.
	base_address: d_8(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 128
	base_object: *d_8(D)
	Access function 0: 0
	Access function 1: {0B, +, 8}_1
Creating dr for *_9[1]
analyze_innermost: success.
	base_address: d_8(D)
	offset from base address: 0
	constant offset from base address: 2
	step: 8
	aligned to: 128
	base_object: *d_8(D)
	Access function 0: 1
	Access function 1: {0B, +, 8}_1
Creating dr for *_9[2]
analyze_innermost: success.
	base_address: d_8(D)
	offset from base address: 0
	constant offset from base address: 4
	step: 8
	aligned to: 128
	base_object: *d_8(D)
	Access function 0: 2
	Access function 1: {0B, +, 8}_1
Creating dr for *_9[3]
analyze_innermost: success.
	base_address: d_8(D)
	offset from base address: 0
	constant offset from base address: 6
	step: 8
	aligned to: 128
	base_object: *d_8(D)
	Access function 0: 3
	Access function 1: {0B, +, 8}_1
Creating dr for tmp[0][i_82]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &tmp
	offset from base address: 0
	constant offset from base address: 0
	step: 2
	aligned to: 128
	base_object: tmp
	Access function 0: {0, +, 1}_1
	Access function 1: 0
Creating dr for tmp[1][i_82]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &tmp
	offset from base address: 0
	constant offset from base address: 8
	step: 2
	aligned to: 128
	base_object: tmp
	Access function 0: {0, +, 1}_1
	Access function 1: 1
Creating dr for tmp[2][i_82]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &tmp
	offset from base address: 0
	constant offset from base address: 16
	step: 2
	aligned to: 128
	base_object: tmp
	Access function 0: {0, +, 1}_1
	Access function 1: 2
Creating dr for tmp[3][i_82]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &tmp
	offset from base address: 0
	constant offset from base address: 24
	step: 2
	aligned to: 128
	base_object: tmp
	Access function 0: {0, +, 1}_1
	Access function 1: 3
common/dct.c:46:5: note: got vectype for stmt: _10 = *_9[0];
vector(8) short int
common/dct.c:46:5: note: got vectype for stmt: _13 = *_9[1];
vector(8) short int
common/dct.c:46:5: note: got vectype for stmt: _17 = *_9[2];
vector(8) short int
common/dct.c:46:5: note: got vectype for stmt: _19 = *_9[3];
vector(8) short int
common/dct.c:46:5: note: got vectype for stmt: tmp[0][i_82] = _26;
vector(8) short int
common/dct.c:46:5: note: got vectype for stmt: tmp[1][i_82] = _29;
vector(8) short int
common/dct.c:46:5: note: got vectype for stmt: tmp[2][i_82] = _34;
vector(8) short int
common/dct.c:46:5: note: got vectype for stmt: tmp[3][i_82] = _37;
vector(8) short int
common/dct.c:46:5: note: === vect_analyze_scalar_cycles ===
common/dct.c:46:5: note: Analyze phi: i_82 = PHI <i_39(4), 0(2)>

common/dct.c:46:5: note: Access function of PHI: {0, +, 1}_1
common/dct.c:46:5: note: step: 1,  init: 0
common/dct.c:46:5: note: Detected induction.
common/dct.c:46:5: note: Analyze phi: .MEM_84 = PHI <.MEM_38(4), .MEM_5(D)(2)>

common/dct.c:46:5: note: Analyze phi: ivtmp_167 = PHI <ivtmp_166(4), 4(2)>

common/dct.c:46:5: note: Access function of PHI: {4, +, 4294967295}_1
common/dct.c:46:5: note: step: 4294967295,  init: 4
common/dct.c:46:5: note: Detected induction.
common/dct.c:46:5: note: === vect_pattern_recog ===
common/dct.c:46:5: note: vect_is_simple_use: operand _6
common/dct.c:46:5: note: def_stmt: _6 = (long unsigned int) i_82;
common/dct.c:46:5: note: type of def: 3.
common/dct.c:46:5: note: vect_is_simple_use: operand i_82
common/dct.c:46:5: note: def_stmt: i_82 = PHI <i_39(4), 0(2)>
common/dct.c:46:5: note: type of def: 4.
common/dct.c:46:5: note: vect_is_simple_use: operand 8
common/dct.c:46:5: note: === vect_analyze_data_ref_accesses ===
common/dct.c:46:5: note: Detected interleaving *_9[0] and *_9[1]
common/dct.c:46:5: note: Detected interleaving *_9[0] and *_9[2]
common/dct.c:46:5: note: Detected interleaving *_9[0] and *_9[3]
common/dct.c:46:5: note: Detected interleaving of size 4
common/dct.c:46:5: note: === vect_mark_stmts_to_be_vectorized ===
common/dct.c:46:5: note: init: phi relevant? i_82 = PHI <i_39(4), 0(2)>
common/dct.c:46:5: note: init: phi relevant? .MEM_84 = PHI <.MEM_38(4), .MEM_5(D)(2)>
common/dct.c:46:5: note: init: phi relevant? ivtmp_167 = PHI <ivtmp_166(4), 4(2)>
common/dct.c:46:5: note: init: stmt relevant? # DEBUG i => i_82
common/dct.c:46:5: note: init: stmt relevant? _6 = (long unsigned int) i_82;
common/dct.c:46:5: note: init: stmt relevant? _7 = _6 * 8;
common/dct.c:46:5: note: init: stmt relevant? _9 = d_8(D) + _7;
common/dct.c:46:5: note: init: stmt relevant? _10 = *_9[0];
common/dct.c:46:5: note: init: stmt relevant? _11 = (int) _10;
common/dct.c:46:5: note: init: stmt relevant? _13 = *_9[1];
common/dct.c:46:5: note: init: stmt relevant? _14 = (int) _13;
common/dct.c:46:5: note: init: stmt relevant? s01_15 = _11 + _14;
common/dct.c:46:5: note: init: stmt relevant? # DEBUG s01 => s01_15
common/dct.c:46:5: note: init: stmt relevant? d01_16 = _11 - _14;
common/dct.c:46:5: note: init: stmt relevant? # DEBUG d01 => d01_16
common/dct.c:46:5: note: init: stmt relevant? _17 = *_9[2];
common/dct.c:46:5: note: init: stmt relevant? _18 = (int) _17;
common/dct.c:46:5: note: init: stmt relevant? _19 = *_9[3];
common/dct.c:46:5: note: init: stmt relevant? _20 = (int) _19;
common/dct.c:46:5: note: init: stmt relevant? s23_21 = _18 + _20;
common/dct.c:46:5: note: init: stmt relevant? # DEBUG s23 => s23_21
common/dct.c:46:5: note: init: stmt relevant? d23_22 = _18 - _20;
common/dct.c:46:5: note: init: stmt relevant? # DEBUG d23 => d23_22
common/dct.c:46:5: note: init: stmt relevant? _23 = (unsigned short) s01_15;
common/dct.c:46:5: note: init: stmt relevant? _24 = (unsigned short) s23_21;
common/dct.c:46:5: note: init: stmt relevant? _25 = _23 + _24;
common/dct.c:46:5: note: init: stmt relevant? _26 = (short int) _25;
common/dct.c:46:5: note: init: stmt relevant? tmp[0][i_82] = _26;
common/dct.c:46:5: note: vec_stmt_relevant_p: stmt has vdefs.
common/dct.c:46:5: note: mark relevant 4, live 0.
common/dct.c:46:5: note: init: stmt relevant? _28 = _23 - _24;
common/dct.c:46:5: note: init: stmt relevant? _29 = (short int) _28;
common/dct.c:46:5: note: init: stmt relevant? tmp[1][i_82] = _29;
common/dct.c:46:5: note: vec_stmt_relevant_p: stmt has vdefs.
common/dct.c:46:5: note: mark relevant 4, live 0.
common/dct.c:46:5: note: init: stmt relevant? _31 = (unsigned short) d01_16;
common/dct.c:46:5: note: init: stmt relevant? _32 = (unsigned short) d23_22;
common/dct.c:46:5: note: init: stmt relevant? _33 = _31 - _32;
common/dct.c:46:5: note: init: stmt relevant? _34 = (short int) _33;
common/dct.c:46:5: note: init: stmt relevant? tmp[2][i_82] = _34;
common/dct.c:46:5: note: vec_stmt_relevant_p: stmt has vdefs.
common/dct.c:46:5: note: mark relevant 4, live 0.
common/dct.c:46:5: note: init: stmt relevant? _36 = _31 + _32;
common/dct.c:46:5: note: init: stmt relevant? _37 = (short int) _36;
common/dct.c:46:5: note: init: stmt relevant? tmp[3][i_82] = _37;
common/dct.c:46:5: note: vec_stmt_relevant_p: stmt has vdefs.
common/dct.c:46:5: note: mark relevant 4, live 0.
common/dct.c:46:5: note: init: stmt relevant? i_39 = i_82 + 1;
common/dct.c:46:5: note: init: stmt relevant? # DEBUG i => i_39
common/dct.c:46:5: note: init: stmt relevant? # DEBUG i => i_39
common/dct.c:46:5: note: init: stmt relevant? ivtmp_166 = ivtmp_167 - 1;
common/dct.c:46:5: note: init: stmt relevant? if (ivtmp_166 != 0)
common/dct.c:46:5: note: worklist: examine stmt: tmp[3][i_82] = _37;
common/dct.c:46:5: note: vect_is_simple_use: operand _37
common/dct.c:46:5: note: def_stmt: _37 = (short int) _36;
common/dct.c:46:5: note: type of def: 3.
common/dct.c:46:5: note: mark relevant 4, live 0.
common/dct.c:46:5: note: worklist: examine stmt: _37 = (short int) _36;
common/dct.c:46:5: note: vect_is_simple_use: operand _36
common/dct.c:46:5: note: def_stmt: _36 = _31 + _32;
common/dct.c:46:5: note: type of def: 3.
common/dct.c:46:5: note: mark relevant 4, live 0.
common/dct.c:46:5: note: worklist: examine stmt: _36 = _31 + _32;
common/dct.c:46:5: note: vect_is_simple_use: operand _31
common/dct.c:46:5: note: def_stmt: _31 = (unsigned short) d01_16;
common/dct.c:46:5: note: type of def: 3.
common/dct.c:46:5: note: mark relevant 4, live 0.
common/dct.c:46:5: note: vect_is_simple_use: operand _32
common/dct.c:46:5: note: def_stmt: _32 = (unsigned short) d23_22;
common/dct.c:46:5: note: type of def: 3.
common/dct.c:46:5: note: mark relevant 4, live 0.
common/dct.c:46:5: note: worklist: examine stmt: _32 = (unsigned short) d23_22;
common/dct.c:46:5: note: vect_is_simple_use: operand d23_22
common/dct.c:46:5: note: def_stmt: d23_22 = _18 - _20;
common/dct.c:46:5: note: type of def: 3.
common/dct.c:46:5: note: mark relevant 4, live 0.
common/dct.c:46:5: note: worklist: examine stmt: d23_22 = _18 - _20;
common/dct.c:46:5: note: vect_is_simple_use: operand _18
common/dct.c:46:5: note: def_stmt: _18 = (int) _17;
common/dct.c:46:5: note: type of def: 3.
common/dct.c:46:5: note: mark relevant 4, live 0.
common/dct.c:46:5: note: vect_is_simple_use: operand _20
common/dct.c:46:5: note: def_stmt: _20 = (int) _19;
common/dct.c:46:5: note: type of def: 3.
common/dct.c:46:5: note: mark relevant 4, live 0.
common/dct.c:46:5: note: worklist: examine stmt: _20 = (int) _19;
common/dct.c:46:5: note: vect_is_simple_use: operand _19
common/dct.c:46:5: note: def_stmt: _19 = *_9[3];
common/dct.c:46:5: note: type of def: 3.
common/dct.c:46:5: note: mark relevant 4, live 0.
common/dct.c:46:5: note: worklist: examine stmt: _19 = *_9[3];
common/dct.c:46:5: note: worklist: examine stmt: _18 = (int) _17;
common/dct.c:46:5: note: vect_is_simple_use: operand _17
common/dct.c:46:5: note: def_stmt: _17 = *_9[2];
common/dct.c:46:5: note: type of def: 3.
common/dct.c:46:5: note: mark relevant 4, live 0.
common/dct.c:46:5: note: worklist: examine stmt: _17 = *_9[2];
common/dct.c:46:5: note: worklist: examine stmt: _31 = (unsigned short) d01_16;
common/dct.c:46:5: note: vect_is_simple_use: operand d01_16
common/dct.c:46:5: note: def_stmt: d01_16 = _11 - _14;
common/dct.c:46:5: note: type of def: 3.
common/dct.c:46:5: note: mark relevant 4, live 0.
common/dct.c:46:5: note: worklist: examine stmt: d01_16 = _11 - _14;
common/dct.c:46:5: note: vect_is_simple_use: operand _11
common/dct.c:46:5: note: def_stmt: _11 = (int) _10;
common/dct.c:46:5: note: type of def: 3.
common/dct.c:46:5: note: mark relevant 4, live 0.
common/dct.c:46:5: note: vect_is_simple_use: operand _14
common/dct.c:46:5: note: def_stmt: _14 = (int) _13;
common/dct.c:46:5: note: type of def: 3.
common/dct.c:46:5: note: mark relevant 4, live 0.
common/dct.c:46:5: note: worklist: examine stmt: _14 = (int) _13;
common/dct.c:46:5: note: vect_is_simple_use: operand _13
common/dct.c:46:5: note: def_stmt: _13 = *_9[1];
common/dct.c:46:5: note: type of def: 3.
common/dct.c:46:5: note: mark relevant 4, live 0.
common/dct.c:46:5: note: worklist: examine stmt: _13 = *_9[1];
common/dct.c:46:5: note: worklist: examine stmt: _11 = (int) _10;
common/dct.c:46:5: note: vect_is_simple_use: operand _10
common/dct.c:46:5: note: def_stmt: _10 = *_9[0];
common/dct.c:46:5: note: type of def: 3.
common/dct.c:46:5: note: mark relevant 4, live 0.
common/dct.c:46:5: note: worklist: examine stmt: _10 = *_9[0];
common/dct.c:46:5: note: worklist: examine stmt: tmp[2][i_82] = _34;
common/dct.c:46:5: note: vect_is_simple_use: operand _34
common/dct.c:46:5: note: def_stmt: _34 = (short int) _33;
common/dct.c:46:5: note: type of def: 3.
common/dct.c:46:5: note: mark relevant 4, live 0.
common/dct.c:46:5: note: worklist: examine stmt: _34 = (short int) _33;
common/dct.c:46:5: note: vect_is_simple_use: operand _33
common/dct.c:46:5: note: def_stmt: _33 = _31 - _32;
common/dct.c:46:5: note: type of def: 3.
common/dct.c:46:5: note: mark relevant 4, live 0.
common/dct.c:46:5: note: worklist: examine stmt: _33 = _31 - _32;
common/dct.c:46:5: note: vect_is_simple_use: operand _31
common/dct.c:46:5: note: def_stmt: _31 = (unsigned short) d01_16;
common/dct.c:46:5: note: type of def: 3.
common/dct.c:46:5: note: mark relevant 4, live 0.
common/dct.c:46:5: note: already marked relevant/live.
common/dct.c:46:5: note: vect_is_simple_use: operand _32
common/dct.c:46:5: note: def_stmt: _32 = (unsigned short) d23_22;
common/dct.c:46:5: note: type of def: 3.
common/dct.c:46:5: note: mark relevant 4, live 0.
common/dct.c:46:5: note: already marked relevant/live.
common/dct.c:46:5: note: worklist: examine stmt: tmp[1][i_82] = _29;
common/dct.c:46:5: note: vect_is_simple_use: operand _29
common/dct.c:46:5: note: def_stmt: _29 = (short int) _28;
common/dct.c:46:5: note: type of def: 3.
common/dct.c:46:5: note: mark relevant 4, live 0.
common/dct.c:46:5: note: worklist: examine stmt: _29 = (short int) _28;
common/dct.c:46:5: note: vect_is_simple_use: operand _28
common/dct.c:46:5: note: def_stmt: _28 = _23 - _24;
common/dct.c:46:5: note: type of def: 3.
common/dct.c:46:5: note: mark relevant 4, live 0.
common/dct.c:46:5: note: worklist: examine stmt: _28 = _23 - _24;
common/dct.c:46:5: note: vect_is_simple_use: operand _23
common/dct.c:46:5: note: def_stmt: _23 = (unsigned short) s01_15;
common/dct.c:46:5: note: type of def: 3.
common/dct.c:46:5: note: mark relevant 4, live 0.
common/dct.c:46:5: note: vect_is_simple_use: operand _24
common/dct.c:46:5: note: def_stmt: _24 = (unsigned short) s23_21;
common/dct.c:46:5: note: type of def: 3.
common/dct.c:46:5: note: mark relevant 4, live 0.
common/dct.c:46:5: note: worklist: examine stmt: _24 = (unsigned short) s23_21;
common/dct.c:46:5: note: vect_is_simple_use: operand s23_21
common/dct.c:46:5: note: def_stmt: s23_21 = _18 + _20;
common/dct.c:46:5: note: type of def: 3.
common/dct.c:46:5: note: mark relevant 4, live 0.
common/dct.c:46:5: note: worklist: examine stmt: s23_21 = _18 + _20;
common/dct.c:46:5: note: vect_is_simple_use: operand _18
common/dct.c:46:5: note: def_stmt: _18 = (int) _17;
common/dct.c:46:5: note: type of def: 3.
common/dct.c:46:5: note: mark relevant 4, live 0.
common/dct.c:46:5: note: already marked relevant/live.
common/dct.c:46:5: note: vect_is_simple_use: operand _20
common/dct.c:46:5: note: def_stmt: _20 = (int) _19;
common/dct.c:46:5: note: type of def: 3.
common/dct.c:46:5: note: mark relevant 4, live 0.
common/dct.c:46:5: note: already marked relevant/live.
common/dct.c:46:5: note: worklist: examine stmt: _23 = (unsigned short) s01_15;
common/dct.c:46:5: note: vect_is_simple_use: operand s01_15
common/dct.c:46:5: note: def_stmt: s01_15 = _11 + _14;
common/dct.c:46:5: note: type of def: 3.
common/dct.c:46:5: note: mark relevant 4, live 0.
common/dct.c:46:5: note: worklist: examine stmt: s01_15 = _11 + _14;
common/dct.c:46:5: note: vect_is_simple_use: operand _11
common/dct.c:46:5: note: def_stmt: _11 = (int) _10;
common/dct.c:46:5: note: type of def: 3.
common/dct.c:46:5: note: mark relevant 4, live 0.
common/dct.c:46:5: note: already marked relevant/live.
common/dct.c:46:5: note: vect_is_simple_use: operand _14
common/dct.c:46:5: note: def_stmt: _14 = (int) _13;
common/dct.c:46:5: note: type of def: 3.
common/dct.c:46:5: note: mark relevant 4, live 0.
common/dct.c:46:5: note: already marked relevant/live.
common/dct.c:46:5: note: worklist: examine stmt: tmp[0][i_82] = _26;
common/dct.c:46:5: note: vect_is_simple_use: operand _26
common/dct.c:46:5: note: def_stmt: _26 = (short int) _25;
common/dct.c:46:5: note: type of def: 3.
common/dct.c:46:5: note: mark relevant 4, live 0.
common/dct.c:46:5: note: worklist: examine stmt: _26 = (short int) _25;
common/dct.c:46:5: note: vect_is_simple_use: operand _25
common/dct.c:46:5: note: def_stmt: _25 = _23 + _24;
common/dct.c:46:5: note: type of def: 3.
common/dct.c:46:5: note: mark relevant 4, live 0.
common/dct.c:46:5: note: worklist: examine stmt: _25 = _23 + _24;
common/dct.c:46:5: note: vect_is_simple_use: operand _23
common/dct.c:46:5: note: def_stmt: _23 = (unsigned short) s01_15;
common/dct.c:46:5: note: type of def: 3.
common/dct.c:46:5: note: mark relevant 4, live 0.
common/dct.c:46:5: note: already marked relevant/live.
common/dct.c:46:5: note: vect_is_simple_use: operand _24
common/dct.c:46:5: note: def_stmt: _24 = (unsigned short) s23_21;
common/dct.c:46:5: note: type of def: 3.
common/dct.c:46:5: note: mark relevant 4, live 0.
common/dct.c:46:5: note: already marked relevant/live.
common/dct.c:46:5: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _10 = *_9[0];
  stmt_b: _13 = *_9[1];
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 1)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _10 = *_9[0];
  stmt_b: _17 = *_9[2];
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _10 = *_9[0];
  stmt_b: _19 = *_9[3];
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _10 = *_9[0];
  stmt_b: tmp[0][i_82] = _26;
) -> no dependence
(compute_affine_dependence
  stmt_a: _10 = *_9[0];
  stmt_b: tmp[1][i_82] = _29;
) -> no dependence
(compute_affine_dependence
  stmt_a: _10 = *_9[0];
  stmt_b: tmp[2][i_82] = _34;
) -> no dependence
(compute_affine_dependence
  stmt_a: _10 = *_9[0];
  stmt_b: tmp[3][i_82] = _37;
) -> no dependence
(compute_affine_dependence
  stmt_a: _13 = *_9[1];
  stmt_b: _17 = *_9[2];
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _13 = *_9[1];
  stmt_b: _19 = *_9[3];
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _13 = *_9[1];
  stmt_b: tmp[0][i_82] = _26;
) -> no dependence
(compute_affine_dependence
  stmt_a: _13 = *_9[1];
  stmt_b: tmp[1][i_82] = _29;
) -> no dependence
(compute_affine_dependence
  stmt_a: _13 = *_9[1];
  stmt_b: tmp[2][i_82] = _34;
) -> no dependence
(compute_affine_dependence
  stmt_a: _13 = *_9[1];
  stmt_b: tmp[3][i_82] = _37;
) -> no dependence
(compute_affine_dependence
  stmt_a: _17 = *_9[2];
  stmt_b: _19 = *_9[3];
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _17 = *_9[2];
  stmt_b: tmp[0][i_82] = _26;
) -> no dependence
(compute_affine_dependence
  stmt_a: _17 = *_9[2];
  stmt_b: tmp[1][i_82] = _29;
) -> no dependence
(compute_affine_dependence
  stmt_a: _17 = *_9[2];
  stmt_b: tmp[2][i_82] = _34;
) -> no dependence
(compute_affine_dependence
  stmt_a: _17 = *_9[2];
  stmt_b: tmp[3][i_82] = _37;
) -> no dependence
(compute_affine_dependence
  stmt_a: _19 = *_9[3];
  stmt_b: tmp[0][i_82] = _26;
) -> no dependence
(compute_affine_dependence
  stmt_a: _19 = *_9[3];
  stmt_b: tmp[1][i_82] = _29;
) -> no dependence
(compute_affine_dependence
  stmt_a: _19 = *_9[3];
  stmt_b: tmp[2][i_82] = _34;
) -> no dependence
(compute_affine_dependence
  stmt_a: _19 = *_9[3];
  stmt_b: tmp[3][i_82] = _37;
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[0][i_82] = _26;
  stmt_b: tmp[1][i_82] = _29;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 1)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[0][i_82] = _26;
  stmt_b: tmp[2][i_82] = _34;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[0][i_82] = _26;
  stmt_b: tmp[3][i_82] = _37;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[1][i_82] = _29;
  stmt_b: tmp[2][i_82] = _34;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[1][i_82] = _29;
  stmt_b: tmp[3][i_82] = _37;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[2][i_82] = _34;
  stmt_b: tmp[3][i_82] = _37;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _10 = *_9[0];
  stmt_b: _10 = *_9[0];
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 0)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 8}_1)
  (chrec_b = {0B, +, 8}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _13 = *_9[1];
  stmt_b: _13 = *_9[1];
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 8}_1)
  (chrec_b = {0B, +, 8}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _17 = *_9[2];
  stmt_b: _17 = *_9[2];
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 8}_1)
  (chrec_b = {0B, +, 8}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _19 = *_9[3];
  stmt_b: _19 = *_9[3];
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 8}_1)
  (chrec_b = {0B, +, 8}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: tmp[0][i_82] = _26;
  stmt_b: tmp[0][i_82] = _26;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 0)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: tmp[1][i_82] = _29;
  stmt_b: tmp[1][i_82] = _29;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: tmp[2][i_82] = _34;
  stmt_b: tmp[2][i_82] = _34;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: tmp[3][i_82] = _37;
  stmt_b: tmp[3][i_82] = _37;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/dct.c:46:5: note: === vect_determine_vectorization_factor ===
common/dct.c:46:5: note: ==> examining phi: i_82 = PHI <i_39(4), 0(2)>

common/dct.c:46:5: note: ==> examining phi: .MEM_84 = PHI <.MEM_38(4), .MEM_5(D)(2)>

common/dct.c:46:5: note: ==> examining phi: ivtmp_167 = PHI <ivtmp_166(4), 4(2)>

common/dct.c:46:5: note: ==> examining statement: # DEBUG i => i_82

common/dct.c:46:5: note: skip.
common/dct.c:46:5: note: ==> examining statement: _6 = (long unsigned int) i_82;

common/dct.c:46:5: note: skip.
common/dct.c:46:5: note: ==> examining statement: _7 = _6 * 8;

common/dct.c:46:5: note: skip.
common/dct.c:46:5: note: ==> examining statement: _9 = d_8(D) + _7;

common/dct.c:46:5: note: skip.
common/dct.c:46:5: note: ==> examining statement: _10 = *_9[0];

common/dct.c:46:5: note: get vectype for scalar type:  short int
common/dct.c:46:5: note: vectype: vector(8) short int
common/dct.c:46:5: note: nunits = 8
common/dct.c:46:5: note: ==> examining statement: _11 = (int) _10;

common/dct.c:46:5: note: get vectype for scalar type:  int
common/dct.c:46:5: note: vectype: vector(4) int
common/dct.c:46:5: note: get vectype for scalar type:  short int
common/dct.c:46:5: note: vectype: vector(8) short int
common/dct.c:46:5: note: nunits = 8
common/dct.c:46:5: note: ==> examining statement: _13 = *_9[1];

common/dct.c:46:5: note: get vectype for scalar type:  short int
common/dct.c:46:5: note: vectype: vector(8) short int
common/dct.c:46:5: note: nunits = 8
common/dct.c:46:5: note: ==> examining statement: _14 = (int) _13;

common/dct.c:46:5: note: get vectype for scalar type:  int
common/dct.c:46:5: note: vectype: vector(4) int
common/dct.c:46:5: note: get vectype for scalar type:  short int
common/dct.c:46:5: note: vectype: vector(8) short int
common/dct.c:46:5: note: nunits = 8
common/dct.c:46:5: note: ==> examining statement: s01_15 = _11 + _14;

common/dct.c:46:5: note: get vectype for scalar type:  int
common/dct.c:46:5: note: vectype: vector(4) int
common/dct.c:46:5: note: get vectype for scalar type:  int
common/dct.c:46:5: note: vectype: vector(4) int
common/dct.c:46:5: note: nunits = 4
common/dct.c:46:5: note: ==> examining statement: # DEBUG s01 => s01_15

common/dct.c:46:5: note: skip.
common/dct.c:46:5: note: ==> examining statement: d01_16 = _11 - _14;

common/dct.c:46:5: note: get vectype for scalar type:  int
common/dct.c:46:5: note: vectype: vector(4) int
common/dct.c:46:5: note: get vectype for scalar type:  int
common/dct.c:46:5: note: vectype: vector(4) int
common/dct.c:46:5: note: nunits = 4
common/dct.c:46:5: note: ==> examining statement: # DEBUG d01 => d01_16

common/dct.c:46:5: note: skip.
common/dct.c:46:5: note: ==> examining statement: _17 = *_9[2];

common/dct.c:46:5: note: get vectype for scalar type:  short int
common/dct.c:46:5: note: vectype: vector(8) short int
common/dct.c:46:5: note: nunits = 8
common/dct.c:46:5: note: ==> examining statement: _18 = (int) _17;

common/dct.c:46:5: note: get vectype for scalar type:  int
common/dct.c:46:5: note: vectype: vector(4) int
common/dct.c:46:5: note: get vectype for scalar type:  short int
common/dct.c:46:5: note: vectype: vector(8) short int
common/dct.c:46:5: note: nunits = 8
common/dct.c:46:5: note: ==> examining statement: _19 = *_9[3];

common/dct.c:46:5: note: get vectype for scalar type:  short int
common/dct.c:46:5: note: vectype: vector(8) short int
common/dct.c:46:5: note: nunits = 8
common/dct.c:46:5: note: ==> examining statement: _20 = (int) _19;

common/dct.c:46:5: note: get vectype for scalar type:  int
common/dct.c:46:5: note: vectype: vector(4) int
common/dct.c:46:5: note: get vectype for scalar type:  short int
common/dct.c:46:5: note: vectype: vector(8) short int
common/dct.c:46:5: note: nunits = 8
common/dct.c:46:5: note: ==> examining statement: s23_21 = _18 + _20;

common/dct.c:46:5: note: get vectype for scalar type:  int
common/dct.c:46:5: note: vectype: vector(4) int
common/dct.c:46:5: note: get vectype for scalar type:  int
common/dct.c:46:5: note: vectype: vector(4) int
common/dct.c:46:5: note: nunits = 4
common/dct.c:46:5: note: ==> examining statement: # DEBUG s23 => s23_21

common/dct.c:46:5: note: skip.
common/dct.c:46:5: note: ==> examining statement: d23_22 = _18 - _20;

common/dct.c:46:5: note: get vectype for scalar type:  int
common/dct.c:46:5: note: vectype: vector(4) int
common/dct.c:46:5: note: get vectype for scalar type:  int
common/dct.c:46:5: note: vectype: vector(4) int
common/dct.c:46:5: note: nunits = 4
common/dct.c:46:5: note: ==> examining statement: # DEBUG d23 => d23_22

common/dct.c:46:5: note: skip.
common/dct.c:46:5: note: ==> examining statement: _23 = (unsigned short) s01_15;

common/dct.c:46:5: note: get vectype for scalar type:  unsigned short
common/dct.c:46:5: note: vectype: vector(8) unsigned short
common/dct.c:46:5: note: get vectype for scalar type:  unsigned short
common/dct.c:46:5: note: vectype: vector(8) unsigned short
common/dct.c:46:5: note: nunits = 8
common/dct.c:46:5: note: ==> examining statement: _24 = (unsigned short) s23_21;

common/dct.c:46:5: note: get vectype for scalar type:  unsigned short
common/dct.c:46:5: note: vectype: vector(8) unsigned short
common/dct.c:46:5: note: get vectype for scalar type:  unsigned short
common/dct.c:46:5: note: vectype: vector(8) unsigned short
common/dct.c:46:5: note: nunits = 8
common/dct.c:46:5: note: ==> examining statement: _25 = _23 + _24;

common/dct.c:46:5: note: get vectype for scalar type:  unsigned short
common/dct.c:46:5: note: vectype: vector(8) unsigned short
common/dct.c:46:5: note: get vectype for scalar type:  unsigned short
common/dct.c:46:5: note: vectype: vector(8) unsigned short
common/dct.c:46:5: note: nunits = 8
common/dct.c:46:5: note: ==> examining statement: _26 = (short int) _25;

common/dct.c:46:5: note: get vectype for scalar type:  short int
common/dct.c:46:5: note: vectype: vector(8) short int
common/dct.c:46:5: note: get vectype for scalar type:  short int
common/dct.c:46:5: note: vectype: vector(8) short int
common/dct.c:46:5: note: nunits = 8
common/dct.c:46:5: note: ==> examining statement: tmp[0][i_82] = _26;

common/dct.c:46:5: note: get vectype for scalar type:  int16_t
common/dct.c:46:5: note: vectype: vector(8) short int
common/dct.c:46:5: note: nunits = 8
common/dct.c:46:5: note: ==> examining statement: _28 = _23 - _24;

common/dct.c:46:5: note: get vectype for scalar type:  unsigned short
common/dct.c:46:5: note: vectype: vector(8) unsigned short
common/dct.c:46:5: note: get vectype for scalar type:  unsigned short
common/dct.c:46:5: note: vectype: vector(8) unsigned short
common/dct.c:46:5: note: nunits = 8
common/dct.c:46:5: note: ==> examining statement: _29 = (short int) _28;

common/dct.c:46:5: note: get vectype for scalar type:  short int
common/dct.c:46:5: note: vectype: vector(8) short int
common/dct.c:46:5: note: get vectype for scalar type:  short int
common/dct.c:46:5: note: vectype: vector(8) short int
common/dct.c:46:5: note: nunits = 8
common/dct.c:46:5: note: ==> examining statement: tmp[1][i_82] = _29;

common/dct.c:46:5: note: get vectype for scalar type:  int16_t
common/dct.c:46:5: note: vectype: vector(8) short int
common/dct.c:46:5: note: nunits = 8
common/dct.c:46:5: note: ==> examining statement: _31 = (unsigned short) d01_16;

common/dct.c:46:5: note: get vectype for scalar type:  unsigned short
common/dct.c:46:5: note: vectype: vector(8) unsigned short
common/dct.c:46:5: note: get vectype for scalar type:  unsigned short
common/dct.c:46:5: note: vectype: vector(8) unsigned short
common/dct.c:46:5: note: nunits = 8
common/dct.c:46:5: note: ==> examining statement: _32 = (unsigned short) d23_22;

common/dct.c:46:5: note: get vectype for scalar type:  unsigned short
common/dct.c:46:5: note: vectype: vector(8) unsigned short
common/dct.c:46:5: note: get vectype for scalar type:  unsigned short
common/dct.c:46:5: note: vectype: vector(8) unsigned short
common/dct.c:46:5: note: nunits = 8
common/dct.c:46:5: note: ==> examining statement: _33 = _31 - _32;

common/dct.c:46:5: note: get vectype for scalar type:  unsigned short
common/dct.c:46:5: note: vectype: vector(8) unsigned short
common/dct.c:46:5: note: get vectype for scalar type:  unsigned short
common/dct.c:46:5: note: vectype: vector(8) unsigned short
common/dct.c:46:5: note: nunits = 8
common/dct.c:46:5: note: ==> examining statement: _34 = (short int) _33;

common/dct.c:46:5: note: get vectype for scalar type:  short int
common/dct.c:46:5: note: vectype: vector(8) short int
common/dct.c:46:5: note: get vectype for scalar type:  short int
common/dct.c:46:5: note: vectype: vector(8) short int
common/dct.c:46:5: note: nunits = 8
common/dct.c:46:5: note: ==> examining statement: tmp[2][i_82] = _34;

common/dct.c:46:5: note: get vectype for scalar type:  int16_t
common/dct.c:46:5: note: vectype: vector(8) short int
common/dct.c:46:5: note: nunits = 8
common/dct.c:46:5: note: ==> examining statement: _36 = _31 + _32;

common/dct.c:46:5: note: get vectype for scalar type:  unsigned short
common/dct.c:46:5: note: vectype: vector(8) unsigned short
common/dct.c:46:5: note: get vectype for scalar type:  unsigned short
common/dct.c:46:5: note: vectype: vector(8) unsigned short
common/dct.c:46:5: note: nunits = 8
common/dct.c:46:5: note: ==> examining statement: _37 = (short int) _36;

common/dct.c:46:5: note: get vectype for scalar type:  short int
common/dct.c:46:5: note: vectype: vector(8) short int
common/dct.c:46:5: note: get vectype for scalar type:  short int
common/dct.c:46:5: note: vectype: vector(8) short int
common/dct.c:46:5: note: nunits = 8
common/dct.c:46:5: note: ==> examining statement: tmp[3][i_82] = _37;

common/dct.c:46:5: note: get vectype for scalar type:  int16_t
common/dct.c:46:5: note: vectype: vector(8) short int
common/dct.c:46:5: note: nunits = 8
common/dct.c:46:5: note: ==> examining statement: i_39 = i_82 + 1;

common/dct.c:46:5: note: skip.
common/dct.c:46:5: note: ==> examining statement: # DEBUG i => i_39

common/dct.c:46:5: note: skip.
common/dct.c:46:5: note: ==> examining statement: # DEBUG i => i_39

common/dct.c:46:5: note: skip.
common/dct.c:46:5: note: ==> examining statement: ivtmp_166 = ivtmp_167 - 1;

common/dct.c:46:5: note: skip.
common/dct.c:46:5: note: ==> examining statement: if (ivtmp_166 != 0)

common/dct.c:46:5: note: skip.
common/dct.c:46:5: note: vectorization factor = 8
common/dct.c:46:5: note: === vect_analyze_data_refs_alignment ===
common/dct.c:46:5: note: vect_compute_data_ref_alignment:
common/dct.c:46:5: note: can't force alignment of ref: *_9[0]
common/dct.c:46:5: note: vect_compute_data_ref_alignment:
common/dct.c:46:5: note: can't force alignment of ref: *_9[1]
common/dct.c:46:5: note: vect_compute_data_ref_alignment:
common/dct.c:46:5: note: can't force alignment of ref: *_9[2]
common/dct.c:46:5: note: vect_compute_data_ref_alignment:
common/dct.c:46:5: note: can't force alignment of ref: *_9[3]
common/dct.c:46:5: note: vect_compute_data_ref_alignment:
common/dct.c:46:5: note: misalign = 0 bytes of ref tmp[0][i_82]
common/dct.c:46:5: note: vect_compute_data_ref_alignment:
common/dct.c:46:5: note: misalign = 8 bytes of ref tmp[1][i_82]
common/dct.c:46:5: note: vect_compute_data_ref_alignment:
common/dct.c:46:5: note: misalign = 0 bytes of ref tmp[2][i_82]
common/dct.c:46:5: note: vect_compute_data_ref_alignment:
common/dct.c:46:5: note: misalign = 8 bytes of ref tmp[3][i_82]
common/dct.c:46:5: note: === vect_prune_runtime_alias_test_list ===
common/dct.c:46:5: note: === vect_enhance_data_refs_alignment ===
common/dct.c:46:5: note: vector alignment may not be reachable
common/dct.c:46:5: note: vect_can_advance_ivs_p:
common/dct.c:46:5: note: Analyze phi: i_82 = PHI <i_39(4), 0(2)>

common/dct.c:46:5: note: Analyze phi: .MEM_84 = PHI <.MEM_38(4), .MEM_5(D)(2)>

common/dct.c:46:5: note: virtual phi. skip.
common/dct.c:46:5: note: Analyze phi: ivtmp_167 = PHI <ivtmp_166(4), 4(2)>

common/dct.c:46:5: note: Vectorizing an unaligned access.
common/dct.c:46:5: note: Vectorizing an unaligned access.
common/dct.c:46:5: note: Vectorizing an unaligned access.
common/dct.c:46:5: note: === vect_analyze_slp ===
common/dct.c:46:5: note: === vect_make_slp_decision ===
common/dct.c:46:5: note: === vect_detect_hybrid_slp ===
common/dct.c:46:5: note: === vect_analyze_loop_operations ===
common/dct.c:46:5: note: examining phi: i_82 = PHI <i_39(4), 0(2)>

common/dct.c:46:5: note: examining phi: .MEM_84 = PHI <.MEM_38(4), .MEM_5(D)(2)>

common/dct.c:46:5: note: examining phi: ivtmp_167 = PHI <ivtmp_166(4), 4(2)>

common/dct.c:46:5: note: ==> examining statement: # DEBUG i => i_82
common/dct.c:46:5: note: irrelevant.
common/dct.c:46:5: note: ==> examining statement: _6 = (long unsigned int) i_82;
common/dct.c:46:5: note: irrelevant.
common/dct.c:46:5: note: ==> examining statement: _7 = _6 * 8;
common/dct.c:46:5: note: irrelevant.
common/dct.c:46:5: note: ==> examining statement: _9 = d_8(D) + _7;
common/dct.c:46:5: note: irrelevant.
common/dct.c:46:5: note: ==> examining statement: _10 = *_9[0];
common/dct.c:46:5: note: num. args = 4 (not unary/binary/ternary op).
common/dct.c:46:5: note: vect_is_simple_use: operand *_9[0]
common/dct.c:46:5: note: not ssa-name.
common/dct.c:46:5: note: use not simple.
common/dct.c:46:5: note: no array mode for V8HI[4]
common/dct.c:46:5: note: vect_model_load_cost: strided group_size = 4 .
common/dct.c:46:5: note: vect_model_load_cost: unaligned supported by hardware.
common/dct.c:46:5: note: vect_model_load_cost: inside_cost = 10, prologue_cost = 0 .
common/dct.c:46:5: note: ==> examining statement: _11 = (int) _10;
common/dct.c:46:5: note: vect_is_simple_use: operand _10
common/dct.c:46:5: note: def_stmt: _10 = *_9[0];
common/dct.c:46:5: note: type of def: 3.
common/dct.c:46:5: note: === vectorizable_conversion ===
common/dct.c:46:5: note: vect_model_promotion_demotion_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:46:5: note: ==> examining statement: _13 = *_9[1];
common/dct.c:46:5: note: num. args = 4 (not unary/binary/ternary op).
common/dct.c:46:5: note: vect_is_simple_use: operand *_9[1]
common/dct.c:46:5: note: not ssa-name.
common/dct.c:46:5: note: use not simple.
common/dct.c:46:5: note: no array mode for V8HI[4]
common/dct.c:46:5: note: vect_model_load_cost: unaligned supported by hardware.
common/dct.c:46:5: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:46:5: note: ==> examining statement: _14 = (int) _13;
common/dct.c:46:5: note: vect_is_simple_use: operand _13
common/dct.c:46:5: note: def_stmt: _13 = *_9[1];
common/dct.c:46:5: note: type of def: 3.
common/dct.c:46:5: note: === vectorizable_conversion ===
common/dct.c:46:5: note: vect_model_promotion_demotion_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:46:5: note: ==> examining statement: s01_15 = _11 + _14;
common/dct.c:46:5: note: vect_is_simple_use: operand _11
common/dct.c:46:5: note: def_stmt: _11 = (int) _10;
common/dct.c:46:5: note: type of def: 3.
common/dct.c:46:5: note: vect_is_simple_use: operand _14
common/dct.c:46:5: note: def_stmt: _14 = (int) _13;
common/dct.c:46:5: note: type of def: 3.
common/dct.c:46:5: note: === vectorizable_operation ===
common/dct.c:46:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:46:5: note: ==> examining statement: # DEBUG s01 => s01_15
common/dct.c:46:5: note: irrelevant.
common/dct.c:46:5: note: ==> examining statement: d01_16 = _11 - _14;
common/dct.c:46:5: note: vect_is_simple_use: operand _11
common/dct.c:46:5: note: def_stmt: _11 = (int) _10;
common/dct.c:46:5: note: type of def: 3.
common/dct.c:46:5: note: vect_is_simple_use: operand _14
common/dct.c:46:5: note: def_stmt: _14 = (int) _13;
common/dct.c:46:5: note: type of def: 3.
common/dct.c:46:5: note: === vectorizable_operation ===
common/dct.c:46:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:46:5: note: ==> examining statement: # DEBUG d01 => d01_16
common/dct.c:46:5: note: irrelevant.
common/dct.c:46:5: note: ==> examining statement: _17 = *_9[2];
common/dct.c:46:5: note: num. args = 4 (not unary/binary/ternary op).
common/dct.c:46:5: note: vect_is_simple_use: operand *_9[2]
common/dct.c:46:5: note: not ssa-name.
common/dct.c:46:5: note: use not simple.
common/dct.c:46:5: note: no array mode for V8HI[4]
common/dct.c:46:5: note: vect_model_load_cost: unaligned supported by hardware.
common/dct.c:46:5: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:46:5: note: ==> examining statement: _18 = (int) _17;
common/dct.c:46:5: note: vect_is_simple_use: operand _17
common/dct.c:46:5: note: def_stmt: _17 = *_9[2];
common/dct.c:46:5: note: type of def: 3.
common/dct.c:46:5: note: === vectorizable_conversion ===
common/dct.c:46:5: note: vect_model_promotion_demotion_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:46:5: note: ==> examining statement: _19 = *_9[3];
common/dct.c:46:5: note: num. args = 4 (not unary/binary/ternary op).
common/dct.c:46:5: note: vect_is_simple_use: operand *_9[3]
common/dct.c:46:5: note: not ssa-name.
common/dct.c:46:5: note: use not simple.
common/dct.c:46:5: note: no array mode for V8HI[4]
common/dct.c:46:5: note: vect_model_load_cost: unaligned supported by hardware.
common/dct.c:46:5: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:46:5: note: ==> examining statement: _20 = (int) _19;
common/dct.c:46:5: note: vect_is_simple_use: operand _19
common/dct.c:46:5: note: def_stmt: _19 = *_9[3];
common/dct.c:46:5: note: type of def: 3.
common/dct.c:46:5: note: === vectorizable_conversion ===
common/dct.c:46:5: note: vect_model_promotion_demotion_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:46:5: note: ==> examining statement: s23_21 = _18 + _20;
common/dct.c:46:5: note: vect_is_simple_use: operand _18
common/dct.c:46:5: note: def_stmt: _18 = (int) _17;
common/dct.c:46:5: note: type of def: 3.
common/dct.c:46:5: note: vect_is_simple_use: operand _20
common/dct.c:46:5: note: def_stmt: _20 = (int) _19;
common/dct.c:46:5: note: type of def: 3.
common/dct.c:46:5: note: === vectorizable_operation ===
common/dct.c:46:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:46:5: note: ==> examining statement: # DEBUG s23 => s23_21
common/dct.c:46:5: note: irrelevant.
common/dct.c:46:5: note: ==> examining statement: d23_22 = _18 - _20;
common/dct.c:46:5: note: vect_is_simple_use: operand _18
common/dct.c:46:5: note: def_stmt: _18 = (int) _17;
common/dct.c:46:5: note: type of def: 3.
common/dct.c:46:5: note: vect_is_simple_use: operand _20
common/dct.c:46:5: note: def_stmt: _20 = (int) _19;
common/dct.c:46:5: note: type of def: 3.
common/dct.c:46:5: note: === vectorizable_operation ===
common/dct.c:46:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:46:5: note: ==> examining statement: # DEBUG d23 => d23_22
common/dct.c:46:5: note: irrelevant.
common/dct.c:46:5: note: ==> examining statement: _23 = (unsigned short) s01_15;
common/dct.c:46:5: note: vect_is_simple_use: operand s01_15
common/dct.c:46:5: note: def_stmt: s01_15 = _11 + _14;
common/dct.c:46:5: note: type of def: 3.
common/dct.c:46:5: note: === vectorizable_conversion ===
common/dct.c:46:5: note: vect_model_promotion_demotion_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:46:5: note: ==> examining statement: _24 = (unsigned short) s23_21;
common/dct.c:46:5: note: vect_is_simple_use: operand s23_21
common/dct.c:46:5: note: def_stmt: s23_21 = _18 + _20;
common/dct.c:46:5: note: type of def: 3.
common/dct.c:46:5: note: === vectorizable_conversion ===
common/dct.c:46:5: note: vect_model_promotion_demotion_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:46:5: note: ==> examining statement: _25 = _23 + _24;
common/dct.c:46:5: note: vect_is_simple_use: operand _23
common/dct.c:46:5: note: def_stmt: _23 = (unsigned short) s01_15;
common/dct.c:46:5: note: type of def: 3.
common/dct.c:46:5: note: vect_is_simple_use: operand _24
common/dct.c:46:5: note: def_stmt: _24 = (unsigned short) s23_21;
common/dct.c:46:5: note: type of def: 3.
common/dct.c:46:5: note: === vectorizable_operation ===
common/dct.c:46:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:46:5: note: ==> examining statement: _26 = (short int) _25;
common/dct.c:46:5: note: vect_is_simple_use: operand _25
common/dct.c:46:5: note: def_stmt: _25 = _23 + _24;
common/dct.c:46:5: note: type of def: 3.
common/dct.c:46:5: note: vect_is_simple_use: operand _25
common/dct.c:46:5: note: def_stmt: _25 = _23 + _24;
common/dct.c:46:5: note: type of def: 3.
common/dct.c:46:5: note: no optab.
common/dct.c:46:5: note: vect_is_simple_use: operand _25
common/dct.c:46:5: note: def_stmt: _25 = _23 + _24;
common/dct.c:46:5: note: type of def: 3.
common/dct.c:46:5: note: === vectorizable_assignment ===
common/dct.c:46:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:46:5: note: ==> examining statement: tmp[0][i_82] = _26;
common/dct.c:46:5: note: vect_is_simple_use: operand _26
common/dct.c:46:5: note: def_stmt: _26 = (short int) _25;
common/dct.c:46:5: note: type of def: 3.
common/dct.c:46:5: note: vect_model_store_cost: aligned.
common/dct.c:46:5: note: vect_model_store_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:46:5: note: ==> examining statement: _28 = _23 - _24;
common/dct.c:46:5: note: vect_is_simple_use: operand _23
common/dct.c:46:5: note: def_stmt: _23 = (unsigned short) s01_15;
common/dct.c:46:5: note: type of def: 3.
common/dct.c:46:5: note: vect_is_simple_use: operand _24
common/dct.c:46:5: note: def_stmt: _24 = (unsigned short) s23_21;
common/dct.c:46:5: note: type of def: 3.
common/dct.c:46:5: note: === vectorizable_operation ===
common/dct.c:46:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:46:5: note: ==> examining statement: _29 = (short int) _28;
common/dct.c:46:5: note: vect_is_simple_use: operand _28
common/dct.c:46:5: note: def_stmt: _28 = _23 - _24;
common/dct.c:46:5: note: type of def: 3.
common/dct.c:46:5: note: vect_is_simple_use: operand _28
common/dct.c:46:5: note: def_stmt: _28 = _23 - _24;
common/dct.c:46:5: note: type of def: 3.
common/dct.c:46:5: note: no optab.
common/dct.c:46:5: note: vect_is_simple_use: operand _28
common/dct.c:46:5: note: def_stmt: _28 = _23 - _24;
common/dct.c:46:5: note: type of def: 3.
common/dct.c:46:5: note: === vectorizable_assignment ===
common/dct.c:46:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:46:5: note: ==> examining statement: tmp[1][i_82] = _29;
common/dct.c:46:5: note: vect_is_simple_use: operand _29
common/dct.c:46:5: note: def_stmt: _29 = (short int) _28;
common/dct.c:46:5: note: type of def: 3.
common/dct.c:46:5: note: vect_model_store_cost: unaligned supported by hardware.
common/dct.c:46:5: note: vect_model_store_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:46:5: note: ==> examining statement: _31 = (unsigned short) d01_16;
common/dct.c:46:5: note: vect_is_simple_use: operand d01_16
common/dct.c:46:5: note: def_stmt: d01_16 = _11 - _14;
common/dct.c:46:5: note: type of def: 3.
common/dct.c:46:5: note: === vectorizable_conversion ===
common/dct.c:46:5: note: vect_model_promotion_demotion_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:46:5: note: ==> examining statement: _32 = (unsigned short) d23_22;
common/dct.c:46:5: note: vect_is_simple_use: operand d23_22
common/dct.c:46:5: note: def_stmt: d23_22 = _18 - _20;
common/dct.c:46:5: note: type of def: 3.
common/dct.c:46:5: note: === vectorizable_conversion ===
common/dct.c:46:5: note: vect_model_promotion_demotion_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:46:5: note: ==> examining statement: _33 = _31 - _32;
common/dct.c:46:5: note: vect_is_simple_use: operand _31
common/dct.c:46:5: note: def_stmt: _31 = (unsigned short) d01_16;
common/dct.c:46:5: note: type of def: 3.
common/dct.c:46:5: note: vect_is_simple_use: operand _32
common/dct.c:46:5: note: def_stmt: _32 = (unsigned short) d23_22;
common/dct.c:46:5: note: type of def: 3.
common/dct.c:46:5: note: === vectorizable_operation ===
common/dct.c:46:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:46:5: note: ==> examining statement: _34 = (short int) _33;
common/dct.c:46:5: note: vect_is_simple_use: operand _33
common/dct.c:46:5: note: def_stmt: _33 = _31 - _32;
common/dct.c:46:5: note: type of def: 3.
common/dct.c:46:5: note: vect_is_simple_use: operand _33
common/dct.c:46:5: note: def_stmt: _33 = _31 - _32;
common/dct.c:46:5: note: type of def: 3.
common/dct.c:46:5: note: no optab.
common/dct.c:46:5: note: vect_is_simple_use: operand _33
common/dct.c:46:5: note: def_stmt: _33 = _31 - _32;
common/dct.c:46:5: note: type of def: 3.
common/dct.c:46:5: note: === vectorizable_assignment ===
common/dct.c:46:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:46:5: note: ==> examining statement: tmp[2][i_82] = _34;
common/dct.c:46:5: note: vect_is_simple_use: operand _34
common/dct.c:46:5: note: def_stmt: _34 = (short int) _33;
common/dct.c:46:5: note: type of def: 3.
common/dct.c:46:5: note: vect_model_store_cost: aligned.
common/dct.c:46:5: note: vect_model_store_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:46:5: note: ==> examining statement: _36 = _31 + _32;
common/dct.c:46:5: note: vect_is_simple_use: operand _31
common/dct.c:46:5: note: def_stmt: _31 = (unsigned short) d01_16;
common/dct.c:46:5: note: type of def: 3.
common/dct.c:46:5: note: vect_is_simple_use: operand _32
common/dct.c:46:5: note: def_stmt: _32 = (unsigned short) d23_22;
common/dct.c:46:5: note: type of def: 3.
common/dct.c:46:5: note: === vectorizable_operation ===
common/dct.c:46:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:46:5: note: ==> examining statement: _37 = (short int) _36;
common/dct.c:46:5: note: vect_is_simple_use: operand _36
common/dct.c:46:5: note: def_stmt: _36 = _31 + _32;
common/dct.c:46:5: note: type of def: 3.
common/dct.c:46:5: note: vect_is_simple_use: operand _36
common/dct.c:46:5: note: def_stmt: _36 = _31 + _32;
common/dct.c:46:5: note: type of def: 3.
common/dct.c:46:5: note: no optab.
common/dct.c:46:5: note: vect_is_simple_use: operand _36
common/dct.c:46:5: note: def_stmt: _36 = _31 + _32;
common/dct.c:46:5: note: type of def: 3.
common/dct.c:46:5: note: === vectorizable_assignment ===
common/dct.c:46:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:46:5: note: ==> examining statement: tmp[3][i_82] = _37;
common/dct.c:46:5: note: vect_is_simple_use: operand _37
common/dct.c:46:5: note: def_stmt: _37 = (short int) _36;
common/dct.c:46:5: note: type of def: 3.
common/dct.c:46:5: note: vect_model_store_cost: unaligned supported by hardware.
common/dct.c:46:5: note: vect_model_store_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:46:5: note: ==> examining statement: i_39 = i_82 + 1;
common/dct.c:46:5: note: irrelevant.
common/dct.c:46:5: note: ==> examining statement: # DEBUG i => i_39
common/dct.c:46:5: note: irrelevant.
common/dct.c:46:5: note: ==> examining statement: # DEBUG i => i_39
common/dct.c:46:5: note: irrelevant.
common/dct.c:46:5: note: ==> examining statement: ivtmp_166 = ivtmp_167 - 1;
common/dct.c:46:5: note: irrelevant.
common/dct.c:46:5: note: ==> examining statement: if (ivtmp_166 != 0)
common/dct.c:46:5: note: irrelevant.
common/dct.c:46:5: note: vectorization_factor = 8, niters = 4
common/dct.c:46:5: note: not vectorized: iteration count too small.
common/dct.c:46:5: note: not vectorized: iteration count smaller than vectorization factor.
common/dct.c:46:5: note: bad operation or unsupported loop bound.
common/dct.c:39:13: note: vectorized 0 loops in function.
dct4x4dc (int16_t[4] * d)
{
  int i;
  int d23;
  int d01;
  int s23;
  int s01;
  int16_t tmp[4][4];
  long unsigned int _6;
  long unsigned int _7;
  int16_t[4] * _9;
  short int _10;
  int _11;
  short int _13;
  int _14;
  short int _17;
  int _18;
  short int _19;
  int _20;
  unsigned short _23;
  unsigned short _24;
  unsigned short _25;
  short int _26;
  unsigned short _28;
  short int _29;
  unsigned short _31;
  unsigned short _32;
  unsigned short _33;
  short int _34;
  unsigned short _36;
  short int _37;
  short int _40;
  int _41;
  short int _42;
  int _43;
  short int _46;
  int _47;
  short int _48;
  int _49;
  long unsigned int _52;
  long unsigned int _53;
  int16_t[4] * _54;
  int _55;
  int _56;
  int _57;
  short int _58;
  int _60;
  int _61;
  int _62;
  short int _63;
  int _65;
  int _66;
  int _67;
  short int _68;
  int _70;
  int _71;
  int _72;
  short int _73;
  unsigned int ivtmp_166;
  unsigned int ivtmp_167;
  unsigned int ivtmp_168;
  unsigned int ivtmp_169;

  <bb 2>:
  # DEBUG i => 0
  # DEBUG i => 0

  <bb 3>:
  # i_82 = PHI <i_39(4), 0(2)>
  # ivtmp_167 = PHI <ivtmp_166(4), 4(2)>
  # DEBUG i => i_82
  _6 = (long unsigned int) i_82;
  _7 = _6 * 8;
  _9 = d_8(D) + _7;
  _10 = *_9[0];
  _11 = (int) _10;
  _13 = *_9[1];
  _14 = (int) _13;
  s01_15 = _11 + _14;
  # DEBUG s01 => s01_15
  d01_16 = _11 - _14;
  # DEBUG d01 => d01_16
  _17 = *_9[2];
  _18 = (int) _17;
  _19 = *_9[3];
  _20 = (int) _19;
  s23_21 = _18 + _20;
  # DEBUG s23 => s23_21
  d23_22 = _18 - _20;
  # DEBUG d23 => d23_22
  _23 = (unsigned short) s01_15;
  _24 = (unsigned short) s23_21;
  _25 = _23 + _24;
  _26 = (short int) _25;
  tmp[0][i_82] = _26;
  _28 = _23 - _24;
  _29 = (short int) _28;
  tmp[1][i_82] = _29;
  _31 = (unsigned short) d01_16;
  _32 = (unsigned short) d23_22;
  _33 = _31 - _32;
  _34 = (short int) _33;
  tmp[2][i_82] = _34;
  _36 = _31 + _32;
  _37 = (short int) _36;
  tmp[3][i_82] = _37;
  i_39 = i_82 + 1;
  # DEBUG i => i_39
  # DEBUG i => i_39
  ivtmp_166 = ivtmp_167 - 1;
  if (ivtmp_166 != 0)
    goto <bb 4>;
  else
    goto <bb 5>;

  <bb 4>:
  goto <bb 3>;

  <bb 5>:

  <bb 6>:
  # i_83 = PHI <0(5), i_75(7)>
  # ivtmp_169 = PHI <4(5), ivtmp_168(7)>
  # DEBUG i => i_83
  _40 = tmp[i_83][0];
  _41 = (int) _40;
  _42 = tmp[i_83][1];
  _43 = (int) _42;
  s01_44 = _41 + _43;
  # DEBUG s01 => s01_44
  d01_45 = _41 - _43;
  # DEBUG d01 => d01_45
  _46 = tmp[i_83][2];
  _47 = (int) _46;
  _48 = tmp[i_83][3];
  _49 = (int) _48;
  s23_50 = _47 + _49;
  # DEBUG s23 => s23_50
  d23_51 = _47 - _49;
  # DEBUG d23 => d23_51
  _52 = (long unsigned int) i_83;
  _53 = _52 * 8;
  _54 = d_8(D) + _53;
  _55 = s01_44 + s23_50;
  _56 = _55 + 1;
  _57 = _56 >> 1;
  _58 = (short int) _57;
  *_54[0] = _58;
  _60 = s01_44 - s23_50;
  _61 = _60 + 1;
  _62 = _61 >> 1;
  _63 = (short int) _62;
  *_54[1] = _63;
  _65 = d01_45 - d23_51;
  _66 = _65 + 1;
  _67 = _66 >> 1;
  _68 = (short int) _67;
  *_54[2] = _68;
  _70 = d01_45 + d23_51;
  _71 = _70 + 1;
  _72 = _71 >> 1;
  _73 = (short int) _72;
  *_54[3] = _73;
  i_75 = i_83 + 1;
  # DEBUG i => i_75
  # DEBUG i => i_75
  ivtmp_168 = ivtmp_169 - 1;
  if (ivtmp_168 != 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  goto <bb 6>;

  <bb 8>:
  tmp ={v} {CLOBBER};
  return;

}



;; Function idct4x4dc (idct4x4dc, funcdef_no=116, decl_uid=5859, cgraph_uid=116, symbol_order=161)


Analyzing loop at common/dct.c:93
common/dct.c:93:5: note: ===== analyze_loop_nest =====
common/dct.c:93:5: note: === vect_analyze_loop_form ===
common/dct.c:93:5: note: === get_loop_niters ===
Analyzing # of iterations of loop 2
  exit condition [3, + , 4294967295] != 0
  bounds on difference of bases: -3 ... -3
  result:
    # of iterations 3, bounded by 3
common/dct.c:93:5: note: === vect_analyze_data_refs ===
Creating dr for tmp[i_79][0]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &tmp
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 128
	base_object: tmp
	Access function 0: 0
	Access function 1: {0, +, 1}_2
Creating dr for tmp[i_79][1]
analyze_innermost: success.
	base_address: &tmp
	offset from base address: 0
	constant offset from base address: 2
	step: 8
	aligned to: 128
	base_object: tmp
	Access function 0: 1
	Access function 1: {0, +, 1}_2
Creating dr for tmp[i_79][2]
analyze_innermost: success.
	base_address: &tmp
	offset from base address: 0
	constant offset from base address: 4
	step: 8
	aligned to: 128
	base_object: tmp
	Access function 0: 2
	Access function 1: {0, +, 1}_2
Creating dr for tmp[i_79][3]
analyze_innermost: success.
	base_address: &tmp
	offset from base address: 0
	constant offset from base address: 6
	step: 8
	aligned to: 128
	base_object: tmp
	Access function 0: 3
	Access function 1: {0, +, 1}_2
Creating dr for *_54[0]
analyze_innermost: success.
	base_address: d_8(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 128
	base_object: *d_8(D)
	Access function 0: 0
	Access function 1: {0B, +, 8}_2
Creating dr for *_54[1]
analyze_innermost: success.
	base_address: d_8(D)
	offset from base address: 0
	constant offset from base address: 2
	step: 8
	aligned to: 128
	base_object: *d_8(D)
	Access function 0: 1
	Access function 1: {0B, +, 8}_2
Creating dr for *_54[2]
analyze_innermost: success.
	base_address: d_8(D)
	offset from base address: 0
	constant offset from base address: 4
	step: 8
	aligned to: 128
	base_object: *d_8(D)
	Access function 0: 2
	Access function 1: {0B, +, 8}_2
Creating dr for *_54[3]
analyze_innermost: success.
	base_address: d_8(D)
	offset from base address: 0
	constant offset from base address: 6
	step: 8
	aligned to: 128
	base_object: *d_8(D)
	Access function 0: 3
	Access function 1: {0B, +, 8}_2
common/dct.c:93:5: note: got vectype for stmt: _40 = tmp[i_79][0];
vector(8) short int
common/dct.c:93:5: note: got vectype for stmt: _42 = tmp[i_79][1];
vector(8) short int
common/dct.c:93:5: note: got vectype for stmt: _46 = tmp[i_79][2];
vector(8) short int
common/dct.c:93:5: note: got vectype for stmt: _48 = tmp[i_79][3];
vector(8) short int
common/dct.c:93:5: note: got vectype for stmt: *_54[0] = _58;
vector(8) short int
common/dct.c:93:5: note: got vectype for stmt: *_54[1] = _61;
vector(8) short int
common/dct.c:93:5: note: got vectype for stmt: *_54[2] = _66;
vector(8) short int
common/dct.c:93:5: note: got vectype for stmt: *_54[3] = _69;
vector(8) short int
common/dct.c:93:5: note: === vect_analyze_scalar_cycles ===
common/dct.c:93:5: note: Analyze phi: i_79 = PHI <0(5), i_71(7)>

common/dct.c:93:5: note: Access function of PHI: {0, +, 1}_2
common/dct.c:93:5: note: step: 1,  init: 0
common/dct.c:93:5: note: Detected induction.
common/dct.c:93:5: note: Analyze phi: .MEM_81 = PHI <.MEM_38(5), .MEM_70(7)>

common/dct.c:93:5: note: Analyze phi: ivtmp_157 = PHI <4(5), ivtmp_156(7)>

common/dct.c:93:5: note: Access function of PHI: {4, +, 4294967295}_2
common/dct.c:93:5: note: step: 4294967295,  init: 4
common/dct.c:93:5: note: Detected induction.
common/dct.c:93:5: note: === vect_pattern_recog ===
common/dct.c:93:5: note: vect_is_simple_use: operand _52
common/dct.c:93:5: note: def_stmt: _52 = (long unsigned int) i_79;
common/dct.c:93:5: note: type of def: 3.
common/dct.c:93:5: note: vect_is_simple_use: operand i_79
common/dct.c:93:5: note: def_stmt: i_79 = PHI <0(5), i_71(7)>
common/dct.c:93:5: note: type of def: 4.
common/dct.c:93:5: note: vect_is_simple_use: operand 8
common/dct.c:93:5: note: === vect_analyze_data_ref_accesses ===
common/dct.c:93:5: note: Detected interleaving tmp[i_79][0] and tmp[i_79][1]
common/dct.c:93:5: note: Detected interleaving tmp[i_79][0] and tmp[i_79][2]
common/dct.c:93:5: note: Detected interleaving tmp[i_79][0] and tmp[i_79][3]
common/dct.c:93:5: note: Detected interleaving *_54[0] and *_54[1]
common/dct.c:93:5: note: Detected interleaving *_54[0] and *_54[2]
common/dct.c:93:5: note: Detected interleaving *_54[0] and *_54[3]
common/dct.c:93:5: note: Detected interleaving of size 4
common/dct.c:93:5: note: Detected interleaving of size 4
common/dct.c:93:5: note: === vect_mark_stmts_to_be_vectorized ===
common/dct.c:93:5: note: init: phi relevant? i_79 = PHI <0(5), i_71(7)>
common/dct.c:93:5: note: init: phi relevant? .MEM_81 = PHI <.MEM_38(5), .MEM_70(7)>
common/dct.c:93:5: note: init: phi relevant? ivtmp_157 = PHI <4(5), ivtmp_156(7)>
common/dct.c:93:5: note: init: stmt relevant? # DEBUG i => i_79
common/dct.c:93:5: note: init: stmt relevant? _40 = tmp[i_79][0];
common/dct.c:93:5: note: init: stmt relevant? _41 = (int) _40;
common/dct.c:93:5: note: init: stmt relevant? _42 = tmp[i_79][1];
common/dct.c:93:5: note: init: stmt relevant? _43 = (int) _42;
common/dct.c:93:5: note: init: stmt relevant? s01_44 = _41 + _43;
common/dct.c:93:5: note: init: stmt relevant? # DEBUG s01 => s01_44
common/dct.c:93:5: note: init: stmt relevant? d01_45 = _41 - _43;
common/dct.c:93:5: note: init: stmt relevant? # DEBUG d01 => d01_45
common/dct.c:93:5: note: init: stmt relevant? _46 = tmp[i_79][2];
common/dct.c:93:5: note: init: stmt relevant? _47 = (int) _46;
common/dct.c:93:5: note: init: stmt relevant? _48 = tmp[i_79][3];
common/dct.c:93:5: note: init: stmt relevant? _49 = (int) _48;
common/dct.c:93:5: note: init: stmt relevant? s23_50 = _47 + _49;
common/dct.c:93:5: note: init: stmt relevant? # DEBUG s23 => s23_50
common/dct.c:93:5: note: init: stmt relevant? d23_51 = _47 - _49;
common/dct.c:93:5: note: init: stmt relevant? # DEBUG d23 => d23_51
common/dct.c:93:5: note: init: stmt relevant? _52 = (long unsigned int) i_79;
common/dct.c:93:5: note: init: stmt relevant? _53 = _52 * 8;
common/dct.c:93:5: note: init: stmt relevant? _54 = d_8(D) + _53;
common/dct.c:93:5: note: init: stmt relevant? _55 = (unsigned short) s01_44;
common/dct.c:93:5: note: init: stmt relevant? _56 = (unsigned short) s23_50;
common/dct.c:93:5: note: init: stmt relevant? _57 = _55 + _56;
common/dct.c:93:5: note: init: stmt relevant? _58 = (short int) _57;
common/dct.c:93:5: note: init: stmt relevant? *_54[0] = _58;
common/dct.c:93:5: note: vec_stmt_relevant_p: stmt has vdefs.
common/dct.c:93:5: note: mark relevant 4, live 0.
common/dct.c:93:5: note: init: stmt relevant? _60 = _55 - _56;
common/dct.c:93:5: note: init: stmt relevant? _61 = (short int) _60;
common/dct.c:93:5: note: init: stmt relevant? *_54[1] = _61;
common/dct.c:93:5: note: vec_stmt_relevant_p: stmt has vdefs.
common/dct.c:93:5: note: mark relevant 4, live 0.
common/dct.c:93:5: note: init: stmt relevant? _63 = (unsigned short) d01_45;
common/dct.c:93:5: note: init: stmt relevant? _64 = (unsigned short) d23_51;
common/dct.c:93:5: note: init: stmt relevant? _65 = _63 - _64;
common/dct.c:93:5: note: init: stmt relevant? _66 = (short int) _65;
common/dct.c:93:5: note: init: stmt relevant? *_54[2] = _66;
common/dct.c:93:5: note: vec_stmt_relevant_p: stmt has vdefs.
common/dct.c:93:5: note: mark relevant 4, live 0.
common/dct.c:93:5: note: init: stmt relevant? _68 = _63 + _64;
common/dct.c:93:5: note: init: stmt relevant? _69 = (short int) _68;
common/dct.c:93:5: note: init: stmt relevant? *_54[3] = _69;
common/dct.c:93:5: note: vec_stmt_relevant_p: stmt has vdefs.
common/dct.c:93:5: note: mark relevant 4, live 0.
common/dct.c:93:5: note: init: stmt relevant? i_71 = i_79 + 1;
common/dct.c:93:5: note: init: stmt relevant? # DEBUG i => i_71
common/dct.c:93:5: note: init: stmt relevant? # DEBUG i => i_71
common/dct.c:93:5: note: init: stmt relevant? ivtmp_156 = ivtmp_157 - 1;
common/dct.c:93:5: note: init: stmt relevant? if (ivtmp_156 != 0)
common/dct.c:93:5: note: worklist: examine stmt: *_54[3] = _69;
common/dct.c:93:5: note: vect_is_simple_use: operand _69
common/dct.c:93:5: note: def_stmt: _69 = (short int) _68;
common/dct.c:93:5: note: type of def: 3.
common/dct.c:93:5: note: mark relevant 4, live 0.
common/dct.c:93:5: note: worklist: examine stmt: _69 = (short int) _68;
common/dct.c:93:5: note: vect_is_simple_use: operand _68
common/dct.c:93:5: note: def_stmt: _68 = _63 + _64;
common/dct.c:93:5: note: type of def: 3.
common/dct.c:93:5: note: mark relevant 4, live 0.
common/dct.c:93:5: note: worklist: examine stmt: _68 = _63 + _64;
common/dct.c:93:5: note: vect_is_simple_use: operand _63
common/dct.c:93:5: note: def_stmt: _63 = (unsigned short) d01_45;
common/dct.c:93:5: note: type of def: 3.
common/dct.c:93:5: note: mark relevant 4, live 0.
common/dct.c:93:5: note: vect_is_simple_use: operand _64
common/dct.c:93:5: note: def_stmt: _64 = (unsigned short) d23_51;
common/dct.c:93:5: note: type of def: 3.
common/dct.c:93:5: note: mark relevant 4, live 0.
common/dct.c:93:5: note: worklist: examine stmt: _64 = (unsigned short) d23_51;
common/dct.c:93:5: note: vect_is_simple_use: operand d23_51
common/dct.c:93:5: note: def_stmt: d23_51 = _47 - _49;
common/dct.c:93:5: note: type of def: 3.
common/dct.c:93:5: note: mark relevant 4, live 0.
common/dct.c:93:5: note: worklist: examine stmt: d23_51 = _47 - _49;
common/dct.c:93:5: note: vect_is_simple_use: operand _47
common/dct.c:93:5: note: def_stmt: _47 = (int) _46;
common/dct.c:93:5: note: type of def: 3.
common/dct.c:93:5: note: mark relevant 4, live 0.
common/dct.c:93:5: note: vect_is_simple_use: operand _49
common/dct.c:93:5: note: def_stmt: _49 = (int) _48;
common/dct.c:93:5: note: type of def: 3.
common/dct.c:93:5: note: mark relevant 4, live 0.
common/dct.c:93:5: note: worklist: examine stmt: _49 = (int) _48;
common/dct.c:93:5: note: vect_is_simple_use: operand _48
common/dct.c:93:5: note: def_stmt: _48 = tmp[i_79][3];
common/dct.c:93:5: note: type of def: 3.
common/dct.c:93:5: note: mark relevant 4, live 0.
common/dct.c:93:5: note: worklist: examine stmt: _48 = tmp[i_79][3];
common/dct.c:93:5: note: worklist: examine stmt: _47 = (int) _46;
common/dct.c:93:5: note: vect_is_simple_use: operand _46
common/dct.c:93:5: note: def_stmt: _46 = tmp[i_79][2];
common/dct.c:93:5: note: type of def: 3.
common/dct.c:93:5: note: mark relevant 4, live 0.
common/dct.c:93:5: note: worklist: examine stmt: _46 = tmp[i_79][2];
common/dct.c:93:5: note: worklist: examine stmt: _63 = (unsigned short) d01_45;
common/dct.c:93:5: note: vect_is_simple_use: operand d01_45
common/dct.c:93:5: note: def_stmt: d01_45 = _41 - _43;
common/dct.c:93:5: note: type of def: 3.
common/dct.c:93:5: note: mark relevant 4, live 0.
common/dct.c:93:5: note: worklist: examine stmt: d01_45 = _41 - _43;
common/dct.c:93:5: note: vect_is_simple_use: operand _41
common/dct.c:93:5: note: def_stmt: _41 = (int) _40;
common/dct.c:93:5: note: type of def: 3.
common/dct.c:93:5: note: mark relevant 4, live 0.
common/dct.c:93:5: note: vect_is_simple_use: operand _43
common/dct.c:93:5: note: def_stmt: _43 = (int) _42;
common/dct.c:93:5: note: type of def: 3.
common/dct.c:93:5: note: mark relevant 4, live 0.
common/dct.c:93:5: note: worklist: examine stmt: _43 = (int) _42;
common/dct.c:93:5: note: vect_is_simple_use: operand _42
common/dct.c:93:5: note: def_stmt: _42 = tmp[i_79][1];
common/dct.c:93:5: note: type of def: 3.
common/dct.c:93:5: note: mark relevant 4, live 0.
common/dct.c:93:5: note: worklist: examine stmt: _42 = tmp[i_79][1];
common/dct.c:93:5: note: worklist: examine stmt: _41 = (int) _40;
common/dct.c:93:5: note: vect_is_simple_use: operand _40
common/dct.c:93:5: note: def_stmt: _40 = tmp[i_79][0];
common/dct.c:93:5: note: type of def: 3.
common/dct.c:93:5: note: mark relevant 4, live 0.
common/dct.c:93:5: note: worklist: examine stmt: _40 = tmp[i_79][0];
common/dct.c:93:5: note: worklist: examine stmt: *_54[2] = _66;
common/dct.c:93:5: note: vect_is_simple_use: operand _66
common/dct.c:93:5: note: def_stmt: _66 = (short int) _65;
common/dct.c:93:5: note: type of def: 3.
common/dct.c:93:5: note: mark relevant 4, live 0.
common/dct.c:93:5: note: worklist: examine stmt: _66 = (short int) _65;
common/dct.c:93:5: note: vect_is_simple_use: operand _65
common/dct.c:93:5: note: def_stmt: _65 = _63 - _64;
common/dct.c:93:5: note: type of def: 3.
common/dct.c:93:5: note: mark relevant 4, live 0.
common/dct.c:93:5: note: worklist: examine stmt: _65 = _63 - _64;
common/dct.c:93:5: note: vect_is_simple_use: operand _63
common/dct.c:93:5: note: def_stmt: _63 = (unsigned short) d01_45;
common/dct.c:93:5: note: type of def: 3.
common/dct.c:93:5: note: mark relevant 4, live 0.
common/dct.c:93:5: note: already marked relevant/live.
common/dct.c:93:5: note: vect_is_simple_use: operand _64
common/dct.c:93:5: note: def_stmt: _64 = (unsigned short) d23_51;
common/dct.c:93:5: note: type of def: 3.
common/dct.c:93:5: note: mark relevant 4, live 0.
common/dct.c:93:5: note: already marked relevant/live.
common/dct.c:93:5: note: worklist: examine stmt: *_54[1] = _61;
common/dct.c:93:5: note: vect_is_simple_use: operand _61
common/dct.c:93:5: note: def_stmt: _61 = (short int) _60;
common/dct.c:93:5: note: type of def: 3.
common/dct.c:93:5: note: mark relevant 4, live 0.
common/dct.c:93:5: note: worklist: examine stmt: _61 = (short int) _60;
common/dct.c:93:5: note: vect_is_simple_use: operand _60
common/dct.c:93:5: note: def_stmt: _60 = _55 - _56;
common/dct.c:93:5: note: type of def: 3.
common/dct.c:93:5: note: mark relevant 4, live 0.
common/dct.c:93:5: note: worklist: examine stmt: _60 = _55 - _56;
common/dct.c:93:5: note: vect_is_simple_use: operand _55
common/dct.c:93:5: note: def_stmt: _55 = (unsigned short) s01_44;
common/dct.c:93:5: note: type of def: 3.
common/dct.c:93:5: note: mark relevant 4, live 0.
common/dct.c:93:5: note: vect_is_simple_use: operand _56
common/dct.c:93:5: note: def_stmt: _56 = (unsigned short) s23_50;
common/dct.c:93:5: note: type of def: 3.
common/dct.c:93:5: note: mark relevant 4, live 0.
common/dct.c:93:5: note: worklist: examine stmt: _56 = (unsigned short) s23_50;
common/dct.c:93:5: note: vect_is_simple_use: operand s23_50
common/dct.c:93:5: note: def_stmt: s23_50 = _47 + _49;
common/dct.c:93:5: note: type of def: 3.
common/dct.c:93:5: note: mark relevant 4, live 0.
common/dct.c:93:5: note: worklist: examine stmt: s23_50 = _47 + _49;
common/dct.c:93:5: note: vect_is_simple_use: operand _47
common/dct.c:93:5: note: def_stmt: _47 = (int) _46;
common/dct.c:93:5: note: type of def: 3.
common/dct.c:93:5: note: mark relevant 4, live 0.
common/dct.c:93:5: note: already marked relevant/live.
common/dct.c:93:5: note: vect_is_simple_use: operand _49
common/dct.c:93:5: note: def_stmt: _49 = (int) _48;
common/dct.c:93:5: note: type of def: 3.
common/dct.c:93:5: note: mark relevant 4, live 0.
common/dct.c:93:5: note: already marked relevant/live.
common/dct.c:93:5: note: worklist: examine stmt: _55 = (unsigned short) s01_44;
common/dct.c:93:5: note: vect_is_simple_use: operand s01_44
common/dct.c:93:5: note: def_stmt: s01_44 = _41 + _43;
common/dct.c:93:5: note: type of def: 3.
common/dct.c:93:5: note: mark relevant 4, live 0.
common/dct.c:93:5: note: worklist: examine stmt: s01_44 = _41 + _43;
common/dct.c:93:5: note: vect_is_simple_use: operand _41
common/dct.c:93:5: note: def_stmt: _41 = (int) _40;
common/dct.c:93:5: note: type of def: 3.
common/dct.c:93:5: note: mark relevant 4, live 0.
common/dct.c:93:5: note: already marked relevant/live.
common/dct.c:93:5: note: vect_is_simple_use: operand _43
common/dct.c:93:5: note: def_stmt: _43 = (int) _42;
common/dct.c:93:5: note: type of def: 3.
common/dct.c:93:5: note: mark relevant 4, live 0.
common/dct.c:93:5: note: already marked relevant/live.
common/dct.c:93:5: note: worklist: examine stmt: *_54[0] = _58;
common/dct.c:93:5: note: vect_is_simple_use: operand _58
common/dct.c:93:5: note: def_stmt: _58 = (short int) _57;
common/dct.c:93:5: note: type of def: 3.
common/dct.c:93:5: note: mark relevant 4, live 0.
common/dct.c:93:5: note: worklist: examine stmt: _58 = (short int) _57;
common/dct.c:93:5: note: vect_is_simple_use: operand _57
common/dct.c:93:5: note: def_stmt: _57 = _55 + _56;
common/dct.c:93:5: note: type of def: 3.
common/dct.c:93:5: note: mark relevant 4, live 0.
common/dct.c:93:5: note: worklist: examine stmt: _57 = _55 + _56;
common/dct.c:93:5: note: vect_is_simple_use: operand _55
common/dct.c:93:5: note: def_stmt: _55 = (unsigned short) s01_44;
common/dct.c:93:5: note: type of def: 3.
common/dct.c:93:5: note: mark relevant 4, live 0.
common/dct.c:93:5: note: already marked relevant/live.
common/dct.c:93:5: note: vect_is_simple_use: operand _56
common/dct.c:93:5: note: def_stmt: _56 = (unsigned short) s23_50;
common/dct.c:93:5: note: type of def: 3.
common/dct.c:93:5: note: mark relevant 4, live 0.
common/dct.c:93:5: note: already marked relevant/live.
common/dct.c:93:5: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _40 = tmp[i_79][0];
  stmt_b: _42 = tmp[i_79][1];
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 1)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _40 = tmp[i_79][0];
  stmt_b: _46 = tmp[i_79][2];
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _40 = tmp[i_79][0];
  stmt_b: _48 = tmp[i_79][3];
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _40 = tmp[i_79][0];
  stmt_b: *_54[0] = _58;
) -> no dependence
(compute_affine_dependence
  stmt_a: _40 = tmp[i_79][0];
  stmt_b: *_54[1] = _61;
) -> no dependence
(compute_affine_dependence
  stmt_a: _40 = tmp[i_79][0];
  stmt_b: *_54[2] = _66;
) -> no dependence
(compute_affine_dependence
  stmt_a: _40 = tmp[i_79][0];
  stmt_b: *_54[3] = _69;
) -> no dependence
(compute_affine_dependence
  stmt_a: _42 = tmp[i_79][1];
  stmt_b: _46 = tmp[i_79][2];
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _42 = tmp[i_79][1];
  stmt_b: _48 = tmp[i_79][3];
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _42 = tmp[i_79][1];
  stmt_b: *_54[0] = _58;
) -> no dependence
(compute_affine_dependence
  stmt_a: _42 = tmp[i_79][1];
  stmt_b: *_54[1] = _61;
) -> no dependence
(compute_affine_dependence
  stmt_a: _42 = tmp[i_79][1];
  stmt_b: *_54[2] = _66;
) -> no dependence
(compute_affine_dependence
  stmt_a: _42 = tmp[i_79][1];
  stmt_b: *_54[3] = _69;
) -> no dependence
(compute_affine_dependence
  stmt_a: _46 = tmp[i_79][2];
  stmt_b: _48 = tmp[i_79][3];
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _46 = tmp[i_79][2];
  stmt_b: *_54[0] = _58;
) -> no dependence
(compute_affine_dependence
  stmt_a: _46 = tmp[i_79][2];
  stmt_b: *_54[1] = _61;
) -> no dependence
(compute_affine_dependence
  stmt_a: _46 = tmp[i_79][2];
  stmt_b: *_54[2] = _66;
) -> no dependence
(compute_affine_dependence
  stmt_a: _46 = tmp[i_79][2];
  stmt_b: *_54[3] = _69;
) -> no dependence
(compute_affine_dependence
  stmt_a: _48 = tmp[i_79][3];
  stmt_b: *_54[0] = _58;
) -> no dependence
(compute_affine_dependence
  stmt_a: _48 = tmp[i_79][3];
  stmt_b: *_54[1] = _61;
) -> no dependence
(compute_affine_dependence
  stmt_a: _48 = tmp[i_79][3];
  stmt_b: *_54[2] = _66;
) -> no dependence
(compute_affine_dependence
  stmt_a: _48 = tmp[i_79][3];
  stmt_b: *_54[3] = _69;
) -> no dependence
(compute_affine_dependence
  stmt_a: *_54[0] = _58;
  stmt_b: *_54[1] = _61;
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 1)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: *_54[0] = _58;
  stmt_b: *_54[2] = _66;
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: *_54[0] = _58;
  stmt_b: *_54[3] = _69;
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: *_54[1] = _61;
  stmt_b: *_54[2] = _66;
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: *_54[1] = _61;
  stmt_b: *_54[3] = _69;
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: *_54[2] = _66;
  stmt_b: *_54[3] = _69;
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _40 = tmp[i_79][0];
  stmt_b: _40 = tmp[i_79][0];
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 0)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_2)
  (chrec_b = {0, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _42 = tmp[i_79][1];
  stmt_b: _42 = tmp[i_79][1];
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_2)
  (chrec_b = {0, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _46 = tmp[i_79][2];
  stmt_b: _46 = tmp[i_79][2];
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_2)
  (chrec_b = {0, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _48 = tmp[i_79][3];
  stmt_b: _48 = tmp[i_79][3];
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_2)
  (chrec_b = {0, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: *_54[0] = _58;
  stmt_b: *_54[0] = _58;
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 0)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 8}_2)
  (chrec_b = {0B, +, 8}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: *_54[1] = _61;
  stmt_b: *_54[1] = _61;
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 8}_2)
  (chrec_b = {0B, +, 8}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: *_54[2] = _66;
  stmt_b: *_54[2] = _66;
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 8}_2)
  (chrec_b = {0B, +, 8}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: *_54[3] = _69;
  stmt_b: *_54[3] = _69;
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 8}_2)
  (chrec_b = {0B, +, 8}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/dct.c:93:5: note: === vect_determine_vectorization_factor ===
common/dct.c:93:5: note: ==> examining phi: i_79 = PHI <0(5), i_71(7)>

common/dct.c:93:5: note: ==> examining phi: .MEM_81 = PHI <.MEM_38(5), .MEM_70(7)>

common/dct.c:93:5: note: ==> examining phi: ivtmp_157 = PHI <4(5), ivtmp_156(7)>

common/dct.c:93:5: note: ==> examining statement: # DEBUG i => i_79

common/dct.c:93:5: note: skip.
common/dct.c:93:5: note: ==> examining statement: _40 = tmp[i_79][0];

common/dct.c:93:5: note: get vectype for scalar type:  short int
common/dct.c:93:5: note: vectype: vector(8) short int
common/dct.c:93:5: note: nunits = 8
common/dct.c:93:5: note: ==> examining statement: _41 = (int) _40;

common/dct.c:93:5: note: get vectype for scalar type:  int
common/dct.c:93:5: note: vectype: vector(4) int
common/dct.c:93:5: note: get vectype for scalar type:  short int
common/dct.c:93:5: note: vectype: vector(8) short int
common/dct.c:93:5: note: nunits = 8
common/dct.c:93:5: note: ==> examining statement: _42 = tmp[i_79][1];

common/dct.c:93:5: note: get vectype for scalar type:  short int
common/dct.c:93:5: note: vectype: vector(8) short int
common/dct.c:93:5: note: nunits = 8
common/dct.c:93:5: note: ==> examining statement: _43 = (int) _42;

common/dct.c:93:5: note: get vectype for scalar type:  int
common/dct.c:93:5: note: vectype: vector(4) int
common/dct.c:93:5: note: get vectype for scalar type:  short int
common/dct.c:93:5: note: vectype: vector(8) short int
common/dct.c:93:5: note: nunits = 8
common/dct.c:93:5: note: ==> examining statement: s01_44 = _41 + _43;

common/dct.c:93:5: note: get vectype for scalar type:  int
common/dct.c:93:5: note: vectype: vector(4) int
common/dct.c:93:5: note: get vectype for scalar type:  int
common/dct.c:93:5: note: vectype: vector(4) int
common/dct.c:93:5: note: nunits = 4
common/dct.c:93:5: note: ==> examining statement: # DEBUG s01 => s01_44

common/dct.c:93:5: note: skip.
common/dct.c:93:5: note: ==> examining statement: d01_45 = _41 - _43;

common/dct.c:93:5: note: get vectype for scalar type:  int
common/dct.c:93:5: note: vectype: vector(4) int
common/dct.c:93:5: note: get vectype for scalar type:  int
common/dct.c:93:5: note: vectype: vector(4) int
common/dct.c:93:5: note: nunits = 4
common/dct.c:93:5: note: ==> examining statement: # DEBUG d01 => d01_45

common/dct.c:93:5: note: skip.
common/dct.c:93:5: note: ==> examining statement: _46 = tmp[i_79][2];

common/dct.c:93:5: note: get vectype for scalar type:  short int
common/dct.c:93:5: note: vectype: vector(8) short int
common/dct.c:93:5: note: nunits = 8
common/dct.c:93:5: note: ==> examining statement: _47 = (int) _46;

common/dct.c:93:5: note: get vectype for scalar type:  int
common/dct.c:93:5: note: vectype: vector(4) int
common/dct.c:93:5: note: get vectype for scalar type:  short int
common/dct.c:93:5: note: vectype: vector(8) short int
common/dct.c:93:5: note: nunits = 8
common/dct.c:93:5: note: ==> examining statement: _48 = tmp[i_79][3];

common/dct.c:93:5: note: get vectype for scalar type:  short int
common/dct.c:93:5: note: vectype: vector(8) short int
common/dct.c:93:5: note: nunits = 8
common/dct.c:93:5: note: ==> examining statement: _49 = (int) _48;

common/dct.c:93:5: note: get vectype for scalar type:  int
common/dct.c:93:5: note: vectype: vector(4) int
common/dct.c:93:5: note: get vectype for scalar type:  short int
common/dct.c:93:5: note: vectype: vector(8) short int
common/dct.c:93:5: note: nunits = 8
common/dct.c:93:5: note: ==> examining statement: s23_50 = _47 + _49;

common/dct.c:93:5: note: get vectype for scalar type:  int
common/dct.c:93:5: note: vectype: vector(4) int
common/dct.c:93:5: note: get vectype for scalar type:  int
common/dct.c:93:5: note: vectype: vector(4) int
common/dct.c:93:5: note: nunits = 4
common/dct.c:93:5: note: ==> examining statement: # DEBUG s23 => s23_50

common/dct.c:93:5: note: skip.
common/dct.c:93:5: note: ==> examining statement: d23_51 = _47 - _49;

common/dct.c:93:5: note: get vectype for scalar type:  int
common/dct.c:93:5: note: vectype: vector(4) int
common/dct.c:93:5: note: get vectype for scalar type:  int
common/dct.c:93:5: note: vectype: vector(4) int
common/dct.c:93:5: note: nunits = 4
common/dct.c:93:5: note: ==> examining statement: # DEBUG d23 => d23_51

common/dct.c:93:5: note: skip.
common/dct.c:93:5: note: ==> examining statement: _52 = (long unsigned int) i_79;

common/dct.c:93:5: note: skip.
common/dct.c:93:5: note: ==> examining statement: _53 = _52 * 8;

common/dct.c:93:5: note: skip.
common/dct.c:93:5: note: ==> examining statement: _54 = d_8(D) + _53;

common/dct.c:93:5: note: skip.
common/dct.c:93:5: note: ==> examining statement: _55 = (unsigned short) s01_44;

common/dct.c:93:5: note: get vectype for scalar type:  unsigned short
common/dct.c:93:5: note: vectype: vector(8) unsigned short
common/dct.c:93:5: note: get vectype for scalar type:  unsigned short
common/dct.c:93:5: note: vectype: vector(8) unsigned short
common/dct.c:93:5: note: nunits = 8
common/dct.c:93:5: note: ==> examining statement: _56 = (unsigned short) s23_50;

common/dct.c:93:5: note: get vectype for scalar type:  unsigned short
common/dct.c:93:5: note: vectype: vector(8) unsigned short
common/dct.c:93:5: note: get vectype for scalar type:  unsigned short
common/dct.c:93:5: note: vectype: vector(8) unsigned short
common/dct.c:93:5: note: nunits = 8
common/dct.c:93:5: note: ==> examining statement: _57 = _55 + _56;

common/dct.c:93:5: note: get vectype for scalar type:  unsigned short
common/dct.c:93:5: note: vectype: vector(8) unsigned short
common/dct.c:93:5: note: get vectype for scalar type:  unsigned short
common/dct.c:93:5: note: vectype: vector(8) unsigned short
common/dct.c:93:5: note: nunits = 8
common/dct.c:93:5: note: ==> examining statement: _58 = (short int) _57;

common/dct.c:93:5: note: get vectype for scalar type:  short int
common/dct.c:93:5: note: vectype: vector(8) short int
common/dct.c:93:5: note: get vectype for scalar type:  short int
common/dct.c:93:5: note: vectype: vector(8) short int
common/dct.c:93:5: note: nunits = 8
common/dct.c:93:5: note: ==> examining statement: *_54[0] = _58;

common/dct.c:93:5: note: get vectype for scalar type:  int16_t
common/dct.c:93:5: note: vectype: vector(8) short int
common/dct.c:93:5: note: nunits = 8
common/dct.c:93:5: note: ==> examining statement: _60 = _55 - _56;

common/dct.c:93:5: note: get vectype for scalar type:  unsigned short
common/dct.c:93:5: note: vectype: vector(8) unsigned short
common/dct.c:93:5: note: get vectype for scalar type:  unsigned short
common/dct.c:93:5: note: vectype: vector(8) unsigned short
common/dct.c:93:5: note: nunits = 8
common/dct.c:93:5: note: ==> examining statement: _61 = (short int) _60;

common/dct.c:93:5: note: get vectype for scalar type:  short int
common/dct.c:93:5: note: vectype: vector(8) short int
common/dct.c:93:5: note: get vectype for scalar type:  short int
common/dct.c:93:5: note: vectype: vector(8) short int
common/dct.c:93:5: note: nunits = 8
common/dct.c:93:5: note: ==> examining statement: *_54[1] = _61;

common/dct.c:93:5: note: get vectype for scalar type:  int16_t
common/dct.c:93:5: note: vectype: vector(8) short int
common/dct.c:93:5: note: nunits = 8
common/dct.c:93:5: note: ==> examining statement: _63 = (unsigned short) d01_45;

common/dct.c:93:5: note: get vectype for scalar type:  unsigned short
common/dct.c:93:5: note: vectype: vector(8) unsigned short
common/dct.c:93:5: note: get vectype for scalar type:  unsigned short
common/dct.c:93:5: note: vectype: vector(8) unsigned short
common/dct.c:93:5: note: nunits = 8
common/dct.c:93:5: note: ==> examining statement: _64 = (unsigned short) d23_51;

common/dct.c:93:5: note: get vectype for scalar type:  unsigned short
common/dct.c:93:5: note: vectype: vector(8) unsigned short
common/dct.c:93:5: note: get vectype for scalar type:  unsigned short
common/dct.c:93:5: note: vectype: vector(8) unsigned short
common/dct.c:93:5: note: nunits = 8
common/dct.c:93:5: note: ==> examining statement: _65 = _63 - _64;

common/dct.c:93:5: note: get vectype for scalar type:  unsigned short
common/dct.c:93:5: note: vectype: vector(8) unsigned short
common/dct.c:93:5: note: get vectype for scalar type:  unsigned short
common/dct.c:93:5: note: vectype: vector(8) unsigned short
common/dct.c:93:5: note: nunits = 8
common/dct.c:93:5: note: ==> examining statement: _66 = (short int) _65;

common/dct.c:93:5: note: get vectype for scalar type:  short int
common/dct.c:93:5: note: vectype: vector(8) short int
common/dct.c:93:5: note: get vectype for scalar type:  short int
common/dct.c:93:5: note: vectype: vector(8) short int
common/dct.c:93:5: note: nunits = 8
common/dct.c:93:5: note: ==> examining statement: *_54[2] = _66;

common/dct.c:93:5: note: get vectype for scalar type:  int16_t
common/dct.c:93:5: note: vectype: vector(8) short int
common/dct.c:93:5: note: nunits = 8
common/dct.c:93:5: note: ==> examining statement: _68 = _63 + _64;

common/dct.c:93:5: note: get vectype for scalar type:  unsigned short
common/dct.c:93:5: note: vectype: vector(8) unsigned short
common/dct.c:93:5: note: get vectype for scalar type:  unsigned short
common/dct.c:93:5: note: vectype: vector(8) unsigned short
common/dct.c:93:5: note: nunits = 8
common/dct.c:93:5: note: ==> examining statement: _69 = (short int) _68;

common/dct.c:93:5: note: get vectype for scalar type:  short int
common/dct.c:93:5: note: vectype: vector(8) short int
common/dct.c:93:5: note: get vectype for scalar type:  short int
common/dct.c:93:5: note: vectype: vector(8) short int
common/dct.c:93:5: note: nunits = 8
common/dct.c:93:5: note: ==> examining statement: *_54[3] = _69;

common/dct.c:93:5: note: get vectype for scalar type:  int16_t
common/dct.c:93:5: note: vectype: vector(8) short int
common/dct.c:93:5: note: nunits = 8
common/dct.c:93:5: note: ==> examining statement: i_71 = i_79 + 1;

common/dct.c:93:5: note: skip.
common/dct.c:93:5: note: ==> examining statement: # DEBUG i => i_71

common/dct.c:93:5: note: skip.
common/dct.c:93:5: note: ==> examining statement: # DEBUG i => i_71

common/dct.c:93:5: note: skip.
common/dct.c:93:5: note: ==> examining statement: ivtmp_156 = ivtmp_157 - 1;

common/dct.c:93:5: note: skip.
common/dct.c:93:5: note: ==> examining statement: if (ivtmp_156 != 0)

common/dct.c:93:5: note: skip.
common/dct.c:93:5: note: vectorization factor = 8
common/dct.c:93:5: note: === vect_analyze_data_refs_alignment ===
common/dct.c:93:5: note: vect_compute_data_ref_alignment:
common/dct.c:93:5: note: misalign = 0 bytes of ref tmp[i_79][0]
common/dct.c:93:5: note: vect_compute_data_ref_alignment:
common/dct.c:93:5: note: misalign = 2 bytes of ref tmp[i_79][1]
common/dct.c:93:5: note: vect_compute_data_ref_alignment:
common/dct.c:93:5: note: misalign = 4 bytes of ref tmp[i_79][2]
common/dct.c:93:5: note: vect_compute_data_ref_alignment:
common/dct.c:93:5: note: misalign = 6 bytes of ref tmp[i_79][3]
common/dct.c:93:5: note: vect_compute_data_ref_alignment:
common/dct.c:93:5: note: can't force alignment of ref: *_54[0]
common/dct.c:93:5: note: vect_compute_data_ref_alignment:
common/dct.c:93:5: note: can't force alignment of ref: *_54[1]
common/dct.c:93:5: note: vect_compute_data_ref_alignment:
common/dct.c:93:5: note: can't force alignment of ref: *_54[2]
common/dct.c:93:5: note: vect_compute_data_ref_alignment:
common/dct.c:93:5: note: can't force alignment of ref: *_54[3]
common/dct.c:93:5: note: === vect_prune_runtime_alias_test_list ===
common/dct.c:93:5: note: === vect_enhance_data_refs_alignment ===
common/dct.c:93:5: note: vector alignment may not be reachable
common/dct.c:93:5: note: vect_can_advance_ivs_p:
common/dct.c:93:5: note: Analyze phi: i_79 = PHI <0(5), i_71(7)>

common/dct.c:93:5: note: Analyze phi: .MEM_81 = PHI <.MEM_38(5), .MEM_70(7)>

common/dct.c:93:5: note: virtual phi. skip.
common/dct.c:93:5: note: Analyze phi: ivtmp_157 = PHI <4(5), ivtmp_156(7)>

common/dct.c:93:5: note: Vectorizing an unaligned access.
common/dct.c:93:5: note: === vect_analyze_slp ===
common/dct.c:93:5: note: Build SLP for *_54[0] = _58;

common/dct.c:93:5: note: Build SLP for *_54[1] = _61;

common/dct.c:93:5: note: Build SLP for *_54[2] = _66;

common/dct.c:93:5: note: Build SLP for *_54[3] = _69;

common/dct.c:93:5: note: vect_is_simple_use: operand _58
common/dct.c:93:5: note: def_stmt: _58 = (short int) _57;
common/dct.c:93:5: note: type of def: 3.
common/dct.c:93:5: note: vect_is_simple_use: operand _61
common/dct.c:93:5: note: def_stmt: _61 = (short int) _60;
common/dct.c:93:5: note: type of def: 3.
common/dct.c:93:5: note: vect_is_simple_use: operand _66
common/dct.c:93:5: note: def_stmt: _66 = (short int) _65;
common/dct.c:93:5: note: type of def: 3.
common/dct.c:93:5: note: vect_is_simple_use: operand _69
common/dct.c:93:5: note: def_stmt: _69 = (short int) _68;
common/dct.c:93:5: note: type of def: 3.
common/dct.c:93:5: note: Build SLP for _58 = (short int) _57;

common/dct.c:93:5: note: Build SLP for _61 = (short int) _60;

common/dct.c:93:5: note: Build SLP for _66 = (short int) _65;

common/dct.c:93:5: note: Build SLP for _69 = (short int) _68;

common/dct.c:93:5: note: vect_is_simple_use: operand _57
common/dct.c:93:5: note: def_stmt: _57 = _55 + _56;
common/dct.c:93:5: note: type of def: 3.
common/dct.c:93:5: note: vect_is_simple_use: operand _60
common/dct.c:93:5: note: def_stmt: _60 = _55 - _56;
common/dct.c:93:5: note: type of def: 3.
common/dct.c:93:5: note: vect_is_simple_use: operand _65
common/dct.c:93:5: note: def_stmt: _65 = _63 - _64;
common/dct.c:93:5: note: type of def: 3.
common/dct.c:93:5: note: vect_is_simple_use: operand _68
common/dct.c:93:5: note: def_stmt: _68 = _63 + _64;
common/dct.c:93:5: note: type of def: 3.
common/dct.c:93:5: note: Build SLP for _57 = _55 + _56;

common/dct.c:93:5: note: Build SLP for _60 = _55 - _56;

common/dct.c:93:5: note: Build SLP failed: different operation in stmt _60 = _55 - _56;

common/dct.c:93:5: note: Build SLP for _65 = _63 - _64;

common/dct.c:93:5: note: Build SLP failed: different operation in stmt _65 = _63 - _64;

common/dct.c:93:5: note: Build SLP for _68 = _63 + _64;

common/dct.c:93:5: note: === vect_make_slp_decision ===
common/dct.c:93:5: note: === vect_detect_hybrid_slp ===
common/dct.c:93:5: note: === vect_analyze_loop_operations ===
common/dct.c:93:5: note: examining phi: i_79 = PHI <0(5), i_71(7)>

common/dct.c:93:5: note: examining phi: .MEM_81 = PHI <.MEM_38(5), .MEM_70(7)>

common/dct.c:93:5: note: examining phi: ivtmp_157 = PHI <4(5), ivtmp_156(7)>

common/dct.c:93:5: note: ==> examining statement: # DEBUG i => i_79
common/dct.c:93:5: note: irrelevant.
common/dct.c:93:5: note: ==> examining statement: _40 = tmp[i_79][0];
common/dct.c:93:5: note: num. args = 4 (not unary/binary/ternary op).
common/dct.c:93:5: note: vect_is_simple_use: operand tmp[i_79][0]
common/dct.c:93:5: note: not ssa-name.
common/dct.c:93:5: note: use not simple.
common/dct.c:93:5: note: no array mode for V8HI[4]
common/dct.c:93:5: note: vect_model_load_cost: strided group_size = 4 .
common/dct.c:93:5: note: vect_model_load_cost: aligned.
common/dct.c:93:5: note: vect_model_load_cost: inside_cost = 9, prologue_cost = 0 .
common/dct.c:93:5: note: ==> examining statement: _41 = (int) _40;
common/dct.c:93:5: note: vect_is_simple_use: operand _40
common/dct.c:93:5: note: def_stmt: _40 = tmp[i_79][0];
common/dct.c:93:5: note: type of def: 3.
common/dct.c:93:5: note: === vectorizable_conversion ===
common/dct.c:93:5: note: vect_model_promotion_demotion_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:93:5: note: ==> examining statement: _42 = tmp[i_79][1];
common/dct.c:93:5: note: num. args = 4 (not unary/binary/ternary op).
common/dct.c:93:5: note: vect_is_simple_use: operand tmp[i_79][1]
common/dct.c:93:5: note: not ssa-name.
common/dct.c:93:5: note: use not simple.
common/dct.c:93:5: note: no array mode for V8HI[4]
common/dct.c:93:5: note: vect_model_load_cost: aligned.
common/dct.c:93:5: note: vect_model_load_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:93:5: note: ==> examining statement: _43 = (int) _42;
common/dct.c:93:5: note: vect_is_simple_use: operand _42
common/dct.c:93:5: note: def_stmt: _42 = tmp[i_79][1];
common/dct.c:93:5: note: type of def: 3.
common/dct.c:93:5: note: === vectorizable_conversion ===
common/dct.c:93:5: note: vect_model_promotion_demotion_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:93:5: note: ==> examining statement: s01_44 = _41 + _43;
common/dct.c:93:5: note: vect_is_simple_use: operand _41
common/dct.c:93:5: note: def_stmt: _41 = (int) _40;
common/dct.c:93:5: note: type of def: 3.
common/dct.c:93:5: note: vect_is_simple_use: operand _43
common/dct.c:93:5: note: def_stmt: _43 = (int) _42;
common/dct.c:93:5: note: type of def: 3.
common/dct.c:93:5: note: === vectorizable_operation ===
common/dct.c:93:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:93:5: note: ==> examining statement: # DEBUG s01 => s01_44
common/dct.c:93:5: note: irrelevant.
common/dct.c:93:5: note: ==> examining statement: d01_45 = _41 - _43;
common/dct.c:93:5: note: vect_is_simple_use: operand _41
common/dct.c:93:5: note: def_stmt: _41 = (int) _40;
common/dct.c:93:5: note: type of def: 3.
common/dct.c:93:5: note: vect_is_simple_use: operand _43
common/dct.c:93:5: note: def_stmt: _43 = (int) _42;
common/dct.c:93:5: note: type of def: 3.
common/dct.c:93:5: note: === vectorizable_operation ===
common/dct.c:93:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:93:5: note: ==> examining statement: # DEBUG d01 => d01_45
common/dct.c:93:5: note: irrelevant.
common/dct.c:93:5: note: ==> examining statement: _46 = tmp[i_79][2];
common/dct.c:93:5: note: num. args = 4 (not unary/binary/ternary op).
common/dct.c:93:5: note: vect_is_simple_use: operand tmp[i_79][2]
common/dct.c:93:5: note: not ssa-name.
common/dct.c:93:5: note: use not simple.
common/dct.c:93:5: note: no array mode for V8HI[4]
common/dct.c:93:5: note: vect_model_load_cost: aligned.
common/dct.c:93:5: note: vect_model_load_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:93:5: note: ==> examining statement: _47 = (int) _46;
common/dct.c:93:5: note: vect_is_simple_use: operand _46
common/dct.c:93:5: note: def_stmt: _46 = tmp[i_79][2];
common/dct.c:93:5: note: type of def: 3.
common/dct.c:93:5: note: === vectorizable_conversion ===
common/dct.c:93:5: note: vect_model_promotion_demotion_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:93:5: note: ==> examining statement: _48 = tmp[i_79][3];
common/dct.c:93:5: note: num. args = 4 (not unary/binary/ternary op).
common/dct.c:93:5: note: vect_is_simple_use: operand tmp[i_79][3]
common/dct.c:93:5: note: not ssa-name.
common/dct.c:93:5: note: use not simple.
common/dct.c:93:5: note: no array mode for V8HI[4]
common/dct.c:93:5: note: vect_model_load_cost: aligned.
common/dct.c:93:5: note: vect_model_load_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:93:5: note: ==> examining statement: _49 = (int) _48;
common/dct.c:93:5: note: vect_is_simple_use: operand _48
common/dct.c:93:5: note: def_stmt: _48 = tmp[i_79][3];
common/dct.c:93:5: note: type of def: 3.
common/dct.c:93:5: note: === vectorizable_conversion ===
common/dct.c:93:5: note: vect_model_promotion_demotion_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:93:5: note: ==> examining statement: s23_50 = _47 + _49;
common/dct.c:93:5: note: vect_is_simple_use: operand _47
common/dct.c:93:5: note: def_stmt: _47 = (int) _46;
common/dct.c:93:5: note: type of def: 3.
common/dct.c:93:5: note: vect_is_simple_use: operand _49
common/dct.c:93:5: note: def_stmt: _49 = (int) _48;
common/dct.c:93:5: note: type of def: 3.
common/dct.c:93:5: note: === vectorizable_operation ===
common/dct.c:93:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:93:5: note: ==> examining statement: # DEBUG s23 => s23_50
common/dct.c:93:5: note: irrelevant.
common/dct.c:93:5: note: ==> examining statement: d23_51 = _47 - _49;
common/dct.c:93:5: note: vect_is_simple_use: operand _47
common/dct.c:93:5: note: def_stmt: _47 = (int) _46;
common/dct.c:93:5: note: type of def: 3.
common/dct.c:93:5: note: vect_is_simple_use: operand _49
common/dct.c:93:5: note: def_stmt: _49 = (int) _48;
common/dct.c:93:5: note: type of def: 3.
common/dct.c:93:5: note: === vectorizable_operation ===
common/dct.c:93:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:93:5: note: ==> examining statement: # DEBUG d23 => d23_51
common/dct.c:93:5: note: irrelevant.
common/dct.c:93:5: note: ==> examining statement: _52 = (long unsigned int) i_79;
common/dct.c:93:5: note: irrelevant.
common/dct.c:93:5: note: ==> examining statement: _53 = _52 * 8;
common/dct.c:93:5: note: irrelevant.
common/dct.c:93:5: note: ==> examining statement: _54 = d_8(D) + _53;
common/dct.c:93:5: note: irrelevant.
common/dct.c:93:5: note: ==> examining statement: _55 = (unsigned short) s01_44;
common/dct.c:93:5: note: vect_is_simple_use: operand s01_44
common/dct.c:93:5: note: def_stmt: s01_44 = _41 + _43;
common/dct.c:93:5: note: type of def: 3.
common/dct.c:93:5: note: === vectorizable_conversion ===
common/dct.c:93:5: note: vect_model_promotion_demotion_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:93:5: note: ==> examining statement: _56 = (unsigned short) s23_50;
common/dct.c:93:5: note: vect_is_simple_use: operand s23_50
common/dct.c:93:5: note: def_stmt: s23_50 = _47 + _49;
common/dct.c:93:5: note: type of def: 3.
common/dct.c:93:5: note: === vectorizable_conversion ===
common/dct.c:93:5: note: vect_model_promotion_demotion_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:93:5: note: ==> examining statement: _57 = _55 + _56;
common/dct.c:93:5: note: vect_is_simple_use: operand _55
common/dct.c:93:5: note: def_stmt: _55 = (unsigned short) s01_44;
common/dct.c:93:5: note: type of def: 3.
common/dct.c:93:5: note: vect_is_simple_use: operand _56
common/dct.c:93:5: note: def_stmt: _56 = (unsigned short) s23_50;
common/dct.c:93:5: note: type of def: 3.
common/dct.c:93:5: note: === vectorizable_operation ===
common/dct.c:93:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:93:5: note: ==> examining statement: _58 = (short int) _57;
common/dct.c:93:5: note: vect_is_simple_use: operand _57
common/dct.c:93:5: note: def_stmt: _57 = _55 + _56;
common/dct.c:93:5: note: type of def: 3.
common/dct.c:93:5: note: vect_is_simple_use: operand _57
common/dct.c:93:5: note: def_stmt: _57 = _55 + _56;
common/dct.c:93:5: note: type of def: 3.
common/dct.c:93:5: note: no optab.
common/dct.c:93:5: note: vect_is_simple_use: operand _57
common/dct.c:93:5: note: def_stmt: _57 = _55 + _56;
common/dct.c:93:5: note: type of def: 3.
common/dct.c:93:5: note: === vectorizable_assignment ===
common/dct.c:93:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:93:5: note: ==> examining statement: *_54[0] = _58;
common/dct.c:93:5: note: vect_is_simple_use: operand _58
common/dct.c:93:5: note: def_stmt: _58 = (short int) _57;
common/dct.c:93:5: note: type of def: 3.
common/dct.c:93:5: note: no array mode for V8HI[4]
common/dct.c:93:5: note: vect_is_simple_use: operand _61
common/dct.c:93:5: note: def_stmt: _61 = (short int) _60;
common/dct.c:93:5: note: type of def: 3.
common/dct.c:93:5: note: vect_is_simple_use: operand _66
common/dct.c:93:5: note: def_stmt: _66 = (short int) _65;
common/dct.c:93:5: note: type of def: 3.
common/dct.c:93:5: note: vect_is_simple_use: operand _69
common/dct.c:93:5: note: def_stmt: _69 = (short int) _68;
common/dct.c:93:5: note: type of def: 3.
common/dct.c:93:5: note: vect_model_store_cost: strided group_size = 4 .
common/dct.c:93:5: note: vect_model_store_cost: unaligned supported by hardware.
common/dct.c:93:5: note: vect_model_store_cost: inside_cost = 10, prologue_cost = 0 .
common/dct.c:93:5: note: ==> examining statement: _60 = _55 - _56;
common/dct.c:93:5: note: vect_is_simple_use: operand _55
common/dct.c:93:5: note: def_stmt: _55 = (unsigned short) s01_44;
common/dct.c:93:5: note: type of def: 3.
common/dct.c:93:5: note: vect_is_simple_use: operand _56
common/dct.c:93:5: note: def_stmt: _56 = (unsigned short) s23_50;
common/dct.c:93:5: note: type of def: 3.
common/dct.c:93:5: note: === vectorizable_operation ===
common/dct.c:93:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:93:5: note: ==> examining statement: _61 = (short int) _60;
common/dct.c:93:5: note: vect_is_simple_use: operand _60
common/dct.c:93:5: note: def_stmt: _60 = _55 - _56;
common/dct.c:93:5: note: type of def: 3.
common/dct.c:93:5: note: vect_is_simple_use: operand _60
common/dct.c:93:5: note: def_stmt: _60 = _55 - _56;
common/dct.c:93:5: note: type of def: 3.
common/dct.c:93:5: note: no optab.
common/dct.c:93:5: note: vect_is_simple_use: operand _60
common/dct.c:93:5: note: def_stmt: _60 = _55 - _56;
common/dct.c:93:5: note: type of def: 3.
common/dct.c:93:5: note: === vectorizable_assignment ===
common/dct.c:93:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:93:5: note: ==> examining statement: *_54[1] = _61;
common/dct.c:93:5: note: vect_is_simple_use: operand _61
common/dct.c:93:5: note: def_stmt: _61 = (short int) _60;
common/dct.c:93:5: note: type of def: 3.
common/dct.c:93:5: note: no array mode for V8HI[4]
common/dct.c:93:5: note: vect_model_store_cost: unaligned supported by hardware.
common/dct.c:93:5: note: vect_model_store_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:93:5: note: ==> examining statement: _63 = (unsigned short) d01_45;
common/dct.c:93:5: note: vect_is_simple_use: operand d01_45
common/dct.c:93:5: note: def_stmt: d01_45 = _41 - _43;
common/dct.c:93:5: note: type of def: 3.
common/dct.c:93:5: note: === vectorizable_conversion ===
common/dct.c:93:5: note: vect_model_promotion_demotion_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:93:5: note: ==> examining statement: _64 = (unsigned short) d23_51;
common/dct.c:93:5: note: vect_is_simple_use: operand d23_51
common/dct.c:93:5: note: def_stmt: d23_51 = _47 - _49;
common/dct.c:93:5: note: type of def: 3.
common/dct.c:93:5: note: === vectorizable_conversion ===
common/dct.c:93:5: note: vect_model_promotion_demotion_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:93:5: note: ==> examining statement: _65 = _63 - _64;
common/dct.c:93:5: note: vect_is_simple_use: operand _63
common/dct.c:93:5: note: def_stmt: _63 = (unsigned short) d01_45;
common/dct.c:93:5: note: type of def: 3.
common/dct.c:93:5: note: vect_is_simple_use: operand _64
common/dct.c:93:5: note: def_stmt: _64 = (unsigned short) d23_51;
common/dct.c:93:5: note: type of def: 3.
common/dct.c:93:5: note: === vectorizable_operation ===
common/dct.c:93:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:93:5: note: ==> examining statement: _66 = (short int) _65;
common/dct.c:93:5: note: vect_is_simple_use: operand _65
common/dct.c:93:5: note: def_stmt: _65 = _63 - _64;
common/dct.c:93:5: note: type of def: 3.
common/dct.c:93:5: note: vect_is_simple_use: operand _65
common/dct.c:93:5: note: def_stmt: _65 = _63 - _64;
common/dct.c:93:5: note: type of def: 3.
common/dct.c:93:5: note: no optab.
common/dct.c:93:5: note: vect_is_simple_use: operand _65
common/dct.c:93:5: note: def_stmt: _65 = _63 - _64;
common/dct.c:93:5: note: type of def: 3.
common/dct.c:93:5: note: === vectorizable_assignment ===
common/dct.c:93:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:93:5: note: ==> examining statement: *_54[2] = _66;
common/dct.c:93:5: note: vect_is_simple_use: operand _66
common/dct.c:93:5: note: def_stmt: _66 = (short int) _65;
common/dct.c:93:5: note: type of def: 3.
common/dct.c:93:5: note: no array mode for V8HI[4]
common/dct.c:93:5: note: vect_model_store_cost: unaligned supported by hardware.
common/dct.c:93:5: note: vect_model_store_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:93:5: note: ==> examining statement: _68 = _63 + _64;
common/dct.c:93:5: note: vect_is_simple_use: operand _63
common/dct.c:93:5: note: def_stmt: _63 = (unsigned short) d01_45;
common/dct.c:93:5: note: type of def: 3.
common/dct.c:93:5: note: vect_is_simple_use: operand _64
common/dct.c:93:5: note: def_stmt: _64 = (unsigned short) d23_51;
common/dct.c:93:5: note: type of def: 3.
common/dct.c:93:5: note: === vectorizable_operation ===
common/dct.c:93:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:93:5: note: ==> examining statement: _69 = (short int) _68;
common/dct.c:93:5: note: vect_is_simple_use: operand _68
common/dct.c:93:5: note: def_stmt: _68 = _63 + _64;
common/dct.c:93:5: note: type of def: 3.
common/dct.c:93:5: note: vect_is_simple_use: operand _68
common/dct.c:93:5: note: def_stmt: _68 = _63 + _64;
common/dct.c:93:5: note: type of def: 3.
common/dct.c:93:5: note: no optab.
common/dct.c:93:5: note: vect_is_simple_use: operand _68
common/dct.c:93:5: note: def_stmt: _68 = _63 + _64;
common/dct.c:93:5: note: type of def: 3.
common/dct.c:93:5: note: === vectorizable_assignment ===
common/dct.c:93:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:93:5: note: ==> examining statement: *_54[3] = _69;
common/dct.c:93:5: note: vect_is_simple_use: operand _69
common/dct.c:93:5: note: def_stmt: _69 = (short int) _68;
common/dct.c:93:5: note: type of def: 3.
common/dct.c:93:5: note: no array mode for V8HI[4]
common/dct.c:93:5: note: vect_model_store_cost: unaligned supported by hardware.
common/dct.c:93:5: note: vect_model_store_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:93:5: note: ==> examining statement: i_71 = i_79 + 1;
common/dct.c:93:5: note: irrelevant.
common/dct.c:93:5: note: ==> examining statement: # DEBUG i => i_71
common/dct.c:93:5: note: irrelevant.
common/dct.c:93:5: note: ==> examining statement: # DEBUG i => i_71
common/dct.c:93:5: note: irrelevant.
common/dct.c:93:5: note: ==> examining statement: ivtmp_156 = ivtmp_157 - 1;
common/dct.c:93:5: note: irrelevant.
common/dct.c:93:5: note: ==> examining statement: if (ivtmp_156 != 0)
common/dct.c:93:5: note: irrelevant.
common/dct.c:93:5: note: vectorization_factor = 8, niters = 4
common/dct.c:93:5: note: not vectorized: iteration count too small.
common/dct.c:93:5: note: not vectorized: iteration count smaller than vectorization factor.
common/dct.c:93:5: note: bad operation or unsupported loop bound.

Analyzing loop at common/dct.c:80
common/dct.c:80:5: note: ===== analyze_loop_nest =====
common/dct.c:80:5: note: === vect_analyze_loop_form ===
common/dct.c:80:5: note: === get_loop_niters ===
Analyzing # of iterations of loop 1
  exit condition [3, + , 4294967295] != 0
  bounds on difference of bases: -3 ... -3
  result:
    # of iterations 3, bounded by 3
common/dct.c:80:5: note: === vect_analyze_data_refs ===
Creating dr for *_9[0]
analyze_innermost: success.
	base_address: d_8(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 128
	base_object: *d_8(D)
	Access function 0: 0
	Access function 1: {0B, +, 8}_1
Creating dr for *_9[1]
analyze_innermost: success.
	base_address: d_8(D)
	offset from base address: 0
	constant offset from base address: 2
	step: 8
	aligned to: 128
	base_object: *d_8(D)
	Access function 0: 1
	Access function 1: {0B, +, 8}_1
Creating dr for *_9[2]
analyze_innermost: success.
	base_address: d_8(D)
	offset from base address: 0
	constant offset from base address: 4
	step: 8
	aligned to: 128
	base_object: *d_8(D)
	Access function 0: 2
	Access function 1: {0B, +, 8}_1
Creating dr for *_9[3]
analyze_innermost: success.
	base_address: d_8(D)
	offset from base address: 0
	constant offset from base address: 6
	step: 8
	aligned to: 128
	base_object: *d_8(D)
	Access function 0: 3
	Access function 1: {0B, +, 8}_1
Creating dr for tmp[0][i_78]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &tmp
	offset from base address: 0
	constant offset from base address: 0
	step: 2
	aligned to: 128
	base_object: tmp
	Access function 0: {0, +, 1}_1
	Access function 1: 0
Creating dr for tmp[1][i_78]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &tmp
	offset from base address: 0
	constant offset from base address: 8
	step: 2
	aligned to: 128
	base_object: tmp
	Access function 0: {0, +, 1}_1
	Access function 1: 1
Creating dr for tmp[2][i_78]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &tmp
	offset from base address: 0
	constant offset from base address: 16
	step: 2
	aligned to: 128
	base_object: tmp
	Access function 0: {0, +, 1}_1
	Access function 1: 2
Creating dr for tmp[3][i_78]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &tmp
	offset from base address: 0
	constant offset from base address: 24
	step: 2
	aligned to: 128
	base_object: tmp
	Access function 0: {0, +, 1}_1
	Access function 1: 3
common/dct.c:80:5: note: got vectype for stmt: _10 = *_9[0];
vector(8) short int
common/dct.c:80:5: note: got vectype for stmt: _13 = *_9[1];
vector(8) short int
common/dct.c:80:5: note: got vectype for stmt: _17 = *_9[2];
vector(8) short int
common/dct.c:80:5: note: got vectype for stmt: _19 = *_9[3];
vector(8) short int
common/dct.c:80:5: note: got vectype for stmt: tmp[0][i_78] = _26;
vector(8) short int
common/dct.c:80:5: note: got vectype for stmt: tmp[1][i_78] = _29;
vector(8) short int
common/dct.c:80:5: note: got vectype for stmt: tmp[2][i_78] = _34;
vector(8) short int
common/dct.c:80:5: note: got vectype for stmt: tmp[3][i_78] = _37;
vector(8) short int
common/dct.c:80:5: note: === vect_analyze_scalar_cycles ===
common/dct.c:80:5: note: Analyze phi: i_78 = PHI <i_39(4), 0(2)>

common/dct.c:80:5: note: Access function of PHI: {0, +, 1}_1
common/dct.c:80:5: note: step: 1,  init: 0
common/dct.c:80:5: note: Detected induction.
common/dct.c:80:5: note: Analyze phi: .MEM_80 = PHI <.MEM_38(4), .MEM_5(D)(2)>

common/dct.c:80:5: note: Analyze phi: ivtmp_155 = PHI <ivtmp_154(4), 4(2)>

common/dct.c:80:5: note: Access function of PHI: {4, +, 4294967295}_1
common/dct.c:80:5: note: step: 4294967295,  init: 4
common/dct.c:80:5: note: Detected induction.
common/dct.c:80:5: note: === vect_pattern_recog ===
common/dct.c:80:5: note: vect_is_simple_use: operand _6
common/dct.c:80:5: note: def_stmt: _6 = (long unsigned int) i_78;
common/dct.c:80:5: note: type of def: 3.
common/dct.c:80:5: note: vect_is_simple_use: operand i_78
common/dct.c:80:5: note: def_stmt: i_78 = PHI <i_39(4), 0(2)>
common/dct.c:80:5: note: type of def: 4.
common/dct.c:80:5: note: vect_is_simple_use: operand 8
common/dct.c:80:5: note: === vect_analyze_data_ref_accesses ===
common/dct.c:80:5: note: Detected interleaving *_9[0] and *_9[1]
common/dct.c:80:5: note: Detected interleaving *_9[0] and *_9[2]
common/dct.c:80:5: note: Detected interleaving *_9[0] and *_9[3]
common/dct.c:80:5: note: Detected interleaving of size 4
common/dct.c:80:5: note: === vect_mark_stmts_to_be_vectorized ===
common/dct.c:80:5: note: init: phi relevant? i_78 = PHI <i_39(4), 0(2)>
common/dct.c:80:5: note: init: phi relevant? .MEM_80 = PHI <.MEM_38(4), .MEM_5(D)(2)>
common/dct.c:80:5: note: init: phi relevant? ivtmp_155 = PHI <ivtmp_154(4), 4(2)>
common/dct.c:80:5: note: init: stmt relevant? # DEBUG i => i_78
common/dct.c:80:5: note: init: stmt relevant? _6 = (long unsigned int) i_78;
common/dct.c:80:5: note: init: stmt relevant? _7 = _6 * 8;
common/dct.c:80:5: note: init: stmt relevant? _9 = d_8(D) + _7;
common/dct.c:80:5: note: init: stmt relevant? _10 = *_9[0];
common/dct.c:80:5: note: init: stmt relevant? _11 = (int) _10;
common/dct.c:80:5: note: init: stmt relevant? _13 = *_9[1];
common/dct.c:80:5: note: init: stmt relevant? _14 = (int) _13;
common/dct.c:80:5: note: init: stmt relevant? s01_15 = _11 + _14;
common/dct.c:80:5: note: init: stmt relevant? # DEBUG s01 => s01_15
common/dct.c:80:5: note: init: stmt relevant? d01_16 = _11 - _14;
common/dct.c:80:5: note: init: stmt relevant? # DEBUG d01 => d01_16
common/dct.c:80:5: note: init: stmt relevant? _17 = *_9[2];
common/dct.c:80:5: note: init: stmt relevant? _18 = (int) _17;
common/dct.c:80:5: note: init: stmt relevant? _19 = *_9[3];
common/dct.c:80:5: note: init: stmt relevant? _20 = (int) _19;
common/dct.c:80:5: note: init: stmt relevant? s23_21 = _18 + _20;
common/dct.c:80:5: note: init: stmt relevant? # DEBUG s23 => s23_21
common/dct.c:80:5: note: init: stmt relevant? d23_22 = _18 - _20;
common/dct.c:80:5: note: init: stmt relevant? # DEBUG d23 => d23_22
common/dct.c:80:5: note: init: stmt relevant? _23 = (unsigned short) s01_15;
common/dct.c:80:5: note: init: stmt relevant? _24 = (unsigned short) s23_21;
common/dct.c:80:5: note: init: stmt relevant? _25 = _23 + _24;
common/dct.c:80:5: note: init: stmt relevant? _26 = (short int) _25;
common/dct.c:80:5: note: init: stmt relevant? tmp[0][i_78] = _26;
common/dct.c:80:5: note: vec_stmt_relevant_p: stmt has vdefs.
common/dct.c:80:5: note: mark relevant 4, live 0.
common/dct.c:80:5: note: init: stmt relevant? _28 = _23 - _24;
common/dct.c:80:5: note: init: stmt relevant? _29 = (short int) _28;
common/dct.c:80:5: note: init: stmt relevant? tmp[1][i_78] = _29;
common/dct.c:80:5: note: vec_stmt_relevant_p: stmt has vdefs.
common/dct.c:80:5: note: mark relevant 4, live 0.
common/dct.c:80:5: note: init: stmt relevant? _31 = (unsigned short) d01_16;
common/dct.c:80:5: note: init: stmt relevant? _32 = (unsigned short) d23_22;
common/dct.c:80:5: note: init: stmt relevant? _33 = _31 - _32;
common/dct.c:80:5: note: init: stmt relevant? _34 = (short int) _33;
common/dct.c:80:5: note: init: stmt relevant? tmp[2][i_78] = _34;
common/dct.c:80:5: note: vec_stmt_relevant_p: stmt has vdefs.
common/dct.c:80:5: note: mark relevant 4, live 0.
common/dct.c:80:5: note: init: stmt relevant? _36 = _31 + _32;
common/dct.c:80:5: note: init: stmt relevant? _37 = (short int) _36;
common/dct.c:80:5: note: init: stmt relevant? tmp[3][i_78] = _37;
common/dct.c:80:5: note: vec_stmt_relevant_p: stmt has vdefs.
common/dct.c:80:5: note: mark relevant 4, live 0.
common/dct.c:80:5: note: init: stmt relevant? i_39 = i_78 + 1;
common/dct.c:80:5: note: init: stmt relevant? # DEBUG i => i_39
common/dct.c:80:5: note: init: stmt relevant? # DEBUG i => i_39
common/dct.c:80:5: note: init: stmt relevant? ivtmp_154 = ivtmp_155 - 1;
common/dct.c:80:5: note: init: stmt relevant? if (ivtmp_154 != 0)
common/dct.c:80:5: note: worklist: examine stmt: tmp[3][i_78] = _37;
common/dct.c:80:5: note: vect_is_simple_use: operand _37
common/dct.c:80:5: note: def_stmt: _37 = (short int) _36;
common/dct.c:80:5: note: type of def: 3.
common/dct.c:80:5: note: mark relevant 4, live 0.
common/dct.c:80:5: note: worklist: examine stmt: _37 = (short int) _36;
common/dct.c:80:5: note: vect_is_simple_use: operand _36
common/dct.c:80:5: note: def_stmt: _36 = _31 + _32;
common/dct.c:80:5: note: type of def: 3.
common/dct.c:80:5: note: mark relevant 4, live 0.
common/dct.c:80:5: note: worklist: examine stmt: _36 = _31 + _32;
common/dct.c:80:5: note: vect_is_simple_use: operand _31
common/dct.c:80:5: note: def_stmt: _31 = (unsigned short) d01_16;
common/dct.c:80:5: note: type of def: 3.
common/dct.c:80:5: note: mark relevant 4, live 0.
common/dct.c:80:5: note: vect_is_simple_use: operand _32
common/dct.c:80:5: note: def_stmt: _32 = (unsigned short) d23_22;
common/dct.c:80:5: note: type of def: 3.
common/dct.c:80:5: note: mark relevant 4, live 0.
common/dct.c:80:5: note: worklist: examine stmt: _32 = (unsigned short) d23_22;
common/dct.c:80:5: note: vect_is_simple_use: operand d23_22
common/dct.c:80:5: note: def_stmt: d23_22 = _18 - _20;
common/dct.c:80:5: note: type of def: 3.
common/dct.c:80:5: note: mark relevant 4, live 0.
common/dct.c:80:5: note: worklist: examine stmt: d23_22 = _18 - _20;
common/dct.c:80:5: note: vect_is_simple_use: operand _18
common/dct.c:80:5: note: def_stmt: _18 = (int) _17;
common/dct.c:80:5: note: type of def: 3.
common/dct.c:80:5: note: mark relevant 4, live 0.
common/dct.c:80:5: note: vect_is_simple_use: operand _20
common/dct.c:80:5: note: def_stmt: _20 = (int) _19;
common/dct.c:80:5: note: type of def: 3.
common/dct.c:80:5: note: mark relevant 4, live 0.
common/dct.c:80:5: note: worklist: examine stmt: _20 = (int) _19;
common/dct.c:80:5: note: vect_is_simple_use: operand _19
common/dct.c:80:5: note: def_stmt: _19 = *_9[3];
common/dct.c:80:5: note: type of def: 3.
common/dct.c:80:5: note: mark relevant 4, live 0.
common/dct.c:80:5: note: worklist: examine stmt: _19 = *_9[3];
common/dct.c:80:5: note: worklist: examine stmt: _18 = (int) _17;
common/dct.c:80:5: note: vect_is_simple_use: operand _17
common/dct.c:80:5: note: def_stmt: _17 = *_9[2];
common/dct.c:80:5: note: type of def: 3.
common/dct.c:80:5: note: mark relevant 4, live 0.
common/dct.c:80:5: note: worklist: examine stmt: _17 = *_9[2];
common/dct.c:80:5: note: worklist: examine stmt: _31 = (unsigned short) d01_16;
common/dct.c:80:5: note: vect_is_simple_use: operand d01_16
common/dct.c:80:5: note: def_stmt: d01_16 = _11 - _14;
common/dct.c:80:5: note: type of def: 3.
common/dct.c:80:5: note: mark relevant 4, live 0.
common/dct.c:80:5: note: worklist: examine stmt: d01_16 = _11 - _14;
common/dct.c:80:5: note: vect_is_simple_use: operand _11
common/dct.c:80:5: note: def_stmt: _11 = (int) _10;
common/dct.c:80:5: note: type of def: 3.
common/dct.c:80:5: note: mark relevant 4, live 0.
common/dct.c:80:5: note: vect_is_simple_use: operand _14
common/dct.c:80:5: note: def_stmt: _14 = (int) _13;
common/dct.c:80:5: note: type of def: 3.
common/dct.c:80:5: note: mark relevant 4, live 0.
common/dct.c:80:5: note: worklist: examine stmt: _14 = (int) _13;
common/dct.c:80:5: note: vect_is_simple_use: operand _13
common/dct.c:80:5: note: def_stmt: _13 = *_9[1];
common/dct.c:80:5: note: type of def: 3.
common/dct.c:80:5: note: mark relevant 4, live 0.
common/dct.c:80:5: note: worklist: examine stmt: _13 = *_9[1];
common/dct.c:80:5: note: worklist: examine stmt: _11 = (int) _10;
common/dct.c:80:5: note: vect_is_simple_use: operand _10
common/dct.c:80:5: note: def_stmt: _10 = *_9[0];
common/dct.c:80:5: note: type of def: 3.
common/dct.c:80:5: note: mark relevant 4, live 0.
common/dct.c:80:5: note: worklist: examine stmt: _10 = *_9[0];
common/dct.c:80:5: note: worklist: examine stmt: tmp[2][i_78] = _34;
common/dct.c:80:5: note: vect_is_simple_use: operand _34
common/dct.c:80:5: note: def_stmt: _34 = (short int) _33;
common/dct.c:80:5: note: type of def: 3.
common/dct.c:80:5: note: mark relevant 4, live 0.
common/dct.c:80:5: note: worklist: examine stmt: _34 = (short int) _33;
common/dct.c:80:5: note: vect_is_simple_use: operand _33
common/dct.c:80:5: note: def_stmt: _33 = _31 - _32;
common/dct.c:80:5: note: type of def: 3.
common/dct.c:80:5: note: mark relevant 4, live 0.
common/dct.c:80:5: note: worklist: examine stmt: _33 = _31 - _32;
common/dct.c:80:5: note: vect_is_simple_use: operand _31
common/dct.c:80:5: note: def_stmt: _31 = (unsigned short) d01_16;
common/dct.c:80:5: note: type of def: 3.
common/dct.c:80:5: note: mark relevant 4, live 0.
common/dct.c:80:5: note: already marked relevant/live.
common/dct.c:80:5: note: vect_is_simple_use: operand _32
common/dct.c:80:5: note: def_stmt: _32 = (unsigned short) d23_22;
common/dct.c:80:5: note: type of def: 3.
common/dct.c:80:5: note: mark relevant 4, live 0.
common/dct.c:80:5: note: already marked relevant/live.
common/dct.c:80:5: note: worklist: examine stmt: tmp[1][i_78] = _29;
common/dct.c:80:5: note: vect_is_simple_use: operand _29
common/dct.c:80:5: note: def_stmt: _29 = (short int) _28;
common/dct.c:80:5: note: type of def: 3.
common/dct.c:80:5: note: mark relevant 4, live 0.
common/dct.c:80:5: note: worklist: examine stmt: _29 = (short int) _28;
common/dct.c:80:5: note: vect_is_simple_use: operand _28
common/dct.c:80:5: note: def_stmt: _28 = _23 - _24;
common/dct.c:80:5: note: type of def: 3.
common/dct.c:80:5: note: mark relevant 4, live 0.
common/dct.c:80:5: note: worklist: examine stmt: _28 = _23 - _24;
common/dct.c:80:5: note: vect_is_simple_use: operand _23
common/dct.c:80:5: note: def_stmt: _23 = (unsigned short) s01_15;
common/dct.c:80:5: note: type of def: 3.
common/dct.c:80:5: note: mark relevant 4, live 0.
common/dct.c:80:5: note: vect_is_simple_use: operand _24
common/dct.c:80:5: note: def_stmt: _24 = (unsigned short) s23_21;
common/dct.c:80:5: note: type of def: 3.
common/dct.c:80:5: note: mark relevant 4, live 0.
common/dct.c:80:5: note: worklist: examine stmt: _24 = (unsigned short) s23_21;
common/dct.c:80:5: note: vect_is_simple_use: operand s23_21
common/dct.c:80:5: note: def_stmt: s23_21 = _18 + _20;
common/dct.c:80:5: note: type of def: 3.
common/dct.c:80:5: note: mark relevant 4, live 0.
common/dct.c:80:5: note: worklist: examine stmt: s23_21 = _18 + _20;
common/dct.c:80:5: note: vect_is_simple_use: operand _18
common/dct.c:80:5: note: def_stmt: _18 = (int) _17;
common/dct.c:80:5: note: type of def: 3.
common/dct.c:80:5: note: mark relevant 4, live 0.
common/dct.c:80:5: note: already marked relevant/live.
common/dct.c:80:5: note: vect_is_simple_use: operand _20
common/dct.c:80:5: note: def_stmt: _20 = (int) _19;
common/dct.c:80:5: note: type of def: 3.
common/dct.c:80:5: note: mark relevant 4, live 0.
common/dct.c:80:5: note: already marked relevant/live.
common/dct.c:80:5: note: worklist: examine stmt: _23 = (unsigned short) s01_15;
common/dct.c:80:5: note: vect_is_simple_use: operand s01_15
common/dct.c:80:5: note: def_stmt: s01_15 = _11 + _14;
common/dct.c:80:5: note: type of def: 3.
common/dct.c:80:5: note: mark relevant 4, live 0.
common/dct.c:80:5: note: worklist: examine stmt: s01_15 = _11 + _14;
common/dct.c:80:5: note: vect_is_simple_use: operand _11
common/dct.c:80:5: note: def_stmt: _11 = (int) _10;
common/dct.c:80:5: note: type of def: 3.
common/dct.c:80:5: note: mark relevant 4, live 0.
common/dct.c:80:5: note: already marked relevant/live.
common/dct.c:80:5: note: vect_is_simple_use: operand _14
common/dct.c:80:5: note: def_stmt: _14 = (int) _13;
common/dct.c:80:5: note: type of def: 3.
common/dct.c:80:5: note: mark relevant 4, live 0.
common/dct.c:80:5: note: already marked relevant/live.
common/dct.c:80:5: note: worklist: examine stmt: tmp[0][i_78] = _26;
common/dct.c:80:5: note: vect_is_simple_use: operand _26
common/dct.c:80:5: note: def_stmt: _26 = (short int) _25;
common/dct.c:80:5: note: type of def: 3.
common/dct.c:80:5: note: mark relevant 4, live 0.
common/dct.c:80:5: note: worklist: examine stmt: _26 = (short int) _25;
common/dct.c:80:5: note: vect_is_simple_use: operand _25
common/dct.c:80:5: note: def_stmt: _25 = _23 + _24;
common/dct.c:80:5: note: type of def: 3.
common/dct.c:80:5: note: mark relevant 4, live 0.
common/dct.c:80:5: note: worklist: examine stmt: _25 = _23 + _24;
common/dct.c:80:5: note: vect_is_simple_use: operand _23
common/dct.c:80:5: note: def_stmt: _23 = (unsigned short) s01_15;
common/dct.c:80:5: note: type of def: 3.
common/dct.c:80:5: note: mark relevant 4, live 0.
common/dct.c:80:5: note: already marked relevant/live.
common/dct.c:80:5: note: vect_is_simple_use: operand _24
common/dct.c:80:5: note: def_stmt: _24 = (unsigned short) s23_21;
common/dct.c:80:5: note: type of def: 3.
common/dct.c:80:5: note: mark relevant 4, live 0.
common/dct.c:80:5: note: already marked relevant/live.
common/dct.c:80:5: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _10 = *_9[0];
  stmt_b: _13 = *_9[1];
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 1)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _10 = *_9[0];
  stmt_b: _17 = *_9[2];
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _10 = *_9[0];
  stmt_b: _19 = *_9[3];
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _10 = *_9[0];
  stmt_b: tmp[0][i_78] = _26;
) -> no dependence
(compute_affine_dependence
  stmt_a: _10 = *_9[0];
  stmt_b: tmp[1][i_78] = _29;
) -> no dependence
(compute_affine_dependence
  stmt_a: _10 = *_9[0];
  stmt_b: tmp[2][i_78] = _34;
) -> no dependence
(compute_affine_dependence
  stmt_a: _10 = *_9[0];
  stmt_b: tmp[3][i_78] = _37;
) -> no dependence
(compute_affine_dependence
  stmt_a: _13 = *_9[1];
  stmt_b: _17 = *_9[2];
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _13 = *_9[1];
  stmt_b: _19 = *_9[3];
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _13 = *_9[1];
  stmt_b: tmp[0][i_78] = _26;
) -> no dependence
(compute_affine_dependence
  stmt_a: _13 = *_9[1];
  stmt_b: tmp[1][i_78] = _29;
) -> no dependence
(compute_affine_dependence
  stmt_a: _13 = *_9[1];
  stmt_b: tmp[2][i_78] = _34;
) -> no dependence
(compute_affine_dependence
  stmt_a: _13 = *_9[1];
  stmt_b: tmp[3][i_78] = _37;
) -> no dependence
(compute_affine_dependence
  stmt_a: _17 = *_9[2];
  stmt_b: _19 = *_9[3];
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _17 = *_9[2];
  stmt_b: tmp[0][i_78] = _26;
) -> no dependence
(compute_affine_dependence
  stmt_a: _17 = *_9[2];
  stmt_b: tmp[1][i_78] = _29;
) -> no dependence
(compute_affine_dependence
  stmt_a: _17 = *_9[2];
  stmt_b: tmp[2][i_78] = _34;
) -> no dependence
(compute_affine_dependence
  stmt_a: _17 = *_9[2];
  stmt_b: tmp[3][i_78] = _37;
) -> no dependence
(compute_affine_dependence
  stmt_a: _19 = *_9[3];
  stmt_b: tmp[0][i_78] = _26;
) -> no dependence
(compute_affine_dependence
  stmt_a: _19 = *_9[3];
  stmt_b: tmp[1][i_78] = _29;
) -> no dependence
(compute_affine_dependence
  stmt_a: _19 = *_9[3];
  stmt_b: tmp[2][i_78] = _34;
) -> no dependence
(compute_affine_dependence
  stmt_a: _19 = *_9[3];
  stmt_b: tmp[3][i_78] = _37;
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[0][i_78] = _26;
  stmt_b: tmp[1][i_78] = _29;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 1)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[0][i_78] = _26;
  stmt_b: tmp[2][i_78] = _34;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[0][i_78] = _26;
  stmt_b: tmp[3][i_78] = _37;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[1][i_78] = _29;
  stmt_b: tmp[2][i_78] = _34;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[1][i_78] = _29;
  stmt_b: tmp[3][i_78] = _37;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[2][i_78] = _34;
  stmt_b: tmp[3][i_78] = _37;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _10 = *_9[0];
  stmt_b: _10 = *_9[0];
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 0)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 8}_1)
  (chrec_b = {0B, +, 8}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _13 = *_9[1];
  stmt_b: _13 = *_9[1];
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 8}_1)
  (chrec_b = {0B, +, 8}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _17 = *_9[2];
  stmt_b: _17 = *_9[2];
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 8}_1)
  (chrec_b = {0B, +, 8}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _19 = *_9[3];
  stmt_b: _19 = *_9[3];
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 8}_1)
  (chrec_b = {0B, +, 8}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: tmp[0][i_78] = _26;
  stmt_b: tmp[0][i_78] = _26;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 0)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: tmp[1][i_78] = _29;
  stmt_b: tmp[1][i_78] = _29;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: tmp[2][i_78] = _34;
  stmt_b: tmp[2][i_78] = _34;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: tmp[3][i_78] = _37;
  stmt_b: tmp[3][i_78] = _37;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/dct.c:80:5: note: === vect_determine_vectorization_factor ===
common/dct.c:80:5: note: ==> examining phi: i_78 = PHI <i_39(4), 0(2)>

common/dct.c:80:5: note: ==> examining phi: .MEM_80 = PHI <.MEM_38(4), .MEM_5(D)(2)>

common/dct.c:80:5: note: ==> examining phi: ivtmp_155 = PHI <ivtmp_154(4), 4(2)>

common/dct.c:80:5: note: ==> examining statement: # DEBUG i => i_78

common/dct.c:80:5: note: skip.
common/dct.c:80:5: note: ==> examining statement: _6 = (long unsigned int) i_78;

common/dct.c:80:5: note: skip.
common/dct.c:80:5: note: ==> examining statement: _7 = _6 * 8;

common/dct.c:80:5: note: skip.
common/dct.c:80:5: note: ==> examining statement: _9 = d_8(D) + _7;

common/dct.c:80:5: note: skip.
common/dct.c:80:5: note: ==> examining statement: _10 = *_9[0];

common/dct.c:80:5: note: get vectype for scalar type:  short int
common/dct.c:80:5: note: vectype: vector(8) short int
common/dct.c:80:5: note: nunits = 8
common/dct.c:80:5: note: ==> examining statement: _11 = (int) _10;

common/dct.c:80:5: note: get vectype for scalar type:  int
common/dct.c:80:5: note: vectype: vector(4) int
common/dct.c:80:5: note: get vectype for scalar type:  short int
common/dct.c:80:5: note: vectype: vector(8) short int
common/dct.c:80:5: note: nunits = 8
common/dct.c:80:5: note: ==> examining statement: _13 = *_9[1];

common/dct.c:80:5: note: get vectype for scalar type:  short int
common/dct.c:80:5: note: vectype: vector(8) short int
common/dct.c:80:5: note: nunits = 8
common/dct.c:80:5: note: ==> examining statement: _14 = (int) _13;

common/dct.c:80:5: note: get vectype for scalar type:  int
common/dct.c:80:5: note: vectype: vector(4) int
common/dct.c:80:5: note: get vectype for scalar type:  short int
common/dct.c:80:5: note: vectype: vector(8) short int
common/dct.c:80:5: note: nunits = 8
common/dct.c:80:5: note: ==> examining statement: s01_15 = _11 + _14;

common/dct.c:80:5: note: get vectype for scalar type:  int
common/dct.c:80:5: note: vectype: vector(4) int
common/dct.c:80:5: note: get vectype for scalar type:  int
common/dct.c:80:5: note: vectype: vector(4) int
common/dct.c:80:5: note: nunits = 4
common/dct.c:80:5: note: ==> examining statement: # DEBUG s01 => s01_15

common/dct.c:80:5: note: skip.
common/dct.c:80:5: note: ==> examining statement: d01_16 = _11 - _14;

common/dct.c:80:5: note: get vectype for scalar type:  int
common/dct.c:80:5: note: vectype: vector(4) int
common/dct.c:80:5: note: get vectype for scalar type:  int
common/dct.c:80:5: note: vectype: vector(4) int
common/dct.c:80:5: note: nunits = 4
common/dct.c:80:5: note: ==> examining statement: # DEBUG d01 => d01_16

common/dct.c:80:5: note: skip.
common/dct.c:80:5: note: ==> examining statement: _17 = *_9[2];

common/dct.c:80:5: note: get vectype for scalar type:  short int
common/dct.c:80:5: note: vectype: vector(8) short int
common/dct.c:80:5: note: nunits = 8
common/dct.c:80:5: note: ==> examining statement: _18 = (int) _17;

common/dct.c:80:5: note: get vectype for scalar type:  int
common/dct.c:80:5: note: vectype: vector(4) int
common/dct.c:80:5: note: get vectype for scalar type:  short int
common/dct.c:80:5: note: vectype: vector(8) short int
common/dct.c:80:5: note: nunits = 8
common/dct.c:80:5: note: ==> examining statement: _19 = *_9[3];

common/dct.c:80:5: note: get vectype for scalar type:  short int
common/dct.c:80:5: note: vectype: vector(8) short int
common/dct.c:80:5: note: nunits = 8
common/dct.c:80:5: note: ==> examining statement: _20 = (int) _19;

common/dct.c:80:5: note: get vectype for scalar type:  int
common/dct.c:80:5: note: vectype: vector(4) int
common/dct.c:80:5: note: get vectype for scalar type:  short int
common/dct.c:80:5: note: vectype: vector(8) short int
common/dct.c:80:5: note: nunits = 8
common/dct.c:80:5: note: ==> examining statement: s23_21 = _18 + _20;

common/dct.c:80:5: note: get vectype for scalar type:  int
common/dct.c:80:5: note: vectype: vector(4) int
common/dct.c:80:5: note: get vectype for scalar type:  int
common/dct.c:80:5: note: vectype: vector(4) int
common/dct.c:80:5: note: nunits = 4
common/dct.c:80:5: note: ==> examining statement: # DEBUG s23 => s23_21

common/dct.c:80:5: note: skip.
common/dct.c:80:5: note: ==> examining statement: d23_22 = _18 - _20;

common/dct.c:80:5: note: get vectype for scalar type:  int
common/dct.c:80:5: note: vectype: vector(4) int
common/dct.c:80:5: note: get vectype for scalar type:  int
common/dct.c:80:5: note: vectype: vector(4) int
common/dct.c:80:5: note: nunits = 4
common/dct.c:80:5: note: ==> examining statement: # DEBUG d23 => d23_22

common/dct.c:80:5: note: skip.
common/dct.c:80:5: note: ==> examining statement: _23 = (unsigned short) s01_15;

common/dct.c:80:5: note: get vectype for scalar type:  unsigned short
common/dct.c:80:5: note: vectype: vector(8) unsigned short
common/dct.c:80:5: note: get vectype for scalar type:  unsigned short
common/dct.c:80:5: note: vectype: vector(8) unsigned short
common/dct.c:80:5: note: nunits = 8
common/dct.c:80:5: note: ==> examining statement: _24 = (unsigned short) s23_21;

common/dct.c:80:5: note: get vectype for scalar type:  unsigned short
common/dct.c:80:5: note: vectype: vector(8) unsigned short
common/dct.c:80:5: note: get vectype for scalar type:  unsigned short
common/dct.c:80:5: note: vectype: vector(8) unsigned short
common/dct.c:80:5: note: nunits = 8
common/dct.c:80:5: note: ==> examining statement: _25 = _23 + _24;

common/dct.c:80:5: note: get vectype for scalar type:  unsigned short
common/dct.c:80:5: note: vectype: vector(8) unsigned short
common/dct.c:80:5: note: get vectype for scalar type:  unsigned short
common/dct.c:80:5: note: vectype: vector(8) unsigned short
common/dct.c:80:5: note: nunits = 8
common/dct.c:80:5: note: ==> examining statement: _26 = (short int) _25;

common/dct.c:80:5: note: get vectype for scalar type:  short int
common/dct.c:80:5: note: vectype: vector(8) short int
common/dct.c:80:5: note: get vectype for scalar type:  short int
common/dct.c:80:5: note: vectype: vector(8) short int
common/dct.c:80:5: note: nunits = 8
common/dct.c:80:5: note: ==> examining statement: tmp[0][i_78] = _26;

common/dct.c:80:5: note: get vectype for scalar type:  int16_t
common/dct.c:80:5: note: vectype: vector(8) short int
common/dct.c:80:5: note: nunits = 8
common/dct.c:80:5: note: ==> examining statement: _28 = _23 - _24;

common/dct.c:80:5: note: get vectype for scalar type:  unsigned short
common/dct.c:80:5: note: vectype: vector(8) unsigned short
common/dct.c:80:5: note: get vectype for scalar type:  unsigned short
common/dct.c:80:5: note: vectype: vector(8) unsigned short
common/dct.c:80:5: note: nunits = 8
common/dct.c:80:5: note: ==> examining statement: _29 = (short int) _28;

common/dct.c:80:5: note: get vectype for scalar type:  short int
common/dct.c:80:5: note: vectype: vector(8) short int
common/dct.c:80:5: note: get vectype for scalar type:  short int
common/dct.c:80:5: note: vectype: vector(8) short int
common/dct.c:80:5: note: nunits = 8
common/dct.c:80:5: note: ==> examining statement: tmp[1][i_78] = _29;

common/dct.c:80:5: note: get vectype for scalar type:  int16_t
common/dct.c:80:5: note: vectype: vector(8) short int
common/dct.c:80:5: note: nunits = 8
common/dct.c:80:5: note: ==> examining statement: _31 = (unsigned short) d01_16;

common/dct.c:80:5: note: get vectype for scalar type:  unsigned short
common/dct.c:80:5: note: vectype: vector(8) unsigned short
common/dct.c:80:5: note: get vectype for scalar type:  unsigned short
common/dct.c:80:5: note: vectype: vector(8) unsigned short
common/dct.c:80:5: note: nunits = 8
common/dct.c:80:5: note: ==> examining statement: _32 = (unsigned short) d23_22;

common/dct.c:80:5: note: get vectype for scalar type:  unsigned short
common/dct.c:80:5: note: vectype: vector(8) unsigned short
common/dct.c:80:5: note: get vectype for scalar type:  unsigned short
common/dct.c:80:5: note: vectype: vector(8) unsigned short
common/dct.c:80:5: note: nunits = 8
common/dct.c:80:5: note: ==> examining statement: _33 = _31 - _32;

common/dct.c:80:5: note: get vectype for scalar type:  unsigned short
common/dct.c:80:5: note: vectype: vector(8) unsigned short
common/dct.c:80:5: note: get vectype for scalar type:  unsigned short
common/dct.c:80:5: note: vectype: vector(8) unsigned short
common/dct.c:80:5: note: nunits = 8
common/dct.c:80:5: note: ==> examining statement: _34 = (short int) _33;

common/dct.c:80:5: note: get vectype for scalar type:  short int
common/dct.c:80:5: note: vectype: vector(8) short int
common/dct.c:80:5: note: get vectype for scalar type:  short int
common/dct.c:80:5: note: vectype: vector(8) short int
common/dct.c:80:5: note: nunits = 8
common/dct.c:80:5: note: ==> examining statement: tmp[2][i_78] = _34;

common/dct.c:80:5: note: get vectype for scalar type:  int16_t
common/dct.c:80:5: note: vectype: vector(8) short int
common/dct.c:80:5: note: nunits = 8
common/dct.c:80:5: note: ==> examining statement: _36 = _31 + _32;

common/dct.c:80:5: note: get vectype for scalar type:  unsigned short
common/dct.c:80:5: note: vectype: vector(8) unsigned short
common/dct.c:80:5: note: get vectype for scalar type:  unsigned short
common/dct.c:80:5: note: vectype: vector(8) unsigned short
common/dct.c:80:5: note: nunits = 8
common/dct.c:80:5: note: ==> examining statement: _37 = (short int) _36;

common/dct.c:80:5: note: get vectype for scalar type:  short int
common/dct.c:80:5: note: vectype: vector(8) short int
common/dct.c:80:5: note: get vectype for scalar type:  short int
common/dct.c:80:5: note: vectype: vector(8) short int
common/dct.c:80:5: note: nunits = 8
common/dct.c:80:5: note: ==> examining statement: tmp[3][i_78] = _37;

common/dct.c:80:5: note: get vectype for scalar type:  int16_t
common/dct.c:80:5: note: vectype: vector(8) short int
common/dct.c:80:5: note: nunits = 8
common/dct.c:80:5: note: ==> examining statement: i_39 = i_78 + 1;

common/dct.c:80:5: note: skip.
common/dct.c:80:5: note: ==> examining statement: # DEBUG i => i_39

common/dct.c:80:5: note: skip.
common/dct.c:80:5: note: ==> examining statement: # DEBUG i => i_39

common/dct.c:80:5: note: skip.
common/dct.c:80:5: note: ==> examining statement: ivtmp_154 = ivtmp_155 - 1;

common/dct.c:80:5: note: skip.
common/dct.c:80:5: note: ==> examining statement: if (ivtmp_154 != 0)

common/dct.c:80:5: note: skip.
common/dct.c:80:5: note: vectorization factor = 8
common/dct.c:80:5: note: === vect_analyze_data_refs_alignment ===
common/dct.c:80:5: note: vect_compute_data_ref_alignment:
common/dct.c:80:5: note: can't force alignment of ref: *_9[0]
common/dct.c:80:5: note: vect_compute_data_ref_alignment:
common/dct.c:80:5: note: can't force alignment of ref: *_9[1]
common/dct.c:80:5: note: vect_compute_data_ref_alignment:
common/dct.c:80:5: note: can't force alignment of ref: *_9[2]
common/dct.c:80:5: note: vect_compute_data_ref_alignment:
common/dct.c:80:5: note: can't force alignment of ref: *_9[3]
common/dct.c:80:5: note: vect_compute_data_ref_alignment:
common/dct.c:80:5: note: misalign = 0 bytes of ref tmp[0][i_78]
common/dct.c:80:5: note: vect_compute_data_ref_alignment:
common/dct.c:80:5: note: misalign = 8 bytes of ref tmp[1][i_78]
common/dct.c:80:5: note: vect_compute_data_ref_alignment:
common/dct.c:80:5: note: misalign = 0 bytes of ref tmp[2][i_78]
common/dct.c:80:5: note: vect_compute_data_ref_alignment:
common/dct.c:80:5: note: misalign = 8 bytes of ref tmp[3][i_78]
common/dct.c:80:5: note: === vect_prune_runtime_alias_test_list ===
common/dct.c:80:5: note: === vect_enhance_data_refs_alignment ===
common/dct.c:80:5: note: vector alignment may not be reachable
common/dct.c:80:5: note: vect_can_advance_ivs_p:
common/dct.c:80:5: note: Analyze phi: i_78 = PHI <i_39(4), 0(2)>

common/dct.c:80:5: note: Analyze phi: .MEM_80 = PHI <.MEM_38(4), .MEM_5(D)(2)>

common/dct.c:80:5: note: virtual phi. skip.
common/dct.c:80:5: note: Analyze phi: ivtmp_155 = PHI <ivtmp_154(4), 4(2)>

common/dct.c:80:5: note: Vectorizing an unaligned access.
common/dct.c:80:5: note: Vectorizing an unaligned access.
common/dct.c:80:5: note: Vectorizing an unaligned access.
common/dct.c:80:5: note: === vect_analyze_slp ===
common/dct.c:80:5: note: === vect_make_slp_decision ===
common/dct.c:80:5: note: === vect_detect_hybrid_slp ===
common/dct.c:80:5: note: === vect_analyze_loop_operations ===
common/dct.c:80:5: note: examining phi: i_78 = PHI <i_39(4), 0(2)>

common/dct.c:80:5: note: examining phi: .MEM_80 = PHI <.MEM_38(4), .MEM_5(D)(2)>

common/dct.c:80:5: note: examining phi: ivtmp_155 = PHI <ivtmp_154(4), 4(2)>

common/dct.c:80:5: note: ==> examining statement: # DEBUG i => i_78
common/dct.c:80:5: note: irrelevant.
common/dct.c:80:5: note: ==> examining statement: _6 = (long unsigned int) i_78;
common/dct.c:80:5: note: irrelevant.
common/dct.c:80:5: note: ==> examining statement: _7 = _6 * 8;
common/dct.c:80:5: note: irrelevant.
common/dct.c:80:5: note: ==> examining statement: _9 = d_8(D) + _7;
common/dct.c:80:5: note: irrelevant.
common/dct.c:80:5: note: ==> examining statement: _10 = *_9[0];
common/dct.c:80:5: note: num. args = 4 (not unary/binary/ternary op).
common/dct.c:80:5: note: vect_is_simple_use: operand *_9[0]
common/dct.c:80:5: note: not ssa-name.
common/dct.c:80:5: note: use not simple.
common/dct.c:80:5: note: no array mode for V8HI[4]
common/dct.c:80:5: note: vect_model_load_cost: strided group_size = 4 .
common/dct.c:80:5: note: vect_model_load_cost: unaligned supported by hardware.
common/dct.c:80:5: note: vect_model_load_cost: inside_cost = 10, prologue_cost = 0 .
common/dct.c:80:5: note: ==> examining statement: _11 = (int) _10;
common/dct.c:80:5: note: vect_is_simple_use: operand _10
common/dct.c:80:5: note: def_stmt: _10 = *_9[0];
common/dct.c:80:5: note: type of def: 3.
common/dct.c:80:5: note: === vectorizable_conversion ===
common/dct.c:80:5: note: vect_model_promotion_demotion_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:80:5: note: ==> examining statement: _13 = *_9[1];
common/dct.c:80:5: note: num. args = 4 (not unary/binary/ternary op).
common/dct.c:80:5: note: vect_is_simple_use: operand *_9[1]
common/dct.c:80:5: note: not ssa-name.
common/dct.c:80:5: note: use not simple.
common/dct.c:80:5: note: no array mode for V8HI[4]
common/dct.c:80:5: note: vect_model_load_cost: unaligned supported by hardware.
common/dct.c:80:5: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:80:5: note: ==> examining statement: _14 = (int) _13;
common/dct.c:80:5: note: vect_is_simple_use: operand _13
common/dct.c:80:5: note: def_stmt: _13 = *_9[1];
common/dct.c:80:5: note: type of def: 3.
common/dct.c:80:5: note: === vectorizable_conversion ===
common/dct.c:80:5: note: vect_model_promotion_demotion_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:80:5: note: ==> examining statement: s01_15 = _11 + _14;
common/dct.c:80:5: note: vect_is_simple_use: operand _11
common/dct.c:80:5: note: def_stmt: _11 = (int) _10;
common/dct.c:80:5: note: type of def: 3.
common/dct.c:80:5: note: vect_is_simple_use: operand _14
common/dct.c:80:5: note: def_stmt: _14 = (int) _13;
common/dct.c:80:5: note: type of def: 3.
common/dct.c:80:5: note: === vectorizable_operation ===
common/dct.c:80:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:80:5: note: ==> examining statement: # DEBUG s01 => s01_15
common/dct.c:80:5: note: irrelevant.
common/dct.c:80:5: note: ==> examining statement: d01_16 = _11 - _14;
common/dct.c:80:5: note: vect_is_simple_use: operand _11
common/dct.c:80:5: note: def_stmt: _11 = (int) _10;
common/dct.c:80:5: note: type of def: 3.
common/dct.c:80:5: note: vect_is_simple_use: operand _14
common/dct.c:80:5: note: def_stmt: _14 = (int) _13;
common/dct.c:80:5: note: type of def: 3.
common/dct.c:80:5: note: === vectorizable_operation ===
common/dct.c:80:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:80:5: note: ==> examining statement: # DEBUG d01 => d01_16
common/dct.c:80:5: note: irrelevant.
common/dct.c:80:5: note: ==> examining statement: _17 = *_9[2];
common/dct.c:80:5: note: num. args = 4 (not unary/binary/ternary op).
common/dct.c:80:5: note: vect_is_simple_use: operand *_9[2]
common/dct.c:80:5: note: not ssa-name.
common/dct.c:80:5: note: use not simple.
common/dct.c:80:5: note: no array mode for V8HI[4]
common/dct.c:80:5: note: vect_model_load_cost: unaligned supported by hardware.
common/dct.c:80:5: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:80:5: note: ==> examining statement: _18 = (int) _17;
common/dct.c:80:5: note: vect_is_simple_use: operand _17
common/dct.c:80:5: note: def_stmt: _17 = *_9[2];
common/dct.c:80:5: note: type of def: 3.
common/dct.c:80:5: note: === vectorizable_conversion ===
common/dct.c:80:5: note: vect_model_promotion_demotion_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:80:5: note: ==> examining statement: _19 = *_9[3];
common/dct.c:80:5: note: num. args = 4 (not unary/binary/ternary op).
common/dct.c:80:5: note: vect_is_simple_use: operand *_9[3]
common/dct.c:80:5: note: not ssa-name.
common/dct.c:80:5: note: use not simple.
common/dct.c:80:5: note: no array mode for V8HI[4]
common/dct.c:80:5: note: vect_model_load_cost: unaligned supported by hardware.
common/dct.c:80:5: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:80:5: note: ==> examining statement: _20 = (int) _19;
common/dct.c:80:5: note: vect_is_simple_use: operand _19
common/dct.c:80:5: note: def_stmt: _19 = *_9[3];
common/dct.c:80:5: note: type of def: 3.
common/dct.c:80:5: note: === vectorizable_conversion ===
common/dct.c:80:5: note: vect_model_promotion_demotion_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:80:5: note: ==> examining statement: s23_21 = _18 + _20;
common/dct.c:80:5: note: vect_is_simple_use: operand _18
common/dct.c:80:5: note: def_stmt: _18 = (int) _17;
common/dct.c:80:5: note: type of def: 3.
common/dct.c:80:5: note: vect_is_simple_use: operand _20
common/dct.c:80:5: note: def_stmt: _20 = (int) _19;
common/dct.c:80:5: note: type of def: 3.
common/dct.c:80:5: note: === vectorizable_operation ===
common/dct.c:80:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:80:5: note: ==> examining statement: # DEBUG s23 => s23_21
common/dct.c:80:5: note: irrelevant.
common/dct.c:80:5: note: ==> examining statement: d23_22 = _18 - _20;
common/dct.c:80:5: note: vect_is_simple_use: operand _18
common/dct.c:80:5: note: def_stmt: _18 = (int) _17;
common/dct.c:80:5: note: type of def: 3.
common/dct.c:80:5: note: vect_is_simple_use: operand _20
common/dct.c:80:5: note: def_stmt: _20 = (int) _19;
common/dct.c:80:5: note: type of def: 3.
common/dct.c:80:5: note: === vectorizable_operation ===
common/dct.c:80:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:80:5: note: ==> examining statement: # DEBUG d23 => d23_22
common/dct.c:80:5: note: irrelevant.
common/dct.c:80:5: note: ==> examining statement: _23 = (unsigned short) s01_15;
common/dct.c:80:5: note: vect_is_simple_use: operand s01_15
common/dct.c:80:5: note: def_stmt: s01_15 = _11 + _14;
common/dct.c:80:5: note: type of def: 3.
common/dct.c:80:5: note: === vectorizable_conversion ===
common/dct.c:80:5: note: vect_model_promotion_demotion_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:80:5: note: ==> examining statement: _24 = (unsigned short) s23_21;
common/dct.c:80:5: note: vect_is_simple_use: operand s23_21
common/dct.c:80:5: note: def_stmt: s23_21 = _18 + _20;
common/dct.c:80:5: note: type of def: 3.
common/dct.c:80:5: note: === vectorizable_conversion ===
common/dct.c:80:5: note: vect_model_promotion_demotion_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:80:5: note: ==> examining statement: _25 = _23 + _24;
common/dct.c:80:5: note: vect_is_simple_use: operand _23
common/dct.c:80:5: note: def_stmt: _23 = (unsigned short) s01_15;
common/dct.c:80:5: note: type of def: 3.
common/dct.c:80:5: note: vect_is_simple_use: operand _24
common/dct.c:80:5: note: def_stmt: _24 = (unsigned short) s23_21;
common/dct.c:80:5: note: type of def: 3.
common/dct.c:80:5: note: === vectorizable_operation ===
common/dct.c:80:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:80:5: note: ==> examining statement: _26 = (short int) _25;
common/dct.c:80:5: note: vect_is_simple_use: operand _25
common/dct.c:80:5: note: def_stmt: _25 = _23 + _24;
common/dct.c:80:5: note: type of def: 3.
common/dct.c:80:5: note: vect_is_simple_use: operand _25
common/dct.c:80:5: note: def_stmt: _25 = _23 + _24;
common/dct.c:80:5: note: type of def: 3.
common/dct.c:80:5: note: no optab.
common/dct.c:80:5: note: vect_is_simple_use: operand _25
common/dct.c:80:5: note: def_stmt: _25 = _23 + _24;
common/dct.c:80:5: note: type of def: 3.
common/dct.c:80:5: note: === vectorizable_assignment ===
common/dct.c:80:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:80:5: note: ==> examining statement: tmp[0][i_78] = _26;
common/dct.c:80:5: note: vect_is_simple_use: operand _26
common/dct.c:80:5: note: def_stmt: _26 = (short int) _25;
common/dct.c:80:5: note: type of def: 3.
common/dct.c:80:5: note: vect_model_store_cost: aligned.
common/dct.c:80:5: note: vect_model_store_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:80:5: note: ==> examining statement: _28 = _23 - _24;
common/dct.c:80:5: note: vect_is_simple_use: operand _23
common/dct.c:80:5: note: def_stmt: _23 = (unsigned short) s01_15;
common/dct.c:80:5: note: type of def: 3.
common/dct.c:80:5: note: vect_is_simple_use: operand _24
common/dct.c:80:5: note: def_stmt: _24 = (unsigned short) s23_21;
common/dct.c:80:5: note: type of def: 3.
common/dct.c:80:5: note: === vectorizable_operation ===
common/dct.c:80:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:80:5: note: ==> examining statement: _29 = (short int) _28;
common/dct.c:80:5: note: vect_is_simple_use: operand _28
common/dct.c:80:5: note: def_stmt: _28 = _23 - _24;
common/dct.c:80:5: note: type of def: 3.
common/dct.c:80:5: note: vect_is_simple_use: operand _28
common/dct.c:80:5: note: def_stmt: _28 = _23 - _24;
common/dct.c:80:5: note: type of def: 3.
common/dct.c:80:5: note: no optab.
common/dct.c:80:5: note: vect_is_simple_use: operand _28
common/dct.c:80:5: note: def_stmt: _28 = _23 - _24;
common/dct.c:80:5: note: type of def: 3.
common/dct.c:80:5: note: === vectorizable_assignment ===
common/dct.c:80:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:80:5: note: ==> examining statement: tmp[1][i_78] = _29;
common/dct.c:80:5: note: vect_is_simple_use: operand _29
common/dct.c:80:5: note: def_stmt: _29 = (short int) _28;
common/dct.c:80:5: note: type of def: 3.
common/dct.c:80:5: note: vect_model_store_cost: unaligned supported by hardware.
common/dct.c:80:5: note: vect_model_store_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:80:5: note: ==> examining statement: _31 = (unsigned short) d01_16;
common/dct.c:80:5: note: vect_is_simple_use: operand d01_16
common/dct.c:80:5: note: def_stmt: d01_16 = _11 - _14;
common/dct.c:80:5: note: type of def: 3.
common/dct.c:80:5: note: === vectorizable_conversion ===
common/dct.c:80:5: note: vect_model_promotion_demotion_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:80:5: note: ==> examining statement: _32 = (unsigned short) d23_22;
common/dct.c:80:5: note: vect_is_simple_use: operand d23_22
common/dct.c:80:5: note: def_stmt: d23_22 = _18 - _20;
common/dct.c:80:5: note: type of def: 3.
common/dct.c:80:5: note: === vectorizable_conversion ===
common/dct.c:80:5: note: vect_model_promotion_demotion_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:80:5: note: ==> examining statement: _33 = _31 - _32;
common/dct.c:80:5: note: vect_is_simple_use: operand _31
common/dct.c:80:5: note: def_stmt: _31 = (unsigned short) d01_16;
common/dct.c:80:5: note: type of def: 3.
common/dct.c:80:5: note: vect_is_simple_use: operand _32
common/dct.c:80:5: note: def_stmt: _32 = (unsigned short) d23_22;
common/dct.c:80:5: note: type of def: 3.
common/dct.c:80:5: note: === vectorizable_operation ===
common/dct.c:80:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:80:5: note: ==> examining statement: _34 = (short int) _33;
common/dct.c:80:5: note: vect_is_simple_use: operand _33
common/dct.c:80:5: note: def_stmt: _33 = _31 - _32;
common/dct.c:80:5: note: type of def: 3.
common/dct.c:80:5: note: vect_is_simple_use: operand _33
common/dct.c:80:5: note: def_stmt: _33 = _31 - _32;
common/dct.c:80:5: note: type of def: 3.
common/dct.c:80:5: note: no optab.
common/dct.c:80:5: note: vect_is_simple_use: operand _33
common/dct.c:80:5: note: def_stmt: _33 = _31 - _32;
common/dct.c:80:5: note: type of def: 3.
common/dct.c:80:5: note: === vectorizable_assignment ===
common/dct.c:80:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:80:5: note: ==> examining statement: tmp[2][i_78] = _34;
common/dct.c:80:5: note: vect_is_simple_use: operand _34
common/dct.c:80:5: note: def_stmt: _34 = (short int) _33;
common/dct.c:80:5: note: type of def: 3.
common/dct.c:80:5: note: vect_model_store_cost: aligned.
common/dct.c:80:5: note: vect_model_store_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:80:5: note: ==> examining statement: _36 = _31 + _32;
common/dct.c:80:5: note: vect_is_simple_use: operand _31
common/dct.c:80:5: note: def_stmt: _31 = (unsigned short) d01_16;
common/dct.c:80:5: note: type of def: 3.
common/dct.c:80:5: note: vect_is_simple_use: operand _32
common/dct.c:80:5: note: def_stmt: _32 = (unsigned short) d23_22;
common/dct.c:80:5: note: type of def: 3.
common/dct.c:80:5: note: === vectorizable_operation ===
common/dct.c:80:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:80:5: note: ==> examining statement: _37 = (short int) _36;
common/dct.c:80:5: note: vect_is_simple_use: operand _36
common/dct.c:80:5: note: def_stmt: _36 = _31 + _32;
common/dct.c:80:5: note: type of def: 3.
common/dct.c:80:5: note: vect_is_simple_use: operand _36
common/dct.c:80:5: note: def_stmt: _36 = _31 + _32;
common/dct.c:80:5: note: type of def: 3.
common/dct.c:80:5: note: no optab.
common/dct.c:80:5: note: vect_is_simple_use: operand _36
common/dct.c:80:5: note: def_stmt: _36 = _31 + _32;
common/dct.c:80:5: note: type of def: 3.
common/dct.c:80:5: note: === vectorizable_assignment ===
common/dct.c:80:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:80:5: note: ==> examining statement: tmp[3][i_78] = _37;
common/dct.c:80:5: note: vect_is_simple_use: operand _37
common/dct.c:80:5: note: def_stmt: _37 = (short int) _36;
common/dct.c:80:5: note: type of def: 3.
common/dct.c:80:5: note: vect_model_store_cost: unaligned supported by hardware.
common/dct.c:80:5: note: vect_model_store_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:80:5: note: ==> examining statement: i_39 = i_78 + 1;
common/dct.c:80:5: note: irrelevant.
common/dct.c:80:5: note: ==> examining statement: # DEBUG i => i_39
common/dct.c:80:5: note: irrelevant.
common/dct.c:80:5: note: ==> examining statement: # DEBUG i => i_39
common/dct.c:80:5: note: irrelevant.
common/dct.c:80:5: note: ==> examining statement: ivtmp_154 = ivtmp_155 - 1;
common/dct.c:80:5: note: irrelevant.
common/dct.c:80:5: note: ==> examining statement: if (ivtmp_154 != 0)
common/dct.c:80:5: note: irrelevant.
common/dct.c:80:5: note: vectorization_factor = 8, niters = 4
common/dct.c:80:5: note: not vectorized: iteration count too small.
common/dct.c:80:5: note: not vectorized: iteration count smaller than vectorization factor.
common/dct.c:80:5: note: bad operation or unsupported loop bound.
common/dct.c:73:13: note: vectorized 0 loops in function.
idct4x4dc (int16_t[4] * d)
{
  int i;
  int d23;
  int d01;
  int s23;
  int s01;
  int16_t tmp[4][4];
  long unsigned int _6;
  long unsigned int _7;
  int16_t[4] * _9;
  short int _10;
  int _11;
  short int _13;
  int _14;
  short int _17;
  int _18;
  short int _19;
  int _20;
  unsigned short _23;
  unsigned short _24;
  unsigned short _25;
  short int _26;
  unsigned short _28;
  short int _29;
  unsigned short _31;
  unsigned short _32;
  unsigned short _33;
  short int _34;
  unsigned short _36;
  short int _37;
  short int _40;
  int _41;
  short int _42;
  int _43;
  short int _46;
  int _47;
  short int _48;
  int _49;
  long unsigned int _52;
  long unsigned int _53;
  int16_t[4] * _54;
  unsigned short _55;
  unsigned short _56;
  unsigned short _57;
  short int _58;
  unsigned short _60;
  short int _61;
  unsigned short _63;
  unsigned short _64;
  unsigned short _65;
  short int _66;
  unsigned short _68;
  short int _69;
  unsigned int ivtmp_154;
  unsigned int ivtmp_155;
  unsigned int ivtmp_156;
  unsigned int ivtmp_157;

  <bb 2>:
  # DEBUG i => 0
  # DEBUG i => 0

  <bb 3>:
  # i_78 = PHI <i_39(4), 0(2)>
  # ivtmp_155 = PHI <ivtmp_154(4), 4(2)>
  # DEBUG i => i_78
  _6 = (long unsigned int) i_78;
  _7 = _6 * 8;
  _9 = d_8(D) + _7;
  _10 = *_9[0];
  _11 = (int) _10;
  _13 = *_9[1];
  _14 = (int) _13;
  s01_15 = _11 + _14;
  # DEBUG s01 => s01_15
  d01_16 = _11 - _14;
  # DEBUG d01 => d01_16
  _17 = *_9[2];
  _18 = (int) _17;
  _19 = *_9[3];
  _20 = (int) _19;
  s23_21 = _18 + _20;
  # DEBUG s23 => s23_21
  d23_22 = _18 - _20;
  # DEBUG d23 => d23_22
  _23 = (unsigned short) s01_15;
  _24 = (unsigned short) s23_21;
  _25 = _23 + _24;
  _26 = (short int) _25;
  tmp[0][i_78] = _26;
  _28 = _23 - _24;
  _29 = (short int) _28;
  tmp[1][i_78] = _29;
  _31 = (unsigned short) d01_16;
  _32 = (unsigned short) d23_22;
  _33 = _31 - _32;
  _34 = (short int) _33;
  tmp[2][i_78] = _34;
  _36 = _31 + _32;
  _37 = (short int) _36;
  tmp[3][i_78] = _37;
  i_39 = i_78 + 1;
  # DEBUG i => i_39
  # DEBUG i => i_39
  ivtmp_154 = ivtmp_155 - 1;
  if (ivtmp_154 != 0)
    goto <bb 4>;
  else
    goto <bb 5>;

  <bb 4>:
  goto <bb 3>;

  <bb 5>:

  <bb 6>:
  # i_79 = PHI <0(5), i_71(7)>
  # ivtmp_157 = PHI <4(5), ivtmp_156(7)>
  # DEBUG i => i_79
  _40 = tmp[i_79][0];
  _41 = (int) _40;
  _42 = tmp[i_79][1];
  _43 = (int) _42;
  s01_44 = _41 + _43;
  # DEBUG s01 => s01_44
  d01_45 = _41 - _43;
  # DEBUG d01 => d01_45
  _46 = tmp[i_79][2];
  _47 = (int) _46;
  _48 = tmp[i_79][3];
  _49 = (int) _48;
  s23_50 = _47 + _49;
  # DEBUG s23 => s23_50
  d23_51 = _47 - _49;
  # DEBUG d23 => d23_51
  _52 = (long unsigned int) i_79;
  _53 = _52 * 8;
  _54 = d_8(D) + _53;
  _55 = (unsigned short) s01_44;
  _56 = (unsigned short) s23_50;
  _57 = _55 + _56;
  _58 = (short int) _57;
  *_54[0] = _58;
  _60 = _55 - _56;
  _61 = (short int) _60;
  *_54[1] = _61;
  _63 = (unsigned short) d01_45;
  _64 = (unsigned short) d23_51;
  _65 = _63 - _64;
  _66 = (short int) _65;
  *_54[2] = _66;
  _68 = _63 + _64;
  _69 = (short int) _68;
  *_54[3] = _69;
  i_71 = i_79 + 1;
  # DEBUG i => i_71
  # DEBUG i => i_71
  ivtmp_156 = ivtmp_157 - 1;
  if (ivtmp_156 != 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  goto <bb 6>;

  <bb 8>:
  tmp ={v} {CLOBBER};
  return;

}



;; Function sub4x4_dct (sub4x4_dct, funcdef_no=118, decl_uid=5892, cgraph_uid=118, symbol_order=163)


Analyzing loop at common/dct.c:143
common/dct.c:143:5: note: ===== analyze_loop_nest =====
common/dct.c:143:5: note: === vect_analyze_loop_form ===
common/dct.c:143:5: note: === get_loop_niters ===
Analyzing # of iterations of loop 2
  exit condition [3, + , 4294967295] != 0
  bounds on difference of bases: -3 ... -3
  result:
    # of iterations 3, bounded by 3
common/dct.c:143:5: note: === vect_analyze_data_refs ===
Creating dr for tmp[i_19][0]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &tmp
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 128
	base_object: tmp
	Access function 0: 0
	Access function 1: {0, +, 1}_2
Creating dr for tmp[i_19][3]
analyze_innermost: success.
	base_address: &tmp
	offset from base address: 0
	constant offset from base address: 6
	step: 8
	aligned to: 128
	base_object: tmp
	Access function 0: 3
	Access function 1: {0, +, 1}_2
Creating dr for tmp[i_19][1]
analyze_innermost: success.
	base_address: &tmp
	offset from base address: 0
	constant offset from base address: 2
	step: 8
	aligned to: 128
	base_object: tmp
	Access function 0: 1
	Access function 1: {0, +, 1}_2
Creating dr for tmp[i_19][2]
analyze_innermost: success.
	base_address: &tmp
	offset from base address: 0
	constant offset from base address: 4
	step: 8
	aligned to: 128
	base_object: tmp
	Access function 0: 2
	Access function 1: {0, +, 1}_2
Creating dr for *_58[0]
analyze_innermost: success.
	base_address: dct_57(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 128
	base_object: *dct_57(D)
	Access function 0: 0
	Access function 1: {0B, +, 8}_2
Creating dr for *_58[1]
analyze_innermost: success.
	base_address: dct_57(D)
	offset from base address: 0
	constant offset from base address: 2
	step: 8
	aligned to: 128
	base_object: *dct_57(D)
	Access function 0: 1
	Access function 1: {0B, +, 8}_2
Creating dr for *_58[2]
analyze_innermost: success.
	base_address: dct_57(D)
	offset from base address: 0
	constant offset from base address: 4
	step: 8
	aligned to: 128
	base_object: *dct_57(D)
	Access function 0: 2
	Access function 1: {0B, +, 8}_2
Creating dr for *_58[3]
analyze_innermost: success.
	base_address: dct_57(D)
	offset from base address: 0
	constant offset from base address: 6
	step: 8
	aligned to: 128
	base_object: *dct_57(D)
	Access function 0: 3
	Access function 1: {0B, +, 8}_2
common/dct.c:143:5: note: got vectype for stmt: _43 = tmp[i_19][0];
vector(8) short int
common/dct.c:143:5: note: got vectype for stmt: _45 = tmp[i_19][3];
vector(8) short int
common/dct.c:143:5: note: got vectype for stmt: _48 = tmp[i_19][1];
vector(8) short int
common/dct.c:143:5: note: got vectype for stmt: _50 = tmp[i_19][2];
vector(8) short int
common/dct.c:143:5: note: got vectype for stmt: *_58[0] = _62;
vector(8) short int
common/dct.c:143:5: note: got vectype for stmt: *_58[1] = _68;
vector(8) short int
common/dct.c:143:5: note: got vectype for stmt: *_58[2] = _71;
vector(8) short int
common/dct.c:143:5: note: got vectype for stmt: *_58[3] = _75;
vector(8) short int
common/dct.c:143:5: note: === vect_analyze_scalar_cycles ===
common/dct.c:143:5: note: Analyze phi: i_19 = PHI <0(11), i_77(13)>

common/dct.c:143:5: note: Access function of PHI: {0, +, 1}_2
common/dct.c:143:5: note: step: 1,  init: 0
common/dct.c:143:5: note: Detected induction.
common/dct.c:143:5: note: Analyze phi: .MEM_118 = PHI <.MEM_41(11), .MEM_76(13)>

common/dct.c:143:5: note: Analyze phi: ivtmp_228 = PHI <4(11), ivtmp_226(13)>

common/dct.c:143:5: note: Access function of PHI: {4, +, 4294967295}_2
common/dct.c:143:5: note: step: 4294967295,  init: 4
common/dct.c:143:5: note: Detected induction.
common/dct.c:143:5: note: === vect_pattern_recog ===
common/dct.c:143:5: note: vect_is_simple_use: operand _55
common/dct.c:143:5: note: def_stmt: _55 = (long unsigned int) i_19;
common/dct.c:143:5: note: type of def: 3.
common/dct.c:143:5: note: vect_is_simple_use: operand i_19
common/dct.c:143:5: note: def_stmt: i_19 = PHI <0(11), i_77(13)>
common/dct.c:143:5: note: type of def: 4.
common/dct.c:143:5: note: vect_is_simple_use: operand 8
common/dct.c:143:5: note: vect_is_simple_use: operand _64
common/dct.c:143:5: note: def_stmt: _64 = (unsigned short) d03_53;
common/dct.c:143:5: note: type of def: 3.
common/dct.c:143:5: note: vect_is_simple_use: operand d03_53
common/dct.c:143:5: note: def_stmt: d03_53 = _44 - _46;
common/dct.c:143:5: note: type of def: 3.
common/dct.c:143:5: note: vect_is_simple_use: operand _66
common/dct.c:143:5: note: def_stmt: _66 = (unsigned short) d12_54;
common/dct.c:143:5: note: type of def: 3.
common/dct.c:143:5: note: vect_is_simple_use: operand d12_54
common/dct.c:143:5: note: def_stmt: d12_54 = _49 - _51;
common/dct.c:143:5: note: type of def: 3.
common/dct.c:143:5: note: === vect_analyze_data_ref_accesses ===
common/dct.c:143:5: note: Detected interleaving tmp[i_19][0] and tmp[i_19][1]
common/dct.c:143:5: note: Detected interleaving tmp[i_19][0] and tmp[i_19][2]
common/dct.c:143:5: note: Detected interleaving tmp[i_19][0] and tmp[i_19][3]
common/dct.c:143:5: note: Detected interleaving *_58[0] and *_58[1]
common/dct.c:143:5: note: Detected interleaving *_58[0] and *_58[2]
common/dct.c:143:5: note: Detected interleaving *_58[0] and *_58[3]
common/dct.c:143:5: note: Detected interleaving of size 4
common/dct.c:143:5: note: Detected interleaving of size 4
common/dct.c:143:5: note: === vect_mark_stmts_to_be_vectorized ===
common/dct.c:143:5: note: init: phi relevant? i_19 = PHI <0(11), i_77(13)>
common/dct.c:143:5: note: init: phi relevant? .MEM_118 = PHI <.MEM_41(11), .MEM_76(13)>
common/dct.c:143:5: note: init: phi relevant? ivtmp_228 = PHI <4(11), ivtmp_226(13)>
common/dct.c:143:5: note: init: stmt relevant? # DEBUG i => i_19
common/dct.c:143:5: note: init: stmt relevant? _43 = tmp[i_19][0];
common/dct.c:143:5: note: init: stmt relevant? _44 = (int) _43;
common/dct.c:143:5: note: init: stmt relevant? _45 = tmp[i_19][3];
common/dct.c:143:5: note: init: stmt relevant? _46 = (int) _45;
common/dct.c:143:5: note: init: stmt relevant? s03_47 = _44 + _46;
common/dct.c:143:5: note: init: stmt relevant? # DEBUG s03 => s03_47
common/dct.c:143:5: note: init: stmt relevant? _48 = tmp[i_19][1];
common/dct.c:143:5: note: init: stmt relevant? _49 = (int) _48;
common/dct.c:143:5: note: init: stmt relevant? _50 = tmp[i_19][2];
common/dct.c:143:5: note: init: stmt relevant? _51 = (int) _50;
common/dct.c:143:5: note: init: stmt relevant? s12_52 = _49 + _51;
common/dct.c:143:5: note: init: stmt relevant? # DEBUG s12 => s12_52
common/dct.c:143:5: note: init: stmt relevant? d03_53 = _44 - _46;
common/dct.c:143:5: note: init: stmt relevant? # DEBUG d03 => d03_53
common/dct.c:143:5: note: init: stmt relevant? d12_54 = _49 - _51;
common/dct.c:143:5: note: init: stmt relevant? # DEBUG d12 => d12_54
common/dct.c:143:5: note: init: stmt relevant? _55 = (long unsigned int) i_19;
common/dct.c:143:5: note: init: stmt relevant? _56 = _55 * 8;
common/dct.c:143:5: note: init: stmt relevant? _58 = dct_57(D) + _56;
common/dct.c:143:5: note: init: stmt relevant? _59 = (unsigned short) s03_47;
common/dct.c:143:5: note: init: stmt relevant? _60 = (unsigned short) s12_52;
common/dct.c:143:5: note: init: stmt relevant? _61 = _59 + _60;
common/dct.c:143:5: note: init: stmt relevant? _62 = (short int) _61;
common/dct.c:143:5: note: init: stmt relevant? *_58[0] = _62;
common/dct.c:143:5: note: vec_stmt_relevant_p: stmt has vdefs.
common/dct.c:143:5: note: mark relevant 4, live 0.
common/dct.c:143:5: note: init: stmt relevant? _64 = (unsigned short) d03_53;
common/dct.c:143:5: note: init: stmt relevant? _65 = _64 * 2;
common/dct.c:143:5: note: init: stmt relevant? _66 = (unsigned short) d12_54;
common/dct.c:143:5: note: init: stmt relevant? _67 = _65 + _66;
common/dct.c:143:5: note: init: stmt relevant? _68 = (short int) _67;
common/dct.c:143:5: note: init: stmt relevant? *_58[1] = _68;
common/dct.c:143:5: note: vec_stmt_relevant_p: stmt has vdefs.
common/dct.c:143:5: note: mark relevant 4, live 0.
common/dct.c:143:5: note: init: stmt relevant? _70 = _59 - _60;
common/dct.c:143:5: note: init: stmt relevant? _71 = (short int) _70;
common/dct.c:143:5: note: init: stmt relevant? *_58[2] = _71;
common/dct.c:143:5: note: vec_stmt_relevant_p: stmt has vdefs.
common/dct.c:143:5: note: mark relevant 4, live 0.
common/dct.c:143:5: note: init: stmt relevant? _73 = _66 * 2;
common/dct.c:143:5: note: init: stmt relevant? _74 = _64 - _73;
common/dct.c:143:5: note: init: stmt relevant? _75 = (short int) _74;
common/dct.c:143:5: note: init: stmt relevant? *_58[3] = _75;
common/dct.c:143:5: note: vec_stmt_relevant_p: stmt has vdefs.
common/dct.c:143:5: note: mark relevant 4, live 0.
common/dct.c:143:5: note: init: stmt relevant? i_77 = i_19 + 1;
common/dct.c:143:5: note: init: stmt relevant? # DEBUG i => i_77
common/dct.c:143:5: note: init: stmt relevant? # DEBUG i => i_77
common/dct.c:143:5: note: init: stmt relevant? ivtmp_226 = ivtmp_228 - 1;
common/dct.c:143:5: note: init: stmt relevant? if (ivtmp_226 != 0)
common/dct.c:143:5: note: worklist: examine stmt: *_58[3] = _75;
common/dct.c:143:5: note: vect_is_simple_use: operand _75
common/dct.c:143:5: note: def_stmt: _75 = (short int) _74;
common/dct.c:143:5: note: type of def: 3.
common/dct.c:143:5: note: mark relevant 4, live 0.
common/dct.c:143:5: note: worklist: examine stmt: _75 = (short int) _74;
common/dct.c:143:5: note: vect_is_simple_use: operand _74
common/dct.c:143:5: note: def_stmt: _74 = _64 - _73;
common/dct.c:143:5: note: type of def: 3.
common/dct.c:143:5: note: mark relevant 4, live 0.
common/dct.c:143:5: note: worklist: examine stmt: _74 = _64 - _73;
common/dct.c:143:5: note: vect_is_simple_use: operand _64
common/dct.c:143:5: note: def_stmt: _64 = (unsigned short) d03_53;
common/dct.c:143:5: note: type of def: 3.
common/dct.c:143:5: note: mark relevant 4, live 0.
common/dct.c:143:5: note: vect_is_simple_use: operand _73
common/dct.c:143:5: note: def_stmt: _73 = _66 * 2;
common/dct.c:143:5: note: type of def: 3.
common/dct.c:143:5: note: mark relevant 4, live 0.
common/dct.c:143:5: note: worklist: examine stmt: _73 = _66 * 2;
common/dct.c:143:5: note: vect_is_simple_use: operand _66
common/dct.c:143:5: note: def_stmt: _66 = (unsigned short) d12_54;
common/dct.c:143:5: note: type of def: 3.
common/dct.c:143:5: note: mark relevant 4, live 0.
common/dct.c:143:5: note: worklist: examine stmt: _66 = (unsigned short) d12_54;
common/dct.c:143:5: note: vect_is_simple_use: operand d12_54
common/dct.c:143:5: note: def_stmt: d12_54 = _49 - _51;
common/dct.c:143:5: note: type of def: 3.
common/dct.c:143:5: note: mark relevant 4, live 0.
common/dct.c:143:5: note: worklist: examine stmt: d12_54 = _49 - _51;
common/dct.c:143:5: note: vect_is_simple_use: operand _49
common/dct.c:143:5: note: def_stmt: _49 = (int) _48;
common/dct.c:143:5: note: type of def: 3.
common/dct.c:143:5: note: mark relevant 4, live 0.
common/dct.c:143:5: note: vect_is_simple_use: operand _51
common/dct.c:143:5: note: def_stmt: _51 = (int) _50;
common/dct.c:143:5: note: type of def: 3.
common/dct.c:143:5: note: mark relevant 4, live 0.
common/dct.c:143:5: note: worklist: examine stmt: _51 = (int) _50;
common/dct.c:143:5: note: vect_is_simple_use: operand _50
common/dct.c:143:5: note: def_stmt: _50 = tmp[i_19][2];
common/dct.c:143:5: note: type of def: 3.
common/dct.c:143:5: note: mark relevant 4, live 0.
common/dct.c:143:5: note: worklist: examine stmt: _50 = tmp[i_19][2];
common/dct.c:143:5: note: worklist: examine stmt: _49 = (int) _48;
common/dct.c:143:5: note: vect_is_simple_use: operand _48
common/dct.c:143:5: note: def_stmt: _48 = tmp[i_19][1];
common/dct.c:143:5: note: type of def: 3.
common/dct.c:143:5: note: mark relevant 4, live 0.
common/dct.c:143:5: note: worklist: examine stmt: _48 = tmp[i_19][1];
common/dct.c:143:5: note: worklist: examine stmt: _64 = (unsigned short) d03_53;
common/dct.c:143:5: note: vect_is_simple_use: operand d03_53
common/dct.c:143:5: note: def_stmt: d03_53 = _44 - _46;
common/dct.c:143:5: note: type of def: 3.
common/dct.c:143:5: note: mark relevant 4, live 0.
common/dct.c:143:5: note: worklist: examine stmt: d03_53 = _44 - _46;
common/dct.c:143:5: note: vect_is_simple_use: operand _44
common/dct.c:143:5: note: def_stmt: _44 = (int) _43;
common/dct.c:143:5: note: type of def: 3.
common/dct.c:143:5: note: mark relevant 4, live 0.
common/dct.c:143:5: note: vect_is_simple_use: operand _46
common/dct.c:143:5: note: def_stmt: _46 = (int) _45;
common/dct.c:143:5: note: type of def: 3.
common/dct.c:143:5: note: mark relevant 4, live 0.
common/dct.c:143:5: note: worklist: examine stmt: _46 = (int) _45;
common/dct.c:143:5: note: vect_is_simple_use: operand _45
common/dct.c:143:5: note: def_stmt: _45 = tmp[i_19][3];
common/dct.c:143:5: note: type of def: 3.
common/dct.c:143:5: note: mark relevant 4, live 0.
common/dct.c:143:5: note: worklist: examine stmt: _45 = tmp[i_19][3];
common/dct.c:143:5: note: worklist: examine stmt: _44 = (int) _43;
common/dct.c:143:5: note: vect_is_simple_use: operand _43
common/dct.c:143:5: note: def_stmt: _43 = tmp[i_19][0];
common/dct.c:143:5: note: type of def: 3.
common/dct.c:143:5: note: mark relevant 4, live 0.
common/dct.c:143:5: note: worklist: examine stmt: _43 = tmp[i_19][0];
common/dct.c:143:5: note: worklist: examine stmt: *_58[2] = _71;
common/dct.c:143:5: note: vect_is_simple_use: operand _71
common/dct.c:143:5: note: def_stmt: _71 = (short int) _70;
common/dct.c:143:5: note: type of def: 3.
common/dct.c:143:5: note: mark relevant 4, live 0.
common/dct.c:143:5: note: worklist: examine stmt: _71 = (short int) _70;
common/dct.c:143:5: note: vect_is_simple_use: operand _70
common/dct.c:143:5: note: def_stmt: _70 = _59 - _60;
common/dct.c:143:5: note: type of def: 3.
common/dct.c:143:5: note: mark relevant 4, live 0.
common/dct.c:143:5: note: worklist: examine stmt: _70 = _59 - _60;
common/dct.c:143:5: note: vect_is_simple_use: operand _59
common/dct.c:143:5: note: def_stmt: _59 = (unsigned short) s03_47;
common/dct.c:143:5: note: type of def: 3.
common/dct.c:143:5: note: mark relevant 4, live 0.
common/dct.c:143:5: note: vect_is_simple_use: operand _60
common/dct.c:143:5: note: def_stmt: _60 = (unsigned short) s12_52;
common/dct.c:143:5: note: type of def: 3.
common/dct.c:143:5: note: mark relevant 4, live 0.
common/dct.c:143:5: note: worklist: examine stmt: _60 = (unsigned short) s12_52;
common/dct.c:143:5: note: vect_is_simple_use: operand s12_52
common/dct.c:143:5: note: def_stmt: s12_52 = _49 + _51;
common/dct.c:143:5: note: type of def: 3.
common/dct.c:143:5: note: mark relevant 4, live 0.
common/dct.c:143:5: note: worklist: examine stmt: s12_52 = _49 + _51;
common/dct.c:143:5: note: vect_is_simple_use: operand _49
common/dct.c:143:5: note: def_stmt: _49 = (int) _48;
common/dct.c:143:5: note: type of def: 3.
common/dct.c:143:5: note: mark relevant 4, live 0.
common/dct.c:143:5: note: already marked relevant/live.
common/dct.c:143:5: note: vect_is_simple_use: operand _51
common/dct.c:143:5: note: def_stmt: _51 = (int) _50;
common/dct.c:143:5: note: type of def: 3.
common/dct.c:143:5: note: mark relevant 4, live 0.
common/dct.c:143:5: note: already marked relevant/live.
common/dct.c:143:5: note: worklist: examine stmt: _59 = (unsigned short) s03_47;
common/dct.c:143:5: note: vect_is_simple_use: operand s03_47
common/dct.c:143:5: note: def_stmt: s03_47 = _44 + _46;
common/dct.c:143:5: note: type of def: 3.
common/dct.c:143:5: note: mark relevant 4, live 0.
common/dct.c:143:5: note: worklist: examine stmt: s03_47 = _44 + _46;
common/dct.c:143:5: note: vect_is_simple_use: operand _44
common/dct.c:143:5: note: def_stmt: _44 = (int) _43;
common/dct.c:143:5: note: type of def: 3.
common/dct.c:143:5: note: mark relevant 4, live 0.
common/dct.c:143:5: note: already marked relevant/live.
common/dct.c:143:5: note: vect_is_simple_use: operand _46
common/dct.c:143:5: note: def_stmt: _46 = (int) _45;
common/dct.c:143:5: note: type of def: 3.
common/dct.c:143:5: note: mark relevant 4, live 0.
common/dct.c:143:5: note: already marked relevant/live.
common/dct.c:143:5: note: worklist: examine stmt: *_58[1] = _68;
common/dct.c:143:5: note: vect_is_simple_use: operand _68
common/dct.c:143:5: note: def_stmt: _68 = (short int) _67;
common/dct.c:143:5: note: type of def: 3.
common/dct.c:143:5: note: mark relevant 4, live 0.
common/dct.c:143:5: note: worklist: examine stmt: _68 = (short int) _67;
common/dct.c:143:5: note: vect_is_simple_use: operand _67
common/dct.c:143:5: note: def_stmt: _67 = _65 + _66;
common/dct.c:143:5: note: type of def: 3.
common/dct.c:143:5: note: mark relevant 4, live 0.
common/dct.c:143:5: note: worklist: examine stmt: _67 = _65 + _66;
common/dct.c:143:5: note: vect_is_simple_use: operand _65
common/dct.c:143:5: note: def_stmt: _65 = _64 * 2;
common/dct.c:143:5: note: type of def: 3.
common/dct.c:143:5: note: mark relevant 4, live 0.
common/dct.c:143:5: note: vect_is_simple_use: operand _66
common/dct.c:143:5: note: def_stmt: _66 = (unsigned short) d12_54;
common/dct.c:143:5: note: type of def: 3.
common/dct.c:143:5: note: mark relevant 4, live 0.
common/dct.c:143:5: note: already marked relevant/live.
common/dct.c:143:5: note: worklist: examine stmt: _65 = _64 * 2;
common/dct.c:143:5: note: vect_is_simple_use: operand _64
common/dct.c:143:5: note: def_stmt: _64 = (unsigned short) d03_53;
common/dct.c:143:5: note: type of def: 3.
common/dct.c:143:5: note: mark relevant 4, live 0.
common/dct.c:143:5: note: already marked relevant/live.
common/dct.c:143:5: note: worklist: examine stmt: *_58[0] = _62;
common/dct.c:143:5: note: vect_is_simple_use: operand _62
common/dct.c:143:5: note: def_stmt: _62 = (short int) _61;
common/dct.c:143:5: note: type of def: 3.
common/dct.c:143:5: note: mark relevant 4, live 0.
common/dct.c:143:5: note: worklist: examine stmt: _62 = (short int) _61;
common/dct.c:143:5: note: vect_is_simple_use: operand _61
common/dct.c:143:5: note: def_stmt: _61 = _59 + _60;
common/dct.c:143:5: note: type of def: 3.
common/dct.c:143:5: note: mark relevant 4, live 0.
common/dct.c:143:5: note: worklist: examine stmt: _61 = _59 + _60;
common/dct.c:143:5: note: vect_is_simple_use: operand _59
common/dct.c:143:5: note: def_stmt: _59 = (unsigned short) s03_47;
common/dct.c:143:5: note: type of def: 3.
common/dct.c:143:5: note: mark relevant 4, live 0.
common/dct.c:143:5: note: already marked relevant/live.
common/dct.c:143:5: note: vect_is_simple_use: operand _60
common/dct.c:143:5: note: def_stmt: _60 = (unsigned short) s12_52;
common/dct.c:143:5: note: type of def: 3.
common/dct.c:143:5: note: mark relevant 4, live 0.
common/dct.c:143:5: note: already marked relevant/live.
common/dct.c:143:5: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _43 = tmp[i_19][0];
  stmt_b: _45 = tmp[i_19][3];
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _43 = tmp[i_19][0];
  stmt_b: _48 = tmp[i_19][1];
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 1)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _43 = tmp[i_19][0];
  stmt_b: _50 = tmp[i_19][2];
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _43 = tmp[i_19][0];
  stmt_b: *_58[0] = _62;
) -> no dependence
(compute_affine_dependence
  stmt_a: _43 = tmp[i_19][0];
  stmt_b: *_58[1] = _68;
) -> no dependence
(compute_affine_dependence
  stmt_a: _43 = tmp[i_19][0];
  stmt_b: *_58[2] = _71;
) -> no dependence
(compute_affine_dependence
  stmt_a: _43 = tmp[i_19][0];
  stmt_b: *_58[3] = _75;
) -> no dependence
(compute_affine_dependence
  stmt_a: _45 = tmp[i_19][3];
  stmt_b: _48 = tmp[i_19][1];
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 1)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _45 = tmp[i_19][3];
  stmt_b: _50 = tmp[i_19][2];
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _45 = tmp[i_19][3];
  stmt_b: *_58[0] = _62;
) -> no dependence
(compute_affine_dependence
  stmt_a: _45 = tmp[i_19][3];
  stmt_b: *_58[1] = _68;
) -> no dependence
(compute_affine_dependence
  stmt_a: _45 = tmp[i_19][3];
  stmt_b: *_58[2] = _71;
) -> no dependence
(compute_affine_dependence
  stmt_a: _45 = tmp[i_19][3];
  stmt_b: *_58[3] = _75;
) -> no dependence
(compute_affine_dependence
  stmt_a: _48 = tmp[i_19][1];
  stmt_b: _50 = tmp[i_19][2];
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _48 = tmp[i_19][1];
  stmt_b: *_58[0] = _62;
) -> no dependence
(compute_affine_dependence
  stmt_a: _48 = tmp[i_19][1];
  stmt_b: *_58[1] = _68;
) -> no dependence
(compute_affine_dependence
  stmt_a: _48 = tmp[i_19][1];
  stmt_b: *_58[2] = _71;
) -> no dependence
(compute_affine_dependence
  stmt_a: _48 = tmp[i_19][1];
  stmt_b: *_58[3] = _75;
) -> no dependence
(compute_affine_dependence
  stmt_a: _50 = tmp[i_19][2];
  stmt_b: *_58[0] = _62;
) -> no dependence
(compute_affine_dependence
  stmt_a: _50 = tmp[i_19][2];
  stmt_b: *_58[1] = _68;
) -> no dependence
(compute_affine_dependence
  stmt_a: _50 = tmp[i_19][2];
  stmt_b: *_58[2] = _71;
) -> no dependence
(compute_affine_dependence
  stmt_a: _50 = tmp[i_19][2];
  stmt_b: *_58[3] = _75;
) -> no dependence
(compute_affine_dependence
  stmt_a: *_58[0] = _62;
  stmt_b: *_58[1] = _68;
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 1)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: *_58[0] = _62;
  stmt_b: *_58[2] = _71;
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: *_58[0] = _62;
  stmt_b: *_58[3] = _75;
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: *_58[1] = _68;
  stmt_b: *_58[2] = _71;
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: *_58[1] = _68;
  stmt_b: *_58[3] = _75;
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: *_58[2] = _71;
  stmt_b: *_58[3] = _75;
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _43 = tmp[i_19][0];
  stmt_b: _43 = tmp[i_19][0];
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 0)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_2)
  (chrec_b = {0, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _45 = tmp[i_19][3];
  stmt_b: _45 = tmp[i_19][3];
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_2)
  (chrec_b = {0, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _48 = tmp[i_19][1];
  stmt_b: _48 = tmp[i_19][1];
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_2)
  (chrec_b = {0, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _50 = tmp[i_19][2];
  stmt_b: _50 = tmp[i_19][2];
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_2)
  (chrec_b = {0, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: *_58[0] = _62;
  stmt_b: *_58[0] = _62;
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 0)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 8}_2)
  (chrec_b = {0B, +, 8}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: *_58[1] = _68;
  stmt_b: *_58[1] = _68;
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 8}_2)
  (chrec_b = {0B, +, 8}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: *_58[2] = _71;
  stmt_b: *_58[2] = _71;
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 8}_2)
  (chrec_b = {0B, +, 8}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: *_58[3] = _75;
  stmt_b: *_58[3] = _75;
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 8}_2)
  (chrec_b = {0B, +, 8}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/dct.c:143:5: note: === vect_determine_vectorization_factor ===
common/dct.c:143:5: note: ==> examining phi: i_19 = PHI <0(11), i_77(13)>

common/dct.c:143:5: note: ==> examining phi: .MEM_118 = PHI <.MEM_41(11), .MEM_76(13)>

common/dct.c:143:5: note: ==> examining phi: ivtmp_228 = PHI <4(11), ivtmp_226(13)>

common/dct.c:143:5: note: ==> examining statement: # DEBUG i => i_19

common/dct.c:143:5: note: skip.
common/dct.c:143:5: note: ==> examining statement: _43 = tmp[i_19][0];

common/dct.c:143:5: note: get vectype for scalar type:  short int
common/dct.c:143:5: note: vectype: vector(8) short int
common/dct.c:143:5: note: nunits = 8
common/dct.c:143:5: note: ==> examining statement: _44 = (int) _43;

common/dct.c:143:5: note: get vectype for scalar type:  int
common/dct.c:143:5: note: vectype: vector(4) int
common/dct.c:143:5: note: get vectype for scalar type:  short int
common/dct.c:143:5: note: vectype: vector(8) short int
common/dct.c:143:5: note: nunits = 8
common/dct.c:143:5: note: ==> examining statement: _45 = tmp[i_19][3];

common/dct.c:143:5: note: get vectype for scalar type:  short int
common/dct.c:143:5: note: vectype: vector(8) short int
common/dct.c:143:5: note: nunits = 8
common/dct.c:143:5: note: ==> examining statement: _46 = (int) _45;

common/dct.c:143:5: note: get vectype for scalar type:  int
common/dct.c:143:5: note: vectype: vector(4) int
common/dct.c:143:5: note: get vectype for scalar type:  short int
common/dct.c:143:5: note: vectype: vector(8) short int
common/dct.c:143:5: note: nunits = 8
common/dct.c:143:5: note: ==> examining statement: s03_47 = _44 + _46;

common/dct.c:143:5: note: get vectype for scalar type:  const int
common/dct.c:143:5: note: vectype: const vector(4) int
common/dct.c:143:5: note: get vectype for scalar type:  const int
common/dct.c:143:5: note: vectype: const vector(4) int
common/dct.c:143:5: note: nunits = 4
common/dct.c:143:5: note: ==> examining statement: # DEBUG s03 => s03_47

common/dct.c:143:5: note: skip.
common/dct.c:143:5: note: ==> examining statement: _48 = tmp[i_19][1];

common/dct.c:143:5: note: get vectype for scalar type:  short int
common/dct.c:143:5: note: vectype: vector(8) short int
common/dct.c:143:5: note: nunits = 8
common/dct.c:143:5: note: ==> examining statement: _49 = (int) _48;

common/dct.c:143:5: note: get vectype for scalar type:  int
common/dct.c:143:5: note: vectype: vector(4) int
common/dct.c:143:5: note: get vectype for scalar type:  short int
common/dct.c:143:5: note: vectype: vector(8) short int
common/dct.c:143:5: note: nunits = 8
common/dct.c:143:5: note: ==> examining statement: _50 = tmp[i_19][2];

common/dct.c:143:5: note: get vectype for scalar type:  short int
common/dct.c:143:5: note: vectype: vector(8) short int
common/dct.c:143:5: note: nunits = 8
common/dct.c:143:5: note: ==> examining statement: _51 = (int) _50;

common/dct.c:143:5: note: get vectype for scalar type:  int
common/dct.c:143:5: note: vectype: vector(4) int
common/dct.c:143:5: note: get vectype for scalar type:  short int
common/dct.c:143:5: note: vectype: vector(8) short int
common/dct.c:143:5: note: nunits = 8
common/dct.c:143:5: note: ==> examining statement: s12_52 = _49 + _51;

common/dct.c:143:5: note: get vectype for scalar type:  const int
common/dct.c:143:5: note: vectype: const vector(4) int
common/dct.c:143:5: note: get vectype for scalar type:  const int
common/dct.c:143:5: note: vectype: const vector(4) int
common/dct.c:143:5: note: nunits = 4
common/dct.c:143:5: note: ==> examining statement: # DEBUG s12 => s12_52

common/dct.c:143:5: note: skip.
common/dct.c:143:5: note: ==> examining statement: d03_53 = _44 - _46;

common/dct.c:143:5: note: get vectype for scalar type:  const int
common/dct.c:143:5: note: vectype: const vector(4) int
common/dct.c:143:5: note: get vectype for scalar type:  const int
common/dct.c:143:5: note: vectype: const vector(4) int
common/dct.c:143:5: note: nunits = 4
common/dct.c:143:5: note: ==> examining statement: # DEBUG d03 => d03_53

common/dct.c:143:5: note: skip.
common/dct.c:143:5: note: ==> examining statement: d12_54 = _49 - _51;

common/dct.c:143:5: note: get vectype for scalar type:  const int
common/dct.c:143:5: note: vectype: const vector(4) int
common/dct.c:143:5: note: get vectype for scalar type:  const int
common/dct.c:143:5: note: vectype: const vector(4) int
common/dct.c:143:5: note: nunits = 4
common/dct.c:143:5: note: ==> examining statement: # DEBUG d12 => d12_54

common/dct.c:143:5: note: skip.
common/dct.c:143:5: note: ==> examining statement: _55 = (long unsigned int) i_19;

common/dct.c:143:5: note: skip.
common/dct.c:143:5: note: ==> examining statement: _56 = _55 * 8;

common/dct.c:143:5: note: skip.
common/dct.c:143:5: note: ==> examining statement: _58 = dct_57(D) + _56;

common/dct.c:143:5: note: skip.
common/dct.c:143:5: note: ==> examining statement: _59 = (unsigned short) s03_47;

common/dct.c:143:5: note: get vectype for scalar type:  unsigned short
common/dct.c:143:5: note: vectype: vector(8) unsigned short
common/dct.c:143:5: note: get vectype for scalar type:  unsigned short
common/dct.c:143:5: note: vectype: vector(8) unsigned short
common/dct.c:143:5: note: nunits = 8
common/dct.c:143:5: note: ==> examining statement: _60 = (unsigned short) s12_52;

common/dct.c:143:5: note: get vectype for scalar type:  unsigned short
common/dct.c:143:5: note: vectype: vector(8) unsigned short
common/dct.c:143:5: note: get vectype for scalar type:  unsigned short
common/dct.c:143:5: note: vectype: vector(8) unsigned short
common/dct.c:143:5: note: nunits = 8
common/dct.c:143:5: note: ==> examining statement: _61 = _59 + _60;

common/dct.c:143:5: note: get vectype for scalar type:  unsigned short
common/dct.c:143:5: note: vectype: vector(8) unsigned short
common/dct.c:143:5: note: get vectype for scalar type:  unsigned short
common/dct.c:143:5: note: vectype: vector(8) unsigned short
common/dct.c:143:5: note: nunits = 8
common/dct.c:143:5: note: ==> examining statement: _62 = (short int) _61;

common/dct.c:143:5: note: get vectype for scalar type:  short int
common/dct.c:143:5: note: vectype: vector(8) short int
common/dct.c:143:5: note: get vectype for scalar type:  short int
common/dct.c:143:5: note: vectype: vector(8) short int
common/dct.c:143:5: note: nunits = 8
common/dct.c:143:5: note: ==> examining statement: *_58[0] = _62;

common/dct.c:143:5: note: get vectype for scalar type:  int16_t
common/dct.c:143:5: note: vectype: vector(8) short int
common/dct.c:143:5: note: nunits = 8
common/dct.c:143:5: note: ==> examining statement: _64 = (unsigned short) d03_53;

common/dct.c:143:5: note: get vectype for scalar type:  unsigned short
common/dct.c:143:5: note: vectype: vector(8) unsigned short
common/dct.c:143:5: note: get vectype for scalar type:  unsigned short
common/dct.c:143:5: note: vectype: vector(8) unsigned short
common/dct.c:143:5: note: nunits = 8
common/dct.c:143:5: note: ==> examining statement: _65 = _64 * 2;

common/dct.c:143:5: note: get vectype for scalar type:  unsigned short
common/dct.c:143:5: note: vectype: vector(8) unsigned short
common/dct.c:143:5: note: get vectype for scalar type:  unsigned short
common/dct.c:143:5: note: vectype: vector(8) unsigned short
common/dct.c:143:5: note: nunits = 8
common/dct.c:143:5: note: ==> examining statement: _66 = (unsigned short) d12_54;

common/dct.c:143:5: note: get vectype for scalar type:  unsigned short
common/dct.c:143:5: note: vectype: vector(8) unsigned short
common/dct.c:143:5: note: get vectype for scalar type:  unsigned short
common/dct.c:143:5: note: vectype: vector(8) unsigned short
common/dct.c:143:5: note: nunits = 8
common/dct.c:143:5: note: ==> examining statement: _67 = _65 + _66;

common/dct.c:143:5: note: get vectype for scalar type:  unsigned short
common/dct.c:143:5: note: vectype: vector(8) unsigned short
common/dct.c:143:5: note: get vectype for scalar type:  unsigned short
common/dct.c:143:5: note: vectype: vector(8) unsigned short
common/dct.c:143:5: note: nunits = 8
common/dct.c:143:5: note: ==> examining statement: _68 = (short int) _67;

common/dct.c:143:5: note: get vectype for scalar type:  short int
common/dct.c:143:5: note: vectype: vector(8) short int
common/dct.c:143:5: note: get vectype for scalar type:  short int
common/dct.c:143:5: note: vectype: vector(8) short int
common/dct.c:143:5: note: nunits = 8
common/dct.c:143:5: note: ==> examining statement: *_58[1] = _68;

common/dct.c:143:5: note: get vectype for scalar type:  int16_t
common/dct.c:143:5: note: vectype: vector(8) short int
common/dct.c:143:5: note: nunits = 8
common/dct.c:143:5: note: ==> examining statement: _70 = _59 - _60;

common/dct.c:143:5: note: get vectype for scalar type:  unsigned short
common/dct.c:143:5: note: vectype: vector(8) unsigned short
common/dct.c:143:5: note: get vectype for scalar type:  unsigned short
common/dct.c:143:5: note: vectype: vector(8) unsigned short
common/dct.c:143:5: note: nunits = 8
common/dct.c:143:5: note: ==> examining statement: _71 = (short int) _70;

common/dct.c:143:5: note: get vectype for scalar type:  short int
common/dct.c:143:5: note: vectype: vector(8) short int
common/dct.c:143:5: note: get vectype for scalar type:  short int
common/dct.c:143:5: note: vectype: vector(8) short int
common/dct.c:143:5: note: nunits = 8
common/dct.c:143:5: note: ==> examining statement: *_58[2] = _71;

common/dct.c:143:5: note: get vectype for scalar type:  int16_t
common/dct.c:143:5: note: vectype: vector(8) short int
common/dct.c:143:5: note: nunits = 8
common/dct.c:143:5: note: ==> examining statement: _73 = _66 * 2;

common/dct.c:143:5: note: get vectype for scalar type:  unsigned short
common/dct.c:143:5: note: vectype: vector(8) unsigned short
common/dct.c:143:5: note: get vectype for scalar type:  unsigned short
common/dct.c:143:5: note: vectype: vector(8) unsigned short
common/dct.c:143:5: note: nunits = 8
common/dct.c:143:5: note: ==> examining statement: _74 = _64 - _73;

common/dct.c:143:5: note: get vectype for scalar type:  unsigned short
common/dct.c:143:5: note: vectype: vector(8) unsigned short
common/dct.c:143:5: note: get vectype for scalar type:  unsigned short
common/dct.c:143:5: note: vectype: vector(8) unsigned short
common/dct.c:143:5: note: nunits = 8
common/dct.c:143:5: note: ==> examining statement: _75 = (short int) _74;

common/dct.c:143:5: note: get vectype for scalar type:  short int
common/dct.c:143:5: note: vectype: vector(8) short int
common/dct.c:143:5: note: get vectype for scalar type:  short int
common/dct.c:143:5: note: vectype: vector(8) short int
common/dct.c:143:5: note: nunits = 8
common/dct.c:143:5: note: ==> examining statement: *_58[3] = _75;

common/dct.c:143:5: note: get vectype for scalar type:  int16_t
common/dct.c:143:5: note: vectype: vector(8) short int
common/dct.c:143:5: note: nunits = 8
common/dct.c:143:5: note: ==> examining statement: i_77 = i_19 + 1;

common/dct.c:143:5: note: skip.
common/dct.c:143:5: note: ==> examining statement: # DEBUG i => i_77

common/dct.c:143:5: note: skip.
common/dct.c:143:5: note: ==> examining statement: # DEBUG i => i_77

common/dct.c:143:5: note: skip.
common/dct.c:143:5: note: ==> examining statement: ivtmp_226 = ivtmp_228 - 1;

common/dct.c:143:5: note: skip.
common/dct.c:143:5: note: ==> examining statement: if (ivtmp_226 != 0)

common/dct.c:143:5: note: skip.
common/dct.c:143:5: note: vectorization factor = 8
common/dct.c:143:5: note: === vect_analyze_data_refs_alignment ===
common/dct.c:143:5: note: vect_compute_data_ref_alignment:
common/dct.c:143:5: note: misalign = 0 bytes of ref tmp[i_19][0]
common/dct.c:143:5: note: vect_compute_data_ref_alignment:
common/dct.c:143:5: note: misalign = 6 bytes of ref tmp[i_19][3]
common/dct.c:143:5: note: vect_compute_data_ref_alignment:
common/dct.c:143:5: note: misalign = 2 bytes of ref tmp[i_19][1]
common/dct.c:143:5: note: vect_compute_data_ref_alignment:
common/dct.c:143:5: note: misalign = 4 bytes of ref tmp[i_19][2]
common/dct.c:143:5: note: vect_compute_data_ref_alignment:
common/dct.c:143:5: note: can't force alignment of ref: *_58[0]
common/dct.c:143:5: note: vect_compute_data_ref_alignment:
common/dct.c:143:5: note: can't force alignment of ref: *_58[1]
common/dct.c:143:5: note: vect_compute_data_ref_alignment:
common/dct.c:143:5: note: can't force alignment of ref: *_58[2]
common/dct.c:143:5: note: vect_compute_data_ref_alignment:
common/dct.c:143:5: note: can't force alignment of ref: *_58[3]
common/dct.c:143:5: note: === vect_prune_runtime_alias_test_list ===
common/dct.c:143:5: note: === vect_enhance_data_refs_alignment ===
common/dct.c:143:5: note: vector alignment may not be reachable
common/dct.c:143:5: note: vect_can_advance_ivs_p:
common/dct.c:143:5: note: Analyze phi: i_19 = PHI <0(11), i_77(13)>

common/dct.c:143:5: note: Analyze phi: .MEM_118 = PHI <.MEM_41(11), .MEM_76(13)>

common/dct.c:143:5: note: virtual phi. skip.
common/dct.c:143:5: note: Analyze phi: ivtmp_228 = PHI <4(11), ivtmp_226(13)>

common/dct.c:143:5: note: Vectorizing an unaligned access.
common/dct.c:143:5: note: === vect_analyze_slp ===
common/dct.c:143:5: note: Build SLP for *_58[0] = _62;

common/dct.c:143:5: note: Build SLP for *_58[1] = _68;

common/dct.c:143:5: note: Build SLP for *_58[2] = _71;

common/dct.c:143:5: note: Build SLP for *_58[3] = _75;

common/dct.c:143:5: note: vect_is_simple_use: operand _62
common/dct.c:143:5: note: def_stmt: _62 = (short int) _61;
common/dct.c:143:5: note: type of def: 3.
common/dct.c:143:5: note: vect_is_simple_use: operand _68
common/dct.c:143:5: note: def_stmt: _68 = (short int) _67;
common/dct.c:143:5: note: type of def: 3.
common/dct.c:143:5: note: vect_is_simple_use: operand _71
common/dct.c:143:5: note: def_stmt: _71 = (short int) _70;
common/dct.c:143:5: note: type of def: 3.
common/dct.c:143:5: note: vect_is_simple_use: operand _75
common/dct.c:143:5: note: def_stmt: _75 = (short int) _74;
common/dct.c:143:5: note: type of def: 3.
common/dct.c:143:5: note: Build SLP for _62 = (short int) _61;

common/dct.c:143:5: note: Build SLP for _68 = (short int) _67;

common/dct.c:143:5: note: Build SLP for _71 = (short int) _70;

common/dct.c:143:5: note: Build SLP for _75 = (short int) _74;

common/dct.c:143:5: note: vect_is_simple_use: operand _61
common/dct.c:143:5: note: def_stmt: _61 = _59 + _60;
common/dct.c:143:5: note: type of def: 3.
common/dct.c:143:5: note: vect_is_simple_use: operand _67
common/dct.c:143:5: note: def_stmt: _67 = _65 + _66;
common/dct.c:143:5: note: type of def: 3.
common/dct.c:143:5: note: vect_is_simple_use: operand _70
common/dct.c:143:5: note: def_stmt: _70 = _59 - _60;
common/dct.c:143:5: note: type of def: 3.
common/dct.c:143:5: note: vect_is_simple_use: operand _74
common/dct.c:143:5: note: def_stmt: _74 = _64 - _73;
common/dct.c:143:5: note: type of def: 3.
common/dct.c:143:5: note: Build SLP for _61 = _59 + _60;

common/dct.c:143:5: note: Build SLP for _67 = _65 + _66;

common/dct.c:143:5: note: Build SLP for _70 = _59 - _60;

common/dct.c:143:5: note: Build SLP failed: different operation in stmt _70 = _59 - _60;

common/dct.c:143:5: note: Build SLP for _74 = _64 - _73;

common/dct.c:143:5: note: Build SLP failed: different operation in stmt _74 = _64 - _73;

common/dct.c:143:5: note: === vect_make_slp_decision ===
common/dct.c:143:5: note: === vect_detect_hybrid_slp ===
common/dct.c:143:5: note: === vect_analyze_loop_operations ===
common/dct.c:143:5: note: examining phi: i_19 = PHI <0(11), i_77(13)>

common/dct.c:143:5: note: examining phi: .MEM_118 = PHI <.MEM_41(11), .MEM_76(13)>

common/dct.c:143:5: note: examining phi: ivtmp_228 = PHI <4(11), ivtmp_226(13)>

common/dct.c:143:5: note: ==> examining statement: # DEBUG i => i_19
common/dct.c:143:5: note: irrelevant.
common/dct.c:143:5: note: ==> examining statement: _43 = tmp[i_19][0];
common/dct.c:143:5: note: num. args = 4 (not unary/binary/ternary op).
common/dct.c:143:5: note: vect_is_simple_use: operand tmp[i_19][0]
common/dct.c:143:5: note: not ssa-name.
common/dct.c:143:5: note: use not simple.
common/dct.c:143:5: note: no array mode for V8HI[4]
common/dct.c:143:5: note: vect_model_load_cost: strided group_size = 4 .
common/dct.c:143:5: note: vect_model_load_cost: aligned.
common/dct.c:143:5: note: vect_model_load_cost: inside_cost = 9, prologue_cost = 0 .
common/dct.c:143:5: note: ==> examining statement: _44 = (int) _43;
common/dct.c:143:5: note: vect_is_simple_use: operand _43
common/dct.c:143:5: note: def_stmt: _43 = tmp[i_19][0];
common/dct.c:143:5: note: type of def: 3.
common/dct.c:143:5: note: === vectorizable_conversion ===
common/dct.c:143:5: note: vect_model_promotion_demotion_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:143:5: note: ==> examining statement: _45 = tmp[i_19][3];
common/dct.c:143:5: note: num. args = 4 (not unary/binary/ternary op).
common/dct.c:143:5: note: vect_is_simple_use: operand tmp[i_19][3]
common/dct.c:143:5: note: not ssa-name.
common/dct.c:143:5: note: use not simple.
common/dct.c:143:5: note: no array mode for V8HI[4]
common/dct.c:143:5: note: vect_model_load_cost: aligned.
common/dct.c:143:5: note: vect_model_load_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:143:5: note: ==> examining statement: _46 = (int) _45;
common/dct.c:143:5: note: vect_is_simple_use: operand _45
common/dct.c:143:5: note: def_stmt: _45 = tmp[i_19][3];
common/dct.c:143:5: note: type of def: 3.
common/dct.c:143:5: note: === vectorizable_conversion ===
common/dct.c:143:5: note: vect_model_promotion_demotion_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:143:5: note: ==> examining statement: s03_47 = _44 + _46;
common/dct.c:143:5: note: vect_is_simple_use: operand _44
common/dct.c:143:5: note: def_stmt: _44 = (int) _43;
common/dct.c:143:5: note: type of def: 3.
common/dct.c:143:5: note: vect_is_simple_use: operand _46
common/dct.c:143:5: note: def_stmt: _46 = (int) _45;
common/dct.c:143:5: note: type of def: 3.
common/dct.c:143:5: note: === vectorizable_operation ===
common/dct.c:143:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:143:5: note: ==> examining statement: # DEBUG s03 => s03_47
common/dct.c:143:5: note: irrelevant.
common/dct.c:143:5: note: ==> examining statement: _48 = tmp[i_19][1];
common/dct.c:143:5: note: num. args = 4 (not unary/binary/ternary op).
common/dct.c:143:5: note: vect_is_simple_use: operand tmp[i_19][1]
common/dct.c:143:5: note: not ssa-name.
common/dct.c:143:5: note: use not simple.
common/dct.c:143:5: note: no array mode for V8HI[4]
common/dct.c:143:5: note: vect_model_load_cost: aligned.
common/dct.c:143:5: note: vect_model_load_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:143:5: note: ==> examining statement: _49 = (int) _48;
common/dct.c:143:5: note: vect_is_simple_use: operand _48
common/dct.c:143:5: note: def_stmt: _48 = tmp[i_19][1];
common/dct.c:143:5: note: type of def: 3.
common/dct.c:143:5: note: === vectorizable_conversion ===
common/dct.c:143:5: note: vect_model_promotion_demotion_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:143:5: note: ==> examining statement: _50 = tmp[i_19][2];
common/dct.c:143:5: note: num. args = 4 (not unary/binary/ternary op).
common/dct.c:143:5: note: vect_is_simple_use: operand tmp[i_19][2]
common/dct.c:143:5: note: not ssa-name.
common/dct.c:143:5: note: use not simple.
common/dct.c:143:5: note: no array mode for V8HI[4]
common/dct.c:143:5: note: vect_model_load_cost: aligned.
common/dct.c:143:5: note: vect_model_load_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:143:5: note: ==> examining statement: _51 = (int) _50;
common/dct.c:143:5: note: vect_is_simple_use: operand _50
common/dct.c:143:5: note: def_stmt: _50 = tmp[i_19][2];
common/dct.c:143:5: note: type of def: 3.
common/dct.c:143:5: note: === vectorizable_conversion ===
common/dct.c:143:5: note: vect_model_promotion_demotion_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:143:5: note: ==> examining statement: s12_52 = _49 + _51;
common/dct.c:143:5: note: vect_is_simple_use: operand _49
common/dct.c:143:5: note: def_stmt: _49 = (int) _48;
common/dct.c:143:5: note: type of def: 3.
common/dct.c:143:5: note: vect_is_simple_use: operand _51
common/dct.c:143:5: note: def_stmt: _51 = (int) _50;
common/dct.c:143:5: note: type of def: 3.
common/dct.c:143:5: note: === vectorizable_operation ===
common/dct.c:143:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:143:5: note: ==> examining statement: # DEBUG s12 => s12_52
common/dct.c:143:5: note: irrelevant.
common/dct.c:143:5: note: ==> examining statement: d03_53 = _44 - _46;
common/dct.c:143:5: note: vect_is_simple_use: operand _44
common/dct.c:143:5: note: def_stmt: _44 = (int) _43;
common/dct.c:143:5: note: type of def: 3.
common/dct.c:143:5: note: vect_is_simple_use: operand _46
common/dct.c:143:5: note: def_stmt: _46 = (int) _45;
common/dct.c:143:5: note: type of def: 3.
common/dct.c:143:5: note: === vectorizable_operation ===
common/dct.c:143:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:143:5: note: ==> examining statement: # DEBUG d03 => d03_53
common/dct.c:143:5: note: irrelevant.
common/dct.c:143:5: note: ==> examining statement: d12_54 = _49 - _51;
common/dct.c:143:5: note: vect_is_simple_use: operand _49
common/dct.c:143:5: note: def_stmt: _49 = (int) _48;
common/dct.c:143:5: note: type of def: 3.
common/dct.c:143:5: note: vect_is_simple_use: operand _51
common/dct.c:143:5: note: def_stmt: _51 = (int) _50;
common/dct.c:143:5: note: type of def: 3.
common/dct.c:143:5: note: === vectorizable_operation ===
common/dct.c:143:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:143:5: note: ==> examining statement: # DEBUG d12 => d12_54
common/dct.c:143:5: note: irrelevant.
common/dct.c:143:5: note: ==> examining statement: _55 = (long unsigned int) i_19;
common/dct.c:143:5: note: irrelevant.
common/dct.c:143:5: note: ==> examining statement: _56 = _55 * 8;
common/dct.c:143:5: note: irrelevant.
common/dct.c:143:5: note: ==> examining statement: _58 = dct_57(D) + _56;
common/dct.c:143:5: note: irrelevant.
common/dct.c:143:5: note: ==> examining statement: _59 = (unsigned short) s03_47;
common/dct.c:143:5: note: vect_is_simple_use: operand s03_47
common/dct.c:143:5: note: def_stmt: s03_47 = _44 + _46;
common/dct.c:143:5: note: type of def: 3.
common/dct.c:143:5: note: === vectorizable_conversion ===
common/dct.c:143:5: note: vect_model_promotion_demotion_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:143:5: note: ==> examining statement: _60 = (unsigned short) s12_52;
common/dct.c:143:5: note: vect_is_simple_use: operand s12_52
common/dct.c:143:5: note: def_stmt: s12_52 = _49 + _51;
common/dct.c:143:5: note: type of def: 3.
common/dct.c:143:5: note: === vectorizable_conversion ===
common/dct.c:143:5: note: vect_model_promotion_demotion_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:143:5: note: ==> examining statement: _61 = _59 + _60;
common/dct.c:143:5: note: vect_is_simple_use: operand _59
common/dct.c:143:5: note: def_stmt: _59 = (unsigned short) s03_47;
common/dct.c:143:5: note: type of def: 3.
common/dct.c:143:5: note: vect_is_simple_use: operand _60
common/dct.c:143:5: note: def_stmt: _60 = (unsigned short) s12_52;
common/dct.c:143:5: note: type of def: 3.
common/dct.c:143:5: note: === vectorizable_operation ===
common/dct.c:143:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:143:5: note: ==> examining statement: _62 = (short int) _61;
common/dct.c:143:5: note: vect_is_simple_use: operand _61
common/dct.c:143:5: note: def_stmt: _61 = _59 + _60;
common/dct.c:143:5: note: type of def: 3.
common/dct.c:143:5: note: vect_is_simple_use: operand _61
common/dct.c:143:5: note: def_stmt: _61 = _59 + _60;
common/dct.c:143:5: note: type of def: 3.
common/dct.c:143:5: note: no optab.
common/dct.c:143:5: note: vect_is_simple_use: operand _61
common/dct.c:143:5: note: def_stmt: _61 = _59 + _60;
common/dct.c:143:5: note: type of def: 3.
common/dct.c:143:5: note: === vectorizable_assignment ===
common/dct.c:143:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:143:5: note: ==> examining statement: *_58[0] = _62;
common/dct.c:143:5: note: vect_is_simple_use: operand _62
common/dct.c:143:5: note: def_stmt: _62 = (short int) _61;
common/dct.c:143:5: note: type of def: 3.
common/dct.c:143:5: note: no array mode for V8HI[4]
common/dct.c:143:5: note: vect_is_simple_use: operand _68
common/dct.c:143:5: note: def_stmt: _68 = (short int) _67;
common/dct.c:143:5: note: type of def: 3.
common/dct.c:143:5: note: vect_is_simple_use: operand _71
common/dct.c:143:5: note: def_stmt: _71 = (short int) _70;
common/dct.c:143:5: note: type of def: 3.
common/dct.c:143:5: note: vect_is_simple_use: operand _75
common/dct.c:143:5: note: def_stmt: _75 = (short int) _74;
common/dct.c:143:5: note: type of def: 3.
common/dct.c:143:5: note: vect_model_store_cost: strided group_size = 4 .
common/dct.c:143:5: note: vect_model_store_cost: unaligned supported by hardware.
common/dct.c:143:5: note: vect_model_store_cost: inside_cost = 10, prologue_cost = 0 .
common/dct.c:143:5: note: ==> examining statement: _64 = (unsigned short) d03_53;
common/dct.c:143:5: note: vect_is_simple_use: operand d03_53
common/dct.c:143:5: note: def_stmt: d03_53 = _44 - _46;
common/dct.c:143:5: note: type of def: 3.
common/dct.c:143:5: note: === vectorizable_conversion ===
common/dct.c:143:5: note: vect_model_promotion_demotion_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:143:5: note: ==> examining statement: _65 = _64 * 2;
common/dct.c:143:5: note: vect_is_simple_use: operand _64
common/dct.c:143:5: note: def_stmt: _64 = (unsigned short) d03_53;
common/dct.c:143:5: note: type of def: 3.
common/dct.c:143:5: note: vect_is_simple_use: operand 2
common/dct.c:143:5: note: === vectorizable_operation ===
common/dct.c:143:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
common/dct.c:143:5: note: ==> examining statement: _66 = (unsigned short) d12_54;
common/dct.c:143:5: note: vect_is_simple_use: operand d12_54
common/dct.c:143:5: note: def_stmt: d12_54 = _49 - _51;
common/dct.c:143:5: note: type of def: 3.
common/dct.c:143:5: note: === vectorizable_conversion ===
common/dct.c:143:5: note: vect_model_promotion_demotion_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:143:5: note: ==> examining statement: _67 = _65 + _66;
common/dct.c:143:5: note: vect_is_simple_use: operand _65
common/dct.c:143:5: note: def_stmt: _65 = _64 * 2;
common/dct.c:143:5: note: type of def: 3.
common/dct.c:143:5: note: vect_is_simple_use: operand _66
common/dct.c:143:5: note: def_stmt: _66 = (unsigned short) d12_54;
common/dct.c:143:5: note: type of def: 3.
common/dct.c:143:5: note: === vectorizable_operation ===
common/dct.c:143:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:143:5: note: ==> examining statement: _68 = (short int) _67;
common/dct.c:143:5: note: vect_is_simple_use: operand _67
common/dct.c:143:5: note: def_stmt: _67 = _65 + _66;
common/dct.c:143:5: note: type of def: 3.
common/dct.c:143:5: note: vect_is_simple_use: operand _67
common/dct.c:143:5: note: def_stmt: _67 = _65 + _66;
common/dct.c:143:5: note: type of def: 3.
common/dct.c:143:5: note: no optab.
common/dct.c:143:5: note: vect_is_simple_use: operand _67
common/dct.c:143:5: note: def_stmt: _67 = _65 + _66;
common/dct.c:143:5: note: type of def: 3.
common/dct.c:143:5: note: === vectorizable_assignment ===
common/dct.c:143:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:143:5: note: ==> examining statement: *_58[1] = _68;
common/dct.c:143:5: note: vect_is_simple_use: operand _68
common/dct.c:143:5: note: def_stmt: _68 = (short int) _67;
common/dct.c:143:5: note: type of def: 3.
common/dct.c:143:5: note: no array mode for V8HI[4]
common/dct.c:143:5: note: vect_model_store_cost: unaligned supported by hardware.
common/dct.c:143:5: note: vect_model_store_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:143:5: note: ==> examining statement: _70 = _59 - _60;
common/dct.c:143:5: note: vect_is_simple_use: operand _59
common/dct.c:143:5: note: def_stmt: _59 = (unsigned short) s03_47;
common/dct.c:143:5: note: type of def: 3.
common/dct.c:143:5: note: vect_is_simple_use: operand _60
common/dct.c:143:5: note: def_stmt: _60 = (unsigned short) s12_52;
common/dct.c:143:5: note: type of def: 3.
common/dct.c:143:5: note: === vectorizable_operation ===
common/dct.c:143:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:143:5: note: ==> examining statement: _71 = (short int) _70;
common/dct.c:143:5: note: vect_is_simple_use: operand _70
common/dct.c:143:5: note: def_stmt: _70 = _59 - _60;
common/dct.c:143:5: note: type of def: 3.
common/dct.c:143:5: note: vect_is_simple_use: operand _70
common/dct.c:143:5: note: def_stmt: _70 = _59 - _60;
common/dct.c:143:5: note: type of def: 3.
common/dct.c:143:5: note: no optab.
common/dct.c:143:5: note: vect_is_simple_use: operand _70
common/dct.c:143:5: note: def_stmt: _70 = _59 - _60;
common/dct.c:143:5: note: type of def: 3.
common/dct.c:143:5: note: === vectorizable_assignment ===
common/dct.c:143:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:143:5: note: ==> examining statement: *_58[2] = _71;
common/dct.c:143:5: note: vect_is_simple_use: operand _71
common/dct.c:143:5: note: def_stmt: _71 = (short int) _70;
common/dct.c:143:5: note: type of def: 3.
common/dct.c:143:5: note: no array mode for V8HI[4]
common/dct.c:143:5: note: vect_model_store_cost: unaligned supported by hardware.
common/dct.c:143:5: note: vect_model_store_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:143:5: note: ==> examining statement: _73 = _66 * 2;
common/dct.c:143:5: note: vect_is_simple_use: operand _66
common/dct.c:143:5: note: def_stmt: _66 = (unsigned short) d12_54;
common/dct.c:143:5: note: type of def: 3.
common/dct.c:143:5: note: vect_is_simple_use: operand 2
common/dct.c:143:5: note: === vectorizable_operation ===
common/dct.c:143:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
common/dct.c:143:5: note: ==> examining statement: _74 = _64 - _73;
common/dct.c:143:5: note: vect_is_simple_use: operand _64
common/dct.c:143:5: note: def_stmt: _64 = (unsigned short) d03_53;
common/dct.c:143:5: note: type of def: 3.
common/dct.c:143:5: note: vect_is_simple_use: operand _73
common/dct.c:143:5: note: def_stmt: _73 = _66 * 2;
common/dct.c:143:5: note: type of def: 3.
common/dct.c:143:5: note: === vectorizable_operation ===
common/dct.c:143:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:143:5: note: ==> examining statement: _75 = (short int) _74;
common/dct.c:143:5: note: vect_is_simple_use: operand _74
common/dct.c:143:5: note: def_stmt: _74 = _64 - _73;
common/dct.c:143:5: note: type of def: 3.
common/dct.c:143:5: note: vect_is_simple_use: operand _74
common/dct.c:143:5: note: def_stmt: _74 = _64 - _73;
common/dct.c:143:5: note: type of def: 3.
common/dct.c:143:5: note: no optab.
common/dct.c:143:5: note: vect_is_simple_use: operand _74
common/dct.c:143:5: note: def_stmt: _74 = _64 - _73;
common/dct.c:143:5: note: type of def: 3.
common/dct.c:143:5: note: === vectorizable_assignment ===
common/dct.c:143:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:143:5: note: ==> examining statement: *_58[3] = _75;
common/dct.c:143:5: note: vect_is_simple_use: operand _75
common/dct.c:143:5: note: def_stmt: _75 = (short int) _74;
common/dct.c:143:5: note: type of def: 3.
common/dct.c:143:5: note: no array mode for V8HI[4]
common/dct.c:143:5: note: vect_model_store_cost: unaligned supported by hardware.
common/dct.c:143:5: note: vect_model_store_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:143:5: note: ==> examining statement: i_77 = i_19 + 1;
common/dct.c:143:5: note: irrelevant.
common/dct.c:143:5: note: ==> examining statement: # DEBUG i => i_77
common/dct.c:143:5: note: irrelevant.
common/dct.c:143:5: note: ==> examining statement: # DEBUG i => i_77
common/dct.c:143:5: note: irrelevant.
common/dct.c:143:5: note: ==> examining statement: ivtmp_226 = ivtmp_228 - 1;
common/dct.c:143:5: note: irrelevant.
common/dct.c:143:5: note: ==> examining statement: if (ivtmp_226 != 0)
common/dct.c:143:5: note: irrelevant.
common/dct.c:143:5: note: vectorization_factor = 8, niters = 4
common/dct.c:143:5: note: not vectorized: iteration count too small.
common/dct.c:143:5: note: not vectorized: iteration count smaller than vectorization factor.
common/dct.c:143:5: note: bad operation or unsupported loop bound.

Analyzing loop at common/dct.c:130
common/dct.c:130:5: note: ===== analyze_loop_nest =====
common/dct.c:130:5: note: === vect_analyze_loop_form ===
common/dct.c:130:5: note: === get_loop_niters ===
Analyzing # of iterations of loop 1
  exit condition [3, + , 4294967295] != 0
  bounds on difference of bases: -3 ... -3
  result:
    # of iterations 3, bounded by 3
common/dct.c:130:5: note: === vect_analyze_data_refs ===
Creating dr for d[i_22][0]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &d
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 128
	base_object: d
	Access function 0: 0
	Access function 1: {0, +, 1}_1
Creating dr for d[i_22][3]
analyze_innermost: success.
	base_address: &d
	offset from base address: 0
	constant offset from base address: 6
	step: 8
	aligned to: 128
	base_object: d
	Access function 0: 3
	Access function 1: {0, +, 1}_1
Creating dr for d[i_22][1]
analyze_innermost: success.
	base_address: &d
	offset from base address: 0
	constant offset from base address: 2
	step: 8
	aligned to: 128
	base_object: d
	Access function 0: 1
	Access function 1: {0, +, 1}_1
Creating dr for d[i_22][2]
analyze_innermost: success.
	base_address: &d
	offset from base address: 0
	constant offset from base address: 4
	step: 8
	aligned to: 128
	base_object: d
	Access function 0: 2
	Access function 1: {0, +, 1}_1
Creating dr for tmp[0][i_22]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &tmp
	offset from base address: 0
	constant offset from base address: 0
	step: 2
	aligned to: 128
	base_object: tmp
	Access function 0: {0, +, 1}_1
	Access function 1: 0
Creating dr for tmp[1][i_22]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &tmp
	offset from base address: 0
	constant offset from base address: 8
	step: 2
	aligned to: 128
	base_object: tmp
	Access function 0: {0, +, 1}_1
	Access function 1: 1
Creating dr for tmp[2][i_22]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &tmp
	offset from base address: 0
	constant offset from base address: 16
	step: 2
	aligned to: 128
	base_object: tmp
	Access function 0: {0, +, 1}_1
	Access function 1: 2
Creating dr for tmp[3][i_22]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &tmp
	offset from base address: 0
	constant offset from base address: 24
	step: 2
	aligned to: 128
	base_object: tmp
	Access function 0: {0, +, 1}_1
	Access function 1: 3
common/dct.c:130:5: note: got vectype for stmt: _9 = d[i_22][0];
vector(8) short int
common/dct.c:130:5: note: got vectype for stmt: _11 = d[i_22][3];
vector(8) short int
common/dct.c:130:5: note: got vectype for stmt: _14 = d[i_22][1];
vector(8) short int
common/dct.c:130:5: note: got vectype for stmt: _16 = d[i_22][2];
vector(8) short int
common/dct.c:130:5: note: got vectype for stmt: tmp[0][i_22] = _27;
vector(8) short int
common/dct.c:130:5: note: got vectype for stmt: tmp[1][i_22] = _33;
vector(8) short int
common/dct.c:130:5: note: got vectype for stmt: tmp[2][i_22] = _36;
vector(8) short int
common/dct.c:130:5: note: got vectype for stmt: tmp[3][i_22] = _40;
vector(8) short int
common/dct.c:130:5: note: === vect_analyze_scalar_cycles ===
common/dct.c:130:5: note: Analyze phi: i_22 = PHI <0(8), i_42(10)>

common/dct.c:130:5: note: Access function of PHI: {0, +, 1}_1
common/dct.c:130:5: note: step: 1,  init: 0
common/dct.c:130:5: note: Detected induction.
common/dct.c:130:5: note: Analyze phi: .MEM_117 = PHI <.MEM_103(8), .MEM_41(10)>

common/dct.c:130:5: note: Analyze phi: ivtmp_227 = PHI <4(8), ivtmp_229(10)>

common/dct.c:130:5: note: Access function of PHI: {4, +, 4294967295}_1
common/dct.c:130:5: note: step: 4294967295,  init: 4
common/dct.c:130:5: note: Detected induction.
common/dct.c:130:5: note: === vect_pattern_recog ===
common/dct.c:130:5: note: vect_is_simple_use: operand _29
common/dct.c:130:5: note: def_stmt: _29 = (unsigned short) d03_21;
common/dct.c:130:5: note: type of def: 3.
common/dct.c:130:5: note: vect_is_simple_use: operand d03_21
common/dct.c:130:5: note: def_stmt: d03_21 = _10 - _12;
common/dct.c:130:5: note: type of def: 3.
common/dct.c:130:5: note: vect_is_simple_use: operand _31
common/dct.c:130:5: note: def_stmt: _31 = (unsigned short) d12_23;
common/dct.c:130:5: note: type of def: 3.
common/dct.c:130:5: note: vect_is_simple_use: operand d12_23
common/dct.c:130:5: note: def_stmt: d12_23 = _15 - _17;
common/dct.c:130:5: note: type of def: 3.
common/dct.c:130:5: note: === vect_analyze_data_ref_accesses ===
common/dct.c:130:5: note: Detected interleaving d[i_22][0] and d[i_22][1]
common/dct.c:130:5: note: Detected interleaving d[i_22][0] and d[i_22][2]
common/dct.c:130:5: note: Detected interleaving d[i_22][0] and d[i_22][3]
common/dct.c:130:5: note: Detected interleaving of size 4
common/dct.c:130:5: note: === vect_mark_stmts_to_be_vectorized ===
common/dct.c:130:5: note: init: phi relevant? i_22 = PHI <0(8), i_42(10)>
common/dct.c:130:5: note: init: phi relevant? .MEM_117 = PHI <.MEM_103(8), .MEM_41(10)>
common/dct.c:130:5: note: init: phi relevant? ivtmp_227 = PHI <4(8), ivtmp_229(10)>
common/dct.c:130:5: note: init: stmt relevant? # DEBUG i => i_22
common/dct.c:130:5: note: init: stmt relevant? _9 = d[i_22][0];
common/dct.c:130:5: note: init: stmt relevant? _10 = (int) _9;
common/dct.c:130:5: note: init: stmt relevant? _11 = d[i_22][3];
common/dct.c:130:5: note: init: stmt relevant? _12 = (int) _11;
common/dct.c:130:5: note: init: stmt relevant? s03_13 = _10 + _12;
common/dct.c:130:5: note: init: stmt relevant? # DEBUG s03 => s03_13
common/dct.c:130:5: note: init: stmt relevant? _14 = d[i_22][1];
common/dct.c:130:5: note: init: stmt relevant? _15 = (int) _14;
common/dct.c:130:5: note: init: stmt relevant? _16 = d[i_22][2];
common/dct.c:130:5: note: init: stmt relevant? _17 = (int) _16;
common/dct.c:130:5: note: init: stmt relevant? s12_18 = _15 + _17;
common/dct.c:130:5: note: init: stmt relevant? # DEBUG s12 => s12_18
common/dct.c:130:5: note: init: stmt relevant? d03_21 = _10 - _12;
common/dct.c:130:5: note: init: stmt relevant? # DEBUG d03 => d03_21
common/dct.c:130:5: note: init: stmt relevant? d12_23 = _15 - _17;
common/dct.c:130:5: note: init: stmt relevant? # DEBUG d12 => d12_23
common/dct.c:130:5: note: init: stmt relevant? _24 = (unsigned short) s03_13;
common/dct.c:130:5: note: init: stmt relevant? _25 = (unsigned short) s12_18;
common/dct.c:130:5: note: init: stmt relevant? _26 = _24 + _25;
common/dct.c:130:5: note: init: stmt relevant? _27 = (short int) _26;
common/dct.c:130:5: note: init: stmt relevant? tmp[0][i_22] = _27;
common/dct.c:130:5: note: vec_stmt_relevant_p: stmt has vdefs.
common/dct.c:130:5: note: mark relevant 4, live 0.
common/dct.c:130:5: note: init: stmt relevant? _29 = (unsigned short) d03_21;
common/dct.c:130:5: note: init: stmt relevant? _30 = _29 * 2;
common/dct.c:130:5: note: init: stmt relevant? _31 = (unsigned short) d12_23;
common/dct.c:130:5: note: init: stmt relevant? _32 = _30 + _31;
common/dct.c:130:5: note: init: stmt relevant? _33 = (short int) _32;
common/dct.c:130:5: note: init: stmt relevant? tmp[1][i_22] = _33;
common/dct.c:130:5: note: vec_stmt_relevant_p: stmt has vdefs.
common/dct.c:130:5: note: mark relevant 4, live 0.
common/dct.c:130:5: note: init: stmt relevant? _35 = _24 - _25;
common/dct.c:130:5: note: init: stmt relevant? _36 = (short int) _35;
common/dct.c:130:5: note: init: stmt relevant? tmp[2][i_22] = _36;
common/dct.c:130:5: note: vec_stmt_relevant_p: stmt has vdefs.
common/dct.c:130:5: note: mark relevant 4, live 0.
common/dct.c:130:5: note: init: stmt relevant? _38 = _31 * 2;
common/dct.c:130:5: note: init: stmt relevant? _39 = _29 - _38;
common/dct.c:130:5: note: init: stmt relevant? _40 = (short int) _39;
common/dct.c:130:5: note: init: stmt relevant? tmp[3][i_22] = _40;
common/dct.c:130:5: note: vec_stmt_relevant_p: stmt has vdefs.
common/dct.c:130:5: note: mark relevant 4, live 0.
common/dct.c:130:5: note: init: stmt relevant? i_42 = i_22 + 1;
common/dct.c:130:5: note: init: stmt relevant? # DEBUG i => i_42
common/dct.c:130:5: note: init: stmt relevant? # DEBUG i => i_42
common/dct.c:130:5: note: init: stmt relevant? ivtmp_229 = ivtmp_227 - 1;
common/dct.c:130:5: note: init: stmt relevant? if (ivtmp_229 != 0)
common/dct.c:130:5: note: worklist: examine stmt: tmp[3][i_22] = _40;
common/dct.c:130:5: note: vect_is_simple_use: operand _40
common/dct.c:130:5: note: def_stmt: _40 = (short int) _39;
common/dct.c:130:5: note: type of def: 3.
common/dct.c:130:5: note: mark relevant 4, live 0.
common/dct.c:130:5: note: worklist: examine stmt: _40 = (short int) _39;
common/dct.c:130:5: note: vect_is_simple_use: operand _39
common/dct.c:130:5: note: def_stmt: _39 = _29 - _38;
common/dct.c:130:5: note: type of def: 3.
common/dct.c:130:5: note: mark relevant 4, live 0.
common/dct.c:130:5: note: worklist: examine stmt: _39 = _29 - _38;
common/dct.c:130:5: note: vect_is_simple_use: operand _29
common/dct.c:130:5: note: def_stmt: _29 = (unsigned short) d03_21;
common/dct.c:130:5: note: type of def: 3.
common/dct.c:130:5: note: mark relevant 4, live 0.
common/dct.c:130:5: note: vect_is_simple_use: operand _38
common/dct.c:130:5: note: def_stmt: _38 = _31 * 2;
common/dct.c:130:5: note: type of def: 3.
common/dct.c:130:5: note: mark relevant 4, live 0.
common/dct.c:130:5: note: worklist: examine stmt: _38 = _31 * 2;
common/dct.c:130:5: note: vect_is_simple_use: operand _31
common/dct.c:130:5: note: def_stmt: _31 = (unsigned short) d12_23;
common/dct.c:130:5: note: type of def: 3.
common/dct.c:130:5: note: mark relevant 4, live 0.
common/dct.c:130:5: note: worklist: examine stmt: _31 = (unsigned short) d12_23;
common/dct.c:130:5: note: vect_is_simple_use: operand d12_23
common/dct.c:130:5: note: def_stmt: d12_23 = _15 - _17;
common/dct.c:130:5: note: type of def: 3.
common/dct.c:130:5: note: mark relevant 4, live 0.
common/dct.c:130:5: note: worklist: examine stmt: d12_23 = _15 - _17;
common/dct.c:130:5: note: vect_is_simple_use: operand _15
common/dct.c:130:5: note: def_stmt: _15 = (int) _14;
common/dct.c:130:5: note: type of def: 3.
common/dct.c:130:5: note: mark relevant 4, live 0.
common/dct.c:130:5: note: vect_is_simple_use: operand _17
common/dct.c:130:5: note: def_stmt: _17 = (int) _16;
common/dct.c:130:5: note: type of def: 3.
common/dct.c:130:5: note: mark relevant 4, live 0.
common/dct.c:130:5: note: worklist: examine stmt: _17 = (int) _16;
common/dct.c:130:5: note: vect_is_simple_use: operand _16
common/dct.c:130:5: note: def_stmt: _16 = d[i_22][2];
common/dct.c:130:5: note: type of def: 3.
common/dct.c:130:5: note: mark relevant 4, live 0.
common/dct.c:130:5: note: worklist: examine stmt: _16 = d[i_22][2];
common/dct.c:130:5: note: worklist: examine stmt: _15 = (int) _14;
common/dct.c:130:5: note: vect_is_simple_use: operand _14
common/dct.c:130:5: note: def_stmt: _14 = d[i_22][1];
common/dct.c:130:5: note: type of def: 3.
common/dct.c:130:5: note: mark relevant 4, live 0.
common/dct.c:130:5: note: worklist: examine stmt: _14 = d[i_22][1];
common/dct.c:130:5: note: worklist: examine stmt: _29 = (unsigned short) d03_21;
common/dct.c:130:5: note: vect_is_simple_use: operand d03_21
common/dct.c:130:5: note: def_stmt: d03_21 = _10 - _12;
common/dct.c:130:5: note: type of def: 3.
common/dct.c:130:5: note: mark relevant 4, live 0.
common/dct.c:130:5: note: worklist: examine stmt: d03_21 = _10 - _12;
common/dct.c:130:5: note: vect_is_simple_use: operand _10
common/dct.c:130:5: note: def_stmt: _10 = (int) _9;
common/dct.c:130:5: note: type of def: 3.
common/dct.c:130:5: note: mark relevant 4, live 0.
common/dct.c:130:5: note: vect_is_simple_use: operand _12
common/dct.c:130:5: note: def_stmt: _12 = (int) _11;
common/dct.c:130:5: note: type of def: 3.
common/dct.c:130:5: note: mark relevant 4, live 0.
common/dct.c:130:5: note: worklist: examine stmt: _12 = (int) _11;
common/dct.c:130:5: note: vect_is_simple_use: operand _11
common/dct.c:130:5: note: def_stmt: _11 = d[i_22][3];
common/dct.c:130:5: note: type of def: 3.
common/dct.c:130:5: note: mark relevant 4, live 0.
common/dct.c:130:5: note: worklist: examine stmt: _11 = d[i_22][3];
common/dct.c:130:5: note: worklist: examine stmt: _10 = (int) _9;
common/dct.c:130:5: note: vect_is_simple_use: operand _9
common/dct.c:130:5: note: def_stmt: _9 = d[i_22][0];
common/dct.c:130:5: note: type of def: 3.
common/dct.c:130:5: note: mark relevant 4, live 0.
common/dct.c:130:5: note: worklist: examine stmt: _9 = d[i_22][0];
common/dct.c:130:5: note: worklist: examine stmt: tmp[2][i_22] = _36;
common/dct.c:130:5: note: vect_is_simple_use: operand _36
common/dct.c:130:5: note: def_stmt: _36 = (short int) _35;
common/dct.c:130:5: note: type of def: 3.
common/dct.c:130:5: note: mark relevant 4, live 0.
common/dct.c:130:5: note: worklist: examine stmt: _36 = (short int) _35;
common/dct.c:130:5: note: vect_is_simple_use: operand _35
common/dct.c:130:5: note: def_stmt: _35 = _24 - _25;
common/dct.c:130:5: note: type of def: 3.
common/dct.c:130:5: note: mark relevant 4, live 0.
common/dct.c:130:5: note: worklist: examine stmt: _35 = _24 - _25;
common/dct.c:130:5: note: vect_is_simple_use: operand _24
common/dct.c:130:5: note: def_stmt: _24 = (unsigned short) s03_13;
common/dct.c:130:5: note: type of def: 3.
common/dct.c:130:5: note: mark relevant 4, live 0.
common/dct.c:130:5: note: vect_is_simple_use: operand _25
common/dct.c:130:5: note: def_stmt: _25 = (unsigned short) s12_18;
common/dct.c:130:5: note: type of def: 3.
common/dct.c:130:5: note: mark relevant 4, live 0.
common/dct.c:130:5: note: worklist: examine stmt: _25 = (unsigned short) s12_18;
common/dct.c:130:5: note: vect_is_simple_use: operand s12_18
common/dct.c:130:5: note: def_stmt: s12_18 = _15 + _17;
common/dct.c:130:5: note: type of def: 3.
common/dct.c:130:5: note: mark relevant 4, live 0.
common/dct.c:130:5: note: worklist: examine stmt: s12_18 = _15 + _17;
common/dct.c:130:5: note: vect_is_simple_use: operand _15
common/dct.c:130:5: note: def_stmt: _15 = (int) _14;
common/dct.c:130:5: note: type of def: 3.
common/dct.c:130:5: note: mark relevant 4, live 0.
common/dct.c:130:5: note: already marked relevant/live.
common/dct.c:130:5: note: vect_is_simple_use: operand _17
common/dct.c:130:5: note: def_stmt: _17 = (int) _16;
common/dct.c:130:5: note: type of def: 3.
common/dct.c:130:5: note: mark relevant 4, live 0.
common/dct.c:130:5: note: already marked relevant/live.
common/dct.c:130:5: note: worklist: examine stmt: _24 = (unsigned short) s03_13;
common/dct.c:130:5: note: vect_is_simple_use: operand s03_13
common/dct.c:130:5: note: def_stmt: s03_13 = _10 + _12;
common/dct.c:130:5: note: type of def: 3.
common/dct.c:130:5: note: mark relevant 4, live 0.
common/dct.c:130:5: note: worklist: examine stmt: s03_13 = _10 + _12;
common/dct.c:130:5: note: vect_is_simple_use: operand _10
common/dct.c:130:5: note: def_stmt: _10 = (int) _9;
common/dct.c:130:5: note: type of def: 3.
common/dct.c:130:5: note: mark relevant 4, live 0.
common/dct.c:130:5: note: already marked relevant/live.
common/dct.c:130:5: note: vect_is_simple_use: operand _12
common/dct.c:130:5: note: def_stmt: _12 = (int) _11;
common/dct.c:130:5: note: type of def: 3.
common/dct.c:130:5: note: mark relevant 4, live 0.
common/dct.c:130:5: note: already marked relevant/live.
common/dct.c:130:5: note: worklist: examine stmt: tmp[1][i_22] = _33;
common/dct.c:130:5: note: vect_is_simple_use: operand _33
common/dct.c:130:5: note: def_stmt: _33 = (short int) _32;
common/dct.c:130:5: note: type of def: 3.
common/dct.c:130:5: note: mark relevant 4, live 0.
common/dct.c:130:5: note: worklist: examine stmt: _33 = (short int) _32;
common/dct.c:130:5: note: vect_is_simple_use: operand _32
common/dct.c:130:5: note: def_stmt: _32 = _30 + _31;
common/dct.c:130:5: note: type of def: 3.
common/dct.c:130:5: note: mark relevant 4, live 0.
common/dct.c:130:5: note: worklist: examine stmt: _32 = _30 + _31;
common/dct.c:130:5: note: vect_is_simple_use: operand _30
common/dct.c:130:5: note: def_stmt: _30 = _29 * 2;
common/dct.c:130:5: note: type of def: 3.
common/dct.c:130:5: note: mark relevant 4, live 0.
common/dct.c:130:5: note: vect_is_simple_use: operand _31
common/dct.c:130:5: note: def_stmt: _31 = (unsigned short) d12_23;
common/dct.c:130:5: note: type of def: 3.
common/dct.c:130:5: note: mark relevant 4, live 0.
common/dct.c:130:5: note: already marked relevant/live.
common/dct.c:130:5: note: worklist: examine stmt: _30 = _29 * 2;
common/dct.c:130:5: note: vect_is_simple_use: operand _29
common/dct.c:130:5: note: def_stmt: _29 = (unsigned short) d03_21;
common/dct.c:130:5: note: type of def: 3.
common/dct.c:130:5: note: mark relevant 4, live 0.
common/dct.c:130:5: note: already marked relevant/live.
common/dct.c:130:5: note: worklist: examine stmt: tmp[0][i_22] = _27;
common/dct.c:130:5: note: vect_is_simple_use: operand _27
common/dct.c:130:5: note: def_stmt: _27 = (short int) _26;
common/dct.c:130:5: note: type of def: 3.
common/dct.c:130:5: note: mark relevant 4, live 0.
common/dct.c:130:5: note: worklist: examine stmt: _27 = (short int) _26;
common/dct.c:130:5: note: vect_is_simple_use: operand _26
common/dct.c:130:5: note: def_stmt: _26 = _24 + _25;
common/dct.c:130:5: note: type of def: 3.
common/dct.c:130:5: note: mark relevant 4, live 0.
common/dct.c:130:5: note: worklist: examine stmt: _26 = _24 + _25;
common/dct.c:130:5: note: vect_is_simple_use: operand _24
common/dct.c:130:5: note: def_stmt: _24 = (unsigned short) s03_13;
common/dct.c:130:5: note: type of def: 3.
common/dct.c:130:5: note: mark relevant 4, live 0.
common/dct.c:130:5: note: already marked relevant/live.
common/dct.c:130:5: note: vect_is_simple_use: operand _25
common/dct.c:130:5: note: def_stmt: _25 = (unsigned short) s12_18;
common/dct.c:130:5: note: type of def: 3.
common/dct.c:130:5: note: mark relevant 4, live 0.
common/dct.c:130:5: note: already marked relevant/live.
common/dct.c:130:5: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _9 = d[i_22][0];
  stmt_b: _11 = d[i_22][3];
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _9 = d[i_22][0];
  stmt_b: _14 = d[i_22][1];
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 1)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _9 = d[i_22][0];
  stmt_b: _16 = d[i_22][2];
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _9 = d[i_22][0];
  stmt_b: tmp[0][i_22] = _27;
) -> no dependence
(compute_affine_dependence
  stmt_a: _9 = d[i_22][0];
  stmt_b: tmp[1][i_22] = _33;
) -> no dependence
(compute_affine_dependence
  stmt_a: _9 = d[i_22][0];
  stmt_b: tmp[2][i_22] = _36;
) -> no dependence
(compute_affine_dependence
  stmt_a: _9 = d[i_22][0];
  stmt_b: tmp[3][i_22] = _40;
) -> no dependence
(compute_affine_dependence
  stmt_a: _11 = d[i_22][3];
  stmt_b: _14 = d[i_22][1];
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 1)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _11 = d[i_22][3];
  stmt_b: _16 = d[i_22][2];
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _11 = d[i_22][3];
  stmt_b: tmp[0][i_22] = _27;
) -> no dependence
(compute_affine_dependence
  stmt_a: _11 = d[i_22][3];
  stmt_b: tmp[1][i_22] = _33;
) -> no dependence
(compute_affine_dependence
  stmt_a: _11 = d[i_22][3];
  stmt_b: tmp[2][i_22] = _36;
) -> no dependence
(compute_affine_dependence
  stmt_a: _11 = d[i_22][3];
  stmt_b: tmp[3][i_22] = _40;
) -> no dependence
(compute_affine_dependence
  stmt_a: _14 = d[i_22][1];
  stmt_b: _16 = d[i_22][2];
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _14 = d[i_22][1];
  stmt_b: tmp[0][i_22] = _27;
) -> no dependence
(compute_affine_dependence
  stmt_a: _14 = d[i_22][1];
  stmt_b: tmp[1][i_22] = _33;
) -> no dependence
(compute_affine_dependence
  stmt_a: _14 = d[i_22][1];
  stmt_b: tmp[2][i_22] = _36;
) -> no dependence
(compute_affine_dependence
  stmt_a: _14 = d[i_22][1];
  stmt_b: tmp[3][i_22] = _40;
) -> no dependence
(compute_affine_dependence
  stmt_a: _16 = d[i_22][2];
  stmt_b: tmp[0][i_22] = _27;
) -> no dependence
(compute_affine_dependence
  stmt_a: _16 = d[i_22][2];
  stmt_b: tmp[1][i_22] = _33;
) -> no dependence
(compute_affine_dependence
  stmt_a: _16 = d[i_22][2];
  stmt_b: tmp[2][i_22] = _36;
) -> no dependence
(compute_affine_dependence
  stmt_a: _16 = d[i_22][2];
  stmt_b: tmp[3][i_22] = _40;
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[0][i_22] = _27;
  stmt_b: tmp[1][i_22] = _33;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 1)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[0][i_22] = _27;
  stmt_b: tmp[2][i_22] = _36;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[0][i_22] = _27;
  stmt_b: tmp[3][i_22] = _40;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[1][i_22] = _33;
  stmt_b: tmp[2][i_22] = _36;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[1][i_22] = _33;
  stmt_b: tmp[3][i_22] = _40;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[2][i_22] = _36;
  stmt_b: tmp[3][i_22] = _40;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _9 = d[i_22][0];
  stmt_b: _9 = d[i_22][0];
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 0)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _11 = d[i_22][3];
  stmt_b: _11 = d[i_22][3];
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _14 = d[i_22][1];
  stmt_b: _14 = d[i_22][1];
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _16 = d[i_22][2];
  stmt_b: _16 = d[i_22][2];
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: tmp[0][i_22] = _27;
  stmt_b: tmp[0][i_22] = _27;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 0)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: tmp[1][i_22] = _33;
  stmt_b: tmp[1][i_22] = _33;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: tmp[2][i_22] = _36;
  stmt_b: tmp[2][i_22] = _36;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: tmp[3][i_22] = _40;
  stmt_b: tmp[3][i_22] = _40;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/dct.c:130:5: note: === vect_determine_vectorization_factor ===
common/dct.c:130:5: note: ==> examining phi: i_22 = PHI <0(8), i_42(10)>

common/dct.c:130:5: note: ==> examining phi: .MEM_117 = PHI <.MEM_103(8), .MEM_41(10)>

common/dct.c:130:5: note: ==> examining phi: ivtmp_227 = PHI <4(8), ivtmp_229(10)>

common/dct.c:130:5: note: ==> examining statement: # DEBUG i => i_22

common/dct.c:130:5: note: skip.
common/dct.c:130:5: note: ==> examining statement: _9 = d[i_22][0];

common/dct.c:130:5: note: get vectype for scalar type:  short int
common/dct.c:130:5: note: vectype: vector(8) short int
common/dct.c:130:5: note: nunits = 8
common/dct.c:130:5: note: ==> examining statement: _10 = (int) _9;

common/dct.c:130:5: note: get vectype for scalar type:  int
common/dct.c:130:5: note: vectype: vector(4) int
common/dct.c:130:5: note: get vectype for scalar type:  short int
common/dct.c:130:5: note: vectype: vector(8) short int
common/dct.c:130:5: note: nunits = 8
common/dct.c:130:5: note: ==> examining statement: _11 = d[i_22][3];

common/dct.c:130:5: note: get vectype for scalar type:  short int
common/dct.c:130:5: note: vectype: vector(8) short int
common/dct.c:130:5: note: nunits = 8
common/dct.c:130:5: note: ==> examining statement: _12 = (int) _11;

common/dct.c:130:5: note: get vectype for scalar type:  int
common/dct.c:130:5: note: vectype: vector(4) int
common/dct.c:130:5: note: get vectype for scalar type:  short int
common/dct.c:130:5: note: vectype: vector(8) short int
common/dct.c:130:5: note: nunits = 8
common/dct.c:130:5: note: ==> examining statement: s03_13 = _10 + _12;

common/dct.c:130:5: note: get vectype for scalar type:  const int
common/dct.c:130:5: note: vectype: const vector(4) int
common/dct.c:130:5: note: get vectype for scalar type:  const int
common/dct.c:130:5: note: vectype: const vector(4) int
common/dct.c:130:5: note: nunits = 4
common/dct.c:130:5: note: ==> examining statement: # DEBUG s03 => s03_13

common/dct.c:130:5: note: skip.
common/dct.c:130:5: note: ==> examining statement: _14 = d[i_22][1];

common/dct.c:130:5: note: get vectype for scalar type:  short int
common/dct.c:130:5: note: vectype: vector(8) short int
common/dct.c:130:5: note: nunits = 8
common/dct.c:130:5: note: ==> examining statement: _15 = (int) _14;

common/dct.c:130:5: note: get vectype for scalar type:  int
common/dct.c:130:5: note: vectype: vector(4) int
common/dct.c:130:5: note: get vectype for scalar type:  short int
common/dct.c:130:5: note: vectype: vector(8) short int
common/dct.c:130:5: note: nunits = 8
common/dct.c:130:5: note: ==> examining statement: _16 = d[i_22][2];

common/dct.c:130:5: note: get vectype for scalar type:  short int
common/dct.c:130:5: note: vectype: vector(8) short int
common/dct.c:130:5: note: nunits = 8
common/dct.c:130:5: note: ==> examining statement: _17 = (int) _16;

common/dct.c:130:5: note: get vectype for scalar type:  int
common/dct.c:130:5: note: vectype: vector(4) int
common/dct.c:130:5: note: get vectype for scalar type:  short int
common/dct.c:130:5: note: vectype: vector(8) short int
common/dct.c:130:5: note: nunits = 8
common/dct.c:130:5: note: ==> examining statement: s12_18 = _15 + _17;

common/dct.c:130:5: note: get vectype for scalar type:  const int
common/dct.c:130:5: note: vectype: const vector(4) int
common/dct.c:130:5: note: get vectype for scalar type:  const int
common/dct.c:130:5: note: vectype: const vector(4) int
common/dct.c:130:5: note: nunits = 4
common/dct.c:130:5: note: ==> examining statement: # DEBUG s12 => s12_18

common/dct.c:130:5: note: skip.
common/dct.c:130:5: note: ==> examining statement: d03_21 = _10 - _12;

common/dct.c:130:5: note: get vectype for scalar type:  const int
common/dct.c:130:5: note: vectype: const vector(4) int
common/dct.c:130:5: note: get vectype for scalar type:  const int
common/dct.c:130:5: note: vectype: const vector(4) int
common/dct.c:130:5: note: nunits = 4
common/dct.c:130:5: note: ==> examining statement: # DEBUG d03 => d03_21

common/dct.c:130:5: note: skip.
common/dct.c:130:5: note: ==> examining statement: d12_23 = _15 - _17;

common/dct.c:130:5: note: get vectype for scalar type:  const int
common/dct.c:130:5: note: vectype: const vector(4) int
common/dct.c:130:5: note: get vectype for scalar type:  const int
common/dct.c:130:5: note: vectype: const vector(4) int
common/dct.c:130:5: note: nunits = 4
common/dct.c:130:5: note: ==> examining statement: # DEBUG d12 => d12_23

common/dct.c:130:5: note: skip.
common/dct.c:130:5: note: ==> examining statement: _24 = (unsigned short) s03_13;

common/dct.c:130:5: note: get vectype for scalar type:  unsigned short
common/dct.c:130:5: note: vectype: vector(8) unsigned short
common/dct.c:130:5: note: get vectype for scalar type:  unsigned short
common/dct.c:130:5: note: vectype: vector(8) unsigned short
common/dct.c:130:5: note: nunits = 8
common/dct.c:130:5: note: ==> examining statement: _25 = (unsigned short) s12_18;

common/dct.c:130:5: note: get vectype for scalar type:  unsigned short
common/dct.c:130:5: note: vectype: vector(8) unsigned short
common/dct.c:130:5: note: get vectype for scalar type:  unsigned short
common/dct.c:130:5: note: vectype: vector(8) unsigned short
common/dct.c:130:5: note: nunits = 8
common/dct.c:130:5: note: ==> examining statement: _26 = _24 + _25;

common/dct.c:130:5: note: get vectype for scalar type:  unsigned short
common/dct.c:130:5: note: vectype: vector(8) unsigned short
common/dct.c:130:5: note: get vectype for scalar type:  unsigned short
common/dct.c:130:5: note: vectype: vector(8) unsigned short
common/dct.c:130:5: note: nunits = 8
common/dct.c:130:5: note: ==> examining statement: _27 = (short int) _26;

common/dct.c:130:5: note: get vectype for scalar type:  short int
common/dct.c:130:5: note: vectype: vector(8) short int
common/dct.c:130:5: note: get vectype for scalar type:  short int
common/dct.c:130:5: note: vectype: vector(8) short int
common/dct.c:130:5: note: nunits = 8
common/dct.c:130:5: note: ==> examining statement: tmp[0][i_22] = _27;

common/dct.c:130:5: note: get vectype for scalar type:  int16_t
common/dct.c:130:5: note: vectype: vector(8) short int
common/dct.c:130:5: note: nunits = 8
common/dct.c:130:5: note: ==> examining statement: _29 = (unsigned short) d03_21;

common/dct.c:130:5: note: get vectype for scalar type:  unsigned short
common/dct.c:130:5: note: vectype: vector(8) unsigned short
common/dct.c:130:5: note: get vectype for scalar type:  unsigned short
common/dct.c:130:5: note: vectype: vector(8) unsigned short
common/dct.c:130:5: note: nunits = 8
common/dct.c:130:5: note: ==> examining statement: _30 = _29 * 2;

common/dct.c:130:5: note: get vectype for scalar type:  unsigned short
common/dct.c:130:5: note: vectype: vector(8) unsigned short
common/dct.c:130:5: note: get vectype for scalar type:  unsigned short
common/dct.c:130:5: note: vectype: vector(8) unsigned short
common/dct.c:130:5: note: nunits = 8
common/dct.c:130:5: note: ==> examining statement: _31 = (unsigned short) d12_23;

common/dct.c:130:5: note: get vectype for scalar type:  unsigned short
common/dct.c:130:5: note: vectype: vector(8) unsigned short
common/dct.c:130:5: note: get vectype for scalar type:  unsigned short
common/dct.c:130:5: note: vectype: vector(8) unsigned short
common/dct.c:130:5: note: nunits = 8
common/dct.c:130:5: note: ==> examining statement: _32 = _30 + _31;

common/dct.c:130:5: note: get vectype for scalar type:  unsigned short
common/dct.c:130:5: note: vectype: vector(8) unsigned short
common/dct.c:130:5: note: get vectype for scalar type:  unsigned short
common/dct.c:130:5: note: vectype: vector(8) unsigned short
common/dct.c:130:5: note: nunits = 8
common/dct.c:130:5: note: ==> examining statement: _33 = (short int) _32;

common/dct.c:130:5: note: get vectype for scalar type:  short int
common/dct.c:130:5: note: vectype: vector(8) short int
common/dct.c:130:5: note: get vectype for scalar type:  short int
common/dct.c:130:5: note: vectype: vector(8) short int
common/dct.c:130:5: note: nunits = 8
common/dct.c:130:5: note: ==> examining statement: tmp[1][i_22] = _33;

common/dct.c:130:5: note: get vectype for scalar type:  int16_t
common/dct.c:130:5: note: vectype: vector(8) short int
common/dct.c:130:5: note: nunits = 8
common/dct.c:130:5: note: ==> examining statement: _35 = _24 - _25;

common/dct.c:130:5: note: get vectype for scalar type:  unsigned short
common/dct.c:130:5: note: vectype: vector(8) unsigned short
common/dct.c:130:5: note: get vectype for scalar type:  unsigned short
common/dct.c:130:5: note: vectype: vector(8) unsigned short
common/dct.c:130:5: note: nunits = 8
common/dct.c:130:5: note: ==> examining statement: _36 = (short int) _35;

common/dct.c:130:5: note: get vectype for scalar type:  short int
common/dct.c:130:5: note: vectype: vector(8) short int
common/dct.c:130:5: note: get vectype for scalar type:  short int
common/dct.c:130:5: note: vectype: vector(8) short int
common/dct.c:130:5: note: nunits = 8
common/dct.c:130:5: note: ==> examining statement: tmp[2][i_22] = _36;

common/dct.c:130:5: note: get vectype for scalar type:  int16_t
common/dct.c:130:5: note: vectype: vector(8) short int
common/dct.c:130:5: note: nunits = 8
common/dct.c:130:5: note: ==> examining statement: _38 = _31 * 2;

common/dct.c:130:5: note: get vectype for scalar type:  unsigned short
common/dct.c:130:5: note: vectype: vector(8) unsigned short
common/dct.c:130:5: note: get vectype for scalar type:  unsigned short
common/dct.c:130:5: note: vectype: vector(8) unsigned short
common/dct.c:130:5: note: nunits = 8
common/dct.c:130:5: note: ==> examining statement: _39 = _29 - _38;

common/dct.c:130:5: note: get vectype for scalar type:  unsigned short
common/dct.c:130:5: note: vectype: vector(8) unsigned short
common/dct.c:130:5: note: get vectype for scalar type:  unsigned short
common/dct.c:130:5: note: vectype: vector(8) unsigned short
common/dct.c:130:5: note: nunits = 8
common/dct.c:130:5: note: ==> examining statement: _40 = (short int) _39;

common/dct.c:130:5: note: get vectype for scalar type:  short int
common/dct.c:130:5: note: vectype: vector(8) short int
common/dct.c:130:5: note: get vectype for scalar type:  short int
common/dct.c:130:5: note: vectype: vector(8) short int
common/dct.c:130:5: note: nunits = 8
common/dct.c:130:5: note: ==> examining statement: tmp[3][i_22] = _40;

common/dct.c:130:5: note: get vectype for scalar type:  int16_t
common/dct.c:130:5: note: vectype: vector(8) short int
common/dct.c:130:5: note: nunits = 8
common/dct.c:130:5: note: ==> examining statement: i_42 = i_22 + 1;

common/dct.c:130:5: note: skip.
common/dct.c:130:5: note: ==> examining statement: # DEBUG i => i_42

common/dct.c:130:5: note: skip.
common/dct.c:130:5: note: ==> examining statement: # DEBUG i => i_42

common/dct.c:130:5: note: skip.
common/dct.c:130:5: note: ==> examining statement: ivtmp_229 = ivtmp_227 - 1;

common/dct.c:130:5: note: skip.
common/dct.c:130:5: note: ==> examining statement: if (ivtmp_229 != 0)

common/dct.c:130:5: note: skip.
common/dct.c:130:5: note: vectorization factor = 8
common/dct.c:130:5: note: === vect_analyze_data_refs_alignment ===
common/dct.c:130:5: note: vect_compute_data_ref_alignment:
common/dct.c:130:5: note: misalign = 0 bytes of ref d[i_22][0]
common/dct.c:130:5: note: vect_compute_data_ref_alignment:
common/dct.c:130:5: note: misalign = 6 bytes of ref d[i_22][3]
common/dct.c:130:5: note: vect_compute_data_ref_alignment:
common/dct.c:130:5: note: misalign = 2 bytes of ref d[i_22][1]
common/dct.c:130:5: note: vect_compute_data_ref_alignment:
common/dct.c:130:5: note: misalign = 4 bytes of ref d[i_22][2]
common/dct.c:130:5: note: vect_compute_data_ref_alignment:
common/dct.c:130:5: note: misalign = 0 bytes of ref tmp[0][i_22]
common/dct.c:130:5: note: vect_compute_data_ref_alignment:
common/dct.c:130:5: note: misalign = 8 bytes of ref tmp[1][i_22]
common/dct.c:130:5: note: vect_compute_data_ref_alignment:
common/dct.c:130:5: note: misalign = 0 bytes of ref tmp[2][i_22]
common/dct.c:130:5: note: vect_compute_data_ref_alignment:
common/dct.c:130:5: note: misalign = 8 bytes of ref tmp[3][i_22]
common/dct.c:130:5: note: === vect_prune_runtime_alias_test_list ===
common/dct.c:130:5: note: === vect_enhance_data_refs_alignment ===
common/dct.c:130:5: note: data size =2. misalignment = 8.
common/dct.c:130:5: note: data size =2. misalignment = 8.
common/dct.c:130:5: note: vect_can_advance_ivs_p:
common/dct.c:130:5: note: Analyze phi: i_22 = PHI <0(8), i_42(10)>

common/dct.c:130:5: note: Analyze phi: .MEM_117 = PHI <.MEM_103(8), .MEM_41(10)>

common/dct.c:130:5: note: virtual phi. skip.
common/dct.c:130:5: note: Analyze phi: ivtmp_227 = PHI <4(8), ivtmp_229(10)>

common/dct.c:130:5: note: vect_model_load_cost: aligned.
common/dct.c:130:5: note: vect_get_data_access_cost: inside_cost = 1, outside_cost = 0.
common/dct.c:130:5: note: vect_model_store_cost: aligned.
common/dct.c:130:5: note: vect_get_data_access_cost: inside_cost = 2, outside_cost = 0.
common/dct.c:130:5: note: vect_model_store_cost: unaligned supported by hardware.
common/dct.c:130:5: note: vect_get_data_access_cost: inside_cost = 4, outside_cost = 0.
common/dct.c:130:5: note: vect_model_store_cost: aligned.
common/dct.c:130:5: note: vect_get_data_access_cost: inside_cost = 5, outside_cost = 0.
common/dct.c:130:5: note: vect_model_store_cost: unaligned supported by hardware.
common/dct.c:130:5: note: vect_get_data_access_cost: inside_cost = 7, outside_cost = 0.
common/dct.c:130:5: note: vect_model_load_cost: aligned.
common/dct.c:130:5: note: vect_get_data_access_cost: inside_cost = 1, outside_cost = 0.
common/dct.c:130:5: note: vect_model_store_cost: unaligned supported by hardware.
common/dct.c:130:5: note: vect_get_data_access_cost: inside_cost = 3, outside_cost = 0.
common/dct.c:130:5: note: vect_model_store_cost: aligned.
common/dct.c:130:5: note: vect_get_data_access_cost: inside_cost = 4, outside_cost = 0.
common/dct.c:130:5: note: vect_model_store_cost: unaligned supported by hardware.
common/dct.c:130:5: note: vect_get_data_access_cost: inside_cost = 6, outside_cost = 0.
common/dct.c:130:5: note: vect_model_store_cost: aligned.
common/dct.c:130:5: note: vect_get_data_access_cost: inside_cost = 7, outside_cost = 0.
common/dct.c:130:5: note: Vectorizing an unaligned access.
common/dct.c:130:5: note: Vectorizing an unaligned access.
common/dct.c:130:5: note: === vect_analyze_slp ===
common/dct.c:130:5: note: === vect_make_slp_decision ===
common/dct.c:130:5: note: === vect_detect_hybrid_slp ===
common/dct.c:130:5: note: === vect_analyze_loop_operations ===
common/dct.c:130:5: note: examining phi: i_22 = PHI <0(8), i_42(10)>

common/dct.c:130:5: note: examining phi: .MEM_117 = PHI <.MEM_103(8), .MEM_41(10)>

common/dct.c:130:5: note: examining phi: ivtmp_227 = PHI <4(8), ivtmp_229(10)>

common/dct.c:130:5: note: ==> examining statement: # DEBUG i => i_22
common/dct.c:130:5: note: irrelevant.
common/dct.c:130:5: note: ==> examining statement: _9 = d[i_22][0];
common/dct.c:130:5: note: num. args = 4 (not unary/binary/ternary op).
common/dct.c:130:5: note: vect_is_simple_use: operand d[i_22][0]
common/dct.c:130:5: note: not ssa-name.
common/dct.c:130:5: note: use not simple.
common/dct.c:130:5: note: no array mode for V8HI[4]
common/dct.c:130:5: note: vect_model_load_cost: strided group_size = 4 .
common/dct.c:130:5: note: vect_model_load_cost: aligned.
common/dct.c:130:5: note: vect_model_load_cost: inside_cost = 9, prologue_cost = 0 .
common/dct.c:130:5: note: ==> examining statement: _10 = (int) _9;
common/dct.c:130:5: note: vect_is_simple_use: operand _9
common/dct.c:130:5: note: def_stmt: _9 = d[i_22][0];
common/dct.c:130:5: note: type of def: 3.
common/dct.c:130:5: note: === vectorizable_conversion ===
common/dct.c:130:5: note: vect_model_promotion_demotion_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:130:5: note: ==> examining statement: _11 = d[i_22][3];
common/dct.c:130:5: note: num. args = 4 (not unary/binary/ternary op).
common/dct.c:130:5: note: vect_is_simple_use: operand d[i_22][3]
common/dct.c:130:5: note: not ssa-name.
common/dct.c:130:5: note: use not simple.
common/dct.c:130:5: note: no array mode for V8HI[4]
common/dct.c:130:5: note: vect_model_load_cost: aligned.
common/dct.c:130:5: note: vect_model_load_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:130:5: note: ==> examining statement: _12 = (int) _11;
common/dct.c:130:5: note: vect_is_simple_use: operand _11
common/dct.c:130:5: note: def_stmt: _11 = d[i_22][3];
common/dct.c:130:5: note: type of def: 3.
common/dct.c:130:5: note: === vectorizable_conversion ===
common/dct.c:130:5: note: vect_model_promotion_demotion_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:130:5: note: ==> examining statement: s03_13 = _10 + _12;
common/dct.c:130:5: note: vect_is_simple_use: operand _10
common/dct.c:130:5: note: def_stmt: _10 = (int) _9;
common/dct.c:130:5: note: type of def: 3.
common/dct.c:130:5: note: vect_is_simple_use: operand _12
common/dct.c:130:5: note: def_stmt: _12 = (int) _11;
common/dct.c:130:5: note: type of def: 3.
common/dct.c:130:5: note: === vectorizable_operation ===
common/dct.c:130:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:130:5: note: ==> examining statement: # DEBUG s03 => s03_13
common/dct.c:130:5: note: irrelevant.
common/dct.c:130:5: note: ==> examining statement: _14 = d[i_22][1];
common/dct.c:130:5: note: num. args = 4 (not unary/binary/ternary op).
common/dct.c:130:5: note: vect_is_simple_use: operand d[i_22][1]
common/dct.c:130:5: note: not ssa-name.
common/dct.c:130:5: note: use not simple.
common/dct.c:130:5: note: no array mode for V8HI[4]
common/dct.c:130:5: note: vect_model_load_cost: aligned.
common/dct.c:130:5: note: vect_model_load_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:130:5: note: ==> examining statement: _15 = (int) _14;
common/dct.c:130:5: note: vect_is_simple_use: operand _14
common/dct.c:130:5: note: def_stmt: _14 = d[i_22][1];
common/dct.c:130:5: note: type of def: 3.
common/dct.c:130:5: note: === vectorizable_conversion ===
common/dct.c:130:5: note: vect_model_promotion_demotion_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:130:5: note: ==> examining statement: _16 = d[i_22][2];
common/dct.c:130:5: note: num. args = 4 (not unary/binary/ternary op).
common/dct.c:130:5: note: vect_is_simple_use: operand d[i_22][2]
common/dct.c:130:5: note: not ssa-name.
common/dct.c:130:5: note: use not simple.
common/dct.c:130:5: note: no array mode for V8HI[4]
common/dct.c:130:5: note: vect_model_load_cost: aligned.
common/dct.c:130:5: note: vect_model_load_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:130:5: note: ==> examining statement: _17 = (int) _16;
common/dct.c:130:5: note: vect_is_simple_use: operand _16
common/dct.c:130:5: note: def_stmt: _16 = d[i_22][2];
common/dct.c:130:5: note: type of def: 3.
common/dct.c:130:5: note: === vectorizable_conversion ===
common/dct.c:130:5: note: vect_model_promotion_demotion_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:130:5: note: ==> examining statement: s12_18 = _15 + _17;
common/dct.c:130:5: note: vect_is_simple_use: operand _15
common/dct.c:130:5: note: def_stmt: _15 = (int) _14;
common/dct.c:130:5: note: type of def: 3.
common/dct.c:130:5: note: vect_is_simple_use: operand _17
common/dct.c:130:5: note: def_stmt: _17 = (int) _16;
common/dct.c:130:5: note: type of def: 3.
common/dct.c:130:5: note: === vectorizable_operation ===
common/dct.c:130:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:130:5: note: ==> examining statement: # DEBUG s12 => s12_18
common/dct.c:130:5: note: irrelevant.
common/dct.c:130:5: note: ==> examining statement: d03_21 = _10 - _12;
common/dct.c:130:5: note: vect_is_simple_use: operand _10
common/dct.c:130:5: note: def_stmt: _10 = (int) _9;
common/dct.c:130:5: note: type of def: 3.
common/dct.c:130:5: note: vect_is_simple_use: operand _12
common/dct.c:130:5: note: def_stmt: _12 = (int) _11;
common/dct.c:130:5: note: type of def: 3.
common/dct.c:130:5: note: === vectorizable_operation ===
common/dct.c:130:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:130:5: note: ==> examining statement: # DEBUG d03 => d03_21
common/dct.c:130:5: note: irrelevant.
common/dct.c:130:5: note: ==> examining statement: d12_23 = _15 - _17;
common/dct.c:130:5: note: vect_is_simple_use: operand _15
common/dct.c:130:5: note: def_stmt: _15 = (int) _14;
common/dct.c:130:5: note: type of def: 3.
common/dct.c:130:5: note: vect_is_simple_use: operand _17
common/dct.c:130:5: note: def_stmt: _17 = (int) _16;
common/dct.c:130:5: note: type of def: 3.
common/dct.c:130:5: note: === vectorizable_operation ===
common/dct.c:130:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:130:5: note: ==> examining statement: # DEBUG d12 => d12_23
common/dct.c:130:5: note: irrelevant.
common/dct.c:130:5: note: ==> examining statement: _24 = (unsigned short) s03_13;
common/dct.c:130:5: note: vect_is_simple_use: operand s03_13
common/dct.c:130:5: note: def_stmt: s03_13 = _10 + _12;
common/dct.c:130:5: note: type of def: 3.
common/dct.c:130:5: note: === vectorizable_conversion ===
common/dct.c:130:5: note: vect_model_promotion_demotion_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:130:5: note: ==> examining statement: _25 = (unsigned short) s12_18;
common/dct.c:130:5: note: vect_is_simple_use: operand s12_18
common/dct.c:130:5: note: def_stmt: s12_18 = _15 + _17;
common/dct.c:130:5: note: type of def: 3.
common/dct.c:130:5: note: === vectorizable_conversion ===
common/dct.c:130:5: note: vect_model_promotion_demotion_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:130:5: note: ==> examining statement: _26 = _24 + _25;
common/dct.c:130:5: note: vect_is_simple_use: operand _24
common/dct.c:130:5: note: def_stmt: _24 = (unsigned short) s03_13;
common/dct.c:130:5: note: type of def: 3.
common/dct.c:130:5: note: vect_is_simple_use: operand _25
common/dct.c:130:5: note: def_stmt: _25 = (unsigned short) s12_18;
common/dct.c:130:5: note: type of def: 3.
common/dct.c:130:5: note: === vectorizable_operation ===
common/dct.c:130:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:130:5: note: ==> examining statement: _27 = (short int) _26;
common/dct.c:130:5: note: vect_is_simple_use: operand _26
common/dct.c:130:5: note: def_stmt: _26 = _24 + _25;
common/dct.c:130:5: note: type of def: 3.
common/dct.c:130:5: note: vect_is_simple_use: operand _26
common/dct.c:130:5: note: def_stmt: _26 = _24 + _25;
common/dct.c:130:5: note: type of def: 3.
common/dct.c:130:5: note: no optab.
common/dct.c:130:5: note: vect_is_simple_use: operand _26
common/dct.c:130:5: note: def_stmt: _26 = _24 + _25;
common/dct.c:130:5: note: type of def: 3.
common/dct.c:130:5: note: === vectorizable_assignment ===
common/dct.c:130:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:130:5: note: ==> examining statement: tmp[0][i_22] = _27;
common/dct.c:130:5: note: vect_is_simple_use: operand _27
common/dct.c:130:5: note: def_stmt: _27 = (short int) _26;
common/dct.c:130:5: note: type of def: 3.
common/dct.c:130:5: note: vect_model_store_cost: aligned.
common/dct.c:130:5: note: vect_model_store_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:130:5: note: ==> examining statement: _29 = (unsigned short) d03_21;
common/dct.c:130:5: note: vect_is_simple_use: operand d03_21
common/dct.c:130:5: note: def_stmt: d03_21 = _10 - _12;
common/dct.c:130:5: note: type of def: 3.
common/dct.c:130:5: note: === vectorizable_conversion ===
common/dct.c:130:5: note: vect_model_promotion_demotion_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:130:5: note: ==> examining statement: _30 = _29 * 2;
common/dct.c:130:5: note: vect_is_simple_use: operand _29
common/dct.c:130:5: note: def_stmt: _29 = (unsigned short) d03_21;
common/dct.c:130:5: note: type of def: 3.
common/dct.c:130:5: note: vect_is_simple_use: operand 2
common/dct.c:130:5: note: === vectorizable_operation ===
common/dct.c:130:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
common/dct.c:130:5: note: ==> examining statement: _31 = (unsigned short) d12_23;
common/dct.c:130:5: note: vect_is_simple_use: operand d12_23
common/dct.c:130:5: note: def_stmt: d12_23 = _15 - _17;
common/dct.c:130:5: note: type of def: 3.
common/dct.c:130:5: note: === vectorizable_conversion ===
common/dct.c:130:5: note: vect_model_promotion_demotion_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:130:5: note: ==> examining statement: _32 = _30 + _31;
common/dct.c:130:5: note: vect_is_simple_use: operand _30
common/dct.c:130:5: note: def_stmt: _30 = _29 * 2;
common/dct.c:130:5: note: type of def: 3.
common/dct.c:130:5: note: vect_is_simple_use: operand _31
common/dct.c:130:5: note: def_stmt: _31 = (unsigned short) d12_23;
common/dct.c:130:5: note: type of def: 3.
common/dct.c:130:5: note: === vectorizable_operation ===
common/dct.c:130:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:130:5: note: ==> examining statement: _33 = (short int) _32;
common/dct.c:130:5: note: vect_is_simple_use: operand _32
common/dct.c:130:5: note: def_stmt: _32 = _30 + _31;
common/dct.c:130:5: note: type of def: 3.
common/dct.c:130:5: note: vect_is_simple_use: operand _32
common/dct.c:130:5: note: def_stmt: _32 = _30 + _31;
common/dct.c:130:5: note: type of def: 3.
common/dct.c:130:5: note: no optab.
common/dct.c:130:5: note: vect_is_simple_use: operand _32
common/dct.c:130:5: note: def_stmt: _32 = _30 + _31;
common/dct.c:130:5: note: type of def: 3.
common/dct.c:130:5: note: === vectorizable_assignment ===
common/dct.c:130:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:130:5: note: ==> examining statement: tmp[1][i_22] = _33;
common/dct.c:130:5: note: vect_is_simple_use: operand _33
common/dct.c:130:5: note: def_stmt: _33 = (short int) _32;
common/dct.c:130:5: note: type of def: 3.
common/dct.c:130:5: note: vect_model_store_cost: unaligned supported by hardware.
common/dct.c:130:5: note: vect_model_store_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:130:5: note: ==> examining statement: _35 = _24 - _25;
common/dct.c:130:5: note: vect_is_simple_use: operand _24
common/dct.c:130:5: note: def_stmt: _24 = (unsigned short) s03_13;
common/dct.c:130:5: note: type of def: 3.
common/dct.c:130:5: note: vect_is_simple_use: operand _25
common/dct.c:130:5: note: def_stmt: _25 = (unsigned short) s12_18;
common/dct.c:130:5: note: type of def: 3.
common/dct.c:130:5: note: === vectorizable_operation ===
common/dct.c:130:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:130:5: note: ==> examining statement: _36 = (short int) _35;
common/dct.c:130:5: note: vect_is_simple_use: operand _35
common/dct.c:130:5: note: def_stmt: _35 = _24 - _25;
common/dct.c:130:5: note: type of def: 3.
common/dct.c:130:5: note: vect_is_simple_use: operand _35
common/dct.c:130:5: note: def_stmt: _35 = _24 - _25;
common/dct.c:130:5: note: type of def: 3.
common/dct.c:130:5: note: no optab.
common/dct.c:130:5: note: vect_is_simple_use: operand _35
common/dct.c:130:5: note: def_stmt: _35 = _24 - _25;
common/dct.c:130:5: note: type of def: 3.
common/dct.c:130:5: note: === vectorizable_assignment ===
common/dct.c:130:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:130:5: note: ==> examining statement: tmp[2][i_22] = _36;
common/dct.c:130:5: note: vect_is_simple_use: operand _36
common/dct.c:130:5: note: def_stmt: _36 = (short int) _35;
common/dct.c:130:5: note: type of def: 3.
common/dct.c:130:5: note: vect_model_store_cost: aligned.
common/dct.c:130:5: note: vect_model_store_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:130:5: note: ==> examining statement: _38 = _31 * 2;
common/dct.c:130:5: note: vect_is_simple_use: operand _31
common/dct.c:130:5: note: def_stmt: _31 = (unsigned short) d12_23;
common/dct.c:130:5: note: type of def: 3.
common/dct.c:130:5: note: vect_is_simple_use: operand 2
common/dct.c:130:5: note: === vectorizable_operation ===
common/dct.c:130:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
common/dct.c:130:5: note: ==> examining statement: _39 = _29 - _38;
common/dct.c:130:5: note: vect_is_simple_use: operand _29
common/dct.c:130:5: note: def_stmt: _29 = (unsigned short) d03_21;
common/dct.c:130:5: note: type of def: 3.
common/dct.c:130:5: note: vect_is_simple_use: operand _38
common/dct.c:130:5: note: def_stmt: _38 = _31 * 2;
common/dct.c:130:5: note: type of def: 3.
common/dct.c:130:5: note: === vectorizable_operation ===
common/dct.c:130:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:130:5: note: ==> examining statement: _40 = (short int) _39;
common/dct.c:130:5: note: vect_is_simple_use: operand _39
common/dct.c:130:5: note: def_stmt: _39 = _29 - _38;
common/dct.c:130:5: note: type of def: 3.
common/dct.c:130:5: note: vect_is_simple_use: operand _39
common/dct.c:130:5: note: def_stmt: _39 = _29 - _38;
common/dct.c:130:5: note: type of def: 3.
common/dct.c:130:5: note: no optab.
common/dct.c:130:5: note: vect_is_simple_use: operand _39
common/dct.c:130:5: note: def_stmt: _39 = _29 - _38;
common/dct.c:130:5: note: type of def: 3.
common/dct.c:130:5: note: === vectorizable_assignment ===
common/dct.c:130:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:130:5: note: ==> examining statement: tmp[3][i_22] = _40;
common/dct.c:130:5: note: vect_is_simple_use: operand _40
common/dct.c:130:5: note: def_stmt: _40 = (short int) _39;
common/dct.c:130:5: note: type of def: 3.
common/dct.c:130:5: note: vect_model_store_cost: unaligned supported by hardware.
common/dct.c:130:5: note: vect_model_store_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:130:5: note: ==> examining statement: i_42 = i_22 + 1;
common/dct.c:130:5: note: irrelevant.
common/dct.c:130:5: note: ==> examining statement: # DEBUG i => i_42
common/dct.c:130:5: note: irrelevant.
common/dct.c:130:5: note: ==> examining statement: # DEBUG i => i_42
common/dct.c:130:5: note: irrelevant.
common/dct.c:130:5: note: ==> examining statement: ivtmp_229 = ivtmp_227 - 1;
common/dct.c:130:5: note: irrelevant.
common/dct.c:130:5: note: ==> examining statement: if (ivtmp_229 != 0)
common/dct.c:130:5: note: irrelevant.
common/dct.c:130:5: note: vectorization_factor = 8, niters = 4
common/dct.c:130:5: note: not vectorized: iteration count too small.
common/dct.c:130:5: note: not vectorized: iteration count smaller than vectorization factor.
common/dct.c:130:5: note: bad operation or unsupported loop bound.

Analyzing loop at common/dct.c:111
common/dct.c:111:5: note: ===== analyze_loop_nest =====
common/dct.c:111:5: note: === vect_analyze_loop_form ===
common/dct.c:111:5: note: ===== analyze_loop_nest_1 =====
common/dct.c:111:5: note: === vect_analyze_loop_form ===
common/dct.c:111:5: note: === get_loop_niters ===
Analyzing # of iterations of loop 4
  exit condition [3, + , 4294967295] != 0
  bounds on difference of bases: -3 ... -3
  result:
    # of iterations 3, bounded by 3
common/dct.c:111:5: note: Considering outer-loop vectorization.
common/dct.c:111:5: note: === get_loop_niters ===
Analyzing # of iterations of loop 3
  exit condition [3, + , 4294967295] != 0
  bounds on difference of bases: -3 ... -3
  result:
    # of iterations 3, bounded by 3
common/dct.c:111:5: note: === vect_analyze_data_refs ===
Creating dr for *_89
analyze_innermost: success.
	base_address: pix1_122
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix1_6(D)
	Access function 0: {{0B, +, 16}_3, +, 1}_4
Creating dr for *_93
analyze_innermost: success.
	base_address: pix2_123
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix2_7(D)
	Access function 0: {{0B, +, 32}_3, +, 1}_4
Creating dr for *_86
analyze_innermost: success.
	base_address: (int16_t *) &d + (sizetype) ((long unsigned int) (y_120 * 4) * 2)
	offset from base address: 0
	constant offset from base address: 0
	step: 2
	aligned to: 128
	base_object: MEM[(int16_t *)&d]
	Access function 0: {{0B, +, 8}_3, +, 2}_4
Applying pattern match.pd:49, generic-match.c:4015
common/dct.c:111:5: note: analyze in outer-loop: *pix1_122
common/dct.c:111:5: note: 	outer base_address: pix1_6(D)
	outer offset from base address: 0
	outer constant offset from base address: 0
	outer step: 16
	outer aligned to: 128
common/dct.c:111:5: note: got vectype for stmt: _90 = *_89;
vector(16) unsigned char
Applying pattern match.pd:49, generic-match.c:4015
common/dct.c:111:5: note: analyze in outer-loop: *pix2_123
common/dct.c:111:5: note: 	outer base_address: pix2_7(D)
	outer offset from base address: 0
	outer constant offset from base address: 0
	outer step: 32
	outer aligned to: 128
common/dct.c:111:5: note: got vectype for stmt: _94 = *_93;
vector(16) unsigned char
Applying pattern match.pd:49, generic-match.c:4015
common/dct.c:111:5: note: analyze in outer-loop: *((int16_t *) &d + (sizetype) ((long unsigned int) (y_120 * 4) * 2))
common/dct.c:111:5: note: 	outer base_address: &d
	outer offset from base address: 0
	outer constant offset from base address: 0
	outer step: 8
	outer aligned to: 128
common/dct.c:111:5: note: got vectype for stmt: *_86 = _97;
vector(8) short int
common/dct.c:111:5: note: === vect_analyze_scalar_cycles ===
common/dct.c:111:5: note: Analyze phi: y_120 = PHI <y_101(6), 0(2)>

common/dct.c:111:5: note: Access function of PHI: {0, +, 1}_3
common/dct.c:111:5: note: step: 1,  init: 0
common/dct.c:111:5: note: Detected induction.
common/dct.c:111:5: note: Analyze phi: pix1_122 = PHI <pix1_99(6), pix1_6(D)(2)>

common/dct.c:111:5: note: Access function of PHI: {pix1_6(D), +, 16}_3
common/dct.c:111:5: note: step: 16,  init: pix1_6(D)
common/dct.c:111:5: note: Detected induction.
common/dct.c:111:5: note: Analyze phi: pix2_123 = PHI <pix2_100(6), pix2_7(D)(2)>

common/dct.c:111:5: note: Access function of PHI: {pix2_7(D), +, 32}_3
common/dct.c:111:5: note: step: 32,  init: pix2_7(D)
common/dct.c:111:5: note: Detected induction.
common/dct.c:111:5: note: Analyze phi: .MEM_124 = PHI <.MEM_103(6), .MEM_5(D)(2)>

common/dct.c:111:5: note: Analyze phi: ivtmp_223 = PHI <ivtmp_222(6), 4(2)>

common/dct.c:111:5: note: Access function of PHI: {4, +, 4294967295}_3
common/dct.c:111:5: note: step: 4294967295,  init: 4
common/dct.c:111:5: note: Detected induction.
common/dct.c:111:5: note: === vect_analyze_scalar_cycles ===
common/dct.c:111:5: note: Analyze phi: .MEM_119 = PHI <.MEM_103(3), .MEM_124(7)>

common/dct.c:111:5: note: Analyze phi: x_121 = PHI <x_98(3), 0(7)>

common/dct.c:111:5: note: Access function of PHI: {0, +, 1}_4
common/dct.c:111:5: note: step: 1,  init: 0
common/dct.c:111:5: note: Detected induction.
common/dct.c:111:5: note: Analyze phi: ivtmp_225 = PHI <ivtmp_224(3), 4(7)>

common/dct.c:111:5: note: Access function of PHI: {4, +, 4294967295}_4
common/dct.c:111:5: note: step: 4294967295,  init: 4
common/dct.c:111:5: note: Detected induction.
common/dct.c:111:5: note: === vect_pattern_recog ===
common/dct.c:111:5: note: vect_is_simple_use: operand y_120
common/dct.c:111:5: note: def_stmt: y_120 = PHI <y_101(6), 0(2)>
common/dct.c:111:5: note: type of def: 4.
common/dct.c:111:5: note: vect_is_simple_use: operand _84
common/dct.c:111:5: note: def_stmt: _84 = (long unsigned int) _83;
common/dct.c:111:5: note: type of def: 3.
common/dct.c:111:5: note: vect_is_simple_use: operand _83
common/dct.c:111:5: note: def_stmt: _83 = x_121 + pretmp_236;
common/dct.c:111:5: note: type of def: 3.
common/dct.c:111:5: note: vect_is_simple_use: operand 2
common/dct.c:111:5: note: === vect_analyze_data_ref_accesses ===
common/dct.c:111:5: note: grouped access in outer loop.
common/dct.c:111:5: note: not vectorized: complicated access pattern.
common/dct.c:111:5: note: bad data access.

Analyzing loop at common/dct.c:113
common/dct.c:113:9: note: ===== analyze_loop_nest =====
common/dct.c:113:9: note: === vect_analyze_loop_form ===
common/dct.c:113:9: note: === get_loop_niters ===
common/dct.c:113:9: note: === vect_analyze_data_refs ===
Creating dr for *_89
analyze_innermost: success.
	base_address: pix1_122
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix1_122
	Access function 0: {0B, +, 1}_4
Creating dr for *_93
analyze_innermost: success.
	base_address: pix2_123
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix2_123
	Access function 0: {0B, +, 1}_4
Creating dr for *_86
analyze_innermost: success.
	base_address: (int16_t *) &d + (sizetype) ((long unsigned int) (y_120 * 4) * 2)
	offset from base address: 0
	constant offset from base address: 0
	step: 2
	aligned to: 128
	base_object: *(int16_t *) &d + (sizetype) ((long unsigned int) (y_120 * 4) * 2)
	Access function 0: {0B, +, 2}_4
common/dct.c:113:9: note: got vectype for stmt: _90 = *_89;
vector(16) unsigned char
common/dct.c:113:9: note: got vectype for stmt: _94 = *_93;
vector(16) unsigned char
common/dct.c:113:9: note: got vectype for stmt: *_86 = _97;
vector(8) short int
common/dct.c:113:9: note: === vect_analyze_scalar_cycles ===
common/dct.c:113:9: note: Analyze phi: .MEM_119 = PHI <.MEM_103(3), .MEM_124(7)>

common/dct.c:113:9: note: Analyze phi: x_121 = PHI <x_98(3), 0(7)>

common/dct.c:113:9: note: Access function of PHI: {0, +, 1}_4
common/dct.c:113:9: note: step: 1,  init: 0
common/dct.c:113:9: note: Detected induction.
common/dct.c:113:9: note: Analyze phi: ivtmp_225 = PHI <ivtmp_224(3), 4(7)>

common/dct.c:113:9: note: Access function of PHI: {4, +, 4294967295}_4
common/dct.c:113:9: note: step: 4294967295,  init: 4
common/dct.c:113:9: note: Detected induction.
common/dct.c:113:9: note: === vect_pattern_recog ===
common/dct.c:113:9: note: vect_is_simple_use: operand _84
common/dct.c:113:9: note: def_stmt: _84 = (long unsigned int) _83;
common/dct.c:113:9: note: type of def: 3.
common/dct.c:113:9: note: vect_is_simple_use: operand _83
common/dct.c:113:9: note: def_stmt: _83 = x_121 + pretmp_236;
common/dct.c:113:9: note: type of def: 3.
common/dct.c:113:9: note: vect_is_simple_use: operand 2
common/dct.c:113:9: note: === vect_analyze_data_ref_accesses ===
common/dct.c:113:9: note: === vect_mark_stmts_to_be_vectorized ===
common/dct.c:113:9: note: init: phi relevant? .MEM_119 = PHI <.MEM_103(3), .MEM_124(7)>
common/dct.c:113:9: note: init: phi relevant? x_121 = PHI <x_98(3), 0(7)>
common/dct.c:113:9: note: init: phi relevant? ivtmp_225 = PHI <ivtmp_224(3), 4(7)>
common/dct.c:113:9: note: init: stmt relevant? # DEBUG x => x_121
common/dct.c:113:9: note: init: stmt relevant? _83 = x_121 + pretmp_236;
common/dct.c:113:9: note: init: stmt relevant? _84 = (long unsigned int) _83;
common/dct.c:113:9: note: init: stmt relevant? _85 = _84 * 2;
common/dct.c:113:9: note: init: stmt relevant? _86 = &d + _85;
common/dct.c:113:9: note: init: stmt relevant? _87 = (sizetype) x_121;
common/dct.c:113:9: note: init: stmt relevant? _89 = pix1_122 + _87;
common/dct.c:113:9: note: init: stmt relevant? _90 = *_89;
common/dct.c:113:9: note: init: stmt relevant? _91 = (unsigned short) _90;
common/dct.c:113:9: note: init: stmt relevant? _93 = pix2_123 + _87;
common/dct.c:113:9: note: init: stmt relevant? _94 = *_93;
common/dct.c:113:9: note: init: stmt relevant? _95 = (unsigned short) _94;
common/dct.c:113:9: note: init: stmt relevant? _96 = _91 - _95;
common/dct.c:113:9: note: init: stmt relevant? _97 = (short int) _96;
common/dct.c:113:9: note: init: stmt relevant? *_86 = _97;
common/dct.c:113:9: note: vec_stmt_relevant_p: stmt has vdefs.
common/dct.c:113:9: note: mark relevant 4, live 0.
common/dct.c:113:9: note: init: stmt relevant? x_98 = x_121 + 1;
common/dct.c:113:9: note: init: stmt relevant? # DEBUG x => x_98
common/dct.c:113:9: note: init: stmt relevant? # DEBUG x => x_98
common/dct.c:113:9: note: init: stmt relevant? ivtmp_224 = ivtmp_225 - 1;
common/dct.c:113:9: note: init: stmt relevant? if (ivtmp_224 != 0)
common/dct.c:113:9: note: worklist: examine stmt: *_86 = _97;
common/dct.c:113:9: note: vect_is_simple_use: operand _97
common/dct.c:113:9: note: def_stmt: _97 = (short int) _96;
common/dct.c:113:9: note: type of def: 3.
common/dct.c:113:9: note: mark relevant 4, live 0.
common/dct.c:113:9: note: worklist: examine stmt: _97 = (short int) _96;
common/dct.c:113:9: note: vect_is_simple_use: operand _96
common/dct.c:113:9: note: def_stmt: _96 = _91 - _95;
common/dct.c:113:9: note: type of def: 3.
common/dct.c:113:9: note: mark relevant 4, live 0.
common/dct.c:113:9: note: worklist: examine stmt: _96 = _91 - _95;
common/dct.c:113:9: note: vect_is_simple_use: operand _91
common/dct.c:113:9: note: def_stmt: _91 = (unsigned short) _90;
common/dct.c:113:9: note: type of def: 3.
common/dct.c:113:9: note: mark relevant 4, live 0.
common/dct.c:113:9: note: vect_is_simple_use: operand _95
common/dct.c:113:9: note: def_stmt: _95 = (unsigned short) _94;
common/dct.c:113:9: note: type of def: 3.
common/dct.c:113:9: note: mark relevant 4, live 0.
common/dct.c:113:9: note: worklist: examine stmt: _95 = (unsigned short) _94;
common/dct.c:113:9: note: vect_is_simple_use: operand _94
common/dct.c:113:9: note: def_stmt: _94 = *_93;
common/dct.c:113:9: note: type of def: 3.
common/dct.c:113:9: note: mark relevant 4, live 0.
common/dct.c:113:9: note: worklist: examine stmt: _94 = *_93;
common/dct.c:113:9: note: worklist: examine stmt: _91 = (unsigned short) _90;
common/dct.c:113:9: note: vect_is_simple_use: operand _90
common/dct.c:113:9: note: def_stmt: _90 = *_89;
common/dct.c:113:9: note: type of def: 3.
common/dct.c:113:9: note: mark relevant 4, live 0.
common/dct.c:113:9: note: worklist: examine stmt: _90 = *_89;
common/dct.c:113:9: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _90 = *_89;
  stmt_b: _94 = *_93;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _90 = *_89;
  stmt_b: *_86 = _97;
) -> no dependence
(compute_affine_dependence
  stmt_a: _94 = *_93;
  stmt_b: *_86 = _97;
) -> no dependence
(compute_affine_dependence
  stmt_a: _90 = *_89;
  stmt_b: _90 = *_89;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_4)
  (chrec_b = {0B, +, 1}_4)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _94 = *_93;
  stmt_b: _94 = *_93;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_4)
  (chrec_b = {0B, +, 1}_4)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: *_86 = _97;
  stmt_b: *_86 = _97;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 2}_4)
  (chrec_b = {0B, +, 2}_4)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/dct.c:113:9: note: === vect_determine_vectorization_factor ===
common/dct.c:113:9: note: ==> examining phi: .MEM_119 = PHI <.MEM_103(3), .MEM_124(7)>

common/dct.c:113:9: note: ==> examining phi: x_121 = PHI <x_98(3), 0(7)>

common/dct.c:113:9: note: ==> examining phi: ivtmp_225 = PHI <ivtmp_224(3), 4(7)>

common/dct.c:113:9: note: ==> examining statement: # DEBUG x => x_121

common/dct.c:113:9: note: skip.
common/dct.c:113:9: note: ==> examining statement: _83 = x_121 + pretmp_236;

common/dct.c:113:9: note: skip.
common/dct.c:113:9: note: ==> examining statement: _84 = (long unsigned int) _83;

common/dct.c:113:9: note: skip.
common/dct.c:113:9: note: ==> examining statement: _85 = _84 * 2;

common/dct.c:113:9: note: skip.
common/dct.c:113:9: note: ==> examining statement: _86 = &d + _85;

common/dct.c:113:9: note: skip.
common/dct.c:113:9: note: ==> examining statement: _87 = (sizetype) x_121;

common/dct.c:113:9: note: skip.
common/dct.c:113:9: note: ==> examining statement: _89 = pix1_122 + _87;

common/dct.c:113:9: note: skip.
common/dct.c:113:9: note: ==> examining statement: _90 = *_89;

common/dct.c:113:9: note: get vectype for scalar type:  unsigned char
common/dct.c:113:9: note: vectype: vector(16) unsigned char
common/dct.c:113:9: note: nunits = 16
common/dct.c:113:9: note: ==> examining statement: _91 = (unsigned short) _90;

common/dct.c:113:9: note: get vectype for scalar type:  unsigned short
common/dct.c:113:9: note: vectype: vector(8) unsigned short
common/dct.c:113:9: note: get vectype for scalar type:  unsigned char
common/dct.c:113:9: note: vectype: vector(16) unsigned char
common/dct.c:113:9: note: nunits = 16
common/dct.c:113:9: note: ==> examining statement: _93 = pix2_123 + _87;

common/dct.c:113:9: note: skip.
common/dct.c:113:9: note: ==> examining statement: _94 = *_93;

common/dct.c:113:9: note: get vectype for scalar type:  unsigned char
common/dct.c:113:9: note: vectype: vector(16) unsigned char
common/dct.c:113:9: note: nunits = 16
common/dct.c:113:9: note: ==> examining statement: _95 = (unsigned short) _94;

common/dct.c:113:9: note: get vectype for scalar type:  unsigned short
common/dct.c:113:9: note: vectype: vector(8) unsigned short
common/dct.c:113:9: note: get vectype for scalar type:  unsigned char
common/dct.c:113:9: note: vectype: vector(16) unsigned char
common/dct.c:113:9: note: nunits = 16
common/dct.c:113:9: note: ==> examining statement: _96 = _91 - _95;

common/dct.c:113:9: note: get vectype for scalar type:  unsigned short
common/dct.c:113:9: note: vectype: vector(8) unsigned short
common/dct.c:113:9: note: get vectype for scalar type:  unsigned short
common/dct.c:113:9: note: vectype: vector(8) unsigned short
common/dct.c:113:9: note: nunits = 8
common/dct.c:113:9: note: ==> examining statement: _97 = (short int) _96;

common/dct.c:113:9: note: get vectype for scalar type:  short int
common/dct.c:113:9: note: vectype: vector(8) short int
common/dct.c:113:9: note: get vectype for scalar type:  short int
common/dct.c:113:9: note: vectype: vector(8) short int
common/dct.c:113:9: note: nunits = 8
common/dct.c:113:9: note: ==> examining statement: *_86 = _97;

common/dct.c:113:9: note: get vectype for scalar type:  int16_t
common/dct.c:113:9: note: vectype: vector(8) short int
common/dct.c:113:9: note: nunits = 8
common/dct.c:113:9: note: ==> examining statement: x_98 = x_121 + 1;

common/dct.c:113:9: note: skip.
common/dct.c:113:9: note: ==> examining statement: # DEBUG x => x_98

common/dct.c:113:9: note: skip.
common/dct.c:113:9: note: ==> examining statement: # DEBUG x => x_98

common/dct.c:113:9: note: skip.
common/dct.c:113:9: note: ==> examining statement: ivtmp_224 = ivtmp_225 - 1;

common/dct.c:113:9: note: skip.
common/dct.c:113:9: note: ==> examining statement: if (ivtmp_224 != 0)

common/dct.c:113:9: note: skip.
common/dct.c:113:9: note: vectorization factor = 16
common/dct.c:113:9: note: === vect_analyze_data_refs_alignment ===
common/dct.c:113:9: note: vect_compute_data_ref_alignment:
common/dct.c:113:9: note: can't force alignment of ref: *_89
common/dct.c:113:9: note: vect_compute_data_ref_alignment:
common/dct.c:113:9: note: can't force alignment of ref: *_93
common/dct.c:113:9: note: vect_compute_data_ref_alignment:
common/dct.c:113:9: note: can't force alignment of ref: *_86
common/dct.c:113:9: note: === vect_prune_runtime_alias_test_list ===
common/dct.c:113:9: note: === vect_enhance_data_refs_alignment ===
common/dct.c:113:9: note: Unknown misalignment, is_packed = 0
common/dct.c:113:9: note: Unknown misalignment, is_packed = 0
common/dct.c:113:9: note: Unknown misalignment, is_packed = 0
common/dct.c:113:9: note: vect_can_advance_ivs_p:
common/dct.c:113:9: note: Analyze phi: .MEM_119 = PHI <.MEM_103(3), .MEM_124(7)>

common/dct.c:113:9: note: virtual phi. skip.
common/dct.c:113:9: note: Analyze phi: x_121 = PHI <x_98(3), 0(7)>

common/dct.c:113:9: note: Analyze phi: ivtmp_225 = PHI <ivtmp_224(3), 4(7)>

common/dct.c:113:9: note: Vectorizing an unaligned access.
common/dct.c:113:9: note: Vectorizing an unaligned access.
common/dct.c:113:9: note: Vectorizing an unaligned access.
common/dct.c:113:9: note: === vect_analyze_slp ===
common/dct.c:113:9: note: === vect_make_slp_decision ===
common/dct.c:113:9: note: === vect_detect_hybrid_slp ===
common/dct.c:113:9: note: === vect_analyze_loop_operations ===
common/dct.c:113:9: note: examining phi: .MEM_119 = PHI <.MEM_103(3), .MEM_124(7)>

common/dct.c:113:9: note: examining phi: x_121 = PHI <x_98(3), 0(7)>

common/dct.c:113:9: note: examining phi: ivtmp_225 = PHI <ivtmp_224(3), 4(7)>

common/dct.c:113:9: note: ==> examining statement: # DEBUG x => x_121
common/dct.c:113:9: note: irrelevant.
common/dct.c:113:9: note: ==> examining statement: _83 = x_121 + pretmp_236;
common/dct.c:113:9: note: irrelevant.
common/dct.c:113:9: note: ==> examining statement: _84 = (long unsigned int) _83;
common/dct.c:113:9: note: irrelevant.
common/dct.c:113:9: note: ==> examining statement: _85 = _84 * 2;
common/dct.c:113:9: note: irrelevant.
common/dct.c:113:9: note: ==> examining statement: _86 = &d + _85;
common/dct.c:113:9: note: irrelevant.
common/dct.c:113:9: note: ==> examining statement: _87 = (sizetype) x_121;
common/dct.c:113:9: note: irrelevant.
common/dct.c:113:9: note: ==> examining statement: _89 = pix1_122 + _87;
common/dct.c:113:9: note: irrelevant.
common/dct.c:113:9: note: ==> examining statement: _90 = *_89;
common/dct.c:113:9: note: vect_is_simple_use: operand *_89
common/dct.c:113:9: note: not ssa-name.
common/dct.c:113:9: note: use not simple.
common/dct.c:113:9: note: vect_is_simple_use: operand *_89
common/dct.c:113:9: note: not ssa-name.
common/dct.c:113:9: note: use not simple.
common/dct.c:113:9: note: vect_model_load_cost: unaligned supported by hardware.
common/dct.c:113:9: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:113:9: note: ==> examining statement: _91 = (unsigned short) _90;
common/dct.c:113:9: note: vect_is_simple_use: operand _90
common/dct.c:113:9: note: def_stmt: _90 = *_89;
common/dct.c:113:9: note: type of def: 3.
common/dct.c:113:9: note: === vectorizable_conversion ===
common/dct.c:113:9: note: vect_model_promotion_demotion_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:113:9: note: ==> examining statement: _93 = pix2_123 + _87;
common/dct.c:113:9: note: irrelevant.
common/dct.c:113:9: note: ==> examining statement: _94 = *_93;
common/dct.c:113:9: note: vect_is_simple_use: operand *_93
common/dct.c:113:9: note: not ssa-name.
common/dct.c:113:9: note: use not simple.
common/dct.c:113:9: note: vect_is_simple_use: operand *_93
common/dct.c:113:9: note: not ssa-name.
common/dct.c:113:9: note: use not simple.
common/dct.c:113:9: note: vect_model_load_cost: unaligned supported by hardware.
common/dct.c:113:9: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:113:9: note: ==> examining statement: _95 = (unsigned short) _94;
common/dct.c:113:9: note: vect_is_simple_use: operand _94
common/dct.c:113:9: note: def_stmt: _94 = *_93;
common/dct.c:113:9: note: type of def: 3.
common/dct.c:113:9: note: === vectorizable_conversion ===
common/dct.c:113:9: note: vect_model_promotion_demotion_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:113:9: note: ==> examining statement: _96 = _91 - _95;
common/dct.c:113:9: note: vect_is_simple_use: operand _91
common/dct.c:113:9: note: def_stmt: _91 = (unsigned short) _90;
common/dct.c:113:9: note: type of def: 3.
common/dct.c:113:9: note: vect_is_simple_use: operand _95
common/dct.c:113:9: note: def_stmt: _95 = (unsigned short) _94;
common/dct.c:113:9: note: type of def: 3.
common/dct.c:113:9: note: === vectorizable_operation ===
common/dct.c:113:9: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:113:9: note: ==> examining statement: _97 = (short int) _96;
common/dct.c:113:9: note: vect_is_simple_use: operand _96
common/dct.c:113:9: note: def_stmt: _96 = _91 - _95;
common/dct.c:113:9: note: type of def: 3.
common/dct.c:113:9: note: vect_is_simple_use: operand _96
common/dct.c:113:9: note: def_stmt: _96 = _91 - _95;
common/dct.c:113:9: note: type of def: 3.
common/dct.c:113:9: note: no optab.
common/dct.c:113:9: note: vect_is_simple_use: operand _96
common/dct.c:113:9: note: def_stmt: _96 = _91 - _95;
common/dct.c:113:9: note: type of def: 3.
common/dct.c:113:9: note: === vectorizable_assignment ===
common/dct.c:113:9: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:113:9: note: ==> examining statement: *_86 = _97;
common/dct.c:113:9: note: vect_is_simple_use: operand _97
common/dct.c:113:9: note: def_stmt: _97 = (short int) _96;
common/dct.c:113:9: note: type of def: 3.
common/dct.c:113:9: note: vect_model_store_cost: unaligned supported by hardware.
common/dct.c:113:9: note: vect_model_store_cost: inside_cost = 4, prologue_cost = 0 .
common/dct.c:113:9: note: ==> examining statement: x_98 = x_121 + 1;
common/dct.c:113:9: note: irrelevant.
common/dct.c:113:9: note: ==> examining statement: # DEBUG x => x_98
common/dct.c:113:9: note: irrelevant.
common/dct.c:113:9: note: ==> examining statement: # DEBUG x => x_98
common/dct.c:113:9: note: irrelevant.
common/dct.c:113:9: note: ==> examining statement: ivtmp_224 = ivtmp_225 - 1;
common/dct.c:113:9: note: irrelevant.
common/dct.c:113:9: note: ==> examining statement: if (ivtmp_224 != 0)
common/dct.c:113:9: note: irrelevant.
common/dct.c:113:9: note: vectorization_factor = 16, niters = 4
common/dct.c:113:9: note: not vectorized: iteration count too small.
common/dct.c:113:9: note: not vectorized: iteration count smaller than vectorization factor.
common/dct.c:113:9: note: bad operation or unsupported loop bound.
common/dct.c:122:13: note: vectorized 0 loops in function.
sub4x4_dct (int16_t[4] * dct, uint8_t * pix1, uint8_t * pix2)
{
  int y;
  int x;
  const int d12;
  const int d03;
  const int s12;
  const int s03;
  const int d12;
  const int d03;
  const int s12;
  const int s03;
  int i;
  int16_t tmp[4][4];
  int16_t d[4][4];
  short int _9;
  int _10;
  short int _11;
  int _12;
  short int _14;
  int _15;
  short int _16;
  int _17;
  unsigned short _24;
  unsigned short _25;
  unsigned short _26;
  short int _27;
  unsigned short _29;
  unsigned short _30;
  unsigned short _31;
  unsigned short _32;
  short int _33;
  unsigned short _35;
  short int _36;
  unsigned short _38;
  unsigned short _39;
  short int _40;
  short int _43;
  int _44;
  short int _45;
  int _46;
  short int _48;
  int _49;
  short int _50;
  int _51;
  long unsigned int _55;
  long unsigned int _56;
  int16_t[4] * _58;
  unsigned short _59;
  unsigned short _60;
  unsigned short _61;
  short int _62;
  unsigned short _64;
  unsigned short _65;
  unsigned short _66;
  unsigned short _67;
  short int _68;
  unsigned short _70;
  short int _71;
  unsigned short _73;
  unsigned short _74;
  short int _75;
  int _83;
  long unsigned int _84;
  long unsigned int _85;
  int16_t * _86;
  sizetype _87;
  uint8_t * _89;
  unsigned char _90;
  unsigned short _91;
  uint8_t * _93;
  unsigned char _94;
  unsigned short _95;
  unsigned short _96;
  short int _97;
  unsigned int ivtmp_222;
  unsigned int ivtmp_223;
  unsigned int ivtmp_224;
  unsigned int ivtmp_225;
  unsigned int ivtmp_226;
  unsigned int ivtmp_227;
  unsigned int ivtmp_228;
  unsigned int ivtmp_229;
  int pretmp_236;

  <bb 2>:
  # DEBUG diff => &d
  # DEBUG i_size => 4
  # DEBUG pix1 => pix1_6(D)
  # DEBUG i_pix1 => 16
  # DEBUG pix2 => pix2_7(D)
  # DEBUG i_pix2 => 32
  # DEBUG y => 0
  # DEBUG y => 0
  # DEBUG pix2 => pix2_7(D)
  # DEBUG pix1 => pix1_6(D)
  goto <bb 7>;

  <bb 3>:

  <bb 4>:
  # x_121 = PHI <x_98(3), 0(7)>
  # ivtmp_225 = PHI <ivtmp_224(3), 4(7)>
  # DEBUG x => x_121
  _83 = x_121 + pretmp_236;
  _84 = (long unsigned int) _83;
  _85 = _84 * 2;
  _86 = &d + _85;
  _87 = (sizetype) x_121;
  _89 = pix1_122 + _87;
  _90 = *_89;
  _91 = (unsigned short) _90;
  _93 = pix2_123 + _87;
  _94 = *_93;
  _95 = (unsigned short) _94;
  _96 = _91 - _95;
  _97 = (short int) _96;
  *_86 = _97;
  x_98 = x_121 + 1;
  # DEBUG x => x_98
  # DEBUG x => x_98
  ivtmp_224 = ivtmp_225 - 1;
  if (ivtmp_224 != 0)
    goto <bb 3>;
  else
    goto <bb 5>;

  <bb 5>:
  pix1_99 = pix1_122 + 16;
  # DEBUG pix1 => pix1_99
  pix2_100 = pix2_123 + 32;
  # DEBUG pix2 => pix2_100
  y_101 = y_120 + 1;
  # DEBUG y => y_101
  # DEBUG y => y_101
  # DEBUG pix2 => pix2_100
  # DEBUG pix1 => pix1_99
  ivtmp_222 = ivtmp_223 - 1;
  if (ivtmp_222 != 0)
    goto <bb 6>;
  else
    goto <bb 8>;

  <bb 6>:

  <bb 7>:
  # y_120 = PHI <y_101(6), 0(2)>
  # pix1_122 = PHI <pix1_99(6), pix1_6(D)(2)>
  # pix2_123 = PHI <pix2_100(6), pix2_7(D)(2)>
  # ivtmp_223 = PHI <ivtmp_222(6), 4(2)>
  # DEBUG y => y_120
  # DEBUG pix2 => pix2_123
  # DEBUG pix1 => pix1_122
  # DEBUG x => 0
  pretmp_236 = y_120 * 4;
  goto <bb 4>;

  <bb 8>:

  <bb 9>:
  # i_22 = PHI <0(8), i_42(10)>
  # ivtmp_227 = PHI <4(8), ivtmp_229(10)>
  # DEBUG i => i_22
  _9 = d[i_22][0];
  _10 = (int) _9;
  _11 = d[i_22][3];
  _12 = (int) _11;
  s03_13 = _10 + _12;
  # DEBUG s03 => s03_13
  _14 = d[i_22][1];
  _15 = (int) _14;
  _16 = d[i_22][2];
  _17 = (int) _16;
  s12_18 = _15 + _17;
  # DEBUG s12 => s12_18
  d03_21 = _10 - _12;
  # DEBUG d03 => d03_21
  d12_23 = _15 - _17;
  # DEBUG d12 => d12_23
  _24 = (unsigned short) s03_13;
  _25 = (unsigned short) s12_18;
  _26 = _24 + _25;
  _27 = (short int) _26;
  tmp[0][i_22] = _27;
  _29 = (unsigned short) d03_21;
  _30 = _29 * 2;
  _31 = (unsigned short) d12_23;
  _32 = _30 + _31;
  _33 = (short int) _32;
  tmp[1][i_22] = _33;
  _35 = _24 - _25;
  _36 = (short int) _35;
  tmp[2][i_22] = _36;
  _38 = _31 * 2;
  _39 = _29 - _38;
  _40 = (short int) _39;
  tmp[3][i_22] = _40;
  i_42 = i_22 + 1;
  # DEBUG i => i_42
  # DEBUG i => i_42
  ivtmp_229 = ivtmp_227 - 1;
  if (ivtmp_229 != 0)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  goto <bb 9>;

  <bb 11>:

  <bb 12>:
  # i_19 = PHI <0(11), i_77(13)>
  # ivtmp_228 = PHI <4(11), ivtmp_226(13)>
  # DEBUG i => i_19
  _43 = tmp[i_19][0];
  _44 = (int) _43;
  _45 = tmp[i_19][3];
  _46 = (int) _45;
  s03_47 = _44 + _46;
  # DEBUG s03 => s03_47
  _48 = tmp[i_19][1];
  _49 = (int) _48;
  _50 = tmp[i_19][2];
  _51 = (int) _50;
  s12_52 = _49 + _51;
  # DEBUG s12 => s12_52
  d03_53 = _44 - _46;
  # DEBUG d03 => d03_53
  d12_54 = _49 - _51;
  # DEBUG d12 => d12_54
  _55 = (long unsigned int) i_19;
  _56 = _55 * 8;
  _58 = dct_57(D) + _56;
  _59 = (unsigned short) s03_47;
  _60 = (unsigned short) s12_52;
  _61 = _59 + _60;
  _62 = (short int) _61;
  *_58[0] = _62;
  _64 = (unsigned short) d03_53;
  _65 = _64 * 2;
  _66 = (unsigned short) d12_54;
  _67 = _65 + _66;
  _68 = (short int) _67;
  *_58[1] = _68;
  _70 = _59 - _60;
  _71 = (short int) _70;
  *_58[2] = _71;
  _73 = _66 * 2;
  _74 = _64 - _73;
  _75 = (short int) _74;
  *_58[3] = _75;
  i_77 = i_19 + 1;
  # DEBUG i => i_77
  # DEBUG i => i_77
  ivtmp_226 = ivtmp_228 - 1;
  if (ivtmp_226 != 0)
    goto <bb 13>;
  else
    goto <bb 14>;

  <bb 13>:
  goto <bb 12>;

  <bb 14>:
  d ={v} {CLOBBER};
  tmp ={v} {CLOBBER};
  return;

}



;; Function add4x4_idct (add4x4_idct, funcdef_no=121, decl_uid=5923, cgraph_uid=121, symbol_order=166)


Analyzing loop at common/dct.c:208
common/dct.c:208:5: note: ===== analyze_loop_nest =====
common/dct.c:208:5: note: === vect_analyze_loop_form ===
common/dct.c:208:5: note: ===== analyze_loop_nest_1 =====
common/dct.c:208:5: note: === vect_analyze_loop_form ===
common/dct.c:208:5: note: === get_loop_niters ===
Analyzing # of iterations of loop 4
  exit condition [3, + , 4294967295] != 0
  bounds on difference of bases: -3 ... -3
  result:
    # of iterations 3, bounded by 3
common/dct.c:208:5: note: Considering outer-loop vectorization.
common/dct.c:208:5: note: === get_loop_niters ===
Analyzing # of iterations of loop 3
  exit condition [3, + , 4294967295] != 0
  bounds on difference of bases: -3 ... -3
  result:
    # of iterations 3, bounded by 3
common/dct.c:208:5: note: === vect_analyze_data_refs ===
Creating dr for *_88
analyze_innermost: success.
	base_address: p_dst_17
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *p_dst_86(D)
	Access function 0: {{0B, +, 32}_3, +, 1}_4
Creating dr for d[y_118][x_107]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &d
	offset from base address: (ssizetype) ((sizetype) y_118 * 8)
	constant offset from base address: 0
	step: 2
	aligned to: 8
	base_object: d
	Access function 0: {0, +, 1}_4
	Access function 1: {0, +, 1}_3
Creating dr for *_88
analyze_innermost: success.
	base_address: p_dst_17
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *p_dst_86(D)
	Access function 0: {{0B, +, 32}_3, +, 1}_4
Applying pattern match.pd:49, generic-match.c:4015
common/dct.c:208:5: note: analyze in outer-loop: *p_dst_17
common/dct.c:208:5: note: 	outer base_address: p_dst_86(D)
	outer offset from base address: 0
	outer constant offset from base address: 0
	outer step: 32
	outer aligned to: 128
common/dct.c:208:5: note: got vectype for stmt: _89 = *_88;
vector(16) unsigned char
Applying pattern match.pd:49, generic-match.c:4015
common/dct.c:208:5: note: analyze in outer-loop: d
common/dct.c:208:5: note: 	outer base_address: &d
	outer offset from base address: 0
	outer constant offset from base address: 0
	outer step: 8
	outer aligned to: 128
common/dct.c:208:5: note: got vectype for stmt: _91 = d[y_118][x_107];
vector(8) short int
Applying pattern match.pd:49, generic-match.c:4015
common/dct.c:208:5: note: analyze in outer-loop: *p_dst_17
common/dct.c:208:5: note: 	outer base_address: p_dst_86(D)
	outer offset from base address: 0
	outer constant offset from base address: 0
	outer step: 32
	outer aligned to: 128
common/dct.c:208:5: note: got vectype for stmt: *_88 = iftmp.0_105;
vector(16) unsigned char
common/dct.c:208:5: note: === vect_analyze_scalar_cycles ===
common/dct.c:208:5: note: Analyze phi: p_dst_17 = PHI <p_dst_86(D)(7), p_dst_97(12)>

common/dct.c:208:5: note: Access function of PHI: {p_dst_86(D), +, 32}_3
common/dct.c:208:5: note: step: 32,  init: p_dst_86(D)
common/dct.c:208:5: note: Detected induction.
common/dct.c:208:5: note: Analyze phi: y_118 = PHI <0(7), y_98(12)>

common/dct.c:208:5: note: Access function of PHI: {0, +, 1}_3
common/dct.c:208:5: note: step: 1,  init: 0
common/dct.c:208:5: note: Detected induction.
common/dct.c:208:5: note: Analyze phi: .MEM_124 = PHI <.MEM_84(7), .MEM_95(12)>

common/dct.c:208:5: note: Analyze phi: ivtmp_228 = PHI <4(7), ivtmp_227(12)>

common/dct.c:208:5: note: Access function of PHI: {4, +, 4294967295}_3
common/dct.c:208:5: note: step: 4294967295,  init: 4
common/dct.c:208:5: note: Detected induction.
common/dct.c:208:5: note: === vect_analyze_scalar_cycles ===
common/dct.c:208:5: note: Analyze phi: x_107 = PHI <x_96(9), 0(13)>

common/dct.c:208:5: note: Access function of PHI: {0, +, 1}_4
common/dct.c:208:5: note: step: 1,  init: 0
common/dct.c:208:5: note: Detected induction.
common/dct.c:208:5: note: Analyze phi: .MEM_123 = PHI <.MEM_95(9), .MEM_124(13)>

common/dct.c:208:5: note: Analyze phi: ivtmp_230 = PHI <ivtmp_229(9), 4(13)>

common/dct.c:208:5: note: Access function of PHI: {4, +, 4294967295}_4
common/dct.c:208:5: note: step: 4294967295,  init: 4
common/dct.c:208:5: note: Detected induction.
common/dct.c:208:5: note: === vect_pattern_recog ===
common/dct.c:208:5: note: vect_is_simple_use: operand _101
common/dct.c:208:5: note: def_stmt: _101 = -_93;
common/dct.c:208:5: note: type of def: 3.
common/dct.c:208:5: note: vect_is_simple_use: operand iftmp.0_103
common/dct.c:208:5: note: def_stmt: iftmp.0_103 = (unsigned char) _102;
common/dct.c:208:5: note: type of def: 3.
common/dct.c:208:5: note: vect_is_simple_use: operand _102
common/dct.c:208:5: note: def_stmt: _102 = _101 >> 31;
common/dct.c:208:5: note: type of def: 3.
common/dct.c:208:5: note: vect_is_simple_use: operand iftmp.0_104
common/dct.c:208:5: note: def_stmt: iftmp.0_104 = (unsigned char) _93;
common/dct.c:208:5: note: type of def: 3.
common/dct.c:208:5: note: vect_is_simple_use: operand _93
common/dct.c:208:5: note: def_stmt: _93 = _90 + _92;
common/dct.c:208:5: note: type of def: 3.
common/dct.c:208:5: note: vect_recog_mixed_size_cond_pattern: detected:
common/dct.c:208:5: note: pattern recognized: patt_221 = (unsigned char) patt_222;
common/dct.c:208:5: note: === vect_analyze_data_ref_accesses ===
common/dct.c:208:5: note: grouped access in outer loop.
common/dct.c:208:5: note: not vectorized: complicated access pattern.
common/dct.c:208:5: note: bad data access.

Analyzing loop at common/dct.c:210
common/dct.c:210:9: note: ===== analyze_loop_nest =====
common/dct.c:210:9: note: === vect_analyze_loop_form ===
common/dct.c:210:9: note: === get_loop_niters ===
common/dct.c:210:9: note: === vect_analyze_data_refs ===
Creating dr for *_88
analyze_innermost: success.
	base_address: p_dst_17
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *p_dst_17
	Access function 0: {0B, +, 1}_4
Creating dr for d[y_118][x_107]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &d
	offset from base address: (ssizetype) ((sizetype) y_118 * 8)
	constant offset from base address: 0
	step: 2
	aligned to: 8
	base_object: d
	Access function 0: {0, +, 1}_4
	Access function 1: y_118
Creating dr for *_88
analyze_innermost: success.
	base_address: p_dst_17
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *p_dst_17
	Access function 0: {0B, +, 1}_4
common/dct.c:210:9: note: got vectype for stmt: _89 = *_88;
vector(16) unsigned char
common/dct.c:210:9: note: got vectype for stmt: _91 = d[y_118][x_107];
vector(8) short int
common/dct.c:210:9: note: got vectype for stmt: *_88 = iftmp.0_105;
vector(16) unsigned char
common/dct.c:210:9: note: === vect_analyze_scalar_cycles ===
common/dct.c:210:9: note: Analyze phi: x_107 = PHI <x_96(9), 0(13)>

common/dct.c:210:9: note: Access function of PHI: {0, +, 1}_4
common/dct.c:210:9: note: step: 1,  init: 0
common/dct.c:210:9: note: Detected induction.
common/dct.c:210:9: note: Analyze phi: .MEM_123 = PHI <.MEM_95(9), .MEM_124(13)>

common/dct.c:210:9: note: Analyze phi: ivtmp_230 = PHI <ivtmp_229(9), 4(13)>

common/dct.c:210:9: note: Access function of PHI: {4, +, 4294967295}_4
common/dct.c:210:9: note: step: 4294967295,  init: 4
common/dct.c:210:9: note: Detected induction.
common/dct.c:210:9: note: === vect_pattern_recog ===
common/dct.c:210:9: note: vect_is_simple_use: operand _101
common/dct.c:210:9: note: def_stmt: _101 = -_93;
common/dct.c:210:9: note: type of def: 3.
common/dct.c:210:9: note: vect_is_simple_use: operand iftmp.0_103
common/dct.c:210:9: note: def_stmt: iftmp.0_103 = (unsigned char) _102;
common/dct.c:210:9: note: type of def: 3.
common/dct.c:210:9: note: vect_is_simple_use: operand _102
common/dct.c:210:9: note: def_stmt: _102 = _101 >> 31;
common/dct.c:210:9: note: type of def: 3.
common/dct.c:210:9: note: vect_is_simple_use: operand iftmp.0_104
common/dct.c:210:9: note: def_stmt: iftmp.0_104 = (unsigned char) _93;
common/dct.c:210:9: note: type of def: 3.
common/dct.c:210:9: note: vect_is_simple_use: operand _93
common/dct.c:210:9: note: def_stmt: _93 = _90 + _92;
common/dct.c:210:9: note: type of def: 3.
common/dct.c:210:9: note: vect_recog_mixed_size_cond_pattern: detected:
common/dct.c:210:9: note: pattern recognized: patt_220 = (unsigned char) patt_221;
common/dct.c:210:9: note: === vect_analyze_data_ref_accesses ===
common/dct.c:210:9: note: === vect_mark_stmts_to_be_vectorized ===
common/dct.c:210:9: note: init: phi relevant? x_107 = PHI <x_96(9), 0(13)>
common/dct.c:210:9: note: init: phi relevant? .MEM_123 = PHI <.MEM_95(9), .MEM_124(13)>
common/dct.c:210:9: note: init: phi relevant? ivtmp_230 = PHI <ivtmp_229(9), 4(13)>
common/dct.c:210:9: note: init: stmt relevant? # DEBUG x => NULL
common/dct.c:210:9: note: init: stmt relevant? _87 = (sizetype) x_107;
common/dct.c:210:9: note: init: stmt relevant? _88 = p_dst_17 + _87;
common/dct.c:210:9: note: init: stmt relevant? _89 = *_88;
common/dct.c:210:9: note: init: stmt relevant? _90 = (int) _89;
common/dct.c:210:9: note: init: stmt relevant? _91 = d[y_118][x_107];
common/dct.c:210:9: note: init: stmt relevant? _92 = (int) _91;
common/dct.c:210:9: note: init: stmt relevant? _93 = _90 + _92;
common/dct.c:210:9: note: init: stmt relevant? # DEBUG x => NULL
common/dct.c:210:9: note: init: stmt relevant? _94 = _93 & -256;
common/dct.c:210:9: note: init: stmt relevant? _101 = -_93;
common/dct.c:210:9: note: init: stmt relevant? _102 = _101 >> 31;
common/dct.c:210:9: note: init: stmt relevant? iftmp.0_103 = (unsigned char) _102;
common/dct.c:210:9: note: init: stmt relevant? iftmp.0_104 = (unsigned char) _93;
common/dct.c:210:9: note: init: stmt relevant? iftmp.0_105 = _94 != 0 ? iftmp.0_103 : iftmp.0_104;
common/dct.c:210:9: note: init: stmt relevant? # DEBUG x => NULL
common/dct.c:210:9: note: init: stmt relevant? *_88 = iftmp.0_105;
common/dct.c:210:9: note: vec_stmt_relevant_p: stmt has vdefs.
common/dct.c:210:9: note: mark relevant 4, live 0.
common/dct.c:210:9: note: init: stmt relevant? x_96 = x_107 + 1;
common/dct.c:210:9: note: init: stmt relevant? # DEBUG x => x_96
common/dct.c:210:9: note: init: stmt relevant? # DEBUG x => x_96
common/dct.c:210:9: note: init: stmt relevant? ivtmp_229 = ivtmp_230 - 1;
common/dct.c:210:9: note: init: stmt relevant? if (ivtmp_229 != 0)
common/dct.c:210:9: note: worklist: examine stmt: *_88 = iftmp.0_105;
common/dct.c:210:9: note: vect_is_simple_use: operand iftmp.0_105
common/dct.c:210:9: note: def_stmt: iftmp.0_105 = _94 != 0 ? iftmp.0_103 : iftmp.0_104;
common/dct.c:210:9: note: type of def: 3.
common/dct.c:210:9: note: mark relevant 4, live 0.
common/dct.c:210:9: note: last stmt in pattern. don't mark relevant/live.
common/dct.c:210:9: note: worklist: examine stmt: patt_220 = (unsigned char) patt_221;
common/dct.c:210:9: note: vect_is_simple_use: operand patt_221
common/dct.c:210:9: note: def_stmt: patt_221 = _94 != 0 ? _102 : _93;
common/dct.c:210:9: note: type of def: 3.
common/dct.c:210:9: note: mark relevant 4, live 0.
common/dct.c:210:9: note: worklist: examine stmt: patt_221 = _94 != 0 ? _102 : _93;
common/dct.c:210:9: note: vect_is_simple_use: operand _94
common/dct.c:210:9: note: def_stmt: _94 = _93 & -256;
common/dct.c:210:9: note: type of def: 3.
common/dct.c:210:9: note: mark relevant 4, live 0.
common/dct.c:210:9: note: vect_is_simple_use: operand 0
common/dct.c:210:9: note: vect_is_simple_use: operand _102
common/dct.c:210:9: note: def_stmt: _102 = _101 >> 31;
common/dct.c:210:9: note: type of def: 3.
common/dct.c:210:9: note: mark relevant 4, live 0.
common/dct.c:210:9: note: vect_is_simple_use: operand _93
common/dct.c:210:9: note: def_stmt: _93 = _90 + _92;
common/dct.c:210:9: note: type of def: 3.
common/dct.c:210:9: note: mark relevant 4, live 0.
common/dct.c:210:9: note: worklist: examine stmt: _93 = _90 + _92;
common/dct.c:210:9: note: vect_is_simple_use: operand _90
common/dct.c:210:9: note: def_stmt: _90 = (int) _89;
common/dct.c:210:9: note: type of def: 3.
common/dct.c:210:9: note: mark relevant 4, live 0.
common/dct.c:210:9: note: vect_is_simple_use: operand _92
common/dct.c:210:9: note: def_stmt: _92 = (int) _91;
common/dct.c:210:9: note: type of def: 3.
common/dct.c:210:9: note: mark relevant 4, live 0.
common/dct.c:210:9: note: worklist: examine stmt: _92 = (int) _91;
common/dct.c:210:9: note: vect_is_simple_use: operand _91
common/dct.c:210:9: note: def_stmt: _91 = d[y_118][x_107];
common/dct.c:210:9: note: type of def: 3.
common/dct.c:210:9: note: mark relevant 4, live 0.
common/dct.c:210:9: note: worklist: examine stmt: _91 = d[y_118][x_107];
common/dct.c:210:9: note: worklist: examine stmt: _90 = (int) _89;
common/dct.c:210:9: note: vect_is_simple_use: operand _89
common/dct.c:210:9: note: def_stmt: _89 = *_88;
common/dct.c:210:9: note: type of def: 3.
common/dct.c:210:9: note: mark relevant 4, live 0.
common/dct.c:210:9: note: worklist: examine stmt: _89 = *_88;
common/dct.c:210:9: note: worklist: examine stmt: _102 = _101 >> 31;
common/dct.c:210:9: note: vect_is_simple_use: operand _101
common/dct.c:210:9: note: def_stmt: _101 = -_93;
common/dct.c:210:9: note: type of def: 3.
common/dct.c:210:9: note: mark relevant 4, live 0.
common/dct.c:210:9: note: worklist: examine stmt: _101 = -_93;
common/dct.c:210:9: note: vect_is_simple_use: operand _93
common/dct.c:210:9: note: def_stmt: _93 = _90 + _92;
common/dct.c:210:9: note: type of def: 3.
common/dct.c:210:9: note: mark relevant 4, live 0.
common/dct.c:210:9: note: already marked relevant/live.
common/dct.c:210:9: note: worklist: examine stmt: _94 = _93 & -256;
common/dct.c:210:9: note: vect_is_simple_use: operand _93
common/dct.c:210:9: note: def_stmt: _93 = _90 + _92;
common/dct.c:210:9: note: type of def: 3.
common/dct.c:210:9: note: mark relevant 4, live 0.
common/dct.c:210:9: note: already marked relevant/live.
common/dct.c:210:9: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _89 = *_88;
  stmt_b: _91 = d[y_118][x_107];
) -> no dependence
(compute_affine_dependence
  stmt_a: _89 = *_88;
  stmt_b: *_88 = iftmp.0_105;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_4)
  (chrec_b = {0B, +, 1}_4)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _91 = d[y_118][x_107];
  stmt_b: *_88 = iftmp.0_105;
) -> no dependence
(compute_affine_dependence
  stmt_a: _89 = *_88;
  stmt_b: _89 = *_88;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_4)
  (chrec_b = {0B, +, 1}_4)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _91 = d[y_118][x_107];
  stmt_b: _91 = d[y_118][x_107];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_4)
  (chrec_b = {0, +, 1}_4)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = y_118)
  (chrec_b = y_118)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: *_88 = iftmp.0_105;
  stmt_b: *_88 = iftmp.0_105;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_4)
  (chrec_b = {0B, +, 1}_4)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/dct.c:210:9: note: dependence distance  = 0.
common/dct.c:210:9: note: dependence distance == 0 between *_88 and *_88
common/dct.c:210:9: note: === vect_determine_vectorization_factor ===
common/dct.c:210:9: note: ==> examining phi: x_107 = PHI <x_96(9), 0(13)>

common/dct.c:210:9: note: ==> examining phi: .MEM_123 = PHI <.MEM_95(9), .MEM_124(13)>

common/dct.c:210:9: note: ==> examining phi: ivtmp_230 = PHI <ivtmp_229(9), 4(13)>

common/dct.c:210:9: note: ==> examining statement: # DEBUG x => NULL

common/dct.c:210:9: note: skip.
common/dct.c:210:9: note: ==> examining statement: _87 = (sizetype) x_107;

common/dct.c:210:9: note: skip.
common/dct.c:210:9: note: ==> examining statement: _88 = p_dst_17 + _87;

common/dct.c:210:9: note: skip.
common/dct.c:210:9: note: ==> examining statement: _89 = *_88;

common/dct.c:210:9: note: get vectype for scalar type:  unsigned char
common/dct.c:210:9: note: vectype: vector(16) unsigned char
common/dct.c:210:9: note: nunits = 16
common/dct.c:210:9: note: ==> examining statement: _90 = (int) _89;

common/dct.c:210:9: note: get vectype for scalar type:  int
common/dct.c:210:9: note: vectype: vector(4) int
common/dct.c:210:9: note: get vectype for scalar type:  unsigned char
common/dct.c:210:9: note: vectype: vector(16) unsigned char
common/dct.c:210:9: note: nunits = 16
common/dct.c:210:9: note: ==> examining statement: _91 = d[y_118][x_107];

common/dct.c:210:9: note: get vectype for scalar type:  short int
common/dct.c:210:9: note: vectype: vector(8) short int
common/dct.c:210:9: note: nunits = 8
common/dct.c:210:9: note: ==> examining statement: _92 = (int) _91;

common/dct.c:210:9: note: get vectype for scalar type:  int
common/dct.c:210:9: note: vectype: vector(4) int
common/dct.c:210:9: note: get vectype for scalar type:  short int
common/dct.c:210:9: note: vectype: vector(8) short int
common/dct.c:210:9: note: nunits = 8
common/dct.c:210:9: note: ==> examining statement: _93 = _90 + _92;

common/dct.c:210:9: note: get vectype for scalar type:  int
common/dct.c:210:9: note: vectype: vector(4) int
common/dct.c:210:9: note: get vectype for scalar type:  int
common/dct.c:210:9: note: vectype: vector(4) int
common/dct.c:210:9: note: nunits = 4
common/dct.c:210:9: note: ==> examining statement: # DEBUG x => NULL

common/dct.c:210:9: note: skip.
common/dct.c:210:9: note: ==> examining statement: _94 = _93 & -256;

common/dct.c:210:9: note: get vectype for scalar type:  int
common/dct.c:210:9: note: vectype: vector(4) int
common/dct.c:210:9: note: get vectype for scalar type:  int
common/dct.c:210:9: note: vectype: vector(4) int
common/dct.c:210:9: note: nunits = 4
common/dct.c:210:9: note: ==> examining statement: _101 = -_93;

common/dct.c:210:9: note: get vectype for scalar type:  int
common/dct.c:210:9: note: vectype: vector(4) int
common/dct.c:210:9: note: get vectype for scalar type:  int
common/dct.c:210:9: note: vectype: vector(4) int
common/dct.c:210:9: note: nunits = 4
common/dct.c:210:9: note: ==> examining statement: _102 = _101 >> 31;

common/dct.c:210:9: note: get vectype for scalar type:  int
common/dct.c:210:9: note: vectype: vector(4) int
common/dct.c:210:9: note: get vectype for scalar type:  int
common/dct.c:210:9: note: vectype: vector(4) int
common/dct.c:210:9: note: nunits = 4
common/dct.c:210:9: note: ==> examining statement: iftmp.0_103 = (unsigned char) _102;

common/dct.c:210:9: note: skip.
common/dct.c:210:9: note: ==> examining statement: iftmp.0_104 = (unsigned char) _93;

common/dct.c:210:9: note: skip.
common/dct.c:210:9: note: ==> examining statement: iftmp.0_105 = _94 != 0 ? iftmp.0_103 : iftmp.0_104;

common/dct.c:210:9: note: ==> examining pattern statement: patt_220 = (unsigned char) patt_221;

common/dct.c:210:9: note: ==> examining pattern def stmt: patt_221 = _94 != 0 ? _102 : _93;

common/dct.c:210:9: note: get vectype for scalar type:  int
common/dct.c:210:9: note: vectype: vector(4) int
common/dct.c:210:9: note: nunits = 4
common/dct.c:210:9: note: ==> examining statement: iftmp.0_105 = _94 != 0 ? iftmp.0_103 : iftmp.0_104;

common/dct.c:210:9: note: ==> examining pattern statement: patt_220 = (unsigned char) patt_221;

common/dct.c:210:9: note: get vectype for scalar type:  unsigned char
common/dct.c:210:9: note: vectype: vector(16) unsigned char
common/dct.c:210:9: note: nunits = 16
common/dct.c:210:9: note: ==> examining statement: # DEBUG x => NULL

common/dct.c:210:9: note: skip.
common/dct.c:210:9: note: ==> examining statement: *_88 = iftmp.0_105;

common/dct.c:210:9: note: get vectype for scalar type:  uint8_t
common/dct.c:210:9: note: vectype: vector(16) unsigned char
common/dct.c:210:9: note: nunits = 16
common/dct.c:210:9: note: ==> examining statement: x_96 = x_107 + 1;

common/dct.c:210:9: note: skip.
common/dct.c:210:9: note: ==> examining statement: # DEBUG x => x_96

common/dct.c:210:9: note: skip.
common/dct.c:210:9: note: ==> examining statement: # DEBUG x => x_96

common/dct.c:210:9: note: skip.
common/dct.c:210:9: note: ==> examining statement: ivtmp_229 = ivtmp_230 - 1;

common/dct.c:210:9: note: skip.
common/dct.c:210:9: note: ==> examining statement: if (ivtmp_229 != 0)

common/dct.c:210:9: note: skip.
common/dct.c:210:9: note: vectorization factor = 16
common/dct.c:210:9: note: === vect_analyze_data_refs_alignment ===
common/dct.c:210:9: note: dependence distance  = 0.
common/dct.c:210:9: note: accesses have the same alignment.
dependence distance modulo vf == 0 between *_88 and *_88
common/dct.c:210:9: note: vect_compute_data_ref_alignment:
common/dct.c:210:9: note: can't force alignment of ref: *_88
common/dct.c:210:9: note: vect_compute_data_ref_alignment:
common/dct.c:210:9: note: Unknown alignment for access: d[y_118][x_107]
common/dct.c:210:9: note: vect_compute_data_ref_alignment:
common/dct.c:210:9: note: can't force alignment of ref: *_88
common/dct.c:210:9: note: === vect_prune_runtime_alias_test_list ===
common/dct.c:210:9: note: === vect_enhance_data_refs_alignment ===
common/dct.c:210:9: note: Unknown misalignment, is_packed = 0
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
common/dct.c:210:9: note: Unknown misalignment, is_packed = 0
common/dct.c:210:9: note: Unknown misalignment, is_packed = 0
common/dct.c:210:9: note: vect_can_advance_ivs_p:
common/dct.c:210:9: note: Analyze phi: x_107 = PHI <x_96(9), 0(13)>

common/dct.c:210:9: note: Analyze phi: .MEM_123 = PHI <.MEM_95(9), .MEM_124(13)>

common/dct.c:210:9: note: virtual phi. skip.
common/dct.c:210:9: note: Analyze phi: ivtmp_230 = PHI <ivtmp_229(9), 4(13)>

Applying pattern match.pd:49, generic-match.c:3223
common/dct.c:210:9: note: Vectorizing an unaligned access.
Applying pattern match.pd:49, generic-match.c:3223
common/dct.c:210:9: note: Vectorizing an unaligned access.
common/dct.c:210:9: note: Vectorizing an unaligned access.
common/dct.c:210:9: note: === vect_analyze_slp ===
common/dct.c:210:9: note: === vect_make_slp_decision ===
common/dct.c:210:9: note: === vect_detect_hybrid_slp ===
common/dct.c:210:9: note: === vect_analyze_loop_operations ===
common/dct.c:210:9: note: examining phi: x_107 = PHI <x_96(9), 0(13)>

common/dct.c:210:9: note: examining phi: .MEM_123 = PHI <.MEM_95(9), .MEM_124(13)>

common/dct.c:210:9: note: examining phi: ivtmp_230 = PHI <ivtmp_229(9), 4(13)>

common/dct.c:210:9: note: ==> examining statement: # DEBUG x => NULL
common/dct.c:210:9: note: irrelevant.
common/dct.c:210:9: note: ==> examining statement: _87 = (sizetype) x_107;
common/dct.c:210:9: note: irrelevant.
common/dct.c:210:9: note: ==> examining statement: _88 = p_dst_17 + _87;
common/dct.c:210:9: note: irrelevant.
common/dct.c:210:9: note: ==> examining statement: _89 = *_88;
common/dct.c:210:9: note: vect_is_simple_use: operand *_88
common/dct.c:210:9: note: not ssa-name.
common/dct.c:210:9: note: use not simple.
common/dct.c:210:9: note: vect_is_simple_use: operand *_88
common/dct.c:210:9: note: not ssa-name.
common/dct.c:210:9: note: use not simple.
common/dct.c:210:9: note: vect_model_load_cost: unaligned supported by hardware.
common/dct.c:210:9: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:210:9: note: ==> examining statement: _90 = (int) _89;
common/dct.c:210:9: note: vect_is_simple_use: operand _89
common/dct.c:210:9: note: def_stmt: _89 = *_88;
common/dct.c:210:9: note: type of def: 3.
common/dct.c:210:9: note: === vectorizable_conversion ===
common/dct.c:210:9: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/dct.c:210:9: note: ==> examining statement: _91 = d[y_118][x_107];
common/dct.c:210:9: note: num. args = 4 (not unary/binary/ternary op).
common/dct.c:210:9: note: vect_is_simple_use: operand d[y_118][x_107]
common/dct.c:210:9: note: not ssa-name.
common/dct.c:210:9: note: use not simple.
Applying pattern match.pd:49, generic-match.c:3223
common/dct.c:210:9: note: vect_model_load_cost: unaligned supported by hardware.
common/dct.c:210:9: note: vect_model_load_cost: inside_cost = 4, prologue_cost = 0 .
common/dct.c:210:9: note: ==> examining statement: _92 = (int) _91;
common/dct.c:210:9: note: vect_is_simple_use: operand _91
common/dct.c:210:9: note: def_stmt: _91 = d[y_118][x_107];
common/dct.c:210:9: note: type of def: 3.
common/dct.c:210:9: note: === vectorizable_conversion ===
common/dct.c:210:9: note: vect_model_promotion_demotion_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:210:9: note: ==> examining statement: _93 = _90 + _92;
common/dct.c:210:9: note: vect_is_simple_use: operand _90
common/dct.c:210:9: note: def_stmt: _90 = (int) _89;
common/dct.c:210:9: note: type of def: 3.
common/dct.c:210:9: note: vect_is_simple_use: operand _92
common/dct.c:210:9: note: def_stmt: _92 = (int) _91;
common/dct.c:210:9: note: type of def: 3.
common/dct.c:210:9: note: === vectorizable_operation ===
common/dct.c:210:9: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/dct.c:210:9: note: ==> examining statement: # DEBUG x => NULL
common/dct.c:210:9: note: irrelevant.
common/dct.c:210:9: note: ==> examining statement: _94 = _93 & -256;
common/dct.c:210:9: note: vect_is_simple_use: operand _93
common/dct.c:210:9: note: def_stmt: _93 = _90 + _92;
common/dct.c:210:9: note: type of def: 3.
common/dct.c:210:9: note: vect_is_simple_use: operand -256
common/dct.c:210:9: note: === vectorizable_operation ===
common/dct.c:210:9: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 1 .
common/dct.c:210:9: note: ==> examining statement: _101 = -_93;
common/dct.c:210:9: note: vect_is_simple_use: operand _93
common/dct.c:210:9: note: def_stmt: _93 = _90 + _92;
common/dct.c:210:9: note: type of def: 3.
common/dct.c:210:9: note: === vectorizable_operation ===
common/dct.c:210:9: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/dct.c:210:9: note: ==> examining statement: _102 = _101 >> 31;
common/dct.c:210:9: note: vect_is_simple_use: operand _101
common/dct.c:210:9: note: def_stmt: _101 = -_93;
common/dct.c:210:9: note: type of def: 3.
common/dct.c:210:9: note: vect_is_simple_use: operand 31
common/dct.c:210:9: note: vector/scalar shift/rotate found.
common/dct.c:210:9: note: === vectorizable_shift ===
common/dct.c:210:9: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 1 .
common/dct.c:210:9: note: ==> examining statement: iftmp.0_103 = (unsigned char) _102;
common/dct.c:210:9: note: irrelevant.
common/dct.c:210:9: note: ==> examining statement: iftmp.0_104 = (unsigned char) _93;
common/dct.c:210:9: note: irrelevant.
common/dct.c:210:9: note: ==> examining statement: iftmp.0_105 = _94 != 0 ? iftmp.0_103 : iftmp.0_104;
common/dct.c:210:9: note: ==> examining pattern statement: patt_220 = (unsigned char) patt_221;
common/dct.c:210:9: note: ==> examining pattern def statement: patt_221 = _94 != 0 ? _102 : _93;
common/dct.c:210:9: note: ==> examining statement: patt_221 = _94 != 0 ? _102 : _93;
common/dct.c:210:9: note: vect_is_simple_use: operand _94 != 0
common/dct.c:210:9: note: not ssa-name.
common/dct.c:210:9: note: use not simple.
common/dct.c:210:9: note: vect_is_simple_use: operand _94
common/dct.c:210:9: note: def_stmt: _94 = _93 & -256;
common/dct.c:210:9: note: type of def: 3.
common/dct.c:210:9: note: vect_is_simple_use: operand _102
common/dct.c:210:9: note: def_stmt: _102 = _101 >> 31;
common/dct.c:210:9: note: type of def: 3.
common/dct.c:210:9: note: vect_is_simple_use: operand _93
common/dct.c:210:9: note: def_stmt: _93 = _90 + _92;
common/dct.c:210:9: note: type of def: 3.
common/dct.c:210:9: note: vect_is_simple_use: operand patt_221
common/dct.c:210:9: note: def_stmt: patt_221 = _94 != 0 ? _102 : _93;
common/dct.c:210:9: note: type of def: 3.
common/dct.c:210:9: note: === vectorizable_conversion ===
common/dct.c:210:9: note: vect_model_promotion_demotion_cost: inside_cost = 3, prologue_cost = 0 .
common/dct.c:210:9: note: ==> examining statement: # DEBUG x => NULL
common/dct.c:210:9: note: irrelevant.
common/dct.c:210:9: note: ==> examining statement: *_88 = iftmp.0_105;
common/dct.c:210:9: note: vect_is_simple_use: operand iftmp.0_105
common/dct.c:210:9: note: def_stmt: iftmp.0_105 = _94 != 0 ? iftmp.0_103 : iftmp.0_104;
common/dct.c:210:9: note: type of def: 3.
common/dct.c:210:9: note: vect_model_store_cost: unaligned supported by hardware.
common/dct.c:210:9: note: vect_model_store_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:210:9: note: ==> examining statement: x_96 = x_107 + 1;
common/dct.c:210:9: note: irrelevant.
common/dct.c:210:9: note: ==> examining statement: # DEBUG x => x_96
common/dct.c:210:9: note: irrelevant.
common/dct.c:210:9: note: ==> examining statement: # DEBUG x => x_96
common/dct.c:210:9: note: irrelevant.
common/dct.c:210:9: note: ==> examining statement: ivtmp_229 = ivtmp_230 - 1;
common/dct.c:210:9: note: irrelevant.
common/dct.c:210:9: note: ==> examining statement: if (ivtmp_229 != 0)
common/dct.c:210:9: note: irrelevant.
common/dct.c:210:9: note: vectorization_factor = 16, niters = 4
common/dct.c:210:9: note: not vectorized: iteration count too small.
common/dct.c:210:9: note: not vectorized: iteration count smaller than vectorization factor.
common/dct.c:210:9: note: bad operation or unsupported loop bound.

Analyzing loop at common/dct.c:194
common/dct.c:194:5: note: ===== analyze_loop_nest =====
common/dct.c:194:5: note: === vect_analyze_loop_form ===
common/dct.c:194:5: note: === get_loop_niters ===
Analyzing # of iterations of loop 2
  exit condition [3, + , 4294967295] != 0
  bounds on difference of bases: -3 ... -3
  result:
    # of iterations 3, bounded by 3
common/dct.c:194:5: note: === vect_analyze_data_refs ===
Creating dr for tmp[0][i_120]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &tmp
	offset from base address: 0
	constant offset from base address: 0
	step: 2
	aligned to: 128
	base_object: tmp
	Access function 0: {0, +, 1}_2
	Access function 1: 0
Creating dr for tmp[2][i_120]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &tmp
	offset from base address: 0
	constant offset from base address: 16
	step: 2
	aligned to: 128
	base_object: tmp
	Access function 0: {0, +, 1}_2
	Access function 1: 2
Creating dr for tmp[1][i_120]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &tmp
	offset from base address: 0
	constant offset from base address: 8
	step: 2
	aligned to: 128
	base_object: tmp
	Access function 0: {0, +, 1}_2
	Access function 1: 1
Creating dr for tmp[3][i_120]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &tmp
	offset from base address: 0
	constant offset from base address: 24
	step: 2
	aligned to: 128
	base_object: tmp
	Access function 0: {0, +, 1}_2
	Access function 1: 3
Creating dr for d[0][i_120]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &d
	offset from base address: 0
	constant offset from base address: 0
	step: 2
	aligned to: 128
	base_object: d
	Access function 0: {0, +, 1}_2
	Access function 1: 0
Creating dr for d[1][i_120]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &d
	offset from base address: 0
	constant offset from base address: 8
	step: 2
	aligned to: 128
	base_object: d
	Access function 0: {0, +, 1}_2
	Access function 1: 1
Creating dr for d[2][i_120]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &d
	offset from base address: 0
	constant offset from base address: 16
	step: 2
	aligned to: 128
	base_object: d
	Access function 0: {0, +, 1}_2
	Access function 1: 2
Creating dr for d[3][i_120]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &d
	offset from base address: 0
	constant offset from base address: 24
	step: 2
	aligned to: 128
	base_object: d
	Access function 0: {0, +, 1}_2
	Access function 1: 3
common/dct.c:194:5: note: got vectype for stmt: _49 = tmp[0][i_120];
vector(8) short int
common/dct.c:194:5: note: got vectype for stmt: _51 = tmp[2][i_120];
vector(8) short int
common/dct.c:194:5: note: got vectype for stmt: _55 = tmp[1][i_120];
vector(8) short int
common/dct.c:194:5: note: got vectype for stmt: _57 = tmp[3][i_120];
vector(8) short int
common/dct.c:194:5: note: got vectype for stmt: d[0][i_120] = _68;
vector(8) short int
common/dct.c:194:5: note: got vectype for stmt: d[1][i_120] = _73;
vector(8) short int
common/dct.c:194:5: note: got vectype for stmt: d[2][i_120] = _78;
vector(8) short int
common/dct.c:194:5: note: got vectype for stmt: d[3][i_120] = _83;
vector(8) short int
common/dct.c:194:5: note: === vect_analyze_scalar_cycles ===
common/dct.c:194:5: note: Analyze phi: i_120 = PHI <0(5), i_85(8)>

common/dct.c:194:5: note: Access function of PHI: {0, +, 1}_2
common/dct.c:194:5: note: step: 1,  init: 0
common/dct.c:194:5: note: Detected induction.
common/dct.c:194:5: note: Analyze phi: .MEM_122 = PHI <.MEM_47(5), .MEM_84(8)>

common/dct.c:194:5: note: Analyze phi: ivtmp_226 = PHI <4(5), ivtmp_225(8)>

common/dct.c:194:5: note: Access function of PHI: {4, +, 4294967295}_2
common/dct.c:194:5: note: step: 4294967295,  init: 4
common/dct.c:194:5: note: Detected induction.
common/dct.c:194:5: note: === vect_pattern_recog ===
common/dct.c:194:5: note: vect_is_simple_use: operand _66
common/dct.c:194:5: note: def_stmt: _66 = _65 + 32;
common/dct.c:194:5: note: type of def: 3.
common/dct.c:194:5: note: vect_is_simple_use: operand _71
common/dct.c:194:5: note: def_stmt: _71 = _70 + 32;
common/dct.c:194:5: note: type of def: 3.
common/dct.c:194:5: note: vect_is_simple_use: operand _76
common/dct.c:194:5: note: def_stmt: _76 = _75 + 32;
common/dct.c:194:5: note: type of def: 3.
common/dct.c:194:5: note: vect_is_simple_use: operand _81
common/dct.c:194:5: note: def_stmt: _81 = _80 + 32;
common/dct.c:194:5: note: type of def: 3.
common/dct.c:194:5: note: === vect_analyze_data_ref_accesses ===
common/dct.c:194:5: note: === vect_mark_stmts_to_be_vectorized ===
common/dct.c:194:5: note: init: phi relevant? i_120 = PHI <0(5), i_85(8)>
common/dct.c:194:5: note: init: phi relevant? .MEM_122 = PHI <.MEM_47(5), .MEM_84(8)>
common/dct.c:194:5: note: init: phi relevant? ivtmp_226 = PHI <4(5), ivtmp_225(8)>
common/dct.c:194:5: note: init: stmt relevant? # DEBUG i => i_120
common/dct.c:194:5: note: init: stmt relevant? _49 = tmp[0][i_120];
common/dct.c:194:5: note: init: stmt relevant? _50 = (int) _49;
common/dct.c:194:5: note: init: stmt relevant? _51 = tmp[2][i_120];
common/dct.c:194:5: note: init: stmt relevant? _52 = (int) _51;
common/dct.c:194:5: note: init: stmt relevant? s02_53 = _50 + _52;
common/dct.c:194:5: note: init: stmt relevant? # DEBUG s02 => s02_53
common/dct.c:194:5: note: init: stmt relevant? d02_54 = _50 - _52;
common/dct.c:194:5: note: init: stmt relevant? # DEBUG d02 => d02_54
common/dct.c:194:5: note: init: stmt relevant? _55 = tmp[1][i_120];
common/dct.c:194:5: note: init: stmt relevant? _56 = (int) _55;
common/dct.c:194:5: note: init: stmt relevant? _57 = tmp[3][i_120];
common/dct.c:194:5: note: init: stmt relevant? _58 = _57 >> 1;
common/dct.c:194:5: note: init: stmt relevant? _59 = (int) _58;
common/dct.c:194:5: note: init: stmt relevant? s13_60 = _56 + _59;
common/dct.c:194:5: note: init: stmt relevant? # DEBUG s13 => s13_60
common/dct.c:194:5: note: init: stmt relevant? _61 = _55 >> 1;
common/dct.c:194:5: note: init: stmt relevant? _62 = (int) _61;
common/dct.c:194:5: note: init: stmt relevant? _63 = (int) _57;
common/dct.c:194:5: note: init: stmt relevant? d13_64 = _62 - _63;
common/dct.c:194:5: note: init: stmt relevant? # DEBUG d13 => d13_64
common/dct.c:194:5: note: init: stmt relevant? _65 = s02_53 + s13_60;
common/dct.c:194:5: note: init: stmt relevant? _66 = _65 + 32;
common/dct.c:194:5: note: init: stmt relevant? _67 = _66 >> 6;
common/dct.c:194:5: note: init: stmt relevant? _68 = (short int) _67;
common/dct.c:194:5: note: init: stmt relevant? d[0][i_120] = _68;
common/dct.c:194:5: note: vec_stmt_relevant_p: stmt has vdefs.
common/dct.c:194:5: note: mark relevant 4, live 0.
common/dct.c:194:5: note: init: stmt relevant? _70 = d02_54 + d13_64;
common/dct.c:194:5: note: init: stmt relevant? _71 = _70 + 32;
common/dct.c:194:5: note: init: stmt relevant? _72 = _71 >> 6;
common/dct.c:194:5: note: init: stmt relevant? _73 = (short int) _72;
common/dct.c:194:5: note: init: stmt relevant? d[1][i_120] = _73;
common/dct.c:194:5: note: vec_stmt_relevant_p: stmt has vdefs.
common/dct.c:194:5: note: mark relevant 4, live 0.
common/dct.c:194:5: note: init: stmt relevant? _75 = d02_54 - d13_64;
common/dct.c:194:5: note: init: stmt relevant? _76 = _75 + 32;
common/dct.c:194:5: note: init: stmt relevant? _77 = _76 >> 6;
common/dct.c:194:5: note: init: stmt relevant? _78 = (short int) _77;
common/dct.c:194:5: note: init: stmt relevant? d[2][i_120] = _78;
common/dct.c:194:5: note: vec_stmt_relevant_p: stmt has vdefs.
common/dct.c:194:5: note: mark relevant 4, live 0.
common/dct.c:194:5: note: init: stmt relevant? _80 = s02_53 - s13_60;
common/dct.c:194:5: note: init: stmt relevant? _81 = _80 + 32;
common/dct.c:194:5: note: init: stmt relevant? _82 = _81 >> 6;
common/dct.c:194:5: note: init: stmt relevant? _83 = (short int) _82;
common/dct.c:194:5: note: init: stmt relevant? d[3][i_120] = _83;
common/dct.c:194:5: note: vec_stmt_relevant_p: stmt has vdefs.
common/dct.c:194:5: note: mark relevant 4, live 0.
common/dct.c:194:5: note: init: stmt relevant? i_85 = i_120 + 1;
common/dct.c:194:5: note: init: stmt relevant? # DEBUG i => i_85
common/dct.c:194:5: note: init: stmt relevant? # DEBUG i => i_85
common/dct.c:194:5: note: init: stmt relevant? ivtmp_225 = ivtmp_226 - 1;
common/dct.c:194:5: note: init: stmt relevant? if (ivtmp_225 != 0)
common/dct.c:194:5: note: worklist: examine stmt: d[3][i_120] = _83;
common/dct.c:194:5: note: vect_is_simple_use: operand _83
common/dct.c:194:5: note: def_stmt: _83 = (short int) _82;
common/dct.c:194:5: note: type of def: 3.
common/dct.c:194:5: note: mark relevant 4, live 0.
common/dct.c:194:5: note: worklist: examine stmt: _83 = (short int) _82;
common/dct.c:194:5: note: vect_is_simple_use: operand _82
common/dct.c:194:5: note: def_stmt: _82 = _81 >> 6;
common/dct.c:194:5: note: type of def: 3.
common/dct.c:194:5: note: mark relevant 4, live 0.
common/dct.c:194:5: note: worklist: examine stmt: _82 = _81 >> 6;
common/dct.c:194:5: note: vect_is_simple_use: operand _81
common/dct.c:194:5: note: def_stmt: _81 = _80 + 32;
common/dct.c:194:5: note: type of def: 3.
common/dct.c:194:5: note: mark relevant 4, live 0.
common/dct.c:194:5: note: worklist: examine stmt: _81 = _80 + 32;
common/dct.c:194:5: note: vect_is_simple_use: operand _80
common/dct.c:194:5: note: def_stmt: _80 = s02_53 - s13_60;
common/dct.c:194:5: note: type of def: 3.
common/dct.c:194:5: note: mark relevant 4, live 0.
common/dct.c:194:5: note: worklist: examine stmt: _80 = s02_53 - s13_60;
common/dct.c:194:5: note: vect_is_simple_use: operand s02_53
common/dct.c:194:5: note: def_stmt: s02_53 = _50 + _52;
common/dct.c:194:5: note: type of def: 3.
common/dct.c:194:5: note: mark relevant 4, live 0.
common/dct.c:194:5: note: vect_is_simple_use: operand s13_60
common/dct.c:194:5: note: def_stmt: s13_60 = _56 + _59;
common/dct.c:194:5: note: type of def: 3.
common/dct.c:194:5: note: mark relevant 4, live 0.
common/dct.c:194:5: note: worklist: examine stmt: s13_60 = _56 + _59;
common/dct.c:194:5: note: vect_is_simple_use: operand _56
common/dct.c:194:5: note: def_stmt: _56 = (int) _55;
common/dct.c:194:5: note: type of def: 3.
common/dct.c:194:5: note: mark relevant 4, live 0.
common/dct.c:194:5: note: vect_is_simple_use: operand _59
common/dct.c:194:5: note: def_stmt: _59 = (int) _58;
common/dct.c:194:5: note: type of def: 3.
common/dct.c:194:5: note: mark relevant 4, live 0.
common/dct.c:194:5: note: worklist: examine stmt: _59 = (int) _58;
common/dct.c:194:5: note: vect_is_simple_use: operand _58
common/dct.c:194:5: note: def_stmt: _58 = _57 >> 1;
common/dct.c:194:5: note: type of def: 3.
common/dct.c:194:5: note: mark relevant 4, live 0.
common/dct.c:194:5: note: worklist: examine stmt: _58 = _57 >> 1;
common/dct.c:194:5: note: vect_is_simple_use: operand _57
common/dct.c:194:5: note: def_stmt: _57 = tmp[3][i_120];
common/dct.c:194:5: note: type of def: 3.
common/dct.c:194:5: note: mark relevant 4, live 0.
common/dct.c:194:5: note: worklist: examine stmt: _57 = tmp[3][i_120];
common/dct.c:194:5: note: worklist: examine stmt: _56 = (int) _55;
common/dct.c:194:5: note: vect_is_simple_use: operand _55
common/dct.c:194:5: note: def_stmt: _55 = tmp[1][i_120];
common/dct.c:194:5: note: type of def: 3.
common/dct.c:194:5: note: mark relevant 4, live 0.
common/dct.c:194:5: note: worklist: examine stmt: _55 = tmp[1][i_120];
common/dct.c:194:5: note: worklist: examine stmt: s02_53 = _50 + _52;
common/dct.c:194:5: note: vect_is_simple_use: operand _50
common/dct.c:194:5: note: def_stmt: _50 = (int) _49;
common/dct.c:194:5: note: type of def: 3.
common/dct.c:194:5: note: mark relevant 4, live 0.
common/dct.c:194:5: note: vect_is_simple_use: operand _52
common/dct.c:194:5: note: def_stmt: _52 = (int) _51;
common/dct.c:194:5: note: type of def: 3.
common/dct.c:194:5: note: mark relevant 4, live 0.
common/dct.c:194:5: note: worklist: examine stmt: _52 = (int) _51;
common/dct.c:194:5: note: vect_is_simple_use: operand _51
common/dct.c:194:5: note: def_stmt: _51 = tmp[2][i_120];
common/dct.c:194:5: note: type of def: 3.
common/dct.c:194:5: note: mark relevant 4, live 0.
common/dct.c:194:5: note: worklist: examine stmt: _51 = tmp[2][i_120];
common/dct.c:194:5: note: worklist: examine stmt: _50 = (int) _49;
common/dct.c:194:5: note: vect_is_simple_use: operand _49
common/dct.c:194:5: note: def_stmt: _49 = tmp[0][i_120];
common/dct.c:194:5: note: type of def: 3.
common/dct.c:194:5: note: mark relevant 4, live 0.
common/dct.c:194:5: note: worklist: examine stmt: _49 = tmp[0][i_120];
common/dct.c:194:5: note: worklist: examine stmt: d[2][i_120] = _78;
common/dct.c:194:5: note: vect_is_simple_use: operand _78
common/dct.c:194:5: note: def_stmt: _78 = (short int) _77;
common/dct.c:194:5: note: type of def: 3.
common/dct.c:194:5: note: mark relevant 4, live 0.
common/dct.c:194:5: note: worklist: examine stmt: _78 = (short int) _77;
common/dct.c:194:5: note: vect_is_simple_use: operand _77
common/dct.c:194:5: note: def_stmt: _77 = _76 >> 6;
common/dct.c:194:5: note: type of def: 3.
common/dct.c:194:5: note: mark relevant 4, live 0.
common/dct.c:194:5: note: worklist: examine stmt: _77 = _76 >> 6;
common/dct.c:194:5: note: vect_is_simple_use: operand _76
common/dct.c:194:5: note: def_stmt: _76 = _75 + 32;
common/dct.c:194:5: note: type of def: 3.
common/dct.c:194:5: note: mark relevant 4, live 0.
common/dct.c:194:5: note: worklist: examine stmt: _76 = _75 + 32;
common/dct.c:194:5: note: vect_is_simple_use: operand _75
common/dct.c:194:5: note: def_stmt: _75 = d02_54 - d13_64;
common/dct.c:194:5: note: type of def: 3.
common/dct.c:194:5: note: mark relevant 4, live 0.
common/dct.c:194:5: note: worklist: examine stmt: _75 = d02_54 - d13_64;
common/dct.c:194:5: note: vect_is_simple_use: operand d02_54
common/dct.c:194:5: note: def_stmt: d02_54 = _50 - _52;
common/dct.c:194:5: note: type of def: 3.
common/dct.c:194:5: note: mark relevant 4, live 0.
common/dct.c:194:5: note: vect_is_simple_use: operand d13_64
common/dct.c:194:5: note: def_stmt: d13_64 = _62 - _63;
common/dct.c:194:5: note: type of def: 3.
common/dct.c:194:5: note: mark relevant 4, live 0.
common/dct.c:194:5: note: worklist: examine stmt: d13_64 = _62 - _63;
common/dct.c:194:5: note: vect_is_simple_use: operand _62
common/dct.c:194:5: note: def_stmt: _62 = (int) _61;
common/dct.c:194:5: note: type of def: 3.
common/dct.c:194:5: note: mark relevant 4, live 0.
common/dct.c:194:5: note: vect_is_simple_use: operand _63
common/dct.c:194:5: note: def_stmt: _63 = (int) _57;
common/dct.c:194:5: note: type of def: 3.
common/dct.c:194:5: note: mark relevant 4, live 0.
common/dct.c:194:5: note: worklist: examine stmt: _63 = (int) _57;
common/dct.c:194:5: note: vect_is_simple_use: operand _57
common/dct.c:194:5: note: def_stmt: _57 = tmp[3][i_120];
common/dct.c:194:5: note: type of def: 3.
common/dct.c:194:5: note: mark relevant 4, live 0.
common/dct.c:194:5: note: already marked relevant/live.
common/dct.c:194:5: note: worklist: examine stmt: _62 = (int) _61;
common/dct.c:194:5: note: vect_is_simple_use: operand _61
common/dct.c:194:5: note: def_stmt: _61 = _55 >> 1;
common/dct.c:194:5: note: type of def: 3.
common/dct.c:194:5: note: mark relevant 4, live 0.
common/dct.c:194:5: note: worklist: examine stmt: _61 = _55 >> 1;
common/dct.c:194:5: note: vect_is_simple_use: operand _55
common/dct.c:194:5: note: def_stmt: _55 = tmp[1][i_120];
common/dct.c:194:5: note: type of def: 3.
common/dct.c:194:5: note: mark relevant 4, live 0.
common/dct.c:194:5: note: already marked relevant/live.
common/dct.c:194:5: note: worklist: examine stmt: d02_54 = _50 - _52;
common/dct.c:194:5: note: vect_is_simple_use: operand _50
common/dct.c:194:5: note: def_stmt: _50 = (int) _49;
common/dct.c:194:5: note: type of def: 3.
common/dct.c:194:5: note: mark relevant 4, live 0.
common/dct.c:194:5: note: already marked relevant/live.
common/dct.c:194:5: note: vect_is_simple_use: operand _52
common/dct.c:194:5: note: def_stmt: _52 = (int) _51;
common/dct.c:194:5: note: type of def: 3.
common/dct.c:194:5: note: mark relevant 4, live 0.
common/dct.c:194:5: note: already marked relevant/live.
common/dct.c:194:5: note: worklist: examine stmt: d[1][i_120] = _73;
common/dct.c:194:5: note: vect_is_simple_use: operand _73
common/dct.c:194:5: note: def_stmt: _73 = (short int) _72;
common/dct.c:194:5: note: type of def: 3.
common/dct.c:194:5: note: mark relevant 4, live 0.
common/dct.c:194:5: note: worklist: examine stmt: _73 = (short int) _72;
common/dct.c:194:5: note: vect_is_simple_use: operand _72
common/dct.c:194:5: note: def_stmt: _72 = _71 >> 6;
common/dct.c:194:5: note: type of def: 3.
common/dct.c:194:5: note: mark relevant 4, live 0.
common/dct.c:194:5: note: worklist: examine stmt: _72 = _71 >> 6;
common/dct.c:194:5: note: vect_is_simple_use: operand _71
common/dct.c:194:5: note: def_stmt: _71 = _70 + 32;
common/dct.c:194:5: note: type of def: 3.
common/dct.c:194:5: note: mark relevant 4, live 0.
common/dct.c:194:5: note: worklist: examine stmt: _71 = _70 + 32;
common/dct.c:194:5: note: vect_is_simple_use: operand _70
common/dct.c:194:5: note: def_stmt: _70 = d02_54 + d13_64;
common/dct.c:194:5: note: type of def: 3.
common/dct.c:194:5: note: mark relevant 4, live 0.
common/dct.c:194:5: note: worklist: examine stmt: _70 = d02_54 + d13_64;
common/dct.c:194:5: note: vect_is_simple_use: operand d02_54
common/dct.c:194:5: note: def_stmt: d02_54 = _50 - _52;
common/dct.c:194:5: note: type of def: 3.
common/dct.c:194:5: note: mark relevant 4, live 0.
common/dct.c:194:5: note: already marked relevant/live.
common/dct.c:194:5: note: vect_is_simple_use: operand d13_64
common/dct.c:194:5: note: def_stmt: d13_64 = _62 - _63;
common/dct.c:194:5: note: type of def: 3.
common/dct.c:194:5: note: mark relevant 4, live 0.
common/dct.c:194:5: note: already marked relevant/live.
common/dct.c:194:5: note: worklist: examine stmt: d[0][i_120] = _68;
common/dct.c:194:5: note: vect_is_simple_use: operand _68
common/dct.c:194:5: note: def_stmt: _68 = (short int) _67;
common/dct.c:194:5: note: type of def: 3.
common/dct.c:194:5: note: mark relevant 4, live 0.
common/dct.c:194:5: note: worklist: examine stmt: _68 = (short int) _67;
common/dct.c:194:5: note: vect_is_simple_use: operand _67
common/dct.c:194:5: note: def_stmt: _67 = _66 >> 6;
common/dct.c:194:5: note: type of def: 3.
common/dct.c:194:5: note: mark relevant 4, live 0.
common/dct.c:194:5: note: worklist: examine stmt: _67 = _66 >> 6;
common/dct.c:194:5: note: vect_is_simple_use: operand _66
common/dct.c:194:5: note: def_stmt: _66 = _65 + 32;
common/dct.c:194:5: note: type of def: 3.
common/dct.c:194:5: note: mark relevant 4, live 0.
common/dct.c:194:5: note: worklist: examine stmt: _66 = _65 + 32;
common/dct.c:194:5: note: vect_is_simple_use: operand _65
common/dct.c:194:5: note: def_stmt: _65 = s02_53 + s13_60;
common/dct.c:194:5: note: type of def: 3.
common/dct.c:194:5: note: mark relevant 4, live 0.
common/dct.c:194:5: note: worklist: examine stmt: _65 = s02_53 + s13_60;
common/dct.c:194:5: note: vect_is_simple_use: operand s02_53
common/dct.c:194:5: note: def_stmt: s02_53 = _50 + _52;
common/dct.c:194:5: note: type of def: 3.
common/dct.c:194:5: note: mark relevant 4, live 0.
common/dct.c:194:5: note: already marked relevant/live.
common/dct.c:194:5: note: vect_is_simple_use: operand s13_60
common/dct.c:194:5: note: def_stmt: s13_60 = _56 + _59;
common/dct.c:194:5: note: type of def: 3.
common/dct.c:194:5: note: mark relevant 4, live 0.
common/dct.c:194:5: note: already marked relevant/live.
common/dct.c:194:5: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _49 = tmp[0][i_120];
  stmt_b: _51 = tmp[2][i_120];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_2)
  (chrec_b = {0, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _49 = tmp[0][i_120];
  stmt_b: _55 = tmp[1][i_120];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_2)
  (chrec_b = {0, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 1)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _49 = tmp[0][i_120];
  stmt_b: _57 = tmp[3][i_120];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_2)
  (chrec_b = {0, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _49 = tmp[0][i_120];
  stmt_b: d[0][i_120] = _68;
) -> no dependence
(compute_affine_dependence
  stmt_a: _49 = tmp[0][i_120];
  stmt_b: d[1][i_120] = _73;
) -> no dependence
(compute_affine_dependence
  stmt_a: _49 = tmp[0][i_120];
  stmt_b: d[2][i_120] = _78;
) -> no dependence
(compute_affine_dependence
  stmt_a: _49 = tmp[0][i_120];
  stmt_b: d[3][i_120] = _83;
) -> no dependence
(compute_affine_dependence
  stmt_a: _51 = tmp[2][i_120];
  stmt_b: _55 = tmp[1][i_120];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_2)
  (chrec_b = {0, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 1)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _51 = tmp[2][i_120];
  stmt_b: _57 = tmp[3][i_120];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_2)
  (chrec_b = {0, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _51 = tmp[2][i_120];
  stmt_b: d[0][i_120] = _68;
) -> no dependence
(compute_affine_dependence
  stmt_a: _51 = tmp[2][i_120];
  stmt_b: d[1][i_120] = _73;
) -> no dependence
(compute_affine_dependence
  stmt_a: _51 = tmp[2][i_120];
  stmt_b: d[2][i_120] = _78;
) -> no dependence
(compute_affine_dependence
  stmt_a: _51 = tmp[2][i_120];
  stmt_b: d[3][i_120] = _83;
) -> no dependence
(compute_affine_dependence
  stmt_a: _55 = tmp[1][i_120];
  stmt_b: _57 = tmp[3][i_120];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_2)
  (chrec_b = {0, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _55 = tmp[1][i_120];
  stmt_b: d[0][i_120] = _68;
) -> no dependence
(compute_affine_dependence
  stmt_a: _55 = tmp[1][i_120];
  stmt_b: d[1][i_120] = _73;
) -> no dependence
(compute_affine_dependence
  stmt_a: _55 = tmp[1][i_120];
  stmt_b: d[2][i_120] = _78;
) -> no dependence
(compute_affine_dependence
  stmt_a: _55 = tmp[1][i_120];
  stmt_b: d[3][i_120] = _83;
) -> no dependence
(compute_affine_dependence
  stmt_a: _57 = tmp[3][i_120];
  stmt_b: d[0][i_120] = _68;
) -> no dependence
(compute_affine_dependence
  stmt_a: _57 = tmp[3][i_120];
  stmt_b: d[1][i_120] = _73;
) -> no dependence
(compute_affine_dependence
  stmt_a: _57 = tmp[3][i_120];
  stmt_b: d[2][i_120] = _78;
) -> no dependence
(compute_affine_dependence
  stmt_a: _57 = tmp[3][i_120];
  stmt_b: d[3][i_120] = _83;
) -> no dependence
(compute_affine_dependence
  stmt_a: d[0][i_120] = _68;
  stmt_b: d[1][i_120] = _73;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_2)
  (chrec_b = {0, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 1)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: d[0][i_120] = _68;
  stmt_b: d[2][i_120] = _78;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_2)
  (chrec_b = {0, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: d[0][i_120] = _68;
  stmt_b: d[3][i_120] = _83;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_2)
  (chrec_b = {0, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: d[1][i_120] = _73;
  stmt_b: d[2][i_120] = _78;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_2)
  (chrec_b = {0, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: d[1][i_120] = _73;
  stmt_b: d[3][i_120] = _83;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_2)
  (chrec_b = {0, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: d[2][i_120] = _78;
  stmt_b: d[3][i_120] = _83;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_2)
  (chrec_b = {0, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _49 = tmp[0][i_120];
  stmt_b: _49 = tmp[0][i_120];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_2)
  (chrec_b = {0, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 0)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _51 = tmp[2][i_120];
  stmt_b: _51 = tmp[2][i_120];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_2)
  (chrec_b = {0, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _55 = tmp[1][i_120];
  stmt_b: _55 = tmp[1][i_120];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_2)
  (chrec_b = {0, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _57 = tmp[3][i_120];
  stmt_b: _57 = tmp[3][i_120];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_2)
  (chrec_b = {0, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: d[0][i_120] = _68;
  stmt_b: d[0][i_120] = _68;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_2)
  (chrec_b = {0, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 0)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: d[1][i_120] = _73;
  stmt_b: d[1][i_120] = _73;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_2)
  (chrec_b = {0, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: d[2][i_120] = _78;
  stmt_b: d[2][i_120] = _78;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_2)
  (chrec_b = {0, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: d[3][i_120] = _83;
  stmt_b: d[3][i_120] = _83;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_2)
  (chrec_b = {0, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/dct.c:194:5: note: === vect_determine_vectorization_factor ===
common/dct.c:194:5: note: ==> examining phi: i_120 = PHI <0(5), i_85(8)>

common/dct.c:194:5: note: ==> examining phi: .MEM_122 = PHI <.MEM_47(5), .MEM_84(8)>

common/dct.c:194:5: note: ==> examining phi: ivtmp_226 = PHI <4(5), ivtmp_225(8)>

common/dct.c:194:5: note: ==> examining statement: # DEBUG i => i_120

common/dct.c:194:5: note: skip.
common/dct.c:194:5: note: ==> examining statement: _49 = tmp[0][i_120];

common/dct.c:194:5: note: get vectype for scalar type:  short int
common/dct.c:194:5: note: vectype: vector(8) short int
common/dct.c:194:5: note: nunits = 8
common/dct.c:194:5: note: ==> examining statement: _50 = (int) _49;

common/dct.c:194:5: note: get vectype for scalar type:  int
common/dct.c:194:5: note: vectype: vector(4) int
common/dct.c:194:5: note: get vectype for scalar type:  short int
common/dct.c:194:5: note: vectype: vector(8) short int
common/dct.c:194:5: note: nunits = 8
common/dct.c:194:5: note: ==> examining statement: _51 = tmp[2][i_120];

common/dct.c:194:5: note: get vectype for scalar type:  short int
common/dct.c:194:5: note: vectype: vector(8) short int
common/dct.c:194:5: note: nunits = 8
common/dct.c:194:5: note: ==> examining statement: _52 = (int) _51;

common/dct.c:194:5: note: get vectype for scalar type:  int
common/dct.c:194:5: note: vectype: vector(4) int
common/dct.c:194:5: note: get vectype for scalar type:  short int
common/dct.c:194:5: note: vectype: vector(8) short int
common/dct.c:194:5: note: nunits = 8
common/dct.c:194:5: note: ==> examining statement: s02_53 = _50 + _52;

common/dct.c:194:5: note: get vectype for scalar type:  const int
common/dct.c:194:5: note: vectype: const vector(4) int
common/dct.c:194:5: note: get vectype for scalar type:  const int
common/dct.c:194:5: note: vectype: const vector(4) int
common/dct.c:194:5: note: nunits = 4
common/dct.c:194:5: note: ==> examining statement: # DEBUG s02 => s02_53

common/dct.c:194:5: note: skip.
common/dct.c:194:5: note: ==> examining statement: d02_54 = _50 - _52;

common/dct.c:194:5: note: get vectype for scalar type:  const int
common/dct.c:194:5: note: vectype: const vector(4) int
common/dct.c:194:5: note: get vectype for scalar type:  const int
common/dct.c:194:5: note: vectype: const vector(4) int
common/dct.c:194:5: note: nunits = 4
common/dct.c:194:5: note: ==> examining statement: # DEBUG d02 => d02_54

common/dct.c:194:5: note: skip.
common/dct.c:194:5: note: ==> examining statement: _55 = tmp[1][i_120];

common/dct.c:194:5: note: get vectype for scalar type:  short int
common/dct.c:194:5: note: vectype: vector(8) short int
common/dct.c:194:5: note: nunits = 8
common/dct.c:194:5: note: ==> examining statement: _56 = (int) _55;

common/dct.c:194:5: note: get vectype for scalar type:  int
common/dct.c:194:5: note: vectype: vector(4) int
common/dct.c:194:5: note: get vectype for scalar type:  short int
common/dct.c:194:5: note: vectype: vector(8) short int
common/dct.c:194:5: note: nunits = 8
common/dct.c:194:5: note: ==> examining statement: _57 = tmp[3][i_120];

common/dct.c:194:5: note: get vectype for scalar type:  short int
common/dct.c:194:5: note: vectype: vector(8) short int
common/dct.c:194:5: note: nunits = 8
common/dct.c:194:5: note: ==> examining statement: _58 = _57 >> 1;

common/dct.c:194:5: note: get vectype for scalar type:  short int
common/dct.c:194:5: note: vectype: vector(8) short int
common/dct.c:194:5: note: get vectype for scalar type:  short int
common/dct.c:194:5: note: vectype: vector(8) short int
common/dct.c:194:5: note: nunits = 8
common/dct.c:194:5: note: ==> examining statement: _59 = (int) _58;

common/dct.c:194:5: note: get vectype for scalar type:  int
common/dct.c:194:5: note: vectype: vector(4) int
common/dct.c:194:5: note: get vectype for scalar type:  short int
common/dct.c:194:5: note: vectype: vector(8) short int
common/dct.c:194:5: note: nunits = 8
common/dct.c:194:5: note: ==> examining statement: s13_60 = _56 + _59;

common/dct.c:194:5: note: get vectype for scalar type:  const int
common/dct.c:194:5: note: vectype: const vector(4) int
common/dct.c:194:5: note: get vectype for scalar type:  const int
common/dct.c:194:5: note: vectype: const vector(4) int
common/dct.c:194:5: note: nunits = 4
common/dct.c:194:5: note: ==> examining statement: # DEBUG s13 => s13_60

common/dct.c:194:5: note: skip.
common/dct.c:194:5: note: ==> examining statement: _61 = _55 >> 1;

common/dct.c:194:5: note: get vectype for scalar type:  short int
common/dct.c:194:5: note: vectype: vector(8) short int
common/dct.c:194:5: note: get vectype for scalar type:  short int
common/dct.c:194:5: note: vectype: vector(8) short int
common/dct.c:194:5: note: nunits = 8
common/dct.c:194:5: note: ==> examining statement: _62 = (int) _61;

common/dct.c:194:5: note: get vectype for scalar type:  int
common/dct.c:194:5: note: vectype: vector(4) int
common/dct.c:194:5: note: get vectype for scalar type:  short int
common/dct.c:194:5: note: vectype: vector(8) short int
common/dct.c:194:5: note: nunits = 8
common/dct.c:194:5: note: ==> examining statement: _63 = (int) _57;

common/dct.c:194:5: note: get vectype for scalar type:  int
common/dct.c:194:5: note: vectype: vector(4) int
common/dct.c:194:5: note: get vectype for scalar type:  short int
common/dct.c:194:5: note: vectype: vector(8) short int
common/dct.c:194:5: note: nunits = 8
common/dct.c:194:5: note: ==> examining statement: d13_64 = _62 - _63;

common/dct.c:194:5: note: get vectype for scalar type:  const int
common/dct.c:194:5: note: vectype: const vector(4) int
common/dct.c:194:5: note: get vectype for scalar type:  const int
common/dct.c:194:5: note: vectype: const vector(4) int
common/dct.c:194:5: note: nunits = 4
common/dct.c:194:5: note: ==> examining statement: # DEBUG d13 => d13_64

common/dct.c:194:5: note: skip.
common/dct.c:194:5: note: ==> examining statement: _65 = s02_53 + s13_60;

common/dct.c:194:5: note: get vectype for scalar type:  int
common/dct.c:194:5: note: vectype: vector(4) int
common/dct.c:194:5: note: get vectype for scalar type:  int
common/dct.c:194:5: note: vectype: vector(4) int
common/dct.c:194:5: note: nunits = 4
common/dct.c:194:5: note: ==> examining statement: _66 = _65 + 32;

common/dct.c:194:5: note: get vectype for scalar type:  int
common/dct.c:194:5: note: vectype: vector(4) int
common/dct.c:194:5: note: get vectype for scalar type:  int
common/dct.c:194:5: note: vectype: vector(4) int
common/dct.c:194:5: note: nunits = 4
common/dct.c:194:5: note: ==> examining statement: _67 = _66 >> 6;

common/dct.c:194:5: note: get vectype for scalar type:  int
common/dct.c:194:5: note: vectype: vector(4) int
common/dct.c:194:5: note: get vectype for scalar type:  int
common/dct.c:194:5: note: vectype: vector(4) int
common/dct.c:194:5: note: nunits = 4
common/dct.c:194:5: note: ==> examining statement: _68 = (short int) _67;

common/dct.c:194:5: note: get vectype for scalar type:  short int
common/dct.c:194:5: note: vectype: vector(8) short int
common/dct.c:194:5: note: get vectype for scalar type:  short int
common/dct.c:194:5: note: vectype: vector(8) short int
common/dct.c:194:5: note: nunits = 8
common/dct.c:194:5: note: ==> examining statement: d[0][i_120] = _68;

common/dct.c:194:5: note: get vectype for scalar type:  int16_t
common/dct.c:194:5: note: vectype: vector(8) short int
common/dct.c:194:5: note: nunits = 8
common/dct.c:194:5: note: ==> examining statement: _70 = d02_54 + d13_64;

common/dct.c:194:5: note: get vectype for scalar type:  int
common/dct.c:194:5: note: vectype: vector(4) int
common/dct.c:194:5: note: get vectype for scalar type:  int
common/dct.c:194:5: note: vectype: vector(4) int
common/dct.c:194:5: note: nunits = 4
common/dct.c:194:5: note: ==> examining statement: _71 = _70 + 32;

common/dct.c:194:5: note: get vectype for scalar type:  int
common/dct.c:194:5: note: vectype: vector(4) int
common/dct.c:194:5: note: get vectype for scalar type:  int
common/dct.c:194:5: note: vectype: vector(4) int
common/dct.c:194:5: note: nunits = 4
common/dct.c:194:5: note: ==> examining statement: _72 = _71 >> 6;

common/dct.c:194:5: note: get vectype for scalar type:  int
common/dct.c:194:5: note: vectype: vector(4) int
common/dct.c:194:5: note: get vectype for scalar type:  int
common/dct.c:194:5: note: vectype: vector(4) int
common/dct.c:194:5: note: nunits = 4
common/dct.c:194:5: note: ==> examining statement: _73 = (short int) _72;

common/dct.c:194:5: note: get vectype for scalar type:  short int
common/dct.c:194:5: note: vectype: vector(8) short int
common/dct.c:194:5: note: get vectype for scalar type:  short int
common/dct.c:194:5: note: vectype: vector(8) short int
common/dct.c:194:5: note: nunits = 8
common/dct.c:194:5: note: ==> examining statement: d[1][i_120] = _73;

common/dct.c:194:5: note: get vectype for scalar type:  int16_t
common/dct.c:194:5: note: vectype: vector(8) short int
common/dct.c:194:5: note: nunits = 8
common/dct.c:194:5: note: ==> examining statement: _75 = d02_54 - d13_64;

common/dct.c:194:5: note: get vectype for scalar type:  int
common/dct.c:194:5: note: vectype: vector(4) int
common/dct.c:194:5: note: get vectype for scalar type:  int
common/dct.c:194:5: note: vectype: vector(4) int
common/dct.c:194:5: note: nunits = 4
common/dct.c:194:5: note: ==> examining statement: _76 = _75 + 32;

common/dct.c:194:5: note: get vectype for scalar type:  int
common/dct.c:194:5: note: vectype: vector(4) int
common/dct.c:194:5: note: get vectype for scalar type:  int
common/dct.c:194:5: note: vectype: vector(4) int
common/dct.c:194:5: note: nunits = 4
common/dct.c:194:5: note: ==> examining statement: _77 = _76 >> 6;

common/dct.c:194:5: note: get vectype for scalar type:  int
common/dct.c:194:5: note: vectype: vector(4) int
common/dct.c:194:5: note: get vectype for scalar type:  int
common/dct.c:194:5: note: vectype: vector(4) int
common/dct.c:194:5: note: nunits = 4
common/dct.c:194:5: note: ==> examining statement: _78 = (short int) _77;

common/dct.c:194:5: note: get vectype for scalar type:  short int
common/dct.c:194:5: note: vectype: vector(8) short int
common/dct.c:194:5: note: get vectype for scalar type:  short int
common/dct.c:194:5: note: vectype: vector(8) short int
common/dct.c:194:5: note: nunits = 8
common/dct.c:194:5: note: ==> examining statement: d[2][i_120] = _78;

common/dct.c:194:5: note: get vectype for scalar type:  int16_t
common/dct.c:194:5: note: vectype: vector(8) short int
common/dct.c:194:5: note: nunits = 8
common/dct.c:194:5: note: ==> examining statement: _80 = s02_53 - s13_60;

common/dct.c:194:5: note: get vectype for scalar type:  int
common/dct.c:194:5: note: vectype: vector(4) int
common/dct.c:194:5: note: get vectype for scalar type:  int
common/dct.c:194:5: note: vectype: vector(4) int
common/dct.c:194:5: note: nunits = 4
common/dct.c:194:5: note: ==> examining statement: _81 = _80 + 32;

common/dct.c:194:5: note: get vectype for scalar type:  int
common/dct.c:194:5: note: vectype: vector(4) int
common/dct.c:194:5: note: get vectype for scalar type:  int
common/dct.c:194:5: note: vectype: vector(4) int
common/dct.c:194:5: note: nunits = 4
common/dct.c:194:5: note: ==> examining statement: _82 = _81 >> 6;

common/dct.c:194:5: note: get vectype for scalar type:  int
common/dct.c:194:5: note: vectype: vector(4) int
common/dct.c:194:5: note: get vectype for scalar type:  int
common/dct.c:194:5: note: vectype: vector(4) int
common/dct.c:194:5: note: nunits = 4
common/dct.c:194:5: note: ==> examining statement: _83 = (short int) _82;

common/dct.c:194:5: note: get vectype for scalar type:  short int
common/dct.c:194:5: note: vectype: vector(8) short int
common/dct.c:194:5: note: get vectype for scalar type:  short int
common/dct.c:194:5: note: vectype: vector(8) short int
common/dct.c:194:5: note: nunits = 8
common/dct.c:194:5: note: ==> examining statement: d[3][i_120] = _83;

common/dct.c:194:5: note: get vectype for scalar type:  int16_t
common/dct.c:194:5: note: vectype: vector(8) short int
common/dct.c:194:5: note: nunits = 8
common/dct.c:194:5: note: ==> examining statement: i_85 = i_120 + 1;

common/dct.c:194:5: note: skip.
common/dct.c:194:5: note: ==> examining statement: # DEBUG i => i_85

common/dct.c:194:5: note: skip.
common/dct.c:194:5: note: ==> examining statement: # DEBUG i => i_85

common/dct.c:194:5: note: skip.
common/dct.c:194:5: note: ==> examining statement: ivtmp_225 = ivtmp_226 - 1;

common/dct.c:194:5: note: skip.
common/dct.c:194:5: note: ==> examining statement: if (ivtmp_225 != 0)

common/dct.c:194:5: note: skip.
common/dct.c:194:5: note: vectorization factor = 8
common/dct.c:194:5: note: === vect_analyze_data_refs_alignment ===
common/dct.c:194:5: note: vect_compute_data_ref_alignment:
common/dct.c:194:5: note: misalign = 0 bytes of ref tmp[0][i_120]
common/dct.c:194:5: note: vect_compute_data_ref_alignment:
common/dct.c:194:5: note: misalign = 0 bytes of ref tmp[2][i_120]
common/dct.c:194:5: note: vect_compute_data_ref_alignment:
common/dct.c:194:5: note: misalign = 8 bytes of ref tmp[1][i_120]
common/dct.c:194:5: note: vect_compute_data_ref_alignment:
common/dct.c:194:5: note: misalign = 8 bytes of ref tmp[3][i_120]
common/dct.c:194:5: note: vect_compute_data_ref_alignment:
common/dct.c:194:5: note: misalign = 0 bytes of ref d[0][i_120]
common/dct.c:194:5: note: vect_compute_data_ref_alignment:
common/dct.c:194:5: note: misalign = 8 bytes of ref d[1][i_120]
common/dct.c:194:5: note: vect_compute_data_ref_alignment:
common/dct.c:194:5: note: misalign = 0 bytes of ref d[2][i_120]
common/dct.c:194:5: note: vect_compute_data_ref_alignment:
common/dct.c:194:5: note: misalign = 8 bytes of ref d[3][i_120]
common/dct.c:194:5: note: === vect_prune_runtime_alias_test_list ===
common/dct.c:194:5: note: === vect_enhance_data_refs_alignment ===
common/dct.c:194:5: note: data size =2. misalignment = 8.
common/dct.c:194:5: note: data size =2. misalignment = 8.
common/dct.c:194:5: note: data size =2. misalignment = 8.
common/dct.c:194:5: note: data size =2. misalignment = 8.
common/dct.c:194:5: note: vect_can_advance_ivs_p:
common/dct.c:194:5: note: Analyze phi: i_120 = PHI <0(5), i_85(8)>

common/dct.c:194:5: note: Analyze phi: .MEM_122 = PHI <.MEM_47(5), .MEM_84(8)>

common/dct.c:194:5: note: virtual phi. skip.
common/dct.c:194:5: note: Analyze phi: ivtmp_226 = PHI <4(5), ivtmp_225(8)>

common/dct.c:194:5: note: vect_model_load_cost: aligned.
common/dct.c:194:5: note: vect_get_data_access_cost: inside_cost = 1, outside_cost = 0.
common/dct.c:194:5: note: vect_model_load_cost: aligned.
common/dct.c:194:5: note: vect_get_data_access_cost: inside_cost = 2, outside_cost = 0.
common/dct.c:194:5: note: vect_model_load_cost: unaligned supported by hardware.
common/dct.c:194:5: note: vect_get_data_access_cost: inside_cost = 4, outside_cost = 0.
common/dct.c:194:5: note: vect_model_load_cost: unaligned supported by hardware.
common/dct.c:194:5: note: vect_get_data_access_cost: inside_cost = 6, outside_cost = 0.
common/dct.c:194:5: note: vect_model_store_cost: aligned.
common/dct.c:194:5: note: vect_get_data_access_cost: inside_cost = 7, outside_cost = 0.
common/dct.c:194:5: note: vect_model_store_cost: unaligned supported by hardware.
common/dct.c:194:5: note: vect_get_data_access_cost: inside_cost = 9, outside_cost = 0.
common/dct.c:194:5: note: vect_model_store_cost: aligned.
common/dct.c:194:5: note: vect_get_data_access_cost: inside_cost = 10, outside_cost = 0.
common/dct.c:194:5: note: vect_model_store_cost: unaligned supported by hardware.
common/dct.c:194:5: note: vect_get_data_access_cost: inside_cost = 12, outside_cost = 0.
common/dct.c:194:5: note: vect_model_load_cost: unaligned supported by hardware.
common/dct.c:194:5: note: vect_get_data_access_cost: inside_cost = 2, outside_cost = 0.
common/dct.c:194:5: note: vect_model_load_cost: unaligned supported by hardware.
common/dct.c:194:5: note: vect_get_data_access_cost: inside_cost = 4, outside_cost = 0.
common/dct.c:194:5: note: vect_model_load_cost: aligned.
common/dct.c:194:5: note: vect_get_data_access_cost: inside_cost = 5, outside_cost = 0.
common/dct.c:194:5: note: vect_model_load_cost: aligned.
common/dct.c:194:5: note: vect_get_data_access_cost: inside_cost = 6, outside_cost = 0.
common/dct.c:194:5: note: vect_model_store_cost: unaligned supported by hardware.
common/dct.c:194:5: note: vect_get_data_access_cost: inside_cost = 8, outside_cost = 0.
common/dct.c:194:5: note: vect_model_store_cost: aligned.
common/dct.c:194:5: note: vect_get_data_access_cost: inside_cost = 9, outside_cost = 0.
common/dct.c:194:5: note: vect_model_store_cost: unaligned supported by hardware.
common/dct.c:194:5: note: vect_get_data_access_cost: inside_cost = 11, outside_cost = 0.
common/dct.c:194:5: note: vect_model_store_cost: aligned.
common/dct.c:194:5: note: vect_get_data_access_cost: inside_cost = 12, outside_cost = 0.
common/dct.c:194:5: note: Vectorizing an unaligned access.
common/dct.c:194:5: note: Vectorizing an unaligned access.
common/dct.c:194:5: note: Vectorizing an unaligned access.
common/dct.c:194:5: note: Vectorizing an unaligned access.
common/dct.c:194:5: note: === vect_analyze_slp ===
common/dct.c:194:5: note: === vect_make_slp_decision ===
common/dct.c:194:5: note: === vect_detect_hybrid_slp ===
common/dct.c:194:5: note: === vect_analyze_loop_operations ===
common/dct.c:194:5: note: examining phi: i_120 = PHI <0(5), i_85(8)>

common/dct.c:194:5: note: examining phi: .MEM_122 = PHI <.MEM_47(5), .MEM_84(8)>

common/dct.c:194:5: note: examining phi: ivtmp_226 = PHI <4(5), ivtmp_225(8)>

common/dct.c:194:5: note: ==> examining statement: # DEBUG i => i_120
common/dct.c:194:5: note: irrelevant.
common/dct.c:194:5: note: ==> examining statement: _49 = tmp[0][i_120];
common/dct.c:194:5: note: num. args = 4 (not unary/binary/ternary op).
common/dct.c:194:5: note: vect_is_simple_use: operand tmp[0][i_120]
common/dct.c:194:5: note: not ssa-name.
common/dct.c:194:5: note: use not simple.
common/dct.c:194:5: note: vect_model_load_cost: aligned.
common/dct.c:194:5: note: vect_model_load_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:194:5: note: ==> examining statement: _50 = (int) _49;
common/dct.c:194:5: note: vect_is_simple_use: operand _49
common/dct.c:194:5: note: def_stmt: _49 = tmp[0][i_120];
common/dct.c:194:5: note: type of def: 3.
common/dct.c:194:5: note: === vectorizable_conversion ===
common/dct.c:194:5: note: vect_model_promotion_demotion_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:194:5: note: ==> examining statement: _51 = tmp[2][i_120];
common/dct.c:194:5: note: num. args = 4 (not unary/binary/ternary op).
common/dct.c:194:5: note: vect_is_simple_use: operand tmp[2][i_120]
common/dct.c:194:5: note: not ssa-name.
common/dct.c:194:5: note: use not simple.
common/dct.c:194:5: note: vect_model_load_cost: aligned.
common/dct.c:194:5: note: vect_model_load_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:194:5: note: ==> examining statement: _52 = (int) _51;
common/dct.c:194:5: note: vect_is_simple_use: operand _51
common/dct.c:194:5: note: def_stmt: _51 = tmp[2][i_120];
common/dct.c:194:5: note: type of def: 3.
common/dct.c:194:5: note: === vectorizable_conversion ===
common/dct.c:194:5: note: vect_model_promotion_demotion_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:194:5: note: ==> examining statement: s02_53 = _50 + _52;
common/dct.c:194:5: note: vect_is_simple_use: operand _50
common/dct.c:194:5: note: def_stmt: _50 = (int) _49;
common/dct.c:194:5: note: type of def: 3.
common/dct.c:194:5: note: vect_is_simple_use: operand _52
common/dct.c:194:5: note: def_stmt: _52 = (int) _51;
common/dct.c:194:5: note: type of def: 3.
common/dct.c:194:5: note: === vectorizable_operation ===
common/dct.c:194:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:194:5: note: ==> examining statement: # DEBUG s02 => s02_53
common/dct.c:194:5: note: irrelevant.
common/dct.c:194:5: note: ==> examining statement: d02_54 = _50 - _52;
common/dct.c:194:5: note: vect_is_simple_use: operand _50
common/dct.c:194:5: note: def_stmt: _50 = (int) _49;
common/dct.c:194:5: note: type of def: 3.
common/dct.c:194:5: note: vect_is_simple_use: operand _52
common/dct.c:194:5: note: def_stmt: _52 = (int) _51;
common/dct.c:194:5: note: type of def: 3.
common/dct.c:194:5: note: === vectorizable_operation ===
common/dct.c:194:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:194:5: note: ==> examining statement: # DEBUG d02 => d02_54
common/dct.c:194:5: note: irrelevant.
common/dct.c:194:5: note: ==> examining statement: _55 = tmp[1][i_120];
common/dct.c:194:5: note: num. args = 4 (not unary/binary/ternary op).
common/dct.c:194:5: note: vect_is_simple_use: operand tmp[1][i_120]
common/dct.c:194:5: note: not ssa-name.
common/dct.c:194:5: note: use not simple.
common/dct.c:194:5: note: vect_model_load_cost: unaligned supported by hardware.
common/dct.c:194:5: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:194:5: note: ==> examining statement: _56 = (int) _55;
common/dct.c:194:5: note: vect_is_simple_use: operand _55
common/dct.c:194:5: note: def_stmt: _55 = tmp[1][i_120];
common/dct.c:194:5: note: type of def: 3.
common/dct.c:194:5: note: === vectorizable_conversion ===
common/dct.c:194:5: note: vect_model_promotion_demotion_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:194:5: note: ==> examining statement: _57 = tmp[3][i_120];
common/dct.c:194:5: note: num. args = 4 (not unary/binary/ternary op).
common/dct.c:194:5: note: vect_is_simple_use: operand tmp[3][i_120]
common/dct.c:194:5: note: not ssa-name.
common/dct.c:194:5: note: use not simple.
common/dct.c:194:5: note: vect_model_load_cost: unaligned supported by hardware.
common/dct.c:194:5: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:194:5: note: ==> examining statement: _58 = _57 >> 1;
common/dct.c:194:5: note: vect_is_simple_use: operand _57
common/dct.c:194:5: note: def_stmt: _57 = tmp[3][i_120];
common/dct.c:194:5: note: type of def: 3.
common/dct.c:194:5: note: vect_is_simple_use: operand 1
common/dct.c:194:5: note: vector/scalar shift/rotate found.
common/dct.c:194:5: note: === vectorizable_shift ===
common/dct.c:194:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
common/dct.c:194:5: note: ==> examining statement: _59 = (int) _58;
common/dct.c:194:5: note: vect_is_simple_use: operand _58
common/dct.c:194:5: note: def_stmt: _58 = _57 >> 1;
common/dct.c:194:5: note: type of def: 3.
common/dct.c:194:5: note: === vectorizable_conversion ===
common/dct.c:194:5: note: vect_model_promotion_demotion_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:194:5: note: ==> examining statement: s13_60 = _56 + _59;
common/dct.c:194:5: note: vect_is_simple_use: operand _56
common/dct.c:194:5: note: def_stmt: _56 = (int) _55;
common/dct.c:194:5: note: type of def: 3.
common/dct.c:194:5: note: vect_is_simple_use: operand _59
common/dct.c:194:5: note: def_stmt: _59 = (int) _58;
common/dct.c:194:5: note: type of def: 3.
common/dct.c:194:5: note: === vectorizable_operation ===
common/dct.c:194:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:194:5: note: ==> examining statement: # DEBUG s13 => s13_60
common/dct.c:194:5: note: irrelevant.
common/dct.c:194:5: note: ==> examining statement: _61 = _55 >> 1;
common/dct.c:194:5: note: vect_is_simple_use: operand _55
common/dct.c:194:5: note: def_stmt: _55 = tmp[1][i_120];
common/dct.c:194:5: note: type of def: 3.
common/dct.c:194:5: note: vect_is_simple_use: operand 1
common/dct.c:194:5: note: vector/scalar shift/rotate found.
common/dct.c:194:5: note: === vectorizable_shift ===
common/dct.c:194:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
common/dct.c:194:5: note: ==> examining statement: _62 = (int) _61;
common/dct.c:194:5: note: vect_is_simple_use: operand _61
common/dct.c:194:5: note: def_stmt: _61 = _55 >> 1;
common/dct.c:194:5: note: type of def: 3.
common/dct.c:194:5: note: === vectorizable_conversion ===
common/dct.c:194:5: note: vect_model_promotion_demotion_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:194:5: note: ==> examining statement: _63 = (int) _57;
common/dct.c:194:5: note: vect_is_simple_use: operand _57
common/dct.c:194:5: note: def_stmt: _57 = tmp[3][i_120];
common/dct.c:194:5: note: type of def: 3.
common/dct.c:194:5: note: === vectorizable_conversion ===
common/dct.c:194:5: note: vect_model_promotion_demotion_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:194:5: note: ==> examining statement: d13_64 = _62 - _63;
common/dct.c:194:5: note: vect_is_simple_use: operand _62
common/dct.c:194:5: note: def_stmt: _62 = (int) _61;
common/dct.c:194:5: note: type of def: 3.
common/dct.c:194:5: note: vect_is_simple_use: operand _63
common/dct.c:194:5: note: def_stmt: _63 = (int) _57;
common/dct.c:194:5: note: type of def: 3.
common/dct.c:194:5: note: === vectorizable_operation ===
common/dct.c:194:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:194:5: note: ==> examining statement: # DEBUG d13 => d13_64
common/dct.c:194:5: note: irrelevant.
common/dct.c:194:5: note: ==> examining statement: _65 = s02_53 + s13_60;
common/dct.c:194:5: note: vect_is_simple_use: operand s02_53
common/dct.c:194:5: note: def_stmt: s02_53 = _50 + _52;
common/dct.c:194:5: note: type of def: 3.
common/dct.c:194:5: note: vect_is_simple_use: operand s13_60
common/dct.c:194:5: note: def_stmt: s13_60 = _56 + _59;
common/dct.c:194:5: note: type of def: 3.
common/dct.c:194:5: note: === vectorizable_operation ===
common/dct.c:194:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:194:5: note: ==> examining statement: _66 = _65 + 32;
common/dct.c:194:5: note: vect_is_simple_use: operand _65
common/dct.c:194:5: note: def_stmt: _65 = s02_53 + s13_60;
common/dct.c:194:5: note: type of def: 3.
common/dct.c:194:5: note: vect_is_simple_use: operand 32
common/dct.c:194:5: note: === vectorizable_operation ===
common/dct.c:194:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 1 .
common/dct.c:194:5: note: ==> examining statement: _67 = _66 >> 6;
common/dct.c:194:5: note: vect_is_simple_use: operand _66
common/dct.c:194:5: note: def_stmt: _66 = _65 + 32;
common/dct.c:194:5: note: type of def: 3.
common/dct.c:194:5: note: vect_is_simple_use: operand 6
common/dct.c:194:5: note: vector/scalar shift/rotate found.
common/dct.c:194:5: note: === vectorizable_shift ===
common/dct.c:194:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 1 .
common/dct.c:194:5: note: ==> examining statement: _68 = (short int) _67;
common/dct.c:194:5: note: vect_is_simple_use: operand _67
common/dct.c:194:5: note: def_stmt: _67 = _66 >> 6;
common/dct.c:194:5: note: type of def: 3.
common/dct.c:194:5: note: === vectorizable_conversion ===
common/dct.c:194:5: note: vect_model_promotion_demotion_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:194:5: note: ==> examining statement: d[0][i_120] = _68;
common/dct.c:194:5: note: vect_is_simple_use: operand _68
common/dct.c:194:5: note: def_stmt: _68 = (short int) _67;
common/dct.c:194:5: note: type of def: 3.
common/dct.c:194:5: note: vect_model_store_cost: aligned.
common/dct.c:194:5: note: vect_model_store_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:194:5: note: ==> examining statement: _70 = d02_54 + d13_64;
common/dct.c:194:5: note: vect_is_simple_use: operand d02_54
common/dct.c:194:5: note: def_stmt: d02_54 = _50 - _52;
common/dct.c:194:5: note: type of def: 3.
common/dct.c:194:5: note: vect_is_simple_use: operand d13_64
common/dct.c:194:5: note: def_stmt: d13_64 = _62 - _63;
common/dct.c:194:5: note: type of def: 3.
common/dct.c:194:5: note: === vectorizable_operation ===
common/dct.c:194:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:194:5: note: ==> examining statement: _71 = _70 + 32;
common/dct.c:194:5: note: vect_is_simple_use: operand _70
common/dct.c:194:5: note: def_stmt: _70 = d02_54 + d13_64;
common/dct.c:194:5: note: type of def: 3.
common/dct.c:194:5: note: vect_is_simple_use: operand 32
common/dct.c:194:5: note: === vectorizable_operation ===
common/dct.c:194:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 1 .
common/dct.c:194:5: note: ==> examining statement: _72 = _71 >> 6;
common/dct.c:194:5: note: vect_is_simple_use: operand _71
common/dct.c:194:5: note: def_stmt: _71 = _70 + 32;
common/dct.c:194:5: note: type of def: 3.
common/dct.c:194:5: note: vect_is_simple_use: operand 6
common/dct.c:194:5: note: vector/scalar shift/rotate found.
common/dct.c:194:5: note: === vectorizable_shift ===
common/dct.c:194:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 1 .
common/dct.c:194:5: note: ==> examining statement: _73 = (short int) _72;
common/dct.c:194:5: note: vect_is_simple_use: operand _72
common/dct.c:194:5: note: def_stmt: _72 = _71 >> 6;
common/dct.c:194:5: note: type of def: 3.
common/dct.c:194:5: note: === vectorizable_conversion ===
common/dct.c:194:5: note: vect_model_promotion_demotion_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:194:5: note: ==> examining statement: d[1][i_120] = _73;
common/dct.c:194:5: note: vect_is_simple_use: operand _73
common/dct.c:194:5: note: def_stmt: _73 = (short int) _72;
common/dct.c:194:5: note: type of def: 3.
common/dct.c:194:5: note: vect_model_store_cost: unaligned supported by hardware.
common/dct.c:194:5: note: vect_model_store_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:194:5: note: ==> examining statement: _75 = d02_54 - d13_64;
common/dct.c:194:5: note: vect_is_simple_use: operand d02_54
common/dct.c:194:5: note: def_stmt: d02_54 = _50 - _52;
common/dct.c:194:5: note: type of def: 3.
common/dct.c:194:5: note: vect_is_simple_use: operand d13_64
common/dct.c:194:5: note: def_stmt: d13_64 = _62 - _63;
common/dct.c:194:5: note: type of def: 3.
common/dct.c:194:5: note: === vectorizable_operation ===
common/dct.c:194:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:194:5: note: ==> examining statement: _76 = _75 + 32;
common/dct.c:194:5: note: vect_is_simple_use: operand _75
common/dct.c:194:5: note: def_stmt: _75 = d02_54 - d13_64;
common/dct.c:194:5: note: type of def: 3.
common/dct.c:194:5: note: vect_is_simple_use: operand 32
common/dct.c:194:5: note: === vectorizable_operation ===
common/dct.c:194:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 1 .
common/dct.c:194:5: note: ==> examining statement: _77 = _76 >> 6;
common/dct.c:194:5: note: vect_is_simple_use: operand _76
common/dct.c:194:5: note: def_stmt: _76 = _75 + 32;
common/dct.c:194:5: note: type of def: 3.
common/dct.c:194:5: note: vect_is_simple_use: operand 6
common/dct.c:194:5: note: vector/scalar shift/rotate found.
common/dct.c:194:5: note: === vectorizable_shift ===
common/dct.c:194:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 1 .
common/dct.c:194:5: note: ==> examining statement: _78 = (short int) _77;
common/dct.c:194:5: note: vect_is_simple_use: operand _77
common/dct.c:194:5: note: def_stmt: _77 = _76 >> 6;
common/dct.c:194:5: note: type of def: 3.
common/dct.c:194:5: note: === vectorizable_conversion ===
common/dct.c:194:5: note: vect_model_promotion_demotion_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:194:5: note: ==> examining statement: d[2][i_120] = _78;
common/dct.c:194:5: note: vect_is_simple_use: operand _78
common/dct.c:194:5: note: def_stmt: _78 = (short int) _77;
common/dct.c:194:5: note: type of def: 3.
common/dct.c:194:5: note: vect_model_store_cost: aligned.
common/dct.c:194:5: note: vect_model_store_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:194:5: note: ==> examining statement: _80 = s02_53 - s13_60;
common/dct.c:194:5: note: vect_is_simple_use: operand s02_53
common/dct.c:194:5: note: def_stmt: s02_53 = _50 + _52;
common/dct.c:194:5: note: type of def: 3.
common/dct.c:194:5: note: vect_is_simple_use: operand s13_60
common/dct.c:194:5: note: def_stmt: s13_60 = _56 + _59;
common/dct.c:194:5: note: type of def: 3.
common/dct.c:194:5: note: === vectorizable_operation ===
common/dct.c:194:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:194:5: note: ==> examining statement: _81 = _80 + 32;
common/dct.c:194:5: note: vect_is_simple_use: operand _80
common/dct.c:194:5: note: def_stmt: _80 = s02_53 - s13_60;
common/dct.c:194:5: note: type of def: 3.
common/dct.c:194:5: note: vect_is_simple_use: operand 32
common/dct.c:194:5: note: === vectorizable_operation ===
common/dct.c:194:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 1 .
common/dct.c:194:5: note: ==> examining statement: _82 = _81 >> 6;
common/dct.c:194:5: note: vect_is_simple_use: operand _81
common/dct.c:194:5: note: def_stmt: _81 = _80 + 32;
common/dct.c:194:5: note: type of def: 3.
common/dct.c:194:5: note: vect_is_simple_use: operand 6
common/dct.c:194:5: note: vector/scalar shift/rotate found.
common/dct.c:194:5: note: === vectorizable_shift ===
common/dct.c:194:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 1 .
common/dct.c:194:5: note: ==> examining statement: _83 = (short int) _82;
common/dct.c:194:5: note: vect_is_simple_use: operand _82
common/dct.c:194:5: note: def_stmt: _82 = _81 >> 6;
common/dct.c:194:5: note: type of def: 3.
common/dct.c:194:5: note: === vectorizable_conversion ===
common/dct.c:194:5: note: vect_model_promotion_demotion_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:194:5: note: ==> examining statement: d[3][i_120] = _83;
common/dct.c:194:5: note: vect_is_simple_use: operand _83
common/dct.c:194:5: note: def_stmt: _83 = (short int) _82;
common/dct.c:194:5: note: type of def: 3.
common/dct.c:194:5: note: vect_model_store_cost: unaligned supported by hardware.
common/dct.c:194:5: note: vect_model_store_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:194:5: note: ==> examining statement: i_85 = i_120 + 1;
common/dct.c:194:5: note: irrelevant.
common/dct.c:194:5: note: ==> examining statement: # DEBUG i => i_85
common/dct.c:194:5: note: irrelevant.
common/dct.c:194:5: note: ==> examining statement: # DEBUG i => i_85
common/dct.c:194:5: note: irrelevant.
common/dct.c:194:5: note: ==> examining statement: ivtmp_225 = ivtmp_226 - 1;
common/dct.c:194:5: note: irrelevant.
common/dct.c:194:5: note: ==> examining statement: if (ivtmp_225 != 0)
common/dct.c:194:5: note: irrelevant.
common/dct.c:194:5: note: vectorization_factor = 8, niters = 4
common/dct.c:194:5: note: not vectorized: iteration count too small.
common/dct.c:194:5: note: not vectorized: iteration count smaller than vectorization factor.
common/dct.c:194:5: note: bad operation or unsupported loop bound.

Analyzing loop at common/dct.c:181
common/dct.c:181:5: note: ===== analyze_loop_nest =====
common/dct.c:181:5: note: === vect_analyze_loop_form ===
common/dct.c:181:5: note: === get_loop_niters ===
Analyzing # of iterations of loop 1
  exit condition [3, + , 4294967295] != 0
  bounds on difference of bases: -3 ... -3
  result:
    # of iterations 3, bounded by 3
common/dct.c:181:5: note: === vect_analyze_data_refs ===
Creating dr for *dct_11(D)[i_119]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: dct_11(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 2
	aligned to: 128
	base_object: *dct_11(D)
	Access function 0: {0, +, 1}_1
Creating dr for MEM[(int16_t[4] *)dct_11(D) + 16B][i_119]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: dct_11(D)
	offset from base address: 0
	constant offset from base address: 16
	step: 2
	aligned to: 128
	base_object: MEM[(int16_t[4] *)dct_11(D) + 16B]
	Access function 0: {0, +, 1}_1
Creating dr for MEM[(int16_t[4] *)dct_11(D) + 8B][i_119]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: dct_11(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 2
	aligned to: 128
	base_object: MEM[(int16_t[4] *)dct_11(D) + 8B]
	Access function 0: {0, +, 1}_1
Creating dr for MEM[(int16_t[4] *)dct_11(D) + 24B][i_119]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: dct_11(D)
	offset from base address: 0
	constant offset from base address: 24
	step: 2
	aligned to: 128
	base_object: MEM[(int16_t[4] *)dct_11(D) + 24B]
	Access function 0: {0, +, 1}_1
Creating dr for tmp[i_119][0]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &tmp
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 128
	base_object: tmp
	Access function 0: 0
	Access function 1: {0, +, 1}_1
Creating dr for tmp[i_119][1]
analyze_innermost: success.
	base_address: &tmp
	offset from base address: 0
	constant offset from base address: 2
	step: 8
	aligned to: 128
	base_object: tmp
	Access function 0: 1
	Access function 1: {0, +, 1}_1
Creating dr for tmp[i_119][2]
analyze_innermost: success.
	base_address: &tmp
	offset from base address: 0
	constant offset from base address: 4
	step: 8
	aligned to: 128
	base_object: tmp
	Access function 0: 2
	Access function 1: {0, +, 1}_1
Creating dr for tmp[i_119][3]
analyze_innermost: success.
	base_address: &tmp
	offset from base address: 0
	constant offset from base address: 6
	step: 8
	aligned to: 128
	base_object: tmp
	Access function 0: 3
	Access function 1: {0, +, 1}_1
common/dct.c:181:5: note: got vectype for stmt: _12 = *dct_11(D)[i_119];
vector(8) short int
common/dct.c:181:5: note: got vectype for stmt: _14 = MEM[(int16_t[4] *)dct_11(D) + 16B][i_119];
vector(8) short int
common/dct.c:181:5: note: got vectype for stmt: _21 = MEM[(int16_t[4] *)dct_11(D) + 8B][i_119];
vector(8) short int
common/dct.c:181:5: note: got vectype for stmt: _23 = MEM[(int16_t[4] *)dct_11(D) + 24B][i_119];
vector(8) short int
common/dct.c:181:5: note: got vectype for stmt: tmp[i_119][0] = _35;
vector(8) short int
common/dct.c:181:5: note: got vectype for stmt: tmp[i_119][1] = _40;
vector(8) short int
common/dct.c:181:5: note: got vectype for stmt: tmp[i_119][2] = _43;
vector(8) short int
common/dct.c:181:5: note: got vectype for stmt: tmp[i_119][3] = _46;
vector(8) short int
common/dct.c:181:5: note: === vect_analyze_scalar_cycles ===
common/dct.c:181:5: note: Analyze phi: i_119 = PHI <i_48(4), 0(2)>

common/dct.c:181:5: note: Access function of PHI: {0, +, 1}_1
common/dct.c:181:5: note: step: 1,  init: 0
common/dct.c:181:5: note: Detected induction.
common/dct.c:181:5: note: Analyze phi: .MEM_121 = PHI <.MEM_47(4), .MEM_10(D)(2)>

common/dct.c:181:5: note: Analyze phi: ivtmp_224 = PHI <ivtmp_223(4), 4(2)>

common/dct.c:181:5: note: Access function of PHI: {4, +, 4294967295}_1
common/dct.c:181:5: note: step: 4294967295,  init: 4
common/dct.c:181:5: note: Detected induction.
common/dct.c:181:5: note: === vect_pattern_recog ===
common/dct.c:181:5: note: === vect_analyze_data_ref_accesses ===
common/dct.c:181:5: note: Detected interleaving tmp[i_119][0] and tmp[i_119][1]
common/dct.c:181:5: note: Detected interleaving tmp[i_119][0] and tmp[i_119][2]
common/dct.c:181:5: note: Detected interleaving tmp[i_119][0] and tmp[i_119][3]
common/dct.c:181:5: note: Detected interleaving of size 4
common/dct.c:181:5: note: === vect_mark_stmts_to_be_vectorized ===
common/dct.c:181:5: note: init: phi relevant? i_119 = PHI <i_48(4), 0(2)>
common/dct.c:181:5: note: init: phi relevant? .MEM_121 = PHI <.MEM_47(4), .MEM_10(D)(2)>
common/dct.c:181:5: note: init: phi relevant? ivtmp_224 = PHI <ivtmp_223(4), 4(2)>
common/dct.c:181:5: note: init: stmt relevant? # DEBUG i => i_119
common/dct.c:181:5: note: init: stmt relevant? _12 = *dct_11(D)[i_119];
common/dct.c:181:5: note: init: stmt relevant? _13 = (int) _12;
common/dct.c:181:5: note: init: stmt relevant? _14 = MEM[(int16_t[4] *)dct_11(D) + 16B][i_119];
common/dct.c:181:5: note: init: stmt relevant? _15 = (int) _14;
common/dct.c:181:5: note: init: stmt relevant? s02_16 = _13 + _15;
common/dct.c:181:5: note: init: stmt relevant? # DEBUG s02 => s02_16
common/dct.c:181:5: note: init: stmt relevant? d02_20 = _13 - _15;
common/dct.c:181:5: note: init: stmt relevant? # DEBUG d02 => d02_20
common/dct.c:181:5: note: init: stmt relevant? _21 = MEM[(int16_t[4] *)dct_11(D) + 8B][i_119];
common/dct.c:181:5: note: init: stmt relevant? _22 = (int) _21;
common/dct.c:181:5: note: init: stmt relevant? _23 = MEM[(int16_t[4] *)dct_11(D) + 24B][i_119];
common/dct.c:181:5: note: init: stmt relevant? _24 = _23 >> 1;
common/dct.c:181:5: note: init: stmt relevant? _25 = (int) _24;
common/dct.c:181:5: note: init: stmt relevant? s13_26 = _22 + _25;
common/dct.c:181:5: note: init: stmt relevant? # DEBUG s13 => s13_26
common/dct.c:181:5: note: init: stmt relevant? _27 = _21 >> 1;
common/dct.c:181:5: note: init: stmt relevant? _28 = (int) _27;
common/dct.c:181:5: note: init: stmt relevant? _30 = (int) _23;
common/dct.c:181:5: note: init: stmt relevant? d13_31 = _28 - _30;
common/dct.c:181:5: note: init: stmt relevant? # DEBUG d13 => d13_31
common/dct.c:181:5: note: init: stmt relevant? _32 = (unsigned short) s02_16;
common/dct.c:181:5: note: init: stmt relevant? _33 = (unsigned short) s13_26;
common/dct.c:181:5: note: init: stmt relevant? _34 = _32 + _33;
common/dct.c:181:5: note: init: stmt relevant? _35 = (short int) _34;
common/dct.c:181:5: note: init: stmt relevant? tmp[i_119][0] = _35;
common/dct.c:181:5: note: vec_stmt_relevant_p: stmt has vdefs.
common/dct.c:181:5: note: mark relevant 4, live 0.
common/dct.c:181:5: note: init: stmt relevant? _37 = (unsigned short) d02_20;
common/dct.c:181:5: note: init: stmt relevant? _38 = (unsigned short) d13_31;
common/dct.c:181:5: note: init: stmt relevant? _39 = _37 + _38;
common/dct.c:181:5: note: init: stmt relevant? _40 = (short int) _39;
common/dct.c:181:5: note: init: stmt relevant? tmp[i_119][1] = _40;
common/dct.c:181:5: note: vec_stmt_relevant_p: stmt has vdefs.
common/dct.c:181:5: note: mark relevant 4, live 0.
common/dct.c:181:5: note: init: stmt relevant? _42 = _37 - _38;
common/dct.c:181:5: note: init: stmt relevant? _43 = (short int) _42;
common/dct.c:181:5: note: init: stmt relevant? tmp[i_119][2] = _43;
common/dct.c:181:5: note: vec_stmt_relevant_p: stmt has vdefs.
common/dct.c:181:5: note: mark relevant 4, live 0.
common/dct.c:181:5: note: init: stmt relevant? _45 = _32 - _33;
common/dct.c:181:5: note: init: stmt relevant? _46 = (short int) _45;
common/dct.c:181:5: note: init: stmt relevant? tmp[i_119][3] = _46;
common/dct.c:181:5: note: vec_stmt_relevant_p: stmt has vdefs.
common/dct.c:181:5: note: mark relevant 4, live 0.
common/dct.c:181:5: note: init: stmt relevant? i_48 = i_119 + 1;
common/dct.c:181:5: note: init: stmt relevant? # DEBUG i => i_48
common/dct.c:181:5: note: init: stmt relevant? # DEBUG i => i_48
common/dct.c:181:5: note: init: stmt relevant? ivtmp_223 = ivtmp_224 - 1;
common/dct.c:181:5: note: init: stmt relevant? if (ivtmp_223 != 0)
common/dct.c:181:5: note: worklist: examine stmt: tmp[i_119][3] = _46;
common/dct.c:181:5: note: vect_is_simple_use: operand _46
common/dct.c:181:5: note: def_stmt: _46 = (short int) _45;
common/dct.c:181:5: note: type of def: 3.
common/dct.c:181:5: note: mark relevant 4, live 0.
common/dct.c:181:5: note: worklist: examine stmt: _46 = (short int) _45;
common/dct.c:181:5: note: vect_is_simple_use: operand _45
common/dct.c:181:5: note: def_stmt: _45 = _32 - _33;
common/dct.c:181:5: note: type of def: 3.
common/dct.c:181:5: note: mark relevant 4, live 0.
common/dct.c:181:5: note: worklist: examine stmt: _45 = _32 - _33;
common/dct.c:181:5: note: vect_is_simple_use: operand _32
common/dct.c:181:5: note: def_stmt: _32 = (unsigned short) s02_16;
common/dct.c:181:5: note: type of def: 3.
common/dct.c:181:5: note: mark relevant 4, live 0.
common/dct.c:181:5: note: vect_is_simple_use: operand _33
common/dct.c:181:5: note: def_stmt: _33 = (unsigned short) s13_26;
common/dct.c:181:5: note: type of def: 3.
common/dct.c:181:5: note: mark relevant 4, live 0.
common/dct.c:181:5: note: worklist: examine stmt: _33 = (unsigned short) s13_26;
common/dct.c:181:5: note: vect_is_simple_use: operand s13_26
common/dct.c:181:5: note: def_stmt: s13_26 = _22 + _25;
common/dct.c:181:5: note: type of def: 3.
common/dct.c:181:5: note: mark relevant 4, live 0.
common/dct.c:181:5: note: worklist: examine stmt: s13_26 = _22 + _25;
common/dct.c:181:5: note: vect_is_simple_use: operand _22
common/dct.c:181:5: note: def_stmt: _22 = (int) _21;
common/dct.c:181:5: note: type of def: 3.
common/dct.c:181:5: note: mark relevant 4, live 0.
common/dct.c:181:5: note: vect_is_simple_use: operand _25
common/dct.c:181:5: note: def_stmt: _25 = (int) _24;
common/dct.c:181:5: note: type of def: 3.
common/dct.c:181:5: note: mark relevant 4, live 0.
common/dct.c:181:5: note: worklist: examine stmt: _25 = (int) _24;
common/dct.c:181:5: note: vect_is_simple_use: operand _24
common/dct.c:181:5: note: def_stmt: _24 = _23 >> 1;
common/dct.c:181:5: note: type of def: 3.
common/dct.c:181:5: note: mark relevant 4, live 0.
common/dct.c:181:5: note: worklist: examine stmt: _24 = _23 >> 1;
common/dct.c:181:5: note: vect_is_simple_use: operand _23
common/dct.c:181:5: note: def_stmt: _23 = MEM[(int16_t[4] *)dct_11(D) + 24B][i_119];
common/dct.c:181:5: note: type of def: 3.
common/dct.c:181:5: note: mark relevant 4, live 0.
common/dct.c:181:5: note: worklist: examine stmt: _23 = MEM[(int16_t[4] *)dct_11(D) + 24B][i_119];
common/dct.c:181:5: note: worklist: examine stmt: _22 = (int) _21;
common/dct.c:181:5: note: vect_is_simple_use: operand _21
common/dct.c:181:5: note: def_stmt: _21 = MEM[(int16_t[4] *)dct_11(D) + 8B][i_119];
common/dct.c:181:5: note: type of def: 3.
common/dct.c:181:5: note: mark relevant 4, live 0.
common/dct.c:181:5: note: worklist: examine stmt: _21 = MEM[(int16_t[4] *)dct_11(D) + 8B][i_119];
common/dct.c:181:5: note: worklist: examine stmt: _32 = (unsigned short) s02_16;
common/dct.c:181:5: note: vect_is_simple_use: operand s02_16
common/dct.c:181:5: note: def_stmt: s02_16 = _13 + _15;
common/dct.c:181:5: note: type of def: 3.
common/dct.c:181:5: note: mark relevant 4, live 0.
common/dct.c:181:5: note: worklist: examine stmt: s02_16 = _13 + _15;
common/dct.c:181:5: note: vect_is_simple_use: operand _13
common/dct.c:181:5: note: def_stmt: _13 = (int) _12;
common/dct.c:181:5: note: type of def: 3.
common/dct.c:181:5: note: mark relevant 4, live 0.
common/dct.c:181:5: note: vect_is_simple_use: operand _15
common/dct.c:181:5: note: def_stmt: _15 = (int) _14;
common/dct.c:181:5: note: type of def: 3.
common/dct.c:181:5: note: mark relevant 4, live 0.
common/dct.c:181:5: note: worklist: examine stmt: _15 = (int) _14;
common/dct.c:181:5: note: vect_is_simple_use: operand _14
common/dct.c:181:5: note: def_stmt: _14 = MEM[(int16_t[4] *)dct_11(D) + 16B][i_119];
common/dct.c:181:5: note: type of def: 3.
common/dct.c:181:5: note: mark relevant 4, live 0.
common/dct.c:181:5: note: worklist: examine stmt: _14 = MEM[(int16_t[4] *)dct_11(D) + 16B][i_119];
common/dct.c:181:5: note: worklist: examine stmt: _13 = (int) _12;
common/dct.c:181:5: note: vect_is_simple_use: operand _12
common/dct.c:181:5: note: def_stmt: _12 = *dct_11(D)[i_119];
common/dct.c:181:5: note: type of def: 3.
common/dct.c:181:5: note: mark relevant 4, live 0.
common/dct.c:181:5: note: worklist: examine stmt: _12 = *dct_11(D)[i_119];
common/dct.c:181:5: note: worklist: examine stmt: tmp[i_119][2] = _43;
common/dct.c:181:5: note: vect_is_simple_use: operand _43
common/dct.c:181:5: note: def_stmt: _43 = (short int) _42;
common/dct.c:181:5: note: type of def: 3.
common/dct.c:181:5: note: mark relevant 4, live 0.
common/dct.c:181:5: note: worklist: examine stmt: _43 = (short int) _42;
common/dct.c:181:5: note: vect_is_simple_use: operand _42
common/dct.c:181:5: note: def_stmt: _42 = _37 - _38;
common/dct.c:181:5: note: type of def: 3.
common/dct.c:181:5: note: mark relevant 4, live 0.
common/dct.c:181:5: note: worklist: examine stmt: _42 = _37 - _38;
common/dct.c:181:5: note: vect_is_simple_use: operand _37
common/dct.c:181:5: note: def_stmt: _37 = (unsigned short) d02_20;
common/dct.c:181:5: note: type of def: 3.
common/dct.c:181:5: note: mark relevant 4, live 0.
common/dct.c:181:5: note: vect_is_simple_use: operand _38
common/dct.c:181:5: note: def_stmt: _38 = (unsigned short) d13_31;
common/dct.c:181:5: note: type of def: 3.
common/dct.c:181:5: note: mark relevant 4, live 0.
common/dct.c:181:5: note: worklist: examine stmt: _38 = (unsigned short) d13_31;
common/dct.c:181:5: note: vect_is_simple_use: operand d13_31
common/dct.c:181:5: note: def_stmt: d13_31 = _28 - _30;
common/dct.c:181:5: note: type of def: 3.
common/dct.c:181:5: note: mark relevant 4, live 0.
common/dct.c:181:5: note: worklist: examine stmt: d13_31 = _28 - _30;
common/dct.c:181:5: note: vect_is_simple_use: operand _28
common/dct.c:181:5: note: def_stmt: _28 = (int) _27;
common/dct.c:181:5: note: type of def: 3.
common/dct.c:181:5: note: mark relevant 4, live 0.
common/dct.c:181:5: note: vect_is_simple_use: operand _30
common/dct.c:181:5: note: def_stmt: _30 = (int) _23;
common/dct.c:181:5: note: type of def: 3.
common/dct.c:181:5: note: mark relevant 4, live 0.
common/dct.c:181:5: note: worklist: examine stmt: _30 = (int) _23;
common/dct.c:181:5: note: vect_is_simple_use: operand _23
common/dct.c:181:5: note: def_stmt: _23 = MEM[(int16_t[4] *)dct_11(D) + 24B][i_119];
common/dct.c:181:5: note: type of def: 3.
common/dct.c:181:5: note: mark relevant 4, live 0.
common/dct.c:181:5: note: already marked relevant/live.
common/dct.c:181:5: note: worklist: examine stmt: _28 = (int) _27;
common/dct.c:181:5: note: vect_is_simple_use: operand _27
common/dct.c:181:5: note: def_stmt: _27 = _21 >> 1;
common/dct.c:181:5: note: type of def: 3.
common/dct.c:181:5: note: mark relevant 4, live 0.
common/dct.c:181:5: note: worklist: examine stmt: _27 = _21 >> 1;
common/dct.c:181:5: note: vect_is_simple_use: operand _21
common/dct.c:181:5: note: def_stmt: _21 = MEM[(int16_t[4] *)dct_11(D) + 8B][i_119];
common/dct.c:181:5: note: type of def: 3.
common/dct.c:181:5: note: mark relevant 4, live 0.
common/dct.c:181:5: note: already marked relevant/live.
common/dct.c:181:5: note: worklist: examine stmt: _37 = (unsigned short) d02_20;
common/dct.c:181:5: note: vect_is_simple_use: operand d02_20
common/dct.c:181:5: note: def_stmt: d02_20 = _13 - _15;
common/dct.c:181:5: note: type of def: 3.
common/dct.c:181:5: note: mark relevant 4, live 0.
common/dct.c:181:5: note: worklist: examine stmt: d02_20 = _13 - _15;
common/dct.c:181:5: note: vect_is_simple_use: operand _13
common/dct.c:181:5: note: def_stmt: _13 = (int) _12;
common/dct.c:181:5: note: type of def: 3.
common/dct.c:181:5: note: mark relevant 4, live 0.
common/dct.c:181:5: note: already marked relevant/live.
common/dct.c:181:5: note: vect_is_simple_use: operand _15
common/dct.c:181:5: note: def_stmt: _15 = (int) _14;
common/dct.c:181:5: note: type of def: 3.
common/dct.c:181:5: note: mark relevant 4, live 0.
common/dct.c:181:5: note: already marked relevant/live.
common/dct.c:181:5: note: worklist: examine stmt: tmp[i_119][1] = _40;
common/dct.c:181:5: note: vect_is_simple_use: operand _40
common/dct.c:181:5: note: def_stmt: _40 = (short int) _39;
common/dct.c:181:5: note: type of def: 3.
common/dct.c:181:5: note: mark relevant 4, live 0.
common/dct.c:181:5: note: worklist: examine stmt: _40 = (short int) _39;
common/dct.c:181:5: note: vect_is_simple_use: operand _39
common/dct.c:181:5: note: def_stmt: _39 = _37 + _38;
common/dct.c:181:5: note: type of def: 3.
common/dct.c:181:5: note: mark relevant 4, live 0.
common/dct.c:181:5: note: worklist: examine stmt: _39 = _37 + _38;
common/dct.c:181:5: note: vect_is_simple_use: operand _37
common/dct.c:181:5: note: def_stmt: _37 = (unsigned short) d02_20;
common/dct.c:181:5: note: type of def: 3.
common/dct.c:181:5: note: mark relevant 4, live 0.
common/dct.c:181:5: note: already marked relevant/live.
common/dct.c:181:5: note: vect_is_simple_use: operand _38
common/dct.c:181:5: note: def_stmt: _38 = (unsigned short) d13_31;
common/dct.c:181:5: note: type of def: 3.
common/dct.c:181:5: note: mark relevant 4, live 0.
common/dct.c:181:5: note: already marked relevant/live.
common/dct.c:181:5: note: worklist: examine stmt: tmp[i_119][0] = _35;
common/dct.c:181:5: note: vect_is_simple_use: operand _35
common/dct.c:181:5: note: def_stmt: _35 = (short int) _34;
common/dct.c:181:5: note: type of def: 3.
common/dct.c:181:5: note: mark relevant 4, live 0.
common/dct.c:181:5: note: worklist: examine stmt: _35 = (short int) _34;
common/dct.c:181:5: note: vect_is_simple_use: operand _34
common/dct.c:181:5: note: def_stmt: _34 = _32 + _33;
common/dct.c:181:5: note: type of def: 3.
common/dct.c:181:5: note: mark relevant 4, live 0.
common/dct.c:181:5: note: worklist: examine stmt: _34 = _32 + _33;
common/dct.c:181:5: note: vect_is_simple_use: operand _32
common/dct.c:181:5: note: def_stmt: _32 = (unsigned short) s02_16;
common/dct.c:181:5: note: type of def: 3.
common/dct.c:181:5: note: mark relevant 4, live 0.
common/dct.c:181:5: note: already marked relevant/live.
common/dct.c:181:5: note: vect_is_simple_use: operand _33
common/dct.c:181:5: note: def_stmt: _33 = (unsigned short) s13_26;
common/dct.c:181:5: note: type of def: 3.
common/dct.c:181:5: note: mark relevant 4, live 0.
common/dct.c:181:5: note: already marked relevant/live.
common/dct.c:181:5: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _12 = *dct_11(D)[i_119];
  stmt_b: _14 = MEM[(int16_t[4] *)dct_11(D) + 16B][i_119];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _12 = *dct_11(D)[i_119];
  stmt_b: _21 = MEM[(int16_t[4] *)dct_11(D) + 8B][i_119];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _12 = *dct_11(D)[i_119];
  stmt_b: _23 = MEM[(int16_t[4] *)dct_11(D) + 24B][i_119];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _12 = *dct_11(D)[i_119];
  stmt_b: tmp[i_119][0] = _35;
) -> no dependence
(compute_affine_dependence
  stmt_a: _12 = *dct_11(D)[i_119];
  stmt_b: tmp[i_119][1] = _40;
) -> no dependence
(compute_affine_dependence
  stmt_a: _12 = *dct_11(D)[i_119];
  stmt_b: tmp[i_119][2] = _43;
) -> no dependence
(compute_affine_dependence
  stmt_a: _12 = *dct_11(D)[i_119];
  stmt_b: tmp[i_119][3] = _46;
) -> no dependence
(compute_affine_dependence
  stmt_a: _14 = MEM[(int16_t[4] *)dct_11(D) + 16B][i_119];
  stmt_b: _21 = MEM[(int16_t[4] *)dct_11(D) + 8B][i_119];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _14 = MEM[(int16_t[4] *)dct_11(D) + 16B][i_119];
  stmt_b: _23 = MEM[(int16_t[4] *)dct_11(D) + 24B][i_119];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _14 = MEM[(int16_t[4] *)dct_11(D) + 16B][i_119];
  stmt_b: tmp[i_119][0] = _35;
) -> no dependence
(compute_affine_dependence
  stmt_a: _14 = MEM[(int16_t[4] *)dct_11(D) + 16B][i_119];
  stmt_b: tmp[i_119][1] = _40;
) -> no dependence
(compute_affine_dependence
  stmt_a: _14 = MEM[(int16_t[4] *)dct_11(D) + 16B][i_119];
  stmt_b: tmp[i_119][2] = _43;
) -> no dependence
(compute_affine_dependence
  stmt_a: _14 = MEM[(int16_t[4] *)dct_11(D) + 16B][i_119];
  stmt_b: tmp[i_119][3] = _46;
) -> no dependence
(compute_affine_dependence
  stmt_a: _21 = MEM[(int16_t[4] *)dct_11(D) + 8B][i_119];
  stmt_b: _23 = MEM[(int16_t[4] *)dct_11(D) + 24B][i_119];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _21 = MEM[(int16_t[4] *)dct_11(D) + 8B][i_119];
  stmt_b: tmp[i_119][0] = _35;
) -> no dependence
(compute_affine_dependence
  stmt_a: _21 = MEM[(int16_t[4] *)dct_11(D) + 8B][i_119];
  stmt_b: tmp[i_119][1] = _40;
) -> no dependence
(compute_affine_dependence
  stmt_a: _21 = MEM[(int16_t[4] *)dct_11(D) + 8B][i_119];
  stmt_b: tmp[i_119][2] = _43;
) -> no dependence
(compute_affine_dependence
  stmt_a: _21 = MEM[(int16_t[4] *)dct_11(D) + 8B][i_119];
  stmt_b: tmp[i_119][3] = _46;
) -> no dependence
(compute_affine_dependence
  stmt_a: _23 = MEM[(int16_t[4] *)dct_11(D) + 24B][i_119];
  stmt_b: tmp[i_119][0] = _35;
) -> no dependence
(compute_affine_dependence
  stmt_a: _23 = MEM[(int16_t[4] *)dct_11(D) + 24B][i_119];
  stmt_b: tmp[i_119][1] = _40;
) -> no dependence
(compute_affine_dependence
  stmt_a: _23 = MEM[(int16_t[4] *)dct_11(D) + 24B][i_119];
  stmt_b: tmp[i_119][2] = _43;
) -> no dependence
(compute_affine_dependence
  stmt_a: _23 = MEM[(int16_t[4] *)dct_11(D) + 24B][i_119];
  stmt_b: tmp[i_119][3] = _46;
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[i_119][0] = _35;
  stmt_b: tmp[i_119][1] = _40;
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 1)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[i_119][0] = _35;
  stmt_b: tmp[i_119][2] = _43;
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[i_119][0] = _35;
  stmt_b: tmp[i_119][3] = _46;
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[i_119][1] = _40;
  stmt_b: tmp[i_119][2] = _43;
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[i_119][1] = _40;
  stmt_b: tmp[i_119][3] = _46;
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[i_119][2] = _43;
  stmt_b: tmp[i_119][3] = _46;
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _12 = *dct_11(D)[i_119];
  stmt_b: _12 = *dct_11(D)[i_119];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _14 = MEM[(int16_t[4] *)dct_11(D) + 16B][i_119];
  stmt_b: _14 = MEM[(int16_t[4] *)dct_11(D) + 16B][i_119];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _21 = MEM[(int16_t[4] *)dct_11(D) + 8B][i_119];
  stmt_b: _21 = MEM[(int16_t[4] *)dct_11(D) + 8B][i_119];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _23 = MEM[(int16_t[4] *)dct_11(D) + 24B][i_119];
  stmt_b: _23 = MEM[(int16_t[4] *)dct_11(D) + 24B][i_119];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: tmp[i_119][0] = _35;
  stmt_b: tmp[i_119][0] = _35;
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 0)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: tmp[i_119][1] = _40;
  stmt_b: tmp[i_119][1] = _40;
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: tmp[i_119][2] = _43;
  stmt_b: tmp[i_119][2] = _43;
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: tmp[i_119][3] = _46;
  stmt_b: tmp[i_119][3] = _46;
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/dct.c:181:5: note: === vect_determine_vectorization_factor ===
common/dct.c:181:5: note: ==> examining phi: i_119 = PHI <i_48(4), 0(2)>

common/dct.c:181:5: note: ==> examining phi: .MEM_121 = PHI <.MEM_47(4), .MEM_10(D)(2)>

common/dct.c:181:5: note: ==> examining phi: ivtmp_224 = PHI <ivtmp_223(4), 4(2)>

common/dct.c:181:5: note: ==> examining statement: # DEBUG i => i_119

common/dct.c:181:5: note: skip.
common/dct.c:181:5: note: ==> examining statement: _12 = *dct_11(D)[i_119];

common/dct.c:181:5: note: get vectype for scalar type:  short int
common/dct.c:181:5: note: vectype: vector(8) short int
common/dct.c:181:5: note: nunits = 8
common/dct.c:181:5: note: ==> examining statement: _13 = (int) _12;

common/dct.c:181:5: note: get vectype for scalar type:  int
common/dct.c:181:5: note: vectype: vector(4) int
common/dct.c:181:5: note: get vectype for scalar type:  short int
common/dct.c:181:5: note: vectype: vector(8) short int
common/dct.c:181:5: note: nunits = 8
common/dct.c:181:5: note: ==> examining statement: _14 = MEM[(int16_t[4] *)dct_11(D) + 16B][i_119];

common/dct.c:181:5: note: get vectype for scalar type:  short int
common/dct.c:181:5: note: vectype: vector(8) short int
common/dct.c:181:5: note: nunits = 8
common/dct.c:181:5: note: ==> examining statement: _15 = (int) _14;

common/dct.c:181:5: note: get vectype for scalar type:  int
common/dct.c:181:5: note: vectype: vector(4) int
common/dct.c:181:5: note: get vectype for scalar type:  short int
common/dct.c:181:5: note: vectype: vector(8) short int
common/dct.c:181:5: note: nunits = 8
common/dct.c:181:5: note: ==> examining statement: s02_16 = _13 + _15;

common/dct.c:181:5: note: get vectype for scalar type:  const int
common/dct.c:181:5: note: vectype: const vector(4) int
common/dct.c:181:5: note: get vectype for scalar type:  const int
common/dct.c:181:5: note: vectype: const vector(4) int
common/dct.c:181:5: note: nunits = 4
common/dct.c:181:5: note: ==> examining statement: # DEBUG s02 => s02_16

common/dct.c:181:5: note: skip.
common/dct.c:181:5: note: ==> examining statement: d02_20 = _13 - _15;

common/dct.c:181:5: note: get vectype for scalar type:  const int
common/dct.c:181:5: note: vectype: const vector(4) int
common/dct.c:181:5: note: get vectype for scalar type:  const int
common/dct.c:181:5: note: vectype: const vector(4) int
common/dct.c:181:5: note: nunits = 4
common/dct.c:181:5: note: ==> examining statement: # DEBUG d02 => d02_20

common/dct.c:181:5: note: skip.
common/dct.c:181:5: note: ==> examining statement: _21 = MEM[(int16_t[4] *)dct_11(D) + 8B][i_119];

common/dct.c:181:5: note: get vectype for scalar type:  short int
common/dct.c:181:5: note: vectype: vector(8) short int
common/dct.c:181:5: note: nunits = 8
common/dct.c:181:5: note: ==> examining statement: _22 = (int) _21;

common/dct.c:181:5: note: get vectype for scalar type:  int
common/dct.c:181:5: note: vectype: vector(4) int
common/dct.c:181:5: note: get vectype for scalar type:  short int
common/dct.c:181:5: note: vectype: vector(8) short int
common/dct.c:181:5: note: nunits = 8
common/dct.c:181:5: note: ==> examining statement: _23 = MEM[(int16_t[4] *)dct_11(D) + 24B][i_119];

common/dct.c:181:5: note: get vectype for scalar type:  short int
common/dct.c:181:5: note: vectype: vector(8) short int
common/dct.c:181:5: note: nunits = 8
common/dct.c:181:5: note: ==> examining statement: _24 = _23 >> 1;

common/dct.c:181:5: note: get vectype for scalar type:  short int
common/dct.c:181:5: note: vectype: vector(8) short int
common/dct.c:181:5: note: get vectype for scalar type:  short int
common/dct.c:181:5: note: vectype: vector(8) short int
common/dct.c:181:5: note: nunits = 8
common/dct.c:181:5: note: ==> examining statement: _25 = (int) _24;

common/dct.c:181:5: note: get vectype for scalar type:  int
common/dct.c:181:5: note: vectype: vector(4) int
common/dct.c:181:5: note: get vectype for scalar type:  short int
common/dct.c:181:5: note: vectype: vector(8) short int
common/dct.c:181:5: note: nunits = 8
common/dct.c:181:5: note: ==> examining statement: s13_26 = _22 + _25;

common/dct.c:181:5: note: get vectype for scalar type:  const int
common/dct.c:181:5: note: vectype: const vector(4) int
common/dct.c:181:5: note: get vectype for scalar type:  const int
common/dct.c:181:5: note: vectype: const vector(4) int
common/dct.c:181:5: note: nunits = 4
common/dct.c:181:5: note: ==> examining statement: # DEBUG s13 => s13_26

common/dct.c:181:5: note: skip.
common/dct.c:181:5: note: ==> examining statement: _27 = _21 >> 1;

common/dct.c:181:5: note: get vectype for scalar type:  short int
common/dct.c:181:5: note: vectype: vector(8) short int
common/dct.c:181:5: note: get vectype for scalar type:  short int
common/dct.c:181:5: note: vectype: vector(8) short int
common/dct.c:181:5: note: nunits = 8
common/dct.c:181:5: note: ==> examining statement: _28 = (int) _27;

common/dct.c:181:5: note: get vectype for scalar type:  int
common/dct.c:181:5: note: vectype: vector(4) int
common/dct.c:181:5: note: get vectype for scalar type:  short int
common/dct.c:181:5: note: vectype: vector(8) short int
common/dct.c:181:5: note: nunits = 8
common/dct.c:181:5: note: ==> examining statement: _30 = (int) _23;

common/dct.c:181:5: note: get vectype for scalar type:  int
common/dct.c:181:5: note: vectype: vector(4) int
common/dct.c:181:5: note: get vectype for scalar type:  short int
common/dct.c:181:5: note: vectype: vector(8) short int
common/dct.c:181:5: note: nunits = 8
common/dct.c:181:5: note: ==> examining statement: d13_31 = _28 - _30;

common/dct.c:181:5: note: get vectype for scalar type:  const int
common/dct.c:181:5: note: vectype: const vector(4) int
common/dct.c:181:5: note: get vectype for scalar type:  const int
common/dct.c:181:5: note: vectype: const vector(4) int
common/dct.c:181:5: note: nunits = 4
common/dct.c:181:5: note: ==> examining statement: # DEBUG d13 => d13_31

common/dct.c:181:5: note: skip.
common/dct.c:181:5: note: ==> examining statement: _32 = (unsigned short) s02_16;

common/dct.c:181:5: note: get vectype for scalar type:  unsigned short
common/dct.c:181:5: note: vectype: vector(8) unsigned short
common/dct.c:181:5: note: get vectype for scalar type:  unsigned short
common/dct.c:181:5: note: vectype: vector(8) unsigned short
common/dct.c:181:5: note: nunits = 8
common/dct.c:181:5: note: ==> examining statement: _33 = (unsigned short) s13_26;

common/dct.c:181:5: note: get vectype for scalar type:  unsigned short
common/dct.c:181:5: note: vectype: vector(8) unsigned short
common/dct.c:181:5: note: get vectype for scalar type:  unsigned short
common/dct.c:181:5: note: vectype: vector(8) unsigned short
common/dct.c:181:5: note: nunits = 8
common/dct.c:181:5: note: ==> examining statement: _34 = _32 + _33;

common/dct.c:181:5: note: get vectype for scalar type:  unsigned short
common/dct.c:181:5: note: vectype: vector(8) unsigned short
common/dct.c:181:5: note: get vectype for scalar type:  unsigned short
common/dct.c:181:5: note: vectype: vector(8) unsigned short
common/dct.c:181:5: note: nunits = 8
common/dct.c:181:5: note: ==> examining statement: _35 = (short int) _34;

common/dct.c:181:5: note: get vectype for scalar type:  short int
common/dct.c:181:5: note: vectype: vector(8) short int
common/dct.c:181:5: note: get vectype for scalar type:  short int
common/dct.c:181:5: note: vectype: vector(8) short int
common/dct.c:181:5: note: nunits = 8
common/dct.c:181:5: note: ==> examining statement: tmp[i_119][0] = _35;

common/dct.c:181:5: note: get vectype for scalar type:  int16_t
common/dct.c:181:5: note: vectype: vector(8) short int
common/dct.c:181:5: note: nunits = 8
common/dct.c:181:5: note: ==> examining statement: _37 = (unsigned short) d02_20;

common/dct.c:181:5: note: get vectype for scalar type:  unsigned short
common/dct.c:181:5: note: vectype: vector(8) unsigned short
common/dct.c:181:5: note: get vectype for scalar type:  unsigned short
common/dct.c:181:5: note: vectype: vector(8) unsigned short
common/dct.c:181:5: note: nunits = 8
common/dct.c:181:5: note: ==> examining statement: _38 = (unsigned short) d13_31;

common/dct.c:181:5: note: get vectype for scalar type:  unsigned short
common/dct.c:181:5: note: vectype: vector(8) unsigned short
common/dct.c:181:5: note: get vectype for scalar type:  unsigned short
common/dct.c:181:5: note: vectype: vector(8) unsigned short
common/dct.c:181:5: note: nunits = 8
common/dct.c:181:5: note: ==> examining statement: _39 = _37 + _38;

common/dct.c:181:5: note: get vectype for scalar type:  unsigned short
common/dct.c:181:5: note: vectype: vector(8) unsigned short
common/dct.c:181:5: note: get vectype for scalar type:  unsigned short
common/dct.c:181:5: note: vectype: vector(8) unsigned short
common/dct.c:181:5: note: nunits = 8
common/dct.c:181:5: note: ==> examining statement: _40 = (short int) _39;

common/dct.c:181:5: note: get vectype for scalar type:  short int
common/dct.c:181:5: note: vectype: vector(8) short int
common/dct.c:181:5: note: get vectype for scalar type:  short int
common/dct.c:181:5: note: vectype: vector(8) short int
common/dct.c:181:5: note: nunits = 8
common/dct.c:181:5: note: ==> examining statement: tmp[i_119][1] = _40;

common/dct.c:181:5: note: get vectype for scalar type:  int16_t
common/dct.c:181:5: note: vectype: vector(8) short int
common/dct.c:181:5: note: nunits = 8
common/dct.c:181:5: note: ==> examining statement: _42 = _37 - _38;

common/dct.c:181:5: note: get vectype for scalar type:  unsigned short
common/dct.c:181:5: note: vectype: vector(8) unsigned short
common/dct.c:181:5: note: get vectype for scalar type:  unsigned short
common/dct.c:181:5: note: vectype: vector(8) unsigned short
common/dct.c:181:5: note: nunits = 8
common/dct.c:181:5: note: ==> examining statement: _43 = (short int) _42;

common/dct.c:181:5: note: get vectype for scalar type:  short int
common/dct.c:181:5: note: vectype: vector(8) short int
common/dct.c:181:5: note: get vectype for scalar type:  short int
common/dct.c:181:5: note: vectype: vector(8) short int
common/dct.c:181:5: note: nunits = 8
common/dct.c:181:5: note: ==> examining statement: tmp[i_119][2] = _43;

common/dct.c:181:5: note: get vectype for scalar type:  int16_t
common/dct.c:181:5: note: vectype: vector(8) short int
common/dct.c:181:5: note: nunits = 8
common/dct.c:181:5: note: ==> examining statement: _45 = _32 - _33;

common/dct.c:181:5: note: get vectype for scalar type:  unsigned short
common/dct.c:181:5: note: vectype: vector(8) unsigned short
common/dct.c:181:5: note: get vectype for scalar type:  unsigned short
common/dct.c:181:5: note: vectype: vector(8) unsigned short
common/dct.c:181:5: note: nunits = 8
common/dct.c:181:5: note: ==> examining statement: _46 = (short int) _45;

common/dct.c:181:5: note: get vectype for scalar type:  short int
common/dct.c:181:5: note: vectype: vector(8) short int
common/dct.c:181:5: note: get vectype for scalar type:  short int
common/dct.c:181:5: note: vectype: vector(8) short int
common/dct.c:181:5: note: nunits = 8
common/dct.c:181:5: note: ==> examining statement: tmp[i_119][3] = _46;

common/dct.c:181:5: note: get vectype for scalar type:  int16_t
common/dct.c:181:5: note: vectype: vector(8) short int
common/dct.c:181:5: note: nunits = 8
common/dct.c:181:5: note: ==> examining statement: i_48 = i_119 + 1;

common/dct.c:181:5: note: skip.
common/dct.c:181:5: note: ==> examining statement: # DEBUG i => i_48

common/dct.c:181:5: note: skip.
common/dct.c:181:5: note: ==> examining statement: # DEBUG i => i_48

common/dct.c:181:5: note: skip.
common/dct.c:181:5: note: ==> examining statement: ivtmp_223 = ivtmp_224 - 1;

common/dct.c:181:5: note: skip.
common/dct.c:181:5: note: ==> examining statement: if (ivtmp_223 != 0)

common/dct.c:181:5: note: skip.
common/dct.c:181:5: note: vectorization factor = 8
common/dct.c:181:5: note: === vect_analyze_data_refs_alignment ===
common/dct.c:181:5: note: vect_compute_data_ref_alignment:
common/dct.c:181:5: note: can't force alignment of ref: *dct_11(D)[i_119]
common/dct.c:181:5: note: vect_compute_data_ref_alignment:
common/dct.c:181:5: note: can't force alignment of ref: MEM[(int16_t[4] *)dct_11(D) + 16B][i_119]
common/dct.c:181:5: note: vect_compute_data_ref_alignment:
common/dct.c:181:5: note: can't force alignment of ref: MEM[(int16_t[4] *)dct_11(D) + 8B][i_119]
common/dct.c:181:5: note: vect_compute_data_ref_alignment:
common/dct.c:181:5: note: can't force alignment of ref: MEM[(int16_t[4] *)dct_11(D) + 24B][i_119]
common/dct.c:181:5: note: vect_compute_data_ref_alignment:
common/dct.c:181:5: note: misalign = 0 bytes of ref tmp[i_119][0]
common/dct.c:181:5: note: vect_compute_data_ref_alignment:
common/dct.c:181:5: note: misalign = 2 bytes of ref tmp[i_119][1]
common/dct.c:181:5: note: vect_compute_data_ref_alignment:
common/dct.c:181:5: note: misalign = 4 bytes of ref tmp[i_119][2]
common/dct.c:181:5: note: vect_compute_data_ref_alignment:
common/dct.c:181:5: note: misalign = 6 bytes of ref tmp[i_119][3]
common/dct.c:181:5: note: === vect_prune_runtime_alias_test_list ===
common/dct.c:181:5: note: === vect_enhance_data_refs_alignment ===
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
common/dct.c:181:5: note: Unknown misalignment, is_packed = 0
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
common/dct.c:181:5: note: Unknown misalignment, is_packed = 0
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
common/dct.c:181:5: note: Unknown misalignment, is_packed = 0
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
common/dct.c:181:5: note: Unknown misalignment, is_packed = 0
common/dct.c:181:5: note: vect_can_advance_ivs_p:
common/dct.c:181:5: note: Analyze phi: i_119 = PHI <i_48(4), 0(2)>

common/dct.c:181:5: note: Analyze phi: .MEM_121 = PHI <.MEM_47(4), .MEM_10(D)(2)>

common/dct.c:181:5: note: virtual phi. skip.
common/dct.c:181:5: note: Analyze phi: ivtmp_224 = PHI <ivtmp_223(4), 4(2)>

common/dct.c:181:5: note: Setting misalignment to -1.
Applying pattern match.pd:49, generic-match.c:3223
common/dct.c:181:5: note: vect_model_load_cost: unaligned supported by hardware.
common/dct.c:181:5: note: vect_get_data_access_cost: inside_cost = 2, outside_cost = 0.
common/dct.c:181:5: note: Setting misalignment to -1.
Applying pattern match.pd:49, generic-match.c:3223
common/dct.c:181:5: note: vect_model_load_cost: unaligned supported by hardware.
common/dct.c:181:5: note: vect_get_data_access_cost: inside_cost = 4, outside_cost = 0.
common/dct.c:181:5: note: Setting misalignment to -1.
Applying pattern match.pd:49, generic-match.c:3223
common/dct.c:181:5: note: vect_model_load_cost: unaligned supported by hardware.
common/dct.c:181:5: note: vect_get_data_access_cost: inside_cost = 6, outside_cost = 0.
common/dct.c:181:5: note: Setting misalignment to -1.
Applying pattern match.pd:49, generic-match.c:3223
common/dct.c:181:5: note: vect_model_load_cost: unaligned supported by hardware.
common/dct.c:181:5: note: vect_get_data_access_cost: inside_cost = 8, outside_cost = 0.
common/dct.c:181:5: note: vect_model_store_cost: aligned.
common/dct.c:181:5: note: vect_get_data_access_cost: inside_cost = 9, outside_cost = 0.
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
common/dct.c:181:5: note: Vectorizing an unaligned access.
Applying pattern match.pd:49, generic-match.c:3223
common/dct.c:181:5: note: Vectorizing an unaligned access.
Applying pattern match.pd:49, generic-match.c:3223
common/dct.c:181:5: note: Vectorizing an unaligned access.
Applying pattern match.pd:49, generic-match.c:3223
common/dct.c:181:5: note: Vectorizing an unaligned access.
common/dct.c:181:5: note: === vect_analyze_slp ===
common/dct.c:181:5: note: Build SLP for tmp[i_119][0] = _35;

common/dct.c:181:5: note: Build SLP for tmp[i_119][1] = _40;

common/dct.c:181:5: note: Build SLP for tmp[i_119][2] = _43;

common/dct.c:181:5: note: Build SLP for tmp[i_119][3] = _46;

common/dct.c:181:5: note: vect_is_simple_use: operand _35
common/dct.c:181:5: note: def_stmt: _35 = (short int) _34;
common/dct.c:181:5: note: type of def: 3.
common/dct.c:181:5: note: vect_is_simple_use: operand _40
common/dct.c:181:5: note: def_stmt: _40 = (short int) _39;
common/dct.c:181:5: note: type of def: 3.
common/dct.c:181:5: note: vect_is_simple_use: operand _43
common/dct.c:181:5: note: def_stmt: _43 = (short int) _42;
common/dct.c:181:5: note: type of def: 3.
common/dct.c:181:5: note: vect_is_simple_use: operand _46
common/dct.c:181:5: note: def_stmt: _46 = (short int) _45;
common/dct.c:181:5: note: type of def: 3.
common/dct.c:181:5: note: Build SLP for _35 = (short int) _34;

common/dct.c:181:5: note: Build SLP for _40 = (short int) _39;

common/dct.c:181:5: note: Build SLP for _43 = (short int) _42;

common/dct.c:181:5: note: Build SLP for _46 = (short int) _45;

common/dct.c:181:5: note: vect_is_simple_use: operand _34
common/dct.c:181:5: note: def_stmt: _34 = _32 + _33;
common/dct.c:181:5: note: type of def: 3.
common/dct.c:181:5: note: vect_is_simple_use: operand _39
common/dct.c:181:5: note: def_stmt: _39 = _37 + _38;
common/dct.c:181:5: note: type of def: 3.
common/dct.c:181:5: note: vect_is_simple_use: operand _42
common/dct.c:181:5: note: def_stmt: _42 = _37 - _38;
common/dct.c:181:5: note: type of def: 3.
common/dct.c:181:5: note: vect_is_simple_use: operand _45
common/dct.c:181:5: note: def_stmt: _45 = _32 - _33;
common/dct.c:181:5: note: type of def: 3.
common/dct.c:181:5: note: Build SLP for _34 = _32 + _33;

common/dct.c:181:5: note: Build SLP for _39 = _37 + _38;

common/dct.c:181:5: note: Build SLP for _42 = _37 - _38;

common/dct.c:181:5: note: Build SLP failed: different operation in stmt _42 = _37 - _38;

common/dct.c:181:5: note: Build SLP for _45 = _32 - _33;

common/dct.c:181:5: note: Build SLP failed: different operation in stmt _45 = _32 - _33;

common/dct.c:181:5: note: === vect_make_slp_decision ===
common/dct.c:181:5: note: === vect_detect_hybrid_slp ===
common/dct.c:181:5: note: === vect_analyze_loop_operations ===
common/dct.c:181:5: note: examining phi: i_119 = PHI <i_48(4), 0(2)>

common/dct.c:181:5: note: examining phi: .MEM_121 = PHI <.MEM_47(4), .MEM_10(D)(2)>

common/dct.c:181:5: note: examining phi: ivtmp_224 = PHI <ivtmp_223(4), 4(2)>

common/dct.c:181:5: note: ==> examining statement: # DEBUG i => i_119
common/dct.c:181:5: note: irrelevant.
common/dct.c:181:5: note: ==> examining statement: _12 = *dct_11(D)[i_119];
common/dct.c:181:5: note: num. args = 4 (not unary/binary/ternary op).
common/dct.c:181:5: note: vect_is_simple_use: operand *dct_11(D)[i_119]
common/dct.c:181:5: note: not ssa-name.
common/dct.c:181:5: note: use not simple.
Applying pattern match.pd:49, generic-match.c:3223
common/dct.c:181:5: note: vect_model_load_cost: unaligned supported by hardware.
common/dct.c:181:5: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:181:5: note: ==> examining statement: _13 = (int) _12;
common/dct.c:181:5: note: vect_is_simple_use: operand _12
common/dct.c:181:5: note: def_stmt: _12 = *dct_11(D)[i_119];
common/dct.c:181:5: note: type of def: 3.
common/dct.c:181:5: note: === vectorizable_conversion ===
common/dct.c:181:5: note: vect_model_promotion_demotion_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:181:5: note: ==> examining statement: _14 = MEM[(int16_t[4] *)dct_11(D) + 16B][i_119];
common/dct.c:181:5: note: num. args = 4 (not unary/binary/ternary op).
common/dct.c:181:5: note: vect_is_simple_use: operand MEM[(int16_t[4] *)dct_11(D) + 16B][i_119]
common/dct.c:181:5: note: not ssa-name.
common/dct.c:181:5: note: use not simple.
Applying pattern match.pd:49, generic-match.c:3223
common/dct.c:181:5: note: vect_model_load_cost: unaligned supported by hardware.
common/dct.c:181:5: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:181:5: note: ==> examining statement: _15 = (int) _14;
common/dct.c:181:5: note: vect_is_simple_use: operand _14
common/dct.c:181:5: note: def_stmt: _14 = MEM[(int16_t[4] *)dct_11(D) + 16B][i_119];
common/dct.c:181:5: note: type of def: 3.
common/dct.c:181:5: note: === vectorizable_conversion ===
common/dct.c:181:5: note: vect_model_promotion_demotion_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:181:5: note: ==> examining statement: s02_16 = _13 + _15;
common/dct.c:181:5: note: vect_is_simple_use: operand _13
common/dct.c:181:5: note: def_stmt: _13 = (int) _12;
common/dct.c:181:5: note: type of def: 3.
common/dct.c:181:5: note: vect_is_simple_use: operand _15
common/dct.c:181:5: note: def_stmt: _15 = (int) _14;
common/dct.c:181:5: note: type of def: 3.
common/dct.c:181:5: note: === vectorizable_operation ===
common/dct.c:181:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:181:5: note: ==> examining statement: # DEBUG s02 => s02_16
common/dct.c:181:5: note: irrelevant.
common/dct.c:181:5: note: ==> examining statement: d02_20 = _13 - _15;
common/dct.c:181:5: note: vect_is_simple_use: operand _13
common/dct.c:181:5: note: def_stmt: _13 = (int) _12;
common/dct.c:181:5: note: type of def: 3.
common/dct.c:181:5: note: vect_is_simple_use: operand _15
common/dct.c:181:5: note: def_stmt: _15 = (int) _14;
common/dct.c:181:5: note: type of def: 3.
common/dct.c:181:5: note: === vectorizable_operation ===
common/dct.c:181:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:181:5: note: ==> examining statement: # DEBUG d02 => d02_20
common/dct.c:181:5: note: irrelevant.
common/dct.c:181:5: note: ==> examining statement: _21 = MEM[(int16_t[4] *)dct_11(D) + 8B][i_119];
common/dct.c:181:5: note: num. args = 4 (not unary/binary/ternary op).
common/dct.c:181:5: note: vect_is_simple_use: operand MEM[(int16_t[4] *)dct_11(D) + 8B][i_119]
common/dct.c:181:5: note: not ssa-name.
common/dct.c:181:5: note: use not simple.
Applying pattern match.pd:49, generic-match.c:3223
common/dct.c:181:5: note: vect_model_load_cost: unaligned supported by hardware.
common/dct.c:181:5: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:181:5: note: ==> examining statement: _22 = (int) _21;
common/dct.c:181:5: note: vect_is_simple_use: operand _21
common/dct.c:181:5: note: def_stmt: _21 = MEM[(int16_t[4] *)dct_11(D) + 8B][i_119];
common/dct.c:181:5: note: type of def: 3.
common/dct.c:181:5: note: === vectorizable_conversion ===
common/dct.c:181:5: note: vect_model_promotion_demotion_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:181:5: note: ==> examining statement: _23 = MEM[(int16_t[4] *)dct_11(D) + 24B][i_119];
common/dct.c:181:5: note: num. args = 4 (not unary/binary/ternary op).
common/dct.c:181:5: note: vect_is_simple_use: operand MEM[(int16_t[4] *)dct_11(D) + 24B][i_119]
common/dct.c:181:5: note: not ssa-name.
common/dct.c:181:5: note: use not simple.
Applying pattern match.pd:49, generic-match.c:3223
common/dct.c:181:5: note: vect_model_load_cost: unaligned supported by hardware.
common/dct.c:181:5: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:181:5: note: ==> examining statement: _24 = _23 >> 1;
common/dct.c:181:5: note: vect_is_simple_use: operand _23
common/dct.c:181:5: note: def_stmt: _23 = MEM[(int16_t[4] *)dct_11(D) + 24B][i_119];
common/dct.c:181:5: note: type of def: 3.
common/dct.c:181:5: note: vect_is_simple_use: operand 1
common/dct.c:181:5: note: vector/scalar shift/rotate found.
common/dct.c:181:5: note: === vectorizable_shift ===
common/dct.c:181:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
common/dct.c:181:5: note: ==> examining statement: _25 = (int) _24;
common/dct.c:181:5: note: vect_is_simple_use: operand _24
common/dct.c:181:5: note: def_stmt: _24 = _23 >> 1;
common/dct.c:181:5: note: type of def: 3.
common/dct.c:181:5: note: === vectorizable_conversion ===
common/dct.c:181:5: note: vect_model_promotion_demotion_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:181:5: note: ==> examining statement: s13_26 = _22 + _25;
common/dct.c:181:5: note: vect_is_simple_use: operand _22
common/dct.c:181:5: note: def_stmt: _22 = (int) _21;
common/dct.c:181:5: note: type of def: 3.
common/dct.c:181:5: note: vect_is_simple_use: operand _25
common/dct.c:181:5: note: def_stmt: _25 = (int) _24;
common/dct.c:181:5: note: type of def: 3.
common/dct.c:181:5: note: === vectorizable_operation ===
common/dct.c:181:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:181:5: note: ==> examining statement: # DEBUG s13 => s13_26
common/dct.c:181:5: note: irrelevant.
common/dct.c:181:5: note: ==> examining statement: _27 = _21 >> 1;
common/dct.c:181:5: note: vect_is_simple_use: operand _21
common/dct.c:181:5: note: def_stmt: _21 = MEM[(int16_t[4] *)dct_11(D) + 8B][i_119];
common/dct.c:181:5: note: type of def: 3.
common/dct.c:181:5: note: vect_is_simple_use: operand 1
common/dct.c:181:5: note: vector/scalar shift/rotate found.
common/dct.c:181:5: note: === vectorizable_shift ===
common/dct.c:181:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
common/dct.c:181:5: note: ==> examining statement: _28 = (int) _27;
common/dct.c:181:5: note: vect_is_simple_use: operand _27
common/dct.c:181:5: note: def_stmt: _27 = _21 >> 1;
common/dct.c:181:5: note: type of def: 3.
common/dct.c:181:5: note: === vectorizable_conversion ===
common/dct.c:181:5: note: vect_model_promotion_demotion_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:181:5: note: ==> examining statement: _30 = (int) _23;
common/dct.c:181:5: note: vect_is_simple_use: operand _23
common/dct.c:181:5: note: def_stmt: _23 = MEM[(int16_t[4] *)dct_11(D) + 24B][i_119];
common/dct.c:181:5: note: type of def: 3.
common/dct.c:181:5: note: === vectorizable_conversion ===
common/dct.c:181:5: note: vect_model_promotion_demotion_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:181:5: note: ==> examining statement: d13_31 = _28 - _30;
common/dct.c:181:5: note: vect_is_simple_use: operand _28
common/dct.c:181:5: note: def_stmt: _28 = (int) _27;
common/dct.c:181:5: note: type of def: 3.
common/dct.c:181:5: note: vect_is_simple_use: operand _30
common/dct.c:181:5: note: def_stmt: _30 = (int) _23;
common/dct.c:181:5: note: type of def: 3.
common/dct.c:181:5: note: === vectorizable_operation ===
common/dct.c:181:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:181:5: note: ==> examining statement: # DEBUG d13 => d13_31
common/dct.c:181:5: note: irrelevant.
common/dct.c:181:5: note: ==> examining statement: _32 = (unsigned short) s02_16;
common/dct.c:181:5: note: vect_is_simple_use: operand s02_16
common/dct.c:181:5: note: def_stmt: s02_16 = _13 + _15;
common/dct.c:181:5: note: type of def: 3.
common/dct.c:181:5: note: === vectorizable_conversion ===
common/dct.c:181:5: note: vect_model_promotion_demotion_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:181:5: note: ==> examining statement: _33 = (unsigned short) s13_26;
common/dct.c:181:5: note: vect_is_simple_use: operand s13_26
common/dct.c:181:5: note: def_stmt: s13_26 = _22 + _25;
common/dct.c:181:5: note: type of def: 3.
common/dct.c:181:5: note: === vectorizable_conversion ===
common/dct.c:181:5: note: vect_model_promotion_demotion_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:181:5: note: ==> examining statement: _34 = _32 + _33;
common/dct.c:181:5: note: vect_is_simple_use: operand _32
common/dct.c:181:5: note: def_stmt: _32 = (unsigned short) s02_16;
common/dct.c:181:5: note: type of def: 3.
common/dct.c:181:5: note: vect_is_simple_use: operand _33
common/dct.c:181:5: note: def_stmt: _33 = (unsigned short) s13_26;
common/dct.c:181:5: note: type of def: 3.
common/dct.c:181:5: note: === vectorizable_operation ===
common/dct.c:181:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:181:5: note: ==> examining statement: _35 = (short int) _34;
common/dct.c:181:5: note: vect_is_simple_use: operand _34
common/dct.c:181:5: note: def_stmt: _34 = _32 + _33;
common/dct.c:181:5: note: type of def: 3.
common/dct.c:181:5: note: vect_is_simple_use: operand _34
common/dct.c:181:5: note: def_stmt: _34 = _32 + _33;
common/dct.c:181:5: note: type of def: 3.
common/dct.c:181:5: note: no optab.
common/dct.c:181:5: note: vect_is_simple_use: operand _34
common/dct.c:181:5: note: def_stmt: _34 = _32 + _33;
common/dct.c:181:5: note: type of def: 3.
common/dct.c:181:5: note: === vectorizable_assignment ===
common/dct.c:181:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:181:5: note: ==> examining statement: tmp[i_119][0] = _35;
common/dct.c:181:5: note: vect_is_simple_use: operand _35
common/dct.c:181:5: note: def_stmt: _35 = (short int) _34;
common/dct.c:181:5: note: type of def: 3.
common/dct.c:181:5: note: no array mode for V8HI[4]
common/dct.c:181:5: note: vect_is_simple_use: operand _40
common/dct.c:181:5: note: def_stmt: _40 = (short int) _39;
common/dct.c:181:5: note: type of def: 3.
common/dct.c:181:5: note: vect_is_simple_use: operand _43
common/dct.c:181:5: note: def_stmt: _43 = (short int) _42;
common/dct.c:181:5: note: type of def: 3.
common/dct.c:181:5: note: vect_is_simple_use: operand _46
common/dct.c:181:5: note: def_stmt: _46 = (short int) _45;
common/dct.c:181:5: note: type of def: 3.
common/dct.c:181:5: note: vect_model_store_cost: strided group_size = 4 .
common/dct.c:181:5: note: vect_model_store_cost: aligned.
common/dct.c:181:5: note: vect_model_store_cost: inside_cost = 9, prologue_cost = 0 .
common/dct.c:181:5: note: ==> examining statement: _37 = (unsigned short) d02_20;
common/dct.c:181:5: note: vect_is_simple_use: operand d02_20
common/dct.c:181:5: note: def_stmt: d02_20 = _13 - _15;
common/dct.c:181:5: note: type of def: 3.
common/dct.c:181:5: note: === vectorizable_conversion ===
common/dct.c:181:5: note: vect_model_promotion_demotion_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:181:5: note: ==> examining statement: _38 = (unsigned short) d13_31;
common/dct.c:181:5: note: vect_is_simple_use: operand d13_31
common/dct.c:181:5: note: def_stmt: d13_31 = _28 - _30;
common/dct.c:181:5: note: type of def: 3.
common/dct.c:181:5: note: === vectorizable_conversion ===
common/dct.c:181:5: note: vect_model_promotion_demotion_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:181:5: note: ==> examining statement: _39 = _37 + _38;
common/dct.c:181:5: note: vect_is_simple_use: operand _37
common/dct.c:181:5: note: def_stmt: _37 = (unsigned short) d02_20;
common/dct.c:181:5: note: type of def: 3.
common/dct.c:181:5: note: vect_is_simple_use: operand _38
common/dct.c:181:5: note: def_stmt: _38 = (unsigned short) d13_31;
common/dct.c:181:5: note: type of def: 3.
common/dct.c:181:5: note: === vectorizable_operation ===
common/dct.c:181:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:181:5: note: ==> examining statement: _40 = (short int) _39;
common/dct.c:181:5: note: vect_is_simple_use: operand _39
common/dct.c:181:5: note: def_stmt: _39 = _37 + _38;
common/dct.c:181:5: note: type of def: 3.
common/dct.c:181:5: note: vect_is_simple_use: operand _39
common/dct.c:181:5: note: def_stmt: _39 = _37 + _38;
common/dct.c:181:5: note: type of def: 3.
common/dct.c:181:5: note: no optab.
common/dct.c:181:5: note: vect_is_simple_use: operand _39
common/dct.c:181:5: note: def_stmt: _39 = _37 + _38;
common/dct.c:181:5: note: type of def: 3.
common/dct.c:181:5: note: === vectorizable_assignment ===
common/dct.c:181:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:181:5: note: ==> examining statement: tmp[i_119][1] = _40;
common/dct.c:181:5: note: vect_is_simple_use: operand _40
common/dct.c:181:5: note: def_stmt: _40 = (short int) _39;
common/dct.c:181:5: note: type of def: 3.
common/dct.c:181:5: note: no array mode for V8HI[4]
common/dct.c:181:5: note: vect_model_store_cost: aligned.
common/dct.c:181:5: note: vect_model_store_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:181:5: note: ==> examining statement: _42 = _37 - _38;
common/dct.c:181:5: note: vect_is_simple_use: operand _37
common/dct.c:181:5: note: def_stmt: _37 = (unsigned short) d02_20;
common/dct.c:181:5: note: type of def: 3.
common/dct.c:181:5: note: vect_is_simple_use: operand _38
common/dct.c:181:5: note: def_stmt: _38 = (unsigned short) d13_31;
common/dct.c:181:5: note: type of def: 3.
common/dct.c:181:5: note: === vectorizable_operation ===
common/dct.c:181:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:181:5: note: ==> examining statement: _43 = (short int) _42;
common/dct.c:181:5: note: vect_is_simple_use: operand _42
common/dct.c:181:5: note: def_stmt: _42 = _37 - _38;
common/dct.c:181:5: note: type of def: 3.
common/dct.c:181:5: note: vect_is_simple_use: operand _42
common/dct.c:181:5: note: def_stmt: _42 = _37 - _38;
common/dct.c:181:5: note: type of def: 3.
common/dct.c:181:5: note: no optab.
common/dct.c:181:5: note: vect_is_simple_use: operand _42
common/dct.c:181:5: note: def_stmt: _42 = _37 - _38;
common/dct.c:181:5: note: type of def: 3.
common/dct.c:181:5: note: === vectorizable_assignment ===
common/dct.c:181:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:181:5: note: ==> examining statement: tmp[i_119][2] = _43;
common/dct.c:181:5: note: vect_is_simple_use: operand _43
common/dct.c:181:5: note: def_stmt: _43 = (short int) _42;
common/dct.c:181:5: note: type of def: 3.
common/dct.c:181:5: note: no array mode for V8HI[4]
common/dct.c:181:5: note: vect_model_store_cost: aligned.
common/dct.c:181:5: note: vect_model_store_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:181:5: note: ==> examining statement: _45 = _32 - _33;
common/dct.c:181:5: note: vect_is_simple_use: operand _32
common/dct.c:181:5: note: def_stmt: _32 = (unsigned short) s02_16;
common/dct.c:181:5: note: type of def: 3.
common/dct.c:181:5: note: vect_is_simple_use: operand _33
common/dct.c:181:5: note: def_stmt: _33 = (unsigned short) s13_26;
common/dct.c:181:5: note: type of def: 3.
common/dct.c:181:5: note: === vectorizable_operation ===
common/dct.c:181:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:181:5: note: ==> examining statement: _46 = (short int) _45;
common/dct.c:181:5: note: vect_is_simple_use: operand _45
common/dct.c:181:5: note: def_stmt: _45 = _32 - _33;
common/dct.c:181:5: note: type of def: 3.
common/dct.c:181:5: note: vect_is_simple_use: operand _45
common/dct.c:181:5: note: def_stmt: _45 = _32 - _33;
common/dct.c:181:5: note: type of def: 3.
common/dct.c:181:5: note: no optab.
common/dct.c:181:5: note: vect_is_simple_use: operand _45
common/dct.c:181:5: note: def_stmt: _45 = _32 - _33;
common/dct.c:181:5: note: type of def: 3.
common/dct.c:181:5: note: === vectorizable_assignment ===
common/dct.c:181:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:181:5: note: ==> examining statement: tmp[i_119][3] = _46;
common/dct.c:181:5: note: vect_is_simple_use: operand _46
common/dct.c:181:5: note: def_stmt: _46 = (short int) _45;
common/dct.c:181:5: note: type of def: 3.
common/dct.c:181:5: note: no array mode for V8HI[4]
common/dct.c:181:5: note: vect_model_store_cost: aligned.
common/dct.c:181:5: note: vect_model_store_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:181:5: note: ==> examining statement: i_48 = i_119 + 1;
common/dct.c:181:5: note: irrelevant.
common/dct.c:181:5: note: ==> examining statement: # DEBUG i => i_48
common/dct.c:181:5: note: irrelevant.
common/dct.c:181:5: note: ==> examining statement: # DEBUG i => i_48
common/dct.c:181:5: note: irrelevant.
common/dct.c:181:5: note: ==> examining statement: ivtmp_223 = ivtmp_224 - 1;
common/dct.c:181:5: note: irrelevant.
common/dct.c:181:5: note: ==> examining statement: if (ivtmp_223 != 0)
common/dct.c:181:5: note: irrelevant.
common/dct.c:181:5: note: vectorization_factor = 8, niters = 4
common/dct.c:181:5: note: not vectorized: iteration count too small.
common/dct.c:181:5: note: not vectorized: iteration count smaller than vectorization factor.
common/dct.c:181:5: note: bad operation or unsupported loop bound.
common/dct.c:174:13: note: vectorized 0 loops in function.
add4x4_idct (uint8_t * p_dst, int16_t[4] * dct)
{
  const int d13;
  const int s13;
  const int d02;
  const int s02;
  const int d13;
  const int s13;
  const int d02;
  const int s02;
  int i;
  int y;
  int x;
  int16_t tmp[4][4];
  int16_t d[4][4];
  short int _12;
  int _13;
  short int _14;
  int _15;
  short int _21;
  int _22;
  short int _23;
  short int _24;
  int _25;
  short int _27;
  int _28;
  int _30;
  unsigned short _32;
  unsigned short _33;
  unsigned short _34;
  short int _35;
  unsigned short _37;
  unsigned short _38;
  unsigned short _39;
  short int _40;
  unsigned short _42;
  short int _43;
  unsigned short _45;
  short int _46;
  short int _49;
  int _50;
  short int _51;
  int _52;
  short int _55;
  int _56;
  short int _57;
  short int _58;
  int _59;
  short int _61;
  int _62;
  int _63;
  int _65;
  int _66;
  int _67;
  short int _68;
  int _70;
  int _71;
  int _72;
  short int _73;
  int _75;
  int _76;
  int _77;
  short int _78;
  int _80;
  int _81;
  int _82;
  short int _83;
  sizetype _87;
  uint8_t * _88;
  unsigned char _89;
  int _90;
  short int _91;
  int _92;
  int _93;
  int _94;
  int _101;
  int _102;
  unsigned char iftmp.0_103;
  unsigned char iftmp.0_104;
  unsigned char iftmp.0_105;
  int patt_221;
  int patt_222;
  unsigned int ivtmp_223;
  unsigned int ivtmp_224;
  unsigned int ivtmp_225;
  unsigned int ivtmp_226;
  unsigned int ivtmp_227;
  unsigned int ivtmp_228;
  unsigned int ivtmp_229;
  unsigned int ivtmp_230;

  <bb 2>:
  # DEBUG i => 0
  # DEBUG i => 0

  <bb 3>:
  # i_119 = PHI <i_48(4), 0(2)>
  # ivtmp_224 = PHI <ivtmp_223(4), 4(2)>
  # DEBUG i => i_119
  _12 = *dct_11(D)[i_119];
  _13 = (int) _12;
  _14 = MEM[(int16_t[4] *)dct_11(D) + 16B][i_119];
  _15 = (int) _14;
  s02_16 = _13 + _15;
  # DEBUG s02 => s02_16
  d02_20 = _13 - _15;
  # DEBUG d02 => d02_20
  _21 = MEM[(int16_t[4] *)dct_11(D) + 8B][i_119];
  _22 = (int) _21;
  _23 = MEM[(int16_t[4] *)dct_11(D) + 24B][i_119];
  _24 = _23 >> 1;
  _25 = (int) _24;
  s13_26 = _22 + _25;
  # DEBUG s13 => s13_26
  _27 = _21 >> 1;
  _28 = (int) _27;
  _30 = (int) _23;
  d13_31 = _28 - _30;
  # DEBUG d13 => d13_31
  _32 = (unsigned short) s02_16;
  _33 = (unsigned short) s13_26;
  _34 = _32 + _33;
  _35 = (short int) _34;
  tmp[i_119][0] = _35;
  _37 = (unsigned short) d02_20;
  _38 = (unsigned short) d13_31;
  _39 = _37 + _38;
  _40 = (short int) _39;
  tmp[i_119][1] = _40;
  _42 = _37 - _38;
  _43 = (short int) _42;
  tmp[i_119][2] = _43;
  _45 = _32 - _33;
  _46 = (short int) _45;
  tmp[i_119][3] = _46;
  i_48 = i_119 + 1;
  # DEBUG i => i_48
  # DEBUG i => i_48
  ivtmp_223 = ivtmp_224 - 1;
  if (ivtmp_223 != 0)
    goto <bb 4>;
  else
    goto <bb 5>;

  <bb 4>:
  goto <bb 3>;

  <bb 5>:

  <bb 6>:
  # i_120 = PHI <0(5), i_85(8)>
  # ivtmp_226 = PHI <4(5), ivtmp_225(8)>
  # DEBUG i => i_120
  _49 = tmp[0][i_120];
  _50 = (int) _49;
  _51 = tmp[2][i_120];
  _52 = (int) _51;
  s02_53 = _50 + _52;
  # DEBUG s02 => s02_53
  d02_54 = _50 - _52;
  # DEBUG d02 => d02_54
  _55 = tmp[1][i_120];
  _56 = (int) _55;
  _57 = tmp[3][i_120];
  _58 = _57 >> 1;
  _59 = (int) _58;
  s13_60 = _56 + _59;
  # DEBUG s13 => s13_60
  _61 = _55 >> 1;
  _62 = (int) _61;
  _63 = (int) _57;
  d13_64 = _62 - _63;
  # DEBUG d13 => d13_64
  _65 = s02_53 + s13_60;
  _66 = _65 + 32;
  _67 = _66 >> 6;
  _68 = (short int) _67;
  d[0][i_120] = _68;
  _70 = d02_54 + d13_64;
  _71 = _70 + 32;
  _72 = _71 >> 6;
  _73 = (short int) _72;
  d[1][i_120] = _73;
  _75 = d02_54 - d13_64;
  _76 = _75 + 32;
  _77 = _76 >> 6;
  _78 = (short int) _77;
  d[2][i_120] = _78;
  _80 = s02_53 - s13_60;
  _81 = _80 + 32;
  _82 = _81 >> 6;
  _83 = (short int) _82;
  d[3][i_120] = _83;
  i_85 = i_120 + 1;
  # DEBUG i => i_85
  # DEBUG i => i_85
  ivtmp_225 = ivtmp_226 - 1;
  if (ivtmp_225 != 0)
    goto <bb 8>;
  else
    goto <bb 7>;

  <bb 7>:
  goto <bb 13>;

  <bb 8>:
  goto <bb 6>;

  <bb 9>:

  <bb 10>:
  # x_107 = PHI <x_96(9), 0(13)>
  # ivtmp_230 = PHI <ivtmp_229(9), 4(13)>
  # DEBUG x => NULL
  _87 = (sizetype) x_107;
  _88 = p_dst_17 + _87;
  _89 = *_88;
  _90 = (int) _89;
  _91 = d[y_118][x_107];
  _92 = (int) _91;
  _93 = _90 + _92;
  # DEBUG x => NULL
  _94 = _93 & -256;
  _101 = -_93;
  _102 = _101 >> 31;
  iftmp.0_103 = (unsigned char) _102;
  iftmp.0_104 = (unsigned char) _93;
  iftmp.0_105 = _94 != 0 ? iftmp.0_103 : iftmp.0_104;
  # DEBUG x => NULL
  *_88 = iftmp.0_105;
  x_96 = x_107 + 1;
  # DEBUG x => x_96
  # DEBUG x => x_96
  ivtmp_229 = ivtmp_230 - 1;
  if (ivtmp_229 != 0)
    goto <bb 9>;
  else
    goto <bb 11>;

  <bb 11>:
  p_dst_97 = p_dst_17 + 32;
  # DEBUG p_dst => p_dst_97
  y_98 = y_118 + 1;
  # DEBUG y => y_98
  # DEBUG y => y_98
  # DEBUG p_dst => p_dst_97
  ivtmp_227 = ivtmp_228 - 1;
  if (ivtmp_227 != 0)
    goto <bb 12>;
  else
    goto <bb 14>;

  <bb 12>:

  <bb 13>:
  # p_dst_17 = PHI <p_dst_86(D)(7), p_dst_97(12)>
  # y_118 = PHI <0(7), y_98(12)>
  # ivtmp_228 = PHI <4(7), ivtmp_227(12)>
  # DEBUG y => y_118
  # DEBUG p_dst => p_dst_17
  # DEBUG x => 0
  goto <bb 10>;

  <bb 14>:
  d ={v} {CLOBBER};
  tmp ={v} {CLOBBER};
  return;

}



;; Function sub8x8_dct8 (sub8x8_dct8, funcdef_no=124, decl_uid=5961, cgraph_uid=124, symbol_order=169)


Analyzing loop at common/dct.c:281
common/dct.c:281:5: note: ===== analyze_loop_nest =====
common/dct.c:281:5: note: === vect_analyze_loop_form ===
common/dct.c:281:5: note: === get_loop_niters ===
Analyzing # of iterations of loop 2
  exit condition [7, + , 4294967295] != 0
  bounds on difference of bases: -7 ... -7
  result:
    # of iterations 7, bounded by 7
common/dct.c:281:5: note: === vect_analyze_data_refs ===
Creating dr for tmp[i_33][0]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &tmp
	offset from base address: 0
	constant offset from base address: 0
	step: 16
	aligned to: 128
	base_object: tmp
	Access function 0: 0
	Access function 1: {0, +, 1}_2
Creating dr for tmp[i_33][7]
analyze_innermost: success.
	base_address: &tmp
	offset from base address: 0
	constant offset from base address: 14
	step: 16
	aligned to: 128
	base_object: tmp
	Access function 0: 7
	Access function 1: {0, +, 1}_2
Creating dr for tmp[i_33][1]
analyze_innermost: success.
	base_address: &tmp
	offset from base address: 0
	constant offset from base address: 2
	step: 16
	aligned to: 128
	base_object: tmp
	Access function 0: 1
	Access function 1: {0, +, 1}_2
Creating dr for tmp[i_33][6]
analyze_innermost: success.
	base_address: &tmp
	offset from base address: 0
	constant offset from base address: 12
	step: 16
	aligned to: 128
	base_object: tmp
	Access function 0: 6
	Access function 1: {0, +, 1}_2
Creating dr for tmp[i_33][2]
analyze_innermost: success.
	base_address: &tmp
	offset from base address: 0
	constant offset from base address: 4
	step: 16
	aligned to: 128
	base_object: tmp
	Access function 0: 2
	Access function 1: {0, +, 1}_2
Creating dr for tmp[i_33][5]
analyze_innermost: success.
	base_address: &tmp
	offset from base address: 0
	constant offset from base address: 10
	step: 16
	aligned to: 128
	base_object: tmp
	Access function 0: 5
	Access function 1: {0, +, 1}_2
Creating dr for tmp[i_33][3]
analyze_innermost: success.
	base_address: &tmp
	offset from base address: 0
	constant offset from base address: 6
	step: 16
	aligned to: 128
	base_object: tmp
	Access function 0: 3
	Access function 1: {0, +, 1}_2
Creating dr for tmp[i_33][4]
analyze_innermost: success.
	base_address: &tmp
	offset from base address: 0
	constant offset from base address: 8
	step: 16
	aligned to: 128
	base_object: tmp
	Access function 0: 4
	Access function 1: {0, +, 1}_2
Creating dr for *dct_149(D)[i_33]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: dct_149(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 2
	aligned to: 128
	base_object: *dct_149(D)
	Access function 0: {0, +, 1}_2
Creating dr for MEM[(int16_t[8] *)dct_149(D) + 16B][i_33]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: dct_149(D)
	offset from base address: 0
	constant offset from base address: 16
	step: 2
	aligned to: 128
	base_object: MEM[(int16_t[8] *)dct_149(D) + 16B]
	Access function 0: {0, +, 1}_2
Creating dr for MEM[(int16_t[8] *)dct_149(D) + 32B][i_33]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: dct_149(D)
	offset from base address: 0
	constant offset from base address: 32
	step: 2
	aligned to: 128
	base_object: MEM[(int16_t[8] *)dct_149(D) + 32B]
	Access function 0: {0, +, 1}_2
Creating dr for MEM[(int16_t[8] *)dct_149(D) + 48B][i_33]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: dct_149(D)
	offset from base address: 0
	constant offset from base address: 48
	step: 2
	aligned to: 128
	base_object: MEM[(int16_t[8] *)dct_149(D) + 48B]
	Access function 0: {0, +, 1}_2
Creating dr for MEM[(int16_t[8] *)dct_149(D) + 64B][i_33]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: dct_149(D)
	offset from base address: 0
	constant offset from base address: 64
	step: 2
	aligned to: 128
	base_object: MEM[(int16_t[8] *)dct_149(D) + 64B]
	Access function 0: {0, +, 1}_2
Creating dr for MEM[(int16_t[8] *)dct_149(D) + 80B][i_33]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: dct_149(D)
	offset from base address: 0
	constant offset from base address: 80
	step: 2
	aligned to: 128
	base_object: MEM[(int16_t[8] *)dct_149(D) + 80B]
	Access function 0: {0, +, 1}_2
Creating dr for MEM[(int16_t[8] *)dct_149(D) + 96B][i_33]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: dct_149(D)
	offset from base address: 0
	constant offset from base address: 96
	step: 2
	aligned to: 128
	base_object: MEM[(int16_t[8] *)dct_149(D) + 96B]
	Access function 0: {0, +, 1}_2
Creating dr for MEM[(int16_t[8] *)dct_149(D) + 112B][i_33]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: dct_149(D)
	offset from base address: 0
	constant offset from base address: 112
	step: 2
	aligned to: 128
	base_object: MEM[(int16_t[8] *)dct_149(D) + 112B]
	Access function 0: {0, +, 1}_2
common/dct.c:281:5: note: got vectype for stmt: _101 = tmp[i_33][0];
vector(8) short int
common/dct.c:281:5: note: got vectype for stmt: _103 = tmp[i_33][7];
vector(8) short int
common/dct.c:281:5: note: got vectype for stmt: _106 = tmp[i_33][1];
vector(8) short int
common/dct.c:281:5: note: got vectype for stmt: _108 = tmp[i_33][6];
vector(8) short int
common/dct.c:281:5: note: got vectype for stmt: _111 = tmp[i_33][2];
vector(8) short int
common/dct.c:281:5: note: got vectype for stmt: _113 = tmp[i_33][5];
vector(8) short int
common/dct.c:281:5: note: got vectype for stmt: _116 = tmp[i_33][3];
vector(8) short int
common/dct.c:281:5: note: got vectype for stmt: _118 = tmp[i_33][4];
vector(8) short int
common/dct.c:281:5: note: got vectype for stmt: *dct_149(D)[i_33] = _148;
vector(8) short int
common/dct.c:281:5: note: got vectype for stmt: MEM[(int16_t[8] *)dct_149(D) + 16B][i_33] = _155;
vector(8) short int
common/dct.c:281:5: note: got vectype for stmt: MEM[(int16_t[8] *)dct_149(D) + 32B][i_33] = _161;
vector(8) short int
common/dct.c:281:5: note: got vectype for stmt: MEM[(int16_t[8] *)dct_149(D) + 48B][i_33] = _167;
vector(8) short int
common/dct.c:281:5: note: got vectype for stmt: MEM[(int16_t[8] *)dct_149(D) + 64B][i_33] = _170;
vector(8) short int
common/dct.c:281:5: note: got vectype for stmt: MEM[(int16_t[8] *)dct_149(D) + 80B][i_33] = _176;
vector(8) short int
common/dct.c:281:5: note: got vectype for stmt: MEM[(int16_t[8] *)dct_149(D) + 96B][i_33] = _182;
vector(8) short int
common/dct.c:281:5: note: got vectype for stmt: MEM[(int16_t[8] *)dct_149(D) + 112B][i_33] = _188;
vector(8) short int
common/dct.c:281:5: note: === vect_analyze_scalar_cycles ===
common/dct.c:281:5: note: Analyze phi: i_33 = PHI <0(11), i_190(13)>

common/dct.c:281:5: note: Access function of PHI: {0, +, 1}_2
common/dct.c:281:5: note: step: 1,  init: 0
common/dct.c:281:5: note: Detected induction.
common/dct.c:281:5: note: Analyze phi: .MEM_230 = PHI <.MEM_99(11), .MEM_189(13)>

common/dct.c:281:5: note: Analyze phi: ivtmp_538 = PHI <8(11), ivtmp_536(13)>

common/dct.c:281:5: note: Access function of PHI: {8, +, 4294967295}_2
common/dct.c:281:5: note: step: 4294967295,  init: 8
common/dct.c:281:5: note: Detected induction.
common/dct.c:281:5: note: === vect_pattern_recog ===
common/dct.c:281:5: note: === vect_analyze_data_ref_accesses ===
common/dct.c:281:5: note: Detected interleaving tmp[i_33][0] and tmp[i_33][1]
common/dct.c:281:5: note: Detected interleaving tmp[i_33][0] and tmp[i_33][2]
common/dct.c:281:5: note: Detected interleaving tmp[i_33][0] and tmp[i_33][3]
common/dct.c:281:5: note: Detected interleaving tmp[i_33][0] and tmp[i_33][4]
common/dct.c:281:5: note: Detected interleaving tmp[i_33][0] and tmp[i_33][5]
common/dct.c:281:5: note: Detected interleaving tmp[i_33][0] and tmp[i_33][6]
common/dct.c:281:5: note: Detected interleaving tmp[i_33][0] and tmp[i_33][7]
common/dct.c:281:5: note: Detected interleaving of size 8
common/dct.c:281:5: note: === vect_mark_stmts_to_be_vectorized ===
common/dct.c:281:5: note: init: phi relevant? i_33 = PHI <0(11), i_190(13)>
common/dct.c:281:5: note: init: phi relevant? .MEM_230 = PHI <.MEM_99(11), .MEM_189(13)>
common/dct.c:281:5: note: init: phi relevant? ivtmp_538 = PHI <8(11), ivtmp_536(13)>
common/dct.c:281:5: note: init: stmt relevant? # DEBUG i => i_33
common/dct.c:281:5: note: init: stmt relevant? _101 = tmp[i_33][0];
common/dct.c:281:5: note: init: stmt relevant? _102 = (int) _101;
common/dct.c:281:5: note: init: stmt relevant? _103 = tmp[i_33][7];
common/dct.c:281:5: note: init: stmt relevant? _104 = (int) _103;
common/dct.c:281:5: note: init: stmt relevant? s07_105 = _102 + _104;
common/dct.c:281:5: note: init: stmt relevant? # DEBUG s07 => s07_105
common/dct.c:281:5: note: init: stmt relevant? _106 = tmp[i_33][1];
common/dct.c:281:5: note: init: stmt relevant? _107 = (int) _106;
common/dct.c:281:5: note: init: stmt relevant? _108 = tmp[i_33][6];
common/dct.c:281:5: note: init: stmt relevant? _109 = (int) _108;
common/dct.c:281:5: note: init: stmt relevant? s16_110 = _107 + _109;
common/dct.c:281:5: note: init: stmt relevant? # DEBUG s16 => s16_110
common/dct.c:281:5: note: init: stmt relevant? _111 = tmp[i_33][2];
common/dct.c:281:5: note: init: stmt relevant? _112 = (int) _111;
common/dct.c:281:5: note: init: stmt relevant? _113 = tmp[i_33][5];
common/dct.c:281:5: note: init: stmt relevant? _114 = (int) _113;
common/dct.c:281:5: note: init: stmt relevant? s25_115 = _112 + _114;
common/dct.c:281:5: note: init: stmt relevant? # DEBUG s25 => s25_115
common/dct.c:281:5: note: init: stmt relevant? _116 = tmp[i_33][3];
common/dct.c:281:5: note: init: stmt relevant? _117 = (int) _116;
common/dct.c:281:5: note: init: stmt relevant? _118 = tmp[i_33][4];
common/dct.c:281:5: note: init: stmt relevant? _119 = (int) _118;
common/dct.c:281:5: note: init: stmt relevant? s34_120 = _117 + _119;
common/dct.c:281:5: note: init: stmt relevant? # DEBUG s34 => s34_120
common/dct.c:281:5: note: init: stmt relevant? a0_121 = s07_105 + s34_120;
common/dct.c:281:5: note: init: stmt relevant? # DEBUG a0 => a0_121
common/dct.c:281:5: note: init: stmt relevant? a1_122 = s16_110 + s25_115;
common/dct.c:281:5: note: init: stmt relevant? # DEBUG a1 => a1_122
common/dct.c:281:5: note: init: stmt relevant? a2_123 = s07_105 - s34_120;
common/dct.c:281:5: note: init: stmt relevant? # DEBUG a2 => a2_123
common/dct.c:281:5: note: init: stmt relevant? a3_124 = s16_110 - s25_115;
common/dct.c:281:5: note: init: stmt relevant? # DEBUG a3 => a3_124
common/dct.c:281:5: note: init: stmt relevant? d07_125 = _102 - _104;
common/dct.c:281:5: note: init: stmt relevant? # DEBUG d07 => d07_125
common/dct.c:281:5: note: init: stmt relevant? d16_126 = _107 - _109;
common/dct.c:281:5: note: init: stmt relevant? # DEBUG d16 => d16_126
common/dct.c:281:5: note: init: stmt relevant? d25_127 = _112 - _114;
common/dct.c:281:5: note: init: stmt relevant? # DEBUG d25 => d25_127
common/dct.c:281:5: note: init: stmt relevant? d34_128 = _117 - _119;
common/dct.c:281:5: note: init: stmt relevant? # DEBUG d34 => d34_128
common/dct.c:281:5: note: init: stmt relevant? _129 = d16_126 + d25_127;
common/dct.c:281:5: note: init: stmt relevant? _130 = d07_125 >> 1;
common/dct.c:281:5: note: init: stmt relevant? _131 = d07_125 + _130;
common/dct.c:281:5: note: init: stmt relevant? a4_132 = _129 + _131;
common/dct.c:281:5: note: init: stmt relevant? # DEBUG a4 => a4_132
common/dct.c:281:5: note: init: stmt relevant? _133 = d07_125 - d34_128;
common/dct.c:281:5: note: init: stmt relevant? _134 = d25_127 >> 1;
common/dct.c:281:5: note: init: stmt relevant? _135 = d25_127 + _134;
common/dct.c:281:5: note: init: stmt relevant? a5_136 = _133 - _135;
common/dct.c:281:5: note: init: stmt relevant? # DEBUG a5 => a5_136
common/dct.c:281:5: note: init: stmt relevant? _137 = d07_125 + d34_128;
common/dct.c:281:5: note: init: stmt relevant? _138 = d16_126 >> 1;
common/dct.c:281:5: note: init: stmt relevant? _139 = d16_126 + _138;
common/dct.c:281:5: note: init: stmt relevant? a6_140 = _137 - _139;
common/dct.c:281:5: note: init: stmt relevant? # DEBUG a6 => a6_140
common/dct.c:281:5: note: init: stmt relevant? _141 = d16_126 - d25_127;
common/dct.c:281:5: note: init: stmt relevant? _142 = d34_128 >> 1;
common/dct.c:281:5: note: init: stmt relevant? _143 = d34_128 + _142;
common/dct.c:281:5: note: init: stmt relevant? a7_144 = _141 + _143;
common/dct.c:281:5: note: init: stmt relevant? # DEBUG a7 => a7_144
common/dct.c:281:5: note: init: stmt relevant? _145 = (unsigned short) a0_121;
common/dct.c:281:5: note: init: stmt relevant? _146 = (unsigned short) a1_122;
common/dct.c:281:5: note: init: stmt relevant? _147 = _145 + _146;
common/dct.c:281:5: note: init: stmt relevant? _148 = (short int) _147;
common/dct.c:281:5: note: init: stmt relevant? *dct_149(D)[i_33] = _148;
common/dct.c:281:5: note: vec_stmt_relevant_p: stmt has vdefs.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: init: stmt relevant? _151 = a7_144 >> 2;
common/dct.c:281:5: note: init: stmt relevant? _152 = (unsigned short) _151;
common/dct.c:281:5: note: init: stmt relevant? _153 = (unsigned short) a4_132;
common/dct.c:281:5: note: init: stmt relevant? _154 = _152 + _153;
common/dct.c:281:5: note: init: stmt relevant? _155 = (short int) _154;
common/dct.c:281:5: note: init: stmt relevant? MEM[(int16_t[8] *)dct_149(D) + 16B][i_33] = _155;
common/dct.c:281:5: note: vec_stmt_relevant_p: stmt has vdefs.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: init: stmt relevant? _157 = a3_124 >> 1;
common/dct.c:281:5: note: init: stmt relevant? _158 = (unsigned short) _157;
common/dct.c:281:5: note: init: stmt relevant? _159 = (unsigned short) a2_123;
common/dct.c:281:5: note: init: stmt relevant? _160 = _158 + _159;
common/dct.c:281:5: note: init: stmt relevant? _161 = (short int) _160;
common/dct.c:281:5: note: init: stmt relevant? MEM[(int16_t[8] *)dct_149(D) + 32B][i_33] = _161;
common/dct.c:281:5: note: vec_stmt_relevant_p: stmt has vdefs.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: init: stmt relevant? _163 = a6_140 >> 2;
common/dct.c:281:5: note: init: stmt relevant? _164 = (unsigned short) _163;
common/dct.c:281:5: note: init: stmt relevant? _165 = (unsigned short) a5_136;
common/dct.c:281:5: note: init: stmt relevant? _166 = _164 + _165;
common/dct.c:281:5: note: init: stmt relevant? _167 = (short int) _166;
common/dct.c:281:5: note: init: stmt relevant? MEM[(int16_t[8] *)dct_149(D) + 48B][i_33] = _167;
common/dct.c:281:5: note: vec_stmt_relevant_p: stmt has vdefs.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: init: stmt relevant? _169 = _145 - _146;
common/dct.c:281:5: note: init: stmt relevant? _170 = (short int) _169;
common/dct.c:281:5: note: init: stmt relevant? MEM[(int16_t[8] *)dct_149(D) + 64B][i_33] = _170;
common/dct.c:281:5: note: vec_stmt_relevant_p: stmt has vdefs.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: init: stmt relevant? _172 = (unsigned short) a6_140;
common/dct.c:281:5: note: init: stmt relevant? _173 = a5_136 >> 2;
common/dct.c:281:5: note: init: stmt relevant? _174 = (unsigned short) _173;
common/dct.c:281:5: note: init: stmt relevant? _175 = _172 - _174;
common/dct.c:281:5: note: init: stmt relevant? _176 = (short int) _175;
common/dct.c:281:5: note: init: stmt relevant? MEM[(int16_t[8] *)dct_149(D) + 80B][i_33] = _176;
common/dct.c:281:5: note: vec_stmt_relevant_p: stmt has vdefs.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: init: stmt relevant? _178 = a2_123 >> 1;
common/dct.c:281:5: note: init: stmt relevant? _179 = (unsigned short) _178;
common/dct.c:281:5: note: init: stmt relevant? _180 = (unsigned short) a3_124;
common/dct.c:281:5: note: init: stmt relevant? _181 = _179 - _180;
common/dct.c:281:5: note: init: stmt relevant? _182 = (short int) _181;
common/dct.c:281:5: note: init: stmt relevant? MEM[(int16_t[8] *)dct_149(D) + 96B][i_33] = _182;
common/dct.c:281:5: note: vec_stmt_relevant_p: stmt has vdefs.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: init: stmt relevant? _184 = a4_132 >> 2;
common/dct.c:281:5: note: init: stmt relevant? _185 = (unsigned short) _184;
common/dct.c:281:5: note: init: stmt relevant? _186 = (unsigned short) a7_144;
common/dct.c:281:5: note: init: stmt relevant? _187 = _185 - _186;
common/dct.c:281:5: note: init: stmt relevant? _188 = (short int) _187;
common/dct.c:281:5: note: init: stmt relevant? MEM[(int16_t[8] *)dct_149(D) + 112B][i_33] = _188;
common/dct.c:281:5: note: vec_stmt_relevant_p: stmt has vdefs.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: init: stmt relevant? i_190 = i_33 + 1;
common/dct.c:281:5: note: init: stmt relevant? # DEBUG i => i_190
common/dct.c:281:5: note: init: stmt relevant? # DEBUG i => i_190
common/dct.c:281:5: note: init: stmt relevant? ivtmp_536 = ivtmp_538 - 1;
common/dct.c:281:5: note: init: stmt relevant? if (ivtmp_536 != 0)
common/dct.c:281:5: note: worklist: examine stmt: MEM[(int16_t[8] *)dct_149(D) + 112B][i_33] = _188;
common/dct.c:281:5: note: vect_is_simple_use: operand _188
common/dct.c:281:5: note: def_stmt: _188 = (short int) _187;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: worklist: examine stmt: _188 = (short int) _187;
common/dct.c:281:5: note: vect_is_simple_use: operand _187
common/dct.c:281:5: note: def_stmt: _187 = _185 - _186;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: worklist: examine stmt: _187 = _185 - _186;
common/dct.c:281:5: note: vect_is_simple_use: operand _185
common/dct.c:281:5: note: def_stmt: _185 = (unsigned short) _184;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: vect_is_simple_use: operand _186
common/dct.c:281:5: note: def_stmt: _186 = (unsigned short) a7_144;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: worklist: examine stmt: _186 = (unsigned short) a7_144;
common/dct.c:281:5: note: vect_is_simple_use: operand a7_144
common/dct.c:281:5: note: def_stmt: a7_144 = _141 + _143;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: worklist: examine stmt: a7_144 = _141 + _143;
common/dct.c:281:5: note: vect_is_simple_use: operand _141
common/dct.c:281:5: note: def_stmt: _141 = d16_126 - d25_127;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: vect_is_simple_use: operand _143
common/dct.c:281:5: note: def_stmt: _143 = d34_128 + _142;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: worklist: examine stmt: _143 = d34_128 + _142;
common/dct.c:281:5: note: vect_is_simple_use: operand d34_128
common/dct.c:281:5: note: def_stmt: d34_128 = _117 - _119;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: vect_is_simple_use: operand _142
common/dct.c:281:5: note: def_stmt: _142 = d34_128 >> 1;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: worklist: examine stmt: _142 = d34_128 >> 1;
common/dct.c:281:5: note: vect_is_simple_use: operand d34_128
common/dct.c:281:5: note: def_stmt: d34_128 = _117 - _119;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: already marked relevant/live.
common/dct.c:281:5: note: worklist: examine stmt: d34_128 = _117 - _119;
common/dct.c:281:5: note: vect_is_simple_use: operand _117
common/dct.c:281:5: note: def_stmt: _117 = (int) _116;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: vect_is_simple_use: operand _119
common/dct.c:281:5: note: def_stmt: _119 = (int) _118;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: worklist: examine stmt: _119 = (int) _118;
common/dct.c:281:5: note: vect_is_simple_use: operand _118
common/dct.c:281:5: note: def_stmt: _118 = tmp[i_33][4];
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: worklist: examine stmt: _118 = tmp[i_33][4];
common/dct.c:281:5: note: worklist: examine stmt: _117 = (int) _116;
common/dct.c:281:5: note: vect_is_simple_use: operand _116
common/dct.c:281:5: note: def_stmt: _116 = tmp[i_33][3];
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: worklist: examine stmt: _116 = tmp[i_33][3];
common/dct.c:281:5: note: worklist: examine stmt: _141 = d16_126 - d25_127;
common/dct.c:281:5: note: vect_is_simple_use: operand d16_126
common/dct.c:281:5: note: def_stmt: d16_126 = _107 - _109;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: vect_is_simple_use: operand d25_127
common/dct.c:281:5: note: def_stmt: d25_127 = _112 - _114;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: worklist: examine stmt: d25_127 = _112 - _114;
common/dct.c:281:5: note: vect_is_simple_use: operand _112
common/dct.c:281:5: note: def_stmt: _112 = (int) _111;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: vect_is_simple_use: operand _114
common/dct.c:281:5: note: def_stmt: _114 = (int) _113;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: worklist: examine stmt: _114 = (int) _113;
common/dct.c:281:5: note: vect_is_simple_use: operand _113
common/dct.c:281:5: note: def_stmt: _113 = tmp[i_33][5];
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: worklist: examine stmt: _113 = tmp[i_33][5];
common/dct.c:281:5: note: worklist: examine stmt: _112 = (int) _111;
common/dct.c:281:5: note: vect_is_simple_use: operand _111
common/dct.c:281:5: note: def_stmt: _111 = tmp[i_33][2];
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: worklist: examine stmt: _111 = tmp[i_33][2];
common/dct.c:281:5: note: worklist: examine stmt: d16_126 = _107 - _109;
common/dct.c:281:5: note: vect_is_simple_use: operand _107
common/dct.c:281:5: note: def_stmt: _107 = (int) _106;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: vect_is_simple_use: operand _109
common/dct.c:281:5: note: def_stmt: _109 = (int) _108;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: worklist: examine stmt: _109 = (int) _108;
common/dct.c:281:5: note: vect_is_simple_use: operand _108
common/dct.c:281:5: note: def_stmt: _108 = tmp[i_33][6];
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: worklist: examine stmt: _108 = tmp[i_33][6];
common/dct.c:281:5: note: worklist: examine stmt: _107 = (int) _106;
common/dct.c:281:5: note: vect_is_simple_use: operand _106
common/dct.c:281:5: note: def_stmt: _106 = tmp[i_33][1];
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: worklist: examine stmt: _106 = tmp[i_33][1];
common/dct.c:281:5: note: worklist: examine stmt: _185 = (unsigned short) _184;
common/dct.c:281:5: note: vect_is_simple_use: operand _184
common/dct.c:281:5: note: def_stmt: _184 = a4_132 >> 2;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: worklist: examine stmt: _184 = a4_132 >> 2;
common/dct.c:281:5: note: vect_is_simple_use: operand a4_132
common/dct.c:281:5: note: def_stmt: a4_132 = _129 + _131;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: worklist: examine stmt: a4_132 = _129 + _131;
common/dct.c:281:5: note: vect_is_simple_use: operand _129
common/dct.c:281:5: note: def_stmt: _129 = d16_126 + d25_127;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: vect_is_simple_use: operand _131
common/dct.c:281:5: note: def_stmt: _131 = d07_125 + _130;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: worklist: examine stmt: _131 = d07_125 + _130;
common/dct.c:281:5: note: vect_is_simple_use: operand d07_125
common/dct.c:281:5: note: def_stmt: d07_125 = _102 - _104;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: vect_is_simple_use: operand _130
common/dct.c:281:5: note: def_stmt: _130 = d07_125 >> 1;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: worklist: examine stmt: _130 = d07_125 >> 1;
common/dct.c:281:5: note: vect_is_simple_use: operand d07_125
common/dct.c:281:5: note: def_stmt: d07_125 = _102 - _104;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: already marked relevant/live.
common/dct.c:281:5: note: worklist: examine stmt: d07_125 = _102 - _104;
common/dct.c:281:5: note: vect_is_simple_use: operand _102
common/dct.c:281:5: note: def_stmt: _102 = (int) _101;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: vect_is_simple_use: operand _104
common/dct.c:281:5: note: def_stmt: _104 = (int) _103;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: worklist: examine stmt: _104 = (int) _103;
common/dct.c:281:5: note: vect_is_simple_use: operand _103
common/dct.c:281:5: note: def_stmt: _103 = tmp[i_33][7];
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: worklist: examine stmt: _103 = tmp[i_33][7];
common/dct.c:281:5: note: worklist: examine stmt: _102 = (int) _101;
common/dct.c:281:5: note: vect_is_simple_use: operand _101
common/dct.c:281:5: note: def_stmt: _101 = tmp[i_33][0];
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: worklist: examine stmt: _101 = tmp[i_33][0];
common/dct.c:281:5: note: worklist: examine stmt: _129 = d16_126 + d25_127;
common/dct.c:281:5: note: vect_is_simple_use: operand d16_126
common/dct.c:281:5: note: def_stmt: d16_126 = _107 - _109;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: already marked relevant/live.
common/dct.c:281:5: note: vect_is_simple_use: operand d25_127
common/dct.c:281:5: note: def_stmt: d25_127 = _112 - _114;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: already marked relevant/live.
common/dct.c:281:5: note: worklist: examine stmt: MEM[(int16_t[8] *)dct_149(D) + 96B][i_33] = _182;
common/dct.c:281:5: note: vect_is_simple_use: operand _182
common/dct.c:281:5: note: def_stmt: _182 = (short int) _181;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: worklist: examine stmt: _182 = (short int) _181;
common/dct.c:281:5: note: vect_is_simple_use: operand _181
common/dct.c:281:5: note: def_stmt: _181 = _179 - _180;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: worklist: examine stmt: _181 = _179 - _180;
common/dct.c:281:5: note: vect_is_simple_use: operand _179
common/dct.c:281:5: note: def_stmt: _179 = (unsigned short) _178;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: vect_is_simple_use: operand _180
common/dct.c:281:5: note: def_stmt: _180 = (unsigned short) a3_124;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: worklist: examine stmt: _180 = (unsigned short) a3_124;
common/dct.c:281:5: note: vect_is_simple_use: operand a3_124
common/dct.c:281:5: note: def_stmt: a3_124 = s16_110 - s25_115;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: worklist: examine stmt: a3_124 = s16_110 - s25_115;
common/dct.c:281:5: note: vect_is_simple_use: operand s16_110
common/dct.c:281:5: note: def_stmt: s16_110 = _107 + _109;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: vect_is_simple_use: operand s25_115
common/dct.c:281:5: note: def_stmt: s25_115 = _112 + _114;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: worklist: examine stmt: s25_115 = _112 + _114;
common/dct.c:281:5: note: vect_is_simple_use: operand _112
common/dct.c:281:5: note: def_stmt: _112 = (int) _111;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: already marked relevant/live.
common/dct.c:281:5: note: vect_is_simple_use: operand _114
common/dct.c:281:5: note: def_stmt: _114 = (int) _113;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: already marked relevant/live.
common/dct.c:281:5: note: worklist: examine stmt: s16_110 = _107 + _109;
common/dct.c:281:5: note: vect_is_simple_use: operand _107
common/dct.c:281:5: note: def_stmt: _107 = (int) _106;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: already marked relevant/live.
common/dct.c:281:5: note: vect_is_simple_use: operand _109
common/dct.c:281:5: note: def_stmt: _109 = (int) _108;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: already marked relevant/live.
common/dct.c:281:5: note: worklist: examine stmt: _179 = (unsigned short) _178;
common/dct.c:281:5: note: vect_is_simple_use: operand _178
common/dct.c:281:5: note: def_stmt: _178 = a2_123 >> 1;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: worklist: examine stmt: _178 = a2_123 >> 1;
common/dct.c:281:5: note: vect_is_simple_use: operand a2_123
common/dct.c:281:5: note: def_stmt: a2_123 = s07_105 - s34_120;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: worklist: examine stmt: a2_123 = s07_105 - s34_120;
common/dct.c:281:5: note: vect_is_simple_use: operand s07_105
common/dct.c:281:5: note: def_stmt: s07_105 = _102 + _104;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: vect_is_simple_use: operand s34_120
common/dct.c:281:5: note: def_stmt: s34_120 = _117 + _119;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: worklist: examine stmt: s34_120 = _117 + _119;
common/dct.c:281:5: note: vect_is_simple_use: operand _117
common/dct.c:281:5: note: def_stmt: _117 = (int) _116;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: already marked relevant/live.
common/dct.c:281:5: note: vect_is_simple_use: operand _119
common/dct.c:281:5: note: def_stmt: _119 = (int) _118;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: already marked relevant/live.
common/dct.c:281:5: note: worklist: examine stmt: s07_105 = _102 + _104;
common/dct.c:281:5: note: vect_is_simple_use: operand _102
common/dct.c:281:5: note: def_stmt: _102 = (int) _101;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: already marked relevant/live.
common/dct.c:281:5: note: vect_is_simple_use: operand _104
common/dct.c:281:5: note: def_stmt: _104 = (int) _103;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: already marked relevant/live.
common/dct.c:281:5: note: worklist: examine stmt: MEM[(int16_t[8] *)dct_149(D) + 80B][i_33] = _176;
common/dct.c:281:5: note: vect_is_simple_use: operand _176
common/dct.c:281:5: note: def_stmt: _176 = (short int) _175;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: worklist: examine stmt: _176 = (short int) _175;
common/dct.c:281:5: note: vect_is_simple_use: operand _175
common/dct.c:281:5: note: def_stmt: _175 = _172 - _174;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: worklist: examine stmt: _175 = _172 - _174;
common/dct.c:281:5: note: vect_is_simple_use: operand _172
common/dct.c:281:5: note: def_stmt: _172 = (unsigned short) a6_140;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: vect_is_simple_use: operand _174
common/dct.c:281:5: note: def_stmt: _174 = (unsigned short) _173;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: worklist: examine stmt: _174 = (unsigned short) _173;
common/dct.c:281:5: note: vect_is_simple_use: operand _173
common/dct.c:281:5: note: def_stmt: _173 = a5_136 >> 2;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: worklist: examine stmt: _173 = a5_136 >> 2;
common/dct.c:281:5: note: vect_is_simple_use: operand a5_136
common/dct.c:281:5: note: def_stmt: a5_136 = _133 - _135;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: worklist: examine stmt: a5_136 = _133 - _135;
common/dct.c:281:5: note: vect_is_simple_use: operand _133
common/dct.c:281:5: note: def_stmt: _133 = d07_125 - d34_128;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: vect_is_simple_use: operand _135
common/dct.c:281:5: note: def_stmt: _135 = d25_127 + _134;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: worklist: examine stmt: _135 = d25_127 + _134;
common/dct.c:281:5: note: vect_is_simple_use: operand d25_127
common/dct.c:281:5: note: def_stmt: d25_127 = _112 - _114;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: already marked relevant/live.
common/dct.c:281:5: note: vect_is_simple_use: operand _134
common/dct.c:281:5: note: def_stmt: _134 = d25_127 >> 1;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: worklist: examine stmt: _134 = d25_127 >> 1;
common/dct.c:281:5: note: vect_is_simple_use: operand d25_127
common/dct.c:281:5: note: def_stmt: d25_127 = _112 - _114;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: already marked relevant/live.
common/dct.c:281:5: note: worklist: examine stmt: _133 = d07_125 - d34_128;
common/dct.c:281:5: note: vect_is_simple_use: operand d07_125
common/dct.c:281:5: note: def_stmt: d07_125 = _102 - _104;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: already marked relevant/live.
common/dct.c:281:5: note: vect_is_simple_use: operand d34_128
common/dct.c:281:5: note: def_stmt: d34_128 = _117 - _119;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: already marked relevant/live.
common/dct.c:281:5: note: worklist: examine stmt: _172 = (unsigned short) a6_140;
common/dct.c:281:5: note: vect_is_simple_use: operand a6_140
common/dct.c:281:5: note: def_stmt: a6_140 = _137 - _139;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: worklist: examine stmt: a6_140 = _137 - _139;
common/dct.c:281:5: note: vect_is_simple_use: operand _137
common/dct.c:281:5: note: def_stmt: _137 = d07_125 + d34_128;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: vect_is_simple_use: operand _139
common/dct.c:281:5: note: def_stmt: _139 = d16_126 + _138;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: worklist: examine stmt: _139 = d16_126 + _138;
common/dct.c:281:5: note: vect_is_simple_use: operand d16_126
common/dct.c:281:5: note: def_stmt: d16_126 = _107 - _109;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: already marked relevant/live.
common/dct.c:281:5: note: vect_is_simple_use: operand _138
common/dct.c:281:5: note: def_stmt: _138 = d16_126 >> 1;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: worklist: examine stmt: _138 = d16_126 >> 1;
common/dct.c:281:5: note: vect_is_simple_use: operand d16_126
common/dct.c:281:5: note: def_stmt: d16_126 = _107 - _109;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: already marked relevant/live.
common/dct.c:281:5: note: worklist: examine stmt: _137 = d07_125 + d34_128;
common/dct.c:281:5: note: vect_is_simple_use: operand d07_125
common/dct.c:281:5: note: def_stmt: d07_125 = _102 - _104;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: already marked relevant/live.
common/dct.c:281:5: note: vect_is_simple_use: operand d34_128
common/dct.c:281:5: note: def_stmt: d34_128 = _117 - _119;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: already marked relevant/live.
common/dct.c:281:5: note: worklist: examine stmt: MEM[(int16_t[8] *)dct_149(D) + 64B][i_33] = _170;
common/dct.c:281:5: note: vect_is_simple_use: operand _170
common/dct.c:281:5: note: def_stmt: _170 = (short int) _169;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: worklist: examine stmt: _170 = (short int) _169;
common/dct.c:281:5: note: vect_is_simple_use: operand _169
common/dct.c:281:5: note: def_stmt: _169 = _145 - _146;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: worklist: examine stmt: _169 = _145 - _146;
common/dct.c:281:5: note: vect_is_simple_use: operand _145
common/dct.c:281:5: note: def_stmt: _145 = (unsigned short) a0_121;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: vect_is_simple_use: operand _146
common/dct.c:281:5: note: def_stmt: _146 = (unsigned short) a1_122;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: worklist: examine stmt: _146 = (unsigned short) a1_122;
common/dct.c:281:5: note: vect_is_simple_use: operand a1_122
common/dct.c:281:5: note: def_stmt: a1_122 = s16_110 + s25_115;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: worklist: examine stmt: a1_122 = s16_110 + s25_115;
common/dct.c:281:5: note: vect_is_simple_use: operand s16_110
common/dct.c:281:5: note: def_stmt: s16_110 = _107 + _109;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: already marked relevant/live.
common/dct.c:281:5: note: vect_is_simple_use: operand s25_115
common/dct.c:281:5: note: def_stmt: s25_115 = _112 + _114;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: already marked relevant/live.
common/dct.c:281:5: note: worklist: examine stmt: _145 = (unsigned short) a0_121;
common/dct.c:281:5: note: vect_is_simple_use: operand a0_121
common/dct.c:281:5: note: def_stmt: a0_121 = s07_105 + s34_120;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: worklist: examine stmt: a0_121 = s07_105 + s34_120;
common/dct.c:281:5: note: vect_is_simple_use: operand s07_105
common/dct.c:281:5: note: def_stmt: s07_105 = _102 + _104;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: already marked relevant/live.
common/dct.c:281:5: note: vect_is_simple_use: operand s34_120
common/dct.c:281:5: note: def_stmt: s34_120 = _117 + _119;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: already marked relevant/live.
common/dct.c:281:5: note: worklist: examine stmt: MEM[(int16_t[8] *)dct_149(D) + 48B][i_33] = _167;
common/dct.c:281:5: note: vect_is_simple_use: operand _167
common/dct.c:281:5: note: def_stmt: _167 = (short int) _166;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: worklist: examine stmt: _167 = (short int) _166;
common/dct.c:281:5: note: vect_is_simple_use: operand _166
common/dct.c:281:5: note: def_stmt: _166 = _164 + _165;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: worklist: examine stmt: _166 = _164 + _165;
common/dct.c:281:5: note: vect_is_simple_use: operand _164
common/dct.c:281:5: note: def_stmt: _164 = (unsigned short) _163;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: vect_is_simple_use: operand _165
common/dct.c:281:5: note: def_stmt: _165 = (unsigned short) a5_136;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: worklist: examine stmt: _165 = (unsigned short) a5_136;
common/dct.c:281:5: note: vect_is_simple_use: operand a5_136
common/dct.c:281:5: note: def_stmt: a5_136 = _133 - _135;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: already marked relevant/live.
common/dct.c:281:5: note: worklist: examine stmt: _164 = (unsigned short) _163;
common/dct.c:281:5: note: vect_is_simple_use: operand _163
common/dct.c:281:5: note: def_stmt: _163 = a6_140 >> 2;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: worklist: examine stmt: _163 = a6_140 >> 2;
common/dct.c:281:5: note: vect_is_simple_use: operand a6_140
common/dct.c:281:5: note: def_stmt: a6_140 = _137 - _139;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: already marked relevant/live.
common/dct.c:281:5: note: worklist: examine stmt: MEM[(int16_t[8] *)dct_149(D) + 32B][i_33] = _161;
common/dct.c:281:5: note: vect_is_simple_use: operand _161
common/dct.c:281:5: note: def_stmt: _161 = (short int) _160;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: worklist: examine stmt: _161 = (short int) _160;
common/dct.c:281:5: note: vect_is_simple_use: operand _160
common/dct.c:281:5: note: def_stmt: _160 = _158 + _159;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: worklist: examine stmt: _160 = _158 + _159;
common/dct.c:281:5: note: vect_is_simple_use: operand _158
common/dct.c:281:5: note: def_stmt: _158 = (unsigned short) _157;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: vect_is_simple_use: operand _159
common/dct.c:281:5: note: def_stmt: _159 = (unsigned short) a2_123;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: worklist: examine stmt: _159 = (unsigned short) a2_123;
common/dct.c:281:5: note: vect_is_simple_use: operand a2_123
common/dct.c:281:5: note: def_stmt: a2_123 = s07_105 - s34_120;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: already marked relevant/live.
common/dct.c:281:5: note: worklist: examine stmt: _158 = (unsigned short) _157;
common/dct.c:281:5: note: vect_is_simple_use: operand _157
common/dct.c:281:5: note: def_stmt: _157 = a3_124 >> 1;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: worklist: examine stmt: _157 = a3_124 >> 1;
common/dct.c:281:5: note: vect_is_simple_use: operand a3_124
common/dct.c:281:5: note: def_stmt: a3_124 = s16_110 - s25_115;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: already marked relevant/live.
common/dct.c:281:5: note: worklist: examine stmt: MEM[(int16_t[8] *)dct_149(D) + 16B][i_33] = _155;
common/dct.c:281:5: note: vect_is_simple_use: operand _155
common/dct.c:281:5: note: def_stmt: _155 = (short int) _154;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: worklist: examine stmt: _155 = (short int) _154;
common/dct.c:281:5: note: vect_is_simple_use: operand _154
common/dct.c:281:5: note: def_stmt: _154 = _152 + _153;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: worklist: examine stmt: _154 = _152 + _153;
common/dct.c:281:5: note: vect_is_simple_use: operand _152
common/dct.c:281:5: note: def_stmt: _152 = (unsigned short) _151;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: vect_is_simple_use: operand _153
common/dct.c:281:5: note: def_stmt: _153 = (unsigned short) a4_132;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: worklist: examine stmt: _153 = (unsigned short) a4_132;
common/dct.c:281:5: note: vect_is_simple_use: operand a4_132
common/dct.c:281:5: note: def_stmt: a4_132 = _129 + _131;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: already marked relevant/live.
common/dct.c:281:5: note: worklist: examine stmt: _152 = (unsigned short) _151;
common/dct.c:281:5: note: vect_is_simple_use: operand _151
common/dct.c:281:5: note: def_stmt: _151 = a7_144 >> 2;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: worklist: examine stmt: _151 = a7_144 >> 2;
common/dct.c:281:5: note: vect_is_simple_use: operand a7_144
common/dct.c:281:5: note: def_stmt: a7_144 = _141 + _143;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: already marked relevant/live.
common/dct.c:281:5: note: worklist: examine stmt: *dct_149(D)[i_33] = _148;
common/dct.c:281:5: note: vect_is_simple_use: operand _148
common/dct.c:281:5: note: def_stmt: _148 = (short int) _147;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: worklist: examine stmt: _148 = (short int) _147;
common/dct.c:281:5: note: vect_is_simple_use: operand _147
common/dct.c:281:5: note: def_stmt: _147 = _145 + _146;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: worklist: examine stmt: _147 = _145 + _146;
common/dct.c:281:5: note: vect_is_simple_use: operand _145
common/dct.c:281:5: note: def_stmt: _145 = (unsigned short) a0_121;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: already marked relevant/live.
common/dct.c:281:5: note: vect_is_simple_use: operand _146
common/dct.c:281:5: note: def_stmt: _146 = (unsigned short) a1_122;
common/dct.c:281:5: note: type of def: 3.
common/dct.c:281:5: note: mark relevant 4, live 0.
common/dct.c:281:5: note: already marked relevant/live.
common/dct.c:281:5: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _101 = tmp[i_33][0];
  stmt_b: _103 = tmp[i_33][7];
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _101 = tmp[i_33][0];
  stmt_b: _106 = tmp[i_33][1];
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 1)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _101 = tmp[i_33][0];
  stmt_b: _108 = tmp[i_33][6];
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 6)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _101 = tmp[i_33][0];
  stmt_b: _111 = tmp[i_33][2];
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _101 = tmp[i_33][0];
  stmt_b: _113 = tmp[i_33][5];
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 5)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _101 = tmp[i_33][0];
  stmt_b: _116 = tmp[i_33][3];
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _101 = tmp[i_33][0];
  stmt_b: _118 = tmp[i_33][4];
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 4)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _101 = tmp[i_33][0];
  stmt_b: *dct_149(D)[i_33] = _148;
) -> no dependence
(compute_affine_dependence
  stmt_a: _101 = tmp[i_33][0];
  stmt_b: MEM[(int16_t[8] *)dct_149(D) + 16B][i_33] = _155;
) -> no dependence
(compute_affine_dependence
  stmt_a: _101 = tmp[i_33][0];
  stmt_b: MEM[(int16_t[8] *)dct_149(D) + 32B][i_33] = _161;
) -> no dependence
(compute_affine_dependence
  stmt_a: _101 = tmp[i_33][0];
  stmt_b: MEM[(int16_t[8] *)dct_149(D) + 48B][i_33] = _167;
) -> no dependence
(compute_affine_dependence
  stmt_a: _101 = tmp[i_33][0];
  stmt_b: MEM[(int16_t[8] *)dct_149(D) + 64B][i_33] = _170;
) -> no dependence
(compute_affine_dependence
  stmt_a: _101 = tmp[i_33][0];
  stmt_b: MEM[(int16_t[8] *)dct_149(D) + 80B][i_33] = _176;
) -> no dependence
(compute_affine_dependence
  stmt_a: _101 = tmp[i_33][0];
  stmt_b: MEM[(int16_t[8] *)dct_149(D) + 96B][i_33] = _182;
) -> no dependence
(compute_affine_dependence
  stmt_a: _101 = tmp[i_33][0];
  stmt_b: MEM[(int16_t[8] *)dct_149(D) + 112B][i_33] = _188;
) -> no dependence
(compute_affine_dependence
  stmt_a: _103 = tmp[i_33][7];
  stmt_b: _106 = tmp[i_33][1];
(analyze_overlapping_iterations 
  (chrec_a = 7)
  (chrec_b = 1)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _103 = tmp[i_33][7];
  stmt_b: _108 = tmp[i_33][6];
(analyze_overlapping_iterations 
  (chrec_a = 7)
  (chrec_b = 6)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _103 = tmp[i_33][7];
  stmt_b: _111 = tmp[i_33][2];
(analyze_overlapping_iterations 
  (chrec_a = 7)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _103 = tmp[i_33][7];
  stmt_b: _113 = tmp[i_33][5];
(analyze_overlapping_iterations 
  (chrec_a = 7)
  (chrec_b = 5)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _103 = tmp[i_33][7];
  stmt_b: _116 = tmp[i_33][3];
(analyze_overlapping_iterations 
  (chrec_a = 7)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _103 = tmp[i_33][7];
  stmt_b: _118 = tmp[i_33][4];
(analyze_overlapping_iterations 
  (chrec_a = 7)
  (chrec_b = 4)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _103 = tmp[i_33][7];
  stmt_b: *dct_149(D)[i_33] = _148;
) -> no dependence
(compute_affine_dependence
  stmt_a: _103 = tmp[i_33][7];
  stmt_b: MEM[(int16_t[8] *)dct_149(D) + 16B][i_33] = _155;
) -> no dependence
(compute_affine_dependence
  stmt_a: _103 = tmp[i_33][7];
  stmt_b: MEM[(int16_t[8] *)dct_149(D) + 32B][i_33] = _161;
) -> no dependence
(compute_affine_dependence
  stmt_a: _103 = tmp[i_33][7];
  stmt_b: MEM[(int16_t[8] *)dct_149(D) + 48B][i_33] = _167;
) -> no dependence
(compute_affine_dependence
  stmt_a: _103 = tmp[i_33][7];
  stmt_b: MEM[(int16_t[8] *)dct_149(D) + 64B][i_33] = _170;
) -> no dependence
(compute_affine_dependence
  stmt_a: _103 = tmp[i_33][7];
  stmt_b: MEM[(int16_t[8] *)dct_149(D) + 80B][i_33] = _176;
) -> no dependence
(compute_affine_dependence
  stmt_a: _103 = tmp[i_33][7];
  stmt_b: MEM[(int16_t[8] *)dct_149(D) + 96B][i_33] = _182;
) -> no dependence
(compute_affine_dependence
  stmt_a: _103 = tmp[i_33][7];
  stmt_b: MEM[(int16_t[8] *)dct_149(D) + 112B][i_33] = _188;
) -> no dependence
(compute_affine_dependence
  stmt_a: _106 = tmp[i_33][1];
  stmt_b: _108 = tmp[i_33][6];
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 6)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _106 = tmp[i_33][1];
  stmt_b: _111 = tmp[i_33][2];
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _106 = tmp[i_33][1];
  stmt_b: _113 = tmp[i_33][5];
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 5)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _106 = tmp[i_33][1];
  stmt_b: _116 = tmp[i_33][3];
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _106 = tmp[i_33][1];
  stmt_b: _118 = tmp[i_33][4];
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 4)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _106 = tmp[i_33][1];
  stmt_b: *dct_149(D)[i_33] = _148;
) -> no dependence
(compute_affine_dependence
  stmt_a: _106 = tmp[i_33][1];
  stmt_b: MEM[(int16_t[8] *)dct_149(D) + 16B][i_33] = _155;
) -> no dependence
(compute_affine_dependence
  stmt_a: _106 = tmp[i_33][1];
  stmt_b: MEM[(int16_t[8] *)dct_149(D) + 32B][i_33] = _161;
) -> no dependence
(compute_affine_dependence
  stmt_a: _106 = tmp[i_33][1];
  stmt_b: MEM[(int16_t[8] *)dct_149(D) + 48B][i_33] = _167;
) -> no dependence
(compute_affine_dependence
  stmt_a: _106 = tmp[i_33][1];
  stmt_b: MEM[(int16_t[8] *)dct_149(D) + 64B][i_33] = _170;
) -> no dependence
(compute_affine_dependence
  stmt_a: _106 = tmp[i_33][1];
  stmt_b: MEM[(int16_t[8] *)dct_149(D) + 80B][i_33] = _176;
) -> no dependence
(compute_affine_dependence
  stmt_a: _106 = tmp[i_33][1];
  stmt_b: MEM[(int16_t[8] *)dct_149(D) + 96B][i_33] = _182;
) -> no dependence
(compute_affine_dependence
  stmt_a: _106 = tmp[i_33][1];
  stmt_b: MEM[(int16_t[8] *)dct_149(D) + 112B][i_33] = _188;
) -> no dependence
(compute_affine_dependence
  stmt_a: _108 = tmp[i_33][6];
  stmt_b: _111 = tmp[i_33][2];
(analyze_overlapping_iterations 
  (chrec_a = 6)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _108 = tmp[i_33][6];
  stmt_b: _113 = tmp[i_33][5];
(analyze_overlapping_iterations 
  (chrec_a = 6)
  (chrec_b = 5)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _108 = tmp[i_33][6];
  stmt_b: _116 = tmp[i_33][3];
(analyze_overlapping_iterations 
  (chrec_a = 6)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _108 = tmp[i_33][6];
  stmt_b: _118 = tmp[i_33][4];
(analyze_overlapping_iterations 
  (chrec_a = 6)
  (chrec_b = 4)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _108 = tmp[i_33][6];
  stmt_b: *dct_149(D)[i_33] = _148;
) -> no dependence
(compute_affine_dependence
  stmt_a: _108 = tmp[i_33][6];
  stmt_b: MEM[(int16_t[8] *)dct_149(D) + 16B][i_33] = _155;
) -> no dependence
(compute_affine_dependence
  stmt_a: _108 = tmp[i_33][6];
  stmt_b: MEM[(int16_t[8] *)dct_149(D) + 32B][i_33] = _161;
) -> no dependence
(compute_affine_dependence
  stmt_a: _108 = tmp[i_33][6];
  stmt_b: MEM[(int16_t[8] *)dct_149(D) + 48B][i_33] = _167;
) -> no dependence
(compute_affine_dependence
  stmt_a: _108 = tmp[i_33][6];
  stmt_b: MEM[(int16_t[8] *)dct_149(D) + 64B][i_33] = _170;
) -> no dependence
(compute_affine_dependence
  stmt_a: _108 = tmp[i_33][6];
  stmt_b: MEM[(int16_t[8] *)dct_149(D) + 80B][i_33] = _176;
) -> no dependence
(compute_affine_dependence
  stmt_a: _108 = tmp[i_33][6];
  stmt_b: MEM[(int16_t[8] *)dct_149(D) + 96B][i_33] = _182;
) -> no dependence
(compute_affine_dependence
  stmt_a: _108 = tmp[i_33][6];
  stmt_b: MEM[(int16_t[8] *)dct_149(D) + 112B][i_33] = _188;
) -> no dependence
(compute_affine_dependence
  stmt_a: _111 = tmp[i_33][2];
  stmt_b: _113 = tmp[i_33][5];
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 5)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _111 = tmp[i_33][2];
  stmt_b: _116 = tmp[i_33][3];
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _111 = tmp[i_33][2];
  stmt_b: _118 = tmp[i_33][4];
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 4)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _111 = tmp[i_33][2];
  stmt_b: *dct_149(D)[i_33] = _148;
) -> no dependence
(compute_affine_dependence
  stmt_a: _111 = tmp[i_33][2];
  stmt_b: MEM[(int16_t[8] *)dct_149(D) + 16B][i_33] = _155;
) -> no dependence
(compute_affine_dependence
  stmt_a: _111 = tmp[i_33][2];
  stmt_b: MEM[(int16_t[8] *)dct_149(D) + 32B][i_33] = _161;
) -> no dependence
(compute_affine_dependence
  stmt_a: _111 = tmp[i_33][2];
  stmt_b: MEM[(int16_t[8] *)dct_149(D) + 48B][i_33] = _167;
) -> no dependence
(compute_affine_dependence
  stmt_a: _111 = tmp[i_33][2];
  stmt_b: MEM[(int16_t[8] *)dct_149(D) + 64B][i_33] = _170;
) -> no dependence
(compute_affine_dependence
  stmt_a: _111 = tmp[i_33][2];
  stmt_b: MEM[(int16_t[8] *)dct_149(D) + 80B][i_33] = _176;
) -> no dependence
(compute_affine_dependence
  stmt_a: _111 = tmp[i_33][2];
  stmt_b: MEM[(int16_t[8] *)dct_149(D) + 96B][i_33] = _182;
) -> no dependence
(compute_affine_dependence
  stmt_a: _111 = tmp[i_33][2];
  stmt_b: MEM[(int16_t[8] *)dct_149(D) + 112B][i_33] = _188;
) -> no dependence
(compute_affine_dependence
  stmt_a: _113 = tmp[i_33][5];
  stmt_b: _116 = tmp[i_33][3];
(analyze_overlapping_iterations 
  (chrec_a = 5)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _113 = tmp[i_33][5];
  stmt_b: _118 = tmp[i_33][4];
(analyze_overlapping_iterations 
  (chrec_a = 5)
  (chrec_b = 4)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _113 = tmp[i_33][5];
  stmt_b: *dct_149(D)[i_33] = _148;
) -> no dependence
(compute_affine_dependence
  stmt_a: _113 = tmp[i_33][5];
  stmt_b: MEM[(int16_t[8] *)dct_149(D) + 16B][i_33] = _155;
) -> no dependence
(compute_affine_dependence
  stmt_a: _113 = tmp[i_33][5];
  stmt_b: MEM[(int16_t[8] *)dct_149(D) + 32B][i_33] = _161;
) -> no dependence
(compute_affine_dependence
  stmt_a: _113 = tmp[i_33][5];
  stmt_b: MEM[(int16_t[8] *)dct_149(D) + 48B][i_33] = _167;
) -> no dependence
(compute_affine_dependence
  stmt_a: _113 = tmp[i_33][5];
  stmt_b: MEM[(int16_t[8] *)dct_149(D) + 64B][i_33] = _170;
) -> no dependence
(compute_affine_dependence
  stmt_a: _113 = tmp[i_33][5];
  stmt_b: MEM[(int16_t[8] *)dct_149(D) + 80B][i_33] = _176;
) -> no dependence
(compute_affine_dependence
  stmt_a: _113 = tmp[i_33][5];
  stmt_b: MEM[(int16_t[8] *)dct_149(D) + 96B][i_33] = _182;
) -> no dependence
(compute_affine_dependence
  stmt_a: _113 = tmp[i_33][5];
  stmt_b: MEM[(int16_t[8] *)dct_149(D) + 112B][i_33] = _188;
) -> no dependence
(compute_affine_dependence
  stmt_a: _116 = tmp[i_33][3];
  stmt_b: _118 = tmp[i_33][4];
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 4)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _116 = tmp[i_33][3];
  stmt_b: *dct_149(D)[i_33] = _148;
) -> no dependence
(compute_affine_dependence
  stmt_a: _116 = tmp[i_33][3];
  stmt_b: MEM[(int16_t[8] *)dct_149(D) + 16B][i_33] = _155;
) -> no dependence
(compute_affine_dependence
  stmt_a: _116 = tmp[i_33][3];
  stmt_b: MEM[(int16_t[8] *)dct_149(D) + 32B][i_33] = _161;
) -> no dependence
(compute_affine_dependence
  stmt_a: _116 = tmp[i_33][3];
  stmt_b: MEM[(int16_t[8] *)dct_149(D) + 48B][i_33] = _167;
) -> no dependence
(compute_affine_dependence
  stmt_a: _116 = tmp[i_33][3];
  stmt_b: MEM[(int16_t[8] *)dct_149(D) + 64B][i_33] = _170;
) -> no dependence
(compute_affine_dependence
  stmt_a: _116 = tmp[i_33][3];
  stmt_b: MEM[(int16_t[8] *)dct_149(D) + 80B][i_33] = _176;
) -> no dependence
(compute_affine_dependence
  stmt_a: _116 = tmp[i_33][3];
  stmt_b: MEM[(int16_t[8] *)dct_149(D) + 96B][i_33] = _182;
) -> no dependence
(compute_affine_dependence
  stmt_a: _116 = tmp[i_33][3];
  stmt_b: MEM[(int16_t[8] *)dct_149(D) + 112B][i_33] = _188;
) -> no dependence
(compute_affine_dependence
  stmt_a: _118 = tmp[i_33][4];
  stmt_b: *dct_149(D)[i_33] = _148;
) -> no dependence
(compute_affine_dependence
  stmt_a: _118 = tmp[i_33][4];
  stmt_b: MEM[(int16_t[8] *)dct_149(D) + 16B][i_33] = _155;
) -> no dependence
(compute_affine_dependence
  stmt_a: _118 = tmp[i_33][4];
  stmt_b: MEM[(int16_t[8] *)dct_149(D) + 32B][i_33] = _161;
) -> no dependence
(compute_affine_dependence
  stmt_a: _118 = tmp[i_33][4];
  stmt_b: MEM[(int16_t[8] *)dct_149(D) + 48B][i_33] = _167;
) -> no dependence
(compute_affine_dependence
  stmt_a: _118 = tmp[i_33][4];
  stmt_b: MEM[(int16_t[8] *)dct_149(D) + 64B][i_33] = _170;
) -> no dependence
(compute_affine_dependence
  stmt_a: _118 = tmp[i_33][4];
  stmt_b: MEM[(int16_t[8] *)dct_149(D) + 80B][i_33] = _176;
) -> no dependence
(compute_affine_dependence
  stmt_a: _118 = tmp[i_33][4];
  stmt_b: MEM[(int16_t[8] *)dct_149(D) + 96B][i_33] = _182;
) -> no dependence
(compute_affine_dependence
  stmt_a: _118 = tmp[i_33][4];
  stmt_b: MEM[(int16_t[8] *)dct_149(D) + 112B][i_33] = _188;
) -> no dependence
(compute_affine_dependence
  stmt_a: *dct_149(D)[i_33] = _148;
  stmt_b: MEM[(int16_t[8] *)dct_149(D) + 16B][i_33] = _155;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: *dct_149(D)[i_33] = _148;
  stmt_b: MEM[(int16_t[8] *)dct_149(D) + 32B][i_33] = _161;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: *dct_149(D)[i_33] = _148;
  stmt_b: MEM[(int16_t[8] *)dct_149(D) + 48B][i_33] = _167;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: *dct_149(D)[i_33] = _148;
  stmt_b: MEM[(int16_t[8] *)dct_149(D) + 64B][i_33] = _170;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: *dct_149(D)[i_33] = _148;
  stmt_b: MEM[(int16_t[8] *)dct_149(D) + 80B][i_33] = _176;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: *dct_149(D)[i_33] = _148;
  stmt_b: MEM[(int16_t[8] *)dct_149(D) + 96B][i_33] = _182;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: *dct_149(D)[i_33] = _148;
  stmt_b: MEM[(int16_t[8] *)dct_149(D) + 112B][i_33] = _188;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: MEM[(int16_t[8] *)dct_149(D) + 16B][i_33] = _155;
  stmt_b: MEM[(int16_t[8] *)dct_149(D) + 32B][i_33] = _161;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: MEM[(int16_t[8] *)dct_149(D) + 16B][i_33] = _155;
  stmt_b: MEM[(int16_t[8] *)dct_149(D) + 48B][i_33] = _167;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: MEM[(int16_t[8] *)dct_149(D) + 16B][i_33] = _155;
  stmt_b: MEM[(int16_t[8] *)dct_149(D) + 64B][i_33] = _170;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: MEM[(int16_t[8] *)dct_149(D) + 16B][i_33] = _155;
  stmt_b: MEM[(int16_t[8] *)dct_149(D) + 80B][i_33] = _176;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: MEM[(int16_t[8] *)dct_149(D) + 16B][i_33] = _155;
  stmt_b: MEM[(int16_t[8] *)dct_149(D) + 96B][i_33] = _182;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: MEM[(int16_t[8] *)dct_149(D) + 16B][i_33] = _155;
  stmt_b: MEM[(int16_t[8] *)dct_149(D) + 112B][i_33] = _188;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: MEM[(int16_t[8] *)dct_149(D) + 32B][i_33] = _161;
  stmt_b: MEM[(int16_t[8] *)dct_149(D) + 48B][i_33] = _167;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: MEM[(int16_t[8] *)dct_149(D) + 32B][i_33] = _161;
  stmt_b: MEM[(int16_t[8] *)dct_149(D) + 64B][i_33] = _170;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: MEM[(int16_t[8] *)dct_149(D) + 32B][i_33] = _161;
  stmt_b: MEM[(int16_t[8] *)dct_149(D) + 80B][i_33] = _176;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: MEM[(int16_t[8] *)dct_149(D) + 32B][i_33] = _161;
  stmt_b: MEM[(int16_t[8] *)dct_149(D) + 96B][i_33] = _182;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: MEM[(int16_t[8] *)dct_149(D) + 32B][i_33] = _161;
  stmt_b: MEM[(int16_t[8] *)dct_149(D) + 112B][i_33] = _188;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: MEM[(int16_t[8] *)dct_149(D) + 48B][i_33] = _167;
  stmt_b: MEM[(int16_t[8] *)dct_149(D) + 64B][i_33] = _170;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: MEM[(int16_t[8] *)dct_149(D) + 48B][i_33] = _167;
  stmt_b: MEM[(int16_t[8] *)dct_149(D) + 80B][i_33] = _176;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: MEM[(int16_t[8] *)dct_149(D) + 48B][i_33] = _167;
  stmt_b: MEM[(int16_t[8] *)dct_149(D) + 96B][i_33] = _182;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: MEM[(int16_t[8] *)dct_149(D) + 48B][i_33] = _167;
  stmt_b: MEM[(int16_t[8] *)dct_149(D) + 112B][i_33] = _188;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: MEM[(int16_t[8] *)dct_149(D) + 64B][i_33] = _170;
  stmt_b: MEM[(int16_t[8] *)dct_149(D) + 80B][i_33] = _176;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: MEM[(int16_t[8] *)dct_149(D) + 64B][i_33] = _170;
  stmt_b: MEM[(int16_t[8] *)dct_149(D) + 96B][i_33] = _182;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: MEM[(int16_t[8] *)dct_149(D) + 64B][i_33] = _170;
  stmt_b: MEM[(int16_t[8] *)dct_149(D) + 112B][i_33] = _188;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: MEM[(int16_t[8] *)dct_149(D) + 80B][i_33] = _176;
  stmt_b: MEM[(int16_t[8] *)dct_149(D) + 96B][i_33] = _182;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: MEM[(int16_t[8] *)dct_149(D) + 80B][i_33] = _176;
  stmt_b: MEM[(int16_t[8] *)dct_149(D) + 112B][i_33] = _188;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: MEM[(int16_t[8] *)dct_149(D) + 96B][i_33] = _182;
  stmt_b: MEM[(int16_t[8] *)dct_149(D) + 112B][i_33] = _188;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _101 = tmp[i_33][0];
  stmt_b: _101 = tmp[i_33][0];
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 0)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_2)
  (chrec_b = {0, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _103 = tmp[i_33][7];
  stmt_b: _103 = tmp[i_33][7];
(analyze_overlapping_iterations 
  (chrec_a = 7)
  (chrec_b = 7)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_2)
  (chrec_b = {0, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _106 = tmp[i_33][1];
  stmt_b: _106 = tmp[i_33][1];
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_2)
  (chrec_b = {0, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _108 = tmp[i_33][6];
  stmt_b: _108 = tmp[i_33][6];
(analyze_overlapping_iterations 
  (chrec_a = 6)
  (chrec_b = 6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_2)
  (chrec_b = {0, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _111 = tmp[i_33][2];
  stmt_b: _111 = tmp[i_33][2];
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_2)
  (chrec_b = {0, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _113 = tmp[i_33][5];
  stmt_b: _113 = tmp[i_33][5];
(analyze_overlapping_iterations 
  (chrec_a = 5)
  (chrec_b = 5)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_2)
  (chrec_b = {0, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _116 = tmp[i_33][3];
  stmt_b: _116 = tmp[i_33][3];
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_2)
  (chrec_b = {0, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _118 = tmp[i_33][4];
  stmt_b: _118 = tmp[i_33][4];
(analyze_overlapping_iterations 
  (chrec_a = 4)
  (chrec_b = 4)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_2)
  (chrec_b = {0, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: *dct_149(D)[i_33] = _148;
  stmt_b: *dct_149(D)[i_33] = _148;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_2)
  (chrec_b = {0, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: MEM[(int16_t[8] *)dct_149(D) + 16B][i_33] = _155;
  stmt_b: MEM[(int16_t[8] *)dct_149(D) + 16B][i_33] = _155;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_2)
  (chrec_b = {0, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: MEM[(int16_t[8] *)dct_149(D) + 32B][i_33] = _161;
  stmt_b: MEM[(int16_t[8] *)dct_149(D) + 32B][i_33] = _161;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_2)
  (chrec_b = {0, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: MEM[(int16_t[8] *)dct_149(D) + 48B][i_33] = _167;
  stmt_b: MEM[(int16_t[8] *)dct_149(D) + 48B][i_33] = _167;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_2)
  (chrec_b = {0, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: MEM[(int16_t[8] *)dct_149(D) + 64B][i_33] = _170;
  stmt_b: MEM[(int16_t[8] *)dct_149(D) + 64B][i_33] = _170;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_2)
  (chrec_b = {0, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: MEM[(int16_t[8] *)dct_149(D) + 80B][i_33] = _176;
  stmt_b: MEM[(int16_t[8] *)dct_149(D) + 80B][i_33] = _176;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_2)
  (chrec_b = {0, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: MEM[(int16_t[8] *)dct_149(D) + 96B][i_33] = _182;
  stmt_b: MEM[(int16_t[8] *)dct_149(D) + 96B][i_33] = _182;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_2)
  (chrec_b = {0, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: MEM[(int16_t[8] *)dct_149(D) + 112B][i_33] = _188;
  stmt_b: MEM[(int16_t[8] *)dct_149(D) + 112B][i_33] = _188;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_2)
  (chrec_b = {0, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/dct.c:281:5: note: versioning for alias required: can't determine dependence between *dct_149(D)[i_33] and MEM[(int16_t[8] *)dct_149(D) + 16B][i_33]
common/dct.c:281:5: note: mark for run-time aliasing test between *dct_149(D)[i_33] and MEM[(int16_t[8] *)dct_149(D) + 16B][i_33]
common/dct.c:281:5: note: versioning for alias required: can't determine dependence between *dct_149(D)[i_33] and MEM[(int16_t[8] *)dct_149(D) + 32B][i_33]
common/dct.c:281:5: note: mark for run-time aliasing test between *dct_149(D)[i_33] and MEM[(int16_t[8] *)dct_149(D) + 32B][i_33]
common/dct.c:281:5: note: versioning for alias required: can't determine dependence between *dct_149(D)[i_33] and MEM[(int16_t[8] *)dct_149(D) + 48B][i_33]
common/dct.c:281:5: note: mark for run-time aliasing test between *dct_149(D)[i_33] and MEM[(int16_t[8] *)dct_149(D) + 48B][i_33]
common/dct.c:281:5: note: versioning for alias required: can't determine dependence between *dct_149(D)[i_33] and MEM[(int16_t[8] *)dct_149(D) + 64B][i_33]
common/dct.c:281:5: note: mark for run-time aliasing test between *dct_149(D)[i_33] and MEM[(int16_t[8] *)dct_149(D) + 64B][i_33]
common/dct.c:281:5: note: versioning for alias required: can't determine dependence between *dct_149(D)[i_33] and MEM[(int16_t[8] *)dct_149(D) + 80B][i_33]
common/dct.c:281:5: note: mark for run-time aliasing test between *dct_149(D)[i_33] and MEM[(int16_t[8] *)dct_149(D) + 80B][i_33]
common/dct.c:281:5: note: versioning for alias required: can't determine dependence between *dct_149(D)[i_33] and MEM[(int16_t[8] *)dct_149(D) + 96B][i_33]
common/dct.c:281:5: note: mark for run-time aliasing test between *dct_149(D)[i_33] and MEM[(int16_t[8] *)dct_149(D) + 96B][i_33]
common/dct.c:281:5: note: versioning for alias required: can't determine dependence between *dct_149(D)[i_33] and MEM[(int16_t[8] *)dct_149(D) + 112B][i_33]
common/dct.c:281:5: note: mark for run-time aliasing test between *dct_149(D)[i_33] and MEM[(int16_t[8] *)dct_149(D) + 112B][i_33]
common/dct.c:281:5: note: versioning for alias required: can't determine dependence between MEM[(int16_t[8] *)dct_149(D) + 16B][i_33] and MEM[(int16_t[8] *)dct_149(D) + 32B][i_33]
common/dct.c:281:5: note: mark for run-time aliasing test between MEM[(int16_t[8] *)dct_149(D) + 16B][i_33] and MEM[(int16_t[8] *)dct_149(D) + 32B][i_33]
common/dct.c:281:5: note: versioning for alias required: can't determine dependence between MEM[(int16_t[8] *)dct_149(D) + 16B][i_33] and MEM[(int16_t[8] *)dct_149(D) + 48B][i_33]
common/dct.c:281:5: note: mark for run-time aliasing test between MEM[(int16_t[8] *)dct_149(D) + 16B][i_33] and MEM[(int16_t[8] *)dct_149(D) + 48B][i_33]
common/dct.c:281:5: note: versioning for alias required: can't determine dependence between MEM[(int16_t[8] *)dct_149(D) + 16B][i_33] and MEM[(int16_t[8] *)dct_149(D) + 64B][i_33]
common/dct.c:281:5: note: mark for run-time aliasing test between MEM[(int16_t[8] *)dct_149(D) + 16B][i_33] and MEM[(int16_t[8] *)dct_149(D) + 64B][i_33]
common/dct.c:281:5: note: versioning for alias required: can't determine dependence between MEM[(int16_t[8] *)dct_149(D) + 16B][i_33] and MEM[(int16_t[8] *)dct_149(D) + 80B][i_33]
common/dct.c:281:5: note: mark for run-time aliasing test between MEM[(int16_t[8] *)dct_149(D) + 16B][i_33] and MEM[(int16_t[8] *)dct_149(D) + 80B][i_33]
common/dct.c:281:5: note: versioning for alias required: can't determine dependence between MEM[(int16_t[8] *)dct_149(D) + 16B][i_33] and MEM[(int16_t[8] *)dct_149(D) + 96B][i_33]
common/dct.c:281:5: note: mark for run-time aliasing test between MEM[(int16_t[8] *)dct_149(D) + 16B][i_33] and MEM[(int16_t[8] *)dct_149(D) + 96B][i_33]
common/dct.c:281:5: note: versioning for alias required: can't determine dependence between MEM[(int16_t[8] *)dct_149(D) + 16B][i_33] and MEM[(int16_t[8] *)dct_149(D) + 112B][i_33]
common/dct.c:281:5: note: mark for run-time aliasing test between MEM[(int16_t[8] *)dct_149(D) + 16B][i_33] and MEM[(int16_t[8] *)dct_149(D) + 112B][i_33]
common/dct.c:281:5: note: versioning for alias required: can't determine dependence between MEM[(int16_t[8] *)dct_149(D) + 32B][i_33] and MEM[(int16_t[8] *)dct_149(D) + 48B][i_33]
common/dct.c:281:5: note: mark for run-time aliasing test between MEM[(int16_t[8] *)dct_149(D) + 32B][i_33] and MEM[(int16_t[8] *)dct_149(D) + 48B][i_33]
common/dct.c:281:5: note: versioning for alias required: can't determine dependence between MEM[(int16_t[8] *)dct_149(D) + 32B][i_33] and MEM[(int16_t[8] *)dct_149(D) + 64B][i_33]
common/dct.c:281:5: note: mark for run-time aliasing test between MEM[(int16_t[8] *)dct_149(D) + 32B][i_33] and MEM[(int16_t[8] *)dct_149(D) + 64B][i_33]
common/dct.c:281:5: note: versioning for alias required: can't determine dependence between MEM[(int16_t[8] *)dct_149(D) + 32B][i_33] and MEM[(int16_t[8] *)dct_149(D) + 80B][i_33]
common/dct.c:281:5: note: mark for run-time aliasing test between MEM[(int16_t[8] *)dct_149(D) + 32B][i_33] and MEM[(int16_t[8] *)dct_149(D) + 80B][i_33]
common/dct.c:281:5: note: versioning for alias required: can't determine dependence between MEM[(int16_t[8] *)dct_149(D) + 32B][i_33] and MEM[(int16_t[8] *)dct_149(D) + 96B][i_33]
common/dct.c:281:5: note: mark for run-time aliasing test between MEM[(int16_t[8] *)dct_149(D) + 32B][i_33] and MEM[(int16_t[8] *)dct_149(D) + 96B][i_33]
common/dct.c:281:5: note: versioning for alias required: can't determine dependence between MEM[(int16_t[8] *)dct_149(D) + 32B][i_33] and MEM[(int16_t[8] *)dct_149(D) + 112B][i_33]
common/dct.c:281:5: note: mark for run-time aliasing test between MEM[(int16_t[8] *)dct_149(D) + 32B][i_33] and MEM[(int16_t[8] *)dct_149(D) + 112B][i_33]
common/dct.c:281:5: note: versioning for alias required: can't determine dependence between MEM[(int16_t[8] *)dct_149(D) + 48B][i_33] and MEM[(int16_t[8] *)dct_149(D) + 64B][i_33]
common/dct.c:281:5: note: mark for run-time aliasing test between MEM[(int16_t[8] *)dct_149(D) + 48B][i_33] and MEM[(int16_t[8] *)dct_149(D) + 64B][i_33]
common/dct.c:281:5: note: versioning for alias required: can't determine dependence between MEM[(int16_t[8] *)dct_149(D) + 48B][i_33] and MEM[(int16_t[8] *)dct_149(D) + 80B][i_33]
common/dct.c:281:5: note: mark for run-time aliasing test between MEM[(int16_t[8] *)dct_149(D) + 48B][i_33] and MEM[(int16_t[8] *)dct_149(D) + 80B][i_33]
common/dct.c:281:5: note: versioning for alias required: can't determine dependence between MEM[(int16_t[8] *)dct_149(D) + 48B][i_33] and MEM[(int16_t[8] *)dct_149(D) + 96B][i_33]
common/dct.c:281:5: note: mark for run-time aliasing test between MEM[(int16_t[8] *)dct_149(D) + 48B][i_33] and MEM[(int16_t[8] *)dct_149(D) + 96B][i_33]
common/dct.c:281:5: note: versioning for alias required: can't determine dependence between MEM[(int16_t[8] *)dct_149(D) + 48B][i_33] and MEM[(int16_t[8] *)dct_149(D) + 112B][i_33]
common/dct.c:281:5: note: mark for run-time aliasing test between MEM[(int16_t[8] *)dct_149(D) + 48B][i_33] and MEM[(int16_t[8] *)dct_149(D) + 112B][i_33]
common/dct.c:281:5: note: versioning for alias required: can't determine dependence between MEM[(int16_t[8] *)dct_149(D) + 64B][i_33] and MEM[(int16_t[8] *)dct_149(D) + 80B][i_33]
common/dct.c:281:5: note: mark for run-time aliasing test between MEM[(int16_t[8] *)dct_149(D) + 64B][i_33] and MEM[(int16_t[8] *)dct_149(D) + 80B][i_33]
common/dct.c:281:5: note: versioning for alias required: can't determine dependence between MEM[(int16_t[8] *)dct_149(D) + 64B][i_33] and MEM[(int16_t[8] *)dct_149(D) + 96B][i_33]
common/dct.c:281:5: note: mark for run-time aliasing test between MEM[(int16_t[8] *)dct_149(D) + 64B][i_33] and MEM[(int16_t[8] *)dct_149(D) + 96B][i_33]
common/dct.c:281:5: note: versioning for alias required: can't determine dependence between MEM[(int16_t[8] *)dct_149(D) + 64B][i_33] and MEM[(int16_t[8] *)dct_149(D) + 112B][i_33]
common/dct.c:281:5: note: mark for run-time aliasing test between MEM[(int16_t[8] *)dct_149(D) + 64B][i_33] and MEM[(int16_t[8] *)dct_149(D) + 112B][i_33]
common/dct.c:281:5: note: versioning for alias required: can't determine dependence between MEM[(int16_t[8] *)dct_149(D) + 80B][i_33] and MEM[(int16_t[8] *)dct_149(D) + 96B][i_33]
common/dct.c:281:5: note: mark for run-time aliasing test between MEM[(int16_t[8] *)dct_149(D) + 80B][i_33] and MEM[(int16_t[8] *)dct_149(D) + 96B][i_33]
common/dct.c:281:5: note: versioning for alias required: can't determine dependence between MEM[(int16_t[8] *)dct_149(D) + 80B][i_33] and MEM[(int16_t[8] *)dct_149(D) + 112B][i_33]
common/dct.c:281:5: note: mark for run-time aliasing test between MEM[(int16_t[8] *)dct_149(D) + 80B][i_33] and MEM[(int16_t[8] *)dct_149(D) + 112B][i_33]
common/dct.c:281:5: note: versioning for alias required: can't determine dependence between MEM[(int16_t[8] *)dct_149(D) + 96B][i_33] and MEM[(int16_t[8] *)dct_149(D) + 112B][i_33]
common/dct.c:281:5: note: mark for run-time aliasing test between MEM[(int16_t[8] *)dct_149(D) + 96B][i_33] and MEM[(int16_t[8] *)dct_149(D) + 112B][i_33]
common/dct.c:281:5: note: === vect_determine_vectorization_factor ===
common/dct.c:281:5: note: ==> examining phi: i_33 = PHI <0(11), i_190(13)>

common/dct.c:281:5: note: ==> examining phi: .MEM_230 = PHI <.MEM_99(11), .MEM_189(13)>

common/dct.c:281:5: note: ==> examining phi: ivtmp_538 = PHI <8(11), ivtmp_536(13)>

common/dct.c:281:5: note: ==> examining statement: # DEBUG i => i_33

common/dct.c:281:5: note: skip.
common/dct.c:281:5: note: ==> examining statement: _101 = tmp[i_33][0];

common/dct.c:281:5: note: get vectype for scalar type:  short int
common/dct.c:281:5: note: vectype: vector(8) short int
common/dct.c:281:5: note: nunits = 8
common/dct.c:281:5: note: ==> examining statement: _102 = (int) _101;

common/dct.c:281:5: note: get vectype for scalar type:  int
common/dct.c:281:5: note: vectype: vector(4) int
common/dct.c:281:5: note: get vectype for scalar type:  short int
common/dct.c:281:5: note: vectype: vector(8) short int
common/dct.c:281:5: note: nunits = 8
common/dct.c:281:5: note: ==> examining statement: _103 = tmp[i_33][7];

common/dct.c:281:5: note: get vectype for scalar type:  short int
common/dct.c:281:5: note: vectype: vector(8) short int
common/dct.c:281:5: note: nunits = 8
common/dct.c:281:5: note: ==> examining statement: _104 = (int) _103;

common/dct.c:281:5: note: get vectype for scalar type:  int
common/dct.c:281:5: note: vectype: vector(4) int
common/dct.c:281:5: note: get vectype for scalar type:  short int
common/dct.c:281:5: note: vectype: vector(8) short int
common/dct.c:281:5: note: nunits = 8
common/dct.c:281:5: note: ==> examining statement: s07_105 = _102 + _104;

common/dct.c:281:5: note: get vectype for scalar type:  const int
common/dct.c:281:5: note: vectype: const vector(4) int
common/dct.c:281:5: note: get vectype for scalar type:  const int
common/dct.c:281:5: note: vectype: const vector(4) int
common/dct.c:281:5: note: nunits = 4
common/dct.c:281:5: note: ==> examining statement: # DEBUG s07 => s07_105

common/dct.c:281:5: note: skip.
common/dct.c:281:5: note: ==> examining statement: _106 = tmp[i_33][1];

common/dct.c:281:5: note: get vectype for scalar type:  short int
common/dct.c:281:5: note: vectype: vector(8) short int
common/dct.c:281:5: note: nunits = 8
common/dct.c:281:5: note: ==> examining statement: _107 = (int) _106;

common/dct.c:281:5: note: get vectype for scalar type:  int
common/dct.c:281:5: note: vectype: vector(4) int
common/dct.c:281:5: note: get vectype for scalar type:  short int
common/dct.c:281:5: note: vectype: vector(8) short int
common/dct.c:281:5: note: nunits = 8
common/dct.c:281:5: note: ==> examining statement: _108 = tmp[i_33][6];

common/dct.c:281:5: note: get vectype for scalar type:  short int
common/dct.c:281:5: note: vectype: vector(8) short int
common/dct.c:281:5: note: nunits = 8
common/dct.c:281:5: note: ==> examining statement: _109 = (int) _108;

common/dct.c:281:5: note: get vectype for scalar type:  int
common/dct.c:281:5: note: vectype: vector(4) int
common/dct.c:281:5: note: get vectype for scalar type:  short int
common/dct.c:281:5: note: vectype: vector(8) short int
common/dct.c:281:5: note: nunits = 8
common/dct.c:281:5: note: ==> examining statement: s16_110 = _107 + _109;

common/dct.c:281:5: note: get vectype for scalar type:  const int
common/dct.c:281:5: note: vectype: const vector(4) int
common/dct.c:281:5: note: get vectype for scalar type:  const int
common/dct.c:281:5: note: vectype: const vector(4) int
common/dct.c:281:5: note: nunits = 4
common/dct.c:281:5: note: ==> examining statement: # DEBUG s16 => s16_110

common/dct.c:281:5: note: skip.
common/dct.c:281:5: note: ==> examining statement: _111 = tmp[i_33][2];

common/dct.c:281:5: note: get vectype for scalar type:  short int
common/dct.c:281:5: note: vectype: vector(8) short int
common/dct.c:281:5: note: nunits = 8
common/dct.c:281:5: note: ==> examining statement: _112 = (int) _111;

common/dct.c:281:5: note: get vectype for scalar type:  int
common/dct.c:281:5: note: vectype: vector(4) int
common/dct.c:281:5: note: get vectype for scalar type:  short int
common/dct.c:281:5: note: vectype: vector(8) short int
common/dct.c:281:5: note: nunits = 8
common/dct.c:281:5: note: ==> examining statement: _113 = tmp[i_33][5];

common/dct.c:281:5: note: get vectype for scalar type:  short int
common/dct.c:281:5: note: vectype: vector(8) short int
common/dct.c:281:5: note: nunits = 8
common/dct.c:281:5: note: ==> examining statement: _114 = (int) _113;

common/dct.c:281:5: note: get vectype for scalar type:  int
common/dct.c:281:5: note: vectype: vector(4) int
common/dct.c:281:5: note: get vectype for scalar type:  short int
common/dct.c:281:5: note: vectype: vector(8) short int
common/dct.c:281:5: note: nunits = 8
common/dct.c:281:5: note: ==> examining statement: s25_115 = _112 + _114;

common/dct.c:281:5: note: get vectype for scalar type:  const int
common/dct.c:281:5: note: vectype: const vector(4) int
common/dct.c:281:5: note: get vectype for scalar type:  const int
common/dct.c:281:5: note: vectype: const vector(4) int
common/dct.c:281:5: note: nunits = 4
common/dct.c:281:5: note: ==> examining statement: # DEBUG s25 => s25_115

common/dct.c:281:5: note: skip.
common/dct.c:281:5: note: ==> examining statement: _116 = tmp[i_33][3];

common/dct.c:281:5: note: get vectype for scalar type:  short int
common/dct.c:281:5: note: vectype: vector(8) short int
common/dct.c:281:5: note: nunits = 8
common/dct.c:281:5: note: ==> examining statement: _117 = (int) _116;

common/dct.c:281:5: note: get vectype for scalar type:  int
common/dct.c:281:5: note: vectype: vector(4) int
common/dct.c:281:5: note: get vectype for scalar type:  short int
common/dct.c:281:5: note: vectype: vector(8) short int
common/dct.c:281:5: note: nunits = 8
common/dct.c:281:5: note: ==> examining statement: _118 = tmp[i_33][4];

common/dct.c:281:5: note: get vectype for scalar type:  short int
common/dct.c:281:5: note: vectype: vector(8) short int
common/dct.c:281:5: note: nunits = 8
common/dct.c:281:5: note: ==> examining statement: _119 = (int) _118;

common/dct.c:281:5: note: get vectype for scalar type:  int
common/dct.c:281:5: note: vectype: vector(4) int
common/dct.c:281:5: note: get vectype for scalar type:  short int
common/dct.c:281:5: note: vectype: vector(8) short int
common/dct.c:281:5: note: nunits = 8
common/dct.c:281:5: note: ==> examining statement: s34_120 = _117 + _119;

common/dct.c:281:5: note: get vectype for scalar type:  const int
common/dct.c:281:5: note: vectype: const vector(4) int
common/dct.c:281:5: note: get vectype for scalar type:  const int
common/dct.c:281:5: note: vectype: const vector(4) int
common/dct.c:281:5: note: nunits = 4
common/dct.c:281:5: note: ==> examining statement: # DEBUG s34 => s34_120

common/dct.c:281:5: note: skip.
common/dct.c:281:5: note: ==> examining statement: a0_121 = s07_105 + s34_120;

common/dct.c:281:5: note: get vectype for scalar type:  const int
common/dct.c:281:5: note: vectype: const vector(4) int
common/dct.c:281:5: note: get vectype for scalar type:  const int
common/dct.c:281:5: note: vectype: const vector(4) int
common/dct.c:281:5: note: nunits = 4
common/dct.c:281:5: note: ==> examining statement: # DEBUG a0 => a0_121

common/dct.c:281:5: note: skip.
common/dct.c:281:5: note: ==> examining statement: a1_122 = s16_110 + s25_115;

common/dct.c:281:5: note: get vectype for scalar type:  const int
common/dct.c:281:5: note: vectype: const vector(4) int
common/dct.c:281:5: note: get vectype for scalar type:  const int
common/dct.c:281:5: note: vectype: const vector(4) int
common/dct.c:281:5: note: nunits = 4
common/dct.c:281:5: note: ==> examining statement: # DEBUG a1 => a1_122

common/dct.c:281:5: note: skip.
common/dct.c:281:5: note: ==> examining statement: a2_123 = s07_105 - s34_120;

common/dct.c:281:5: note: get vectype for scalar type:  const int
common/dct.c:281:5: note: vectype: const vector(4) int
common/dct.c:281:5: note: get vectype for scalar type:  const int
common/dct.c:281:5: note: vectype: const vector(4) int
common/dct.c:281:5: note: nunits = 4
common/dct.c:281:5: note: ==> examining statement: # DEBUG a2 => a2_123

common/dct.c:281:5: note: skip.
common/dct.c:281:5: note: ==> examining statement: a3_124 = s16_110 - s25_115;

common/dct.c:281:5: note: get vectype for scalar type:  const int
common/dct.c:281:5: note: vectype: const vector(4) int
common/dct.c:281:5: note: get vectype for scalar type:  const int
common/dct.c:281:5: note: vectype: const vector(4) int
common/dct.c:281:5: note: nunits = 4
common/dct.c:281:5: note: ==> examining statement: # DEBUG a3 => a3_124

common/dct.c:281:5: note: skip.
common/dct.c:281:5: note: ==> examining statement: d07_125 = _102 - _104;

common/dct.c:281:5: note: get vectype for scalar type:  const int
common/dct.c:281:5: note: vectype: const vector(4) int
common/dct.c:281:5: note: get vectype for scalar type:  const int
common/dct.c:281:5: note: vectype: const vector(4) int
common/dct.c:281:5: note: nunits = 4
common/dct.c:281:5: note: ==> examining statement: # DEBUG d07 => d07_125

common/dct.c:281:5: note: skip.
common/dct.c:281:5: note: ==> examining statement: d16_126 = _107 - _109;

common/dct.c:281:5: note: get vectype for scalar type:  const int
common/dct.c:281:5: note: vectype: const vector(4) int
common/dct.c:281:5: note: get vectype for scalar type:  const int
common/dct.c:281:5: note: vectype: const vector(4) int
common/dct.c:281:5: note: nunits = 4
common/dct.c:281:5: note: ==> examining statement: # DEBUG d16 => d16_126

common/dct.c:281:5: note: skip.
common/dct.c:281:5: note: ==> examining statement: d25_127 = _112 - _114;

common/dct.c:281:5: note: get vectype for scalar type:  const int
common/dct.c:281:5: note: vectype: const vector(4) int
common/dct.c:281:5: note: get vectype for scalar type:  const int
common/dct.c:281:5: note: vectype: const vector(4) int
common/dct.c:281:5: note: nunits = 4
common/dct.c:281:5: note: ==> examining statement: # DEBUG d25 => d25_127

common/dct.c:281:5: note: skip.
common/dct.c:281:5: note: ==> examining statement: d34_128 = _117 - _119;

common/dct.c:281:5: note: get vectype for scalar type:  const int
common/dct.c:281:5: note: vectype: const vector(4) int
common/dct.c:281:5: note: get vectype for scalar type:  const int
common/dct.c:281:5: note: vectype: const vector(4) int
common/dct.c:281:5: note: nunits = 4
common/dct.c:281:5: note: ==> examining statement: # DEBUG d34 => d34_128

common/dct.c:281:5: note: skip.
common/dct.c:281:5: note: ==> examining statement: _129 = d16_126 + d25_127;

common/dct.c:281:5: note: get vectype for scalar type:  int
common/dct.c:281:5: note: vectype: vector(4) int
common/dct.c:281:5: note: get vectype for scalar type:  int
common/dct.c:281:5: note: vectype: vector(4) int
common/dct.c:281:5: note: nunits = 4
common/dct.c:281:5: note: ==> examining statement: _130 = d07_125 >> 1;

common/dct.c:281:5: note: get vectype for scalar type:  int
common/dct.c:281:5: note: vectype: vector(4) int
common/dct.c:281:5: note: get vectype for scalar type:  int
common/dct.c:281:5: note: vectype: vector(4) int
common/dct.c:281:5: note: nunits = 4
common/dct.c:281:5: note: ==> examining statement: _131 = d07_125 + _130;

common/dct.c:281:5: note: get vectype for scalar type:  int
common/dct.c:281:5: note: vectype: vector(4) int
common/dct.c:281:5: note: get vectype for scalar type:  int
common/dct.c:281:5: note: vectype: vector(4) int
common/dct.c:281:5: note: nunits = 4
common/dct.c:281:5: note: ==> examining statement: a4_132 = _129 + _131;

common/dct.c:281:5: note: get vectype for scalar type:  const int
common/dct.c:281:5: note: vectype: const vector(4) int
common/dct.c:281:5: note: get vectype for scalar type:  const int
common/dct.c:281:5: note: vectype: const vector(4) int
common/dct.c:281:5: note: nunits = 4
common/dct.c:281:5: note: ==> examining statement: # DEBUG a4 => a4_132

common/dct.c:281:5: note: skip.
common/dct.c:281:5: note: ==> examining statement: _133 = d07_125 - d34_128;

common/dct.c:281:5: note: get vectype for scalar type:  int
common/dct.c:281:5: note: vectype: vector(4) int
common/dct.c:281:5: note: get vectype for scalar type:  int
common/dct.c:281:5: note: vectype: vector(4) int
common/dct.c:281:5: note: nunits = 4
common/dct.c:281:5: note: ==> examining statement: _134 = d25_127 >> 1;

common/dct.c:281:5: note: get vectype for scalar type:  int
common/dct.c:281:5: note: vectype: vector(4) int
common/dct.c:281:5: note: get vectype for scalar type:  int
common/dct.c:281:5: note: vectype: vector(4) int
common/dct.c:281:5: note: nunits = 4
common/dct.c:281:5: note: ==> examining statement: _135 = d25_127 + _134;

common/dct.c:281:5: note: get vectype for scalar type:  int
common/dct.c:281:5: note: vectype: vector(4) int
common/dct.c:281:5: note: get vectype for scalar type:  int
common/dct.c:281:5: note: vectype: vector(4) int
common/dct.c:281:5: note: nunits = 4
common/dct.c:281:5: note: ==> examining statement: a5_136 = _133 - _135;

common/dct.c:281:5: note: get vectype for scalar type:  const int
common/dct.c:281:5: note: vectype: const vector(4) int
common/dct.c:281:5: note: get vectype for scalar type:  const int
common/dct.c:281:5: note: vectype: const vector(4) int
common/dct.c:281:5: note: nunits = 4
common/dct.c:281:5: note: ==> examining statement: # DEBUG a5 => a5_136

common/dct.c:281:5: note: skip.
common/dct.c:281:5: note: ==> examining statement: _137 = d07_125 + d34_128;

common/dct.c:281:5: note: get vectype for scalar type:  int
common/dct.c:281:5: note: vectype: vector(4) int
common/dct.c:281:5: note: get vectype for scalar type:  int
common/dct.c:281:5: note: vectype: vector(4) int
common/dct.c:281:5: note: nunits = 4
common/dct.c:281:5: note: ==> examining statement: _138 = d16_126 >> 1;

common/dct.c:281:5: note: get vectype for scalar type:  int
common/dct.c:281:5: note: vectype: vector(4) int
common/dct.c:281:5: note: get vectype for scalar type:  int
common/dct.c:281:5: note: vectype: vector(4) int
common/dct.c:281:5: note: nunits = 4
common/dct.c:281:5: note: ==> examining statement: _139 = d16_126 + _138;

common/dct.c:281:5: note: get vectype for scalar type:  int
common/dct.c:281:5: note: vectype: vector(4) int
common/dct.c:281:5: note: get vectype for scalar type:  int
common/dct.c:281:5: note: vectype: vector(4) int
common/dct.c:281:5: note: nunits = 4
common/dct.c:281:5: note: ==> examining statement: a6_140 = _137 - _139;

common/dct.c:281:5: note: get vectype for scalar type:  const int
common/dct.c:281:5: note: vectype: const vector(4) int
common/dct.c:281:5: note: get vectype for scalar type:  const int
common/dct.c:281:5: note: vectype: const vector(4) int
common/dct.c:281:5: note: nunits = 4
common/dct.c:281:5: note: ==> examining statement: # DEBUG a6 => a6_140

common/dct.c:281:5: note: skip.
common/dct.c:281:5: note: ==> examining statement: _141 = d16_126 - d25_127;

common/dct.c:281:5: note: get vectype for scalar type:  int
common/dct.c:281:5: note: vectype: vector(4) int
common/dct.c:281:5: note: get vectype for scalar type:  int
common/dct.c:281:5: note: vectype: vector(4) int
common/dct.c:281:5: note: nunits = 4
common/dct.c:281:5: note: ==> examining statement: _142 = d34_128 >> 1;

common/dct.c:281:5: note: get vectype for scalar type:  int
common/dct.c:281:5: note: vectype: vector(4) int
common/dct.c:281:5: note: get vectype for scalar type:  int
common/dct.c:281:5: note: vectype: vector(4) int
common/dct.c:281:5: note: nunits = 4
common/dct.c:281:5: note: ==> examining statement: _143 = d34_128 + _142;

common/dct.c:281:5: note: get vectype for scalar type:  int
common/dct.c:281:5: note: vectype: vector(4) int
common/dct.c:281:5: note: get vectype for scalar type:  int
common/dct.c:281:5: note: vectype: vector(4) int
common/dct.c:281:5: note: nunits = 4
common/dct.c:281:5: note: ==> examining statement: a7_144 = _141 + _143;

common/dct.c:281:5: note: get vectype for scalar type:  const int
common/dct.c:281:5: note: vectype: const vector(4) int
common/dct.c:281:5: note: get vectype for scalar type:  const int
common/dct.c:281:5: note: vectype: const vector(4) int
common/dct.c:281:5: note: nunits = 4
common/dct.c:281:5: note: ==> examining statement: # DEBUG a7 => a7_144

common/dct.c:281:5: note: skip.
common/dct.c:281:5: note: ==> examining statement: _145 = (unsigned short) a0_121;

common/dct.c:281:5: note: get vectype for scalar type:  unsigned short
common/dct.c:281:5: note: vectype: vector(8) unsigned short
common/dct.c:281:5: note: get vectype for scalar type:  unsigned short
common/dct.c:281:5: note: vectype: vector(8) unsigned short
common/dct.c:281:5: note: nunits = 8
common/dct.c:281:5: note: ==> examining statement: _146 = (unsigned short) a1_122;

common/dct.c:281:5: note: get vectype for scalar type:  unsigned short
common/dct.c:281:5: note: vectype: vector(8) unsigned short
common/dct.c:281:5: note: get vectype for scalar type:  unsigned short
common/dct.c:281:5: note: vectype: vector(8) unsigned short
common/dct.c:281:5: note: nunits = 8
common/dct.c:281:5: note: ==> examining statement: _147 = _145 + _146;

common/dct.c:281:5: note: get vectype for scalar type:  unsigned short
common/dct.c:281:5: note: vectype: vector(8) unsigned short
common/dct.c:281:5: note: get vectype for scalar type:  unsigned short
common/dct.c:281:5: note: vectype: vector(8) unsigned short
common/dct.c:281:5: note: nunits = 8
common/dct.c:281:5: note: ==> examining statement: _148 = (short int) _147;

common/dct.c:281:5: note: get vectype for scalar type:  short int
common/dct.c:281:5: note: vectype: vector(8) short int
common/dct.c:281:5: note: get vectype for scalar type:  short int
common/dct.c:281:5: note: vectype: vector(8) short int
common/dct.c:281:5: note: nunits = 8
common/dct.c:281:5: note: ==> examining statement: *dct_149(D)[i_33] = _148;

common/dct.c:281:5: note: get vectype for scalar type:  int16_t
common/dct.c:281:5: note: vectype: vector(8) short int
common/dct.c:281:5: note: nunits = 8
common/dct.c:281:5: note: ==> examining statement: _151 = a7_144 >> 2;

common/dct.c:281:5: note: get vectype for scalar type:  int
common/dct.c:281:5: note: vectype: vector(4) int
common/dct.c:281:5: note: get vectype for scalar type:  int
common/dct.c:281:5: note: vectype: vector(4) int
common/dct.c:281:5: note: nunits = 4
common/dct.c:281:5: note: ==> examining statement: _152 = (unsigned short) _151;

common/dct.c:281:5: note: get vectype for scalar type:  unsigned short
common/dct.c:281:5: note: vectype: vector(8) unsigned short
common/dct.c:281:5: note: get vectype for scalar type:  unsigned short
common/dct.c:281:5: note: vectype: vector(8) unsigned short
common/dct.c:281:5: note: nunits = 8
common/dct.c:281:5: note: ==> examining statement: _153 = (unsigned short) a4_132;

common/dct.c:281:5: note: get vectype for scalar type:  unsigned short
common/dct.c:281:5: note: vectype: vector(8) unsigned short
common/dct.c:281:5: note: get vectype for scalar type:  unsigned short
common/dct.c:281:5: note: vectype: vector(8) unsigned short
common/dct.c:281:5: note: nunits = 8
common/dct.c:281:5: note: ==> examining statement: _154 = _152 + _153;

common/dct.c:281:5: note: get vectype for scalar type:  unsigned short
common/dct.c:281:5: note: vectype: vector(8) unsigned short
common/dct.c:281:5: note: get vectype for scalar type:  unsigned short
common/dct.c:281:5: note: vectype: vector(8) unsigned short
common/dct.c:281:5: note: nunits = 8
common/dct.c:281:5: note: ==> examining statement: _155 = (short int) _154;

common/dct.c:281:5: note: get vectype for scalar type:  short int
common/dct.c:281:5: note: vectype: vector(8) short int
common/dct.c:281:5: note: get vectype for scalar type:  short int
common/dct.c:281:5: note: vectype: vector(8) short int
common/dct.c:281:5: note: nunits = 8
common/dct.c:281:5: note: ==> examining statement: MEM[(int16_t[8] *)dct_149(D) + 16B][i_33] = _155;

common/dct.c:281:5: note: get vectype for scalar type:  int16_t
common/dct.c:281:5: note: vectype: vector(8) short int
common/dct.c:281:5: note: nunits = 8
common/dct.c:281:5: note: ==> examining statement: _157 = a3_124 >> 1;

common/dct.c:281:5: note: get vectype for scalar type:  int
common/dct.c:281:5: note: vectype: vector(4) int
common/dct.c:281:5: note: get vectype for scalar type:  int
common/dct.c:281:5: note: vectype: vector(4) int
common/dct.c:281:5: note: nunits = 4
common/dct.c:281:5: note: ==> examining statement: _158 = (unsigned short) _157;

common/dct.c:281:5: note: get vectype for scalar type:  unsigned short
common/dct.c:281:5: note: vectype: vector(8) unsigned short
common/dct.c:281:5: note: get vectype for scalar type:  unsigned short
common/dct.c:281:5: note: vectype: vector(8) unsigned short
common/dct.c:281:5: note: nunits = 8
common/dct.c:281:5: note: ==> examining statement: _159 = (unsigned short) a2_123;

common/dct.c:281:5: note: get vectype for scalar type:  unsigned short
common/dct.c:281:5: note: vectype: vector(8) unsigned short
common/dct.c:281:5: note: get vectype for scalar type:  unsigned short
common/dct.c:281:5: note: vectype: vector(8) unsigned short
common/dct.c:281:5: note: nunits = 8
common/dct.c:281:5: note: ==> examining statement: _160 = _158 + _159;

common/dct.c:281:5: note: get vectype for scalar type:  unsigned short
common/dct.c:281:5: note: vectype: vector(8) unsigned short
common/dct.c:281:5: note: get vectype for scalar type:  unsigned short
common/dct.c:281:5: note: vectype: vector(8) unsigned short
common/dct.c:281:5: note: nunits = 8
common/dct.c:281:5: note: ==> examining statement: _161 = (short int) _160;

common/dct.c:281:5: note: get vectype for scalar type:  short int
common/dct.c:281:5: note: vectype: vector(8) short int
common/dct.c:281:5: note: get vectype for scalar type:  short int
common/dct.c:281:5: note: vectype: vector(8) short int
common/dct.c:281:5: note: nunits = 8
common/dct.c:281:5: note: ==> examining statement: MEM[(int16_t[8] *)dct_149(D) + 32B][i_33] = _161;

common/dct.c:281:5: note: get vectype for scalar type:  int16_t
common/dct.c:281:5: note: vectype: vector(8) short int
common/dct.c:281:5: note: nunits = 8
common/dct.c:281:5: note: ==> examining statement: _163 = a6_140 >> 2;

common/dct.c:281:5: note: get vectype for scalar type:  int
common/dct.c:281:5: note: vectype: vector(4) int
common/dct.c:281:5: note: get vectype for scalar type:  int
common/dct.c:281:5: note: vectype: vector(4) int
common/dct.c:281:5: note: nunits = 4
common/dct.c:281:5: note: ==> examining statement: _164 = (unsigned short) _163;

common/dct.c:281:5: note: get vectype for scalar type:  unsigned short
common/dct.c:281:5: note: vectype: vector(8) unsigned short
common/dct.c:281:5: note: get vectype for scalar type:  unsigned short
common/dct.c:281:5: note: vectype: vector(8) unsigned short
common/dct.c:281:5: note: nunits = 8
common/dct.c:281:5: note: ==> examining statement: _165 = (unsigned short) a5_136;

common/dct.c:281:5: note: get vectype for scalar type:  unsigned short
common/dct.c:281:5: note: vectype: vector(8) unsigned short
common/dct.c:281:5: note: get vectype for scalar type:  unsigned short
common/dct.c:281:5: note: vectype: vector(8) unsigned short
common/dct.c:281:5: note: nunits = 8
common/dct.c:281:5: note: ==> examining statement: _166 = _164 + _165;

common/dct.c:281:5: note: get vectype for scalar type:  unsigned short
common/dct.c:281:5: note: vectype: vector(8) unsigned short
common/dct.c:281:5: note: get vectype for scalar type:  unsigned short
common/dct.c:281:5: note: vectype: vector(8) unsigned short
common/dct.c:281:5: note: nunits = 8
common/dct.c:281:5: note: ==> examining statement: _167 = (short int) _166;

common/dct.c:281:5: note: get vectype for scalar type:  short int
common/dct.c:281:5: note: vectype: vector(8) short int
common/dct.c:281:5: note: get vectype for scalar type:  short int
common/dct.c:281:5: note: vectype: vector(8) short int
common/dct.c:281:5: note: nunits = 8
common/dct.c:281:5: note: ==> examining statement: MEM[(int16_t[8] *)dct_149(D) + 48B][i_33] = _167;

common/dct.c:281:5: note: get vectype for scalar type:  int16_t
common/dct.c:281:5: note: vectype: vector(8) short int
common/dct.c:281:5: note: nunits = 8
common/dct.c:281:5: note: ==> examining statement: _169 = _145 - _146;

common/dct.c:281:5: note: get vectype for scalar type:  unsigned short
common/dct.c:281:5: note: vectype: vector(8) unsigned short
common/dct.c:281:5: note: get vectype for scalar type:  unsigned short
common/dct.c:281:5: note: vectype: vector(8) unsigned short
common/dct.c:281:5: note: nunits = 8
common/dct.c:281:5: note: ==> examining statement: _170 = (short int) _169;

common/dct.c:281:5: note: get vectype for scalar type:  short int
common/dct.c:281:5: note: vectype: vector(8) short int
common/dct.c:281:5: note: get vectype for scalar type:  short int
common/dct.c:281:5: note: vectype: vector(8) short int
common/dct.c:281:5: note: nunits = 8
common/dct.c:281:5: note: ==> examining statement: MEM[(int16_t[8] *)dct_149(D) + 64B][i_33] = _170;

common/dct.c:281:5: note: get vectype for scalar type:  int16_t
common/dct.c:281:5: note: vectype: vector(8) short int
common/dct.c:281:5: note: nunits = 8
common/dct.c:281:5: note: ==> examining statement: _172 = (unsigned short) a6_140;

common/dct.c:281:5: note: get vectype for scalar type:  unsigned short
common/dct.c:281:5: note: vectype: vector(8) unsigned short
common/dct.c:281:5: note: get vectype for scalar type:  unsigned short
common/dct.c:281:5: note: vectype: vector(8) unsigned short
common/dct.c:281:5: note: nunits = 8
common/dct.c:281:5: note: ==> examining statement: _173 = a5_136 >> 2;

common/dct.c:281:5: note: get vectype for scalar type:  int
common/dct.c:281:5: note: vectype: vector(4) int
common/dct.c:281:5: note: get vectype for scalar type:  int
common/dct.c:281:5: note: vectype: vector(4) int
common/dct.c:281:5: note: nunits = 4
common/dct.c:281:5: note: ==> examining statement: _174 = (unsigned short) _173;

common/dct.c:281:5: note: get vectype for scalar type:  unsigned short
common/dct.c:281:5: note: vectype: vector(8) unsigned short
common/dct.c:281:5: note: get vectype for scalar type:  unsigned short
common/dct.c:281:5: note: vectype: vector(8) unsigned short
common/dct.c:281:5: note: nunits = 8
common/dct.c:281:5: note: ==> examining statement: _175 = _172 - _174;

common/dct.c:281:5: note: get vectype for scalar type:  unsigned short
common/dct.c:281:5: note: vectype: vector(8) unsigned short
common/dct.c:281:5: note: get vectype for scalar type:  unsigned short
common/dct.c:281:5: note: vectype: vector(8) unsigned short
common/dct.c:281:5: note: nunits = 8
common/dct.c:281:5: note: ==> examining statement: _176 = (short int) _175;

common/dct.c:281:5: note: get vectype for scalar type:  short int
common/dct.c:281:5: note: vectype: vector(8) short int
common/dct.c:281:5: note: get vectype for scalar type:  short int
common/dct.c:281:5: note: vectype: vector(8) short int
common/dct.c:281:5: note: nunits = 8
common/dct.c:281:5: note: ==> examining statement: MEM[(int16_t[8] *)dct_149(D) + 80B][i_33] = _176;

common/dct.c:281:5: note: get vectype for scalar type:  int16_t
common/dct.c:281:5: note: vectype: vector(8) short int
common/dct.c:281:5: note: nunits = 8
common/dct.c:281:5: note: ==> examining statement: _178 = a2_123 >> 1;

common/dct.c:281:5: note: get vectype for scalar type:  int
common/dct.c:281:5: note: vectype: vector(4) int
common/dct.c:281:5: note: get vectype for scalar type:  int
common/dct.c:281:5: note: vectype: vector(4) int
common/dct.c:281:5: note: nunits = 4
common/dct.c:281:5: note: ==> examining statement: _179 = (unsigned short) _178;

common/dct.c:281:5: note: get vectype for scalar type:  unsigned short
common/dct.c:281:5: note: vectype: vector(8) unsigned short
common/dct.c:281:5: note: get vectype for scalar type:  unsigned short
common/dct.c:281:5: note: vectype: vector(8) unsigned short
common/dct.c:281:5: note: nunits = 8
common/dct.c:281:5: note: ==> examining statement: _180 = (unsigned short) a3_124;

common/dct.c:281:5: note: get vectype for scalar type:  unsigned short
common/dct.c:281:5: note: vectype: vector(8) unsigned short
common/dct.c:281:5: note: get vectype for scalar type:  unsigned short
common/dct.c:281:5: note: vectype: vector(8) unsigned short
common/dct.c:281:5: note: nunits = 8
common/dct.c:281:5: note: ==> examining statement: _181 = _179 - _180;

common/dct.c:281:5: note: get vectype for scalar type:  unsigned short
common/dct.c:281:5: note: vectype: vector(8) unsigned short
common/dct.c:281:5: note: get vectype for scalar type:  unsigned short
common/dct.c:281:5: note: vectype: vector(8) unsigned short
common/dct.c:281:5: note: nunits = 8
common/dct.c:281:5: note: ==> examining statement: _182 = (short int) _181;

common/dct.c:281:5: note: get vectype for scalar type:  short int
common/dct.c:281:5: note: vectype: vector(8) short int
common/dct.c:281:5: note: get vectype for scalar type:  short int
common/dct.c:281:5: note: vectype: vector(8) short int
common/dct.c:281:5: note: nunits = 8
common/dct.c:281:5: note: ==> examining statement: MEM[(int16_t[8] *)dct_149(D) + 96B][i_33] = _182;

common/dct.c:281:5: note: get vectype for scalar type:  int16_t
common/dct.c:281:5: note: vectype: vector(8) short int
common/dct.c:281:5: note: nunits = 8
common/dct.c:281:5: note: ==> examining statement: _184 = a4_132 >> 2;

common/dct.c:281:5: note: get vectype for scalar type:  int
common/dct.c:281:5: note: vectype: vector(4) int
common/dct.c:281:5: note: get vectype for scalar type:  int
common/dct.c:281:5: note: vectype: vector(4) int
common/dct.c:281:5: note: nunits = 4
common/dct.c:281:5: note: ==> examining statement: _185 = (unsigned short) _184;

common/dct.c:281:5: note: get vectype for scalar type:  unsigned short
common/dct.c:281:5: note: vectype: vector(8) unsigned short
common/dct.c:281:5: note: get vectype for scalar type:  unsigned short
common/dct.c:281:5: note: vectype: vector(8) unsigned short
common/dct.c:281:5: note: nunits = 8
common/dct.c:281:5: note: ==> examining statement: _186 = (unsigned short) a7_144;

common/dct.c:281:5: note: get vectype for scalar type:  unsigned short
common/dct.c:281:5: note: vectype: vector(8) unsigned short
common/dct.c:281:5: note: get vectype for scalar type:  unsigned short
common/dct.c:281:5: note: vectype: vector(8) unsigned short
common/dct.c:281:5: note: nunits = 8
common/dct.c:281:5: note: ==> examining statement: _187 = _185 - _186;

common/dct.c:281:5: note: get vectype for scalar type:  unsigned short
common/dct.c:281:5: note: vectype: vector(8) unsigned short
common/dct.c:281:5: note: get vectype for scalar type:  unsigned short
common/dct.c:281:5: note: vectype: vector(8) unsigned short
common/dct.c:281:5: note: nunits = 8
common/dct.c:281:5: note: ==> examining statement: _188 = (short int) _187;

common/dct.c:281:5: note: get vectype for scalar type:  short int
common/dct.c:281:5: note: vectype: vector(8) short int
common/dct.c:281:5: note: get vectype for scalar type:  short int
common/dct.c:281:5: note: vectype: vector(8) short int
common/dct.c:281:5: note: nunits = 8
common/dct.c:281:5: note: ==> examining statement: MEM[(int16_t[8] *)dct_149(D) + 112B][i_33] = _188;

common/dct.c:281:5: note: get vectype for scalar type:  int16_t
common/dct.c:281:5: note: vectype: vector(8) short int
common/dct.c:281:5: note: nunits = 8
common/dct.c:281:5: note: ==> examining statement: i_190 = i_33 + 1;

common/dct.c:281:5: note: skip.
common/dct.c:281:5: note: ==> examining statement: # DEBUG i => i_190

common/dct.c:281:5: note: skip.
common/dct.c:281:5: note: ==> examining statement: # DEBUG i => i_190

common/dct.c:281:5: note: skip.
common/dct.c:281:5: note: ==> examining statement: ivtmp_536 = ivtmp_538 - 1;

common/dct.c:281:5: note: skip.
common/dct.c:281:5: note: ==> examining statement: if (ivtmp_536 != 0)

common/dct.c:281:5: note: skip.
common/dct.c:281:5: note: vectorization factor = 8
common/dct.c:281:5: note: === vect_analyze_data_refs_alignment ===
common/dct.c:281:5: note: vect_compute_data_ref_alignment:
common/dct.c:281:5: note: misalign = 0 bytes of ref tmp[i_33][0]
common/dct.c:281:5: note: vect_compute_data_ref_alignment:
common/dct.c:281:5: note: misalign = 14 bytes of ref tmp[i_33][7]
common/dct.c:281:5: note: vect_compute_data_ref_alignment:
common/dct.c:281:5: note: misalign = 2 bytes of ref tmp[i_33][1]
common/dct.c:281:5: note: vect_compute_data_ref_alignment:
common/dct.c:281:5: note: misalign = 12 bytes of ref tmp[i_33][6]
common/dct.c:281:5: note: vect_compute_data_ref_alignment:
common/dct.c:281:5: note: misalign = 4 bytes of ref tmp[i_33][2]
common/dct.c:281:5: note: vect_compute_data_ref_alignment:
common/dct.c:281:5: note: misalign = 10 bytes of ref tmp[i_33][5]
common/dct.c:281:5: note: vect_compute_data_ref_alignment:
common/dct.c:281:5: note: misalign = 6 bytes of ref tmp[i_33][3]
common/dct.c:281:5: note: vect_compute_data_ref_alignment:
common/dct.c:281:5: note: misalign = 8 bytes of ref tmp[i_33][4]
common/dct.c:281:5: note: vect_compute_data_ref_alignment:
common/dct.c:281:5: note: can't force alignment of ref: *dct_149(D)[i_33]
common/dct.c:281:5: note: vect_compute_data_ref_alignment:
common/dct.c:281:5: note: can't force alignment of ref: MEM[(int16_t[8] *)dct_149(D) + 16B][i_33]
common/dct.c:281:5: note: vect_compute_data_ref_alignment:
common/dct.c:281:5: note: can't force alignment of ref: MEM[(int16_t[8] *)dct_149(D) + 32B][i_33]
common/dct.c:281:5: note: vect_compute_data_ref_alignment:
common/dct.c:281:5: note: can't force alignment of ref: MEM[(int16_t[8] *)dct_149(D) + 48B][i_33]
common/dct.c:281:5: note: vect_compute_data_ref_alignment:
common/dct.c:281:5: note: can't force alignment of ref: MEM[(int16_t[8] *)dct_149(D) + 64B][i_33]
common/dct.c:281:5: note: vect_compute_data_ref_alignment:
common/dct.c:281:5: note: can't force alignment of ref: MEM[(int16_t[8] *)dct_149(D) + 80B][i_33]
common/dct.c:281:5: note: vect_compute_data_ref_alignment:
common/dct.c:281:5: note: can't force alignment of ref: MEM[(int16_t[8] *)dct_149(D) + 96B][i_33]
common/dct.c:281:5: note: vect_compute_data_ref_alignment:
common/dct.c:281:5: note: can't force alignment of ref: MEM[(int16_t[8] *)dct_149(D) + 112B][i_33]
common/dct.c:281:5: note: === vect_prune_runtime_alias_test_list ===
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
common/dct.c:281:5: note: merging ranges for MEM[(int16_t[8] *)dct_149(D) + 16B][i_33], *dct_149(D)[i_33] and MEM[(int16_t[8] *)dct_149(D) + 32B][i_33], *dct_149(D)[i_33]
common/dct.c:281:5: note: merging ranges for MEM[(int16_t[8] *)dct_149(D) + 16B][i_33], *dct_149(D)[i_33] and MEM[(int16_t[8] *)dct_149(D) + 48B][i_33], *dct_149(D)[i_33]
common/dct.c:281:5: note: merging ranges for MEM[(int16_t[8] *)dct_149(D) + 16B][i_33], *dct_149(D)[i_33] and MEM[(int16_t[8] *)dct_149(D) + 112B][i_33], *dct_149(D)[i_33]
common/dct.c:281:5: note: merging ranges for MEM[(int16_t[8] *)dct_149(D) + 16B][i_33], *dct_149(D)[i_33] and MEM[(int16_t[8] *)dct_149(D) + 80B][i_33], *dct_149(D)[i_33]
common/dct.c:281:5: note: merging ranges for MEM[(int16_t[8] *)dct_149(D) + 16B][i_33], *dct_149(D)[i_33] and MEM[(int16_t[8] *)dct_149(D) + 64B][i_33], *dct_149(D)[i_33]
common/dct.c:281:5: note: merging ranges for MEM[(int16_t[8] *)dct_149(D) + 16B][i_33], *dct_149(D)[i_33] and MEM[(int16_t[8] *)dct_149(D) + 96B][i_33], *dct_149(D)[i_33]
common/dct.c:281:5: note: merging ranges for MEM[(int16_t[8] *)dct_149(D) + 48B][i_33], MEM[(int16_t[8] *)dct_149(D) + 32B][i_33] and MEM[(int16_t[8] *)dct_149(D) + 112B][i_33], MEM[(int16_t[8] *)dct_149(D) + 32B][i_33]
common/dct.c:281:5: note: merging ranges for MEM[(int16_t[8] *)dct_149(D) + 48B][i_33], MEM[(int16_t[8] *)dct_149(D) + 32B][i_33] and MEM[(int16_t[8] *)dct_149(D) + 80B][i_33], MEM[(int16_t[8] *)dct_149(D) + 32B][i_33]
common/dct.c:281:5: note: merging ranges for MEM[(int16_t[8] *)dct_149(D) + 48B][i_33], MEM[(int16_t[8] *)dct_149(D) + 32B][i_33] and MEM[(int16_t[8] *)dct_149(D) + 64B][i_33], MEM[(int16_t[8] *)dct_149(D) + 32B][i_33]
common/dct.c:281:5: note: merging ranges for MEM[(int16_t[8] *)dct_149(D) + 48B][i_33], MEM[(int16_t[8] *)dct_149(D) + 32B][i_33] and MEM[(int16_t[8] *)dct_149(D) + 96B][i_33], MEM[(int16_t[8] *)dct_149(D) + 32B][i_33]
common/dct.c:281:5: note: merging ranges for MEM[(int16_t[8] *)dct_149(D) + 32B][i_33], MEM[(int16_t[8] *)dct_149(D) + 16B][i_33] and MEM[(int16_t[8] *)dct_149(D) + 48B][i_33], MEM[(int16_t[8] *)dct_149(D) + 16B][i_33]
common/dct.c:281:5: note: merging ranges for MEM[(int16_t[8] *)dct_149(D) + 32B][i_33], MEM[(int16_t[8] *)dct_149(D) + 16B][i_33] and MEM[(int16_t[8] *)dct_149(D) + 112B][i_33], MEM[(int16_t[8] *)dct_149(D) + 16B][i_33]
common/dct.c:281:5: note: merging ranges for MEM[(int16_t[8] *)dct_149(D) + 32B][i_33], MEM[(int16_t[8] *)dct_149(D) + 16B][i_33] and MEM[(int16_t[8] *)dct_149(D) + 80B][i_33], MEM[(int16_t[8] *)dct_149(D) + 16B][i_33]
common/dct.c:281:5: note: merging ranges for MEM[(int16_t[8] *)dct_149(D) + 32B][i_33], MEM[(int16_t[8] *)dct_149(D) + 16B][i_33] and MEM[(int16_t[8] *)dct_149(D) + 64B][i_33], MEM[(int16_t[8] *)dct_149(D) + 16B][i_33]
common/dct.c:281:5: note: merging ranges for MEM[(int16_t[8] *)dct_149(D) + 32B][i_33], MEM[(int16_t[8] *)dct_149(D) + 16B][i_33] and MEM[(int16_t[8] *)dct_149(D) + 96B][i_33], MEM[(int16_t[8] *)dct_149(D) + 16B][i_33]
common/dct.c:281:5: note: merging ranges for MEM[(int16_t[8] *)dct_149(D) + 80B][i_33], MEM[(int16_t[8] *)dct_149(D) + 48B][i_33] and MEM[(int16_t[8] *)dct_149(D) + 112B][i_33], MEM[(int16_t[8] *)dct_149(D) + 48B][i_33]
common/dct.c:281:5: note: merging ranges for MEM[(int16_t[8] *)dct_149(D) + 64B][i_33], MEM[(int16_t[8] *)dct_149(D) + 48B][i_33] and MEM[(int16_t[8] *)dct_149(D) + 80B][i_33], MEM[(int16_t[8] *)dct_149(D) + 48B][i_33]
common/dct.c:281:5: note: merging ranges for MEM[(int16_t[8] *)dct_149(D) + 64B][i_33], MEM[(int16_t[8] *)dct_149(D) + 48B][i_33] and MEM[(int16_t[8] *)dct_149(D) + 96B][i_33], MEM[(int16_t[8] *)dct_149(D) + 48B][i_33]
common/dct.c:281:5: note: merging ranges for MEM[(int16_t[8] *)dct_149(D) + 96B][i_33], MEM[(int16_t[8] *)dct_149(D) + 80B][i_33] and MEM[(int16_t[8] *)dct_149(D) + 112B][i_33], MEM[(int16_t[8] *)dct_149(D) + 80B][i_33]
common/dct.c:281:5: note: merging ranges for MEM[(int16_t[8] *)dct_149(D) + 80B][i_33], MEM[(int16_t[8] *)dct_149(D) + 64B][i_33] and MEM[(int16_t[8] *)dct_149(D) + 112B][i_33], MEM[(int16_t[8] *)dct_149(D) + 64B][i_33]
common/dct.c:281:5: note: merging ranges for MEM[(int16_t[8] *)dct_149(D) + 80B][i_33], MEM[(int16_t[8] *)dct_149(D) + 64B][i_33] and MEM[(int16_t[8] *)dct_149(D) + 96B][i_33], MEM[(int16_t[8] *)dct_149(D) + 64B][i_33]
common/dct.c:281:5: note: improved number of alias checks from 28 to 7
common/dct.c:281:5: note: number of versioning for alias run-time tests exceeds 6 (--param vect-max-version-for-alias-checks)

Analyzing loop at common/dct.c:274
common/dct.c:274:5: note: ===== analyze_loop_nest =====
common/dct.c:274:5: note: === vect_analyze_loop_form ===
common/dct.c:274:5: note: === get_loop_niters ===
Analyzing # of iterations of loop 1
  exit condition [7, + , 4294967295] != 0
  bounds on difference of bases: -7 ... -7
  result:
    # of iterations 7, bounded by 7
common/dct.c:274:5: note: === vect_analyze_data_refs ===
Creating dr for tmp[0][i_36]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &tmp
	offset from base address: 0
	constant offset from base address: 0
	step: 2
	aligned to: 128
	base_object: tmp
	Access function 0: {0, +, 1}_1
	Access function 1: 0
Creating dr for tmp[7][i_36]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &tmp
	offset from base address: 0
	constant offset from base address: 112
	step: 2
	aligned to: 128
	base_object: tmp
	Access function 0: {0, +, 1}_1
	Access function 1: 7
Creating dr for tmp[1][i_36]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &tmp
	offset from base address: 0
	constant offset from base address: 16
	step: 2
	aligned to: 128
	base_object: tmp
	Access function 0: {0, +, 1}_1
	Access function 1: 1
Creating dr for tmp[6][i_36]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &tmp
	offset from base address: 0
	constant offset from base address: 96
	step: 2
	aligned to: 128
	base_object: tmp
	Access function 0: {0, +, 1}_1
	Access function 1: 6
Creating dr for tmp[2][i_36]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &tmp
	offset from base address: 0
	constant offset from base address: 32
	step: 2
	aligned to: 128
	base_object: tmp
	Access function 0: {0, +, 1}_1
	Access function 1: 2
Creating dr for tmp[5][i_36]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &tmp
	offset from base address: 0
	constant offset from base address: 80
	step: 2
	aligned to: 128
	base_object: tmp
	Access function 0: {0, +, 1}_1
	Access function 1: 5
Creating dr for tmp[3][i_36]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &tmp
	offset from base address: 0
	constant offset from base address: 48
	step: 2
	aligned to: 128
	base_object: tmp
	Access function 0: {0, +, 1}_1
	Access function 1: 3
Creating dr for tmp[4][i_36]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &tmp
	offset from base address: 0
	constant offset from base address: 64
	step: 2
	aligned to: 128
	base_object: tmp
	Access function 0: {0, +, 1}_1
	Access function 1: 4
Creating dr for tmp[0][i_36]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &tmp
	offset from base address: 0
	constant offset from base address: 0
	step: 2
	aligned to: 128
	base_object: tmp
	Access function 0: {0, +, 1}_1
	Access function 1: 0
Creating dr for tmp[1][i_36]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &tmp
	offset from base address: 0
	constant offset from base address: 16
	step: 2
	aligned to: 128
	base_object: tmp
	Access function 0: {0, +, 1}_1
	Access function 1: 1
Creating dr for tmp[2][i_36]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &tmp
	offset from base address: 0
	constant offset from base address: 32
	step: 2
	aligned to: 128
	base_object: tmp
	Access function 0: {0, +, 1}_1
	Access function 1: 2
Creating dr for tmp[3][i_36]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &tmp
	offset from base address: 0
	constant offset from base address: 48
	step: 2
	aligned to: 128
	base_object: tmp
	Access function 0: {0, +, 1}_1
	Access function 1: 3
Creating dr for tmp[4][i_36]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &tmp
	offset from base address: 0
	constant offset from base address: 64
	step: 2
	aligned to: 128
	base_object: tmp
	Access function 0: {0, +, 1}_1
	Access function 1: 4
Creating dr for tmp[5][i_36]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &tmp
	offset from base address: 0
	constant offset from base address: 80
	step: 2
	aligned to: 128
	base_object: tmp
	Access function 0: {0, +, 1}_1
	Access function 1: 5
Creating dr for tmp[6][i_36]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &tmp
	offset from base address: 0
	constant offset from base address: 96
	step: 2
	aligned to: 128
	base_object: tmp
	Access function 0: {0, +, 1}_1
	Access function 1: 6
Creating dr for tmp[7][i_36]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &tmp
	offset from base address: 0
	constant offset from base address: 112
	step: 2
	aligned to: 128
	base_object: tmp
	Access function 0: {0, +, 1}_1
	Access function 1: 7
common/dct.c:274:5: note: got vectype for stmt: _9 = tmp[0][i_36];
vector(8) short int
common/dct.c:274:5: note: got vectype for stmt: _11 = tmp[7][i_36];
vector(8) short int
common/dct.c:274:5: note: got vectype for stmt: _14 = tmp[1][i_36];
vector(8) short int
common/dct.c:274:5: note: got vectype for stmt: _16 = tmp[6][i_36];
vector(8) short int
common/dct.c:274:5: note: got vectype for stmt: _19 = tmp[2][i_36];
vector(8) short int
common/dct.c:274:5: note: got vectype for stmt: _21 = tmp[5][i_36];
vector(8) short int
common/dct.c:274:5: note: got vectype for stmt: _24 = tmp[3][i_36];
vector(8) short int
common/dct.c:274:5: note: got vectype for stmt: _26 = tmp[4][i_36];
vector(8) short int
common/dct.c:274:5: note: got vectype for stmt: tmp[0][i_36] = _59;
vector(8) short int
common/dct.c:274:5: note: got vectype for stmt: tmp[1][i_36] = _65;
vector(8) short int
common/dct.c:274:5: note: got vectype for stmt: tmp[2][i_36] = _71;
vector(8) short int
common/dct.c:274:5: note: got vectype for stmt: tmp[3][i_36] = _77;
vector(8) short int
common/dct.c:274:5: note: got vectype for stmt: tmp[4][i_36] = _80;
vector(8) short int
common/dct.c:274:5: note: got vectype for stmt: tmp[5][i_36] = _86;
vector(8) short int
common/dct.c:274:5: note: got vectype for stmt: tmp[6][i_36] = _92;
vector(8) short int
common/dct.c:274:5: note: got vectype for stmt: tmp[7][i_36] = _98;
vector(8) short int
common/dct.c:274:5: note: === vect_analyze_scalar_cycles ===
common/dct.c:274:5: note: Analyze phi: i_36 = PHI <0(8), i_100(10)>

common/dct.c:274:5: note: Access function of PHI: {0, +, 1}_1
common/dct.c:274:5: note: step: 1,  init: 0
common/dct.c:274:5: note: Detected induction.
common/dct.c:274:5: note: Analyze phi: .MEM_229 = PHI <.MEM_215(8), .MEM_99(10)>

common/dct.c:274:5: note: Analyze phi: ivtmp_537 = PHI <8(8), ivtmp_539(10)>

common/dct.c:274:5: note: Access function of PHI: {8, +, 4294967295}_1
common/dct.c:274:5: note: step: 4294967295,  init: 8
common/dct.c:274:5: note: Detected induction.
common/dct.c:274:5: note: === vect_pattern_recog ===
common/dct.c:274:5: note: === vect_analyze_data_ref_accesses ===
common/dct.c:274:5: note: === vect_mark_stmts_to_be_vectorized ===
common/dct.c:274:5: note: init: phi relevant? i_36 = PHI <0(8), i_100(10)>
common/dct.c:274:5: note: init: phi relevant? .MEM_229 = PHI <.MEM_215(8), .MEM_99(10)>
common/dct.c:274:5: note: init: phi relevant? ivtmp_537 = PHI <8(8), ivtmp_539(10)>
common/dct.c:274:5: note: init: stmt relevant? # DEBUG i => i_36
common/dct.c:274:5: note: init: stmt relevant? _9 = tmp[0][i_36];
common/dct.c:274:5: note: init: stmt relevant? _10 = (int) _9;
common/dct.c:274:5: note: init: stmt relevant? _11 = tmp[7][i_36];
common/dct.c:274:5: note: init: stmt relevant? _12 = (int) _11;
common/dct.c:274:5: note: init: stmt relevant? s07_13 = _10 + _12;
common/dct.c:274:5: note: init: stmt relevant? # DEBUG s07 => s07_13
common/dct.c:274:5: note: init: stmt relevant? _14 = tmp[1][i_36];
common/dct.c:274:5: note: init: stmt relevant? _15 = (int) _14;
common/dct.c:274:5: note: init: stmt relevant? _16 = tmp[6][i_36];
common/dct.c:274:5: note: init: stmt relevant? _17 = (int) _16;
common/dct.c:274:5: note: init: stmt relevant? s16_18 = _15 + _17;
common/dct.c:274:5: note: init: stmt relevant? # DEBUG s16 => s16_18
common/dct.c:274:5: note: init: stmt relevant? _19 = tmp[2][i_36];
common/dct.c:274:5: note: init: stmt relevant? _20 = (int) _19;
common/dct.c:274:5: note: init: stmt relevant? _21 = tmp[5][i_36];
common/dct.c:274:5: note: init: stmt relevant? _22 = (int) _21;
common/dct.c:274:5: note: init: stmt relevant? s25_23 = _20 + _22;
common/dct.c:274:5: note: init: stmt relevant? # DEBUG s25 => s25_23
common/dct.c:274:5: note: init: stmt relevant? _24 = tmp[3][i_36];
common/dct.c:274:5: note: init: stmt relevant? _25 = (int) _24;
common/dct.c:274:5: note: init: stmt relevant? _26 = tmp[4][i_36];
common/dct.c:274:5: note: init: stmt relevant? _27 = (int) _26;
common/dct.c:274:5: note: init: stmt relevant? s34_28 = _25 + _27;
common/dct.c:274:5: note: init: stmt relevant? # DEBUG s34 => s34_28
common/dct.c:274:5: note: init: stmt relevant? a0_29 = s07_13 + s34_28;
common/dct.c:274:5: note: init: stmt relevant? # DEBUG a0 => a0_29
common/dct.c:274:5: note: init: stmt relevant? a1_30 = s16_18 + s25_23;
common/dct.c:274:5: note: init: stmt relevant? # DEBUG a1 => a1_30
common/dct.c:274:5: note: init: stmt relevant? a2_31 = s07_13 - s34_28;
common/dct.c:274:5: note: init: stmt relevant? # DEBUG a2 => a2_31
common/dct.c:274:5: note: init: stmt relevant? a3_32 = s16_18 - s25_23;
common/dct.c:274:5: note: init: stmt relevant? # DEBUG a3 => a3_32
common/dct.c:274:5: note: init: stmt relevant? d07_35 = _10 - _12;
common/dct.c:274:5: note: init: stmt relevant? # DEBUG d07 => d07_35
common/dct.c:274:5: note: init: stmt relevant? d16_37 = _15 - _17;
common/dct.c:274:5: note: init: stmt relevant? # DEBUG d16 => d16_37
common/dct.c:274:5: note: init: stmt relevant? d25_38 = _20 - _22;
common/dct.c:274:5: note: init: stmt relevant? # DEBUG d25 => d25_38
common/dct.c:274:5: note: init: stmt relevant? d34_39 = _25 - _27;
common/dct.c:274:5: note: init: stmt relevant? # DEBUG d34 => d34_39
common/dct.c:274:5: note: init: stmt relevant? _40 = d16_37 + d25_38;
common/dct.c:274:5: note: init: stmt relevant? _41 = d07_35 >> 1;
common/dct.c:274:5: note: init: stmt relevant? _42 = d07_35 + _41;
common/dct.c:274:5: note: init: stmt relevant? a4_43 = _40 + _42;
common/dct.c:274:5: note: init: stmt relevant? # DEBUG a4 => a4_43
common/dct.c:274:5: note: init: stmt relevant? _44 = d07_35 - d34_39;
common/dct.c:274:5: note: init: stmt relevant? _45 = d25_38 >> 1;
common/dct.c:274:5: note: init: stmt relevant? _46 = d25_38 + _45;
common/dct.c:274:5: note: init: stmt relevant? a5_47 = _44 - _46;
common/dct.c:274:5: note: init: stmt relevant? # DEBUG a5 => a5_47
common/dct.c:274:5: note: init: stmt relevant? _48 = d07_35 + d34_39;
common/dct.c:274:5: note: init: stmt relevant? _49 = d16_37 >> 1;
common/dct.c:274:5: note: init: stmt relevant? _50 = d16_37 + _49;
common/dct.c:274:5: note: init: stmt relevant? a6_51 = _48 - _50;
common/dct.c:274:5: note: init: stmt relevant? # DEBUG a6 => a6_51
common/dct.c:274:5: note: init: stmt relevant? _52 = d16_37 - d25_38;
common/dct.c:274:5: note: init: stmt relevant? _53 = d34_39 >> 1;
common/dct.c:274:5: note: init: stmt relevant? _54 = d34_39 + _53;
common/dct.c:274:5: note: init: stmt relevant? a7_55 = _52 + _54;
common/dct.c:274:5: note: init: stmt relevant? # DEBUG a7 => a7_55
common/dct.c:274:5: note: init: stmt relevant? _56 = (unsigned short) a0_29;
common/dct.c:274:5: note: init: stmt relevant? _57 = (unsigned short) a1_30;
common/dct.c:274:5: note: init: stmt relevant? _58 = _56 + _57;
common/dct.c:274:5: note: init: stmt relevant? _59 = (short int) _58;
common/dct.c:274:5: note: init: stmt relevant? tmp[0][i_36] = _59;
common/dct.c:274:5: note: vec_stmt_relevant_p: stmt has vdefs.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: init: stmt relevant? _61 = a7_55 >> 2;
common/dct.c:274:5: note: init: stmt relevant? _62 = (unsigned short) _61;
common/dct.c:274:5: note: init: stmt relevant? _63 = (unsigned short) a4_43;
common/dct.c:274:5: note: init: stmt relevant? _64 = _62 + _63;
common/dct.c:274:5: note: init: stmt relevant? _65 = (short int) _64;
common/dct.c:274:5: note: init: stmt relevant? tmp[1][i_36] = _65;
common/dct.c:274:5: note: vec_stmt_relevant_p: stmt has vdefs.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: init: stmt relevant? _67 = a3_32 >> 1;
common/dct.c:274:5: note: init: stmt relevant? _68 = (unsigned short) _67;
common/dct.c:274:5: note: init: stmt relevant? _69 = (unsigned short) a2_31;
common/dct.c:274:5: note: init: stmt relevant? _70 = _68 + _69;
common/dct.c:274:5: note: init: stmt relevant? _71 = (short int) _70;
common/dct.c:274:5: note: init: stmt relevant? tmp[2][i_36] = _71;
common/dct.c:274:5: note: vec_stmt_relevant_p: stmt has vdefs.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: init: stmt relevant? _73 = a6_51 >> 2;
common/dct.c:274:5: note: init: stmt relevant? _74 = (unsigned short) _73;
common/dct.c:274:5: note: init: stmt relevant? _75 = (unsigned short) a5_47;
common/dct.c:274:5: note: init: stmt relevant? _76 = _74 + _75;
common/dct.c:274:5: note: init: stmt relevant? _77 = (short int) _76;
common/dct.c:274:5: note: init: stmt relevant? tmp[3][i_36] = _77;
common/dct.c:274:5: note: vec_stmt_relevant_p: stmt has vdefs.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: init: stmt relevant? _79 = _56 - _57;
common/dct.c:274:5: note: init: stmt relevant? _80 = (short int) _79;
common/dct.c:274:5: note: init: stmt relevant? tmp[4][i_36] = _80;
common/dct.c:274:5: note: vec_stmt_relevant_p: stmt has vdefs.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: init: stmt relevant? _82 = (unsigned short) a6_51;
common/dct.c:274:5: note: init: stmt relevant? _83 = a5_47 >> 2;
common/dct.c:274:5: note: init: stmt relevant? _84 = (unsigned short) _83;
common/dct.c:274:5: note: init: stmt relevant? _85 = _82 - _84;
common/dct.c:274:5: note: init: stmt relevant? _86 = (short int) _85;
common/dct.c:274:5: note: init: stmt relevant? tmp[5][i_36] = _86;
common/dct.c:274:5: note: vec_stmt_relevant_p: stmt has vdefs.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: init: stmt relevant? _88 = a2_31 >> 1;
common/dct.c:274:5: note: init: stmt relevant? _89 = (unsigned short) _88;
common/dct.c:274:5: note: init: stmt relevant? _90 = (unsigned short) a3_32;
common/dct.c:274:5: note: init: stmt relevant? _91 = _89 - _90;
common/dct.c:274:5: note: init: stmt relevant? _92 = (short int) _91;
common/dct.c:274:5: note: init: stmt relevant? tmp[6][i_36] = _92;
common/dct.c:274:5: note: vec_stmt_relevant_p: stmt has vdefs.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: init: stmt relevant? _94 = a4_43 >> 2;
common/dct.c:274:5: note: init: stmt relevant? _95 = (unsigned short) _94;
common/dct.c:274:5: note: init: stmt relevant? _96 = (unsigned short) a7_55;
common/dct.c:274:5: note: init: stmt relevant? _97 = _95 - _96;
common/dct.c:274:5: note: init: stmt relevant? _98 = (short int) _97;
common/dct.c:274:5: note: init: stmt relevant? tmp[7][i_36] = _98;
common/dct.c:274:5: note: vec_stmt_relevant_p: stmt has vdefs.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: init: stmt relevant? i_100 = i_36 + 1;
common/dct.c:274:5: note: init: stmt relevant? # DEBUG i => i_100
common/dct.c:274:5: note: init: stmt relevant? # DEBUG i => i_100
common/dct.c:274:5: note: init: stmt relevant? ivtmp_539 = ivtmp_537 - 1;
common/dct.c:274:5: note: init: stmt relevant? if (ivtmp_539 != 0)
common/dct.c:274:5: note: worklist: examine stmt: tmp[7][i_36] = _98;
common/dct.c:274:5: note: vect_is_simple_use: operand _98
common/dct.c:274:5: note: def_stmt: _98 = (short int) _97;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: worklist: examine stmt: _98 = (short int) _97;
common/dct.c:274:5: note: vect_is_simple_use: operand _97
common/dct.c:274:5: note: def_stmt: _97 = _95 - _96;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: worklist: examine stmt: _97 = _95 - _96;
common/dct.c:274:5: note: vect_is_simple_use: operand _95
common/dct.c:274:5: note: def_stmt: _95 = (unsigned short) _94;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: vect_is_simple_use: operand _96
common/dct.c:274:5: note: def_stmt: _96 = (unsigned short) a7_55;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: worklist: examine stmt: _96 = (unsigned short) a7_55;
common/dct.c:274:5: note: vect_is_simple_use: operand a7_55
common/dct.c:274:5: note: def_stmt: a7_55 = _52 + _54;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: worklist: examine stmt: a7_55 = _52 + _54;
common/dct.c:274:5: note: vect_is_simple_use: operand _52
common/dct.c:274:5: note: def_stmt: _52 = d16_37 - d25_38;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: vect_is_simple_use: operand _54
common/dct.c:274:5: note: def_stmt: _54 = d34_39 + _53;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: worklist: examine stmt: _54 = d34_39 + _53;
common/dct.c:274:5: note: vect_is_simple_use: operand d34_39
common/dct.c:274:5: note: def_stmt: d34_39 = _25 - _27;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: vect_is_simple_use: operand _53
common/dct.c:274:5: note: def_stmt: _53 = d34_39 >> 1;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: worklist: examine stmt: _53 = d34_39 >> 1;
common/dct.c:274:5: note: vect_is_simple_use: operand d34_39
common/dct.c:274:5: note: def_stmt: d34_39 = _25 - _27;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: already marked relevant/live.
common/dct.c:274:5: note: worklist: examine stmt: d34_39 = _25 - _27;
common/dct.c:274:5: note: vect_is_simple_use: operand _25
common/dct.c:274:5: note: def_stmt: _25 = (int) _24;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: vect_is_simple_use: operand _27
common/dct.c:274:5: note: def_stmt: _27 = (int) _26;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: worklist: examine stmt: _27 = (int) _26;
common/dct.c:274:5: note: vect_is_simple_use: operand _26
common/dct.c:274:5: note: def_stmt: _26 = tmp[4][i_36];
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: worklist: examine stmt: _26 = tmp[4][i_36];
common/dct.c:274:5: note: worklist: examine stmt: _25 = (int) _24;
common/dct.c:274:5: note: vect_is_simple_use: operand _24
common/dct.c:274:5: note: def_stmt: _24 = tmp[3][i_36];
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: worklist: examine stmt: _24 = tmp[3][i_36];
common/dct.c:274:5: note: worklist: examine stmt: _52 = d16_37 - d25_38;
common/dct.c:274:5: note: vect_is_simple_use: operand d16_37
common/dct.c:274:5: note: def_stmt: d16_37 = _15 - _17;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: vect_is_simple_use: operand d25_38
common/dct.c:274:5: note: def_stmt: d25_38 = _20 - _22;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: worklist: examine stmt: d25_38 = _20 - _22;
common/dct.c:274:5: note: vect_is_simple_use: operand _20
common/dct.c:274:5: note: def_stmt: _20 = (int) _19;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: vect_is_simple_use: operand _22
common/dct.c:274:5: note: def_stmt: _22 = (int) _21;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: worklist: examine stmt: _22 = (int) _21;
common/dct.c:274:5: note: vect_is_simple_use: operand _21
common/dct.c:274:5: note: def_stmt: _21 = tmp[5][i_36];
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: worklist: examine stmt: _21 = tmp[5][i_36];
common/dct.c:274:5: note: worklist: examine stmt: _20 = (int) _19;
common/dct.c:274:5: note: vect_is_simple_use: operand _19
common/dct.c:274:5: note: def_stmt: _19 = tmp[2][i_36];
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: worklist: examine stmt: _19 = tmp[2][i_36];
common/dct.c:274:5: note: worklist: examine stmt: d16_37 = _15 - _17;
common/dct.c:274:5: note: vect_is_simple_use: operand _15
common/dct.c:274:5: note: def_stmt: _15 = (int) _14;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: vect_is_simple_use: operand _17
common/dct.c:274:5: note: def_stmt: _17 = (int) _16;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: worklist: examine stmt: _17 = (int) _16;
common/dct.c:274:5: note: vect_is_simple_use: operand _16
common/dct.c:274:5: note: def_stmt: _16 = tmp[6][i_36];
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: worklist: examine stmt: _16 = tmp[6][i_36];
common/dct.c:274:5: note: worklist: examine stmt: _15 = (int) _14;
common/dct.c:274:5: note: vect_is_simple_use: operand _14
common/dct.c:274:5: note: def_stmt: _14 = tmp[1][i_36];
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: worklist: examine stmt: _14 = tmp[1][i_36];
common/dct.c:274:5: note: worklist: examine stmt: _95 = (unsigned short) _94;
common/dct.c:274:5: note: vect_is_simple_use: operand _94
common/dct.c:274:5: note: def_stmt: _94 = a4_43 >> 2;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: worklist: examine stmt: _94 = a4_43 >> 2;
common/dct.c:274:5: note: vect_is_simple_use: operand a4_43
common/dct.c:274:5: note: def_stmt: a4_43 = _40 + _42;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: worklist: examine stmt: a4_43 = _40 + _42;
common/dct.c:274:5: note: vect_is_simple_use: operand _40
common/dct.c:274:5: note: def_stmt: _40 = d16_37 + d25_38;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: vect_is_simple_use: operand _42
common/dct.c:274:5: note: def_stmt: _42 = d07_35 + _41;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: worklist: examine stmt: _42 = d07_35 + _41;
common/dct.c:274:5: note: vect_is_simple_use: operand d07_35
common/dct.c:274:5: note: def_stmt: d07_35 = _10 - _12;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: vect_is_simple_use: operand _41
common/dct.c:274:5: note: def_stmt: _41 = d07_35 >> 1;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: worklist: examine stmt: _41 = d07_35 >> 1;
common/dct.c:274:5: note: vect_is_simple_use: operand d07_35
common/dct.c:274:5: note: def_stmt: d07_35 = _10 - _12;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: already marked relevant/live.
common/dct.c:274:5: note: worklist: examine stmt: d07_35 = _10 - _12;
common/dct.c:274:5: note: vect_is_simple_use: operand _10
common/dct.c:274:5: note: def_stmt: _10 = (int) _9;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: vect_is_simple_use: operand _12
common/dct.c:274:5: note: def_stmt: _12 = (int) _11;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: worklist: examine stmt: _12 = (int) _11;
common/dct.c:274:5: note: vect_is_simple_use: operand _11
common/dct.c:274:5: note: def_stmt: _11 = tmp[7][i_36];
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: worklist: examine stmt: _11 = tmp[7][i_36];
common/dct.c:274:5: note: worklist: examine stmt: _10 = (int) _9;
common/dct.c:274:5: note: vect_is_simple_use: operand _9
common/dct.c:274:5: note: def_stmt: _9 = tmp[0][i_36];
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: worklist: examine stmt: _9 = tmp[0][i_36];
common/dct.c:274:5: note: worklist: examine stmt: _40 = d16_37 + d25_38;
common/dct.c:274:5: note: vect_is_simple_use: operand d16_37
common/dct.c:274:5: note: def_stmt: d16_37 = _15 - _17;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: already marked relevant/live.
common/dct.c:274:5: note: vect_is_simple_use: operand d25_38
common/dct.c:274:5: note: def_stmt: d25_38 = _20 - _22;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: already marked relevant/live.
common/dct.c:274:5: note: worklist: examine stmt: tmp[6][i_36] = _92;
common/dct.c:274:5: note: vect_is_simple_use: operand _92
common/dct.c:274:5: note: def_stmt: _92 = (short int) _91;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: worklist: examine stmt: _92 = (short int) _91;
common/dct.c:274:5: note: vect_is_simple_use: operand _91
common/dct.c:274:5: note: def_stmt: _91 = _89 - _90;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: worklist: examine stmt: _91 = _89 - _90;
common/dct.c:274:5: note: vect_is_simple_use: operand _89
common/dct.c:274:5: note: def_stmt: _89 = (unsigned short) _88;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: vect_is_simple_use: operand _90
common/dct.c:274:5: note: def_stmt: _90 = (unsigned short) a3_32;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: worklist: examine stmt: _90 = (unsigned short) a3_32;
common/dct.c:274:5: note: vect_is_simple_use: operand a3_32
common/dct.c:274:5: note: def_stmt: a3_32 = s16_18 - s25_23;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: worklist: examine stmt: a3_32 = s16_18 - s25_23;
common/dct.c:274:5: note: vect_is_simple_use: operand s16_18
common/dct.c:274:5: note: def_stmt: s16_18 = _15 + _17;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: vect_is_simple_use: operand s25_23
common/dct.c:274:5: note: def_stmt: s25_23 = _20 + _22;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: worklist: examine stmt: s25_23 = _20 + _22;
common/dct.c:274:5: note: vect_is_simple_use: operand _20
common/dct.c:274:5: note: def_stmt: _20 = (int) _19;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: already marked relevant/live.
common/dct.c:274:5: note: vect_is_simple_use: operand _22
common/dct.c:274:5: note: def_stmt: _22 = (int) _21;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: already marked relevant/live.
common/dct.c:274:5: note: worklist: examine stmt: s16_18 = _15 + _17;
common/dct.c:274:5: note: vect_is_simple_use: operand _15
common/dct.c:274:5: note: def_stmt: _15 = (int) _14;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: already marked relevant/live.
common/dct.c:274:5: note: vect_is_simple_use: operand _17
common/dct.c:274:5: note: def_stmt: _17 = (int) _16;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: already marked relevant/live.
common/dct.c:274:5: note: worklist: examine stmt: _89 = (unsigned short) _88;
common/dct.c:274:5: note: vect_is_simple_use: operand _88
common/dct.c:274:5: note: def_stmt: _88 = a2_31 >> 1;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: worklist: examine stmt: _88 = a2_31 >> 1;
common/dct.c:274:5: note: vect_is_simple_use: operand a2_31
common/dct.c:274:5: note: def_stmt: a2_31 = s07_13 - s34_28;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: worklist: examine stmt: a2_31 = s07_13 - s34_28;
common/dct.c:274:5: note: vect_is_simple_use: operand s07_13
common/dct.c:274:5: note: def_stmt: s07_13 = _10 + _12;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: vect_is_simple_use: operand s34_28
common/dct.c:274:5: note: def_stmt: s34_28 = _25 + _27;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: worklist: examine stmt: s34_28 = _25 + _27;
common/dct.c:274:5: note: vect_is_simple_use: operand _25
common/dct.c:274:5: note: def_stmt: _25 = (int) _24;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: already marked relevant/live.
common/dct.c:274:5: note: vect_is_simple_use: operand _27
common/dct.c:274:5: note: def_stmt: _27 = (int) _26;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: already marked relevant/live.
common/dct.c:274:5: note: worklist: examine stmt: s07_13 = _10 + _12;
common/dct.c:274:5: note: vect_is_simple_use: operand _10
common/dct.c:274:5: note: def_stmt: _10 = (int) _9;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: already marked relevant/live.
common/dct.c:274:5: note: vect_is_simple_use: operand _12
common/dct.c:274:5: note: def_stmt: _12 = (int) _11;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: already marked relevant/live.
common/dct.c:274:5: note: worklist: examine stmt: tmp[5][i_36] = _86;
common/dct.c:274:5: note: vect_is_simple_use: operand _86
common/dct.c:274:5: note: def_stmt: _86 = (short int) _85;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: worklist: examine stmt: _86 = (short int) _85;
common/dct.c:274:5: note: vect_is_simple_use: operand _85
common/dct.c:274:5: note: def_stmt: _85 = _82 - _84;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: worklist: examine stmt: _85 = _82 - _84;
common/dct.c:274:5: note: vect_is_simple_use: operand _82
common/dct.c:274:5: note: def_stmt: _82 = (unsigned short) a6_51;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: vect_is_simple_use: operand _84
common/dct.c:274:5: note: def_stmt: _84 = (unsigned short) _83;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: worklist: examine stmt: _84 = (unsigned short) _83;
common/dct.c:274:5: note: vect_is_simple_use: operand _83
common/dct.c:274:5: note: def_stmt: _83 = a5_47 >> 2;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: worklist: examine stmt: _83 = a5_47 >> 2;
common/dct.c:274:5: note: vect_is_simple_use: operand a5_47
common/dct.c:274:5: note: def_stmt: a5_47 = _44 - _46;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: worklist: examine stmt: a5_47 = _44 - _46;
common/dct.c:274:5: note: vect_is_simple_use: operand _44
common/dct.c:274:5: note: def_stmt: _44 = d07_35 - d34_39;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: vect_is_simple_use: operand _46
common/dct.c:274:5: note: def_stmt: _46 = d25_38 + _45;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: worklist: examine stmt: _46 = d25_38 + _45;
common/dct.c:274:5: note: vect_is_simple_use: operand d25_38
common/dct.c:274:5: note: def_stmt: d25_38 = _20 - _22;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: already marked relevant/live.
common/dct.c:274:5: note: vect_is_simple_use: operand _45
common/dct.c:274:5: note: def_stmt: _45 = d25_38 >> 1;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: worklist: examine stmt: _45 = d25_38 >> 1;
common/dct.c:274:5: note: vect_is_simple_use: operand d25_38
common/dct.c:274:5: note: def_stmt: d25_38 = _20 - _22;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: already marked relevant/live.
common/dct.c:274:5: note: worklist: examine stmt: _44 = d07_35 - d34_39;
common/dct.c:274:5: note: vect_is_simple_use: operand d07_35
common/dct.c:274:5: note: def_stmt: d07_35 = _10 - _12;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: already marked relevant/live.
common/dct.c:274:5: note: vect_is_simple_use: operand d34_39
common/dct.c:274:5: note: def_stmt: d34_39 = _25 - _27;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: already marked relevant/live.
common/dct.c:274:5: note: worklist: examine stmt: _82 = (unsigned short) a6_51;
common/dct.c:274:5: note: vect_is_simple_use: operand a6_51
common/dct.c:274:5: note: def_stmt: a6_51 = _48 - _50;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: worklist: examine stmt: a6_51 = _48 - _50;
common/dct.c:274:5: note: vect_is_simple_use: operand _48
common/dct.c:274:5: note: def_stmt: _48 = d07_35 + d34_39;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: vect_is_simple_use: operand _50
common/dct.c:274:5: note: def_stmt: _50 = d16_37 + _49;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: worklist: examine stmt: _50 = d16_37 + _49;
common/dct.c:274:5: note: vect_is_simple_use: operand d16_37
common/dct.c:274:5: note: def_stmt: d16_37 = _15 - _17;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: already marked relevant/live.
common/dct.c:274:5: note: vect_is_simple_use: operand _49
common/dct.c:274:5: note: def_stmt: _49 = d16_37 >> 1;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: worklist: examine stmt: _49 = d16_37 >> 1;
common/dct.c:274:5: note: vect_is_simple_use: operand d16_37
common/dct.c:274:5: note: def_stmt: d16_37 = _15 - _17;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: already marked relevant/live.
common/dct.c:274:5: note: worklist: examine stmt: _48 = d07_35 + d34_39;
common/dct.c:274:5: note: vect_is_simple_use: operand d07_35
common/dct.c:274:5: note: def_stmt: d07_35 = _10 - _12;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: already marked relevant/live.
common/dct.c:274:5: note: vect_is_simple_use: operand d34_39
common/dct.c:274:5: note: def_stmt: d34_39 = _25 - _27;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: already marked relevant/live.
common/dct.c:274:5: note: worklist: examine stmt: tmp[4][i_36] = _80;
common/dct.c:274:5: note: vect_is_simple_use: operand _80
common/dct.c:274:5: note: def_stmt: _80 = (short int) _79;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: worklist: examine stmt: _80 = (short int) _79;
common/dct.c:274:5: note: vect_is_simple_use: operand _79
common/dct.c:274:5: note: def_stmt: _79 = _56 - _57;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: worklist: examine stmt: _79 = _56 - _57;
common/dct.c:274:5: note: vect_is_simple_use: operand _56
common/dct.c:274:5: note: def_stmt: _56 = (unsigned short) a0_29;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: vect_is_simple_use: operand _57
common/dct.c:274:5: note: def_stmt: _57 = (unsigned short) a1_30;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: worklist: examine stmt: _57 = (unsigned short) a1_30;
common/dct.c:274:5: note: vect_is_simple_use: operand a1_30
common/dct.c:274:5: note: def_stmt: a1_30 = s16_18 + s25_23;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: worklist: examine stmt: a1_30 = s16_18 + s25_23;
common/dct.c:274:5: note: vect_is_simple_use: operand s16_18
common/dct.c:274:5: note: def_stmt: s16_18 = _15 + _17;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: already marked relevant/live.
common/dct.c:274:5: note: vect_is_simple_use: operand s25_23
common/dct.c:274:5: note: def_stmt: s25_23 = _20 + _22;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: already marked relevant/live.
common/dct.c:274:5: note: worklist: examine stmt: _56 = (unsigned short) a0_29;
common/dct.c:274:5: note: vect_is_simple_use: operand a0_29
common/dct.c:274:5: note: def_stmt: a0_29 = s07_13 + s34_28;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: worklist: examine stmt: a0_29 = s07_13 + s34_28;
common/dct.c:274:5: note: vect_is_simple_use: operand s07_13
common/dct.c:274:5: note: def_stmt: s07_13 = _10 + _12;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: already marked relevant/live.
common/dct.c:274:5: note: vect_is_simple_use: operand s34_28
common/dct.c:274:5: note: def_stmt: s34_28 = _25 + _27;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: already marked relevant/live.
common/dct.c:274:5: note: worklist: examine stmt: tmp[3][i_36] = _77;
common/dct.c:274:5: note: vect_is_simple_use: operand _77
common/dct.c:274:5: note: def_stmt: _77 = (short int) _76;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: worklist: examine stmt: _77 = (short int) _76;
common/dct.c:274:5: note: vect_is_simple_use: operand _76
common/dct.c:274:5: note: def_stmt: _76 = _74 + _75;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: worklist: examine stmt: _76 = _74 + _75;
common/dct.c:274:5: note: vect_is_simple_use: operand _74
common/dct.c:274:5: note: def_stmt: _74 = (unsigned short) _73;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: vect_is_simple_use: operand _75
common/dct.c:274:5: note: def_stmt: _75 = (unsigned short) a5_47;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: worklist: examine stmt: _75 = (unsigned short) a5_47;
common/dct.c:274:5: note: vect_is_simple_use: operand a5_47
common/dct.c:274:5: note: def_stmt: a5_47 = _44 - _46;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: already marked relevant/live.
common/dct.c:274:5: note: worklist: examine stmt: _74 = (unsigned short) _73;
common/dct.c:274:5: note: vect_is_simple_use: operand _73
common/dct.c:274:5: note: def_stmt: _73 = a6_51 >> 2;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: worklist: examine stmt: _73 = a6_51 >> 2;
common/dct.c:274:5: note: vect_is_simple_use: operand a6_51
common/dct.c:274:5: note: def_stmt: a6_51 = _48 - _50;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: already marked relevant/live.
common/dct.c:274:5: note: worklist: examine stmt: tmp[2][i_36] = _71;
common/dct.c:274:5: note: vect_is_simple_use: operand _71
common/dct.c:274:5: note: def_stmt: _71 = (short int) _70;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: worklist: examine stmt: _71 = (short int) _70;
common/dct.c:274:5: note: vect_is_simple_use: operand _70
common/dct.c:274:5: note: def_stmt: _70 = _68 + _69;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: worklist: examine stmt: _70 = _68 + _69;
common/dct.c:274:5: note: vect_is_simple_use: operand _68
common/dct.c:274:5: note: def_stmt: _68 = (unsigned short) _67;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: vect_is_simple_use: operand _69
common/dct.c:274:5: note: def_stmt: _69 = (unsigned short) a2_31;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: worklist: examine stmt: _69 = (unsigned short) a2_31;
common/dct.c:274:5: note: vect_is_simple_use: operand a2_31
common/dct.c:274:5: note: def_stmt: a2_31 = s07_13 - s34_28;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: already marked relevant/live.
common/dct.c:274:5: note: worklist: examine stmt: _68 = (unsigned short) _67;
common/dct.c:274:5: note: vect_is_simple_use: operand _67
common/dct.c:274:5: note: def_stmt: _67 = a3_32 >> 1;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: worklist: examine stmt: _67 = a3_32 >> 1;
common/dct.c:274:5: note: vect_is_simple_use: operand a3_32
common/dct.c:274:5: note: def_stmt: a3_32 = s16_18 - s25_23;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: already marked relevant/live.
common/dct.c:274:5: note: worklist: examine stmt: tmp[1][i_36] = _65;
common/dct.c:274:5: note: vect_is_simple_use: operand _65
common/dct.c:274:5: note: def_stmt: _65 = (short int) _64;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: worklist: examine stmt: _65 = (short int) _64;
common/dct.c:274:5: note: vect_is_simple_use: operand _64
common/dct.c:274:5: note: def_stmt: _64 = _62 + _63;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: worklist: examine stmt: _64 = _62 + _63;
common/dct.c:274:5: note: vect_is_simple_use: operand _62
common/dct.c:274:5: note: def_stmt: _62 = (unsigned short) _61;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: vect_is_simple_use: operand _63
common/dct.c:274:5: note: def_stmt: _63 = (unsigned short) a4_43;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: worklist: examine stmt: _63 = (unsigned short) a4_43;
common/dct.c:274:5: note: vect_is_simple_use: operand a4_43
common/dct.c:274:5: note: def_stmt: a4_43 = _40 + _42;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: already marked relevant/live.
common/dct.c:274:5: note: worklist: examine stmt: _62 = (unsigned short) _61;
common/dct.c:274:5: note: vect_is_simple_use: operand _61
common/dct.c:274:5: note: def_stmt: _61 = a7_55 >> 2;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: worklist: examine stmt: _61 = a7_55 >> 2;
common/dct.c:274:5: note: vect_is_simple_use: operand a7_55
common/dct.c:274:5: note: def_stmt: a7_55 = _52 + _54;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: already marked relevant/live.
common/dct.c:274:5: note: worklist: examine stmt: tmp[0][i_36] = _59;
common/dct.c:274:5: note: vect_is_simple_use: operand _59
common/dct.c:274:5: note: def_stmt: _59 = (short int) _58;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: worklist: examine stmt: _59 = (short int) _58;
common/dct.c:274:5: note: vect_is_simple_use: operand _58
common/dct.c:274:5: note: def_stmt: _58 = _56 + _57;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: worklist: examine stmt: _58 = _56 + _57;
common/dct.c:274:5: note: vect_is_simple_use: operand _56
common/dct.c:274:5: note: def_stmt: _56 = (unsigned short) a0_29;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: already marked relevant/live.
common/dct.c:274:5: note: vect_is_simple_use: operand _57
common/dct.c:274:5: note: def_stmt: _57 = (unsigned short) a1_30;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: mark relevant 4, live 0.
common/dct.c:274:5: note: already marked relevant/live.
common/dct.c:274:5: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _9 = tmp[0][i_36];
  stmt_b: _11 = tmp[7][i_36];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _9 = tmp[0][i_36];
  stmt_b: _14 = tmp[1][i_36];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 1)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _9 = tmp[0][i_36];
  stmt_b: _16 = tmp[6][i_36];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 6)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _9 = tmp[0][i_36];
  stmt_b: _19 = tmp[2][i_36];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _9 = tmp[0][i_36];
  stmt_b: _21 = tmp[5][i_36];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 5)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _9 = tmp[0][i_36];
  stmt_b: _24 = tmp[3][i_36];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _9 = tmp[0][i_36];
  stmt_b: _26 = tmp[4][i_36];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 4)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _9 = tmp[0][i_36];
  stmt_b: tmp[0][i_36] = _59;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 0)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _9 = tmp[0][i_36];
  stmt_b: tmp[1][i_36] = _65;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 1)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _9 = tmp[0][i_36];
  stmt_b: tmp[2][i_36] = _71;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _9 = tmp[0][i_36];
  stmt_b: tmp[3][i_36] = _77;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _9 = tmp[0][i_36];
  stmt_b: tmp[4][i_36] = _80;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 4)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _9 = tmp[0][i_36];
  stmt_b: tmp[5][i_36] = _86;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 5)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _9 = tmp[0][i_36];
  stmt_b: tmp[6][i_36] = _92;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 6)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _9 = tmp[0][i_36];
  stmt_b: tmp[7][i_36] = _98;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _11 = tmp[7][i_36];
  stmt_b: _14 = tmp[1][i_36];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 7)
  (chrec_b = 1)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _11 = tmp[7][i_36];
  stmt_b: _16 = tmp[6][i_36];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 7)
  (chrec_b = 6)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _11 = tmp[7][i_36];
  stmt_b: _19 = tmp[2][i_36];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 7)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _11 = tmp[7][i_36];
  stmt_b: _21 = tmp[5][i_36];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 7)
  (chrec_b = 5)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _11 = tmp[7][i_36];
  stmt_b: _24 = tmp[3][i_36];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 7)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _11 = tmp[7][i_36];
  stmt_b: _26 = tmp[4][i_36];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 7)
  (chrec_b = 4)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _11 = tmp[7][i_36];
  stmt_b: tmp[0][i_36] = _59;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 7)
  (chrec_b = 0)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _11 = tmp[7][i_36];
  stmt_b: tmp[1][i_36] = _65;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 7)
  (chrec_b = 1)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _11 = tmp[7][i_36];
  stmt_b: tmp[2][i_36] = _71;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 7)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _11 = tmp[7][i_36];
  stmt_b: tmp[3][i_36] = _77;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 7)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _11 = tmp[7][i_36];
  stmt_b: tmp[4][i_36] = _80;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 7)
  (chrec_b = 4)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _11 = tmp[7][i_36];
  stmt_b: tmp[5][i_36] = _86;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 7)
  (chrec_b = 5)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _11 = tmp[7][i_36];
  stmt_b: tmp[6][i_36] = _92;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 7)
  (chrec_b = 6)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _11 = tmp[7][i_36];
  stmt_b: tmp[7][i_36] = _98;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 7)
  (chrec_b = 7)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _14 = tmp[1][i_36];
  stmt_b: _16 = tmp[6][i_36];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 6)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _14 = tmp[1][i_36];
  stmt_b: _19 = tmp[2][i_36];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _14 = tmp[1][i_36];
  stmt_b: _21 = tmp[5][i_36];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 5)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _14 = tmp[1][i_36];
  stmt_b: _24 = tmp[3][i_36];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _14 = tmp[1][i_36];
  stmt_b: _26 = tmp[4][i_36];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 4)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _14 = tmp[1][i_36];
  stmt_b: tmp[0][i_36] = _59;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 0)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _14 = tmp[1][i_36];
  stmt_b: tmp[1][i_36] = _65;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _14 = tmp[1][i_36];
  stmt_b: tmp[2][i_36] = _71;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _14 = tmp[1][i_36];
  stmt_b: tmp[3][i_36] = _77;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _14 = tmp[1][i_36];
  stmt_b: tmp[4][i_36] = _80;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 4)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _14 = tmp[1][i_36];
  stmt_b: tmp[5][i_36] = _86;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 5)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _14 = tmp[1][i_36];
  stmt_b: tmp[6][i_36] = _92;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 6)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _14 = tmp[1][i_36];
  stmt_b: tmp[7][i_36] = _98;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _16 = tmp[6][i_36];
  stmt_b: _19 = tmp[2][i_36];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 6)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _16 = tmp[6][i_36];
  stmt_b: _21 = tmp[5][i_36];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 6)
  (chrec_b = 5)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _16 = tmp[6][i_36];
  stmt_b: _24 = tmp[3][i_36];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 6)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _16 = tmp[6][i_36];
  stmt_b: _26 = tmp[4][i_36];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 6)
  (chrec_b = 4)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _16 = tmp[6][i_36];
  stmt_b: tmp[0][i_36] = _59;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 6)
  (chrec_b = 0)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _16 = tmp[6][i_36];
  stmt_b: tmp[1][i_36] = _65;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 6)
  (chrec_b = 1)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _16 = tmp[6][i_36];
  stmt_b: tmp[2][i_36] = _71;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 6)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _16 = tmp[6][i_36];
  stmt_b: tmp[3][i_36] = _77;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 6)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _16 = tmp[6][i_36];
  stmt_b: tmp[4][i_36] = _80;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 6)
  (chrec_b = 4)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _16 = tmp[6][i_36];
  stmt_b: tmp[5][i_36] = _86;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 6)
  (chrec_b = 5)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _16 = tmp[6][i_36];
  stmt_b: tmp[6][i_36] = _92;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 6)
  (chrec_b = 6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _16 = tmp[6][i_36];
  stmt_b: tmp[7][i_36] = _98;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 6)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _19 = tmp[2][i_36];
  stmt_b: _21 = tmp[5][i_36];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 5)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _19 = tmp[2][i_36];
  stmt_b: _24 = tmp[3][i_36];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _19 = tmp[2][i_36];
  stmt_b: _26 = tmp[4][i_36];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 4)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _19 = tmp[2][i_36];
  stmt_b: tmp[0][i_36] = _59;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 0)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _19 = tmp[2][i_36];
  stmt_b: tmp[1][i_36] = _65;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 1)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _19 = tmp[2][i_36];
  stmt_b: tmp[2][i_36] = _71;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _19 = tmp[2][i_36];
  stmt_b: tmp[3][i_36] = _77;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _19 = tmp[2][i_36];
  stmt_b: tmp[4][i_36] = _80;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 4)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _19 = tmp[2][i_36];
  stmt_b: tmp[5][i_36] = _86;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 5)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _19 = tmp[2][i_36];
  stmt_b: tmp[6][i_36] = _92;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 6)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _19 = tmp[2][i_36];
  stmt_b: tmp[7][i_36] = _98;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _21 = tmp[5][i_36];
  stmt_b: _24 = tmp[3][i_36];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 5)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _21 = tmp[5][i_36];
  stmt_b: _26 = tmp[4][i_36];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 5)
  (chrec_b = 4)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _21 = tmp[5][i_36];
  stmt_b: tmp[0][i_36] = _59;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 5)
  (chrec_b = 0)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _21 = tmp[5][i_36];
  stmt_b: tmp[1][i_36] = _65;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 5)
  (chrec_b = 1)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _21 = tmp[5][i_36];
  stmt_b: tmp[2][i_36] = _71;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 5)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _21 = tmp[5][i_36];
  stmt_b: tmp[3][i_36] = _77;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 5)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _21 = tmp[5][i_36];
  stmt_b: tmp[4][i_36] = _80;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 5)
  (chrec_b = 4)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _21 = tmp[5][i_36];
  stmt_b: tmp[5][i_36] = _86;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 5)
  (chrec_b = 5)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _21 = tmp[5][i_36];
  stmt_b: tmp[6][i_36] = _92;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 5)
  (chrec_b = 6)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _21 = tmp[5][i_36];
  stmt_b: tmp[7][i_36] = _98;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 5)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _24 = tmp[3][i_36];
  stmt_b: _26 = tmp[4][i_36];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 4)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _24 = tmp[3][i_36];
  stmt_b: tmp[0][i_36] = _59;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 0)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _24 = tmp[3][i_36];
  stmt_b: tmp[1][i_36] = _65;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 1)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _24 = tmp[3][i_36];
  stmt_b: tmp[2][i_36] = _71;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _24 = tmp[3][i_36];
  stmt_b: tmp[3][i_36] = _77;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _24 = tmp[3][i_36];
  stmt_b: tmp[4][i_36] = _80;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 4)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _24 = tmp[3][i_36];
  stmt_b: tmp[5][i_36] = _86;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 5)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _24 = tmp[3][i_36];
  stmt_b: tmp[6][i_36] = _92;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 6)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _24 = tmp[3][i_36];
  stmt_b: tmp[7][i_36] = _98;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _26 = tmp[4][i_36];
  stmt_b: tmp[0][i_36] = _59;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 4)
  (chrec_b = 0)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _26 = tmp[4][i_36];
  stmt_b: tmp[1][i_36] = _65;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 4)
  (chrec_b = 1)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _26 = tmp[4][i_36];
  stmt_b: tmp[2][i_36] = _71;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 4)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _26 = tmp[4][i_36];
  stmt_b: tmp[3][i_36] = _77;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 4)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _26 = tmp[4][i_36];
  stmt_b: tmp[4][i_36] = _80;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 4)
  (chrec_b = 4)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _26 = tmp[4][i_36];
  stmt_b: tmp[5][i_36] = _86;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 4)
  (chrec_b = 5)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _26 = tmp[4][i_36];
  stmt_b: tmp[6][i_36] = _92;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 4)
  (chrec_b = 6)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _26 = tmp[4][i_36];
  stmt_b: tmp[7][i_36] = _98;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 4)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[0][i_36] = _59;
  stmt_b: tmp[1][i_36] = _65;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 1)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[0][i_36] = _59;
  stmt_b: tmp[2][i_36] = _71;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[0][i_36] = _59;
  stmt_b: tmp[3][i_36] = _77;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[0][i_36] = _59;
  stmt_b: tmp[4][i_36] = _80;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 4)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[0][i_36] = _59;
  stmt_b: tmp[5][i_36] = _86;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 5)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[0][i_36] = _59;
  stmt_b: tmp[6][i_36] = _92;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 6)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[0][i_36] = _59;
  stmt_b: tmp[7][i_36] = _98;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[1][i_36] = _65;
  stmt_b: tmp[2][i_36] = _71;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[1][i_36] = _65;
  stmt_b: tmp[3][i_36] = _77;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[1][i_36] = _65;
  stmt_b: tmp[4][i_36] = _80;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 4)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[1][i_36] = _65;
  stmt_b: tmp[5][i_36] = _86;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 5)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[1][i_36] = _65;
  stmt_b: tmp[6][i_36] = _92;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 6)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[1][i_36] = _65;
  stmt_b: tmp[7][i_36] = _98;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[2][i_36] = _71;
  stmt_b: tmp[3][i_36] = _77;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[2][i_36] = _71;
  stmt_b: tmp[4][i_36] = _80;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 4)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[2][i_36] = _71;
  stmt_b: tmp[5][i_36] = _86;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 5)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[2][i_36] = _71;
  stmt_b: tmp[6][i_36] = _92;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 6)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[2][i_36] = _71;
  stmt_b: tmp[7][i_36] = _98;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[3][i_36] = _77;
  stmt_b: tmp[4][i_36] = _80;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 4)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[3][i_36] = _77;
  stmt_b: tmp[5][i_36] = _86;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 5)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[3][i_36] = _77;
  stmt_b: tmp[6][i_36] = _92;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 6)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[3][i_36] = _77;
  stmt_b: tmp[7][i_36] = _98;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[4][i_36] = _80;
  stmt_b: tmp[5][i_36] = _86;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 4)
  (chrec_b = 5)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[4][i_36] = _80;
  stmt_b: tmp[6][i_36] = _92;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 4)
  (chrec_b = 6)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[4][i_36] = _80;
  stmt_b: tmp[7][i_36] = _98;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 4)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[5][i_36] = _86;
  stmt_b: tmp[6][i_36] = _92;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 5)
  (chrec_b = 6)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[5][i_36] = _86;
  stmt_b: tmp[7][i_36] = _98;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 5)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[6][i_36] = _92;
  stmt_b: tmp[7][i_36] = _98;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 6)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _9 = tmp[0][i_36];
  stmt_b: _9 = tmp[0][i_36];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 0)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _11 = tmp[7][i_36];
  stmt_b: _11 = tmp[7][i_36];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 7)
  (chrec_b = 7)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _14 = tmp[1][i_36];
  stmt_b: _14 = tmp[1][i_36];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _16 = tmp[6][i_36];
  stmt_b: _16 = tmp[6][i_36];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 6)
  (chrec_b = 6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _19 = tmp[2][i_36];
  stmt_b: _19 = tmp[2][i_36];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _21 = tmp[5][i_36];
  stmt_b: _21 = tmp[5][i_36];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 5)
  (chrec_b = 5)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _24 = tmp[3][i_36];
  stmt_b: _24 = tmp[3][i_36];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _26 = tmp[4][i_36];
  stmt_b: _26 = tmp[4][i_36];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 4)
  (chrec_b = 4)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: tmp[0][i_36] = _59;
  stmt_b: tmp[0][i_36] = _59;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 0)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: tmp[1][i_36] = _65;
  stmt_b: tmp[1][i_36] = _65;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: tmp[2][i_36] = _71;
  stmt_b: tmp[2][i_36] = _71;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: tmp[3][i_36] = _77;
  stmt_b: tmp[3][i_36] = _77;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: tmp[4][i_36] = _80;
  stmt_b: tmp[4][i_36] = _80;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 4)
  (chrec_b = 4)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: tmp[5][i_36] = _86;
  stmt_b: tmp[5][i_36] = _86;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 5)
  (chrec_b = 5)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: tmp[6][i_36] = _92;
  stmt_b: tmp[6][i_36] = _92;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 6)
  (chrec_b = 6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: tmp[7][i_36] = _98;
  stmt_b: tmp[7][i_36] = _98;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 7)
  (chrec_b = 7)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/dct.c:274:5: note: dependence distance  = 0.
common/dct.c:274:5: note: dependence distance == 0 between tmp[0][i_36] and tmp[0][i_36]
common/dct.c:274:5: note: dependence distance  = 0.
common/dct.c:274:5: note: dependence distance == 0 between tmp[7][i_36] and tmp[7][i_36]
common/dct.c:274:5: note: dependence distance  = 0.
common/dct.c:274:5: note: dependence distance == 0 between tmp[1][i_36] and tmp[1][i_36]
common/dct.c:274:5: note: dependence distance  = 0.
common/dct.c:274:5: note: dependence distance == 0 between tmp[6][i_36] and tmp[6][i_36]
common/dct.c:274:5: note: dependence distance  = 0.
common/dct.c:274:5: note: dependence distance == 0 between tmp[2][i_36] and tmp[2][i_36]
common/dct.c:274:5: note: dependence distance  = 0.
common/dct.c:274:5: note: dependence distance == 0 between tmp[5][i_36] and tmp[5][i_36]
common/dct.c:274:5: note: dependence distance  = 0.
common/dct.c:274:5: note: dependence distance == 0 between tmp[3][i_36] and tmp[3][i_36]
common/dct.c:274:5: note: dependence distance  = 0.
common/dct.c:274:5: note: dependence distance == 0 between tmp[4][i_36] and tmp[4][i_36]
common/dct.c:274:5: note: === vect_determine_vectorization_factor ===
common/dct.c:274:5: note: ==> examining phi: i_36 = PHI <0(8), i_100(10)>

common/dct.c:274:5: note: ==> examining phi: .MEM_229 = PHI <.MEM_215(8), .MEM_99(10)>

common/dct.c:274:5: note: ==> examining phi: ivtmp_537 = PHI <8(8), ivtmp_539(10)>

common/dct.c:274:5: note: ==> examining statement: # DEBUG i => i_36

common/dct.c:274:5: note: skip.
common/dct.c:274:5: note: ==> examining statement: _9 = tmp[0][i_36];

common/dct.c:274:5: note: get vectype for scalar type:  short int
common/dct.c:274:5: note: vectype: vector(8) short int
common/dct.c:274:5: note: nunits = 8
common/dct.c:274:5: note: ==> examining statement: _10 = (int) _9;

common/dct.c:274:5: note: get vectype for scalar type:  int
common/dct.c:274:5: note: vectype: vector(4) int
common/dct.c:274:5: note: get vectype for scalar type:  short int
common/dct.c:274:5: note: vectype: vector(8) short int
common/dct.c:274:5: note: nunits = 8
common/dct.c:274:5: note: ==> examining statement: _11 = tmp[7][i_36];

common/dct.c:274:5: note: get vectype for scalar type:  short int
common/dct.c:274:5: note: vectype: vector(8) short int
common/dct.c:274:5: note: nunits = 8
common/dct.c:274:5: note: ==> examining statement: _12 = (int) _11;

common/dct.c:274:5: note: get vectype for scalar type:  int
common/dct.c:274:5: note: vectype: vector(4) int
common/dct.c:274:5: note: get vectype for scalar type:  short int
common/dct.c:274:5: note: vectype: vector(8) short int
common/dct.c:274:5: note: nunits = 8
common/dct.c:274:5: note: ==> examining statement: s07_13 = _10 + _12;

common/dct.c:274:5: note: get vectype for scalar type:  const int
common/dct.c:274:5: note: vectype: const vector(4) int
common/dct.c:274:5: note: get vectype for scalar type:  const int
common/dct.c:274:5: note: vectype: const vector(4) int
common/dct.c:274:5: note: nunits = 4
common/dct.c:274:5: note: ==> examining statement: # DEBUG s07 => s07_13

common/dct.c:274:5: note: skip.
common/dct.c:274:5: note: ==> examining statement: _14 = tmp[1][i_36];

common/dct.c:274:5: note: get vectype for scalar type:  short int
common/dct.c:274:5: note: vectype: vector(8) short int
common/dct.c:274:5: note: nunits = 8
common/dct.c:274:5: note: ==> examining statement: _15 = (int) _14;

common/dct.c:274:5: note: get vectype for scalar type:  int
common/dct.c:274:5: note: vectype: vector(4) int
common/dct.c:274:5: note: get vectype for scalar type:  short int
common/dct.c:274:5: note: vectype: vector(8) short int
common/dct.c:274:5: note: nunits = 8
common/dct.c:274:5: note: ==> examining statement: _16 = tmp[6][i_36];

common/dct.c:274:5: note: get vectype for scalar type:  short int
common/dct.c:274:5: note: vectype: vector(8) short int
common/dct.c:274:5: note: nunits = 8
common/dct.c:274:5: note: ==> examining statement: _17 = (int) _16;

common/dct.c:274:5: note: get vectype for scalar type:  int
common/dct.c:274:5: note: vectype: vector(4) int
common/dct.c:274:5: note: get vectype for scalar type:  short int
common/dct.c:274:5: note: vectype: vector(8) short int
common/dct.c:274:5: note: nunits = 8
common/dct.c:274:5: note: ==> examining statement: s16_18 = _15 + _17;

common/dct.c:274:5: note: get vectype for scalar type:  const int
common/dct.c:274:5: note: vectype: const vector(4) int
common/dct.c:274:5: note: get vectype for scalar type:  const int
common/dct.c:274:5: note: vectype: const vector(4) int
common/dct.c:274:5: note: nunits = 4
common/dct.c:274:5: note: ==> examining statement: # DEBUG s16 => s16_18

common/dct.c:274:5: note: skip.
common/dct.c:274:5: note: ==> examining statement: _19 = tmp[2][i_36];

common/dct.c:274:5: note: get vectype for scalar type:  short int
common/dct.c:274:5: note: vectype: vector(8) short int
common/dct.c:274:5: note: nunits = 8
common/dct.c:274:5: note: ==> examining statement: _20 = (int) _19;

common/dct.c:274:5: note: get vectype for scalar type:  int
common/dct.c:274:5: note: vectype: vector(4) int
common/dct.c:274:5: note: get vectype for scalar type:  short int
common/dct.c:274:5: note: vectype: vector(8) short int
common/dct.c:274:5: note: nunits = 8
common/dct.c:274:5: note: ==> examining statement: _21 = tmp[5][i_36];

common/dct.c:274:5: note: get vectype for scalar type:  short int
common/dct.c:274:5: note: vectype: vector(8) short int
common/dct.c:274:5: note: nunits = 8
common/dct.c:274:5: note: ==> examining statement: _22 = (int) _21;

common/dct.c:274:5: note: get vectype for scalar type:  int
common/dct.c:274:5: note: vectype: vector(4) int
common/dct.c:274:5: note: get vectype for scalar type:  short int
common/dct.c:274:5: note: vectype: vector(8) short int
common/dct.c:274:5: note: nunits = 8
common/dct.c:274:5: note: ==> examining statement: s25_23 = _20 + _22;

common/dct.c:274:5: note: get vectype for scalar type:  const int
common/dct.c:274:5: note: vectype: const vector(4) int
common/dct.c:274:5: note: get vectype for scalar type:  const int
common/dct.c:274:5: note: vectype: const vector(4) int
common/dct.c:274:5: note: nunits = 4
common/dct.c:274:5: note: ==> examining statement: # DEBUG s25 => s25_23

common/dct.c:274:5: note: skip.
common/dct.c:274:5: note: ==> examining statement: _24 = tmp[3][i_36];

common/dct.c:274:5: note: get vectype for scalar type:  short int
common/dct.c:274:5: note: vectype: vector(8) short int
common/dct.c:274:5: note: nunits = 8
common/dct.c:274:5: note: ==> examining statement: _25 = (int) _24;

common/dct.c:274:5: note: get vectype for scalar type:  int
common/dct.c:274:5: note: vectype: vector(4) int
common/dct.c:274:5: note: get vectype for scalar type:  short int
common/dct.c:274:5: note: vectype: vector(8) short int
common/dct.c:274:5: note: nunits = 8
common/dct.c:274:5: note: ==> examining statement: _26 = tmp[4][i_36];

common/dct.c:274:5: note: get vectype for scalar type:  short int
common/dct.c:274:5: note: vectype: vector(8) short int
common/dct.c:274:5: note: nunits = 8
common/dct.c:274:5: note: ==> examining statement: _27 = (int) _26;

common/dct.c:274:5: note: get vectype for scalar type:  int
common/dct.c:274:5: note: vectype: vector(4) int
common/dct.c:274:5: note: get vectype for scalar type:  short int
common/dct.c:274:5: note: vectype: vector(8) short int
common/dct.c:274:5: note: nunits = 8
common/dct.c:274:5: note: ==> examining statement: s34_28 = _25 + _27;

common/dct.c:274:5: note: get vectype for scalar type:  const int
common/dct.c:274:5: note: vectype: const vector(4) int
common/dct.c:274:5: note: get vectype for scalar type:  const int
common/dct.c:274:5: note: vectype: const vector(4) int
common/dct.c:274:5: note: nunits = 4
common/dct.c:274:5: note: ==> examining statement: # DEBUG s34 => s34_28

common/dct.c:274:5: note: skip.
common/dct.c:274:5: note: ==> examining statement: a0_29 = s07_13 + s34_28;

common/dct.c:274:5: note: get vectype for scalar type:  const int
common/dct.c:274:5: note: vectype: const vector(4) int
common/dct.c:274:5: note: get vectype for scalar type:  const int
common/dct.c:274:5: note: vectype: const vector(4) int
common/dct.c:274:5: note: nunits = 4
common/dct.c:274:5: note: ==> examining statement: # DEBUG a0 => a0_29

common/dct.c:274:5: note: skip.
common/dct.c:274:5: note: ==> examining statement: a1_30 = s16_18 + s25_23;

common/dct.c:274:5: note: get vectype for scalar type:  const int
common/dct.c:274:5: note: vectype: const vector(4) int
common/dct.c:274:5: note: get vectype for scalar type:  const int
common/dct.c:274:5: note: vectype: const vector(4) int
common/dct.c:274:5: note: nunits = 4
common/dct.c:274:5: note: ==> examining statement: # DEBUG a1 => a1_30

common/dct.c:274:5: note: skip.
common/dct.c:274:5: note: ==> examining statement: a2_31 = s07_13 - s34_28;

common/dct.c:274:5: note: get vectype for scalar type:  const int
common/dct.c:274:5: note: vectype: const vector(4) int
common/dct.c:274:5: note: get vectype for scalar type:  const int
common/dct.c:274:5: note: vectype: const vector(4) int
common/dct.c:274:5: note: nunits = 4
common/dct.c:274:5: note: ==> examining statement: # DEBUG a2 => a2_31

common/dct.c:274:5: note: skip.
common/dct.c:274:5: note: ==> examining statement: a3_32 = s16_18 - s25_23;

common/dct.c:274:5: note: get vectype for scalar type:  const int
common/dct.c:274:5: note: vectype: const vector(4) int
common/dct.c:274:5: note: get vectype for scalar type:  const int
common/dct.c:274:5: note: vectype: const vector(4) int
common/dct.c:274:5: note: nunits = 4
common/dct.c:274:5: note: ==> examining statement: # DEBUG a3 => a3_32

common/dct.c:274:5: note: skip.
common/dct.c:274:5: note: ==> examining statement: d07_35 = _10 - _12;

common/dct.c:274:5: note: get vectype for scalar type:  const int
common/dct.c:274:5: note: vectype: const vector(4) int
common/dct.c:274:5: note: get vectype for scalar type:  const int
common/dct.c:274:5: note: vectype: const vector(4) int
common/dct.c:274:5: note: nunits = 4
common/dct.c:274:5: note: ==> examining statement: # DEBUG d07 => d07_35

common/dct.c:274:5: note: skip.
common/dct.c:274:5: note: ==> examining statement: d16_37 = _15 - _17;

common/dct.c:274:5: note: get vectype for scalar type:  const int
common/dct.c:274:5: note: vectype: const vector(4) int
common/dct.c:274:5: note: get vectype for scalar type:  const int
common/dct.c:274:5: note: vectype: const vector(4) int
common/dct.c:274:5: note: nunits = 4
common/dct.c:274:5: note: ==> examining statement: # DEBUG d16 => d16_37

common/dct.c:274:5: note: skip.
common/dct.c:274:5: note: ==> examining statement: d25_38 = _20 - _22;

common/dct.c:274:5: note: get vectype for scalar type:  const int
common/dct.c:274:5: note: vectype: const vector(4) int
common/dct.c:274:5: note: get vectype for scalar type:  const int
common/dct.c:274:5: note: vectype: const vector(4) int
common/dct.c:274:5: note: nunits = 4
common/dct.c:274:5: note: ==> examining statement: # DEBUG d25 => d25_38

common/dct.c:274:5: note: skip.
common/dct.c:274:5: note: ==> examining statement: d34_39 = _25 - _27;

common/dct.c:274:5: note: get vectype for scalar type:  const int
common/dct.c:274:5: note: vectype: const vector(4) int
common/dct.c:274:5: note: get vectype for scalar type:  const int
common/dct.c:274:5: note: vectype: const vector(4) int
common/dct.c:274:5: note: nunits = 4
common/dct.c:274:5: note: ==> examining statement: # DEBUG d34 => d34_39

common/dct.c:274:5: note: skip.
common/dct.c:274:5: note: ==> examining statement: _40 = d16_37 + d25_38;

common/dct.c:274:5: note: get vectype for scalar type:  int
common/dct.c:274:5: note: vectype: vector(4) int
common/dct.c:274:5: note: get vectype for scalar type:  int
common/dct.c:274:5: note: vectype: vector(4) int
common/dct.c:274:5: note: nunits = 4
common/dct.c:274:5: note: ==> examining statement: _41 = d07_35 >> 1;

common/dct.c:274:5: note: get vectype for scalar type:  int
common/dct.c:274:5: note: vectype: vector(4) int
common/dct.c:274:5: note: get vectype for scalar type:  int
common/dct.c:274:5: note: vectype: vector(4) int
common/dct.c:274:5: note: nunits = 4
common/dct.c:274:5: note: ==> examining statement: _42 = d07_35 + _41;

common/dct.c:274:5: note: get vectype for scalar type:  int
common/dct.c:274:5: note: vectype: vector(4) int
common/dct.c:274:5: note: get vectype for scalar type:  int
common/dct.c:274:5: note: vectype: vector(4) int
common/dct.c:274:5: note: nunits = 4
common/dct.c:274:5: note: ==> examining statement: a4_43 = _40 + _42;

common/dct.c:274:5: note: get vectype for scalar type:  const int
common/dct.c:274:5: note: vectype: const vector(4) int
common/dct.c:274:5: note: get vectype for scalar type:  const int
common/dct.c:274:5: note: vectype: const vector(4) int
common/dct.c:274:5: note: nunits = 4
common/dct.c:274:5: note: ==> examining statement: # DEBUG a4 => a4_43

common/dct.c:274:5: note: skip.
common/dct.c:274:5: note: ==> examining statement: _44 = d07_35 - d34_39;

common/dct.c:274:5: note: get vectype for scalar type:  int
common/dct.c:274:5: note: vectype: vector(4) int
common/dct.c:274:5: note: get vectype for scalar type:  int
common/dct.c:274:5: note: vectype: vector(4) int
common/dct.c:274:5: note: nunits = 4
common/dct.c:274:5: note: ==> examining statement: _45 = d25_38 >> 1;

common/dct.c:274:5: note: get vectype for scalar type:  int
common/dct.c:274:5: note: vectype: vector(4) int
common/dct.c:274:5: note: get vectype for scalar type:  int
common/dct.c:274:5: note: vectype: vector(4) int
common/dct.c:274:5: note: nunits = 4
common/dct.c:274:5: note: ==> examining statement: _46 = d25_38 + _45;

common/dct.c:274:5: note: get vectype for scalar type:  int
common/dct.c:274:5: note: vectype: vector(4) int
common/dct.c:274:5: note: get vectype for scalar type:  int
common/dct.c:274:5: note: vectype: vector(4) int
common/dct.c:274:5: note: nunits = 4
common/dct.c:274:5: note: ==> examining statement: a5_47 = _44 - _46;

common/dct.c:274:5: note: get vectype for scalar type:  const int
common/dct.c:274:5: note: vectype: const vector(4) int
common/dct.c:274:5: note: get vectype for scalar type:  const int
common/dct.c:274:5: note: vectype: const vector(4) int
common/dct.c:274:5: note: nunits = 4
common/dct.c:274:5: note: ==> examining statement: # DEBUG a5 => a5_47

common/dct.c:274:5: note: skip.
common/dct.c:274:5: note: ==> examining statement: _48 = d07_35 + d34_39;

common/dct.c:274:5: note: get vectype for scalar type:  int
common/dct.c:274:5: note: vectype: vector(4) int
common/dct.c:274:5: note: get vectype for scalar type:  int
common/dct.c:274:5: note: vectype: vector(4) int
common/dct.c:274:5: note: nunits = 4
common/dct.c:274:5: note: ==> examining statement: _49 = d16_37 >> 1;

common/dct.c:274:5: note: get vectype for scalar type:  int
common/dct.c:274:5: note: vectype: vector(4) int
common/dct.c:274:5: note: get vectype for scalar type:  int
common/dct.c:274:5: note: vectype: vector(4) int
common/dct.c:274:5: note: nunits = 4
common/dct.c:274:5: note: ==> examining statement: _50 = d16_37 + _49;

common/dct.c:274:5: note: get vectype for scalar type:  int
common/dct.c:274:5: note: vectype: vector(4) int
common/dct.c:274:5: note: get vectype for scalar type:  int
common/dct.c:274:5: note: vectype: vector(4) int
common/dct.c:274:5: note: nunits = 4
common/dct.c:274:5: note: ==> examining statement: a6_51 = _48 - _50;

common/dct.c:274:5: note: get vectype for scalar type:  const int
common/dct.c:274:5: note: vectype: const vector(4) int
common/dct.c:274:5: note: get vectype for scalar type:  const int
common/dct.c:274:5: note: vectype: const vector(4) int
common/dct.c:274:5: note: nunits = 4
common/dct.c:274:5: note: ==> examining statement: # DEBUG a6 => a6_51

common/dct.c:274:5: note: skip.
common/dct.c:274:5: note: ==> examining statement: _52 = d16_37 - d25_38;

common/dct.c:274:5: note: get vectype for scalar type:  int
common/dct.c:274:5: note: vectype: vector(4) int
common/dct.c:274:5: note: get vectype for scalar type:  int
common/dct.c:274:5: note: vectype: vector(4) int
common/dct.c:274:5: note: nunits = 4
common/dct.c:274:5: note: ==> examining statement: _53 = d34_39 >> 1;

common/dct.c:274:5: note: get vectype for scalar type:  int
common/dct.c:274:5: note: vectype: vector(4) int
common/dct.c:274:5: note: get vectype for scalar type:  int
common/dct.c:274:5: note: vectype: vector(4) int
common/dct.c:274:5: note: nunits = 4
common/dct.c:274:5: note: ==> examining statement: _54 = d34_39 + _53;

common/dct.c:274:5: note: get vectype for scalar type:  int
common/dct.c:274:5: note: vectype: vector(4) int
common/dct.c:274:5: note: get vectype for scalar type:  int
common/dct.c:274:5: note: vectype: vector(4) int
common/dct.c:274:5: note: nunits = 4
common/dct.c:274:5: note: ==> examining statement: a7_55 = _52 + _54;

common/dct.c:274:5: note: get vectype for scalar type:  const int
common/dct.c:274:5: note: vectype: const vector(4) int
common/dct.c:274:5: note: get vectype for scalar type:  const int
common/dct.c:274:5: note: vectype: const vector(4) int
common/dct.c:274:5: note: nunits = 4
common/dct.c:274:5: note: ==> examining statement: # DEBUG a7 => a7_55

common/dct.c:274:5: note: skip.
common/dct.c:274:5: note: ==> examining statement: _56 = (unsigned short) a0_29;

common/dct.c:274:5: note: get vectype for scalar type:  unsigned short
common/dct.c:274:5: note: vectype: vector(8) unsigned short
common/dct.c:274:5: note: get vectype for scalar type:  unsigned short
common/dct.c:274:5: note: vectype: vector(8) unsigned short
common/dct.c:274:5: note: nunits = 8
common/dct.c:274:5: note: ==> examining statement: _57 = (unsigned short) a1_30;

common/dct.c:274:5: note: get vectype for scalar type:  unsigned short
common/dct.c:274:5: note: vectype: vector(8) unsigned short
common/dct.c:274:5: note: get vectype for scalar type:  unsigned short
common/dct.c:274:5: note: vectype: vector(8) unsigned short
common/dct.c:274:5: note: nunits = 8
common/dct.c:274:5: note: ==> examining statement: _58 = _56 + _57;

common/dct.c:274:5: note: get vectype for scalar type:  unsigned short
common/dct.c:274:5: note: vectype: vector(8) unsigned short
common/dct.c:274:5: note: get vectype for scalar type:  unsigned short
common/dct.c:274:5: note: vectype: vector(8) unsigned short
common/dct.c:274:5: note: nunits = 8
common/dct.c:274:5: note: ==> examining statement: _59 = (short int) _58;

common/dct.c:274:5: note: get vectype for scalar type:  short int
common/dct.c:274:5: note: vectype: vector(8) short int
common/dct.c:274:5: note: get vectype for scalar type:  short int
common/dct.c:274:5: note: vectype: vector(8) short int
common/dct.c:274:5: note: nunits = 8
common/dct.c:274:5: note: ==> examining statement: tmp[0][i_36] = _59;

common/dct.c:274:5: note: get vectype for scalar type:  int16_t
common/dct.c:274:5: note: vectype: vector(8) short int
common/dct.c:274:5: note: nunits = 8
common/dct.c:274:5: note: ==> examining statement: _61 = a7_55 >> 2;

common/dct.c:274:5: note: get vectype for scalar type:  int
common/dct.c:274:5: note: vectype: vector(4) int
common/dct.c:274:5: note: get vectype for scalar type:  int
common/dct.c:274:5: note: vectype: vector(4) int
common/dct.c:274:5: note: nunits = 4
common/dct.c:274:5: note: ==> examining statement: _62 = (unsigned short) _61;

common/dct.c:274:5: note: get vectype for scalar type:  unsigned short
common/dct.c:274:5: note: vectype: vector(8) unsigned short
common/dct.c:274:5: note: get vectype for scalar type:  unsigned short
common/dct.c:274:5: note: vectype: vector(8) unsigned short
common/dct.c:274:5: note: nunits = 8
common/dct.c:274:5: note: ==> examining statement: _63 = (unsigned short) a4_43;

common/dct.c:274:5: note: get vectype for scalar type:  unsigned short
common/dct.c:274:5: note: vectype: vector(8) unsigned short
common/dct.c:274:5: note: get vectype for scalar type:  unsigned short
common/dct.c:274:5: note: vectype: vector(8) unsigned short
common/dct.c:274:5: note: nunits = 8
common/dct.c:274:5: note: ==> examining statement: _64 = _62 + _63;

common/dct.c:274:5: note: get vectype for scalar type:  unsigned short
common/dct.c:274:5: note: vectype: vector(8) unsigned short
common/dct.c:274:5: note: get vectype for scalar type:  unsigned short
common/dct.c:274:5: note: vectype: vector(8) unsigned short
common/dct.c:274:5: note: nunits = 8
common/dct.c:274:5: note: ==> examining statement: _65 = (short int) _64;

common/dct.c:274:5: note: get vectype for scalar type:  short int
common/dct.c:274:5: note: vectype: vector(8) short int
common/dct.c:274:5: note: get vectype for scalar type:  short int
common/dct.c:274:5: note: vectype: vector(8) short int
common/dct.c:274:5: note: nunits = 8
common/dct.c:274:5: note: ==> examining statement: tmp[1][i_36] = _65;

common/dct.c:274:5: note: get vectype for scalar type:  int16_t
common/dct.c:274:5: note: vectype: vector(8) short int
common/dct.c:274:5: note: nunits = 8
common/dct.c:274:5: note: ==> examining statement: _67 = a3_32 >> 1;

common/dct.c:274:5: note: get vectype for scalar type:  int
common/dct.c:274:5: note: vectype: vector(4) int
common/dct.c:274:5: note: get vectype for scalar type:  int
common/dct.c:274:5: note: vectype: vector(4) int
common/dct.c:274:5: note: nunits = 4
common/dct.c:274:5: note: ==> examining statement: _68 = (unsigned short) _67;

common/dct.c:274:5: note: get vectype for scalar type:  unsigned short
common/dct.c:274:5: note: vectype: vector(8) unsigned short
common/dct.c:274:5: note: get vectype for scalar type:  unsigned short
common/dct.c:274:5: note: vectype: vector(8) unsigned short
common/dct.c:274:5: note: nunits = 8
common/dct.c:274:5: note: ==> examining statement: _69 = (unsigned short) a2_31;

common/dct.c:274:5: note: get vectype for scalar type:  unsigned short
common/dct.c:274:5: note: vectype: vector(8) unsigned short
common/dct.c:274:5: note: get vectype for scalar type:  unsigned short
common/dct.c:274:5: note: vectype: vector(8) unsigned short
common/dct.c:274:5: note: nunits = 8
common/dct.c:274:5: note: ==> examining statement: _70 = _68 + _69;

common/dct.c:274:5: note: get vectype for scalar type:  unsigned short
common/dct.c:274:5: note: vectype: vector(8) unsigned short
common/dct.c:274:5: note: get vectype for scalar type:  unsigned short
common/dct.c:274:5: note: vectype: vector(8) unsigned short
common/dct.c:274:5: note: nunits = 8
common/dct.c:274:5: note: ==> examining statement: _71 = (short int) _70;

common/dct.c:274:5: note: get vectype for scalar type:  short int
common/dct.c:274:5: note: vectype: vector(8) short int
common/dct.c:274:5: note: get vectype for scalar type:  short int
common/dct.c:274:5: note: vectype: vector(8) short int
common/dct.c:274:5: note: nunits = 8
common/dct.c:274:5: note: ==> examining statement: tmp[2][i_36] = _71;

common/dct.c:274:5: note: get vectype for scalar type:  int16_t
common/dct.c:274:5: note: vectype: vector(8) short int
common/dct.c:274:5: note: nunits = 8
common/dct.c:274:5: note: ==> examining statement: _73 = a6_51 >> 2;

common/dct.c:274:5: note: get vectype for scalar type:  int
common/dct.c:274:5: note: vectype: vector(4) int
common/dct.c:274:5: note: get vectype for scalar type:  int
common/dct.c:274:5: note: vectype: vector(4) int
common/dct.c:274:5: note: nunits = 4
common/dct.c:274:5: note: ==> examining statement: _74 = (unsigned short) _73;

common/dct.c:274:5: note: get vectype for scalar type:  unsigned short
common/dct.c:274:5: note: vectype: vector(8) unsigned short
common/dct.c:274:5: note: get vectype for scalar type:  unsigned short
common/dct.c:274:5: note: vectype: vector(8) unsigned short
common/dct.c:274:5: note: nunits = 8
common/dct.c:274:5: note: ==> examining statement: _75 = (unsigned short) a5_47;

common/dct.c:274:5: note: get vectype for scalar type:  unsigned short
common/dct.c:274:5: note: vectype: vector(8) unsigned short
common/dct.c:274:5: note: get vectype for scalar type:  unsigned short
common/dct.c:274:5: note: vectype: vector(8) unsigned short
common/dct.c:274:5: note: nunits = 8
common/dct.c:274:5: note: ==> examining statement: _76 = _74 + _75;

common/dct.c:274:5: note: get vectype for scalar type:  unsigned short
common/dct.c:274:5: note: vectype: vector(8) unsigned short
common/dct.c:274:5: note: get vectype for scalar type:  unsigned short
common/dct.c:274:5: note: vectype: vector(8) unsigned short
common/dct.c:274:5: note: nunits = 8
common/dct.c:274:5: note: ==> examining statement: _77 = (short int) _76;

common/dct.c:274:5: note: get vectype for scalar type:  short int
common/dct.c:274:5: note: vectype: vector(8) short int
common/dct.c:274:5: note: get vectype for scalar type:  short int
common/dct.c:274:5: note: vectype: vector(8) short int
common/dct.c:274:5: note: nunits = 8
common/dct.c:274:5: note: ==> examining statement: tmp[3][i_36] = _77;

common/dct.c:274:5: note: get vectype for scalar type:  int16_t
common/dct.c:274:5: note: vectype: vector(8) short int
common/dct.c:274:5: note: nunits = 8
common/dct.c:274:5: note: ==> examining statement: _79 = _56 - _57;

common/dct.c:274:5: note: get vectype for scalar type:  unsigned short
common/dct.c:274:5: note: vectype: vector(8) unsigned short
common/dct.c:274:5: note: get vectype for scalar type:  unsigned short
common/dct.c:274:5: note: vectype: vector(8) unsigned short
common/dct.c:274:5: note: nunits = 8
common/dct.c:274:5: note: ==> examining statement: _80 = (short int) _79;

common/dct.c:274:5: note: get vectype for scalar type:  short int
common/dct.c:274:5: note: vectype: vector(8) short int
common/dct.c:274:5: note: get vectype for scalar type:  short int
common/dct.c:274:5: note: vectype: vector(8) short int
common/dct.c:274:5: note: nunits = 8
common/dct.c:274:5: note: ==> examining statement: tmp[4][i_36] = _80;

common/dct.c:274:5: note: get vectype for scalar type:  int16_t
common/dct.c:274:5: note: vectype: vector(8) short int
common/dct.c:274:5: note: nunits = 8
common/dct.c:274:5: note: ==> examining statement: _82 = (unsigned short) a6_51;

common/dct.c:274:5: note: get vectype for scalar type:  unsigned short
common/dct.c:274:5: note: vectype: vector(8) unsigned short
common/dct.c:274:5: note: get vectype for scalar type:  unsigned short
common/dct.c:274:5: note: vectype: vector(8) unsigned short
common/dct.c:274:5: note: nunits = 8
common/dct.c:274:5: note: ==> examining statement: _83 = a5_47 >> 2;

common/dct.c:274:5: note: get vectype for scalar type:  int
common/dct.c:274:5: note: vectype: vector(4) int
common/dct.c:274:5: note: get vectype for scalar type:  int
common/dct.c:274:5: note: vectype: vector(4) int
common/dct.c:274:5: note: nunits = 4
common/dct.c:274:5: note: ==> examining statement: _84 = (unsigned short) _83;

common/dct.c:274:5: note: get vectype for scalar type:  unsigned short
common/dct.c:274:5: note: vectype: vector(8) unsigned short
common/dct.c:274:5: note: get vectype for scalar type:  unsigned short
common/dct.c:274:5: note: vectype: vector(8) unsigned short
common/dct.c:274:5: note: nunits = 8
common/dct.c:274:5: note: ==> examining statement: _85 = _82 - _84;

common/dct.c:274:5: note: get vectype for scalar type:  unsigned short
common/dct.c:274:5: note: vectype: vector(8) unsigned short
common/dct.c:274:5: note: get vectype for scalar type:  unsigned short
common/dct.c:274:5: note: vectype: vector(8) unsigned short
common/dct.c:274:5: note: nunits = 8
common/dct.c:274:5: note: ==> examining statement: _86 = (short int) _85;

common/dct.c:274:5: note: get vectype for scalar type:  short int
common/dct.c:274:5: note: vectype: vector(8) short int
common/dct.c:274:5: note: get vectype for scalar type:  short int
common/dct.c:274:5: note: vectype: vector(8) short int
common/dct.c:274:5: note: nunits = 8
common/dct.c:274:5: note: ==> examining statement: tmp[5][i_36] = _86;

common/dct.c:274:5: note: get vectype for scalar type:  int16_t
common/dct.c:274:5: note: vectype: vector(8) short int
common/dct.c:274:5: note: nunits = 8
common/dct.c:274:5: note: ==> examining statement: _88 = a2_31 >> 1;

common/dct.c:274:5: note: get vectype for scalar type:  int
common/dct.c:274:5: note: vectype: vector(4) int
common/dct.c:274:5: note: get vectype for scalar type:  int
common/dct.c:274:5: note: vectype: vector(4) int
common/dct.c:274:5: note: nunits = 4
common/dct.c:274:5: note: ==> examining statement: _89 = (unsigned short) _88;

common/dct.c:274:5: note: get vectype for scalar type:  unsigned short
common/dct.c:274:5: note: vectype: vector(8) unsigned short
common/dct.c:274:5: note: get vectype for scalar type:  unsigned short
common/dct.c:274:5: note: vectype: vector(8) unsigned short
common/dct.c:274:5: note: nunits = 8
common/dct.c:274:5: note: ==> examining statement: _90 = (unsigned short) a3_32;

common/dct.c:274:5: note: get vectype for scalar type:  unsigned short
common/dct.c:274:5: note: vectype: vector(8) unsigned short
common/dct.c:274:5: note: get vectype for scalar type:  unsigned short
common/dct.c:274:5: note: vectype: vector(8) unsigned short
common/dct.c:274:5: note: nunits = 8
common/dct.c:274:5: note: ==> examining statement: _91 = _89 - _90;

common/dct.c:274:5: note: get vectype for scalar type:  unsigned short
common/dct.c:274:5: note: vectype: vector(8) unsigned short
common/dct.c:274:5: note: get vectype for scalar type:  unsigned short
common/dct.c:274:5: note: vectype: vector(8) unsigned short
common/dct.c:274:5: note: nunits = 8
common/dct.c:274:5: note: ==> examining statement: _92 = (short int) _91;

common/dct.c:274:5: note: get vectype for scalar type:  short int
common/dct.c:274:5: note: vectype: vector(8) short int
common/dct.c:274:5: note: get vectype for scalar type:  short int
common/dct.c:274:5: note: vectype: vector(8) short int
common/dct.c:274:5: note: nunits = 8
common/dct.c:274:5: note: ==> examining statement: tmp[6][i_36] = _92;

common/dct.c:274:5: note: get vectype for scalar type:  int16_t
common/dct.c:274:5: note: vectype: vector(8) short int
common/dct.c:274:5: note: nunits = 8
common/dct.c:274:5: note: ==> examining statement: _94 = a4_43 >> 2;

common/dct.c:274:5: note: get vectype for scalar type:  int
common/dct.c:274:5: note: vectype: vector(4) int
common/dct.c:274:5: note: get vectype for scalar type:  int
common/dct.c:274:5: note: vectype: vector(4) int
common/dct.c:274:5: note: nunits = 4
common/dct.c:274:5: note: ==> examining statement: _95 = (unsigned short) _94;

common/dct.c:274:5: note: get vectype for scalar type:  unsigned short
common/dct.c:274:5: note: vectype: vector(8) unsigned short
common/dct.c:274:5: note: get vectype for scalar type:  unsigned short
common/dct.c:274:5: note: vectype: vector(8) unsigned short
common/dct.c:274:5: note: nunits = 8
common/dct.c:274:5: note: ==> examining statement: _96 = (unsigned short) a7_55;

common/dct.c:274:5: note: get vectype for scalar type:  unsigned short
common/dct.c:274:5: note: vectype: vector(8) unsigned short
common/dct.c:274:5: note: get vectype for scalar type:  unsigned short
common/dct.c:274:5: note: vectype: vector(8) unsigned short
common/dct.c:274:5: note: nunits = 8
common/dct.c:274:5: note: ==> examining statement: _97 = _95 - _96;

common/dct.c:274:5: note: get vectype for scalar type:  unsigned short
common/dct.c:274:5: note: vectype: vector(8) unsigned short
common/dct.c:274:5: note: get vectype for scalar type:  unsigned short
common/dct.c:274:5: note: vectype: vector(8) unsigned short
common/dct.c:274:5: note: nunits = 8
common/dct.c:274:5: note: ==> examining statement: _98 = (short int) _97;

common/dct.c:274:5: note: get vectype for scalar type:  short int
common/dct.c:274:5: note: vectype: vector(8) short int
common/dct.c:274:5: note: get vectype for scalar type:  short int
common/dct.c:274:5: note: vectype: vector(8) short int
common/dct.c:274:5: note: nunits = 8
common/dct.c:274:5: note: ==> examining statement: tmp[7][i_36] = _98;

common/dct.c:274:5: note: get vectype for scalar type:  int16_t
common/dct.c:274:5: note: vectype: vector(8) short int
common/dct.c:274:5: note: nunits = 8
common/dct.c:274:5: note: ==> examining statement: i_100 = i_36 + 1;

common/dct.c:274:5: note: skip.
common/dct.c:274:5: note: ==> examining statement: # DEBUG i => i_100

common/dct.c:274:5: note: skip.
common/dct.c:274:5: note: ==> examining statement: # DEBUG i => i_100

common/dct.c:274:5: note: skip.
common/dct.c:274:5: note: ==> examining statement: ivtmp_539 = ivtmp_537 - 1;

common/dct.c:274:5: note: skip.
common/dct.c:274:5: note: ==> examining statement: if (ivtmp_539 != 0)

common/dct.c:274:5: note: skip.
common/dct.c:274:5: note: vectorization factor = 8
common/dct.c:274:5: note: === vect_analyze_data_refs_alignment ===
common/dct.c:274:5: note: dependence distance  = 0.
common/dct.c:274:5: note: accesses have the same alignment.
dependence distance modulo vf == 0 between tmp[0][i_36] and tmp[0][i_36]
common/dct.c:274:5: note: dependence distance  = 0.
common/dct.c:274:5: note: accesses have the same alignment.
dependence distance modulo vf == 0 between tmp[7][i_36] and tmp[7][i_36]
common/dct.c:274:5: note: dependence distance  = 0.
common/dct.c:274:5: note: accesses have the same alignment.
dependence distance modulo vf == 0 between tmp[1][i_36] and tmp[1][i_36]
common/dct.c:274:5: note: dependence distance  = 0.
common/dct.c:274:5: note: accesses have the same alignment.
dependence distance modulo vf == 0 between tmp[6][i_36] and tmp[6][i_36]
common/dct.c:274:5: note: dependence distance  = 0.
common/dct.c:274:5: note: accesses have the same alignment.
dependence distance modulo vf == 0 between tmp[2][i_36] and tmp[2][i_36]
common/dct.c:274:5: note: dependence distance  = 0.
common/dct.c:274:5: note: accesses have the same alignment.
dependence distance modulo vf == 0 between tmp[5][i_36] and tmp[5][i_36]
common/dct.c:274:5: note: dependence distance  = 0.
common/dct.c:274:5: note: accesses have the same alignment.
dependence distance modulo vf == 0 between tmp[3][i_36] and tmp[3][i_36]
common/dct.c:274:5: note: dependence distance  = 0.
common/dct.c:274:5: note: accesses have the same alignment.
dependence distance modulo vf == 0 between tmp[4][i_36] and tmp[4][i_36]
common/dct.c:274:5: note: vect_compute_data_ref_alignment:
common/dct.c:274:5: note: misalign = 0 bytes of ref tmp[0][i_36]
common/dct.c:274:5: note: vect_compute_data_ref_alignment:
common/dct.c:274:5: note: misalign = 0 bytes of ref tmp[7][i_36]
common/dct.c:274:5: note: vect_compute_data_ref_alignment:
common/dct.c:274:5: note: misalign = 0 bytes of ref tmp[1][i_36]
common/dct.c:274:5: note: vect_compute_data_ref_alignment:
common/dct.c:274:5: note: misalign = 0 bytes of ref tmp[6][i_36]
common/dct.c:274:5: note: vect_compute_data_ref_alignment:
common/dct.c:274:5: note: misalign = 0 bytes of ref tmp[2][i_36]
common/dct.c:274:5: note: vect_compute_data_ref_alignment:
common/dct.c:274:5: note: misalign = 0 bytes of ref tmp[5][i_36]
common/dct.c:274:5: note: vect_compute_data_ref_alignment:
common/dct.c:274:5: note: misalign = 0 bytes of ref tmp[3][i_36]
common/dct.c:274:5: note: vect_compute_data_ref_alignment:
common/dct.c:274:5: note: misalign = 0 bytes of ref tmp[4][i_36]
common/dct.c:274:5: note: vect_compute_data_ref_alignment:
common/dct.c:274:5: note: misalign = 0 bytes of ref tmp[0][i_36]
common/dct.c:274:5: note: vect_compute_data_ref_alignment:
common/dct.c:274:5: note: misalign = 0 bytes of ref tmp[1][i_36]
common/dct.c:274:5: note: vect_compute_data_ref_alignment:
common/dct.c:274:5: note: misalign = 0 bytes of ref tmp[2][i_36]
common/dct.c:274:5: note: vect_compute_data_ref_alignment:
common/dct.c:274:5: note: misalign = 0 bytes of ref tmp[3][i_36]
common/dct.c:274:5: note: vect_compute_data_ref_alignment:
common/dct.c:274:5: note: misalign = 0 bytes of ref tmp[4][i_36]
common/dct.c:274:5: note: vect_compute_data_ref_alignment:
common/dct.c:274:5: note: misalign = 0 bytes of ref tmp[5][i_36]
common/dct.c:274:5: note: vect_compute_data_ref_alignment:
common/dct.c:274:5: note: misalign = 0 bytes of ref tmp[6][i_36]
common/dct.c:274:5: note: vect_compute_data_ref_alignment:
common/dct.c:274:5: note: misalign = 0 bytes of ref tmp[7][i_36]
common/dct.c:274:5: note: === vect_prune_runtime_alias_test_list ===
common/dct.c:274:5: note: === vect_enhance_data_refs_alignment ===
common/dct.c:274:5: note: vect_can_advance_ivs_p:
common/dct.c:274:5: note: Analyze phi: i_36 = PHI <0(8), i_100(10)>

common/dct.c:274:5: note: Analyze phi: .MEM_229 = PHI <.MEM_215(8), .MEM_99(10)>

common/dct.c:274:5: note: virtual phi. skip.
common/dct.c:274:5: note: Analyze phi: ivtmp_537 = PHI <8(8), ivtmp_539(10)>

common/dct.c:274:5: note: vect_model_load_cost: aligned.
common/dct.c:274:5: note: vect_get_data_access_cost: inside_cost = 1, outside_cost = 0.
common/dct.c:274:5: note: vect_model_load_cost: aligned.
common/dct.c:274:5: note: vect_get_data_access_cost: inside_cost = 2, outside_cost = 0.
common/dct.c:274:5: note: vect_model_load_cost: aligned.
common/dct.c:274:5: note: vect_get_data_access_cost: inside_cost = 3, outside_cost = 0.
common/dct.c:274:5: note: vect_model_load_cost: aligned.
common/dct.c:274:5: note: vect_get_data_access_cost: inside_cost = 4, outside_cost = 0.
common/dct.c:274:5: note: vect_model_load_cost: aligned.
common/dct.c:274:5: note: vect_get_data_access_cost: inside_cost = 5, outside_cost = 0.
common/dct.c:274:5: note: vect_model_load_cost: aligned.
common/dct.c:274:5: note: vect_get_data_access_cost: inside_cost = 6, outside_cost = 0.
common/dct.c:274:5: note: vect_model_load_cost: aligned.
common/dct.c:274:5: note: vect_get_data_access_cost: inside_cost = 7, outside_cost = 0.
common/dct.c:274:5: note: vect_model_load_cost: aligned.
common/dct.c:274:5: note: vect_get_data_access_cost: inside_cost = 8, outside_cost = 0.
common/dct.c:274:5: note: vect_model_store_cost: aligned.
common/dct.c:274:5: note: vect_get_data_access_cost: inside_cost = 9, outside_cost = 0.
common/dct.c:274:5: note: vect_model_store_cost: aligned.
common/dct.c:274:5: note: vect_get_data_access_cost: inside_cost = 10, outside_cost = 0.
common/dct.c:274:5: note: vect_model_store_cost: aligned.
common/dct.c:274:5: note: vect_get_data_access_cost: inside_cost = 11, outside_cost = 0.
common/dct.c:274:5: note: vect_model_store_cost: aligned.
common/dct.c:274:5: note: vect_get_data_access_cost: inside_cost = 12, outside_cost = 0.
common/dct.c:274:5: note: vect_model_store_cost: aligned.
common/dct.c:274:5: note: vect_get_data_access_cost: inside_cost = 13, outside_cost = 0.
common/dct.c:274:5: note: vect_model_store_cost: aligned.
common/dct.c:274:5: note: vect_get_data_access_cost: inside_cost = 14, outside_cost = 0.
common/dct.c:274:5: note: vect_model_store_cost: aligned.
common/dct.c:274:5: note: vect_get_data_access_cost: inside_cost = 15, outside_cost = 0.
common/dct.c:274:5: note: vect_model_store_cost: aligned.
common/dct.c:274:5: note: vect_get_data_access_cost: inside_cost = 16, outside_cost = 0.
common/dct.c:274:5: note: === vect_analyze_slp ===
common/dct.c:274:5: note: === vect_make_slp_decision ===
common/dct.c:274:5: note: === vect_detect_hybrid_slp ===
common/dct.c:274:5: note: === vect_analyze_loop_operations ===
common/dct.c:274:5: note: examining phi: i_36 = PHI <0(8), i_100(10)>

common/dct.c:274:5: note: examining phi: .MEM_229 = PHI <.MEM_215(8), .MEM_99(10)>

common/dct.c:274:5: note: examining phi: ivtmp_537 = PHI <8(8), ivtmp_539(10)>

common/dct.c:274:5: note: ==> examining statement: # DEBUG i => i_36
common/dct.c:274:5: note: irrelevant.
common/dct.c:274:5: note: ==> examining statement: _9 = tmp[0][i_36];
common/dct.c:274:5: note: num. args = 4 (not unary/binary/ternary op).
common/dct.c:274:5: note: vect_is_simple_use: operand tmp[0][i_36]
common/dct.c:274:5: note: not ssa-name.
common/dct.c:274:5: note: use not simple.
common/dct.c:274:5: note: vect_model_load_cost: aligned.
common/dct.c:274:5: note: vect_model_load_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:274:5: note: ==> examining statement: _10 = (int) _9;
common/dct.c:274:5: note: vect_is_simple_use: operand _9
common/dct.c:274:5: note: def_stmt: _9 = tmp[0][i_36];
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: === vectorizable_conversion ===
common/dct.c:274:5: note: vect_model_promotion_demotion_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:274:5: note: ==> examining statement: _11 = tmp[7][i_36];
common/dct.c:274:5: note: num. args = 4 (not unary/binary/ternary op).
common/dct.c:274:5: note: vect_is_simple_use: operand tmp[7][i_36]
common/dct.c:274:5: note: not ssa-name.
common/dct.c:274:5: note: use not simple.
common/dct.c:274:5: note: vect_model_load_cost: aligned.
common/dct.c:274:5: note: vect_model_load_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:274:5: note: ==> examining statement: _12 = (int) _11;
common/dct.c:274:5: note: vect_is_simple_use: operand _11
common/dct.c:274:5: note: def_stmt: _11 = tmp[7][i_36];
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: === vectorizable_conversion ===
common/dct.c:274:5: note: vect_model_promotion_demotion_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:274:5: note: ==> examining statement: s07_13 = _10 + _12;
common/dct.c:274:5: note: vect_is_simple_use: operand _10
common/dct.c:274:5: note: def_stmt: _10 = (int) _9;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_is_simple_use: operand _12
common/dct.c:274:5: note: def_stmt: _12 = (int) _11;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: === vectorizable_operation ===
common/dct.c:274:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:274:5: note: ==> examining statement: # DEBUG s07 => s07_13
common/dct.c:274:5: note: irrelevant.
common/dct.c:274:5: note: ==> examining statement: _14 = tmp[1][i_36];
common/dct.c:274:5: note: num. args = 4 (not unary/binary/ternary op).
common/dct.c:274:5: note: vect_is_simple_use: operand tmp[1][i_36]
common/dct.c:274:5: note: not ssa-name.
common/dct.c:274:5: note: use not simple.
common/dct.c:274:5: note: vect_model_load_cost: aligned.
common/dct.c:274:5: note: vect_model_load_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:274:5: note: ==> examining statement: _15 = (int) _14;
common/dct.c:274:5: note: vect_is_simple_use: operand _14
common/dct.c:274:5: note: def_stmt: _14 = tmp[1][i_36];
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: === vectorizable_conversion ===
common/dct.c:274:5: note: vect_model_promotion_demotion_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:274:5: note: ==> examining statement: _16 = tmp[6][i_36];
common/dct.c:274:5: note: num. args = 4 (not unary/binary/ternary op).
common/dct.c:274:5: note: vect_is_simple_use: operand tmp[6][i_36]
common/dct.c:274:5: note: not ssa-name.
common/dct.c:274:5: note: use not simple.
common/dct.c:274:5: note: vect_model_load_cost: aligned.
common/dct.c:274:5: note: vect_model_load_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:274:5: note: ==> examining statement: _17 = (int) _16;
common/dct.c:274:5: note: vect_is_simple_use: operand _16
common/dct.c:274:5: note: def_stmt: _16 = tmp[6][i_36];
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: === vectorizable_conversion ===
common/dct.c:274:5: note: vect_model_promotion_demotion_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:274:5: note: ==> examining statement: s16_18 = _15 + _17;
common/dct.c:274:5: note: vect_is_simple_use: operand _15
common/dct.c:274:5: note: def_stmt: _15 = (int) _14;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_is_simple_use: operand _17
common/dct.c:274:5: note: def_stmt: _17 = (int) _16;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: === vectorizable_operation ===
common/dct.c:274:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:274:5: note: ==> examining statement: # DEBUG s16 => s16_18
common/dct.c:274:5: note: irrelevant.
common/dct.c:274:5: note: ==> examining statement: _19 = tmp[2][i_36];
common/dct.c:274:5: note: num. args = 4 (not unary/binary/ternary op).
common/dct.c:274:5: note: vect_is_simple_use: operand tmp[2][i_36]
common/dct.c:274:5: note: not ssa-name.
common/dct.c:274:5: note: use not simple.
common/dct.c:274:5: note: vect_model_load_cost: aligned.
common/dct.c:274:5: note: vect_model_load_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:274:5: note: ==> examining statement: _20 = (int) _19;
common/dct.c:274:5: note: vect_is_simple_use: operand _19
common/dct.c:274:5: note: def_stmt: _19 = tmp[2][i_36];
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: === vectorizable_conversion ===
common/dct.c:274:5: note: vect_model_promotion_demotion_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:274:5: note: ==> examining statement: _21 = tmp[5][i_36];
common/dct.c:274:5: note: num. args = 4 (not unary/binary/ternary op).
common/dct.c:274:5: note: vect_is_simple_use: operand tmp[5][i_36]
common/dct.c:274:5: note: not ssa-name.
common/dct.c:274:5: note: use not simple.
common/dct.c:274:5: note: vect_model_load_cost: aligned.
common/dct.c:274:5: note: vect_model_load_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:274:5: note: ==> examining statement: _22 = (int) _21;
common/dct.c:274:5: note: vect_is_simple_use: operand _21
common/dct.c:274:5: note: def_stmt: _21 = tmp[5][i_36];
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: === vectorizable_conversion ===
common/dct.c:274:5: note: vect_model_promotion_demotion_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:274:5: note: ==> examining statement: s25_23 = _20 + _22;
common/dct.c:274:5: note: vect_is_simple_use: operand _20
common/dct.c:274:5: note: def_stmt: _20 = (int) _19;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_is_simple_use: operand _22
common/dct.c:274:5: note: def_stmt: _22 = (int) _21;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: === vectorizable_operation ===
common/dct.c:274:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:274:5: note: ==> examining statement: # DEBUG s25 => s25_23
common/dct.c:274:5: note: irrelevant.
common/dct.c:274:5: note: ==> examining statement: _24 = tmp[3][i_36];
common/dct.c:274:5: note: num. args = 4 (not unary/binary/ternary op).
common/dct.c:274:5: note: vect_is_simple_use: operand tmp[3][i_36]
common/dct.c:274:5: note: not ssa-name.
common/dct.c:274:5: note: use not simple.
common/dct.c:274:5: note: vect_model_load_cost: aligned.
common/dct.c:274:5: note: vect_model_load_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:274:5: note: ==> examining statement: _25 = (int) _24;
common/dct.c:274:5: note: vect_is_simple_use: operand _24
common/dct.c:274:5: note: def_stmt: _24 = tmp[3][i_36];
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: === vectorizable_conversion ===
common/dct.c:274:5: note: vect_model_promotion_demotion_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:274:5: note: ==> examining statement: _26 = tmp[4][i_36];
common/dct.c:274:5: note: num. args = 4 (not unary/binary/ternary op).
common/dct.c:274:5: note: vect_is_simple_use: operand tmp[4][i_36]
common/dct.c:274:5: note: not ssa-name.
common/dct.c:274:5: note: use not simple.
common/dct.c:274:5: note: vect_model_load_cost: aligned.
common/dct.c:274:5: note: vect_model_load_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:274:5: note: ==> examining statement: _27 = (int) _26;
common/dct.c:274:5: note: vect_is_simple_use: operand _26
common/dct.c:274:5: note: def_stmt: _26 = tmp[4][i_36];
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: === vectorizable_conversion ===
common/dct.c:274:5: note: vect_model_promotion_demotion_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:274:5: note: ==> examining statement: s34_28 = _25 + _27;
common/dct.c:274:5: note: vect_is_simple_use: operand _25
common/dct.c:274:5: note: def_stmt: _25 = (int) _24;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_is_simple_use: operand _27
common/dct.c:274:5: note: def_stmt: _27 = (int) _26;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: === vectorizable_operation ===
common/dct.c:274:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:274:5: note: ==> examining statement: # DEBUG s34 => s34_28
common/dct.c:274:5: note: irrelevant.
common/dct.c:274:5: note: ==> examining statement: a0_29 = s07_13 + s34_28;
common/dct.c:274:5: note: vect_is_simple_use: operand s07_13
common/dct.c:274:5: note: def_stmt: s07_13 = _10 + _12;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_is_simple_use: operand s34_28
common/dct.c:274:5: note: def_stmt: s34_28 = _25 + _27;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: === vectorizable_operation ===
common/dct.c:274:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:274:5: note: ==> examining statement: # DEBUG a0 => a0_29
common/dct.c:274:5: note: irrelevant.
common/dct.c:274:5: note: ==> examining statement: a1_30 = s16_18 + s25_23;
common/dct.c:274:5: note: vect_is_simple_use: operand s16_18
common/dct.c:274:5: note: def_stmt: s16_18 = _15 + _17;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_is_simple_use: operand s25_23
common/dct.c:274:5: note: def_stmt: s25_23 = _20 + _22;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: === vectorizable_operation ===
common/dct.c:274:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:274:5: note: ==> examining statement: # DEBUG a1 => a1_30
common/dct.c:274:5: note: irrelevant.
common/dct.c:274:5: note: ==> examining statement: a2_31 = s07_13 - s34_28;
common/dct.c:274:5: note: vect_is_simple_use: operand s07_13
common/dct.c:274:5: note: def_stmt: s07_13 = _10 + _12;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_is_simple_use: operand s34_28
common/dct.c:274:5: note: def_stmt: s34_28 = _25 + _27;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: === vectorizable_operation ===
common/dct.c:274:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:274:5: note: ==> examining statement: # DEBUG a2 => a2_31
common/dct.c:274:5: note: irrelevant.
common/dct.c:274:5: note: ==> examining statement: a3_32 = s16_18 - s25_23;
common/dct.c:274:5: note: vect_is_simple_use: operand s16_18
common/dct.c:274:5: note: def_stmt: s16_18 = _15 + _17;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_is_simple_use: operand s25_23
common/dct.c:274:5: note: def_stmt: s25_23 = _20 + _22;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: === vectorizable_operation ===
common/dct.c:274:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:274:5: note: ==> examining statement: # DEBUG a3 => a3_32
common/dct.c:274:5: note: irrelevant.
common/dct.c:274:5: note: ==> examining statement: d07_35 = _10 - _12;
common/dct.c:274:5: note: vect_is_simple_use: operand _10
common/dct.c:274:5: note: def_stmt: _10 = (int) _9;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_is_simple_use: operand _12
common/dct.c:274:5: note: def_stmt: _12 = (int) _11;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: === vectorizable_operation ===
common/dct.c:274:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:274:5: note: ==> examining statement: # DEBUG d07 => d07_35
common/dct.c:274:5: note: irrelevant.
common/dct.c:274:5: note: ==> examining statement: d16_37 = _15 - _17;
common/dct.c:274:5: note: vect_is_simple_use: operand _15
common/dct.c:274:5: note: def_stmt: _15 = (int) _14;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_is_simple_use: operand _17
common/dct.c:274:5: note: def_stmt: _17 = (int) _16;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: === vectorizable_operation ===
common/dct.c:274:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:274:5: note: ==> examining statement: # DEBUG d16 => d16_37
common/dct.c:274:5: note: irrelevant.
common/dct.c:274:5: note: ==> examining statement: d25_38 = _20 - _22;
common/dct.c:274:5: note: vect_is_simple_use: operand _20
common/dct.c:274:5: note: def_stmt: _20 = (int) _19;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_is_simple_use: operand _22
common/dct.c:274:5: note: def_stmt: _22 = (int) _21;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: === vectorizable_operation ===
common/dct.c:274:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:274:5: note: ==> examining statement: # DEBUG d25 => d25_38
common/dct.c:274:5: note: irrelevant.
common/dct.c:274:5: note: ==> examining statement: d34_39 = _25 - _27;
common/dct.c:274:5: note: vect_is_simple_use: operand _25
common/dct.c:274:5: note: def_stmt: _25 = (int) _24;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_is_simple_use: operand _27
common/dct.c:274:5: note: def_stmt: _27 = (int) _26;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: === vectorizable_operation ===
common/dct.c:274:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:274:5: note: ==> examining statement: # DEBUG d34 => d34_39
common/dct.c:274:5: note: irrelevant.
common/dct.c:274:5: note: ==> examining statement: _40 = d16_37 + d25_38;
common/dct.c:274:5: note: vect_is_simple_use: operand d16_37
common/dct.c:274:5: note: def_stmt: d16_37 = _15 - _17;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_is_simple_use: operand d25_38
common/dct.c:274:5: note: def_stmt: d25_38 = _20 - _22;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: === vectorizable_operation ===
common/dct.c:274:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:274:5: note: ==> examining statement: _41 = d07_35 >> 1;
common/dct.c:274:5: note: vect_is_simple_use: operand d07_35
common/dct.c:274:5: note: def_stmt: d07_35 = _10 - _12;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_is_simple_use: operand 1
common/dct.c:274:5: note: vector/scalar shift/rotate found.
common/dct.c:274:5: note: === vectorizable_shift ===
common/dct.c:274:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 1 .
common/dct.c:274:5: note: ==> examining statement: _42 = d07_35 + _41;
common/dct.c:274:5: note: vect_is_simple_use: operand d07_35
common/dct.c:274:5: note: def_stmt: d07_35 = _10 - _12;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_is_simple_use: operand _41
common/dct.c:274:5: note: def_stmt: _41 = d07_35 >> 1;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: === vectorizable_operation ===
common/dct.c:274:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:274:5: note: ==> examining statement: a4_43 = _40 + _42;
common/dct.c:274:5: note: vect_is_simple_use: operand _40
common/dct.c:274:5: note: def_stmt: _40 = d16_37 + d25_38;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_is_simple_use: operand _42
common/dct.c:274:5: note: def_stmt: _42 = d07_35 + _41;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: === vectorizable_operation ===
common/dct.c:274:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:274:5: note: ==> examining statement: # DEBUG a4 => a4_43
common/dct.c:274:5: note: irrelevant.
common/dct.c:274:5: note: ==> examining statement: _44 = d07_35 - d34_39;
common/dct.c:274:5: note: vect_is_simple_use: operand d07_35
common/dct.c:274:5: note: def_stmt: d07_35 = _10 - _12;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_is_simple_use: operand d34_39
common/dct.c:274:5: note: def_stmt: d34_39 = _25 - _27;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: === vectorizable_operation ===
common/dct.c:274:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:274:5: note: ==> examining statement: _45 = d25_38 >> 1;
common/dct.c:274:5: note: vect_is_simple_use: operand d25_38
common/dct.c:274:5: note: def_stmt: d25_38 = _20 - _22;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_is_simple_use: operand 1
common/dct.c:274:5: note: vector/scalar shift/rotate found.
common/dct.c:274:5: note: === vectorizable_shift ===
common/dct.c:274:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 1 .
common/dct.c:274:5: note: ==> examining statement: _46 = d25_38 + _45;
common/dct.c:274:5: note: vect_is_simple_use: operand d25_38
common/dct.c:274:5: note: def_stmt: d25_38 = _20 - _22;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_is_simple_use: operand _45
common/dct.c:274:5: note: def_stmt: _45 = d25_38 >> 1;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: === vectorizable_operation ===
common/dct.c:274:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:274:5: note: ==> examining statement: a5_47 = _44 - _46;
common/dct.c:274:5: note: vect_is_simple_use: operand _44
common/dct.c:274:5: note: def_stmt: _44 = d07_35 - d34_39;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_is_simple_use: operand _46
common/dct.c:274:5: note: def_stmt: _46 = d25_38 + _45;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: === vectorizable_operation ===
common/dct.c:274:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:274:5: note: ==> examining statement: # DEBUG a5 => a5_47
common/dct.c:274:5: note: irrelevant.
common/dct.c:274:5: note: ==> examining statement: _48 = d07_35 + d34_39;
common/dct.c:274:5: note: vect_is_simple_use: operand d07_35
common/dct.c:274:5: note: def_stmt: d07_35 = _10 - _12;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_is_simple_use: operand d34_39
common/dct.c:274:5: note: def_stmt: d34_39 = _25 - _27;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: === vectorizable_operation ===
common/dct.c:274:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:274:5: note: ==> examining statement: _49 = d16_37 >> 1;
common/dct.c:274:5: note: vect_is_simple_use: operand d16_37
common/dct.c:274:5: note: def_stmt: d16_37 = _15 - _17;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_is_simple_use: operand 1
common/dct.c:274:5: note: vector/scalar shift/rotate found.
common/dct.c:274:5: note: === vectorizable_shift ===
common/dct.c:274:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 1 .
common/dct.c:274:5: note: ==> examining statement: _50 = d16_37 + _49;
common/dct.c:274:5: note: vect_is_simple_use: operand d16_37
common/dct.c:274:5: note: def_stmt: d16_37 = _15 - _17;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_is_simple_use: operand _49
common/dct.c:274:5: note: def_stmt: _49 = d16_37 >> 1;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: === vectorizable_operation ===
common/dct.c:274:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:274:5: note: ==> examining statement: a6_51 = _48 - _50;
common/dct.c:274:5: note: vect_is_simple_use: operand _48
common/dct.c:274:5: note: def_stmt: _48 = d07_35 + d34_39;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_is_simple_use: operand _50
common/dct.c:274:5: note: def_stmt: _50 = d16_37 + _49;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: === vectorizable_operation ===
common/dct.c:274:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:274:5: note: ==> examining statement: # DEBUG a6 => a6_51
common/dct.c:274:5: note: irrelevant.
common/dct.c:274:5: note: ==> examining statement: _52 = d16_37 - d25_38;
common/dct.c:274:5: note: vect_is_simple_use: operand d16_37
common/dct.c:274:5: note: def_stmt: d16_37 = _15 - _17;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_is_simple_use: operand d25_38
common/dct.c:274:5: note: def_stmt: d25_38 = _20 - _22;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: === vectorizable_operation ===
common/dct.c:274:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:274:5: note: ==> examining statement: _53 = d34_39 >> 1;
common/dct.c:274:5: note: vect_is_simple_use: operand d34_39
common/dct.c:274:5: note: def_stmt: d34_39 = _25 - _27;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_is_simple_use: operand 1
common/dct.c:274:5: note: vector/scalar shift/rotate found.
common/dct.c:274:5: note: === vectorizable_shift ===
common/dct.c:274:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 1 .
common/dct.c:274:5: note: ==> examining statement: _54 = d34_39 + _53;
common/dct.c:274:5: note: vect_is_simple_use: operand d34_39
common/dct.c:274:5: note: def_stmt: d34_39 = _25 - _27;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_is_simple_use: operand _53
common/dct.c:274:5: note: def_stmt: _53 = d34_39 >> 1;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: === vectorizable_operation ===
common/dct.c:274:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:274:5: note: ==> examining statement: a7_55 = _52 + _54;
common/dct.c:274:5: note: vect_is_simple_use: operand _52
common/dct.c:274:5: note: def_stmt: _52 = d16_37 - d25_38;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_is_simple_use: operand _54
common/dct.c:274:5: note: def_stmt: _54 = d34_39 + _53;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: === vectorizable_operation ===
common/dct.c:274:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:274:5: note: ==> examining statement: # DEBUG a7 => a7_55
common/dct.c:274:5: note: irrelevant.
common/dct.c:274:5: note: ==> examining statement: _56 = (unsigned short) a0_29;
common/dct.c:274:5: note: vect_is_simple_use: operand a0_29
common/dct.c:274:5: note: def_stmt: a0_29 = s07_13 + s34_28;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: === vectorizable_conversion ===
common/dct.c:274:5: note: vect_model_promotion_demotion_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:274:5: note: ==> examining statement: _57 = (unsigned short) a1_30;
common/dct.c:274:5: note: vect_is_simple_use: operand a1_30
common/dct.c:274:5: note: def_stmt: a1_30 = s16_18 + s25_23;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: === vectorizable_conversion ===
common/dct.c:274:5: note: vect_model_promotion_demotion_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:274:5: note: ==> examining statement: _58 = _56 + _57;
common/dct.c:274:5: note: vect_is_simple_use: operand _56
common/dct.c:274:5: note: def_stmt: _56 = (unsigned short) a0_29;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_is_simple_use: operand _57
common/dct.c:274:5: note: def_stmt: _57 = (unsigned short) a1_30;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: === vectorizable_operation ===
common/dct.c:274:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:274:5: note: ==> examining statement: _59 = (short int) _58;
common/dct.c:274:5: note: vect_is_simple_use: operand _58
common/dct.c:274:5: note: def_stmt: _58 = _56 + _57;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_is_simple_use: operand _58
common/dct.c:274:5: note: def_stmt: _58 = _56 + _57;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: no optab.
common/dct.c:274:5: note: vect_is_simple_use: operand _58
common/dct.c:274:5: note: def_stmt: _58 = _56 + _57;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: === vectorizable_assignment ===
common/dct.c:274:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:274:5: note: ==> examining statement: tmp[0][i_36] = _59;
common/dct.c:274:5: note: vect_is_simple_use: operand _59
common/dct.c:274:5: note: def_stmt: _59 = (short int) _58;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_model_store_cost: aligned.
common/dct.c:274:5: note: vect_model_store_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:274:5: note: ==> examining statement: _61 = a7_55 >> 2;
common/dct.c:274:5: note: vect_is_simple_use: operand a7_55
common/dct.c:274:5: note: def_stmt: a7_55 = _52 + _54;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_is_simple_use: operand 2
common/dct.c:274:5: note: vector/scalar shift/rotate found.
common/dct.c:274:5: note: === vectorizable_shift ===
common/dct.c:274:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 1 .
common/dct.c:274:5: note: ==> examining statement: _62 = (unsigned short) _61;
common/dct.c:274:5: note: vect_is_simple_use: operand _61
common/dct.c:274:5: note: def_stmt: _61 = a7_55 >> 2;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: === vectorizable_conversion ===
common/dct.c:274:5: note: vect_model_promotion_demotion_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:274:5: note: ==> examining statement: _63 = (unsigned short) a4_43;
common/dct.c:274:5: note: vect_is_simple_use: operand a4_43
common/dct.c:274:5: note: def_stmt: a4_43 = _40 + _42;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: === vectorizable_conversion ===
common/dct.c:274:5: note: vect_model_promotion_demotion_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:274:5: note: ==> examining statement: _64 = _62 + _63;
common/dct.c:274:5: note: vect_is_simple_use: operand _62
common/dct.c:274:5: note: def_stmt: _62 = (unsigned short) _61;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_is_simple_use: operand _63
common/dct.c:274:5: note: def_stmt: _63 = (unsigned short) a4_43;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: === vectorizable_operation ===
common/dct.c:274:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:274:5: note: ==> examining statement: _65 = (short int) _64;
common/dct.c:274:5: note: vect_is_simple_use: operand _64
common/dct.c:274:5: note: def_stmt: _64 = _62 + _63;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_is_simple_use: operand _64
common/dct.c:274:5: note: def_stmt: _64 = _62 + _63;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: no optab.
common/dct.c:274:5: note: vect_is_simple_use: operand _64
common/dct.c:274:5: note: def_stmt: _64 = _62 + _63;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: === vectorizable_assignment ===
common/dct.c:274:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:274:5: note: ==> examining statement: tmp[1][i_36] = _65;
common/dct.c:274:5: note: vect_is_simple_use: operand _65
common/dct.c:274:5: note: def_stmt: _65 = (short int) _64;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_model_store_cost: aligned.
common/dct.c:274:5: note: vect_model_store_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:274:5: note: ==> examining statement: _67 = a3_32 >> 1;
common/dct.c:274:5: note: vect_is_simple_use: operand a3_32
common/dct.c:274:5: note: def_stmt: a3_32 = s16_18 - s25_23;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_is_simple_use: operand 1
common/dct.c:274:5: note: vector/scalar shift/rotate found.
common/dct.c:274:5: note: === vectorizable_shift ===
common/dct.c:274:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 1 .
common/dct.c:274:5: note: ==> examining statement: _68 = (unsigned short) _67;
common/dct.c:274:5: note: vect_is_simple_use: operand _67
common/dct.c:274:5: note: def_stmt: _67 = a3_32 >> 1;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: === vectorizable_conversion ===
common/dct.c:274:5: note: vect_model_promotion_demotion_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:274:5: note: ==> examining statement: _69 = (unsigned short) a2_31;
common/dct.c:274:5: note: vect_is_simple_use: operand a2_31
common/dct.c:274:5: note: def_stmt: a2_31 = s07_13 - s34_28;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: === vectorizable_conversion ===
common/dct.c:274:5: note: vect_model_promotion_demotion_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:274:5: note: ==> examining statement: _70 = _68 + _69;
common/dct.c:274:5: note: vect_is_simple_use: operand _68
common/dct.c:274:5: note: def_stmt: _68 = (unsigned short) _67;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_is_simple_use: operand _69
common/dct.c:274:5: note: def_stmt: _69 = (unsigned short) a2_31;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: === vectorizable_operation ===
common/dct.c:274:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:274:5: note: ==> examining statement: _71 = (short int) _70;
common/dct.c:274:5: note: vect_is_simple_use: operand _70
common/dct.c:274:5: note: def_stmt: _70 = _68 + _69;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_is_simple_use: operand _70
common/dct.c:274:5: note: def_stmt: _70 = _68 + _69;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: no optab.
common/dct.c:274:5: note: vect_is_simple_use: operand _70
common/dct.c:274:5: note: def_stmt: _70 = _68 + _69;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: === vectorizable_assignment ===
common/dct.c:274:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:274:5: note: ==> examining statement: tmp[2][i_36] = _71;
common/dct.c:274:5: note: vect_is_simple_use: operand _71
common/dct.c:274:5: note: def_stmt: _71 = (short int) _70;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_model_store_cost: aligned.
common/dct.c:274:5: note: vect_model_store_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:274:5: note: ==> examining statement: _73 = a6_51 >> 2;
common/dct.c:274:5: note: vect_is_simple_use: operand a6_51
common/dct.c:274:5: note: def_stmt: a6_51 = _48 - _50;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_is_simple_use: operand 2
common/dct.c:274:5: note: vector/scalar shift/rotate found.
common/dct.c:274:5: note: === vectorizable_shift ===
common/dct.c:274:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 1 .
common/dct.c:274:5: note: ==> examining statement: _74 = (unsigned short) _73;
common/dct.c:274:5: note: vect_is_simple_use: operand _73
common/dct.c:274:5: note: def_stmt: _73 = a6_51 >> 2;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: === vectorizable_conversion ===
common/dct.c:274:5: note: vect_model_promotion_demotion_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:274:5: note: ==> examining statement: _75 = (unsigned short) a5_47;
common/dct.c:274:5: note: vect_is_simple_use: operand a5_47
common/dct.c:274:5: note: def_stmt: a5_47 = _44 - _46;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: === vectorizable_conversion ===
common/dct.c:274:5: note: vect_model_promotion_demotion_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:274:5: note: ==> examining statement: _76 = _74 + _75;
common/dct.c:274:5: note: vect_is_simple_use: operand _74
common/dct.c:274:5: note: def_stmt: _74 = (unsigned short) _73;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_is_simple_use: operand _75
common/dct.c:274:5: note: def_stmt: _75 = (unsigned short) a5_47;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: === vectorizable_operation ===
common/dct.c:274:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:274:5: note: ==> examining statement: _77 = (short int) _76;
common/dct.c:274:5: note: vect_is_simple_use: operand _76
common/dct.c:274:5: note: def_stmt: _76 = _74 + _75;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_is_simple_use: operand _76
common/dct.c:274:5: note: def_stmt: _76 = _74 + _75;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: no optab.
common/dct.c:274:5: note: vect_is_simple_use: operand _76
common/dct.c:274:5: note: def_stmt: _76 = _74 + _75;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: === vectorizable_assignment ===
common/dct.c:274:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:274:5: note: ==> examining statement: tmp[3][i_36] = _77;
common/dct.c:274:5: note: vect_is_simple_use: operand _77
common/dct.c:274:5: note: def_stmt: _77 = (short int) _76;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_model_store_cost: aligned.
common/dct.c:274:5: note: vect_model_store_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:274:5: note: ==> examining statement: _79 = _56 - _57;
common/dct.c:274:5: note: vect_is_simple_use: operand _56
common/dct.c:274:5: note: def_stmt: _56 = (unsigned short) a0_29;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_is_simple_use: operand _57
common/dct.c:274:5: note: def_stmt: _57 = (unsigned short) a1_30;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: === vectorizable_operation ===
common/dct.c:274:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:274:5: note: ==> examining statement: _80 = (short int) _79;
common/dct.c:274:5: note: vect_is_simple_use: operand _79
common/dct.c:274:5: note: def_stmt: _79 = _56 - _57;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_is_simple_use: operand _79
common/dct.c:274:5: note: def_stmt: _79 = _56 - _57;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: no optab.
common/dct.c:274:5: note: vect_is_simple_use: operand _79
common/dct.c:274:5: note: def_stmt: _79 = _56 - _57;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: === vectorizable_assignment ===
common/dct.c:274:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:274:5: note: ==> examining statement: tmp[4][i_36] = _80;
common/dct.c:274:5: note: vect_is_simple_use: operand _80
common/dct.c:274:5: note: def_stmt: _80 = (short int) _79;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_model_store_cost: aligned.
common/dct.c:274:5: note: vect_model_store_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:274:5: note: ==> examining statement: _82 = (unsigned short) a6_51;
common/dct.c:274:5: note: vect_is_simple_use: operand a6_51
common/dct.c:274:5: note: def_stmt: a6_51 = _48 - _50;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: === vectorizable_conversion ===
common/dct.c:274:5: note: vect_model_promotion_demotion_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:274:5: note: ==> examining statement: _83 = a5_47 >> 2;
common/dct.c:274:5: note: vect_is_simple_use: operand a5_47
common/dct.c:274:5: note: def_stmt: a5_47 = _44 - _46;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_is_simple_use: operand 2
common/dct.c:274:5: note: vector/scalar shift/rotate found.
common/dct.c:274:5: note: === vectorizable_shift ===
common/dct.c:274:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 1 .
common/dct.c:274:5: note: ==> examining statement: _84 = (unsigned short) _83;
common/dct.c:274:5: note: vect_is_simple_use: operand _83
common/dct.c:274:5: note: def_stmt: _83 = a5_47 >> 2;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: === vectorizable_conversion ===
common/dct.c:274:5: note: vect_model_promotion_demotion_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:274:5: note: ==> examining statement: _85 = _82 - _84;
common/dct.c:274:5: note: vect_is_simple_use: operand _82
common/dct.c:274:5: note: def_stmt: _82 = (unsigned short) a6_51;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_is_simple_use: operand _84
common/dct.c:274:5: note: def_stmt: _84 = (unsigned short) _83;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: === vectorizable_operation ===
common/dct.c:274:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:274:5: note: ==> examining statement: _86 = (short int) _85;
common/dct.c:274:5: note: vect_is_simple_use: operand _85
common/dct.c:274:5: note: def_stmt: _85 = _82 - _84;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_is_simple_use: operand _85
common/dct.c:274:5: note: def_stmt: _85 = _82 - _84;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: no optab.
common/dct.c:274:5: note: vect_is_simple_use: operand _85
common/dct.c:274:5: note: def_stmt: _85 = _82 - _84;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: === vectorizable_assignment ===
common/dct.c:274:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:274:5: note: ==> examining statement: tmp[5][i_36] = _86;
common/dct.c:274:5: note: vect_is_simple_use: operand _86
common/dct.c:274:5: note: def_stmt: _86 = (short int) _85;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_model_store_cost: aligned.
common/dct.c:274:5: note: vect_model_store_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:274:5: note: ==> examining statement: _88 = a2_31 >> 1;
common/dct.c:274:5: note: vect_is_simple_use: operand a2_31
common/dct.c:274:5: note: def_stmt: a2_31 = s07_13 - s34_28;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_is_simple_use: operand 1
common/dct.c:274:5: note: vector/scalar shift/rotate found.
common/dct.c:274:5: note: === vectorizable_shift ===
common/dct.c:274:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 1 .
common/dct.c:274:5: note: ==> examining statement: _89 = (unsigned short) _88;
common/dct.c:274:5: note: vect_is_simple_use: operand _88
common/dct.c:274:5: note: def_stmt: _88 = a2_31 >> 1;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: === vectorizable_conversion ===
common/dct.c:274:5: note: vect_model_promotion_demotion_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:274:5: note: ==> examining statement: _90 = (unsigned short) a3_32;
common/dct.c:274:5: note: vect_is_simple_use: operand a3_32
common/dct.c:274:5: note: def_stmt: a3_32 = s16_18 - s25_23;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: === vectorizable_conversion ===
common/dct.c:274:5: note: vect_model_promotion_demotion_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:274:5: note: ==> examining statement: _91 = _89 - _90;
common/dct.c:274:5: note: vect_is_simple_use: operand _89
common/dct.c:274:5: note: def_stmt: _89 = (unsigned short) _88;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_is_simple_use: operand _90
common/dct.c:274:5: note: def_stmt: _90 = (unsigned short) a3_32;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: === vectorizable_operation ===
common/dct.c:274:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:274:5: note: ==> examining statement: _92 = (short int) _91;
common/dct.c:274:5: note: vect_is_simple_use: operand _91
common/dct.c:274:5: note: def_stmt: _91 = _89 - _90;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_is_simple_use: operand _91
common/dct.c:274:5: note: def_stmt: _91 = _89 - _90;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: no optab.
common/dct.c:274:5: note: vect_is_simple_use: operand _91
common/dct.c:274:5: note: def_stmt: _91 = _89 - _90;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: === vectorizable_assignment ===
common/dct.c:274:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:274:5: note: ==> examining statement: tmp[6][i_36] = _92;
common/dct.c:274:5: note: vect_is_simple_use: operand _92
common/dct.c:274:5: note: def_stmt: _92 = (short int) _91;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_model_store_cost: aligned.
common/dct.c:274:5: note: vect_model_store_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:274:5: note: ==> examining statement: _94 = a4_43 >> 2;
common/dct.c:274:5: note: vect_is_simple_use: operand a4_43
common/dct.c:274:5: note: def_stmt: a4_43 = _40 + _42;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_is_simple_use: operand 2
common/dct.c:274:5: note: vector/scalar shift/rotate found.
common/dct.c:274:5: note: === vectorizable_shift ===
common/dct.c:274:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 1 .
common/dct.c:274:5: note: ==> examining statement: _95 = (unsigned short) _94;
common/dct.c:274:5: note: vect_is_simple_use: operand _94
common/dct.c:274:5: note: def_stmt: _94 = a4_43 >> 2;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: === vectorizable_conversion ===
common/dct.c:274:5: note: vect_model_promotion_demotion_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:274:5: note: ==> examining statement: _96 = (unsigned short) a7_55;
common/dct.c:274:5: note: vect_is_simple_use: operand a7_55
common/dct.c:274:5: note: def_stmt: a7_55 = _52 + _54;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: === vectorizable_conversion ===
common/dct.c:274:5: note: vect_model_promotion_demotion_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:274:5: note: ==> examining statement: _97 = _95 - _96;
common/dct.c:274:5: note: vect_is_simple_use: operand _95
common/dct.c:274:5: note: def_stmt: _95 = (unsigned short) _94;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_is_simple_use: operand _96
common/dct.c:274:5: note: def_stmt: _96 = (unsigned short) a7_55;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: === vectorizable_operation ===
common/dct.c:274:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:274:5: note: ==> examining statement: _98 = (short int) _97;
common/dct.c:274:5: note: vect_is_simple_use: operand _97
common/dct.c:274:5: note: def_stmt: _97 = _95 - _96;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_is_simple_use: operand _97
common/dct.c:274:5: note: def_stmt: _97 = _95 - _96;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: no optab.
common/dct.c:274:5: note: vect_is_simple_use: operand _97
common/dct.c:274:5: note: def_stmt: _97 = _95 - _96;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: === vectorizable_assignment ===
common/dct.c:274:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:274:5: note: ==> examining statement: tmp[7][i_36] = _98;
common/dct.c:274:5: note: vect_is_simple_use: operand _98
common/dct.c:274:5: note: def_stmt: _98 = (short int) _97;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_model_store_cost: aligned.
common/dct.c:274:5: note: vect_model_store_cost: inside_cost = 1, prologue_cost = 0 .
common/dct.c:274:5: note: ==> examining statement: i_100 = i_36 + 1;
common/dct.c:274:5: note: irrelevant.
common/dct.c:274:5: note: ==> examining statement: # DEBUG i => i_100
common/dct.c:274:5: note: irrelevant.
common/dct.c:274:5: note: ==> examining statement: # DEBUG i => i_100
common/dct.c:274:5: note: irrelevant.
common/dct.c:274:5: note: ==> examining statement: ivtmp_539 = ivtmp_537 - 1;
common/dct.c:274:5: note: irrelevant.
common/dct.c:274:5: note: ==> examining statement: if (ivtmp_539 != 0)
common/dct.c:274:5: note: irrelevant.
common/dct.c:274:5: note: vectorization_factor = 8, niters = 8
common/dct.c:274:5: note: === vect_update_slp_costs_according_to_vf ===
common/dct.c:274:5: note: Cost model analysis: 
  Vector inside of loop cost: 130
  Vector prologue cost: 10
  Vector epilogue cost: 0
  Scalar iteration cost: 88
  Scalar outside cost: 0
  Vector outside cost: 10
  prologue iterations: 0
  epilogue iterations: 0
  Calculated minimum iters for profitability: 1
common/dct.c:274:5: note:   Runtime profitability threshold = 7
common/dct.c:274:5: note:   Static estimate profitability threshold = 7
common/dct.c:274:5: note: loop vectorized
common/dct.c:274:5: note: === vec_transform_loop ===
common/dct.c:274:5: note: ------>vectorizing phi: i_36 = PHI <0(15), i_100(10)>

common/dct.c:274:5: note: ------>vectorizing phi: .MEM_229 = PHI <.MEM_215(15), .MEM_99(10)>

common/dct.c:274:5: note: ------>vectorizing phi: ivtmp_537 = PHI <8(15), ivtmp_539(10)>

common/dct.c:274:5: note: ------>vectorizing statement: # DEBUG i => i_36

common/dct.c:274:5: note: ------>vectorizing statement: _9 = tmp[0][i_36];

common/dct.c:274:5: note: transform statement.
common/dct.c:274:5: note: transform load. ncopies = 1
common/dct.c:274:5: note: create vector_type-pointer variable to type: vector(8) short int  vectorizing an array ref: tmp
Applying pattern match.pd:49, generic-match.c:4015
common/dct.c:274:5: note: created vectp_tmp.46_531
common/dct.c:274:5: note: add new stmt: vect__9.47_528 = MEM[(short int *)vectp_tmp.45_530];
common/dct.c:274:5: note: ------>vectorizing statement: _10 = (int) _9;

common/dct.c:274:5: note: multiple-types.
common/dct.c:274:5: note: transform statement.
common/dct.c:274:5: note: vect_is_simple_use: operand _9
common/dct.c:274:5: note: def_stmt: _9 = tmp[0][i_36];
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: transform conversion. ncopies = 1.
common/dct.c:274:5: note: vect_get_vec_def_for_operand: _9
common/dct.c:274:5: note: vect_is_simple_use: operand _9
common/dct.c:274:5: note: def_stmt: _9 = tmp[0][i_36];
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  _9
  def_stmt =  _9 = tmp[0][i_36];
common/dct.c:274:5: note: add new stmt: vect__10.48_527 = [vec_unpack_lo_expr] vect__9.47_528;
common/dct.c:274:5: note: add new stmt: vect__10.48_526 = [vec_unpack_hi_expr] vect__9.47_528;
common/dct.c:274:5: note: ------>vectorizing statement: _11 = tmp[7][i_36];

common/dct.c:274:5: note: transform statement.
common/dct.c:274:5: note: transform load. ncopies = 1
common/dct.c:274:5: note: create vector_type-pointer variable to type: vector(8) short int  vectorizing an array ref: tmp
common/dct.c:274:5: note: created vectp_tmp.50_525
common/dct.c:274:5: note: add new stmt: vect__11.51_522 = MEM[(short int *)vectp_tmp.49_524];
common/dct.c:274:5: note: ------>vectorizing statement: _12 = (int) _11;

common/dct.c:274:5: note: multiple-types.
common/dct.c:274:5: note: transform statement.
common/dct.c:274:5: note: vect_is_simple_use: operand _11
common/dct.c:274:5: note: def_stmt: _11 = tmp[7][i_36];
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: transform conversion. ncopies = 1.
common/dct.c:274:5: note: vect_get_vec_def_for_operand: _11
common/dct.c:274:5: note: vect_is_simple_use: operand _11
common/dct.c:274:5: note: def_stmt: _11 = tmp[7][i_36];
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  _11
  def_stmt =  _11 = tmp[7][i_36];
common/dct.c:274:5: note: add new stmt: vect__12.52_521 = [vec_unpack_lo_expr] vect__11.51_522;
common/dct.c:274:5: note: add new stmt: vect__12.52_520 = [vec_unpack_hi_expr] vect__11.51_522;
common/dct.c:274:5: note: ------>vectorizing statement: s07_13 = _10 + _12;

common/dct.c:274:5: note: multiple-types.
common/dct.c:274:5: note: transform statement.
common/dct.c:274:5: note: vect_is_simple_use: operand _10
common/dct.c:274:5: note: def_stmt: _10 = (int) _9;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_is_simple_use: operand _12
common/dct.c:274:5: note: def_stmt: _12 = (int) _11;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: transform binary/unary operation.
common/dct.c:274:5: note: vect_get_vec_def_for_operand: _10
common/dct.c:274:5: note: vect_is_simple_use: operand _10
common/dct.c:274:5: note: def_stmt: _10 = (int) _9;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  _10
  def_stmt =  _10 = (int) _9;
common/dct.c:274:5: note: vect_get_vec_def_for_operand: _12
common/dct.c:274:5: note: vect_is_simple_use: operand _12
common/dct.c:274:5: note: def_stmt: _12 = (int) _11;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  _12
  def_stmt =  _12 = (int) _11;
common/dct.c:274:5: note: add new stmt: vect_s07_13.53_519 = vect__10.48_527 + vect__12.52_521;
common/dct.c:274:5: note: add new stmt: vect_s07_13.53_518 = vect__10.48_526 + vect__12.52_520;
common/dct.c:274:5: note: ------>vectorizing statement: # DEBUG s07 => s07_13

common/dct.c:274:5: note: ------>vectorizing statement: _14 = tmp[1][i_36];

common/dct.c:274:5: note: transform statement.
common/dct.c:274:5: note: transform load. ncopies = 1
common/dct.c:274:5: note: create vector_type-pointer variable to type: vector(8) short int  vectorizing an array ref: tmp
common/dct.c:274:5: note: created vectp_tmp.55_517
common/dct.c:274:5: note: add new stmt: vect__14.56_514 = MEM[(short int *)vectp_tmp.54_516];
common/dct.c:274:5: note: ------>vectorizing statement: _15 = (int) _14;

common/dct.c:274:5: note: multiple-types.
common/dct.c:274:5: note: transform statement.
common/dct.c:274:5: note: vect_is_simple_use: operand _14
common/dct.c:274:5: note: def_stmt: _14 = tmp[1][i_36];
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: transform conversion. ncopies = 1.
common/dct.c:274:5: note: vect_get_vec_def_for_operand: _14
common/dct.c:274:5: note: vect_is_simple_use: operand _14
common/dct.c:274:5: note: def_stmt: _14 = tmp[1][i_36];
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  _14
  def_stmt =  _14 = tmp[1][i_36];
common/dct.c:274:5: note: add new stmt: vect__15.57_513 = [vec_unpack_lo_expr] vect__14.56_514;
common/dct.c:274:5: note: add new stmt: vect__15.57_512 = [vec_unpack_hi_expr] vect__14.56_514;
common/dct.c:274:5: note: ------>vectorizing statement: _16 = tmp[6][i_36];

common/dct.c:274:5: note: transform statement.
common/dct.c:274:5: note: transform load. ncopies = 1
common/dct.c:274:5: note: create vector_type-pointer variable to type: vector(8) short int  vectorizing an array ref: tmp
common/dct.c:274:5: note: created vectp_tmp.59_511
common/dct.c:274:5: note: add new stmt: vect__16.60_508 = MEM[(short int *)vectp_tmp.58_510];
common/dct.c:274:5: note: ------>vectorizing statement: _17 = (int) _16;

common/dct.c:274:5: note: multiple-types.
common/dct.c:274:5: note: transform statement.
common/dct.c:274:5: note: vect_is_simple_use: operand _16
common/dct.c:274:5: note: def_stmt: _16 = tmp[6][i_36];
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: transform conversion. ncopies = 1.
common/dct.c:274:5: note: vect_get_vec_def_for_operand: _16
common/dct.c:274:5: note: vect_is_simple_use: operand _16
common/dct.c:274:5: note: def_stmt: _16 = tmp[6][i_36];
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  _16
  def_stmt =  _16 = tmp[6][i_36];
common/dct.c:274:5: note: add new stmt: vect__17.61_507 = [vec_unpack_lo_expr] vect__16.60_508;
common/dct.c:274:5: note: add new stmt: vect__17.61_506 = [vec_unpack_hi_expr] vect__16.60_508;
common/dct.c:274:5: note: ------>vectorizing statement: s16_18 = _15 + _17;

common/dct.c:274:5: note: multiple-types.
common/dct.c:274:5: note: transform statement.
common/dct.c:274:5: note: vect_is_simple_use: operand _15
common/dct.c:274:5: note: def_stmt: _15 = (int) _14;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_is_simple_use: operand _17
common/dct.c:274:5: note: def_stmt: _17 = (int) _16;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: transform binary/unary operation.
common/dct.c:274:5: note: vect_get_vec_def_for_operand: _15
common/dct.c:274:5: note: vect_is_simple_use: operand _15
common/dct.c:274:5: note: def_stmt: _15 = (int) _14;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  _15
  def_stmt =  _15 = (int) _14;
common/dct.c:274:5: note: vect_get_vec_def_for_operand: _17
common/dct.c:274:5: note: vect_is_simple_use: operand _17
common/dct.c:274:5: note: def_stmt: _17 = (int) _16;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  _17
  def_stmt =  _17 = (int) _16;
common/dct.c:274:5: note: add new stmt: vect_s16_18.62_505 = vect__15.57_513 + vect__17.61_507;
common/dct.c:274:5: note: add new stmt: vect_s16_18.62_504 = vect__15.57_512 + vect__17.61_506;
common/dct.c:274:5: note: ------>vectorizing statement: # DEBUG s16 => s16_18

common/dct.c:274:5: note: ------>vectorizing statement: _19 = tmp[2][i_36];

common/dct.c:274:5: note: transform statement.
common/dct.c:274:5: note: transform load. ncopies = 1
common/dct.c:274:5: note: create vector_type-pointer variable to type: vector(8) short int  vectorizing an array ref: tmp
common/dct.c:274:5: note: created vectp_tmp.64_503
common/dct.c:274:5: note: add new stmt: vect__19.65_500 = MEM[(short int *)vectp_tmp.63_502];
common/dct.c:274:5: note: ------>vectorizing statement: _20 = (int) _19;

common/dct.c:274:5: note: multiple-types.
common/dct.c:274:5: note: transform statement.
common/dct.c:274:5: note: vect_is_simple_use: operand _19
common/dct.c:274:5: note: def_stmt: _19 = tmp[2][i_36];
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: transform conversion. ncopies = 1.
common/dct.c:274:5: note: vect_get_vec_def_for_operand: _19
common/dct.c:274:5: note: vect_is_simple_use: operand _19
common/dct.c:274:5: note: def_stmt: _19 = tmp[2][i_36];
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  _19
  def_stmt =  _19 = tmp[2][i_36];
common/dct.c:274:5: note: add new stmt: vect__20.66_499 = [vec_unpack_lo_expr] vect__19.65_500;
common/dct.c:274:5: note: add new stmt: vect__20.66_498 = [vec_unpack_hi_expr] vect__19.65_500;
common/dct.c:274:5: note: ------>vectorizing statement: _21 = tmp[5][i_36];

common/dct.c:274:5: note: transform statement.
common/dct.c:274:5: note: transform load. ncopies = 1
common/dct.c:274:5: note: create vector_type-pointer variable to type: vector(8) short int  vectorizing an array ref: tmp
common/dct.c:274:5: note: created vectp_tmp.68_497
common/dct.c:274:5: note: add new stmt: vect__21.69_494 = MEM[(short int *)vectp_tmp.67_496];
common/dct.c:274:5: note: ------>vectorizing statement: _22 = (int) _21;

common/dct.c:274:5: note: multiple-types.
common/dct.c:274:5: note: transform statement.
common/dct.c:274:5: note: vect_is_simple_use: operand _21
common/dct.c:274:5: note: def_stmt: _21 = tmp[5][i_36];
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: transform conversion. ncopies = 1.
common/dct.c:274:5: note: vect_get_vec_def_for_operand: _21
common/dct.c:274:5: note: vect_is_simple_use: operand _21
common/dct.c:274:5: note: def_stmt: _21 = tmp[5][i_36];
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  _21
  def_stmt =  _21 = tmp[5][i_36];
common/dct.c:274:5: note: add new stmt: vect__22.70_493 = [vec_unpack_lo_expr] vect__21.69_494;
common/dct.c:274:5: note: add new stmt: vect__22.70_492 = [vec_unpack_hi_expr] vect__21.69_494;
common/dct.c:274:5: note: ------>vectorizing statement: s25_23 = _20 + _22;

common/dct.c:274:5: note: multiple-types.
common/dct.c:274:5: note: transform statement.
common/dct.c:274:5: note: vect_is_simple_use: operand _20
common/dct.c:274:5: note: def_stmt: _20 = (int) _19;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_is_simple_use: operand _22
common/dct.c:274:5: note: def_stmt: _22 = (int) _21;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: transform binary/unary operation.
common/dct.c:274:5: note: vect_get_vec_def_for_operand: _20
common/dct.c:274:5: note: vect_is_simple_use: operand _20
common/dct.c:274:5: note: def_stmt: _20 = (int) _19;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  _20
  def_stmt =  _20 = (int) _19;
common/dct.c:274:5: note: vect_get_vec_def_for_operand: _22
common/dct.c:274:5: note: vect_is_simple_use: operand _22
common/dct.c:274:5: note: def_stmt: _22 = (int) _21;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  _22
  def_stmt =  _22 = (int) _21;
common/dct.c:274:5: note: add new stmt: vect_s25_23.71_491 = vect__20.66_499 + vect__22.70_493;
common/dct.c:274:5: note: add new stmt: vect_s25_23.71_490 = vect__20.66_498 + vect__22.70_492;
common/dct.c:274:5: note: ------>vectorizing statement: # DEBUG s25 => s25_23

common/dct.c:274:5: note: ------>vectorizing statement: _24 = tmp[3][i_36];

common/dct.c:274:5: note: transform statement.
common/dct.c:274:5: note: transform load. ncopies = 1
common/dct.c:274:5: note: create vector_type-pointer variable to type: vector(8) short int  vectorizing an array ref: tmp
common/dct.c:274:5: note: created vectp_tmp.73_489
common/dct.c:274:5: note: add new stmt: vect__24.74_486 = MEM[(short int *)vectp_tmp.72_488];
common/dct.c:274:5: note: ------>vectorizing statement: _25 = (int) _24;

common/dct.c:274:5: note: multiple-types.
common/dct.c:274:5: note: transform statement.
common/dct.c:274:5: note: vect_is_simple_use: operand _24
common/dct.c:274:5: note: def_stmt: _24 = tmp[3][i_36];
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: transform conversion. ncopies = 1.
common/dct.c:274:5: note: vect_get_vec_def_for_operand: _24
common/dct.c:274:5: note: vect_is_simple_use: operand _24
common/dct.c:274:5: note: def_stmt: _24 = tmp[3][i_36];
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  _24
  def_stmt =  _24 = tmp[3][i_36];
common/dct.c:274:5: note: add new stmt: vect__25.75_485 = [vec_unpack_lo_expr] vect__24.74_486;
common/dct.c:274:5: note: add new stmt: vect__25.75_484 = [vec_unpack_hi_expr] vect__24.74_486;
common/dct.c:274:5: note: ------>vectorizing statement: _26 = tmp[4][i_36];

common/dct.c:274:5: note: transform statement.
common/dct.c:274:5: note: transform load. ncopies = 1
common/dct.c:274:5: note: create vector_type-pointer variable to type: vector(8) short int  vectorizing an array ref: tmp
common/dct.c:274:5: note: created vectp_tmp.77_483
common/dct.c:274:5: note: add new stmt: vect__26.78_480 = MEM[(short int *)vectp_tmp.76_482];
common/dct.c:274:5: note: ------>vectorizing statement: _27 = (int) _26;

common/dct.c:274:5: note: multiple-types.
common/dct.c:274:5: note: transform statement.
common/dct.c:274:5: note: vect_is_simple_use: operand _26
common/dct.c:274:5: note: def_stmt: _26 = tmp[4][i_36];
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: transform conversion. ncopies = 1.
common/dct.c:274:5: note: vect_get_vec_def_for_operand: _26
common/dct.c:274:5: note: vect_is_simple_use: operand _26
common/dct.c:274:5: note: def_stmt: _26 = tmp[4][i_36];
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  _26
  def_stmt =  _26 = tmp[4][i_36];
common/dct.c:274:5: note: add new stmt: vect__27.79_479 = [vec_unpack_lo_expr] vect__26.78_480;
common/dct.c:274:5: note: add new stmt: vect__27.79_478 = [vec_unpack_hi_expr] vect__26.78_480;
common/dct.c:274:5: note: ------>vectorizing statement: s34_28 = _25 + _27;

common/dct.c:274:5: note: multiple-types.
common/dct.c:274:5: note: transform statement.
common/dct.c:274:5: note: vect_is_simple_use: operand _25
common/dct.c:274:5: note: def_stmt: _25 = (int) _24;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_is_simple_use: operand _27
common/dct.c:274:5: note: def_stmt: _27 = (int) _26;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: transform binary/unary operation.
common/dct.c:274:5: note: vect_get_vec_def_for_operand: _25
common/dct.c:274:5: note: vect_is_simple_use: operand _25
common/dct.c:274:5: note: def_stmt: _25 = (int) _24;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  _25
  def_stmt =  _25 = (int) _24;
common/dct.c:274:5: note: vect_get_vec_def_for_operand: _27
common/dct.c:274:5: note: vect_is_simple_use: operand _27
common/dct.c:274:5: note: def_stmt: _27 = (int) _26;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  _27
  def_stmt =  _27 = (int) _26;
common/dct.c:274:5: note: add new stmt: vect_s34_28.80_477 = vect__25.75_485 + vect__27.79_479;
common/dct.c:274:5: note: add new stmt: vect_s34_28.80_476 = vect__25.75_484 + vect__27.79_478;
common/dct.c:274:5: note: ------>vectorizing statement: # DEBUG s34 => s34_28

common/dct.c:274:5: note: ------>vectorizing statement: a0_29 = s07_13 + s34_28;

common/dct.c:274:5: note: multiple-types.
common/dct.c:274:5: note: transform statement.
common/dct.c:274:5: note: vect_is_simple_use: operand s07_13
common/dct.c:274:5: note: def_stmt: s07_13 = _10 + _12;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_is_simple_use: operand s34_28
common/dct.c:274:5: note: def_stmt: s34_28 = _25 + _27;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: transform binary/unary operation.
common/dct.c:274:5: note: vect_get_vec_def_for_operand: s07_13
common/dct.c:274:5: note: vect_is_simple_use: operand s07_13
common/dct.c:274:5: note: def_stmt: s07_13 = _10 + _12;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  s07_13
  def_stmt =  s07_13 = _10 + _12;
common/dct.c:274:5: note: vect_get_vec_def_for_operand: s34_28
common/dct.c:274:5: note: vect_is_simple_use: operand s34_28
common/dct.c:274:5: note: def_stmt: s34_28 = _25 + _27;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  s34_28
  def_stmt =  s34_28 = _25 + _27;
common/dct.c:274:5: note: add new stmt: vect_a0_29.81_475 = vect_s07_13.53_519 + vect_s34_28.80_477;
common/dct.c:274:5: note: add new stmt: vect_a0_29.81_474 = vect_s07_13.53_518 + vect_s34_28.80_476;
common/dct.c:274:5: note: ------>vectorizing statement: # DEBUG a0 => a0_29

common/dct.c:274:5: note: ------>vectorizing statement: a1_30 = s16_18 + s25_23;

common/dct.c:274:5: note: multiple-types.
common/dct.c:274:5: note: transform statement.
common/dct.c:274:5: note: vect_is_simple_use: operand s16_18
common/dct.c:274:5: note: def_stmt: s16_18 = _15 + _17;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_is_simple_use: operand s25_23
common/dct.c:274:5: note: def_stmt: s25_23 = _20 + _22;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: transform binary/unary operation.
common/dct.c:274:5: note: vect_get_vec_def_for_operand: s16_18
common/dct.c:274:5: note: vect_is_simple_use: operand s16_18
common/dct.c:274:5: note: def_stmt: s16_18 = _15 + _17;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  s16_18
  def_stmt =  s16_18 = _15 + _17;
common/dct.c:274:5: note: vect_get_vec_def_for_operand: s25_23
common/dct.c:274:5: note: vect_is_simple_use: operand s25_23
common/dct.c:274:5: note: def_stmt: s25_23 = _20 + _22;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  s25_23
  def_stmt =  s25_23 = _20 + _22;
common/dct.c:274:5: note: add new stmt: vect_a1_30.82_473 = vect_s16_18.62_505 + vect_s25_23.71_491;
common/dct.c:274:5: note: add new stmt: vect_a1_30.82_472 = vect_s16_18.62_504 + vect_s25_23.71_490;
common/dct.c:274:5: note: ------>vectorizing statement: # DEBUG a1 => a1_30

common/dct.c:274:5: note: ------>vectorizing statement: a2_31 = s07_13 - s34_28;

common/dct.c:274:5: note: multiple-types.
common/dct.c:274:5: note: transform statement.
common/dct.c:274:5: note: vect_is_simple_use: operand s07_13
common/dct.c:274:5: note: def_stmt: s07_13 = _10 + _12;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_is_simple_use: operand s34_28
common/dct.c:274:5: note: def_stmt: s34_28 = _25 + _27;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: transform binary/unary operation.
common/dct.c:274:5: note: vect_get_vec_def_for_operand: s07_13
common/dct.c:274:5: note: vect_is_simple_use: operand s07_13
common/dct.c:274:5: note: def_stmt: s07_13 = _10 + _12;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  s07_13
  def_stmt =  s07_13 = _10 + _12;
common/dct.c:274:5: note: vect_get_vec_def_for_operand: s34_28
common/dct.c:274:5: note: vect_is_simple_use: operand s34_28
common/dct.c:274:5: note: def_stmt: s34_28 = _25 + _27;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  s34_28
  def_stmt =  s34_28 = _25 + _27;
common/dct.c:274:5: note: add new stmt: vect_a2_31.83_471 = vect_s07_13.53_519 - vect_s34_28.80_477;
common/dct.c:274:5: note: add new stmt: vect_a2_31.83_470 = vect_s07_13.53_518 - vect_s34_28.80_476;
common/dct.c:274:5: note: ------>vectorizing statement: # DEBUG a2 => a2_31

common/dct.c:274:5: note: ------>vectorizing statement: a3_32 = s16_18 - s25_23;

common/dct.c:274:5: note: multiple-types.
common/dct.c:274:5: note: transform statement.
common/dct.c:274:5: note: vect_is_simple_use: operand s16_18
common/dct.c:274:5: note: def_stmt: s16_18 = _15 + _17;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_is_simple_use: operand s25_23
common/dct.c:274:5: note: def_stmt: s25_23 = _20 + _22;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: transform binary/unary operation.
common/dct.c:274:5: note: vect_get_vec_def_for_operand: s16_18
common/dct.c:274:5: note: vect_is_simple_use: operand s16_18
common/dct.c:274:5: note: def_stmt: s16_18 = _15 + _17;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  s16_18
  def_stmt =  s16_18 = _15 + _17;
common/dct.c:274:5: note: vect_get_vec_def_for_operand: s25_23
common/dct.c:274:5: note: vect_is_simple_use: operand s25_23
common/dct.c:274:5: note: def_stmt: s25_23 = _20 + _22;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  s25_23
  def_stmt =  s25_23 = _20 + _22;
common/dct.c:274:5: note: add new stmt: vect_a3_32.84_469 = vect_s16_18.62_505 - vect_s25_23.71_491;
common/dct.c:274:5: note: add new stmt: vect_a3_32.84_468 = vect_s16_18.62_504 - vect_s25_23.71_490;
common/dct.c:274:5: note: ------>vectorizing statement: # DEBUG a3 => a3_32

common/dct.c:274:5: note: ------>vectorizing statement: d07_35 = _10 - _12;

common/dct.c:274:5: note: multiple-types.
common/dct.c:274:5: note: transform statement.
common/dct.c:274:5: note: vect_is_simple_use: operand _10
common/dct.c:274:5: note: def_stmt: _10 = (int) _9;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_is_simple_use: operand _12
common/dct.c:274:5: note: def_stmt: _12 = (int) _11;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: transform binary/unary operation.
common/dct.c:274:5: note: vect_get_vec_def_for_operand: _10
common/dct.c:274:5: note: vect_is_simple_use: operand _10
common/dct.c:274:5: note: def_stmt: _10 = (int) _9;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  _10
  def_stmt =  _10 = (int) _9;
common/dct.c:274:5: note: vect_get_vec_def_for_operand: _12
common/dct.c:274:5: note: vect_is_simple_use: operand _12
common/dct.c:274:5: note: def_stmt: _12 = (int) _11;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  _12
  def_stmt =  _12 = (int) _11;
common/dct.c:274:5: note: add new stmt: vect_d07_35.85_467 = vect__10.48_527 - vect__12.52_521;
common/dct.c:274:5: note: add new stmt: vect_d07_35.85_466 = vect__10.48_526 - vect__12.52_520;
common/dct.c:274:5: note: ------>vectorizing statement: # DEBUG d07 => d07_35

common/dct.c:274:5: note: ------>vectorizing statement: d16_37 = _15 - _17;

common/dct.c:274:5: note: multiple-types.
common/dct.c:274:5: note: transform statement.
common/dct.c:274:5: note: vect_is_simple_use: operand _15
common/dct.c:274:5: note: def_stmt: _15 = (int) _14;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_is_simple_use: operand _17
common/dct.c:274:5: note: def_stmt: _17 = (int) _16;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: transform binary/unary operation.
common/dct.c:274:5: note: vect_get_vec_def_for_operand: _15
common/dct.c:274:5: note: vect_is_simple_use: operand _15
common/dct.c:274:5: note: def_stmt: _15 = (int) _14;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  _15
  def_stmt =  _15 = (int) _14;
common/dct.c:274:5: note: vect_get_vec_def_for_operand: _17
common/dct.c:274:5: note: vect_is_simple_use: operand _17
common/dct.c:274:5: note: def_stmt: _17 = (int) _16;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  _17
  def_stmt =  _17 = (int) _16;
common/dct.c:274:5: note: add new stmt: vect_d16_37.86_465 = vect__15.57_513 - vect__17.61_507;
common/dct.c:274:5: note: add new stmt: vect_d16_37.86_464 = vect__15.57_512 - vect__17.61_506;
common/dct.c:274:5: note: ------>vectorizing statement: # DEBUG d16 => d16_37

common/dct.c:274:5: note: ------>vectorizing statement: d25_38 = _20 - _22;

common/dct.c:274:5: note: multiple-types.
common/dct.c:274:5: note: transform statement.
common/dct.c:274:5: note: vect_is_simple_use: operand _20
common/dct.c:274:5: note: def_stmt: _20 = (int) _19;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_is_simple_use: operand _22
common/dct.c:274:5: note: def_stmt: _22 = (int) _21;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: transform binary/unary operation.
common/dct.c:274:5: note: vect_get_vec_def_for_operand: _20
common/dct.c:274:5: note: vect_is_simple_use: operand _20
common/dct.c:274:5: note: def_stmt: _20 = (int) _19;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  _20
  def_stmt =  _20 = (int) _19;
common/dct.c:274:5: note: vect_get_vec_def_for_operand: _22
common/dct.c:274:5: note: vect_is_simple_use: operand _22
common/dct.c:274:5: note: def_stmt: _22 = (int) _21;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  _22
  def_stmt =  _22 = (int) _21;
common/dct.c:274:5: note: add new stmt: vect_d25_38.87_463 = vect__20.66_499 - vect__22.70_493;
common/dct.c:274:5: note: add new stmt: vect_d25_38.87_462 = vect__20.66_498 - vect__22.70_492;
common/dct.c:274:5: note: ------>vectorizing statement: # DEBUG d25 => d25_38

common/dct.c:274:5: note: ------>vectorizing statement: d34_39 = _25 - _27;

common/dct.c:274:5: note: multiple-types.
common/dct.c:274:5: note: transform statement.
common/dct.c:274:5: note: vect_is_simple_use: operand _25
common/dct.c:274:5: note: def_stmt: _25 = (int) _24;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_is_simple_use: operand _27
common/dct.c:274:5: note: def_stmt: _27 = (int) _26;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: transform binary/unary operation.
common/dct.c:274:5: note: vect_get_vec_def_for_operand: _25
common/dct.c:274:5: note: vect_is_simple_use: operand _25
common/dct.c:274:5: note: def_stmt: _25 = (int) _24;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  _25
  def_stmt =  _25 = (int) _24;
common/dct.c:274:5: note: vect_get_vec_def_for_operand: _27
common/dct.c:274:5: note: vect_is_simple_use: operand _27
common/dct.c:274:5: note: def_stmt: _27 = (int) _26;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  _27
  def_stmt =  _27 = (int) _26;
common/dct.c:274:5: note: add new stmt: vect_d34_39.88_461 = vect__25.75_485 - vect__27.79_479;
common/dct.c:274:5: note: add new stmt: vect_d34_39.88_460 = vect__25.75_484 - vect__27.79_478;
common/dct.c:274:5: note: ------>vectorizing statement: # DEBUG d34 => d34_39

common/dct.c:274:5: note: ------>vectorizing statement: _40 = d16_37 + d25_38;

common/dct.c:274:5: note: multiple-types.
common/dct.c:274:5: note: transform statement.
common/dct.c:274:5: note: vect_is_simple_use: operand d16_37
common/dct.c:274:5: note: def_stmt: d16_37 = _15 - _17;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_is_simple_use: operand d25_38
common/dct.c:274:5: note: def_stmt: d25_38 = _20 - _22;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: transform binary/unary operation.
common/dct.c:274:5: note: vect_get_vec_def_for_operand: d16_37
common/dct.c:274:5: note: vect_is_simple_use: operand d16_37
common/dct.c:274:5: note: def_stmt: d16_37 = _15 - _17;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  d16_37
  def_stmt =  d16_37 = _15 - _17;
common/dct.c:274:5: note: vect_get_vec_def_for_operand: d25_38
common/dct.c:274:5: note: vect_is_simple_use: operand d25_38
common/dct.c:274:5: note: def_stmt: d25_38 = _20 - _22;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  d25_38
  def_stmt =  d25_38 = _20 - _22;
common/dct.c:274:5: note: add new stmt: vect__40.89_459 = vect_d16_37.86_465 + vect_d25_38.87_463;
common/dct.c:274:5: note: add new stmt: vect__40.89_458 = vect_d16_37.86_464 + vect_d25_38.87_462;
common/dct.c:274:5: note: ------>vectorizing statement: _41 = d07_35 >> 1;

common/dct.c:274:5: note: multiple-types.
common/dct.c:274:5: note: transform statement.
common/dct.c:274:5: note: vect_is_simple_use: operand d07_35
common/dct.c:274:5: note: def_stmt: d07_35 = _10 - _12;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_is_simple_use: operand 1
common/dct.c:274:5: note: vector/scalar shift/rotate found.
common/dct.c:274:5: note: transform binary/unary operation.
common/dct.c:274:5: note: operand 1 using scalar mode.
common/dct.c:274:5: note: vect_get_vec_def_for_operand: d07_35
common/dct.c:274:5: note: vect_is_simple_use: operand d07_35
common/dct.c:274:5: note: def_stmt: d07_35 = _10 - _12;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  d07_35
  def_stmt =  d07_35 = _10 - _12;
common/dct.c:274:5: note: add new stmt: vect__41.90_457 = vect_d07_35.85_467 >> 1;
common/dct.c:274:5: note: add new stmt: vect__41.90_456 = vect_d07_35.85_466 >> 1;
common/dct.c:274:5: note: ------>vectorizing statement: _42 = d07_35 + _41;

common/dct.c:274:5: note: multiple-types.
common/dct.c:274:5: note: transform statement.
common/dct.c:274:5: note: vect_is_simple_use: operand d07_35
common/dct.c:274:5: note: def_stmt: d07_35 = _10 - _12;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_is_simple_use: operand _41
common/dct.c:274:5: note: def_stmt: _41 = d07_35 >> 1;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: transform binary/unary operation.
common/dct.c:274:5: note: vect_get_vec_def_for_operand: d07_35
common/dct.c:274:5: note: vect_is_simple_use: operand d07_35
common/dct.c:274:5: note: def_stmt: d07_35 = _10 - _12;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  d07_35
  def_stmt =  d07_35 = _10 - _12;
common/dct.c:274:5: note: vect_get_vec_def_for_operand: _41
common/dct.c:274:5: note: vect_is_simple_use: operand _41
common/dct.c:274:5: note: def_stmt: _41 = d07_35 >> 1;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  _41
  def_stmt =  _41 = d07_35 >> 1;
common/dct.c:274:5: note: add new stmt: vect__42.91_455 = vect_d07_35.85_467 + vect__41.90_457;
common/dct.c:274:5: note: add new stmt: vect__42.91_454 = vect_d07_35.85_466 + vect__41.90_456;
common/dct.c:274:5: note: ------>vectorizing statement: a4_43 = _40 + _42;

common/dct.c:274:5: note: multiple-types.
common/dct.c:274:5: note: transform statement.
common/dct.c:274:5: note: vect_is_simple_use: operand _40
common/dct.c:274:5: note: def_stmt: _40 = d16_37 + d25_38;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_is_simple_use: operand _42
common/dct.c:274:5: note: def_stmt: _42 = d07_35 + _41;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: transform binary/unary operation.
common/dct.c:274:5: note: vect_get_vec_def_for_operand: _40
common/dct.c:274:5: note: vect_is_simple_use: operand _40
common/dct.c:274:5: note: def_stmt: _40 = d16_37 + d25_38;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  _40
  def_stmt =  _40 = d16_37 + d25_38;
common/dct.c:274:5: note: vect_get_vec_def_for_operand: _42
common/dct.c:274:5: note: vect_is_simple_use: operand _42
common/dct.c:274:5: note: def_stmt: _42 = d07_35 + _41;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  _42
  def_stmt =  _42 = d07_35 + _41;
common/dct.c:274:5: note: add new stmt: vect_a4_43.92_453 = vect__40.89_459 + vect__42.91_455;
common/dct.c:274:5: note: add new stmt: vect_a4_43.92_452 = vect__40.89_458 + vect__42.91_454;
common/dct.c:274:5: note: ------>vectorizing statement: # DEBUG a4 => a4_43

common/dct.c:274:5: note: ------>vectorizing statement: _44 = d07_35 - d34_39;

common/dct.c:274:5: note: multiple-types.
common/dct.c:274:5: note: transform statement.
common/dct.c:274:5: note: vect_is_simple_use: operand d07_35
common/dct.c:274:5: note: def_stmt: d07_35 = _10 - _12;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_is_simple_use: operand d34_39
common/dct.c:274:5: note: def_stmt: d34_39 = _25 - _27;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: transform binary/unary operation.
common/dct.c:274:5: note: vect_get_vec_def_for_operand: d07_35
common/dct.c:274:5: note: vect_is_simple_use: operand d07_35
common/dct.c:274:5: note: def_stmt: d07_35 = _10 - _12;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  d07_35
  def_stmt =  d07_35 = _10 - _12;
common/dct.c:274:5: note: vect_get_vec_def_for_operand: d34_39
common/dct.c:274:5: note: vect_is_simple_use: operand d34_39
common/dct.c:274:5: note: def_stmt: d34_39 = _25 - _27;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  d34_39
  def_stmt =  d34_39 = _25 - _27;
common/dct.c:274:5: note: add new stmt: vect__44.93_451 = vect_d07_35.85_467 - vect_d34_39.88_461;
common/dct.c:274:5: note: add new stmt: vect__44.93_450 = vect_d07_35.85_466 - vect_d34_39.88_460;
common/dct.c:274:5: note: ------>vectorizing statement: _45 = d25_38 >> 1;

common/dct.c:274:5: note: multiple-types.
common/dct.c:274:5: note: transform statement.
common/dct.c:274:5: note: vect_is_simple_use: operand d25_38
common/dct.c:274:5: note: def_stmt: d25_38 = _20 - _22;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_is_simple_use: operand 1
common/dct.c:274:5: note: vector/scalar shift/rotate found.
common/dct.c:274:5: note: transform binary/unary operation.
common/dct.c:274:5: note: operand 1 using scalar mode.
common/dct.c:274:5: note: vect_get_vec_def_for_operand: d25_38
common/dct.c:274:5: note: vect_is_simple_use: operand d25_38
common/dct.c:274:5: note: def_stmt: d25_38 = _20 - _22;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  d25_38
  def_stmt =  d25_38 = _20 - _22;
common/dct.c:274:5: note: add new stmt: vect__45.94_449 = vect_d25_38.87_463 >> 1;
common/dct.c:274:5: note: add new stmt: vect__45.94_448 = vect_d25_38.87_462 >> 1;
common/dct.c:274:5: note: ------>vectorizing statement: _46 = d25_38 + _45;

common/dct.c:274:5: note: multiple-types.
common/dct.c:274:5: note: transform statement.
common/dct.c:274:5: note: vect_is_simple_use: operand d25_38
common/dct.c:274:5: note: def_stmt: d25_38 = _20 - _22;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_is_simple_use: operand _45
common/dct.c:274:5: note: def_stmt: _45 = d25_38 >> 1;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: transform binary/unary operation.
common/dct.c:274:5: note: vect_get_vec_def_for_operand: d25_38
common/dct.c:274:5: note: vect_is_simple_use: operand d25_38
common/dct.c:274:5: note: def_stmt: d25_38 = _20 - _22;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  d25_38
  def_stmt =  d25_38 = _20 - _22;
common/dct.c:274:5: note: vect_get_vec_def_for_operand: _45
common/dct.c:274:5: note: vect_is_simple_use: operand _45
common/dct.c:274:5: note: def_stmt: _45 = d25_38 >> 1;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  _45
  def_stmt =  _45 = d25_38 >> 1;
common/dct.c:274:5: note: add new stmt: vect__46.95_447 = vect_d25_38.87_463 + vect__45.94_449;
common/dct.c:274:5: note: add new stmt: vect__46.95_446 = vect_d25_38.87_462 + vect__45.94_448;
common/dct.c:274:5: note: ------>vectorizing statement: a5_47 = _44 - _46;

common/dct.c:274:5: note: multiple-types.
common/dct.c:274:5: note: transform statement.
common/dct.c:274:5: note: vect_is_simple_use: operand _44
common/dct.c:274:5: note: def_stmt: _44 = d07_35 - d34_39;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_is_simple_use: operand _46
common/dct.c:274:5: note: def_stmt: _46 = d25_38 + _45;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: transform binary/unary operation.
common/dct.c:274:5: note: vect_get_vec_def_for_operand: _44
common/dct.c:274:5: note: vect_is_simple_use: operand _44
common/dct.c:274:5: note: def_stmt: _44 = d07_35 - d34_39;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  _44
  def_stmt =  _44 = d07_35 - d34_39;
common/dct.c:274:5: note: vect_get_vec_def_for_operand: _46
common/dct.c:274:5: note: vect_is_simple_use: operand _46
common/dct.c:274:5: note: def_stmt: _46 = d25_38 + _45;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  _46
  def_stmt =  _46 = d25_38 + _45;
common/dct.c:274:5: note: add new stmt: vect_a5_47.96_445 = vect__44.93_451 - vect__46.95_447;
common/dct.c:274:5: note: add new stmt: vect_a5_47.96_444 = vect__44.93_450 - vect__46.95_446;
common/dct.c:274:5: note: ------>vectorizing statement: # DEBUG a5 => a5_47

common/dct.c:274:5: note: ------>vectorizing statement: _48 = d07_35 + d34_39;

common/dct.c:274:5: note: multiple-types.
common/dct.c:274:5: note: transform statement.
common/dct.c:274:5: note: vect_is_simple_use: operand d07_35
common/dct.c:274:5: note: def_stmt: d07_35 = _10 - _12;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_is_simple_use: operand d34_39
common/dct.c:274:5: note: def_stmt: d34_39 = _25 - _27;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: transform binary/unary operation.
common/dct.c:274:5: note: vect_get_vec_def_for_operand: d07_35
common/dct.c:274:5: note: vect_is_simple_use: operand d07_35
common/dct.c:274:5: note: def_stmt: d07_35 = _10 - _12;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  d07_35
  def_stmt =  d07_35 = _10 - _12;
common/dct.c:274:5: note: vect_get_vec_def_for_operand: d34_39
common/dct.c:274:5: note: vect_is_simple_use: operand d34_39
common/dct.c:274:5: note: def_stmt: d34_39 = _25 - _27;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  d34_39
  def_stmt =  d34_39 = _25 - _27;
common/dct.c:274:5: note: add new stmt: vect__48.97_443 = vect_d07_35.85_467 + vect_d34_39.88_461;
common/dct.c:274:5: note: add new stmt: vect__48.97_442 = vect_d07_35.85_466 + vect_d34_39.88_460;
common/dct.c:274:5: note: ------>vectorizing statement: _49 = d16_37 >> 1;

common/dct.c:274:5: note: multiple-types.
common/dct.c:274:5: note: transform statement.
common/dct.c:274:5: note: vect_is_simple_use: operand d16_37
common/dct.c:274:5: note: def_stmt: d16_37 = _15 - _17;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_is_simple_use: operand 1
common/dct.c:274:5: note: vector/scalar shift/rotate found.
common/dct.c:274:5: note: transform binary/unary operation.
common/dct.c:274:5: note: operand 1 using scalar mode.
common/dct.c:274:5: note: vect_get_vec_def_for_operand: d16_37
common/dct.c:274:5: note: vect_is_simple_use: operand d16_37
common/dct.c:274:5: note: def_stmt: d16_37 = _15 - _17;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  d16_37
  def_stmt =  d16_37 = _15 - _17;
common/dct.c:274:5: note: add new stmt: vect__49.98_441 = vect_d16_37.86_465 >> 1;
common/dct.c:274:5: note: add new stmt: vect__49.98_440 = vect_d16_37.86_464 >> 1;
common/dct.c:274:5: note: ------>vectorizing statement: _50 = d16_37 + _49;

common/dct.c:274:5: note: multiple-types.
common/dct.c:274:5: note: transform statement.
common/dct.c:274:5: note: vect_is_simple_use: operand d16_37
common/dct.c:274:5: note: def_stmt: d16_37 = _15 - _17;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_is_simple_use: operand _49
common/dct.c:274:5: note: def_stmt: _49 = d16_37 >> 1;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: transform binary/unary operation.
common/dct.c:274:5: note: vect_get_vec_def_for_operand: d16_37
common/dct.c:274:5: note: vect_is_simple_use: operand d16_37
common/dct.c:274:5: note: def_stmt: d16_37 = _15 - _17;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  d16_37
  def_stmt =  d16_37 = _15 - _17;
common/dct.c:274:5: note: vect_get_vec_def_for_operand: _49
common/dct.c:274:5: note: vect_is_simple_use: operand _49
common/dct.c:274:5: note: def_stmt: _49 = d16_37 >> 1;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  _49
  def_stmt =  _49 = d16_37 >> 1;
common/dct.c:274:5: note: add new stmt: vect__50.99_439 = vect_d16_37.86_465 + vect__49.98_441;
common/dct.c:274:5: note: add new stmt: vect__50.99_438 = vect_d16_37.86_464 + vect__49.98_440;
common/dct.c:274:5: note: ------>vectorizing statement: a6_51 = _48 - _50;

common/dct.c:274:5: note: multiple-types.
common/dct.c:274:5: note: transform statement.
common/dct.c:274:5: note: vect_is_simple_use: operand _48
common/dct.c:274:5: note: def_stmt: _48 = d07_35 + d34_39;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_is_simple_use: operand _50
common/dct.c:274:5: note: def_stmt: _50 = d16_37 + _49;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: transform binary/unary operation.
common/dct.c:274:5: note: vect_get_vec_def_for_operand: _48
common/dct.c:274:5: note: vect_is_simple_use: operand _48
common/dct.c:274:5: note: def_stmt: _48 = d07_35 + d34_39;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  _48
  def_stmt =  _48 = d07_35 + d34_39;
common/dct.c:274:5: note: vect_get_vec_def_for_operand: _50
common/dct.c:274:5: note: vect_is_simple_use: operand _50
common/dct.c:274:5: note: def_stmt: _50 = d16_37 + _49;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  _50
  def_stmt =  _50 = d16_37 + _49;
common/dct.c:274:5: note: add new stmt: vect_a6_51.100_437 = vect__48.97_443 - vect__50.99_439;
common/dct.c:274:5: note: add new stmt: vect_a6_51.100_436 = vect__48.97_442 - vect__50.99_438;
common/dct.c:274:5: note: ------>vectorizing statement: # DEBUG a6 => a6_51

common/dct.c:274:5: note: ------>vectorizing statement: _52 = d16_37 - d25_38;

common/dct.c:274:5: note: multiple-types.
common/dct.c:274:5: note: transform statement.
common/dct.c:274:5: note: vect_is_simple_use: operand d16_37
common/dct.c:274:5: note: def_stmt: d16_37 = _15 - _17;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_is_simple_use: operand d25_38
common/dct.c:274:5: note: def_stmt: d25_38 = _20 - _22;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: transform binary/unary operation.
common/dct.c:274:5: note: vect_get_vec_def_for_operand: d16_37
common/dct.c:274:5: note: vect_is_simple_use: operand d16_37
common/dct.c:274:5: note: def_stmt: d16_37 = _15 - _17;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  d16_37
  def_stmt =  d16_37 = _15 - _17;
common/dct.c:274:5: note: vect_get_vec_def_for_operand: d25_38
common/dct.c:274:5: note: vect_is_simple_use: operand d25_38
common/dct.c:274:5: note: def_stmt: d25_38 = _20 - _22;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  d25_38
  def_stmt =  d25_38 = _20 - _22;
common/dct.c:274:5: note: add new stmt: vect__52.101_435 = vect_d16_37.86_465 - vect_d25_38.87_463;
common/dct.c:274:5: note: add new stmt: vect__52.101_434 = vect_d16_37.86_464 - vect_d25_38.87_462;
common/dct.c:274:5: note: ------>vectorizing statement: _53 = d34_39 >> 1;

common/dct.c:274:5: note: multiple-types.
common/dct.c:274:5: note: transform statement.
common/dct.c:274:5: note: vect_is_simple_use: operand d34_39
common/dct.c:274:5: note: def_stmt: d34_39 = _25 - _27;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_is_simple_use: operand 1
common/dct.c:274:5: note: vector/scalar shift/rotate found.
common/dct.c:274:5: note: transform binary/unary operation.
common/dct.c:274:5: note: operand 1 using scalar mode.
common/dct.c:274:5: note: vect_get_vec_def_for_operand: d34_39
common/dct.c:274:5: note: vect_is_simple_use: operand d34_39
common/dct.c:274:5: note: def_stmt: d34_39 = _25 - _27;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  d34_39
  def_stmt =  d34_39 = _25 - _27;
common/dct.c:274:5: note: add new stmt: vect__53.102_433 = vect_d34_39.88_461 >> 1;
common/dct.c:274:5: note: add new stmt: vect__53.102_432 = vect_d34_39.88_460 >> 1;
common/dct.c:274:5: note: ------>vectorizing statement: _54 = d34_39 + _53;

common/dct.c:274:5: note: multiple-types.
common/dct.c:274:5: note: transform statement.
common/dct.c:274:5: note: vect_is_simple_use: operand d34_39
common/dct.c:274:5: note: def_stmt: d34_39 = _25 - _27;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_is_simple_use: operand _53
common/dct.c:274:5: note: def_stmt: _53 = d34_39 >> 1;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: transform binary/unary operation.
common/dct.c:274:5: note: vect_get_vec_def_for_operand: d34_39
common/dct.c:274:5: note: vect_is_simple_use: operand d34_39
common/dct.c:274:5: note: def_stmt: d34_39 = _25 - _27;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  d34_39
  def_stmt =  d34_39 = _25 - _27;
common/dct.c:274:5: note: vect_get_vec_def_for_operand: _53
common/dct.c:274:5: note: vect_is_simple_use: operand _53
common/dct.c:274:5: note: def_stmt: _53 = d34_39 >> 1;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  _53
  def_stmt =  _53 = d34_39 >> 1;
common/dct.c:274:5: note: add new stmt: vect__54.103_431 = vect_d34_39.88_461 + vect__53.102_433;
common/dct.c:274:5: note: add new stmt: vect__54.103_430 = vect_d34_39.88_460 + vect__53.102_432;
common/dct.c:274:5: note: ------>vectorizing statement: a7_55 = _52 + _54;

common/dct.c:274:5: note: multiple-types.
common/dct.c:274:5: note: transform statement.
common/dct.c:274:5: note: vect_is_simple_use: operand _52
common/dct.c:274:5: note: def_stmt: _52 = d16_37 - d25_38;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_is_simple_use: operand _54
common/dct.c:274:5: note: def_stmt: _54 = d34_39 + _53;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: transform binary/unary operation.
common/dct.c:274:5: note: vect_get_vec_def_for_operand: _52
common/dct.c:274:5: note: vect_is_simple_use: operand _52
common/dct.c:274:5: note: def_stmt: _52 = d16_37 - d25_38;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  _52
  def_stmt =  _52 = d16_37 - d25_38;
common/dct.c:274:5: note: vect_get_vec_def_for_operand: _54
common/dct.c:274:5: note: vect_is_simple_use: operand _54
common/dct.c:274:5: note: def_stmt: _54 = d34_39 + _53;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  _54
  def_stmt =  _54 = d34_39 + _53;
common/dct.c:274:5: note: add new stmt: vect_a7_55.104_429 = vect__52.101_435 + vect__54.103_431;
common/dct.c:274:5: note: add new stmt: vect_a7_55.104_428 = vect__52.101_434 + vect__54.103_430;
common/dct.c:274:5: note: ------>vectorizing statement: # DEBUG a7 => a7_55

common/dct.c:274:5: note: ------>vectorizing statement: _56 = (unsigned short) a0_29;

common/dct.c:274:5: note: transform statement.
common/dct.c:274:5: note: vect_is_simple_use: operand a0_29
common/dct.c:274:5: note: def_stmt: a0_29 = s07_13 + s34_28;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: transform conversion. ncopies = 1.
common/dct.c:274:5: note: vect_get_vec_def_for_operand: a0_29
common/dct.c:274:5: note: vect_is_simple_use: operand a0_29
common/dct.c:274:5: note: def_stmt: a0_29 = s07_13 + s34_28;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  a0_29
  def_stmt =  a0_29 = s07_13 + s34_28;
common/dct.c:274:5: note: add new stmt: vect__56.105_427 = VEC_PACK_TRUNC_EXPR <vect_a0_29.81_475, vect_a0_29.81_474>;
common/dct.c:274:5: note: ------>vectorizing statement: _57 = (unsigned short) a1_30;

common/dct.c:274:5: note: transform statement.
common/dct.c:274:5: note: vect_is_simple_use: operand a1_30
common/dct.c:274:5: note: def_stmt: a1_30 = s16_18 + s25_23;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: transform conversion. ncopies = 1.
common/dct.c:274:5: note: vect_get_vec_def_for_operand: a1_30
common/dct.c:274:5: note: vect_is_simple_use: operand a1_30
common/dct.c:274:5: note: def_stmt: a1_30 = s16_18 + s25_23;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  a1_30
  def_stmt =  a1_30 = s16_18 + s25_23;
common/dct.c:274:5: note: add new stmt: vect__57.106_426 = VEC_PACK_TRUNC_EXPR <vect_a1_30.82_473, vect_a1_30.82_472>;
common/dct.c:274:5: note: ------>vectorizing statement: _58 = _56 + _57;

common/dct.c:274:5: note: transform statement.
common/dct.c:274:5: note: vect_is_simple_use: operand _56
common/dct.c:274:5: note: def_stmt: _56 = (unsigned short) a0_29;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_is_simple_use: operand _57
common/dct.c:274:5: note: def_stmt: _57 = (unsigned short) a1_30;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: transform binary/unary operation.
common/dct.c:274:5: note: vect_get_vec_def_for_operand: _56
common/dct.c:274:5: note: vect_is_simple_use: operand _56
common/dct.c:274:5: note: def_stmt: _56 = (unsigned short) a0_29;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  _56
  def_stmt =  _56 = (unsigned short) a0_29;
common/dct.c:274:5: note: vect_get_vec_def_for_operand: _57
common/dct.c:274:5: note: vect_is_simple_use: operand _57
common/dct.c:274:5: note: def_stmt: _57 = (unsigned short) a1_30;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  _57
  def_stmt =  _57 = (unsigned short) a1_30;
common/dct.c:274:5: note: add new stmt: vect__58.107_425 = vect__56.105_427 + vect__57.106_426;
common/dct.c:274:5: note: ------>vectorizing statement: _59 = (short int) _58;

common/dct.c:274:5: note: transform statement.
common/dct.c:274:5: note: vect_is_simple_use: operand _58
common/dct.c:274:5: note: def_stmt: _58 = _56 + _57;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: transform assignment.
common/dct.c:274:5: note: vect_get_vec_def_for_operand: _58
common/dct.c:274:5: note: vect_is_simple_use: operand _58
common/dct.c:274:5: note: def_stmt: _58 = _56 + _57;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  _58
  def_stmt =  _58 = _56 + _57;
common/dct.c:274:5: note: add new stmt: vect__59.108_424 = VIEW_CONVERT_EXPR<vector(8) short int>(vect__58.107_425);
common/dct.c:274:5: note: ------>vectorizing statement: tmp[0][i_36] = _59;

common/dct.c:274:5: note: transform statement.
common/dct.c:274:5: note: vect_is_simple_use: operand _59
common/dct.c:274:5: note: def_stmt: _59 = (short int) _58;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: transform store. ncopies = 1
common/dct.c:274:5: note: vect_get_vec_def_for_operand: _59
common/dct.c:274:5: note: vect_is_simple_use: operand _59
common/dct.c:274:5: note: def_stmt: _59 = (short int) _58;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  _59
  def_stmt =  _59 = (short int) _58;
common/dct.c:274:5: note: create vector_type-pointer variable to type: vector(8) short int  vectorizing an array ref: tmp
Applying pattern match.pd:49, generic-match.c:4015
common/dct.c:274:5: note: created vectp_tmp.110_423
common/dct.c:274:5: note: add new stmt: MEM[(short int *)vectp_tmp.109_422] = vect__59.108_424;
common/dct.c:274:5: note: ------>vectorizing statement: _61 = a7_55 >> 2;

common/dct.c:274:5: note: multiple-types.
common/dct.c:274:5: note: transform statement.
common/dct.c:274:5: note: vect_is_simple_use: operand a7_55
common/dct.c:274:5: note: def_stmt: a7_55 = _52 + _54;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_is_simple_use: operand 2
common/dct.c:274:5: note: vector/scalar shift/rotate found.
common/dct.c:274:5: note: transform binary/unary operation.
common/dct.c:274:5: note: operand 1 using scalar mode.
common/dct.c:274:5: note: vect_get_vec_def_for_operand: a7_55
common/dct.c:274:5: note: vect_is_simple_use: operand a7_55
common/dct.c:274:5: note: def_stmt: a7_55 = _52 + _54;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  a7_55
  def_stmt =  a7_55 = _52 + _54;
common/dct.c:274:5: note: add new stmt: vect__61.111_60 = vect_a7_55.104_429 >> 2;
common/dct.c:274:5: note: add new stmt: vect__61.111_419 = vect_a7_55.104_428 >> 2;
common/dct.c:274:5: note: ------>vectorizing statement: _62 = (unsigned short) _61;

common/dct.c:274:5: note: transform statement.
common/dct.c:274:5: note: vect_is_simple_use: operand _61
common/dct.c:274:5: note: def_stmt: _61 = a7_55 >> 2;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: transform conversion. ncopies = 1.
common/dct.c:274:5: note: vect_get_vec_def_for_operand: _61
common/dct.c:274:5: note: vect_is_simple_use: operand _61
common/dct.c:274:5: note: def_stmt: _61 = a7_55 >> 2;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  _61
  def_stmt =  _61 = a7_55 >> 2;
common/dct.c:274:5: note: add new stmt: vect__62.112_418 = VEC_PACK_TRUNC_EXPR <vect__61.111_60, vect__61.111_419>;
common/dct.c:274:5: note: ------>vectorizing statement: _63 = (unsigned short) a4_43;

common/dct.c:274:5: note: transform statement.
common/dct.c:274:5: note: vect_is_simple_use: operand a4_43
common/dct.c:274:5: note: def_stmt: a4_43 = _40 + _42;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: transform conversion. ncopies = 1.
common/dct.c:274:5: note: vect_get_vec_def_for_operand: a4_43
common/dct.c:274:5: note: vect_is_simple_use: operand a4_43
common/dct.c:274:5: note: def_stmt: a4_43 = _40 + _42;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  a4_43
  def_stmt =  a4_43 = _40 + _42;
common/dct.c:274:5: note: add new stmt: vect__63.113_417 = VEC_PACK_TRUNC_EXPR <vect_a4_43.92_453, vect_a4_43.92_452>;
common/dct.c:274:5: note: ------>vectorizing statement: _64 = _62 + _63;

common/dct.c:274:5: note: transform statement.
common/dct.c:274:5: note: vect_is_simple_use: operand _62
common/dct.c:274:5: note: def_stmt: _62 = (unsigned short) _61;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_is_simple_use: operand _63
common/dct.c:274:5: note: def_stmt: _63 = (unsigned short) a4_43;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: transform binary/unary operation.
common/dct.c:274:5: note: vect_get_vec_def_for_operand: _62
common/dct.c:274:5: note: vect_is_simple_use: operand _62
common/dct.c:274:5: note: def_stmt: _62 = (unsigned short) _61;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  _62
  def_stmt =  _62 = (unsigned short) _61;
common/dct.c:274:5: note: vect_get_vec_def_for_operand: _63
common/dct.c:274:5: note: vect_is_simple_use: operand _63
common/dct.c:274:5: note: def_stmt: _63 = (unsigned short) a4_43;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  _63
  def_stmt =  _63 = (unsigned short) a4_43;
common/dct.c:274:5: note: add new stmt: vect__64.114_416 = vect__62.112_418 + vect__63.113_417;
common/dct.c:274:5: note: ------>vectorizing statement: _65 = (short int) _64;

common/dct.c:274:5: note: transform statement.
common/dct.c:274:5: note: vect_is_simple_use: operand _64
common/dct.c:274:5: note: def_stmt: _64 = _62 + _63;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: transform assignment.
common/dct.c:274:5: note: vect_get_vec_def_for_operand: _64
common/dct.c:274:5: note: vect_is_simple_use: operand _64
common/dct.c:274:5: note: def_stmt: _64 = _62 + _63;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  _64
  def_stmt =  _64 = _62 + _63;
common/dct.c:274:5: note: add new stmt: vect__65.115_415 = VIEW_CONVERT_EXPR<vector(8) short int>(vect__64.114_416);
common/dct.c:274:5: note: ------>vectorizing statement: tmp[1][i_36] = _65;

common/dct.c:274:5: note: transform statement.
common/dct.c:274:5: note: vect_is_simple_use: operand _65
common/dct.c:274:5: note: def_stmt: _65 = (short int) _64;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: transform store. ncopies = 1
common/dct.c:274:5: note: vect_get_vec_def_for_operand: _65
common/dct.c:274:5: note: vect_is_simple_use: operand _65
common/dct.c:274:5: note: def_stmt: _65 = (short int) _64;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  _65
  def_stmt =  _65 = (short int) _64;
common/dct.c:274:5: note: create vector_type-pointer variable to type: vector(8) short int  vectorizing an array ref: tmp
common/dct.c:274:5: note: created vectp_tmp.117_414
common/dct.c:274:5: note: add new stmt: MEM[(short int *)vectp_tmp.116_413] = vect__65.115_415;
common/dct.c:274:5: note: ------>vectorizing statement: _67 = a3_32 >> 1;

common/dct.c:274:5: note: multiple-types.
common/dct.c:274:5: note: transform statement.
common/dct.c:274:5: note: vect_is_simple_use: operand a3_32
common/dct.c:274:5: note: def_stmt: a3_32 = s16_18 - s25_23;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_is_simple_use: operand 1
common/dct.c:274:5: note: vector/scalar shift/rotate found.
common/dct.c:274:5: note: transform binary/unary operation.
common/dct.c:274:5: note: operand 1 using scalar mode.
common/dct.c:274:5: note: vect_get_vec_def_for_operand: a3_32
common/dct.c:274:5: note: vect_is_simple_use: operand a3_32
common/dct.c:274:5: note: def_stmt: a3_32 = s16_18 - s25_23;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  a3_32
  def_stmt =  a3_32 = s16_18 - s25_23;
common/dct.c:274:5: note: add new stmt: vect__67.118_66 = vect_a3_32.84_469 >> 1;
common/dct.c:274:5: note: add new stmt: vect__67.118_410 = vect_a3_32.84_468 >> 1;
common/dct.c:274:5: note: ------>vectorizing statement: _68 = (unsigned short) _67;

common/dct.c:274:5: note: transform statement.
common/dct.c:274:5: note: vect_is_simple_use: operand _67
common/dct.c:274:5: note: def_stmt: _67 = a3_32 >> 1;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: transform conversion. ncopies = 1.
common/dct.c:274:5: note: vect_get_vec_def_for_operand: _67
common/dct.c:274:5: note: vect_is_simple_use: operand _67
common/dct.c:274:5: note: def_stmt: _67 = a3_32 >> 1;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  _67
  def_stmt =  _67 = a3_32 >> 1;
common/dct.c:274:5: note: add new stmt: vect__68.119_409 = VEC_PACK_TRUNC_EXPR <vect__67.118_66, vect__67.118_410>;
common/dct.c:274:5: note: ------>vectorizing statement: _69 = (unsigned short) a2_31;

common/dct.c:274:5: note: transform statement.
common/dct.c:274:5: note: vect_is_simple_use: operand a2_31
common/dct.c:274:5: note: def_stmt: a2_31 = s07_13 - s34_28;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: transform conversion. ncopies = 1.
common/dct.c:274:5: note: vect_get_vec_def_for_operand: a2_31
common/dct.c:274:5: note: vect_is_simple_use: operand a2_31
common/dct.c:274:5: note: def_stmt: a2_31 = s07_13 - s34_28;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  a2_31
  def_stmt =  a2_31 = s07_13 - s34_28;
common/dct.c:274:5: note: add new stmt: vect__69.120_408 = VEC_PACK_TRUNC_EXPR <vect_a2_31.83_471, vect_a2_31.83_470>;
common/dct.c:274:5: note: ------>vectorizing statement: _70 = _68 + _69;

common/dct.c:274:5: note: transform statement.
common/dct.c:274:5: note: vect_is_simple_use: operand _68
common/dct.c:274:5: note: def_stmt: _68 = (unsigned short) _67;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_is_simple_use: operand _69
common/dct.c:274:5: note: def_stmt: _69 = (unsigned short) a2_31;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: transform binary/unary operation.
common/dct.c:274:5: note: vect_get_vec_def_for_operand: _68
common/dct.c:274:5: note: vect_is_simple_use: operand _68
common/dct.c:274:5: note: def_stmt: _68 = (unsigned short) _67;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  _68
  def_stmt =  _68 = (unsigned short) _67;
common/dct.c:274:5: note: vect_get_vec_def_for_operand: _69
common/dct.c:274:5: note: vect_is_simple_use: operand _69
common/dct.c:274:5: note: def_stmt: _69 = (unsigned short) a2_31;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  _69
  def_stmt =  _69 = (unsigned short) a2_31;
common/dct.c:274:5: note: add new stmt: vect__70.121_407 = vect__68.119_409 + vect__69.120_408;
common/dct.c:274:5: note: ------>vectorizing statement: _71 = (short int) _70;

common/dct.c:274:5: note: transform statement.
common/dct.c:274:5: note: vect_is_simple_use: operand _70
common/dct.c:274:5: note: def_stmt: _70 = _68 + _69;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: transform assignment.
common/dct.c:274:5: note: vect_get_vec_def_for_operand: _70
common/dct.c:274:5: note: vect_is_simple_use: operand _70
common/dct.c:274:5: note: def_stmt: _70 = _68 + _69;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  _70
  def_stmt =  _70 = _68 + _69;
common/dct.c:274:5: note: add new stmt: vect__71.122_406 = VIEW_CONVERT_EXPR<vector(8) short int>(vect__70.121_407);
common/dct.c:274:5: note: ------>vectorizing statement: tmp[2][i_36] = _71;

common/dct.c:274:5: note: transform statement.
common/dct.c:274:5: note: vect_is_simple_use: operand _71
common/dct.c:274:5: note: def_stmt: _71 = (short int) _70;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: transform store. ncopies = 1
common/dct.c:274:5: note: vect_get_vec_def_for_operand: _71
common/dct.c:274:5: note: vect_is_simple_use: operand _71
common/dct.c:274:5: note: def_stmt: _71 = (short int) _70;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  _71
  def_stmt =  _71 = (short int) _70;
common/dct.c:274:5: note: create vector_type-pointer variable to type: vector(8) short int  vectorizing an array ref: tmp
common/dct.c:274:5: note: created vectp_tmp.124_405
common/dct.c:274:5: note: add new stmt: MEM[(short int *)vectp_tmp.123_404] = vect__71.122_406;
common/dct.c:274:5: note: ------>vectorizing statement: _73 = a6_51 >> 2;

common/dct.c:274:5: note: multiple-types.
common/dct.c:274:5: note: transform statement.
common/dct.c:274:5: note: vect_is_simple_use: operand a6_51
common/dct.c:274:5: note: def_stmt: a6_51 = _48 - _50;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_is_simple_use: operand 2
common/dct.c:274:5: note: vector/scalar shift/rotate found.
common/dct.c:274:5: note: transform binary/unary operation.
common/dct.c:274:5: note: operand 1 using scalar mode.
common/dct.c:274:5: note: vect_get_vec_def_for_operand: a6_51
common/dct.c:274:5: note: vect_is_simple_use: operand a6_51
common/dct.c:274:5: note: def_stmt: a6_51 = _48 - _50;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  a6_51
  def_stmt =  a6_51 = _48 - _50;
common/dct.c:274:5: note: add new stmt: vect__73.125_72 = vect_a6_51.100_437 >> 2;
common/dct.c:274:5: note: add new stmt: vect__73.125_401 = vect_a6_51.100_436 >> 2;
common/dct.c:274:5: note: ------>vectorizing statement: _74 = (unsigned short) _73;

common/dct.c:274:5: note: transform statement.
common/dct.c:274:5: note: vect_is_simple_use: operand _73
common/dct.c:274:5: note: def_stmt: _73 = a6_51 >> 2;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: transform conversion. ncopies = 1.
common/dct.c:274:5: note: vect_get_vec_def_for_operand: _73
common/dct.c:274:5: note: vect_is_simple_use: operand _73
common/dct.c:274:5: note: def_stmt: _73 = a6_51 >> 2;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  _73
  def_stmt =  _73 = a6_51 >> 2;
common/dct.c:274:5: note: add new stmt: vect__74.126_400 = VEC_PACK_TRUNC_EXPR <vect__73.125_72, vect__73.125_401>;
common/dct.c:274:5: note: ------>vectorizing statement: _75 = (unsigned short) a5_47;

common/dct.c:274:5: note: transform statement.
common/dct.c:274:5: note: vect_is_simple_use: operand a5_47
common/dct.c:274:5: note: def_stmt: a5_47 = _44 - _46;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: transform conversion. ncopies = 1.
common/dct.c:274:5: note: vect_get_vec_def_for_operand: a5_47
common/dct.c:274:5: note: vect_is_simple_use: operand a5_47
common/dct.c:274:5: note: def_stmt: a5_47 = _44 - _46;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  a5_47
  def_stmt =  a5_47 = _44 - _46;
common/dct.c:274:5: note: add new stmt: vect__75.127_399 = VEC_PACK_TRUNC_EXPR <vect_a5_47.96_445, vect_a5_47.96_444>;
common/dct.c:274:5: note: ------>vectorizing statement: _76 = _74 + _75;

common/dct.c:274:5: note: transform statement.
common/dct.c:274:5: note: vect_is_simple_use: operand _74
common/dct.c:274:5: note: def_stmt: _74 = (unsigned short) _73;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_is_simple_use: operand _75
common/dct.c:274:5: note: def_stmt: _75 = (unsigned short) a5_47;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: transform binary/unary operation.
common/dct.c:274:5: note: vect_get_vec_def_for_operand: _74
common/dct.c:274:5: note: vect_is_simple_use: operand _74
common/dct.c:274:5: note: def_stmt: _74 = (unsigned short) _73;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  _74
  def_stmt =  _74 = (unsigned short) _73;
common/dct.c:274:5: note: vect_get_vec_def_for_operand: _75
common/dct.c:274:5: note: vect_is_simple_use: operand _75
common/dct.c:274:5: note: def_stmt: _75 = (unsigned short) a5_47;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  _75
  def_stmt =  _75 = (unsigned short) a5_47;
common/dct.c:274:5: note: add new stmt: vect__76.128_398 = vect__74.126_400 + vect__75.127_399;
common/dct.c:274:5: note: ------>vectorizing statement: _77 = (short int) _76;

common/dct.c:274:5: note: transform statement.
common/dct.c:274:5: note: vect_is_simple_use: operand _76
common/dct.c:274:5: note: def_stmt: _76 = _74 + _75;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: transform assignment.
common/dct.c:274:5: note: vect_get_vec_def_for_operand: _76
common/dct.c:274:5: note: vect_is_simple_use: operand _76
common/dct.c:274:5: note: def_stmt: _76 = _74 + _75;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  _76
  def_stmt =  _76 = _74 + _75;
common/dct.c:274:5: note: add new stmt: vect__77.129_397 = VIEW_CONVERT_EXPR<vector(8) short int>(vect__76.128_398);
common/dct.c:274:5: note: ------>vectorizing statement: tmp[3][i_36] = _77;

common/dct.c:274:5: note: transform statement.
common/dct.c:274:5: note: vect_is_simple_use: operand _77
common/dct.c:274:5: note: def_stmt: _77 = (short int) _76;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: transform store. ncopies = 1
common/dct.c:274:5: note: vect_get_vec_def_for_operand: _77
common/dct.c:274:5: note: vect_is_simple_use: operand _77
common/dct.c:274:5: note: def_stmt: _77 = (short int) _76;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  _77
  def_stmt =  _77 = (short int) _76;
common/dct.c:274:5: note: create vector_type-pointer variable to type: vector(8) short int  vectorizing an array ref: tmp
common/dct.c:274:5: note: created vectp_tmp.131_396
common/dct.c:274:5: note: add new stmt: MEM[(short int *)vectp_tmp.130_395] = vect__77.129_397;
common/dct.c:274:5: note: ------>vectorizing statement: _79 = _56 - _57;

common/dct.c:274:5: note: transform statement.
common/dct.c:274:5: note: vect_is_simple_use: operand _56
common/dct.c:274:5: note: def_stmt: _56 = (unsigned short) a0_29;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_is_simple_use: operand _57
common/dct.c:274:5: note: def_stmt: _57 = (unsigned short) a1_30;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: transform binary/unary operation.
common/dct.c:274:5: note: vect_get_vec_def_for_operand: _56
common/dct.c:274:5: note: vect_is_simple_use: operand _56
common/dct.c:274:5: note: def_stmt: _56 = (unsigned short) a0_29;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  _56
  def_stmt =  _56 = (unsigned short) a0_29;
common/dct.c:274:5: note: vect_get_vec_def_for_operand: _57
common/dct.c:274:5: note: vect_is_simple_use: operand _57
common/dct.c:274:5: note: def_stmt: _57 = (unsigned short) a1_30;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  _57
  def_stmt =  _57 = (unsigned short) a1_30;
common/dct.c:274:5: note: add new stmt: vect__79.132_78 = vect__56.105_427 - vect__57.106_426;
common/dct.c:274:5: note: ------>vectorizing statement: _80 = (short int) _79;

common/dct.c:274:5: note: transform statement.
common/dct.c:274:5: note: vect_is_simple_use: operand _79
common/dct.c:274:5: note: def_stmt: _79 = _56 - _57;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: transform assignment.
common/dct.c:274:5: note: vect_get_vec_def_for_operand: _79
common/dct.c:274:5: note: vect_is_simple_use: operand _79
common/dct.c:274:5: note: def_stmt: _79 = _56 - _57;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  _79
  def_stmt =  _79 = _56 - _57;
common/dct.c:274:5: note: add new stmt: vect__80.133_392 = VIEW_CONVERT_EXPR<vector(8) short int>(vect__79.132_78);
common/dct.c:274:5: note: ------>vectorizing statement: tmp[4][i_36] = _80;

common/dct.c:274:5: note: transform statement.
common/dct.c:274:5: note: vect_is_simple_use: operand _80
common/dct.c:274:5: note: def_stmt: _80 = (short int) _79;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: transform store. ncopies = 1
common/dct.c:274:5: note: vect_get_vec_def_for_operand: _80
common/dct.c:274:5: note: vect_is_simple_use: operand _80
common/dct.c:274:5: note: def_stmt: _80 = (short int) _79;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  _80
  def_stmt =  _80 = (short int) _79;
common/dct.c:274:5: note: create vector_type-pointer variable to type: vector(8) short int  vectorizing an array ref: tmp
common/dct.c:274:5: note: created vectp_tmp.135_391
common/dct.c:274:5: note: add new stmt: MEM[(short int *)vectp_tmp.134_390] = vect__80.133_392;
common/dct.c:274:5: note: ------>vectorizing statement: _82 = (unsigned short) a6_51;

common/dct.c:274:5: note: transform statement.
common/dct.c:274:5: note: vect_is_simple_use: operand a6_51
common/dct.c:274:5: note: def_stmt: a6_51 = _48 - _50;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: transform conversion. ncopies = 1.
common/dct.c:274:5: note: vect_get_vec_def_for_operand: a6_51
common/dct.c:274:5: note: vect_is_simple_use: operand a6_51
common/dct.c:274:5: note: def_stmt: a6_51 = _48 - _50;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  a6_51
  def_stmt =  a6_51 = _48 - _50;
common/dct.c:274:5: note: add new stmt: vect__82.136_81 = VEC_PACK_TRUNC_EXPR <vect_a6_51.100_437, vect_a6_51.100_436>;
common/dct.c:274:5: note: ------>vectorizing statement: _83 = a5_47 >> 2;

common/dct.c:274:5: note: multiple-types.
common/dct.c:274:5: note: transform statement.
common/dct.c:274:5: note: vect_is_simple_use: operand a5_47
common/dct.c:274:5: note: def_stmt: a5_47 = _44 - _46;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_is_simple_use: operand 2
common/dct.c:274:5: note: vector/scalar shift/rotate found.
common/dct.c:274:5: note: transform binary/unary operation.
common/dct.c:274:5: note: operand 1 using scalar mode.
common/dct.c:274:5: note: vect_get_vec_def_for_operand: a5_47
common/dct.c:274:5: note: vect_is_simple_use: operand a5_47
common/dct.c:274:5: note: def_stmt: a5_47 = _44 - _46;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  a5_47
  def_stmt =  a5_47 = _44 - _46;
common/dct.c:274:5: note: add new stmt: vect__83.137_387 = vect_a5_47.96_445 >> 2;
common/dct.c:274:5: note: add new stmt: vect__83.137_386 = vect_a5_47.96_444 >> 2;
common/dct.c:274:5: note: ------>vectorizing statement: _84 = (unsigned short) _83;

common/dct.c:274:5: note: transform statement.
common/dct.c:274:5: note: vect_is_simple_use: operand _83
common/dct.c:274:5: note: def_stmt: _83 = a5_47 >> 2;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: transform conversion. ncopies = 1.
common/dct.c:274:5: note: vect_get_vec_def_for_operand: _83
common/dct.c:274:5: note: vect_is_simple_use: operand _83
common/dct.c:274:5: note: def_stmt: _83 = a5_47 >> 2;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  _83
  def_stmt =  _83 = a5_47 >> 2;
common/dct.c:274:5: note: add new stmt: vect__84.138_385 = VEC_PACK_TRUNC_EXPR <vect__83.137_387, vect__83.137_386>;
common/dct.c:274:5: note: ------>vectorizing statement: _85 = _82 - _84;

common/dct.c:274:5: note: transform statement.
common/dct.c:274:5: note: vect_is_simple_use: operand _82
common/dct.c:274:5: note: def_stmt: _82 = (unsigned short) a6_51;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_is_simple_use: operand _84
common/dct.c:274:5: note: def_stmt: _84 = (unsigned short) _83;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: transform binary/unary operation.
common/dct.c:274:5: note: vect_get_vec_def_for_operand: _82
common/dct.c:274:5: note: vect_is_simple_use: operand _82
common/dct.c:274:5: note: def_stmt: _82 = (unsigned short) a6_51;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  _82
  def_stmt =  _82 = (unsigned short) a6_51;
common/dct.c:274:5: note: vect_get_vec_def_for_operand: _84
common/dct.c:274:5: note: vect_is_simple_use: operand _84
common/dct.c:274:5: note: def_stmt: _84 = (unsigned short) _83;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  _84
  def_stmt =  _84 = (unsigned short) _83;
common/dct.c:274:5: note: add new stmt: vect__85.139_384 = vect__82.136_81 - vect__84.138_385;
common/dct.c:274:5: note: ------>vectorizing statement: _86 = (short int) _85;

common/dct.c:274:5: note: transform statement.
common/dct.c:274:5: note: vect_is_simple_use: operand _85
common/dct.c:274:5: note: def_stmt: _85 = _82 - _84;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: transform assignment.
common/dct.c:274:5: note: vect_get_vec_def_for_operand: _85
common/dct.c:274:5: note: vect_is_simple_use: operand _85
common/dct.c:274:5: note: def_stmt: _85 = _82 - _84;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  _85
  def_stmt =  _85 = _82 - _84;
common/dct.c:274:5: note: add new stmt: vect__86.140_383 = VIEW_CONVERT_EXPR<vector(8) short int>(vect__85.139_384);
common/dct.c:274:5: note: ------>vectorizing statement: tmp[5][i_36] = _86;

common/dct.c:274:5: note: transform statement.
common/dct.c:274:5: note: vect_is_simple_use: operand _86
common/dct.c:274:5: note: def_stmt: _86 = (short int) _85;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: transform store. ncopies = 1
common/dct.c:274:5: note: vect_get_vec_def_for_operand: _86
common/dct.c:274:5: note: vect_is_simple_use: operand _86
common/dct.c:274:5: note: def_stmt: _86 = (short int) _85;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  _86
  def_stmt =  _86 = (short int) _85;
common/dct.c:274:5: note: create vector_type-pointer variable to type: vector(8) short int  vectorizing an array ref: tmp
common/dct.c:274:5: note: created vectp_tmp.142_382
common/dct.c:274:5: note: add new stmt: MEM[(short int *)vectp_tmp.141_381] = vect__86.140_383;
common/dct.c:274:5: note: ------>vectorizing statement: _88 = a2_31 >> 1;

common/dct.c:274:5: note: multiple-types.
common/dct.c:274:5: note: transform statement.
common/dct.c:274:5: note: vect_is_simple_use: operand a2_31
common/dct.c:274:5: note: def_stmt: a2_31 = s07_13 - s34_28;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_is_simple_use: operand 1
common/dct.c:274:5: note: vector/scalar shift/rotate found.
common/dct.c:274:5: note: transform binary/unary operation.
common/dct.c:274:5: note: operand 1 using scalar mode.
common/dct.c:274:5: note: vect_get_vec_def_for_operand: a2_31
common/dct.c:274:5: note: vect_is_simple_use: operand a2_31
common/dct.c:274:5: note: def_stmt: a2_31 = s07_13 - s34_28;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  a2_31
  def_stmt =  a2_31 = s07_13 - s34_28;
common/dct.c:274:5: note: add new stmt: vect__88.143_87 = vect_a2_31.83_471 >> 1;
common/dct.c:274:5: note: add new stmt: vect__88.143_378 = vect_a2_31.83_470 >> 1;
common/dct.c:274:5: note: ------>vectorizing statement: _89 = (unsigned short) _88;

common/dct.c:274:5: note: transform statement.
common/dct.c:274:5: note: vect_is_simple_use: operand _88
common/dct.c:274:5: note: def_stmt: _88 = a2_31 >> 1;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: transform conversion. ncopies = 1.
common/dct.c:274:5: note: vect_get_vec_def_for_operand: _88
common/dct.c:274:5: note: vect_is_simple_use: operand _88
common/dct.c:274:5: note: def_stmt: _88 = a2_31 >> 1;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  _88
  def_stmt =  _88 = a2_31 >> 1;
common/dct.c:274:5: note: add new stmt: vect__89.144_377 = VEC_PACK_TRUNC_EXPR <vect__88.143_87, vect__88.143_378>;
common/dct.c:274:5: note: ------>vectorizing statement: _90 = (unsigned short) a3_32;

common/dct.c:274:5: note: transform statement.
common/dct.c:274:5: note: vect_is_simple_use: operand a3_32
common/dct.c:274:5: note: def_stmt: a3_32 = s16_18 - s25_23;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: transform conversion. ncopies = 1.
common/dct.c:274:5: note: vect_get_vec_def_for_operand: a3_32
common/dct.c:274:5: note: vect_is_simple_use: operand a3_32
common/dct.c:274:5: note: def_stmt: a3_32 = s16_18 - s25_23;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  a3_32
  def_stmt =  a3_32 = s16_18 - s25_23;
common/dct.c:274:5: note: add new stmt: vect__90.145_376 = VEC_PACK_TRUNC_EXPR <vect_a3_32.84_469, vect_a3_32.84_468>;
common/dct.c:274:5: note: ------>vectorizing statement: _91 = _89 - _90;

common/dct.c:274:5: note: transform statement.
common/dct.c:274:5: note: vect_is_simple_use: operand _89
common/dct.c:274:5: note: def_stmt: _89 = (unsigned short) _88;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_is_simple_use: operand _90
common/dct.c:274:5: note: def_stmt: _90 = (unsigned short) a3_32;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: transform binary/unary operation.
common/dct.c:274:5: note: vect_get_vec_def_for_operand: _89
common/dct.c:274:5: note: vect_is_simple_use: operand _89
common/dct.c:274:5: note: def_stmt: _89 = (unsigned short) _88;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  _89
  def_stmt =  _89 = (unsigned short) _88;
common/dct.c:274:5: note: vect_get_vec_def_for_operand: _90
common/dct.c:274:5: note: vect_is_simple_use: operand _90
common/dct.c:274:5: note: def_stmt: _90 = (unsigned short) a3_32;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  _90
  def_stmt =  _90 = (unsigned short) a3_32;
common/dct.c:274:5: note: add new stmt: vect__91.146_375 = vect__89.144_377 - vect__90.145_376;
common/dct.c:274:5: note: ------>vectorizing statement: _92 = (short int) _91;

common/dct.c:274:5: note: transform statement.
common/dct.c:274:5: note: vect_is_simple_use: operand _91
common/dct.c:274:5: note: def_stmt: _91 = _89 - _90;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: transform assignment.
common/dct.c:274:5: note: vect_get_vec_def_for_operand: _91
common/dct.c:274:5: note: vect_is_simple_use: operand _91
common/dct.c:274:5: note: def_stmt: _91 = _89 - _90;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  _91
  def_stmt =  _91 = _89 - _90;
common/dct.c:274:5: note: add new stmt: vect__92.147_374 = VIEW_CONVERT_EXPR<vector(8) short int>(vect__91.146_375);
common/dct.c:274:5: note: ------>vectorizing statement: tmp[6][i_36] = _92;

common/dct.c:274:5: note: transform statement.
common/dct.c:274:5: note: vect_is_simple_use: operand _92
common/dct.c:274:5: note: def_stmt: _92 = (short int) _91;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: transform store. ncopies = 1
common/dct.c:274:5: note: vect_get_vec_def_for_operand: _92
common/dct.c:274:5: note: vect_is_simple_use: operand _92
common/dct.c:274:5: note: def_stmt: _92 = (short int) _91;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  _92
  def_stmt =  _92 = (short int) _91;
common/dct.c:274:5: note: create vector_type-pointer variable to type: vector(8) short int  vectorizing an array ref: tmp
common/dct.c:274:5: note: created vectp_tmp.149_373
common/dct.c:274:5: note: add new stmt: MEM[(short int *)vectp_tmp.148_372] = vect__92.147_374;
common/dct.c:274:5: note: ------>vectorizing statement: _94 = a4_43 >> 2;

common/dct.c:274:5: note: multiple-types.
common/dct.c:274:5: note: transform statement.
common/dct.c:274:5: note: vect_is_simple_use: operand a4_43
common/dct.c:274:5: note: def_stmt: a4_43 = _40 + _42;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_is_simple_use: operand 2
common/dct.c:274:5: note: vector/scalar shift/rotate found.
common/dct.c:274:5: note: transform binary/unary operation.
common/dct.c:274:5: note: operand 1 using scalar mode.
common/dct.c:274:5: note: vect_get_vec_def_for_operand: a4_43
common/dct.c:274:5: note: vect_is_simple_use: operand a4_43
common/dct.c:274:5: note: def_stmt: a4_43 = _40 + _42;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  a4_43
  def_stmt =  a4_43 = _40 + _42;
common/dct.c:274:5: note: add new stmt: vect__94.150_93 = vect_a4_43.92_453 >> 2;
common/dct.c:274:5: note: add new stmt: vect__94.150_369 = vect_a4_43.92_452 >> 2;
common/dct.c:274:5: note: ------>vectorizing statement: _95 = (unsigned short) _94;

common/dct.c:274:5: note: transform statement.
common/dct.c:274:5: note: vect_is_simple_use: operand _94
common/dct.c:274:5: note: def_stmt: _94 = a4_43 >> 2;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: transform conversion. ncopies = 1.
common/dct.c:274:5: note: vect_get_vec_def_for_operand: _94
common/dct.c:274:5: note: vect_is_simple_use: operand _94
common/dct.c:274:5: note: def_stmt: _94 = a4_43 >> 2;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  _94
  def_stmt =  _94 = a4_43 >> 2;
common/dct.c:274:5: note: add new stmt: vect__95.151_368 = VEC_PACK_TRUNC_EXPR <vect__94.150_93, vect__94.150_369>;
common/dct.c:274:5: note: ------>vectorizing statement: _96 = (unsigned short) a7_55;

common/dct.c:274:5: note: transform statement.
common/dct.c:274:5: note: vect_is_simple_use: operand a7_55
common/dct.c:274:5: note: def_stmt: a7_55 = _52 + _54;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: transform conversion. ncopies = 1.
common/dct.c:274:5: note: vect_get_vec_def_for_operand: a7_55
common/dct.c:274:5: note: vect_is_simple_use: operand a7_55
common/dct.c:274:5: note: def_stmt: a7_55 = _52 + _54;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  a7_55
  def_stmt =  a7_55 = _52 + _54;
common/dct.c:274:5: note: add new stmt: vect__96.152_367 = VEC_PACK_TRUNC_EXPR <vect_a7_55.104_429, vect_a7_55.104_428>;
common/dct.c:274:5: note: ------>vectorizing statement: _97 = _95 - _96;

common/dct.c:274:5: note: transform statement.
common/dct.c:274:5: note: vect_is_simple_use: operand _95
common/dct.c:274:5: note: def_stmt: _95 = (unsigned short) _94;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: vect_is_simple_use: operand _96
common/dct.c:274:5: note: def_stmt: _96 = (unsigned short) a7_55;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: transform binary/unary operation.
common/dct.c:274:5: note: vect_get_vec_def_for_operand: _95
common/dct.c:274:5: note: vect_is_simple_use: operand _95
common/dct.c:274:5: note: def_stmt: _95 = (unsigned short) _94;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  _95
  def_stmt =  _95 = (unsigned short) _94;
common/dct.c:274:5: note: vect_get_vec_def_for_operand: _96
common/dct.c:274:5: note: vect_is_simple_use: operand _96
common/dct.c:274:5: note: def_stmt: _96 = (unsigned short) a7_55;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  _96
  def_stmt =  _96 = (unsigned short) a7_55;
common/dct.c:274:5: note: add new stmt: vect__97.153_366 = vect__95.151_368 - vect__96.152_367;
common/dct.c:274:5: note: ------>vectorizing statement: _98 = (short int) _97;

common/dct.c:274:5: note: transform statement.
common/dct.c:274:5: note: vect_is_simple_use: operand _97
common/dct.c:274:5: note: def_stmt: _97 = _95 - _96;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: transform assignment.
common/dct.c:274:5: note: vect_get_vec_def_for_operand: _97
common/dct.c:274:5: note: vect_is_simple_use: operand _97
common/dct.c:274:5: note: def_stmt: _97 = _95 - _96;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  _97
  def_stmt =  _97 = _95 - _96;
common/dct.c:274:5: note: add new stmt: vect__98.154_365 = VIEW_CONVERT_EXPR<vector(8) short int>(vect__97.153_366);
common/dct.c:274:5: note: ------>vectorizing statement: tmp[7][i_36] = _98;

common/dct.c:274:5: note: transform statement.
common/dct.c:274:5: note: vect_is_simple_use: operand _98
common/dct.c:274:5: note: def_stmt: _98 = (short int) _97;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: transform store. ncopies = 1
common/dct.c:274:5: note: vect_get_vec_def_for_operand: _98
common/dct.c:274:5: note: vect_is_simple_use: operand _98
common/dct.c:274:5: note: def_stmt: _98 = (short int) _97;
common/dct.c:274:5: note: type of def: 3.
common/dct.c:274:5: note: def =  _98
  def_stmt =  _98 = (short int) _97;
common/dct.c:274:5: note: create vector_type-pointer variable to type: vector(8) short int  vectorizing an array ref: tmp
common/dct.c:274:5: note: created vectp_tmp.156_364
common/dct.c:274:5: note: add new stmt: MEM[(short int *)vectp_tmp.155_363] = vect__98.154_365;
common/dct.c:274:5: note: ------>vectorizing statement: i_100 = i_36 + 1;

common/dct.c:274:5: note: ------>vectorizing statement: # DEBUG i => i_100

common/dct.c:274:5: note: ------>vectorizing statement: # DEBUG i => i_100

common/dct.c:274:5: note: ------>vectorizing statement: ivtmp_539 = ivtmp_537 - 1;

common/dct.c:274:5: note: ------>vectorizing statement: vectp_tmp.45_529 = vectp_tmp.45_530 + 16;

common/dct.c:274:5: note: ------>vectorizing statement: vectp_tmp.49_523 = vectp_tmp.49_524 + 16;

common/dct.c:274:5: note: ------>vectorizing statement: vectp_tmp.54_515 = vectp_tmp.54_516 + 16;

common/dct.c:274:5: note: ------>vectorizing statement: vectp_tmp.58_509 = vectp_tmp.58_510 + 16;

common/dct.c:274:5: note: ------>vectorizing statement: vectp_tmp.63_501 = vectp_tmp.63_502 + 16;

common/dct.c:274:5: note: ------>vectorizing statement: vectp_tmp.67_495 = vectp_tmp.67_496 + 16;

common/dct.c:274:5: note: ------>vectorizing statement: vectp_tmp.72_487 = vectp_tmp.72_488 + 16;

common/dct.c:274:5: note: ------>vectorizing statement: vectp_tmp.76_481 = vectp_tmp.76_482 + 16;

common/dct.c:274:5: note: ------>vectorizing statement: vectp_tmp.109_421 = vectp_tmp.109_422 + 16;

common/dct.c:274:5: note: ------>vectorizing statement: vectp_tmp.116_412 = vectp_tmp.116_413 + 16;

common/dct.c:274:5: note: ------>vectorizing statement: vectp_tmp.123_403 = vectp_tmp.123_404 + 16;

common/dct.c:274:5: note: ------>vectorizing statement: vectp_tmp.130_394 = vectp_tmp.130_395 + 16;

common/dct.c:274:5: note: ------>vectorizing statement: vectp_tmp.134_389 = vectp_tmp.134_390 + 16;

common/dct.c:274:5: note: ------>vectorizing statement: vectp_tmp.141_380 = vectp_tmp.141_381 + 16;

common/dct.c:274:5: note: ------>vectorizing statement: vectp_tmp.148_371 = vectp_tmp.148_372 + 16;

common/dct.c:274:5: note: ------>vectorizing statement: vectp_tmp.155_362 = vectp_tmp.155_363 + 16;

common/dct.c:274:5: note: ------>vectorizing statement: if (ivtmp_539 != 0)


loop at common/dct.c:275: if (ivtmp_360 < 1)

;; Scaling loop 1 with scale 0.125000, bounding iterations to 1 from guessed 7
;; guessed iterations are now 1
common/dct.c:274:5: note: LOOP VECTORIZED


Analyzing loop at common/dct.c:111
common/dct.c:111:5: note: ===== analyze_loop_nest =====
common/dct.c:111:5: note: === vect_analyze_loop_form ===
common/dct.c:111:5: note: ===== analyze_loop_nest_1 =====
common/dct.c:111:5: note: === vect_analyze_loop_form ===
common/dct.c:111:5: note: === get_loop_niters ===
Analyzing # of iterations of loop 4
  exit condition [7, + , 4294967295] != 0
  bounds on difference of bases: -7 ... -7
  result:
    # of iterations 7, bounded by 7
common/dct.c:111:5: note: Considering outer-loop vectorization.
common/dct.c:111:5: note: === get_loop_niters ===
Analyzing # of iterations of loop 3
  exit condition [7, + , 4294967295] != 0
  bounds on difference of bases: -7 ... -7
  result:
    # of iterations 7, bounded by 7
common/dct.c:111:5: note: === vect_analyze_data_refs ===
Creating dr for *_201
analyze_innermost: success.
	base_address: pix1_234
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix1_6(D)
	Access function 0: {{0B, +, 16}_3, +, 1}_4
Creating dr for *_205
analyze_innermost: success.
	base_address: pix2_235
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix2_7(D)
	Access function 0: {{0B, +, 32}_3, +, 1}_4
Creating dr for *_198
analyze_innermost: success.
	base_address: (int16_t *) &tmp + (sizetype) ((long unsigned int) (y_232 * 8) * 2)
	offset from base address: 0
	constant offset from base address: 0
	step: 2
	aligned to: 128
	base_object: MEM[(int16_t *)&tmp]
	Access function 0: {{0B, +, 16}_3, +, 2}_4
Applying pattern match.pd:49, generic-match.c:4015
common/dct.c:111:5: note: analyze in outer-loop: *pix1_234
common/dct.c:111:5: note: 	outer base_address: pix1_6(D)
	outer offset from base address: 0
	outer constant offset from base address: 0
	outer step: 16
	outer aligned to: 128
common/dct.c:111:5: note: got vectype for stmt: _202 = *_201;
vector(16) unsigned char
Applying pattern match.pd:49, generic-match.c:4015
common/dct.c:111:5: note: analyze in outer-loop: *pix2_235
common/dct.c:111:5: note: 	outer base_address: pix2_7(D)
	outer offset from base address: 0
	outer constant offset from base address: 0
	outer step: 32
	outer aligned to: 128
common/dct.c:111:5: note: got vectype for stmt: _206 = *_205;
vector(16) unsigned char
Applying pattern match.pd:49, generic-match.c:4015
common/dct.c:111:5: note: analyze in outer-loop: *((int16_t *) &tmp + (sizetype) ((long unsigned int) (y_232 * 8) * 2))
common/dct.c:111:5: note: 	outer base_address: &tmp
	outer offset from base address: 0
	outer constant offset from base address: 0
	outer step: 16
	outer aligned to: 128
common/dct.c:111:5: note: got vectype for stmt: *_198 = _209;
vector(8) short int
common/dct.c:111:5: note: === vect_analyze_scalar_cycles ===
common/dct.c:111:5: note: Analyze phi: y_232 = PHI <y_213(6), 0(2)>

common/dct.c:111:5: note: Access function of PHI: {0, +, 1}_3
common/dct.c:111:5: note: step: 1,  init: 0
common/dct.c:111:5: note: Detected induction.
common/dct.c:111:5: note: Analyze phi: pix1_234 = PHI <pix1_211(6), pix1_6(D)(2)>

common/dct.c:111:5: note: Access function of PHI: {pix1_6(D), +, 16}_3
common/dct.c:111:5: note: step: 16,  init: pix1_6(D)
common/dct.c:111:5: note: Detected induction.
common/dct.c:111:5: note: Analyze phi: pix2_235 = PHI <pix2_212(6), pix2_7(D)(2)>

common/dct.c:111:5: note: Access function of PHI: {pix2_7(D), +, 32}_3
common/dct.c:111:5: note: step: 32,  init: pix2_7(D)
common/dct.c:111:5: note: Detected induction.
common/dct.c:111:5: note: Analyze phi: .MEM_236 = PHI <.MEM_215(6), .MEM_5(D)(2)>

common/dct.c:111:5: note: Analyze phi: ivtmp_533 = PHI <ivtmp_532(6), 8(2)>

common/dct.c:111:5: note: Access function of PHI: {8, +, 4294967295}_3
common/dct.c:111:5: note: step: 4294967295,  init: 8
common/dct.c:111:5: note: Detected induction.
common/dct.c:111:5: note: === vect_analyze_scalar_cycles ===
common/dct.c:111:5: note: Analyze phi: .MEM_231 = PHI <.MEM_215(3), .MEM_236(7)>

common/dct.c:111:5: note: Analyze phi: x_233 = PHI <x_210(3), 0(7)>

common/dct.c:111:5: note: Access function of PHI: {0, +, 1}_4
common/dct.c:111:5: note: step: 1,  init: 0
common/dct.c:111:5: note: Detected induction.
common/dct.c:111:5: note: Analyze phi: ivtmp_535 = PHI <ivtmp_534(3), 8(7)>

common/dct.c:111:5: note: Access function of PHI: {8, +, 4294967295}_4
common/dct.c:111:5: note: step: 4294967295,  init: 8
common/dct.c:111:5: note: Detected induction.
common/dct.c:111:5: note: === vect_pattern_recog ===
common/dct.c:111:5: note: vect_is_simple_use: operand y_232
common/dct.c:111:5: note: def_stmt: y_232 = PHI <y_213(6), 0(2)>
common/dct.c:111:5: note: type of def: 4.
common/dct.c:111:5: note: vect_is_simple_use: operand _196
common/dct.c:111:5: note: def_stmt: _196 = (long unsigned int) _195;
common/dct.c:111:5: note: type of def: 3.
common/dct.c:111:5: note: vect_is_simple_use: operand _195
common/dct.c:111:5: note: def_stmt: _195 = x_233 + pretmp_546;
common/dct.c:111:5: note: type of def: 3.
common/dct.c:111:5: note: vect_is_simple_use: operand 2
common/dct.c:111:5: note: === vect_analyze_data_ref_accesses ===
common/dct.c:111:5: note: grouped access in outer loop.
common/dct.c:111:5: note: not vectorized: complicated access pattern.
common/dct.c:111:5: note: bad data access.

Analyzing loop at common/dct.c:113
common/dct.c:113:9: note: ===== analyze_loop_nest =====
common/dct.c:113:9: note: === vect_analyze_loop_form ===
common/dct.c:113:9: note: === get_loop_niters ===
common/dct.c:113:9: note: === vect_analyze_data_refs ===
Creating dr for *_201
analyze_innermost: success.
	base_address: pix1_234
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix1_234
	Access function 0: {0B, +, 1}_4
Creating dr for *_205
analyze_innermost: success.
	base_address: pix2_235
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix2_235
	Access function 0: {0B, +, 1}_4
Creating dr for *_198
analyze_innermost: success.
	base_address: (int16_t *) &tmp + (sizetype) ((long unsigned int) (y_232 * 8) * 2)
	offset from base address: 0
	constant offset from base address: 0
	step: 2
	aligned to: 128
	base_object: *(int16_t *) &tmp + (sizetype) ((long unsigned int) (y_232 * 8) * 2)
	Access function 0: {0B, +, 2}_4
common/dct.c:113:9: note: got vectype for stmt: _202 = *_201;
vector(16) unsigned char
common/dct.c:113:9: note: got vectype for stmt: _206 = *_205;
vector(16) unsigned char
common/dct.c:113:9: note: got vectype for stmt: *_198 = _209;
vector(8) short int
common/dct.c:113:9: note: === vect_analyze_scalar_cycles ===
common/dct.c:113:9: note: Analyze phi: .MEM_231 = PHI <.MEM_215(3), .MEM_236(7)>

common/dct.c:113:9: note: Analyze phi: x_233 = PHI <x_210(3), 0(7)>

common/dct.c:113:9: note: Access function of PHI: {0, +, 1}_4
common/dct.c:113:9: note: step: 1,  init: 0
common/dct.c:113:9: note: Detected induction.
common/dct.c:113:9: note: Analyze phi: ivtmp_535 = PHI <ivtmp_534(3), 8(7)>

common/dct.c:113:9: note: Access function of PHI: {8, +, 4294967295}_4
common/dct.c:113:9: note: step: 4294967295,  init: 8
common/dct.c:113:9: note: Detected induction.
common/dct.c:113:9: note: === vect_pattern_recog ===
common/dct.c:113:9: note: vect_is_simple_use: operand _196
common/dct.c:113:9: note: def_stmt: _196 = (long unsigned int) _195;
common/dct.c:113:9: note: type of def: 3.
common/dct.c:113:9: note: vect_is_simple_use: operand _195
common/dct.c:113:9: note: def_stmt: _195 = x_233 + pretmp_546;
common/dct.c:113:9: note: type of def: 3.
common/dct.c:113:9: note: vect_is_simple_use: operand 2
common/dct.c:113:9: note: === vect_analyze_data_ref_accesses ===
common/dct.c:113:9: note: === vect_mark_stmts_to_be_vectorized ===
common/dct.c:113:9: note: init: phi relevant? .MEM_231 = PHI <.MEM_215(3), .MEM_236(7)>
common/dct.c:113:9: note: init: phi relevant? x_233 = PHI <x_210(3), 0(7)>
common/dct.c:113:9: note: init: phi relevant? ivtmp_535 = PHI <ivtmp_534(3), 8(7)>
common/dct.c:113:9: note: init: stmt relevant? # DEBUG x => x_233
common/dct.c:113:9: note: init: stmt relevant? _195 = x_233 + pretmp_546;
common/dct.c:113:9: note: init: stmt relevant? _196 = (long unsigned int) _195;
common/dct.c:113:9: note: init: stmt relevant? _197 = _196 * 2;
common/dct.c:113:9: note: init: stmt relevant? _198 = &tmp + _197;
common/dct.c:113:9: note: init: stmt relevant? _199 = (sizetype) x_233;
common/dct.c:113:9: note: init: stmt relevant? _201 = pix1_234 + _199;
common/dct.c:113:9: note: init: stmt relevant? _202 = *_201;
common/dct.c:113:9: note: init: stmt relevant? _203 = (unsigned short) _202;
common/dct.c:113:9: note: init: stmt relevant? _205 = pix2_235 + _199;
common/dct.c:113:9: note: init: stmt relevant? _206 = *_205;
common/dct.c:113:9: note: init: stmt relevant? _207 = (unsigned short) _206;
common/dct.c:113:9: note: init: stmt relevant? _208 = _203 - _207;
common/dct.c:113:9: note: init: stmt relevant? _209 = (short int) _208;
common/dct.c:113:9: note: init: stmt relevant? *_198 = _209;
common/dct.c:113:9: note: vec_stmt_relevant_p: stmt has vdefs.
common/dct.c:113:9: note: mark relevant 4, live 0.
common/dct.c:113:9: note: init: stmt relevant? x_210 = x_233 + 1;
common/dct.c:113:9: note: init: stmt relevant? # DEBUG x => x_210
common/dct.c:113:9: note: init: stmt relevant? # DEBUG x => x_210
common/dct.c:113:9: note: init: stmt relevant? ivtmp_534 = ivtmp_535 - 1;
common/dct.c:113:9: note: init: stmt relevant? if (ivtmp_534 != 0)
common/dct.c:113:9: note: worklist: examine stmt: *_198 = _209;
common/dct.c:113:9: note: vect_is_simple_use: operand _209
common/dct.c:113:9: note: def_stmt: _209 = (short int) _208;
common/dct.c:113:9: note: type of def: 3.
common/dct.c:113:9: note: mark relevant 4, live 0.
common/dct.c:113:9: note: worklist: examine stmt: _209 = (short int) _208;
common/dct.c:113:9: note: vect_is_simple_use: operand _208
common/dct.c:113:9: note: def_stmt: _208 = _203 - _207;
common/dct.c:113:9: note: type of def: 3.
common/dct.c:113:9: note: mark relevant 4, live 0.
common/dct.c:113:9: note: worklist: examine stmt: _208 = _203 - _207;
common/dct.c:113:9: note: vect_is_simple_use: operand _203
common/dct.c:113:9: note: def_stmt: _203 = (unsigned short) _202;
common/dct.c:113:9: note: type of def: 3.
common/dct.c:113:9: note: mark relevant 4, live 0.
common/dct.c:113:9: note: vect_is_simple_use: operand _207
common/dct.c:113:9: note: def_stmt: _207 = (unsigned short) _206;
common/dct.c:113:9: note: type of def: 3.
common/dct.c:113:9: note: mark relevant 4, live 0.
common/dct.c:113:9: note: worklist: examine stmt: _207 = (unsigned short) _206;
common/dct.c:113:9: note: vect_is_simple_use: operand _206
common/dct.c:113:9: note: def_stmt: _206 = *_205;
common/dct.c:113:9: note: type of def: 3.
common/dct.c:113:9: note: mark relevant 4, live 0.
common/dct.c:113:9: note: worklist: examine stmt: _206 = *_205;
common/dct.c:113:9: note: worklist: examine stmt: _203 = (unsigned short) _202;
common/dct.c:113:9: note: vect_is_simple_use: operand _202
common/dct.c:113:9: note: def_stmt: _202 = *_201;
common/dct.c:113:9: note: type of def: 3.
common/dct.c:113:9: note: mark relevant 4, live 0.
common/dct.c:113:9: note: worklist: examine stmt: _202 = *_201;
common/dct.c:113:9: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _202 = *_201;
  stmt_b: _206 = *_205;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _202 = *_201;
  stmt_b: *_198 = _209;
) -> no dependence
(compute_affine_dependence
  stmt_a: _206 = *_205;
  stmt_b: *_198 = _209;
) -> no dependence
(compute_affine_dependence
  stmt_a: _202 = *_201;
  stmt_b: _202 = *_201;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_4)
  (chrec_b = {0B, +, 1}_4)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _206 = *_205;
  stmt_b: _206 = *_205;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_4)
  (chrec_b = {0B, +, 1}_4)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: *_198 = _209;
  stmt_b: *_198 = _209;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 2}_4)
  (chrec_b = {0B, +, 2}_4)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/dct.c:113:9: note: === vect_determine_vectorization_factor ===
common/dct.c:113:9: note: ==> examining phi: .MEM_231 = PHI <.MEM_215(3), .MEM_236(7)>

common/dct.c:113:9: note: ==> examining phi: x_233 = PHI <x_210(3), 0(7)>

common/dct.c:113:9: note: ==> examining phi: ivtmp_535 = PHI <ivtmp_534(3), 8(7)>

common/dct.c:113:9: note: ==> examining statement: # DEBUG x => x_233

common/dct.c:113:9: note: skip.
common/dct.c:113:9: note: ==> examining statement: _195 = x_233 + pretmp_546;

common/dct.c:113:9: note: skip.
common/dct.c:113:9: note: ==> examining statement: _196 = (long unsigned int) _195;

common/dct.c:113:9: note: skip.
common/dct.c:113:9: note: ==> examining statement: _197 = _196 * 2;

common/dct.c:113:9: note: skip.
common/dct.c:113:9: note: ==> examining statement: _198 = &tmp + _197;

common/dct.c:113:9: note: skip.
common/dct.c:113:9: note: ==> examining statement: _199 = (sizetype) x_233;

common/dct.c:113:9: note: skip.
common/dct.c:113:9: note: ==> examining statement: _201 = pix1_234 + _199;

common/dct.c:113:9: note: skip.
common/dct.c:113:9: note: ==> examining statement: _202 = *_201;

common/dct.c:113:9: note: get vectype for scalar type:  unsigned char
common/dct.c:113:9: note: vectype: vector(16) unsigned char
common/dct.c:113:9: note: nunits = 16
common/dct.c:113:9: note: ==> examining statement: _203 = (unsigned short) _202;

common/dct.c:113:9: note: get vectype for scalar type:  unsigned short
common/dct.c:113:9: note: vectype: vector(8) unsigned short
common/dct.c:113:9: note: get vectype for scalar type:  unsigned char
common/dct.c:113:9: note: vectype: vector(16) unsigned char
common/dct.c:113:9: note: nunits = 16
common/dct.c:113:9: note: ==> examining statement: _205 = pix2_235 + _199;

common/dct.c:113:9: note: skip.
common/dct.c:113:9: note: ==> examining statement: _206 = *_205;

common/dct.c:113:9: note: get vectype for scalar type:  unsigned char
common/dct.c:113:9: note: vectype: vector(16) unsigned char
common/dct.c:113:9: note: nunits = 16
common/dct.c:113:9: note: ==> examining statement: _207 = (unsigned short) _206;

common/dct.c:113:9: note: get vectype for scalar type:  unsigned short
common/dct.c:113:9: note: vectype: vector(8) unsigned short
common/dct.c:113:9: note: get vectype for scalar type:  unsigned char
common/dct.c:113:9: note: vectype: vector(16) unsigned char
common/dct.c:113:9: note: nunits = 16
common/dct.c:113:9: note: ==> examining statement: _208 = _203 - _207;

common/dct.c:113:9: note: get vectype for scalar type:  unsigned short
common/dct.c:113:9: note: vectype: vector(8) unsigned short
common/dct.c:113:9: note: get vectype for scalar type:  unsigned short
common/dct.c:113:9: note: vectype: vector(8) unsigned short
common/dct.c:113:9: note: nunits = 8
common/dct.c:113:9: note: ==> examining statement: _209 = (short int) _208;

common/dct.c:113:9: note: get vectype for scalar type:  short int
common/dct.c:113:9: note: vectype: vector(8) short int
common/dct.c:113:9: note: get vectype for scalar type:  short int
common/dct.c:113:9: note: vectype: vector(8) short int
common/dct.c:113:9: note: nunits = 8
common/dct.c:113:9: note: ==> examining statement: *_198 = _209;

common/dct.c:113:9: note: get vectype for scalar type:  int16_t
common/dct.c:113:9: note: vectype: vector(8) short int
common/dct.c:113:9: note: nunits = 8
common/dct.c:113:9: note: ==> examining statement: x_210 = x_233 + 1;

common/dct.c:113:9: note: skip.
common/dct.c:113:9: note: ==> examining statement: # DEBUG x => x_210

common/dct.c:113:9: note: skip.
common/dct.c:113:9: note: ==> examining statement: # DEBUG x => x_210

common/dct.c:113:9: note: skip.
common/dct.c:113:9: note: ==> examining statement: ivtmp_534 = ivtmp_535 - 1;

common/dct.c:113:9: note: skip.
common/dct.c:113:9: note: ==> examining statement: if (ivtmp_534 != 0)

common/dct.c:113:9: note: skip.
common/dct.c:113:9: note: vectorization factor = 16
common/dct.c:113:9: note: === vect_analyze_data_refs_alignment ===
common/dct.c:113:9: note: vect_compute_data_ref_alignment:
common/dct.c:113:9: note: can't force alignment of ref: *_201
common/dct.c:113:9: note: vect_compute_data_ref_alignment:
common/dct.c:113:9: note: can't force alignment of ref: *_205
common/dct.c:113:9: note: vect_compute_data_ref_alignment:
common/dct.c:113:9: note: can't force alignment of ref: *_198
common/dct.c:113:9: note: === vect_prune_runtime_alias_test_list ===
common/dct.c:113:9: note: === vect_enhance_data_refs_alignment ===
common/dct.c:113:9: note: Unknown misalignment, is_packed = 0
common/dct.c:113:9: note: Unknown misalignment, is_packed = 0
common/dct.c:113:9: note: Unknown misalignment, is_packed = 0
common/dct.c:113:9: note: vect_can_advance_ivs_p:
common/dct.c:113:9: note: Analyze phi: .MEM_231 = PHI <.MEM_215(3), .MEM_236(7)>

common/dct.c:113:9: note: virtual phi. skip.
common/dct.c:113:9: note: Analyze phi: x_233 = PHI <x_210(3), 0(7)>

common/dct.c:113:9: note: Analyze phi: ivtmp_535 = PHI <ivtmp_534(3), 8(7)>

common/dct.c:113:9: note: Vectorizing an unaligned access.
common/dct.c:113:9: note: Vectorizing an unaligned access.
common/dct.c:113:9: note: Vectorizing an unaligned access.
common/dct.c:113:9: note: === vect_analyze_slp ===
common/dct.c:113:9: note: === vect_make_slp_decision ===
common/dct.c:113:9: note: === vect_detect_hybrid_slp ===
common/dct.c:113:9: note: === vect_analyze_loop_operations ===
common/dct.c:113:9: note: examining phi: .MEM_231 = PHI <.MEM_215(3), .MEM_236(7)>

common/dct.c:113:9: note: examining phi: x_233 = PHI <x_210(3), 0(7)>

common/dct.c:113:9: note: examining phi: ivtmp_535 = PHI <ivtmp_534(3), 8(7)>

common/dct.c:113:9: note: ==> examining statement: # DEBUG x => x_233
common/dct.c:113:9: note: irrelevant.
common/dct.c:113:9: note: ==> examining statement: _195 = x_233 + pretmp_546;
common/dct.c:113:9: note: irrelevant.
common/dct.c:113:9: note: ==> examining statement: _196 = (long unsigned int) _195;
common/dct.c:113:9: note: irrelevant.
common/dct.c:113:9: note: ==> examining statement: _197 = _196 * 2;
common/dct.c:113:9: note: irrelevant.
common/dct.c:113:9: note: ==> examining statement: _198 = &tmp + _197;
common/dct.c:113:9: note: irrelevant.
common/dct.c:113:9: note: ==> examining statement: _199 = (sizetype) x_233;
common/dct.c:113:9: note: irrelevant.
common/dct.c:113:9: note: ==> examining statement: _201 = pix1_234 + _199;
common/dct.c:113:9: note: irrelevant.
common/dct.c:113:9: note: ==> examining statement: _202 = *_201;
common/dct.c:113:9: note: vect_is_simple_use: operand *_201
common/dct.c:113:9: note: not ssa-name.
common/dct.c:113:9: note: use not simple.
common/dct.c:113:9: note: vect_is_simple_use: operand *_201
common/dct.c:113:9: note: not ssa-name.
common/dct.c:113:9: note: use not simple.
common/dct.c:113:9: note: vect_model_load_cost: unaligned supported by hardware.
common/dct.c:113:9: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:113:9: note: ==> examining statement: _203 = (unsigned short) _202;
common/dct.c:113:9: note: vect_is_simple_use: operand _202
common/dct.c:113:9: note: def_stmt: _202 = *_201;
common/dct.c:113:9: note: type of def: 3.
common/dct.c:113:9: note: === vectorizable_conversion ===
common/dct.c:113:9: note: vect_model_promotion_demotion_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:113:9: note: ==> examining statement: _205 = pix2_235 + _199;
common/dct.c:113:9: note: irrelevant.
common/dct.c:113:9: note: ==> examining statement: _206 = *_205;
common/dct.c:113:9: note: vect_is_simple_use: operand *_205
common/dct.c:113:9: note: not ssa-name.
common/dct.c:113:9: note: use not simple.
common/dct.c:113:9: note: vect_is_simple_use: operand *_205
common/dct.c:113:9: note: not ssa-name.
common/dct.c:113:9: note: use not simple.
common/dct.c:113:9: note: vect_model_load_cost: unaligned supported by hardware.
common/dct.c:113:9: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:113:9: note: ==> examining statement: _207 = (unsigned short) _206;
common/dct.c:113:9: note: vect_is_simple_use: operand _206
common/dct.c:113:9: note: def_stmt: _206 = *_205;
common/dct.c:113:9: note: type of def: 3.
common/dct.c:113:9: note: === vectorizable_conversion ===
common/dct.c:113:9: note: vect_model_promotion_demotion_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:113:9: note: ==> examining statement: _208 = _203 - _207;
common/dct.c:113:9: note: vect_is_simple_use: operand _203
common/dct.c:113:9: note: def_stmt: _203 = (unsigned short) _202;
common/dct.c:113:9: note: type of def: 3.
common/dct.c:113:9: note: vect_is_simple_use: operand _207
common/dct.c:113:9: note: def_stmt: _207 = (unsigned short) _206;
common/dct.c:113:9: note: type of def: 3.
common/dct.c:113:9: note: === vectorizable_operation ===
common/dct.c:113:9: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:113:9: note: ==> examining statement: _209 = (short int) _208;
common/dct.c:113:9: note: vect_is_simple_use: operand _208
common/dct.c:113:9: note: def_stmt: _208 = _203 - _207;
common/dct.c:113:9: note: type of def: 3.
common/dct.c:113:9: note: vect_is_simple_use: operand _208
common/dct.c:113:9: note: def_stmt: _208 = _203 - _207;
common/dct.c:113:9: note: type of def: 3.
common/dct.c:113:9: note: no optab.
common/dct.c:113:9: note: vect_is_simple_use: operand _208
common/dct.c:113:9: note: def_stmt: _208 = _203 - _207;
common/dct.c:113:9: note: type of def: 3.
common/dct.c:113:9: note: === vectorizable_assignment ===
common/dct.c:113:9: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:113:9: note: ==> examining statement: *_198 = _209;
common/dct.c:113:9: note: vect_is_simple_use: operand _209
common/dct.c:113:9: note: def_stmt: _209 = (short int) _208;
common/dct.c:113:9: note: type of def: 3.
common/dct.c:113:9: note: vect_model_store_cost: unaligned supported by hardware.
common/dct.c:113:9: note: vect_model_store_cost: inside_cost = 4, prologue_cost = 0 .
common/dct.c:113:9: note: ==> examining statement: x_210 = x_233 + 1;
common/dct.c:113:9: note: irrelevant.
common/dct.c:113:9: note: ==> examining statement: # DEBUG x => x_210
common/dct.c:113:9: note: irrelevant.
common/dct.c:113:9: note: ==> examining statement: # DEBUG x => x_210
common/dct.c:113:9: note: irrelevant.
common/dct.c:113:9: note: ==> examining statement: ivtmp_534 = ivtmp_535 - 1;
common/dct.c:113:9: note: irrelevant.
common/dct.c:113:9: note: ==> examining statement: if (ivtmp_534 != 0)
common/dct.c:113:9: note: irrelevant.
common/dct.c:113:9: note: vectorization_factor = 16, niters = 8
common/dct.c:113:9: note: not vectorized: iteration count too small.
common/dct.c:113:9: note: not vectorized: iteration count smaller than vectorization factor.
common/dct.c:113:9: note: bad operation or unsupported loop bound.
common/dct.c:265:13: note: vectorized 1 loops in function.
Removing basic block 8
basic block 8, loop depth 0
 pred:      
 succ:       15


sub8x8_dct8 (int16_t[8] * dct, uint8_t * pix1, uint8_t * pix2)
{
  vector(8) short int * vectp_tmp.156;
  vector(8) short int * vectp_tmp.155;
  vector(8) short int vect__98.154;
  vector(8) unsigned short vect__97.153;
  vector(8) unsigned short vect__96.152;
  vector(8) unsigned short vect__95.151;
  const vector(4) int vect__94.150;
  vector(8) short int * vectp_tmp.149;
  vector(8) short int * vectp_tmp.148;
  vector(8) short int vect__92.147;
  vector(8) unsigned short vect__91.146;
  vector(8) unsigned short vect__90.145;
  vector(8) unsigned short vect__89.144;
  const vector(4) int vect__88.143;
  vector(8) short int * vectp_tmp.142;
  vector(8) short int * vectp_tmp.141;
  vector(8) short int vect__86.140;
  vector(8) unsigned short vect__85.139;
  vector(8) unsigned short vect__84.138;
  const vector(4) int vect__83.137;
  vector(8) unsigned short vect__82.136;
  vector(8) short int * vectp_tmp.135;
  vector(8) short int * vectp_tmp.134;
  vector(8) short int vect__80.133;
  vector(8) unsigned short vect__79.132;
  vector(8) short int * vectp_tmp.131;
  vector(8) short int * vectp_tmp.130;
  vector(8) short int vect__77.129;
  vector(8) unsigned short vect__76.128;
  vector(8) unsigned short vect__75.127;
  vector(8) unsigned short vect__74.126;
  const vector(4) int vect__73.125;
  vector(8) short int * vectp_tmp.124;
  vector(8) short int * vectp_tmp.123;
  vector(8) short int vect__71.122;
  vector(8) unsigned short vect__70.121;
  vector(8) unsigned short vect__69.120;
  vector(8) unsigned short vect__68.119;
  const vector(4) int vect__67.118;
  vector(8) short int * vectp_tmp.117;
  vector(8) short int * vectp_tmp.116;
  vector(8) short int vect__65.115;
  vector(8) unsigned short vect__64.114;
  vector(8) unsigned short vect__63.113;
  vector(8) unsigned short vect__62.112;
  const vector(4) int vect__61.111;
  vector(8) short int * vectp_tmp.110;
  vector(8) short int * vectp_tmp.109;
  vector(8) short int vect__59.108;
  vector(8) unsigned short vect__58.107;
  vector(8) unsigned short vect__57.106;
  vector(8) unsigned short vect__56.105;
  vector(4) int vect_a7_55.104;
  const vector(4) int vect__54.103;
  const vector(4) int vect__53.102;
  const vector(4) int vect__52.101;
  vector(4) int vect_a6_51.100;
  const vector(4) int vect__50.99;
  const vector(4) int vect__49.98;
  const vector(4) int vect__48.97;
  vector(4) int vect_a5_47.96;
  const vector(4) int vect__46.95;
  const vector(4) int vect__45.94;
  const vector(4) int vect__44.93;
  vector(4) int vect_a4_43.92;
  const vector(4) int vect__42.91;
  const vector(4) int vect__41.90;
  const vector(4) int vect__40.89;
  vector(4) int vect_d34_39.88;
  vector(4) int vect_d25_38.87;
  vector(4) int vect_d16_37.86;
  vector(4) int vect_d07_35.85;
  const vector(4) int vect_a3_32.84;
  const vector(4) int vect_a2_31.83;
  const vector(4) int vect_a1_30.82;
  const vector(4) int vect_a0_29.81;
  vector(4) int vect_s34_28.80;
  vector(4) int vect__27.79;
  vector(8) short int vect__26.78;
  vector(8) short int * vectp_tmp.77;
  vector(8) short int * vectp_tmp.76;
  vector(4) int vect__25.75;
  vector(8) short int vect__24.74;
  vector(8) short int * vectp_tmp.73;
  vector(8) short int * vectp_tmp.72;
  vector(4) int vect_s25_23.71;
  vector(4) int vect__22.70;
  vector(8) short int vect__21.69;
  vector(8) short int * vectp_tmp.68;
  vector(8) short int * vectp_tmp.67;
  vector(4) int vect__20.66;
  vector(8) short int vect__19.65;
  vector(8) short int * vectp_tmp.64;
  vector(8) short int * vectp_tmp.63;
  vector(4) int vect_s16_18.62;
  vector(4) int vect__17.61;
  vector(8) short int vect__16.60;
  vector(8) short int * vectp_tmp.59;
  vector(8) short int * vectp_tmp.58;
  vector(4) int vect__15.57;
  vector(8) short int vect__14.56;
  vector(8) short int * vectp_tmp.55;
  vector(8) short int * vectp_tmp.54;
  vector(4) int vect_s07_13.53;
  vector(4) int vect__12.52;
  vector(8) short int vect__11.51;
  vector(8) short int * vectp_tmp.50;
  vector(8) short int * vectp_tmp.49;
  vector(4) int vect__10.48;
  vector(8) short int vect__9.47;
  vector(8) short int * vectp_tmp.46;
  vector(8) short int * vectp_tmp.45;
  int y;
  int x;
  const int a7;
  const int a6;
  const int a5;
  const int a4;
  const int d34;
  const int d25;
  const int d16;
  const int d07;
  const int a3;
  const int a2;
  const int a1;
  const int a0;
  const int s34;
  const int s25;
  const int s16;
  const int s07;
  const int a7;
  const int a6;
  const int a5;
  const int a4;
  const int d34;
  const int d25;
  const int d16;
  const int d07;
  const int a3;
  const int a2;
  const int a1;
  const int a0;
  const int s34;
  const int s25;
  const int s16;
  const int s07;
  int16_t tmp[8][8];
  int i;
  short int _9;
  int _10;
  short int _11;
  int _12;
  short int _14;
  int _15;
  short int _16;
  int _17;
  short int _19;
  int _20;
  short int _21;
  int _22;
  short int _24;
  int _25;
  short int _26;
  int _27;
  int _40;
  int _41;
  int _42;
  int _44;
  int _45;
  int _46;
  int _48;
  int _49;
  int _50;
  int _52;
  int _53;
  int _54;
  unsigned short _56;
  unsigned short _57;
  unsigned short _58;
  short int _59;
  int _61;
  unsigned short _62;
  unsigned short _63;
  unsigned short _64;
  short int _65;
  int _67;
  unsigned short _68;
  unsigned short _69;
  unsigned short _70;
  short int _71;
  int _73;
  unsigned short _74;
  unsigned short _75;
  unsigned short _76;
  short int _77;
  unsigned short _79;
  short int _80;
  unsigned short _82;
  int _83;
  unsigned short _84;
  unsigned short _85;
  short int _86;
  int _88;
  unsigned short _89;
  unsigned short _90;
  unsigned short _91;
  short int _92;
  int _94;
  unsigned short _95;
  unsigned short _96;
  unsigned short _97;
  short int _98;
  unsigned int ivtmp_99;
  short int _101;
  int _102;
  short int _103;
  int _104;
  short int _106;
  int _107;
  short int _108;
  int _109;
  short int _111;
  int _112;
  short int _113;
  int _114;
  short int _116;
  int _117;
  short int _118;
  int _119;
  int _129;
  int _130;
  int _131;
  int _133;
  int _134;
  int _135;
  int _137;
  int _138;
  int _139;
  int _141;
  int _142;
  int _143;
  unsigned short _145;
  unsigned short _146;
  unsigned short _147;
  short int _148;
  int _151;
  unsigned short _152;
  unsigned short _153;
  unsigned short _154;
  short int _155;
  int _157;
  unsigned short _158;
  unsigned short _159;
  unsigned short _160;
  short int _161;
  int _163;
  unsigned short _164;
  unsigned short _165;
  unsigned short _166;
  short int _167;
  unsigned short _169;
  short int _170;
  unsigned short _172;
  int _173;
  unsigned short _174;
  unsigned short _175;
  short int _176;
  int _178;
  unsigned short _179;
  unsigned short _180;
  unsigned short _181;
  short int _182;
  int _184;
  unsigned short _185;
  unsigned short _186;
  unsigned short _187;
  short int _188;
  int _195;
  long unsigned int _196;
  long unsigned int _197;
  int16_t * _198;
  sizetype _199;
  uint8_t * _201;
  unsigned char _202;
  unsigned short _203;
  uint8_t * _205;
  unsigned char _206;
  unsigned short _207;
  unsigned short _208;
  short int _209;
  unsigned int ivtmp_360;
  unsigned int ivtmp_532;
  unsigned int ivtmp_533;
  unsigned int ivtmp_534;
  unsigned int ivtmp_535;
  unsigned int ivtmp_536;
  unsigned int ivtmp_537;
  unsigned int ivtmp_538;
  unsigned int ivtmp_539;
  int pretmp_546;

  <bb 2>:
  # DEBUG diff => &tmp
  # DEBUG i_size => 8
  # DEBUG pix1 => pix1_6(D)
  # DEBUG i_pix1 => 16
  # DEBUG pix2 => pix2_7(D)
  # DEBUG i_pix2 => 32
  # DEBUG y => 0
  # DEBUG y => 0
  # DEBUG pix2 => pix2_7(D)
  # DEBUG pix1 => pix1_6(D)
  goto <bb 7>;

  <bb 3>:

  <bb 4>:
  # x_233 = PHI <x_210(3), 0(7)>
  # ivtmp_535 = PHI <ivtmp_534(3), 8(7)>
  # DEBUG x => x_233
  _195 = x_233 + pretmp_546;
  _196 = (long unsigned int) _195;
  _197 = _196 * 2;
  _198 = &tmp + _197;
  _199 = (sizetype) x_233;
  _201 = pix1_234 + _199;
  _202 = *_201;
  _203 = (unsigned short) _202;
  _205 = pix2_235 + _199;
  _206 = *_205;
  _207 = (unsigned short) _206;
  _208 = _203 - _207;
  _209 = (short int) _208;
  *_198 = _209;
  x_210 = x_233 + 1;
  # DEBUG x => x_210
  # DEBUG x => x_210
  ivtmp_534 = ivtmp_535 - 1;
  if (ivtmp_534 != 0)
    goto <bb 3>;
  else
    goto <bb 5>;

  <bb 5>:
  pix1_211 = pix1_234 + 16;
  # DEBUG pix1 => pix1_211
  pix2_212 = pix2_235 + 32;
  # DEBUG pix2 => pix2_212
  y_213 = y_232 + 1;
  # DEBUG y => y_213
  # DEBUG y => y_213
  # DEBUG pix2 => pix2_212
  # DEBUG pix1 => pix1_211
  ivtmp_532 = ivtmp_533 - 1;
  if (ivtmp_532 != 0)
    goto <bb 6>;
  else
    goto <bb 8>;

  <bb 6>:

  <bb 7>:
  # y_232 = PHI <y_213(6), 0(2)>
  # pix1_234 = PHI <pix1_211(6), pix1_6(D)(2)>
  # pix2_235 = PHI <pix2_212(6), pix2_7(D)(2)>
  # ivtmp_533 = PHI <ivtmp_532(6), 8(2)>
  # DEBUG y => y_232
  # DEBUG pix2 => pix2_235
  # DEBUG pix1 => pix1_234
  # DEBUG x => 0
  pretmp_546 = y_232 * 8;
  goto <bb 4>;

  <bb 8>:
  vectp_tmp.46_531 = &tmp;
  vectp_tmp.50_525 = &tmp + 112;
  vectp_tmp.55_517 = &tmp + 16;
  vectp_tmp.59_511 = &tmp + 96;
  vectp_tmp.64_503 = &tmp + 32;
  vectp_tmp.68_497 = &tmp + 80;
  vectp_tmp.73_489 = &tmp + 48;
  vectp_tmp.77_483 = &tmp + 64;
  vectp_tmp.110_423 = &tmp;
  vectp_tmp.117_414 = &tmp + 16;
  vectp_tmp.124_405 = &tmp + 32;
  vectp_tmp.131_396 = &tmp + 48;
  vectp_tmp.135_391 = &tmp + 64;
  vectp_tmp.142_382 = &tmp + 80;
  vectp_tmp.149_373 = &tmp + 96;
  vectp_tmp.156_364 = &tmp + 112;

  <bb 9>:
  # i_36 = PHI <0(8), i_100(10)>
  # ivtmp_537 = PHI <8(8), ivtmp_539(10)>
  # vectp_tmp.45_530 = PHI <vectp_tmp.46_531(8), vectp_tmp.45_529(10)>
  # vectp_tmp.49_524 = PHI <vectp_tmp.50_525(8), vectp_tmp.49_523(10)>
  # vectp_tmp.54_516 = PHI <vectp_tmp.55_517(8), vectp_tmp.54_515(10)>
  # vectp_tmp.58_510 = PHI <vectp_tmp.59_511(8), vectp_tmp.58_509(10)>
  # vectp_tmp.63_502 = PHI <vectp_tmp.64_503(8), vectp_tmp.63_501(10)>
  # vectp_tmp.67_496 = PHI <vectp_tmp.68_497(8), vectp_tmp.67_495(10)>
  # vectp_tmp.72_488 = PHI <vectp_tmp.73_489(8), vectp_tmp.72_487(10)>
  # vectp_tmp.76_482 = PHI <vectp_tmp.77_483(8), vectp_tmp.76_481(10)>
  # vectp_tmp.109_422 = PHI <vectp_tmp.110_423(8), vectp_tmp.109_421(10)>
  # vectp_tmp.116_413 = PHI <vectp_tmp.117_414(8), vectp_tmp.116_412(10)>
  # vectp_tmp.123_404 = PHI <vectp_tmp.124_405(8), vectp_tmp.123_403(10)>
  # vectp_tmp.130_395 = PHI <vectp_tmp.131_396(8), vectp_tmp.130_394(10)>
  # vectp_tmp.134_390 = PHI <vectp_tmp.135_391(8), vectp_tmp.134_389(10)>
  # vectp_tmp.141_381 = PHI <vectp_tmp.142_382(8), vectp_tmp.141_380(10)>
  # vectp_tmp.148_372 = PHI <vectp_tmp.149_373(8), vectp_tmp.148_371(10)>
  # vectp_tmp.155_363 = PHI <vectp_tmp.156_364(8), vectp_tmp.155_362(10)>
  # ivtmp_99 = PHI <0(8), ivtmp_360(10)>
  # DEBUG i => i_36
  vect__9.47_528 = MEM[(short int *)vectp_tmp.45_530];
  _9 = tmp[0][i_36];
  vect__10.48_527 = [vec_unpack_lo_expr] vect__9.47_528;
  vect__10.48_526 = [vec_unpack_hi_expr] vect__9.47_528;
  _10 = (int) _9;
  vect__11.51_522 = MEM[(short int *)vectp_tmp.49_524];
  _11 = tmp[7][i_36];
  vect__12.52_521 = [vec_unpack_lo_expr] vect__11.51_522;
  vect__12.52_520 = [vec_unpack_hi_expr] vect__11.51_522;
  _12 = (int) _11;
  vect_s07_13.53_519 = vect__10.48_527 + vect__12.52_521;
  vect_s07_13.53_518 = vect__10.48_526 + vect__12.52_520;
  s07_13 = _10 + _12;
  # DEBUG s07 => s07_13
  vect__14.56_514 = MEM[(short int *)vectp_tmp.54_516];
  _14 = tmp[1][i_36];
  vect__15.57_513 = [vec_unpack_lo_expr] vect__14.56_514;
  vect__15.57_512 = [vec_unpack_hi_expr] vect__14.56_514;
  _15 = (int) _14;
  vect__16.60_508 = MEM[(short int *)vectp_tmp.58_510];
  _16 = tmp[6][i_36];
  vect__17.61_507 = [vec_unpack_lo_expr] vect__16.60_508;
  vect__17.61_506 = [vec_unpack_hi_expr] vect__16.60_508;
  _17 = (int) _16;
  vect_s16_18.62_505 = vect__15.57_513 + vect__17.61_507;
  vect_s16_18.62_504 = vect__15.57_512 + vect__17.61_506;
  s16_18 = _15 + _17;
  # DEBUG s16 => s16_18
  vect__19.65_500 = MEM[(short int *)vectp_tmp.63_502];
  _19 = tmp[2][i_36];
  vect__20.66_499 = [vec_unpack_lo_expr] vect__19.65_500;
  vect__20.66_498 = [vec_unpack_hi_expr] vect__19.65_500;
  _20 = (int) _19;
  vect__21.69_494 = MEM[(short int *)vectp_tmp.67_496];
  _21 = tmp[5][i_36];
  vect__22.70_493 = [vec_unpack_lo_expr] vect__21.69_494;
  vect__22.70_492 = [vec_unpack_hi_expr] vect__21.69_494;
  _22 = (int) _21;
  vect_s25_23.71_491 = vect__20.66_499 + vect__22.70_493;
  vect_s25_23.71_490 = vect__20.66_498 + vect__22.70_492;
  s25_23 = _20 + _22;
  # DEBUG s25 => s25_23
  vect__24.74_486 = MEM[(short int *)vectp_tmp.72_488];
  _24 = tmp[3][i_36];
  vect__25.75_485 = [vec_unpack_lo_expr] vect__24.74_486;
  vect__25.75_484 = [vec_unpack_hi_expr] vect__24.74_486;
  _25 = (int) _24;
  vect__26.78_480 = MEM[(short int *)vectp_tmp.76_482];
  _26 = tmp[4][i_36];
  vect__27.79_479 = [vec_unpack_lo_expr] vect__26.78_480;
  vect__27.79_478 = [vec_unpack_hi_expr] vect__26.78_480;
  _27 = (int) _26;
  vect_s34_28.80_477 = vect__25.75_485 + vect__27.79_479;
  vect_s34_28.80_476 = vect__25.75_484 + vect__27.79_478;
  s34_28 = _25 + _27;
  # DEBUG s34 => s34_28
  vect_a0_29.81_475 = vect_s07_13.53_519 + vect_s34_28.80_477;
  vect_a0_29.81_474 = vect_s07_13.53_518 + vect_s34_28.80_476;
  a0_29 = s07_13 + s34_28;
  # DEBUG a0 => a0_29
  vect_a1_30.82_473 = vect_s16_18.62_505 + vect_s25_23.71_491;
  vect_a1_30.82_472 = vect_s16_18.62_504 + vect_s25_23.71_490;
  a1_30 = s16_18 + s25_23;
  # DEBUG a1 => a1_30
  vect_a2_31.83_471 = vect_s07_13.53_519 - vect_s34_28.80_477;
  vect_a2_31.83_470 = vect_s07_13.53_518 - vect_s34_28.80_476;
  a2_31 = s07_13 - s34_28;
  # DEBUG a2 => a2_31
  vect_a3_32.84_469 = vect_s16_18.62_505 - vect_s25_23.71_491;
  vect_a3_32.84_468 = vect_s16_18.62_504 - vect_s25_23.71_490;
  a3_32 = s16_18 - s25_23;
  # DEBUG a3 => a3_32
  vect_d07_35.85_467 = vect__10.48_527 - vect__12.52_521;
  vect_d07_35.85_466 = vect__10.48_526 - vect__12.52_520;
  d07_35 = _10 - _12;
  # DEBUG d07 => d07_35
  vect_d16_37.86_465 = vect__15.57_513 - vect__17.61_507;
  vect_d16_37.86_464 = vect__15.57_512 - vect__17.61_506;
  d16_37 = _15 - _17;
  # DEBUG d16 => d16_37
  vect_d25_38.87_463 = vect__20.66_499 - vect__22.70_493;
  vect_d25_38.87_462 = vect__20.66_498 - vect__22.70_492;
  d25_38 = _20 - _22;
  # DEBUG d25 => d25_38
  vect_d34_39.88_461 = vect__25.75_485 - vect__27.79_479;
  vect_d34_39.88_460 = vect__25.75_484 - vect__27.79_478;
  d34_39 = _25 - _27;
  # DEBUG d34 => d34_39
  vect__40.89_459 = vect_d16_37.86_465 + vect_d25_38.87_463;
  vect__40.89_458 = vect_d16_37.86_464 + vect_d25_38.87_462;
  _40 = d16_37 + d25_38;
  vect__41.90_457 = vect_d07_35.85_467 >> 1;
  vect__41.90_456 = vect_d07_35.85_466 >> 1;
  _41 = d07_35 >> 1;
  vect__42.91_455 = vect_d07_35.85_467 + vect__41.90_457;
  vect__42.91_454 = vect_d07_35.85_466 + vect__41.90_456;
  _42 = d07_35 + _41;
  vect_a4_43.92_453 = vect__40.89_459 + vect__42.91_455;
  vect_a4_43.92_452 = vect__40.89_458 + vect__42.91_454;
  a4_43 = _40 + _42;
  # DEBUG a4 => a4_43
  vect__44.93_451 = vect_d07_35.85_467 - vect_d34_39.88_461;
  vect__44.93_450 = vect_d07_35.85_466 - vect_d34_39.88_460;
  _44 = d07_35 - d34_39;
  vect__45.94_449 = vect_d25_38.87_463 >> 1;
  vect__45.94_448 = vect_d25_38.87_462 >> 1;
  _45 = d25_38 >> 1;
  vect__46.95_447 = vect_d25_38.87_463 + vect__45.94_449;
  vect__46.95_446 = vect_d25_38.87_462 + vect__45.94_448;
  _46 = d25_38 + _45;
  vect_a5_47.96_445 = vect__44.93_451 - vect__46.95_447;
  vect_a5_47.96_444 = vect__44.93_450 - vect__46.95_446;
  a5_47 = _44 - _46;
  # DEBUG a5 => a5_47
  vect__48.97_443 = vect_d07_35.85_467 + vect_d34_39.88_461;
  vect__48.97_442 = vect_d07_35.85_466 + vect_d34_39.88_460;
  _48 = d07_35 + d34_39;
  vect__49.98_441 = vect_d16_37.86_465 >> 1;
  vect__49.98_440 = vect_d16_37.86_464 >> 1;
  _49 = d16_37 >> 1;
  vect__50.99_439 = vect_d16_37.86_465 + vect__49.98_441;
  vect__50.99_438 = vect_d16_37.86_464 + vect__49.98_440;
  _50 = d16_37 + _49;
  vect_a6_51.100_437 = vect__48.97_443 - vect__50.99_439;
  vect_a6_51.100_436 = vect__48.97_442 - vect__50.99_438;
  a6_51 = _48 - _50;
  # DEBUG a6 => a6_51
  vect__52.101_435 = vect_d16_37.86_465 - vect_d25_38.87_463;
  vect__52.101_434 = vect_d16_37.86_464 - vect_d25_38.87_462;
  _52 = d16_37 - d25_38;
  vect__53.102_433 = vect_d34_39.88_461 >> 1;
  vect__53.102_432 = vect_d34_39.88_460 >> 1;
  _53 = d34_39 >> 1;
  vect__54.103_431 = vect_d34_39.88_461 + vect__53.102_433;
  vect__54.103_430 = vect_d34_39.88_460 + vect__53.102_432;
  _54 = d34_39 + _53;
  vect_a7_55.104_429 = vect__52.101_435 + vect__54.103_431;
  vect_a7_55.104_428 = vect__52.101_434 + vect__54.103_430;
  a7_55 = _52 + _54;
  # DEBUG a7 => a7_55
  vect__56.105_427 = VEC_PACK_TRUNC_EXPR <vect_a0_29.81_475, vect_a0_29.81_474>;
  _56 = (unsigned short) a0_29;
  vect__57.106_426 = VEC_PACK_TRUNC_EXPR <vect_a1_30.82_473, vect_a1_30.82_472>;
  _57 = (unsigned short) a1_30;
  vect__58.107_425 = vect__56.105_427 + vect__57.106_426;
  _58 = _56 + _57;
  vect__59.108_424 = VIEW_CONVERT_EXPR<vector(8) short int>(vect__58.107_425);
  _59 = (short int) _58;
  MEM[(short int *)vectp_tmp.109_422] = vect__59.108_424;
  vect__61.111_60 = vect_a7_55.104_429 >> 2;
  vect__61.111_419 = vect_a7_55.104_428 >> 2;
  _61 = a7_55 >> 2;
  vect__62.112_418 = VEC_PACK_TRUNC_EXPR <vect__61.111_60, vect__61.111_419>;
  _62 = (unsigned short) _61;
  vect__63.113_417 = VEC_PACK_TRUNC_EXPR <vect_a4_43.92_453, vect_a4_43.92_452>;
  _63 = (unsigned short) a4_43;
  vect__64.114_416 = vect__62.112_418 + vect__63.113_417;
  _64 = _62 + _63;
  vect__65.115_415 = VIEW_CONVERT_EXPR<vector(8) short int>(vect__64.114_416);
  _65 = (short int) _64;
  MEM[(short int *)vectp_tmp.116_413] = vect__65.115_415;
  vect__67.118_66 = vect_a3_32.84_469 >> 1;
  vect__67.118_410 = vect_a3_32.84_468 >> 1;
  _67 = a3_32 >> 1;
  vect__68.119_409 = VEC_PACK_TRUNC_EXPR <vect__67.118_66, vect__67.118_410>;
  _68 = (unsigned short) _67;
  vect__69.120_408 = VEC_PACK_TRUNC_EXPR <vect_a2_31.83_471, vect_a2_31.83_470>;
  _69 = (unsigned short) a2_31;
  vect__70.121_407 = vect__68.119_409 + vect__69.120_408;
  _70 = _68 + _69;
  vect__71.122_406 = VIEW_CONVERT_EXPR<vector(8) short int>(vect__70.121_407);
  _71 = (short int) _70;
  MEM[(short int *)vectp_tmp.123_404] = vect__71.122_406;
  vect__73.125_72 = vect_a6_51.100_437 >> 2;
  vect__73.125_401 = vect_a6_51.100_436 >> 2;
  _73 = a6_51 >> 2;
  vect__74.126_400 = VEC_PACK_TRUNC_EXPR <vect__73.125_72, vect__73.125_401>;
  _74 = (unsigned short) _73;
  vect__75.127_399 = VEC_PACK_TRUNC_EXPR <vect_a5_47.96_445, vect_a5_47.96_444>;
  _75 = (unsigned short) a5_47;
  vect__76.128_398 = vect__74.126_400 + vect__75.127_399;
  _76 = _74 + _75;
  vect__77.129_397 = VIEW_CONVERT_EXPR<vector(8) short int>(vect__76.128_398);
  _77 = (short int) _76;
  MEM[(short int *)vectp_tmp.130_395] = vect__77.129_397;
  vect__79.132_78 = vect__56.105_427 - vect__57.106_426;
  _79 = _56 - _57;
  vect__80.133_392 = VIEW_CONVERT_EXPR<vector(8) short int>(vect__79.132_78);
  _80 = (short int) _79;
  MEM[(short int *)vectp_tmp.134_390] = vect__80.133_392;
  vect__82.136_81 = VEC_PACK_TRUNC_EXPR <vect_a6_51.100_437, vect_a6_51.100_436>;
  _82 = (unsigned short) a6_51;
  vect__83.137_387 = vect_a5_47.96_445 >> 2;
  vect__83.137_386 = vect_a5_47.96_444 >> 2;
  _83 = a5_47 >> 2;
  vect__84.138_385 = VEC_PACK_TRUNC_EXPR <vect__83.137_387, vect__83.137_386>;
  _84 = (unsigned short) _83;
  vect__85.139_384 = vect__82.136_81 - vect__84.138_385;
  _85 = _82 - _84;
  vect__86.140_383 = VIEW_CONVERT_EXPR<vector(8) short int>(vect__85.139_384);
  _86 = (short int) _85;
  MEM[(short int *)vectp_tmp.141_381] = vect__86.140_383;
  vect__88.143_87 = vect_a2_31.83_471 >> 1;
  vect__88.143_378 = vect_a2_31.83_470 >> 1;
  _88 = a2_31 >> 1;
  vect__89.144_377 = VEC_PACK_TRUNC_EXPR <vect__88.143_87, vect__88.143_378>;
  _89 = (unsigned short) _88;
  vect__90.145_376 = VEC_PACK_TRUNC_EXPR <vect_a3_32.84_469, vect_a3_32.84_468>;
  _90 = (unsigned short) a3_32;
  vect__91.146_375 = vect__89.144_377 - vect__90.145_376;
  _91 = _89 - _90;
  vect__92.147_374 = VIEW_CONVERT_EXPR<vector(8) short int>(vect__91.146_375);
  _92 = (short int) _91;
  MEM[(short int *)vectp_tmp.148_372] = vect__92.147_374;
  vect__94.150_93 = vect_a4_43.92_453 >> 2;
  vect__94.150_369 = vect_a4_43.92_452 >> 2;
  _94 = a4_43 >> 2;
  vect__95.151_368 = VEC_PACK_TRUNC_EXPR <vect__94.150_93, vect__94.150_369>;
  _95 = (unsigned short) _94;
  vect__96.152_367 = VEC_PACK_TRUNC_EXPR <vect_a7_55.104_429, vect_a7_55.104_428>;
  _96 = (unsigned short) a7_55;
  vect__97.153_366 = vect__95.151_368 - vect__96.152_367;
  _97 = _95 - _96;
  vect__98.154_365 = VIEW_CONVERT_EXPR<vector(8) short int>(vect__97.153_366);
  _98 = (short int) _97;
  MEM[(short int *)vectp_tmp.155_363] = vect__98.154_365;
  i_100 = i_36 + 1;
  # DEBUG i => i_100
  # DEBUG i => i_100
  ivtmp_539 = ivtmp_537 - 1;
  vectp_tmp.45_529 = vectp_tmp.45_530 + 16;
  vectp_tmp.49_523 = vectp_tmp.49_524 + 16;
  vectp_tmp.54_515 = vectp_tmp.54_516 + 16;
  vectp_tmp.58_509 = vectp_tmp.58_510 + 16;
  vectp_tmp.63_501 = vectp_tmp.63_502 + 16;
  vectp_tmp.67_495 = vectp_tmp.67_496 + 16;
  vectp_tmp.72_487 = vectp_tmp.72_488 + 16;
  vectp_tmp.76_481 = vectp_tmp.76_482 + 16;
  vectp_tmp.109_421 = vectp_tmp.109_422 + 16;
  vectp_tmp.116_412 = vectp_tmp.116_413 + 16;
  vectp_tmp.123_403 = vectp_tmp.123_404 + 16;
  vectp_tmp.130_394 = vectp_tmp.130_395 + 16;
  vectp_tmp.134_389 = vectp_tmp.134_390 + 16;
  vectp_tmp.141_380 = vectp_tmp.141_381 + 16;
  vectp_tmp.148_371 = vectp_tmp.148_372 + 16;
  vectp_tmp.155_362 = vectp_tmp.155_363 + 16;
  ivtmp_360 = ivtmp_99 + 1;
  if (ivtmp_360 < 1)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  goto <bb 9>;

  <bb 11>:

  <bb 12>:
  # i_33 = PHI <0(11), i_190(13)>
  # ivtmp_538 = PHI <8(11), ivtmp_536(13)>
  # DEBUG i => i_33
  _101 = tmp[i_33][0];
  _102 = (int) _101;
  _103 = tmp[i_33][7];
  _104 = (int) _103;
  s07_105 = _102 + _104;
  # DEBUG s07 => s07_105
  _106 = tmp[i_33][1];
  _107 = (int) _106;
  _108 = tmp[i_33][6];
  _109 = (int) _108;
  s16_110 = _107 + _109;
  # DEBUG s16 => s16_110
  _111 = tmp[i_33][2];
  _112 = (int) _111;
  _113 = tmp[i_33][5];
  _114 = (int) _113;
  s25_115 = _112 + _114;
  # DEBUG s25 => s25_115
  _116 = tmp[i_33][3];
  _117 = (int) _116;
  _118 = tmp[i_33][4];
  _119 = (int) _118;
  s34_120 = _117 + _119;
  # DEBUG s34 => s34_120
  a0_121 = s07_105 + s34_120;
  # DEBUG a0 => a0_121
  a1_122 = s16_110 + s25_115;
  # DEBUG a1 => a1_122
  a2_123 = s07_105 - s34_120;
  # DEBUG a2 => a2_123
  a3_124 = s16_110 - s25_115;
  # DEBUG a3 => a3_124
  d07_125 = _102 - _104;
  # DEBUG d07 => d07_125
  d16_126 = _107 - _109;
  # DEBUG d16 => d16_126
  d25_127 = _112 - _114;
  # DEBUG d25 => d25_127
  d34_128 = _117 - _119;
  # DEBUG d34 => d34_128
  _129 = d16_126 + d25_127;
  _130 = d07_125 >> 1;
  _131 = d07_125 + _130;
  a4_132 = _129 + _131;
  # DEBUG a4 => a4_132
  _133 = d07_125 - d34_128;
  _134 = d25_127 >> 1;
  _135 = d25_127 + _134;
  a5_136 = _133 - _135;
  # DEBUG a5 => a5_136
  _137 = d07_125 + d34_128;
  _138 = d16_126 >> 1;
  _139 = d16_126 + _138;
  a6_140 = _137 - _139;
  # DEBUG a6 => a6_140
  _141 = d16_126 - d25_127;
  _142 = d34_128 >> 1;
  _143 = d34_128 + _142;
  a7_144 = _141 + _143;
  # DEBUG a7 => a7_144
  _145 = (unsigned short) a0_121;
  _146 = (unsigned short) a1_122;
  _147 = _145 + _146;
  _148 = (short int) _147;
  *dct_149(D)[i_33] = _148;
  _151 = a7_144 >> 2;
  _152 = (unsigned short) _151;
  _153 = (unsigned short) a4_132;
  _154 = _152 + _153;
  _155 = (short int) _154;
  MEM[(int16_t[8] *)dct_149(D) + 16B][i_33] = _155;
  _157 = a3_124 >> 1;
  _158 = (unsigned short) _157;
  _159 = (unsigned short) a2_123;
  _160 = _158 + _159;
  _161 = (short int) _160;
  MEM[(int16_t[8] *)dct_149(D) + 32B][i_33] = _161;
  _163 = a6_140 >> 2;
  _164 = (unsigned short) _163;
  _165 = (unsigned short) a5_136;
  _166 = _164 + _165;
  _167 = (short int) _166;
  MEM[(int16_t[8] *)dct_149(D) + 48B][i_33] = _167;
  _169 = _145 - _146;
  _170 = (short int) _169;
  MEM[(int16_t[8] *)dct_149(D) + 64B][i_33] = _170;
  _172 = (unsigned short) a6_140;
  _173 = a5_136 >> 2;
  _174 = (unsigned short) _173;
  _175 = _172 - _174;
  _176 = (short int) _175;
  MEM[(int16_t[8] *)dct_149(D) + 80B][i_33] = _176;
  _178 = a2_123 >> 1;
  _179 = (unsigned short) _178;
  _180 = (unsigned short) a3_124;
  _181 = _179 - _180;
  _182 = (short int) _181;
  MEM[(int16_t[8] *)dct_149(D) + 96B][i_33] = _182;
  _184 = a4_132 >> 2;
  _185 = (unsigned short) _184;
  _186 = (unsigned short) a7_144;
  _187 = _185 - _186;
  _188 = (short int) _187;
  MEM[(int16_t[8] *)dct_149(D) + 112B][i_33] = _188;
  i_190 = i_33 + 1;
  # DEBUG i => i_190
  # DEBUG i => i_190
  ivtmp_536 = ivtmp_538 - 1;
  if (ivtmp_536 != 0)
    goto <bb 13>;
  else
    goto <bb 14>;

  <bb 13>:
  goto <bb 12>;

  <bb 14>:
  tmp ={v} {CLOBBER};
  return;

}



;; Function add8x8_idct8 (add8x8_idct8, funcdef_no=126, decl_uid=6010, cgraph_uid=126, symbol_order=171)


Analyzing loop at common/dct.c:337
common/dct.c:337:5: note: ===== analyze_loop_nest =====
common/dct.c:337:5: note: === vect_analyze_loop_form ===
common/dct.c:337:5: note: === get_loop_niters ===
Analyzing # of iterations of loop 2
  exit condition [7, + , 4294967295] != 0
  bounds on difference of bases: -7 ... -7
  result:
    # of iterations 7, bounded by 7
common/dct.c:337:5: note: === vect_analyze_data_refs ===
Creating dr for *_104[0]
analyze_innermost: success.
	base_address: dct_6(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 16
	aligned to: 128
	base_object: *dct_6(D)
	Access function 0: 0
	Access function 1: {0B, +, 16}_2
Creating dr for *_104[4]
analyze_innermost: success.
	base_address: dct_6(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 16
	aligned to: 128
	base_object: *dct_6(D)
	Access function 0: 4
	Access function 1: {0B, +, 16}_2
Creating dr for *_104[2]
analyze_innermost: success.
	base_address: dct_6(D)
	offset from base address: 0
	constant offset from base address: 4
	step: 16
	aligned to: 128
	base_object: *dct_6(D)
	Access function 0: 2
	Access function 1: {0B, +, 16}_2
Creating dr for *_104[6]
analyze_innermost: success.
	base_address: dct_6(D)
	offset from base address: 0
	constant offset from base address: 12
	step: 16
	aligned to: 128
	base_object: *dct_6(D)
	Access function 0: 6
	Access function 1: {0B, +, 16}_2
Creating dr for *_104[5]
analyze_innermost: success.
	base_address: dct_6(D)
	offset from base address: 0
	constant offset from base address: 10
	step: 16
	aligned to: 128
	base_object: *dct_6(D)
	Access function 0: 5
	Access function 1: {0B, +, 16}_2
Creating dr for *_104[3]
analyze_innermost: success.
	base_address: dct_6(D)
	offset from base address: 0
	constant offset from base address: 6
	step: 16
	aligned to: 128
	base_object: *dct_6(D)
	Access function 0: 3
	Access function 1: {0B, +, 16}_2
Creating dr for *_104[7]
analyze_innermost: success.
	base_address: dct_6(D)
	offset from base address: 0
	constant offset from base address: 14
	step: 16
	aligned to: 128
	base_object: *dct_6(D)
	Access function 0: 7
	Access function 1: {0B, +, 16}_2
Creating dr for *_104[1]
analyze_innermost: success.
	base_address: dct_6(D)
	offset from base address: 0
	constant offset from base address: 2
	step: 16
	aligned to: 128
	base_object: *dct_6(D)
	Access function 0: 1
	Access function 1: {0B, +, 16}_2
Creating dr for *_162
analyze_innermost: success.
	base_address: dst_161(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *dst_161(D)
	Access function 0: {0B, +, 1}_2
Creating dr for *_162
analyze_innermost: success.
	base_address: dst_161(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *dst_161(D)
	Access function 0: {0B, +, 1}_2
Creating dr for *_171
analyze_innermost: Applying pattern match.pd:49, generic-match.c:4015
success.
Applying pattern match.pd:49, generic-match.c:4015
	base_address: dst_161(D)
	offset from base address: 0
	constant offset from base address: 32
	step: 1
	aligned to: 128
	base_object: *dst_161(D)
	Access function 0: {32B, +, 1}_2
Creating dr for *_171
analyze_innermost: Applying pattern match.pd:49, generic-match.c:4015
success.
Applying pattern match.pd:49, generic-match.c:4015
	base_address: dst_161(D)
	offset from base address: 0
	constant offset from base address: 32
	step: 1
	aligned to: 128
	base_object: *dst_161(D)
	Access function 0: {32B, +, 1}_2
Creating dr for *_180
analyze_innermost: Applying pattern match.pd:49, generic-match.c:4015
success.
Applying pattern match.pd:49, generic-match.c:4015
	base_address: dst_161(D)
	offset from base address: 0
	constant offset from base address: 64
	step: 1
	aligned to: 128
	base_object: *dst_161(D)
	Access function 0: {64B, +, 1}_2
Creating dr for *_180
analyze_innermost: Applying pattern match.pd:49, generic-match.c:4015
success.
Applying pattern match.pd:49, generic-match.c:4015
	base_address: dst_161(D)
	offset from base address: 0
	constant offset from base address: 64
	step: 1
	aligned to: 128
	base_object: *dst_161(D)
	Access function 0: {64B, +, 1}_2
Creating dr for *_189
analyze_innermost: Applying pattern match.pd:49, generic-match.c:4015
success.
Applying pattern match.pd:49, generic-match.c:4015
	base_address: dst_161(D)
	offset from base address: 0
	constant offset from base address: 96
	step: 1
	aligned to: 128
	base_object: *dst_161(D)
	Access function 0: {96B, +, 1}_2
Creating dr for *_189
analyze_innermost: Applying pattern match.pd:49, generic-match.c:4015
success.
Applying pattern match.pd:49, generic-match.c:4015
	base_address: dst_161(D)
	offset from base address: 0
	constant offset from base address: 96
	step: 1
	aligned to: 128
	base_object: *dst_161(D)
	Access function 0: {96B, +, 1}_2
Creating dr for *_198
analyze_innermost: Applying pattern match.pd:49, generic-match.c:4015
success.
Applying pattern match.pd:49, generic-match.c:4015
	base_address: dst_161(D)
	offset from base address: 0
	constant offset from base address: 128
	step: 1
	aligned to: 128
	base_object: *dst_161(D)
	Access function 0: {128B, +, 1}_2
Creating dr for *_198
analyze_innermost: Applying pattern match.pd:49, generic-match.c:4015
success.
Applying pattern match.pd:49, generic-match.c:4015
	base_address: dst_161(D)
	offset from base address: 0
	constant offset from base address: 128
	step: 1
	aligned to: 128
	base_object: *dst_161(D)
	Access function 0: {128B, +, 1}_2
Creating dr for *_207
analyze_innermost: Applying pattern match.pd:49, generic-match.c:4015
success.
Applying pattern match.pd:49, generic-match.c:4015
	base_address: dst_161(D)
	offset from base address: 0
	constant offset from base address: 160
	step: 1
	aligned to: 128
	base_object: *dst_161(D)
	Access function 0: {160B, +, 1}_2
Creating dr for *_207
analyze_innermost: Applying pattern match.pd:49, generic-match.c:4015
success.
Applying pattern match.pd:49, generic-match.c:4015
	base_address: dst_161(D)
	offset from base address: 0
	constant offset from base address: 160
	step: 1
	aligned to: 128
	base_object: *dst_161(D)
	Access function 0: {160B, +, 1}_2
Creating dr for *_216
analyze_innermost: Applying pattern match.pd:49, generic-match.c:4015
success.
Applying pattern match.pd:49, generic-match.c:4015
	base_address: dst_161(D)
	offset from base address: 0
	constant offset from base address: 192
	step: 1
	aligned to: 128
	base_object: *dst_161(D)
	Access function 0: {192B, +, 1}_2
Creating dr for *_216
analyze_innermost: Applying pattern match.pd:49, generic-match.c:4015
success.
Applying pattern match.pd:49, generic-match.c:4015
	base_address: dst_161(D)
	offset from base address: 0
	constant offset from base address: 192
	step: 1
	aligned to: 128
	base_object: *dst_161(D)
	Access function 0: {192B, +, 1}_2
Creating dr for *_225
analyze_innermost: Applying pattern match.pd:49, generic-match.c:4015
success.
Applying pattern match.pd:49, generic-match.c:4015
	base_address: dst_161(D)
	offset from base address: 0
	constant offset from base address: 224
	step: 1
	aligned to: 128
	base_object: *dst_161(D)
	Access function 0: {224B, +, 1}_2
Creating dr for *_225
analyze_innermost: Applying pattern match.pd:49, generic-match.c:4015
success.
Applying pattern match.pd:49, generic-match.c:4015
	base_address: dst_161(D)
	offset from base address: 0
	constant offset from base address: 224
	step: 1
	aligned to: 128
	base_object: *dst_161(D)
	Access function 0: {224B, +, 1}_2
common/dct.c:337:5: note: got vectype for stmt: _105 = *_104[0];
vector(8) short int
common/dct.c:337:5: note: got vectype for stmt: _107 = *_104[4];
vector(8) short int
common/dct.c:337:5: note: got vectype for stmt: _111 = *_104[2];
vector(8) short int
common/dct.c:337:5: note: got vectype for stmt: _114 = *_104[6];
vector(8) short int
common/dct.c:337:5: note: got vectype for stmt: _125 = *_104[5];
vector(8) short int
common/dct.c:337:5: note: got vectype for stmt: _127 = *_104[3];
vector(8) short int
common/dct.c:337:5: note: got vectype for stmt: _130 = *_104[7];
vector(8) short int
common/dct.c:337:5: note: got vectype for stmt: _136 = *_104[1];
vector(8) short int
common/dct.c:337:5: note: got vectype for stmt: _163 = *_162;
vector(16) unsigned char
common/dct.c:337:5: note: got vectype for stmt: *_162 = iftmp.0_273;
vector(16) unsigned char
common/dct.c:337:5: note: got vectype for stmt: _172 = *_171;
vector(16) unsigned char
common/dct.c:337:5: note: got vectype for stmt: *_171 = iftmp.0_267;
vector(16) unsigned char
common/dct.c:337:5: note: got vectype for stmt: _181 = *_180;
vector(16) unsigned char
common/dct.c:337:5: note: got vectype for stmt: *_180 = iftmp.0_261;
vector(16) unsigned char
common/dct.c:337:5: note: got vectype for stmt: _190 = *_189;
vector(16) unsigned char
common/dct.c:337:5: note: got vectype for stmt: *_189 = iftmp.0_255;
vector(16) unsigned char
common/dct.c:337:5: note: got vectype for stmt: _199 = *_198;
vector(16) unsigned char
common/dct.c:337:5: note: got vectype for stmt: *_198 = iftmp.0_249;
vector(16) unsigned char
common/dct.c:337:5: note: got vectype for stmt: _208 = *_207;
vector(16) unsigned char
common/dct.c:337:5: note: got vectype for stmt: *_207 = iftmp.0_243;
vector(16) unsigned char
common/dct.c:337:5: note: got vectype for stmt: _217 = *_216;
vector(16) unsigned char
common/dct.c:337:5: note: got vectype for stmt: *_216 = iftmp.0_237;
vector(16) unsigned char
common/dct.c:337:5: note: got vectype for stmt: _226 = *_225;
vector(16) unsigned char
common/dct.c:337:5: note: got vectype for stmt: *_225 = iftmp.0_186;
vector(16) unsigned char
common/dct.c:337:5: note: === vect_analyze_scalar_cycles ===
common/dct.c:337:5: note: Analyze phi: i_305 = PHI <0(5), i_233(7)>

common/dct.c:337:5: note: Access function of PHI: {0, +, 1}_2
common/dct.c:337:5: note: step: 1,  init: 0
common/dct.c:337:5: note: Detected induction.
common/dct.c:337:5: note: Analyze phi: .MEM_303 = PHI <.MEM_100(5), .MEM_232(7)>

common/dct.c:337:5: note: Analyze phi: ivtmp_565 = PHI <8(5), ivtmp_564(7)>

common/dct.c:337:5: note: Access function of PHI: {8, +, 4294967295}_2
common/dct.c:337:5: note: step: 4294967295,  init: 8
common/dct.c:337:5: note: Detected induction.
common/dct.c:337:5: note: === vect_pattern_recog ===
common/dct.c:337:5: note: vect_is_simple_use: operand _102
common/dct.c:337:5: note: def_stmt: _102 = (long unsigned int) i_305;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand i_305
common/dct.c:337:5: note: def_stmt: i_305 = PHI <0(5), i_233(7)>
common/dct.c:337:5: note: type of def: 4.
common/dct.c:337:5: note: vect_is_simple_use: operand 16
common/dct.c:337:5: note: vect_is_simple_use: operand _165
common/dct.c:337:5: note: def_stmt: _165 = b0_121 + b7_160;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand _269
common/dct.c:337:5: note: def_stmt: _269 = -_167;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand iftmp.0_271
common/dct.c:337:5: note: def_stmt: iftmp.0_271 = (unsigned char) _270;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand _270
common/dct.c:337:5: note: def_stmt: _270 = _269 >> 31;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand iftmp.0_272
common/dct.c:337:5: note: def_stmt: iftmp.0_272 = (unsigned char) _167;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand _167
common/dct.c:337:5: note: def_stmt: _167 = _164 + _166;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_recog_mixed_size_cond_pattern: detected:
common/dct.c:337:5: note: pattern recognized: patt_560 = (unsigned char) patt_561;
common/dct.c:337:5: note: vect_is_simple_use: operand _174
common/dct.c:337:5: note: def_stmt: _174 = b2_122 + b5_158;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand _263
common/dct.c:337:5: note: def_stmt: _263 = -_176;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand iftmp.0_265
common/dct.c:337:5: note: def_stmt: iftmp.0_265 = (unsigned char) _264;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand _264
common/dct.c:337:5: note: def_stmt: _264 = _263 >> 31;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand iftmp.0_266
common/dct.c:337:5: note: def_stmt: iftmp.0_266 = (unsigned char) _176;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand _176
common/dct.c:337:5: note: def_stmt: _176 = _173 + _175;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_recog_mixed_size_cond_pattern: detected:
common/dct.c:337:5: note: pattern recognized: patt_558 = (unsigned char) patt_559;
common/dct.c:337:5: note: vect_is_simple_use: operand _183
common/dct.c:337:5: note: def_stmt: _183 = b4_123 + b3_156;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand _257
common/dct.c:337:5: note: def_stmt: _257 = -_185;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand iftmp.0_259
common/dct.c:337:5: note: def_stmt: iftmp.0_259 = (unsigned char) _258;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand _258
common/dct.c:337:5: note: def_stmt: _258 = _257 >> 31;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand iftmp.0_260
common/dct.c:337:5: note: def_stmt: iftmp.0_260 = (unsigned char) _185;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand _185
common/dct.c:337:5: note: def_stmt: _185 = _182 + _184;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_recog_mixed_size_cond_pattern: detected:
common/dct.c:337:5: note: pattern recognized: patt_556 = (unsigned char) patt_557;
common/dct.c:337:5: note: vect_is_simple_use: operand _192
common/dct.c:337:5: note: def_stmt: _192 = b6_124 + b1_154;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand _251
common/dct.c:337:5: note: def_stmt: _251 = -_194;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand iftmp.0_253
common/dct.c:337:5: note: def_stmt: iftmp.0_253 = (unsigned char) _252;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand _252
common/dct.c:337:5: note: def_stmt: _252 = _251 >> 31;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand iftmp.0_254
common/dct.c:337:5: note: def_stmt: iftmp.0_254 = (unsigned char) _194;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand _194
common/dct.c:337:5: note: def_stmt: _194 = _191 + _193;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_recog_mixed_size_cond_pattern: detected:
common/dct.c:337:5: note: pattern recognized: patt_554 = (unsigned char) patt_555;
common/dct.c:337:5: note: vect_is_simple_use: operand _201
common/dct.c:337:5: note: def_stmt: _201 = b6_124 - b1_154;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand _245
common/dct.c:337:5: note: def_stmt: _245 = -_203;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand iftmp.0_247
common/dct.c:337:5: note: def_stmt: iftmp.0_247 = (unsigned char) _246;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand _246
common/dct.c:337:5: note: def_stmt: _246 = _245 >> 31;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand iftmp.0_248
common/dct.c:337:5: note: def_stmt: iftmp.0_248 = (unsigned char) _203;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand _203
common/dct.c:337:5: note: def_stmt: _203 = _200 + _202;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_recog_mixed_size_cond_pattern: detected:
common/dct.c:337:5: note: pattern recognized: patt_552 = (unsigned char) patt_553;
common/dct.c:337:5: note: vect_is_simple_use: operand _210
common/dct.c:337:5: note: def_stmt: _210 = b4_123 - b3_156;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand _239
common/dct.c:337:5: note: def_stmt: _239 = -_212;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand iftmp.0_241
common/dct.c:337:5: note: def_stmt: iftmp.0_241 = (unsigned char) _240;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand _240
common/dct.c:337:5: note: def_stmt: _240 = _239 >> 31;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand iftmp.0_242
common/dct.c:337:5: note: def_stmt: iftmp.0_242 = (unsigned char) _212;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand _212
common/dct.c:337:5: note: def_stmt: _212 = _209 + _211;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_recog_mixed_size_cond_pattern: detected:
common/dct.c:337:5: note: pattern recognized: patt_550 = (unsigned char) patt_551;
common/dct.c:337:5: note: vect_is_simple_use: operand _219
common/dct.c:337:5: note: def_stmt: _219 = b2_122 - b5_158;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand _168
common/dct.c:337:5: note: def_stmt: _168 = -_221;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand iftmp.0_235
common/dct.c:337:5: note: def_stmt: iftmp.0_235 = (unsigned char) _234;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand _234
common/dct.c:337:5: note: def_stmt: _234 = _168 >> 31;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand iftmp.0_236
common/dct.c:337:5: note: def_stmt: iftmp.0_236 = (unsigned char) _221;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand _221
common/dct.c:337:5: note: def_stmt: _221 = _218 + _220;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_recog_mixed_size_cond_pattern: detected:
common/dct.c:337:5: note: pattern recognized: patt_548 = (unsigned char) patt_549;
common/dct.c:337:5: note: vect_is_simple_use: operand _228
common/dct.c:337:5: note: def_stmt: _228 = b0_121 - b7_160;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand _222
common/dct.c:337:5: note: def_stmt: _222 = -_230;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand iftmp.0_204
common/dct.c:337:5: note: def_stmt: iftmp.0_204 = (unsigned char) _213;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand _213
common/dct.c:337:5: note: def_stmt: _213 = _222 >> 31;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand iftmp.0_195
common/dct.c:337:5: note: def_stmt: iftmp.0_195 = (unsigned char) _230;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand _230
common/dct.c:337:5: note: def_stmt: _230 = _227 + _229;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_recog_mixed_size_cond_pattern: detected:
common/dct.c:337:5: note: pattern recognized: patt_546 = (unsigned char) patt_547;
common/dct.c:337:5: note: === vect_analyze_data_ref_accesses ===
common/dct.c:337:5: note: Detected interleaving *_104[0] and *_104[1]
common/dct.c:337:5: note: Detected interleaving *_104[0] and *_104[2]
common/dct.c:337:5: note: Detected interleaving *_104[0] and *_104[3]
common/dct.c:337:5: note: Detected interleaving *_104[0] and *_104[4]
common/dct.c:337:5: note: Detected interleaving *_104[0] and *_104[5]
common/dct.c:337:5: note: Detected interleaving *_104[0] and *_104[6]
common/dct.c:337:5: note: Detected interleaving *_104[0] and *_104[7]
common/dct.c:337:5: note: Detected interleaving of size 8
common/dct.c:337:5: note: === vect_mark_stmts_to_be_vectorized ===
common/dct.c:337:5: note: init: phi relevant? i_305 = PHI <0(5), i_233(7)>
common/dct.c:337:5: note: init: phi relevant? .MEM_303 = PHI <.MEM_100(5), .MEM_232(7)>
common/dct.c:337:5: note: init: phi relevant? ivtmp_565 = PHI <8(5), ivtmp_564(7)>
common/dct.c:337:5: note: init: stmt relevant? # DEBUG i => NULL
common/dct.c:337:5: note: init: stmt relevant? _102 = (long unsigned int) i_305;
common/dct.c:337:5: note: init: stmt relevant? _103 = _102 * 16;
common/dct.c:337:5: note: init: stmt relevant? _104 = dct_6(D) + _103;
common/dct.c:337:5: note: init: stmt relevant? _105 = *_104[0];
common/dct.c:337:5: note: init: stmt relevant? _106 = (int) _105;
common/dct.c:337:5: note: init: stmt relevant? _107 = *_104[4];
common/dct.c:337:5: note: init: stmt relevant? _108 = (int) _107;
common/dct.c:337:5: note: init: stmt relevant? a0_109 = _106 + _108;
common/dct.c:337:5: note: init: stmt relevant? # DEBUG a0 => NULL
common/dct.c:337:5: note: init: stmt relevant? a2_110 = _106 - _108;
common/dct.c:337:5: note: init: stmt relevant? # DEBUG a2 => NULL
common/dct.c:337:5: note: init: stmt relevant? _111 = *_104[2];
common/dct.c:337:5: note: init: stmt relevant? _112 = _111 >> 1;
common/dct.c:337:5: note: init: stmt relevant? _113 = (int) _112;
common/dct.c:337:5: note: init: stmt relevant? _114 = *_104[6];
common/dct.c:337:5: note: init: stmt relevant? _115 = (int) _114;
common/dct.c:337:5: note: init: stmt relevant? a4_116 = _113 - _115;
common/dct.c:337:5: note: init: stmt relevant? # DEBUG a4 => NULL
common/dct.c:337:5: note: init: stmt relevant? _117 = _114 >> 1;
common/dct.c:337:5: note: init: stmt relevant? _118 = (int) _117;
common/dct.c:337:5: note: init: stmt relevant? _119 = (int) _111;
common/dct.c:337:5: note: init: stmt relevant? a6_120 = _118 + _119;
common/dct.c:337:5: note: init: stmt relevant? # DEBUG a6 => NULL
common/dct.c:337:5: note: init: stmt relevant? b0_121 = a0_109 + a6_120;
common/dct.c:337:5: note: init: stmt relevant? # DEBUG b0 => NULL
common/dct.c:337:5: note: init: stmt relevant? b2_122 = a2_110 + a4_116;
common/dct.c:337:5: note: init: stmt relevant? # DEBUG b2 => NULL
common/dct.c:337:5: note: init: stmt relevant? b4_123 = a2_110 - a4_116;
common/dct.c:337:5: note: init: stmt relevant? # DEBUG b4 => NULL
common/dct.c:337:5: note: init: stmt relevant? b6_124 = a0_109 - a6_120;
common/dct.c:337:5: note: init: stmt relevant? # DEBUG b6 => NULL
common/dct.c:337:5: note: init: stmt relevant? _125 = *_104[5];
common/dct.c:337:5: note: init: stmt relevant? _126 = (int) _125;
common/dct.c:337:5: note: init: stmt relevant? _127 = *_104[3];
common/dct.c:337:5: note: init: stmt relevant? _128 = (int) _127;
common/dct.c:337:5: note: init: stmt relevant? _129 = _126 - _128;
common/dct.c:337:5: note: init: stmt relevant? _130 = *_104[7];
common/dct.c:337:5: note: init: stmt relevant? _131 = (int) _130;
common/dct.c:337:5: note: init: stmt relevant? _132 = _129 - _131;
common/dct.c:337:5: note: init: stmt relevant? _133 = _130 >> 1;
common/dct.c:337:5: note: init: stmt relevant? _134 = (int) _133;
common/dct.c:337:5: note: init: stmt relevant? a1_135 = _132 - _134;
common/dct.c:337:5: note: init: stmt relevant? # DEBUG a1 => NULL
common/dct.c:337:5: note: init: stmt relevant? _136 = *_104[1];
common/dct.c:337:5: note: init: stmt relevant? _137 = (int) _136;
common/dct.c:337:5: note: init: stmt relevant? _138 = _131 + _137;
common/dct.c:337:5: note: init: stmt relevant? _139 = _138 - _128;
common/dct.c:337:5: note: init: stmt relevant? _140 = _127 >> 1;
common/dct.c:337:5: note: init: stmt relevant? _141 = (int) _140;
common/dct.c:337:5: note: init: stmt relevant? a3_142 = _139 - _141;
common/dct.c:337:5: note: init: stmt relevant? # DEBUG a3 => NULL
common/dct.c:337:5: note: init: stmt relevant? _143 = _131 - _137;
common/dct.c:337:5: note: init: stmt relevant? _144 = _126 + _143;
common/dct.c:337:5: note: init: stmt relevant? _145 = _125 >> 1;
common/dct.c:337:5: note: init: stmt relevant? _146 = (int) _145;
common/dct.c:337:5: note: init: stmt relevant? a5_147 = _144 + _146;
common/dct.c:337:5: note: init: stmt relevant? # DEBUG a5 => NULL
common/dct.c:337:5: note: init: stmt relevant? _148 = _126 + _128;
common/dct.c:337:5: note: init: stmt relevant? _149 = _137 + _148;
common/dct.c:337:5: note: init: stmt relevant? _150 = _136 >> 1;
common/dct.c:337:5: note: init: stmt relevant? _151 = (int) _150;
common/dct.c:337:5: note: init: stmt relevant? a7_152 = _149 + _151;
common/dct.c:337:5: note: init: stmt relevant? # DEBUG a7 => NULL
common/dct.c:337:5: note: init: stmt relevant? _153 = a7_152 >> 2;
common/dct.c:337:5: note: init: stmt relevant? b1_154 = a1_135 + _153;
common/dct.c:337:5: note: init: stmt relevant? # DEBUG b1 => NULL
common/dct.c:337:5: note: init: stmt relevant? _155 = a5_147 >> 2;
common/dct.c:337:5: note: init: stmt relevant? b3_156 = a3_142 + _155;
common/dct.c:337:5: note: init: stmt relevant? # DEBUG b3 => NULL
common/dct.c:337:5: note: init: stmt relevant? _157 = a3_142 >> 2;
common/dct.c:337:5: note: init: stmt relevant? b5_158 = _157 - a5_147;
common/dct.c:337:5: note: init: stmt relevant? # DEBUG b5 => NULL
common/dct.c:337:5: note: init: stmt relevant? _159 = a1_135 >> 2;
common/dct.c:337:5: note: init: stmt relevant? b7_160 = a7_152 - _159;
common/dct.c:337:5: note: init: stmt relevant? # DEBUG b7 => NULL
common/dct.c:337:5: note: init: stmt relevant? _162 = dst_161(D) + _102;
common/dct.c:337:5: note: init: stmt relevant? _163 = *_162;
common/dct.c:337:5: note: init: stmt relevant? _164 = (int) _163;
common/dct.c:337:5: note: init: stmt relevant? _165 = b0_121 + b7_160;
common/dct.c:337:5: note: init: stmt relevant? _166 = _165 >> 6;
common/dct.c:337:5: note: init: stmt relevant? _167 = _164 + _166;
common/dct.c:337:5: note: init: stmt relevant? # DEBUG x => NULL
common/dct.c:337:5: note: init: stmt relevant? _268 = _167 & -256;
common/dct.c:337:5: note: init: stmt relevant? _269 = -_167;
common/dct.c:337:5: note: init: stmt relevant? _270 = _269 >> 31;
common/dct.c:337:5: note: init: stmt relevant? iftmp.0_271 = (unsigned char) _270;
common/dct.c:337:5: note: init: stmt relevant? iftmp.0_272 = (unsigned char) _167;
common/dct.c:337:5: note: init: stmt relevant? iftmp.0_273 = _268 != 0 ? iftmp.0_271 : iftmp.0_272;
common/dct.c:337:5: note: init: stmt relevant? # DEBUG x => NULL
common/dct.c:337:5: note: init: stmt relevant? *_162 = iftmp.0_273;
common/dct.c:337:5: note: vec_stmt_relevant_p: stmt has vdefs.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: init: stmt relevant? _170 = _102 + 32;
common/dct.c:337:5: note: init: stmt relevant? _171 = dst_161(D) + _170;
common/dct.c:337:5: note: init: stmt relevant? _172 = *_171;
common/dct.c:337:5: note: init: stmt relevant? _173 = (int) _172;
common/dct.c:337:5: note: init: stmt relevant? _174 = b2_122 + b5_158;
common/dct.c:337:5: note: init: stmt relevant? _175 = _174 >> 6;
common/dct.c:337:5: note: init: stmt relevant? _176 = _173 + _175;
common/dct.c:337:5: note: init: stmt relevant? # DEBUG x => NULL
common/dct.c:337:5: note: init: stmt relevant? _262 = _176 & -256;
common/dct.c:337:5: note: init: stmt relevant? _263 = -_176;
common/dct.c:337:5: note: init: stmt relevant? _264 = _263 >> 31;
common/dct.c:337:5: note: init: stmt relevant? iftmp.0_265 = (unsigned char) _264;
common/dct.c:337:5: note: init: stmt relevant? iftmp.0_266 = (unsigned char) _176;
common/dct.c:337:5: note: init: stmt relevant? iftmp.0_267 = _262 != 0 ? iftmp.0_265 : iftmp.0_266;
common/dct.c:337:5: note: init: stmt relevant? # DEBUG x => NULL
common/dct.c:337:5: note: init: stmt relevant? *_171 = iftmp.0_267;
common/dct.c:337:5: note: vec_stmt_relevant_p: stmt has vdefs.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: init: stmt relevant? _179 = _102 + 64;
common/dct.c:337:5: note: init: stmt relevant? _180 = dst_161(D) + _179;
common/dct.c:337:5: note: init: stmt relevant? _181 = *_180;
common/dct.c:337:5: note: init: stmt relevant? _182 = (int) _181;
common/dct.c:337:5: note: init: stmt relevant? _183 = b4_123 + b3_156;
common/dct.c:337:5: note: init: stmt relevant? _184 = _183 >> 6;
common/dct.c:337:5: note: init: stmt relevant? _185 = _182 + _184;
common/dct.c:337:5: note: init: stmt relevant? # DEBUG x => NULL
common/dct.c:337:5: note: init: stmt relevant? _256 = _185 & -256;
common/dct.c:337:5: note: init: stmt relevant? _257 = -_185;
common/dct.c:337:5: note: init: stmt relevant? _258 = _257 >> 31;
common/dct.c:337:5: note: init: stmt relevant? iftmp.0_259 = (unsigned char) _258;
common/dct.c:337:5: note: init: stmt relevant? iftmp.0_260 = (unsigned char) _185;
common/dct.c:337:5: note: init: stmt relevant? iftmp.0_261 = _256 != 0 ? iftmp.0_259 : iftmp.0_260;
common/dct.c:337:5: note: init: stmt relevant? # DEBUG x => NULL
common/dct.c:337:5: note: init: stmt relevant? *_180 = iftmp.0_261;
common/dct.c:337:5: note: vec_stmt_relevant_p: stmt has vdefs.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: init: stmt relevant? _188 = _102 + 96;
common/dct.c:337:5: note: init: stmt relevant? _189 = dst_161(D) + _188;
common/dct.c:337:5: note: init: stmt relevant? _190 = *_189;
common/dct.c:337:5: note: init: stmt relevant? _191 = (int) _190;
common/dct.c:337:5: note: init: stmt relevant? _192 = b6_124 + b1_154;
common/dct.c:337:5: note: init: stmt relevant? _193 = _192 >> 6;
common/dct.c:337:5: note: init: stmt relevant? _194 = _191 + _193;
common/dct.c:337:5: note: init: stmt relevant? # DEBUG x => NULL
common/dct.c:337:5: note: init: stmt relevant? _250 = _194 & -256;
common/dct.c:337:5: note: init: stmt relevant? _251 = -_194;
common/dct.c:337:5: note: init: stmt relevant? _252 = _251 >> 31;
common/dct.c:337:5: note: init: stmt relevant? iftmp.0_253 = (unsigned char) _252;
common/dct.c:337:5: note: init: stmt relevant? iftmp.0_254 = (unsigned char) _194;
common/dct.c:337:5: note: init: stmt relevant? iftmp.0_255 = _250 != 0 ? iftmp.0_253 : iftmp.0_254;
common/dct.c:337:5: note: init: stmt relevant? # DEBUG x => NULL
common/dct.c:337:5: note: init: stmt relevant? *_189 = iftmp.0_255;
common/dct.c:337:5: note: vec_stmt_relevant_p: stmt has vdefs.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: init: stmt relevant? _197 = _102 + 128;
common/dct.c:337:5: note: init: stmt relevant? _198 = dst_161(D) + _197;
common/dct.c:337:5: note: init: stmt relevant? _199 = *_198;
common/dct.c:337:5: note: init: stmt relevant? _200 = (int) _199;
common/dct.c:337:5: note: init: stmt relevant? _201 = b6_124 - b1_154;
common/dct.c:337:5: note: init: stmt relevant? _202 = _201 >> 6;
common/dct.c:337:5: note: init: stmt relevant? _203 = _200 + _202;
common/dct.c:337:5: note: init: stmt relevant? # DEBUG x => NULL
common/dct.c:337:5: note: init: stmt relevant? _244 = _203 & -256;
common/dct.c:337:5: note: init: stmt relevant? _245 = -_203;
common/dct.c:337:5: note: init: stmt relevant? _246 = _245 >> 31;
common/dct.c:337:5: note: init: stmt relevant? iftmp.0_247 = (unsigned char) _246;
common/dct.c:337:5: note: init: stmt relevant? iftmp.0_248 = (unsigned char) _203;
common/dct.c:337:5: note: init: stmt relevant? iftmp.0_249 = _244 != 0 ? iftmp.0_247 : iftmp.0_248;
common/dct.c:337:5: note: init: stmt relevant? # DEBUG x => NULL
common/dct.c:337:5: note: init: stmt relevant? *_198 = iftmp.0_249;
common/dct.c:337:5: note: vec_stmt_relevant_p: stmt has vdefs.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: init: stmt relevant? _206 = _102 + 160;
common/dct.c:337:5: note: init: stmt relevant? _207 = dst_161(D) + _206;
common/dct.c:337:5: note: init: stmt relevant? _208 = *_207;
common/dct.c:337:5: note: init: stmt relevant? _209 = (int) _208;
common/dct.c:337:5: note: init: stmt relevant? _210 = b4_123 - b3_156;
common/dct.c:337:5: note: init: stmt relevant? _211 = _210 >> 6;
common/dct.c:337:5: note: init: stmt relevant? _212 = _209 + _211;
common/dct.c:337:5: note: init: stmt relevant? # DEBUG x => NULL
common/dct.c:337:5: note: init: stmt relevant? _238 = _212 & -256;
common/dct.c:337:5: note: init: stmt relevant? _239 = -_212;
common/dct.c:337:5: note: init: stmt relevant? _240 = _239 >> 31;
common/dct.c:337:5: note: init: stmt relevant? iftmp.0_241 = (unsigned char) _240;
common/dct.c:337:5: note: init: stmt relevant? iftmp.0_242 = (unsigned char) _212;
common/dct.c:337:5: note: init: stmt relevant? iftmp.0_243 = _238 != 0 ? iftmp.0_241 : iftmp.0_242;
common/dct.c:337:5: note: init: stmt relevant? # DEBUG x => NULL
common/dct.c:337:5: note: init: stmt relevant? *_207 = iftmp.0_243;
common/dct.c:337:5: note: vec_stmt_relevant_p: stmt has vdefs.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: init: stmt relevant? _215 = _102 + 192;
common/dct.c:337:5: note: init: stmt relevant? _216 = dst_161(D) + _215;
common/dct.c:337:5: note: init: stmt relevant? _217 = *_216;
common/dct.c:337:5: note: init: stmt relevant? _218 = (int) _217;
common/dct.c:337:5: note: init: stmt relevant? _219 = b2_122 - b5_158;
common/dct.c:337:5: note: init: stmt relevant? _220 = _219 >> 6;
common/dct.c:337:5: note: init: stmt relevant? _221 = _218 + _220;
common/dct.c:337:5: note: init: stmt relevant? # DEBUG x => NULL
common/dct.c:337:5: note: init: stmt relevant? _177 = _221 & -256;
common/dct.c:337:5: note: init: stmt relevant? _168 = -_221;
common/dct.c:337:5: note: init: stmt relevant? _234 = _168 >> 31;
common/dct.c:337:5: note: init: stmt relevant? iftmp.0_235 = (unsigned char) _234;
common/dct.c:337:5: note: init: stmt relevant? iftmp.0_236 = (unsigned char) _221;
common/dct.c:337:5: note: init: stmt relevant? iftmp.0_237 = _177 != 0 ? iftmp.0_235 : iftmp.0_236;
common/dct.c:337:5: note: init: stmt relevant? # DEBUG x => NULL
common/dct.c:337:5: note: init: stmt relevant? *_216 = iftmp.0_237;
common/dct.c:337:5: note: vec_stmt_relevant_p: stmt has vdefs.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: init: stmt relevant? _224 = _102 + 224;
common/dct.c:337:5: note: init: stmt relevant? _225 = dst_161(D) + _224;
common/dct.c:337:5: note: init: stmt relevant? _226 = *_225;
common/dct.c:337:5: note: init: stmt relevant? _227 = (int) _226;
common/dct.c:337:5: note: init: stmt relevant? _228 = b0_121 - b7_160;
common/dct.c:337:5: note: init: stmt relevant? _229 = _228 >> 6;
common/dct.c:337:5: note: init: stmt relevant? _230 = _227 + _229;
common/dct.c:337:5: note: init: stmt relevant? # DEBUG x => NULL
common/dct.c:337:5: note: init: stmt relevant? _231 = _230 & -256;
common/dct.c:337:5: note: init: stmt relevant? _222 = -_230;
common/dct.c:337:5: note: init: stmt relevant? _213 = _222 >> 31;
common/dct.c:337:5: note: init: stmt relevant? iftmp.0_204 = (unsigned char) _213;
common/dct.c:337:5: note: init: stmt relevant? iftmp.0_195 = (unsigned char) _230;
common/dct.c:337:5: note: init: stmt relevant? iftmp.0_186 = _231 != 0 ? iftmp.0_204 : iftmp.0_195;
common/dct.c:337:5: note: init: stmt relevant? # DEBUG x => NULL
common/dct.c:337:5: note: init: stmt relevant? *_225 = iftmp.0_186;
common/dct.c:337:5: note: vec_stmt_relevant_p: stmt has vdefs.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: init: stmt relevant? i_233 = i_305 + 1;
common/dct.c:337:5: note: init: stmt relevant? # DEBUG i => i_233
common/dct.c:337:5: note: init: stmt relevant? # DEBUG i => i_233
common/dct.c:337:5: note: init: stmt relevant? ivtmp_564 = ivtmp_565 - 1;
common/dct.c:337:5: note: init: stmt relevant? if (ivtmp_564 != 0)
common/dct.c:337:5: note: worklist: examine stmt: *_225 = iftmp.0_186;
common/dct.c:337:5: note: vect_is_simple_use: operand iftmp.0_186
common/dct.c:337:5: note: def_stmt: iftmp.0_186 = _231 != 0 ? iftmp.0_204 : iftmp.0_195;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: last stmt in pattern. don't mark relevant/live.
common/dct.c:337:5: note: worklist: examine stmt: patt_546 = (unsigned char) patt_547;
common/dct.c:337:5: note: vect_is_simple_use: operand patt_547
common/dct.c:337:5: note: def_stmt: patt_547 = _231 != 0 ? _213 : _230;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: worklist: examine stmt: patt_547 = _231 != 0 ? _213 : _230;
common/dct.c:337:5: note: vect_is_simple_use: operand _231
common/dct.c:337:5: note: def_stmt: _231 = _230 & -256;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: vect_is_simple_use: operand 0
common/dct.c:337:5: note: vect_is_simple_use: operand _213
common/dct.c:337:5: note: def_stmt: _213 = _222 >> 31;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: vect_is_simple_use: operand _230
common/dct.c:337:5: note: def_stmt: _230 = _227 + _229;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: worklist: examine stmt: _230 = _227 + _229;
common/dct.c:337:5: note: vect_is_simple_use: operand _227
common/dct.c:337:5: note: def_stmt: _227 = (int) _226;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: vect_is_simple_use: operand _229
common/dct.c:337:5: note: def_stmt: _229 = _228 >> 6;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: worklist: examine stmt: _229 = _228 >> 6;
common/dct.c:337:5: note: vect_is_simple_use: operand _228
common/dct.c:337:5: note: def_stmt: _228 = b0_121 - b7_160;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: worklist: examine stmt: _228 = b0_121 - b7_160;
common/dct.c:337:5: note: vect_is_simple_use: operand b0_121
common/dct.c:337:5: note: def_stmt: b0_121 = a0_109 + a6_120;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: vect_is_simple_use: operand b7_160
common/dct.c:337:5: note: def_stmt: b7_160 = a7_152 - _159;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: worklist: examine stmt: b7_160 = a7_152 - _159;
common/dct.c:337:5: note: vect_is_simple_use: operand a7_152
common/dct.c:337:5: note: def_stmt: a7_152 = _149 + _151;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: vect_is_simple_use: operand _159
common/dct.c:337:5: note: def_stmt: _159 = a1_135 >> 2;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: worklist: examine stmt: _159 = a1_135 >> 2;
common/dct.c:337:5: note: vect_is_simple_use: operand a1_135
common/dct.c:337:5: note: def_stmt: a1_135 = _132 - _134;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: worklist: examine stmt: a1_135 = _132 - _134;
common/dct.c:337:5: note: vect_is_simple_use: operand _132
common/dct.c:337:5: note: def_stmt: _132 = _129 - _131;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: vect_is_simple_use: operand _134
common/dct.c:337:5: note: def_stmt: _134 = (int) _133;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: worklist: examine stmt: _134 = (int) _133;
common/dct.c:337:5: note: vect_is_simple_use: operand _133
common/dct.c:337:5: note: def_stmt: _133 = _130 >> 1;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: worklist: examine stmt: _133 = _130 >> 1;
common/dct.c:337:5: note: vect_is_simple_use: operand _130
common/dct.c:337:5: note: def_stmt: _130 = *_104[7];
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: worklist: examine stmt: _130 = *_104[7];
common/dct.c:337:5: note: worklist: examine stmt: _132 = _129 - _131;
common/dct.c:337:5: note: vect_is_simple_use: operand _129
common/dct.c:337:5: note: def_stmt: _129 = _126 - _128;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: vect_is_simple_use: operand _131
common/dct.c:337:5: note: def_stmt: _131 = (int) _130;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: worklist: examine stmt: _131 = (int) _130;
common/dct.c:337:5: note: vect_is_simple_use: operand _130
common/dct.c:337:5: note: def_stmt: _130 = *_104[7];
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: already marked relevant/live.
common/dct.c:337:5: note: worklist: examine stmt: _129 = _126 - _128;
common/dct.c:337:5: note: vect_is_simple_use: operand _126
common/dct.c:337:5: note: def_stmt: _126 = (int) _125;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: vect_is_simple_use: operand _128
common/dct.c:337:5: note: def_stmt: _128 = (int) _127;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: worklist: examine stmt: _128 = (int) _127;
common/dct.c:337:5: note: vect_is_simple_use: operand _127
common/dct.c:337:5: note: def_stmt: _127 = *_104[3];
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: worklist: examine stmt: _127 = *_104[3];
common/dct.c:337:5: note: worklist: examine stmt: _126 = (int) _125;
common/dct.c:337:5: note: vect_is_simple_use: operand _125
common/dct.c:337:5: note: def_stmt: _125 = *_104[5];
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: worklist: examine stmt: _125 = *_104[5];
common/dct.c:337:5: note: worklist: examine stmt: a7_152 = _149 + _151;
common/dct.c:337:5: note: vect_is_simple_use: operand _149
common/dct.c:337:5: note: def_stmt: _149 = _137 + _148;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: vect_is_simple_use: operand _151
common/dct.c:337:5: note: def_stmt: _151 = (int) _150;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: worklist: examine stmt: _151 = (int) _150;
common/dct.c:337:5: note: vect_is_simple_use: operand _150
common/dct.c:337:5: note: def_stmt: _150 = _136 >> 1;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: worklist: examine stmt: _150 = _136 >> 1;
common/dct.c:337:5: note: vect_is_simple_use: operand _136
common/dct.c:337:5: note: def_stmt: _136 = *_104[1];
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: worklist: examine stmt: _136 = *_104[1];
common/dct.c:337:5: note: worklist: examine stmt: _149 = _137 + _148;
common/dct.c:337:5: note: vect_is_simple_use: operand _137
common/dct.c:337:5: note: def_stmt: _137 = (int) _136;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: vect_is_simple_use: operand _148
common/dct.c:337:5: note: def_stmt: _148 = _126 + _128;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: worklist: examine stmt: _148 = _126 + _128;
common/dct.c:337:5: note: vect_is_simple_use: operand _126
common/dct.c:337:5: note: def_stmt: _126 = (int) _125;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: already marked relevant/live.
common/dct.c:337:5: note: vect_is_simple_use: operand _128
common/dct.c:337:5: note: def_stmt: _128 = (int) _127;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: already marked relevant/live.
common/dct.c:337:5: note: worklist: examine stmt: _137 = (int) _136;
common/dct.c:337:5: note: vect_is_simple_use: operand _136
common/dct.c:337:5: note: def_stmt: _136 = *_104[1];
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: already marked relevant/live.
common/dct.c:337:5: note: worklist: examine stmt: b0_121 = a0_109 + a6_120;
common/dct.c:337:5: note: vect_is_simple_use: operand a0_109
common/dct.c:337:5: note: def_stmt: a0_109 = _106 + _108;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: vect_is_simple_use: operand a6_120
common/dct.c:337:5: note: def_stmt: a6_120 = _118 + _119;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: worklist: examine stmt: a6_120 = _118 + _119;
common/dct.c:337:5: note: vect_is_simple_use: operand _118
common/dct.c:337:5: note: def_stmt: _118 = (int) _117;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: vect_is_simple_use: operand _119
common/dct.c:337:5: note: def_stmt: _119 = (int) _111;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: worklist: examine stmt: _119 = (int) _111;
common/dct.c:337:5: note: vect_is_simple_use: operand _111
common/dct.c:337:5: note: def_stmt: _111 = *_104[2];
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: worklist: examine stmt: _111 = *_104[2];
common/dct.c:337:5: note: worklist: examine stmt: _118 = (int) _117;
common/dct.c:337:5: note: vect_is_simple_use: operand _117
common/dct.c:337:5: note: def_stmt: _117 = _114 >> 1;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: worklist: examine stmt: _117 = _114 >> 1;
common/dct.c:337:5: note: vect_is_simple_use: operand _114
common/dct.c:337:5: note: def_stmt: _114 = *_104[6];
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: worklist: examine stmt: _114 = *_104[6];
common/dct.c:337:5: note: worklist: examine stmt: a0_109 = _106 + _108;
common/dct.c:337:5: note: vect_is_simple_use: operand _106
common/dct.c:337:5: note: def_stmt: _106 = (int) _105;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: vect_is_simple_use: operand _108
common/dct.c:337:5: note: def_stmt: _108 = (int) _107;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: worklist: examine stmt: _108 = (int) _107;
common/dct.c:337:5: note: vect_is_simple_use: operand _107
common/dct.c:337:5: note: def_stmt: _107 = *_104[4];
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: worklist: examine stmt: _107 = *_104[4];
common/dct.c:337:5: note: worklist: examine stmt: _106 = (int) _105;
common/dct.c:337:5: note: vect_is_simple_use: operand _105
common/dct.c:337:5: note: def_stmt: _105 = *_104[0];
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: worklist: examine stmt: _105 = *_104[0];
common/dct.c:337:5: note: worklist: examine stmt: _227 = (int) _226;
common/dct.c:337:5: note: vect_is_simple_use: operand _226
common/dct.c:337:5: note: def_stmt: _226 = *_225;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: worklist: examine stmt: _226 = *_225;
common/dct.c:337:5: note: worklist: examine stmt: _213 = _222 >> 31;
common/dct.c:337:5: note: vect_is_simple_use: operand _222
common/dct.c:337:5: note: def_stmt: _222 = -_230;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: worklist: examine stmt: _222 = -_230;
common/dct.c:337:5: note: vect_is_simple_use: operand _230
common/dct.c:337:5: note: def_stmt: _230 = _227 + _229;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: already marked relevant/live.
common/dct.c:337:5: note: worklist: examine stmt: _231 = _230 & -256;
common/dct.c:337:5: note: vect_is_simple_use: operand _230
common/dct.c:337:5: note: def_stmt: _230 = _227 + _229;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: already marked relevant/live.
common/dct.c:337:5: note: worklist: examine stmt: *_216 = iftmp.0_237;
common/dct.c:337:5: note: vect_is_simple_use: operand iftmp.0_237
common/dct.c:337:5: note: def_stmt: iftmp.0_237 = _177 != 0 ? iftmp.0_235 : iftmp.0_236;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: last stmt in pattern. don't mark relevant/live.
common/dct.c:337:5: note: worklist: examine stmt: patt_548 = (unsigned char) patt_549;
common/dct.c:337:5: note: vect_is_simple_use: operand patt_549
common/dct.c:337:5: note: def_stmt: patt_549 = _177 != 0 ? _234 : _221;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: worklist: examine stmt: patt_549 = _177 != 0 ? _234 : _221;
common/dct.c:337:5: note: vect_is_simple_use: operand _177
common/dct.c:337:5: note: def_stmt: _177 = _221 & -256;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: vect_is_simple_use: operand 0
common/dct.c:337:5: note: vect_is_simple_use: operand _234
common/dct.c:337:5: note: def_stmt: _234 = _168 >> 31;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: vect_is_simple_use: operand _221
common/dct.c:337:5: note: def_stmt: _221 = _218 + _220;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: worklist: examine stmt: _221 = _218 + _220;
common/dct.c:337:5: note: vect_is_simple_use: operand _218
common/dct.c:337:5: note: def_stmt: _218 = (int) _217;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: vect_is_simple_use: operand _220
common/dct.c:337:5: note: def_stmt: _220 = _219 >> 6;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: worklist: examine stmt: _220 = _219 >> 6;
common/dct.c:337:5: note: vect_is_simple_use: operand _219
common/dct.c:337:5: note: def_stmt: _219 = b2_122 - b5_158;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: worklist: examine stmt: _219 = b2_122 - b5_158;
common/dct.c:337:5: note: vect_is_simple_use: operand b2_122
common/dct.c:337:5: note: def_stmt: b2_122 = a2_110 + a4_116;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: vect_is_simple_use: operand b5_158
common/dct.c:337:5: note: def_stmt: b5_158 = _157 - a5_147;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: worklist: examine stmt: b5_158 = _157 - a5_147;
common/dct.c:337:5: note: vect_is_simple_use: operand _157
common/dct.c:337:5: note: def_stmt: _157 = a3_142 >> 2;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: vect_is_simple_use: operand a5_147
common/dct.c:337:5: note: def_stmt: a5_147 = _144 + _146;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: worklist: examine stmt: a5_147 = _144 + _146;
common/dct.c:337:5: note: vect_is_simple_use: operand _144
common/dct.c:337:5: note: def_stmt: _144 = _126 + _143;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: vect_is_simple_use: operand _146
common/dct.c:337:5: note: def_stmt: _146 = (int) _145;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: worklist: examine stmt: _146 = (int) _145;
common/dct.c:337:5: note: vect_is_simple_use: operand _145
common/dct.c:337:5: note: def_stmt: _145 = _125 >> 1;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: worklist: examine stmt: _145 = _125 >> 1;
common/dct.c:337:5: note: vect_is_simple_use: operand _125
common/dct.c:337:5: note: def_stmt: _125 = *_104[5];
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: already marked relevant/live.
common/dct.c:337:5: note: worklist: examine stmt: _144 = _126 + _143;
common/dct.c:337:5: note: vect_is_simple_use: operand _126
common/dct.c:337:5: note: def_stmt: _126 = (int) _125;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: already marked relevant/live.
common/dct.c:337:5: note: vect_is_simple_use: operand _143
common/dct.c:337:5: note: def_stmt: _143 = _131 - _137;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: worklist: examine stmt: _143 = _131 - _137;
common/dct.c:337:5: note: vect_is_simple_use: operand _131
common/dct.c:337:5: note: def_stmt: _131 = (int) _130;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: already marked relevant/live.
common/dct.c:337:5: note: vect_is_simple_use: operand _137
common/dct.c:337:5: note: def_stmt: _137 = (int) _136;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: already marked relevant/live.
common/dct.c:337:5: note: worklist: examine stmt: _157 = a3_142 >> 2;
common/dct.c:337:5: note: vect_is_simple_use: operand a3_142
common/dct.c:337:5: note: def_stmt: a3_142 = _139 - _141;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: worklist: examine stmt: a3_142 = _139 - _141;
common/dct.c:337:5: note: vect_is_simple_use: operand _139
common/dct.c:337:5: note: def_stmt: _139 = _138 - _128;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: vect_is_simple_use: operand _141
common/dct.c:337:5: note: def_stmt: _141 = (int) _140;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: worklist: examine stmt: _141 = (int) _140;
common/dct.c:337:5: note: vect_is_simple_use: operand _140
common/dct.c:337:5: note: def_stmt: _140 = _127 >> 1;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: worklist: examine stmt: _140 = _127 >> 1;
common/dct.c:337:5: note: vect_is_simple_use: operand _127
common/dct.c:337:5: note: def_stmt: _127 = *_104[3];
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: already marked relevant/live.
common/dct.c:337:5: note: worklist: examine stmt: _139 = _138 - _128;
common/dct.c:337:5: note: vect_is_simple_use: operand _138
common/dct.c:337:5: note: def_stmt: _138 = _131 + _137;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: vect_is_simple_use: operand _128
common/dct.c:337:5: note: def_stmt: _128 = (int) _127;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: already marked relevant/live.
common/dct.c:337:5: note: worklist: examine stmt: _138 = _131 + _137;
common/dct.c:337:5: note: vect_is_simple_use: operand _131
common/dct.c:337:5: note: def_stmt: _131 = (int) _130;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: already marked relevant/live.
common/dct.c:337:5: note: vect_is_simple_use: operand _137
common/dct.c:337:5: note: def_stmt: _137 = (int) _136;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: already marked relevant/live.
common/dct.c:337:5: note: worklist: examine stmt: b2_122 = a2_110 + a4_116;
common/dct.c:337:5: note: vect_is_simple_use: operand a2_110
common/dct.c:337:5: note: def_stmt: a2_110 = _106 - _108;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: vect_is_simple_use: operand a4_116
common/dct.c:337:5: note: def_stmt: a4_116 = _113 - _115;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: worklist: examine stmt: a4_116 = _113 - _115;
common/dct.c:337:5: note: vect_is_simple_use: operand _113
common/dct.c:337:5: note: def_stmt: _113 = (int) _112;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: vect_is_simple_use: operand _115
common/dct.c:337:5: note: def_stmt: _115 = (int) _114;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: worklist: examine stmt: _115 = (int) _114;
common/dct.c:337:5: note: vect_is_simple_use: operand _114
common/dct.c:337:5: note: def_stmt: _114 = *_104[6];
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: already marked relevant/live.
common/dct.c:337:5: note: worklist: examine stmt: _113 = (int) _112;
common/dct.c:337:5: note: vect_is_simple_use: operand _112
common/dct.c:337:5: note: def_stmt: _112 = _111 >> 1;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: worklist: examine stmt: _112 = _111 >> 1;
common/dct.c:337:5: note: vect_is_simple_use: operand _111
common/dct.c:337:5: note: def_stmt: _111 = *_104[2];
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: already marked relevant/live.
common/dct.c:337:5: note: worklist: examine stmt: a2_110 = _106 - _108;
common/dct.c:337:5: note: vect_is_simple_use: operand _106
common/dct.c:337:5: note: def_stmt: _106 = (int) _105;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: already marked relevant/live.
common/dct.c:337:5: note: vect_is_simple_use: operand _108
common/dct.c:337:5: note: def_stmt: _108 = (int) _107;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: already marked relevant/live.
common/dct.c:337:5: note: worklist: examine stmt: _218 = (int) _217;
common/dct.c:337:5: note: vect_is_simple_use: operand _217
common/dct.c:337:5: note: def_stmt: _217 = *_216;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: worklist: examine stmt: _217 = *_216;
common/dct.c:337:5: note: worklist: examine stmt: _234 = _168 >> 31;
common/dct.c:337:5: note: vect_is_simple_use: operand _168
common/dct.c:337:5: note: def_stmt: _168 = -_221;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: worklist: examine stmt: _168 = -_221;
common/dct.c:337:5: note: vect_is_simple_use: operand _221
common/dct.c:337:5: note: def_stmt: _221 = _218 + _220;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: already marked relevant/live.
common/dct.c:337:5: note: worklist: examine stmt: _177 = _221 & -256;
common/dct.c:337:5: note: vect_is_simple_use: operand _221
common/dct.c:337:5: note: def_stmt: _221 = _218 + _220;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: already marked relevant/live.
common/dct.c:337:5: note: worklist: examine stmt: *_207 = iftmp.0_243;
common/dct.c:337:5: note: vect_is_simple_use: operand iftmp.0_243
common/dct.c:337:5: note: def_stmt: iftmp.0_243 = _238 != 0 ? iftmp.0_241 : iftmp.0_242;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: last stmt in pattern. don't mark relevant/live.
common/dct.c:337:5: note: worklist: examine stmt: patt_550 = (unsigned char) patt_551;
common/dct.c:337:5: note: vect_is_simple_use: operand patt_551
common/dct.c:337:5: note: def_stmt: patt_551 = _238 != 0 ? _240 : _212;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: worklist: examine stmt: patt_551 = _238 != 0 ? _240 : _212;
common/dct.c:337:5: note: vect_is_simple_use: operand _238
common/dct.c:337:5: note: def_stmt: _238 = _212 & -256;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: vect_is_simple_use: operand 0
common/dct.c:337:5: note: vect_is_simple_use: operand _240
common/dct.c:337:5: note: def_stmt: _240 = _239 >> 31;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: vect_is_simple_use: operand _212
common/dct.c:337:5: note: def_stmt: _212 = _209 + _211;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: worklist: examine stmt: _212 = _209 + _211;
common/dct.c:337:5: note: vect_is_simple_use: operand _209
common/dct.c:337:5: note: def_stmt: _209 = (int) _208;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: vect_is_simple_use: operand _211
common/dct.c:337:5: note: def_stmt: _211 = _210 >> 6;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: worklist: examine stmt: _211 = _210 >> 6;
common/dct.c:337:5: note: vect_is_simple_use: operand _210
common/dct.c:337:5: note: def_stmt: _210 = b4_123 - b3_156;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: worklist: examine stmt: _210 = b4_123 - b3_156;
common/dct.c:337:5: note: vect_is_simple_use: operand b4_123
common/dct.c:337:5: note: def_stmt: b4_123 = a2_110 - a4_116;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: vect_is_simple_use: operand b3_156
common/dct.c:337:5: note: def_stmt: b3_156 = a3_142 + _155;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: worklist: examine stmt: b3_156 = a3_142 + _155;
common/dct.c:337:5: note: vect_is_simple_use: operand a3_142
common/dct.c:337:5: note: def_stmt: a3_142 = _139 - _141;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: already marked relevant/live.
common/dct.c:337:5: note: vect_is_simple_use: operand _155
common/dct.c:337:5: note: def_stmt: _155 = a5_147 >> 2;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: worklist: examine stmt: _155 = a5_147 >> 2;
common/dct.c:337:5: note: vect_is_simple_use: operand a5_147
common/dct.c:337:5: note: def_stmt: a5_147 = _144 + _146;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: already marked relevant/live.
common/dct.c:337:5: note: worklist: examine stmt: b4_123 = a2_110 - a4_116;
common/dct.c:337:5: note: vect_is_simple_use: operand a2_110
common/dct.c:337:5: note: def_stmt: a2_110 = _106 - _108;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: already marked relevant/live.
common/dct.c:337:5: note: vect_is_simple_use: operand a4_116
common/dct.c:337:5: note: def_stmt: a4_116 = _113 - _115;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: already marked relevant/live.
common/dct.c:337:5: note: worklist: examine stmt: _209 = (int) _208;
common/dct.c:337:5: note: vect_is_simple_use: operand _208
common/dct.c:337:5: note: def_stmt: _208 = *_207;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: worklist: examine stmt: _208 = *_207;
common/dct.c:337:5: note: worklist: examine stmt: _240 = _239 >> 31;
common/dct.c:337:5: note: vect_is_simple_use: operand _239
common/dct.c:337:5: note: def_stmt: _239 = -_212;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: worklist: examine stmt: _239 = -_212;
common/dct.c:337:5: note: vect_is_simple_use: operand _212
common/dct.c:337:5: note: def_stmt: _212 = _209 + _211;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: already marked relevant/live.
common/dct.c:337:5: note: worklist: examine stmt: _238 = _212 & -256;
common/dct.c:337:5: note: vect_is_simple_use: operand _212
common/dct.c:337:5: note: def_stmt: _212 = _209 + _211;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: already marked relevant/live.
common/dct.c:337:5: note: worklist: examine stmt: *_198 = iftmp.0_249;
common/dct.c:337:5: note: vect_is_simple_use: operand iftmp.0_249
common/dct.c:337:5: note: def_stmt: iftmp.0_249 = _244 != 0 ? iftmp.0_247 : iftmp.0_248;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: last stmt in pattern. don't mark relevant/live.
common/dct.c:337:5: note: worklist: examine stmt: patt_552 = (unsigned char) patt_553;
common/dct.c:337:5: note: vect_is_simple_use: operand patt_553
common/dct.c:337:5: note: def_stmt: patt_553 = _244 != 0 ? _246 : _203;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: worklist: examine stmt: patt_553 = _244 != 0 ? _246 : _203;
common/dct.c:337:5: note: vect_is_simple_use: operand _244
common/dct.c:337:5: note: def_stmt: _244 = _203 & -256;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: vect_is_simple_use: operand 0
common/dct.c:337:5: note: vect_is_simple_use: operand _246
common/dct.c:337:5: note: def_stmt: _246 = _245 >> 31;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: vect_is_simple_use: operand _203
common/dct.c:337:5: note: def_stmt: _203 = _200 + _202;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: worklist: examine stmt: _203 = _200 + _202;
common/dct.c:337:5: note: vect_is_simple_use: operand _200
common/dct.c:337:5: note: def_stmt: _200 = (int) _199;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: vect_is_simple_use: operand _202
common/dct.c:337:5: note: def_stmt: _202 = _201 >> 6;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: worklist: examine stmt: _202 = _201 >> 6;
common/dct.c:337:5: note: vect_is_simple_use: operand _201
common/dct.c:337:5: note: def_stmt: _201 = b6_124 - b1_154;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: worklist: examine stmt: _201 = b6_124 - b1_154;
common/dct.c:337:5: note: vect_is_simple_use: operand b6_124
common/dct.c:337:5: note: def_stmt: b6_124 = a0_109 - a6_120;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: vect_is_simple_use: operand b1_154
common/dct.c:337:5: note: def_stmt: b1_154 = a1_135 + _153;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: worklist: examine stmt: b1_154 = a1_135 + _153;
common/dct.c:337:5: note: vect_is_simple_use: operand a1_135
common/dct.c:337:5: note: def_stmt: a1_135 = _132 - _134;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: already marked relevant/live.
common/dct.c:337:5: note: vect_is_simple_use: operand _153
common/dct.c:337:5: note: def_stmt: _153 = a7_152 >> 2;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: worklist: examine stmt: _153 = a7_152 >> 2;
common/dct.c:337:5: note: vect_is_simple_use: operand a7_152
common/dct.c:337:5: note: def_stmt: a7_152 = _149 + _151;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: already marked relevant/live.
common/dct.c:337:5: note: worklist: examine stmt: b6_124 = a0_109 - a6_120;
common/dct.c:337:5: note: vect_is_simple_use: operand a0_109
common/dct.c:337:5: note: def_stmt: a0_109 = _106 + _108;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: already marked relevant/live.
common/dct.c:337:5: note: vect_is_simple_use: operand a6_120
common/dct.c:337:5: note: def_stmt: a6_120 = _118 + _119;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: already marked relevant/live.
common/dct.c:337:5: note: worklist: examine stmt: _200 = (int) _199;
common/dct.c:337:5: note: vect_is_simple_use: operand _199
common/dct.c:337:5: note: def_stmt: _199 = *_198;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: worklist: examine stmt: _199 = *_198;
common/dct.c:337:5: note: worklist: examine stmt: _246 = _245 >> 31;
common/dct.c:337:5: note: vect_is_simple_use: operand _245
common/dct.c:337:5: note: def_stmt: _245 = -_203;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: worklist: examine stmt: _245 = -_203;
common/dct.c:337:5: note: vect_is_simple_use: operand _203
common/dct.c:337:5: note: def_stmt: _203 = _200 + _202;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: already marked relevant/live.
common/dct.c:337:5: note: worklist: examine stmt: _244 = _203 & -256;
common/dct.c:337:5: note: vect_is_simple_use: operand _203
common/dct.c:337:5: note: def_stmt: _203 = _200 + _202;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: already marked relevant/live.
common/dct.c:337:5: note: worklist: examine stmt: *_189 = iftmp.0_255;
common/dct.c:337:5: note: vect_is_simple_use: operand iftmp.0_255
common/dct.c:337:5: note: def_stmt: iftmp.0_255 = _250 != 0 ? iftmp.0_253 : iftmp.0_254;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: last stmt in pattern. don't mark relevant/live.
common/dct.c:337:5: note: worklist: examine stmt: patt_554 = (unsigned char) patt_555;
common/dct.c:337:5: note: vect_is_simple_use: operand patt_555
common/dct.c:337:5: note: def_stmt: patt_555 = _250 != 0 ? _252 : _194;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: worklist: examine stmt: patt_555 = _250 != 0 ? _252 : _194;
common/dct.c:337:5: note: vect_is_simple_use: operand _250
common/dct.c:337:5: note: def_stmt: _250 = _194 & -256;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: vect_is_simple_use: operand 0
common/dct.c:337:5: note: vect_is_simple_use: operand _252
common/dct.c:337:5: note: def_stmt: _252 = _251 >> 31;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: vect_is_simple_use: operand _194
common/dct.c:337:5: note: def_stmt: _194 = _191 + _193;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: worklist: examine stmt: _194 = _191 + _193;
common/dct.c:337:5: note: vect_is_simple_use: operand _191
common/dct.c:337:5: note: def_stmt: _191 = (int) _190;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: vect_is_simple_use: operand _193
common/dct.c:337:5: note: def_stmt: _193 = _192 >> 6;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: worklist: examine stmt: _193 = _192 >> 6;
common/dct.c:337:5: note: vect_is_simple_use: operand _192
common/dct.c:337:5: note: def_stmt: _192 = b6_124 + b1_154;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: worklist: examine stmt: _192 = b6_124 + b1_154;
common/dct.c:337:5: note: vect_is_simple_use: operand b6_124
common/dct.c:337:5: note: def_stmt: b6_124 = a0_109 - a6_120;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: already marked relevant/live.
common/dct.c:337:5: note: vect_is_simple_use: operand b1_154
common/dct.c:337:5: note: def_stmt: b1_154 = a1_135 + _153;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: already marked relevant/live.
common/dct.c:337:5: note: worklist: examine stmt: _191 = (int) _190;
common/dct.c:337:5: note: vect_is_simple_use: operand _190
common/dct.c:337:5: note: def_stmt: _190 = *_189;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: worklist: examine stmt: _190 = *_189;
common/dct.c:337:5: note: worklist: examine stmt: _252 = _251 >> 31;
common/dct.c:337:5: note: vect_is_simple_use: operand _251
common/dct.c:337:5: note: def_stmt: _251 = -_194;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: worklist: examine stmt: _251 = -_194;
common/dct.c:337:5: note: vect_is_simple_use: operand _194
common/dct.c:337:5: note: def_stmt: _194 = _191 + _193;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: already marked relevant/live.
common/dct.c:337:5: note: worklist: examine stmt: _250 = _194 & -256;
common/dct.c:337:5: note: vect_is_simple_use: operand _194
common/dct.c:337:5: note: def_stmt: _194 = _191 + _193;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: already marked relevant/live.
common/dct.c:337:5: note: worklist: examine stmt: *_180 = iftmp.0_261;
common/dct.c:337:5: note: vect_is_simple_use: operand iftmp.0_261
common/dct.c:337:5: note: def_stmt: iftmp.0_261 = _256 != 0 ? iftmp.0_259 : iftmp.0_260;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: last stmt in pattern. don't mark relevant/live.
common/dct.c:337:5: note: worklist: examine stmt: patt_556 = (unsigned char) patt_557;
common/dct.c:337:5: note: vect_is_simple_use: operand patt_557
common/dct.c:337:5: note: def_stmt: patt_557 = _256 != 0 ? _258 : _185;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: worklist: examine stmt: patt_557 = _256 != 0 ? _258 : _185;
common/dct.c:337:5: note: vect_is_simple_use: operand _256
common/dct.c:337:5: note: def_stmt: _256 = _185 & -256;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: vect_is_simple_use: operand 0
common/dct.c:337:5: note: vect_is_simple_use: operand _258
common/dct.c:337:5: note: def_stmt: _258 = _257 >> 31;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: vect_is_simple_use: operand _185
common/dct.c:337:5: note: def_stmt: _185 = _182 + _184;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: worklist: examine stmt: _185 = _182 + _184;
common/dct.c:337:5: note: vect_is_simple_use: operand _182
common/dct.c:337:5: note: def_stmt: _182 = (int) _181;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: vect_is_simple_use: operand _184
common/dct.c:337:5: note: def_stmt: _184 = _183 >> 6;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: worklist: examine stmt: _184 = _183 >> 6;
common/dct.c:337:5: note: vect_is_simple_use: operand _183
common/dct.c:337:5: note: def_stmt: _183 = b4_123 + b3_156;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: worklist: examine stmt: _183 = b4_123 + b3_156;
common/dct.c:337:5: note: vect_is_simple_use: operand b4_123
common/dct.c:337:5: note: def_stmt: b4_123 = a2_110 - a4_116;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: already marked relevant/live.
common/dct.c:337:5: note: vect_is_simple_use: operand b3_156
common/dct.c:337:5: note: def_stmt: b3_156 = a3_142 + _155;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: already marked relevant/live.
common/dct.c:337:5: note: worklist: examine stmt: _182 = (int) _181;
common/dct.c:337:5: note: vect_is_simple_use: operand _181
common/dct.c:337:5: note: def_stmt: _181 = *_180;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: worklist: examine stmt: _181 = *_180;
common/dct.c:337:5: note: worklist: examine stmt: _258 = _257 >> 31;
common/dct.c:337:5: note: vect_is_simple_use: operand _257
common/dct.c:337:5: note: def_stmt: _257 = -_185;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: worklist: examine stmt: _257 = -_185;
common/dct.c:337:5: note: vect_is_simple_use: operand _185
common/dct.c:337:5: note: def_stmt: _185 = _182 + _184;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: already marked relevant/live.
common/dct.c:337:5: note: worklist: examine stmt: _256 = _185 & -256;
common/dct.c:337:5: note: vect_is_simple_use: operand _185
common/dct.c:337:5: note: def_stmt: _185 = _182 + _184;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: already marked relevant/live.
common/dct.c:337:5: note: worklist: examine stmt: *_171 = iftmp.0_267;
common/dct.c:337:5: note: vect_is_simple_use: operand iftmp.0_267
common/dct.c:337:5: note: def_stmt: iftmp.0_267 = _262 != 0 ? iftmp.0_265 : iftmp.0_266;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: last stmt in pattern. don't mark relevant/live.
common/dct.c:337:5: note: worklist: examine stmt: patt_558 = (unsigned char) patt_559;
common/dct.c:337:5: note: vect_is_simple_use: operand patt_559
common/dct.c:337:5: note: def_stmt: patt_559 = _262 != 0 ? _264 : _176;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: worklist: examine stmt: patt_559 = _262 != 0 ? _264 : _176;
common/dct.c:337:5: note: vect_is_simple_use: operand _262
common/dct.c:337:5: note: def_stmt: _262 = _176 & -256;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: vect_is_simple_use: operand 0
common/dct.c:337:5: note: vect_is_simple_use: operand _264
common/dct.c:337:5: note: def_stmt: _264 = _263 >> 31;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: vect_is_simple_use: operand _176
common/dct.c:337:5: note: def_stmt: _176 = _173 + _175;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: worklist: examine stmt: _176 = _173 + _175;
common/dct.c:337:5: note: vect_is_simple_use: operand _173
common/dct.c:337:5: note: def_stmt: _173 = (int) _172;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: vect_is_simple_use: operand _175
common/dct.c:337:5: note: def_stmt: _175 = _174 >> 6;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: worklist: examine stmt: _175 = _174 >> 6;
common/dct.c:337:5: note: vect_is_simple_use: operand _174
common/dct.c:337:5: note: def_stmt: _174 = b2_122 + b5_158;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: worklist: examine stmt: _174 = b2_122 + b5_158;
common/dct.c:337:5: note: vect_is_simple_use: operand b2_122
common/dct.c:337:5: note: def_stmt: b2_122 = a2_110 + a4_116;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: already marked relevant/live.
common/dct.c:337:5: note: vect_is_simple_use: operand b5_158
common/dct.c:337:5: note: def_stmt: b5_158 = _157 - a5_147;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: already marked relevant/live.
common/dct.c:337:5: note: worklist: examine stmt: _173 = (int) _172;
common/dct.c:337:5: note: vect_is_simple_use: operand _172
common/dct.c:337:5: note: def_stmt: _172 = *_171;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: worklist: examine stmt: _172 = *_171;
common/dct.c:337:5: note: worklist: examine stmt: _264 = _263 >> 31;
common/dct.c:337:5: note: vect_is_simple_use: operand _263
common/dct.c:337:5: note: def_stmt: _263 = -_176;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: worklist: examine stmt: _263 = -_176;
common/dct.c:337:5: note: vect_is_simple_use: operand _176
common/dct.c:337:5: note: def_stmt: _176 = _173 + _175;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: already marked relevant/live.
common/dct.c:337:5: note: worklist: examine stmt: _262 = _176 & -256;
common/dct.c:337:5: note: vect_is_simple_use: operand _176
common/dct.c:337:5: note: def_stmt: _176 = _173 + _175;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: already marked relevant/live.
common/dct.c:337:5: note: worklist: examine stmt: *_162 = iftmp.0_273;
common/dct.c:337:5: note: vect_is_simple_use: operand iftmp.0_273
common/dct.c:337:5: note: def_stmt: iftmp.0_273 = _268 != 0 ? iftmp.0_271 : iftmp.0_272;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: last stmt in pattern. don't mark relevant/live.
common/dct.c:337:5: note: worklist: examine stmt: patt_560 = (unsigned char) patt_561;
common/dct.c:337:5: note: vect_is_simple_use: operand patt_561
common/dct.c:337:5: note: def_stmt: patt_561 = _268 != 0 ? _270 : _167;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: worklist: examine stmt: patt_561 = _268 != 0 ? _270 : _167;
common/dct.c:337:5: note: vect_is_simple_use: operand _268
common/dct.c:337:5: note: def_stmt: _268 = _167 & -256;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: vect_is_simple_use: operand 0
common/dct.c:337:5: note: vect_is_simple_use: operand _270
common/dct.c:337:5: note: def_stmt: _270 = _269 >> 31;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: vect_is_simple_use: operand _167
common/dct.c:337:5: note: def_stmt: _167 = _164 + _166;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: worklist: examine stmt: _167 = _164 + _166;
common/dct.c:337:5: note: vect_is_simple_use: operand _164
common/dct.c:337:5: note: def_stmt: _164 = (int) _163;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: vect_is_simple_use: operand _166
common/dct.c:337:5: note: def_stmt: _166 = _165 >> 6;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: worklist: examine stmt: _166 = _165 >> 6;
common/dct.c:337:5: note: vect_is_simple_use: operand _165
common/dct.c:337:5: note: def_stmt: _165 = b0_121 + b7_160;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: worklist: examine stmt: _165 = b0_121 + b7_160;
common/dct.c:337:5: note: vect_is_simple_use: operand b0_121
common/dct.c:337:5: note: def_stmt: b0_121 = a0_109 + a6_120;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: already marked relevant/live.
common/dct.c:337:5: note: vect_is_simple_use: operand b7_160
common/dct.c:337:5: note: def_stmt: b7_160 = a7_152 - _159;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: already marked relevant/live.
common/dct.c:337:5: note: worklist: examine stmt: _164 = (int) _163;
common/dct.c:337:5: note: vect_is_simple_use: operand _163
common/dct.c:337:5: note: def_stmt: _163 = *_162;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: worklist: examine stmt: _163 = *_162;
common/dct.c:337:5: note: worklist: examine stmt: _270 = _269 >> 31;
common/dct.c:337:5: note: vect_is_simple_use: operand _269
common/dct.c:337:5: note: def_stmt: _269 = -_167;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: worklist: examine stmt: _269 = -_167;
common/dct.c:337:5: note: vect_is_simple_use: operand _167
common/dct.c:337:5: note: def_stmt: _167 = _164 + _166;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: already marked relevant/live.
common/dct.c:337:5: note: worklist: examine stmt: _268 = _167 & -256;
common/dct.c:337:5: note: vect_is_simple_use: operand _167
common/dct.c:337:5: note: def_stmt: _167 = _164 + _166;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: mark relevant 4, live 0.
common/dct.c:337:5: note: already marked relevant/live.
common/dct.c:337:5: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _105 = *_104[0];
  stmt_b: _107 = *_104[4];
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 4)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _105 = *_104[0];
  stmt_b: _111 = *_104[2];
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _105 = *_104[0];
  stmt_b: _114 = *_104[6];
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 6)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _105 = *_104[0];
  stmt_b: _125 = *_104[5];
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 5)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _105 = *_104[0];
  stmt_b: _127 = *_104[3];
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _105 = *_104[0];
  stmt_b: _130 = *_104[7];
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _105 = *_104[0];
  stmt_b: _136 = *_104[1];
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 1)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _105 = *_104[0];
  stmt_b: _163 = *_162;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _105 = *_104[0];
  stmt_b: *_162 = iftmp.0_273;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _105 = *_104[0];
  stmt_b: _172 = *_171;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _105 = *_104[0];
  stmt_b: *_171 = iftmp.0_267;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _105 = *_104[0];
  stmt_b: _181 = *_180;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _105 = *_104[0];
  stmt_b: *_180 = iftmp.0_261;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _105 = *_104[0];
  stmt_b: _190 = *_189;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _105 = *_104[0];
  stmt_b: *_189 = iftmp.0_255;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _105 = *_104[0];
  stmt_b: _199 = *_198;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _105 = *_104[0];
  stmt_b: *_198 = iftmp.0_249;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _105 = *_104[0];
  stmt_b: _208 = *_207;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _105 = *_104[0];
  stmt_b: *_207 = iftmp.0_243;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _105 = *_104[0];
  stmt_b: _217 = *_216;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _105 = *_104[0];
  stmt_b: *_216 = iftmp.0_237;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _105 = *_104[0];
  stmt_b: _226 = *_225;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _105 = *_104[0];
  stmt_b: *_225 = iftmp.0_186;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _107 = *_104[4];
  stmt_b: _111 = *_104[2];
(analyze_overlapping_iterations 
  (chrec_a = 4)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _107 = *_104[4];
  stmt_b: _114 = *_104[6];
(analyze_overlapping_iterations 
  (chrec_a = 4)
  (chrec_b = 6)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _107 = *_104[4];
  stmt_b: _125 = *_104[5];
(analyze_overlapping_iterations 
  (chrec_a = 4)
  (chrec_b = 5)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _107 = *_104[4];
  stmt_b: _127 = *_104[3];
(analyze_overlapping_iterations 
  (chrec_a = 4)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _107 = *_104[4];
  stmt_b: _130 = *_104[7];
(analyze_overlapping_iterations 
  (chrec_a = 4)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _107 = *_104[4];
  stmt_b: _136 = *_104[1];
(analyze_overlapping_iterations 
  (chrec_a = 4)
  (chrec_b = 1)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _107 = *_104[4];
  stmt_b: _163 = *_162;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _107 = *_104[4];
  stmt_b: *_162 = iftmp.0_273;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _107 = *_104[4];
  stmt_b: _172 = *_171;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _107 = *_104[4];
  stmt_b: *_171 = iftmp.0_267;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _107 = *_104[4];
  stmt_b: _181 = *_180;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _107 = *_104[4];
  stmt_b: *_180 = iftmp.0_261;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _107 = *_104[4];
  stmt_b: _190 = *_189;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _107 = *_104[4];
  stmt_b: *_189 = iftmp.0_255;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _107 = *_104[4];
  stmt_b: _199 = *_198;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _107 = *_104[4];
  stmt_b: *_198 = iftmp.0_249;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _107 = *_104[4];
  stmt_b: _208 = *_207;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _107 = *_104[4];
  stmt_b: *_207 = iftmp.0_243;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _107 = *_104[4];
  stmt_b: _217 = *_216;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _107 = *_104[4];
  stmt_b: *_216 = iftmp.0_237;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _107 = *_104[4];
  stmt_b: _226 = *_225;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _107 = *_104[4];
  stmt_b: *_225 = iftmp.0_186;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _111 = *_104[2];
  stmt_b: _114 = *_104[6];
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 6)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _111 = *_104[2];
  stmt_b: _125 = *_104[5];
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 5)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _111 = *_104[2];
  stmt_b: _127 = *_104[3];
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _111 = *_104[2];
  stmt_b: _130 = *_104[7];
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _111 = *_104[2];
  stmt_b: _136 = *_104[1];
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 1)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _111 = *_104[2];
  stmt_b: _163 = *_162;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _111 = *_104[2];
  stmt_b: *_162 = iftmp.0_273;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _111 = *_104[2];
  stmt_b: _172 = *_171;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _111 = *_104[2];
  stmt_b: *_171 = iftmp.0_267;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _111 = *_104[2];
  stmt_b: _181 = *_180;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _111 = *_104[2];
  stmt_b: *_180 = iftmp.0_261;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _111 = *_104[2];
  stmt_b: _190 = *_189;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _111 = *_104[2];
  stmt_b: *_189 = iftmp.0_255;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _111 = *_104[2];
  stmt_b: _199 = *_198;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _111 = *_104[2];
  stmt_b: *_198 = iftmp.0_249;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _111 = *_104[2];
  stmt_b: _208 = *_207;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _111 = *_104[2];
  stmt_b: *_207 = iftmp.0_243;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _111 = *_104[2];
  stmt_b: _217 = *_216;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _111 = *_104[2];
  stmt_b: *_216 = iftmp.0_237;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _111 = *_104[2];
  stmt_b: _226 = *_225;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _111 = *_104[2];
  stmt_b: *_225 = iftmp.0_186;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _114 = *_104[6];
  stmt_b: _125 = *_104[5];
(analyze_overlapping_iterations 
  (chrec_a = 6)
  (chrec_b = 5)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _114 = *_104[6];
  stmt_b: _127 = *_104[3];
(analyze_overlapping_iterations 
  (chrec_a = 6)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _114 = *_104[6];
  stmt_b: _130 = *_104[7];
(analyze_overlapping_iterations 
  (chrec_a = 6)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _114 = *_104[6];
  stmt_b: _136 = *_104[1];
(analyze_overlapping_iterations 
  (chrec_a = 6)
  (chrec_b = 1)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _114 = *_104[6];
  stmt_b: _163 = *_162;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _114 = *_104[6];
  stmt_b: *_162 = iftmp.0_273;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _114 = *_104[6];
  stmt_b: _172 = *_171;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _114 = *_104[6];
  stmt_b: *_171 = iftmp.0_267;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _114 = *_104[6];
  stmt_b: _181 = *_180;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _114 = *_104[6];
  stmt_b: *_180 = iftmp.0_261;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _114 = *_104[6];
  stmt_b: _190 = *_189;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _114 = *_104[6];
  stmt_b: *_189 = iftmp.0_255;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _114 = *_104[6];
  stmt_b: _199 = *_198;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _114 = *_104[6];
  stmt_b: *_198 = iftmp.0_249;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _114 = *_104[6];
  stmt_b: _208 = *_207;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _114 = *_104[6];
  stmt_b: *_207 = iftmp.0_243;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _114 = *_104[6];
  stmt_b: _217 = *_216;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _114 = *_104[6];
  stmt_b: *_216 = iftmp.0_237;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _114 = *_104[6];
  stmt_b: _226 = *_225;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _114 = *_104[6];
  stmt_b: *_225 = iftmp.0_186;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _125 = *_104[5];
  stmt_b: _127 = *_104[3];
(analyze_overlapping_iterations 
  (chrec_a = 5)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _125 = *_104[5];
  stmt_b: _130 = *_104[7];
(analyze_overlapping_iterations 
  (chrec_a = 5)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _125 = *_104[5];
  stmt_b: _136 = *_104[1];
(analyze_overlapping_iterations 
  (chrec_a = 5)
  (chrec_b = 1)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _125 = *_104[5];
  stmt_b: _163 = *_162;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _125 = *_104[5];
  stmt_b: *_162 = iftmp.0_273;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _125 = *_104[5];
  stmt_b: _172 = *_171;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _125 = *_104[5];
  stmt_b: *_171 = iftmp.0_267;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _125 = *_104[5];
  stmt_b: _181 = *_180;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _125 = *_104[5];
  stmt_b: *_180 = iftmp.0_261;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _125 = *_104[5];
  stmt_b: _190 = *_189;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _125 = *_104[5];
  stmt_b: *_189 = iftmp.0_255;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _125 = *_104[5];
  stmt_b: _199 = *_198;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _125 = *_104[5];
  stmt_b: *_198 = iftmp.0_249;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _125 = *_104[5];
  stmt_b: _208 = *_207;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _125 = *_104[5];
  stmt_b: *_207 = iftmp.0_243;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _125 = *_104[5];
  stmt_b: _217 = *_216;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _125 = *_104[5];
  stmt_b: *_216 = iftmp.0_237;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _125 = *_104[5];
  stmt_b: _226 = *_225;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _125 = *_104[5];
  stmt_b: *_225 = iftmp.0_186;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _127 = *_104[3];
  stmt_b: _130 = *_104[7];
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _127 = *_104[3];
  stmt_b: _136 = *_104[1];
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 1)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _127 = *_104[3];
  stmt_b: _163 = *_162;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _127 = *_104[3];
  stmt_b: *_162 = iftmp.0_273;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _127 = *_104[3];
  stmt_b: _172 = *_171;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _127 = *_104[3];
  stmt_b: *_171 = iftmp.0_267;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _127 = *_104[3];
  stmt_b: _181 = *_180;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _127 = *_104[3];
  stmt_b: *_180 = iftmp.0_261;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _127 = *_104[3];
  stmt_b: _190 = *_189;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _127 = *_104[3];
  stmt_b: *_189 = iftmp.0_255;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _127 = *_104[3];
  stmt_b: _199 = *_198;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _127 = *_104[3];
  stmt_b: *_198 = iftmp.0_249;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _127 = *_104[3];
  stmt_b: _208 = *_207;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _127 = *_104[3];
  stmt_b: *_207 = iftmp.0_243;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _127 = *_104[3];
  stmt_b: _217 = *_216;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _127 = *_104[3];
  stmt_b: *_216 = iftmp.0_237;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _127 = *_104[3];
  stmt_b: _226 = *_225;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _127 = *_104[3];
  stmt_b: *_225 = iftmp.0_186;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _130 = *_104[7];
  stmt_b: _136 = *_104[1];
(analyze_overlapping_iterations 
  (chrec_a = 7)
  (chrec_b = 1)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _130 = *_104[7];
  stmt_b: _163 = *_162;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _130 = *_104[7];
  stmt_b: *_162 = iftmp.0_273;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _130 = *_104[7];
  stmt_b: _172 = *_171;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _130 = *_104[7];
  stmt_b: *_171 = iftmp.0_267;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _130 = *_104[7];
  stmt_b: _181 = *_180;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _130 = *_104[7];
  stmt_b: *_180 = iftmp.0_261;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _130 = *_104[7];
  stmt_b: _190 = *_189;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _130 = *_104[7];
  stmt_b: *_189 = iftmp.0_255;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _130 = *_104[7];
  stmt_b: _199 = *_198;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _130 = *_104[7];
  stmt_b: *_198 = iftmp.0_249;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _130 = *_104[7];
  stmt_b: _208 = *_207;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _130 = *_104[7];
  stmt_b: *_207 = iftmp.0_243;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _130 = *_104[7];
  stmt_b: _217 = *_216;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _130 = *_104[7];
  stmt_b: *_216 = iftmp.0_237;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _130 = *_104[7];
  stmt_b: _226 = *_225;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _130 = *_104[7];
  stmt_b: *_225 = iftmp.0_186;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _136 = *_104[1];
  stmt_b: _163 = *_162;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _136 = *_104[1];
  stmt_b: *_162 = iftmp.0_273;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _136 = *_104[1];
  stmt_b: _172 = *_171;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _136 = *_104[1];
  stmt_b: *_171 = iftmp.0_267;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _136 = *_104[1];
  stmt_b: _181 = *_180;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _136 = *_104[1];
  stmt_b: *_180 = iftmp.0_261;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _136 = *_104[1];
  stmt_b: _190 = *_189;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _136 = *_104[1];
  stmt_b: *_189 = iftmp.0_255;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _136 = *_104[1];
  stmt_b: _199 = *_198;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _136 = *_104[1];
  stmt_b: *_198 = iftmp.0_249;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _136 = *_104[1];
  stmt_b: _208 = *_207;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _136 = *_104[1];
  stmt_b: *_207 = iftmp.0_243;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _136 = *_104[1];
  stmt_b: _217 = *_216;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _136 = *_104[1];
  stmt_b: *_216 = iftmp.0_237;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _136 = *_104[1];
  stmt_b: _226 = *_225;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _136 = *_104[1];
  stmt_b: *_225 = iftmp.0_186;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _163 = *_162;
  stmt_b: *_162 = iftmp.0_273;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_2)
  (chrec_b = {0B, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _163 = *_162;
  stmt_b: _172 = *_171;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_2)
  (chrec_b = {32B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _163 = *_162;
  stmt_b: *_171 = iftmp.0_267;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_2)
  (chrec_b = {32B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _163 = *_162;
  stmt_b: _181 = *_180;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_2)
  (chrec_b = {64B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _163 = *_162;
  stmt_b: *_180 = iftmp.0_261;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_2)
  (chrec_b = {64B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _163 = *_162;
  stmt_b: _190 = *_189;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_2)
  (chrec_b = {96B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _163 = *_162;
  stmt_b: *_189 = iftmp.0_255;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_2)
  (chrec_b = {96B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _163 = *_162;
  stmt_b: _199 = *_198;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_2)
  (chrec_b = {128B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _163 = *_162;
  stmt_b: *_198 = iftmp.0_249;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_2)
  (chrec_b = {128B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _163 = *_162;
  stmt_b: _208 = *_207;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_2)
  (chrec_b = {160B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _163 = *_162;
  stmt_b: *_207 = iftmp.0_243;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_2)
  (chrec_b = {160B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _163 = *_162;
  stmt_b: _217 = *_216;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_2)
  (chrec_b = {192B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _163 = *_162;
  stmt_b: *_216 = iftmp.0_237;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_2)
  (chrec_b = {192B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _163 = *_162;
  stmt_b: _226 = *_225;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_2)
  (chrec_b = {224B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _163 = *_162;
  stmt_b: *_225 = iftmp.0_186;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_2)
  (chrec_b = {224B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: *_162 = iftmp.0_273;
  stmt_b: _172 = *_171;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_2)
  (chrec_b = {32B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: *_162 = iftmp.0_273;
  stmt_b: *_171 = iftmp.0_267;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_2)
  (chrec_b = {32B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: *_162 = iftmp.0_273;
  stmt_b: _181 = *_180;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_2)
  (chrec_b = {64B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: *_162 = iftmp.0_273;
  stmt_b: *_180 = iftmp.0_261;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_2)
  (chrec_b = {64B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: *_162 = iftmp.0_273;
  stmt_b: _190 = *_189;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_2)
  (chrec_b = {96B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: *_162 = iftmp.0_273;
  stmt_b: *_189 = iftmp.0_255;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_2)
  (chrec_b = {96B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: *_162 = iftmp.0_273;
  stmt_b: _199 = *_198;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_2)
  (chrec_b = {128B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: *_162 = iftmp.0_273;
  stmt_b: *_198 = iftmp.0_249;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_2)
  (chrec_b = {128B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: *_162 = iftmp.0_273;
  stmt_b: _208 = *_207;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_2)
  (chrec_b = {160B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: *_162 = iftmp.0_273;
  stmt_b: *_207 = iftmp.0_243;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_2)
  (chrec_b = {160B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: *_162 = iftmp.0_273;
  stmt_b: _217 = *_216;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_2)
  (chrec_b = {192B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: *_162 = iftmp.0_273;
  stmt_b: *_216 = iftmp.0_237;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_2)
  (chrec_b = {192B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: *_162 = iftmp.0_273;
  stmt_b: _226 = *_225;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_2)
  (chrec_b = {224B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: *_162 = iftmp.0_273;
  stmt_b: *_225 = iftmp.0_186;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_2)
  (chrec_b = {224B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _172 = *_171;
  stmt_b: *_171 = iftmp.0_267;
(analyze_overlapping_iterations 
  (chrec_a = {32B, +, 1}_2)
  (chrec_b = {32B, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _172 = *_171;
  stmt_b: _181 = *_180;
(analyze_overlapping_iterations 
  (chrec_a = {32B, +, 1}_2)
  (chrec_b = {64B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _172 = *_171;
  stmt_b: *_180 = iftmp.0_261;
(analyze_overlapping_iterations 
  (chrec_a = {32B, +, 1}_2)
  (chrec_b = {64B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _172 = *_171;
  stmt_b: _190 = *_189;
(analyze_overlapping_iterations 
  (chrec_a = {32B, +, 1}_2)
  (chrec_b = {96B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _172 = *_171;
  stmt_b: *_189 = iftmp.0_255;
(analyze_overlapping_iterations 
  (chrec_a = {32B, +, 1}_2)
  (chrec_b = {96B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _172 = *_171;
  stmt_b: _199 = *_198;
(analyze_overlapping_iterations 
  (chrec_a = {32B, +, 1}_2)
  (chrec_b = {128B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _172 = *_171;
  stmt_b: *_198 = iftmp.0_249;
(analyze_overlapping_iterations 
  (chrec_a = {32B, +, 1}_2)
  (chrec_b = {128B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _172 = *_171;
  stmt_b: _208 = *_207;
(analyze_overlapping_iterations 
  (chrec_a = {32B, +, 1}_2)
  (chrec_b = {160B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _172 = *_171;
  stmt_b: *_207 = iftmp.0_243;
(analyze_overlapping_iterations 
  (chrec_a = {32B, +, 1}_2)
  (chrec_b = {160B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _172 = *_171;
  stmt_b: _217 = *_216;
(analyze_overlapping_iterations 
  (chrec_a = {32B, +, 1}_2)
  (chrec_b = {192B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _172 = *_171;
  stmt_b: *_216 = iftmp.0_237;
(analyze_overlapping_iterations 
  (chrec_a = {32B, +, 1}_2)
  (chrec_b = {192B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _172 = *_171;
  stmt_b: _226 = *_225;
(analyze_overlapping_iterations 
  (chrec_a = {32B, +, 1}_2)
  (chrec_b = {224B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _172 = *_171;
  stmt_b: *_225 = iftmp.0_186;
(analyze_overlapping_iterations 
  (chrec_a = {32B, +, 1}_2)
  (chrec_b = {224B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: *_171 = iftmp.0_267;
  stmt_b: _181 = *_180;
(analyze_overlapping_iterations 
  (chrec_a = {32B, +, 1}_2)
  (chrec_b = {64B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: *_171 = iftmp.0_267;
  stmt_b: *_180 = iftmp.0_261;
(analyze_overlapping_iterations 
  (chrec_a = {32B, +, 1}_2)
  (chrec_b = {64B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: *_171 = iftmp.0_267;
  stmt_b: _190 = *_189;
(analyze_overlapping_iterations 
  (chrec_a = {32B, +, 1}_2)
  (chrec_b = {96B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: *_171 = iftmp.0_267;
  stmt_b: *_189 = iftmp.0_255;
(analyze_overlapping_iterations 
  (chrec_a = {32B, +, 1}_2)
  (chrec_b = {96B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: *_171 = iftmp.0_267;
  stmt_b: _199 = *_198;
(analyze_overlapping_iterations 
  (chrec_a = {32B, +, 1}_2)
  (chrec_b = {128B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: *_171 = iftmp.0_267;
  stmt_b: *_198 = iftmp.0_249;
(analyze_overlapping_iterations 
  (chrec_a = {32B, +, 1}_2)
  (chrec_b = {128B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: *_171 = iftmp.0_267;
  stmt_b: _208 = *_207;
(analyze_overlapping_iterations 
  (chrec_a = {32B, +, 1}_2)
  (chrec_b = {160B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: *_171 = iftmp.0_267;
  stmt_b: *_207 = iftmp.0_243;
(analyze_overlapping_iterations 
  (chrec_a = {32B, +, 1}_2)
  (chrec_b = {160B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: *_171 = iftmp.0_267;
  stmt_b: _217 = *_216;
(analyze_overlapping_iterations 
  (chrec_a = {32B, +, 1}_2)
  (chrec_b = {192B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: *_171 = iftmp.0_267;
  stmt_b: *_216 = iftmp.0_237;
(analyze_overlapping_iterations 
  (chrec_a = {32B, +, 1}_2)
  (chrec_b = {192B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: *_171 = iftmp.0_267;
  stmt_b: _226 = *_225;
(analyze_overlapping_iterations 
  (chrec_a = {32B, +, 1}_2)
  (chrec_b = {224B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: *_171 = iftmp.0_267;
  stmt_b: *_225 = iftmp.0_186;
(analyze_overlapping_iterations 
  (chrec_a = {32B, +, 1}_2)
  (chrec_b = {224B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _181 = *_180;
  stmt_b: *_180 = iftmp.0_261;
(analyze_overlapping_iterations 
  (chrec_a = {64B, +, 1}_2)
  (chrec_b = {64B, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _181 = *_180;
  stmt_b: _190 = *_189;
(analyze_overlapping_iterations 
  (chrec_a = {64B, +, 1}_2)
  (chrec_b = {96B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _181 = *_180;
  stmt_b: *_189 = iftmp.0_255;
(analyze_overlapping_iterations 
  (chrec_a = {64B, +, 1}_2)
  (chrec_b = {96B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _181 = *_180;
  stmt_b: _199 = *_198;
(analyze_overlapping_iterations 
  (chrec_a = {64B, +, 1}_2)
  (chrec_b = {128B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _181 = *_180;
  stmt_b: *_198 = iftmp.0_249;
(analyze_overlapping_iterations 
  (chrec_a = {64B, +, 1}_2)
  (chrec_b = {128B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _181 = *_180;
  stmt_b: _208 = *_207;
(analyze_overlapping_iterations 
  (chrec_a = {64B, +, 1}_2)
  (chrec_b = {160B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _181 = *_180;
  stmt_b: *_207 = iftmp.0_243;
(analyze_overlapping_iterations 
  (chrec_a = {64B, +, 1}_2)
  (chrec_b = {160B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _181 = *_180;
  stmt_b: _217 = *_216;
(analyze_overlapping_iterations 
  (chrec_a = {64B, +, 1}_2)
  (chrec_b = {192B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _181 = *_180;
  stmt_b: *_216 = iftmp.0_237;
(analyze_overlapping_iterations 
  (chrec_a = {64B, +, 1}_2)
  (chrec_b = {192B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _181 = *_180;
  stmt_b: _226 = *_225;
(analyze_overlapping_iterations 
  (chrec_a = {64B, +, 1}_2)
  (chrec_b = {224B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _181 = *_180;
  stmt_b: *_225 = iftmp.0_186;
(analyze_overlapping_iterations 
  (chrec_a = {64B, +, 1}_2)
  (chrec_b = {224B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: *_180 = iftmp.0_261;
  stmt_b: _190 = *_189;
(analyze_overlapping_iterations 
  (chrec_a = {64B, +, 1}_2)
  (chrec_b = {96B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: *_180 = iftmp.0_261;
  stmt_b: *_189 = iftmp.0_255;
(analyze_overlapping_iterations 
  (chrec_a = {64B, +, 1}_2)
  (chrec_b = {96B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: *_180 = iftmp.0_261;
  stmt_b: _199 = *_198;
(analyze_overlapping_iterations 
  (chrec_a = {64B, +, 1}_2)
  (chrec_b = {128B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: *_180 = iftmp.0_261;
  stmt_b: *_198 = iftmp.0_249;
(analyze_overlapping_iterations 
  (chrec_a = {64B, +, 1}_2)
  (chrec_b = {128B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: *_180 = iftmp.0_261;
  stmt_b: _208 = *_207;
(analyze_overlapping_iterations 
  (chrec_a = {64B, +, 1}_2)
  (chrec_b = {160B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: *_180 = iftmp.0_261;
  stmt_b: *_207 = iftmp.0_243;
(analyze_overlapping_iterations 
  (chrec_a = {64B, +, 1}_2)
  (chrec_b = {160B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: *_180 = iftmp.0_261;
  stmt_b: _217 = *_216;
(analyze_overlapping_iterations 
  (chrec_a = {64B, +, 1}_2)
  (chrec_b = {192B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: *_180 = iftmp.0_261;
  stmt_b: *_216 = iftmp.0_237;
(analyze_overlapping_iterations 
  (chrec_a = {64B, +, 1}_2)
  (chrec_b = {192B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: *_180 = iftmp.0_261;
  stmt_b: _226 = *_225;
(analyze_overlapping_iterations 
  (chrec_a = {64B, +, 1}_2)
  (chrec_b = {224B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: *_180 = iftmp.0_261;
  stmt_b: *_225 = iftmp.0_186;
(analyze_overlapping_iterations 
  (chrec_a = {64B, +, 1}_2)
  (chrec_b = {224B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _190 = *_189;
  stmt_b: *_189 = iftmp.0_255;
(analyze_overlapping_iterations 
  (chrec_a = {96B, +, 1}_2)
  (chrec_b = {96B, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _190 = *_189;
  stmt_b: _199 = *_198;
(analyze_overlapping_iterations 
  (chrec_a = {96B, +, 1}_2)
  (chrec_b = {128B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _190 = *_189;
  stmt_b: *_198 = iftmp.0_249;
(analyze_overlapping_iterations 
  (chrec_a = {96B, +, 1}_2)
  (chrec_b = {128B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _190 = *_189;
  stmt_b: _208 = *_207;
(analyze_overlapping_iterations 
  (chrec_a = {96B, +, 1}_2)
  (chrec_b = {160B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _190 = *_189;
  stmt_b: *_207 = iftmp.0_243;
(analyze_overlapping_iterations 
  (chrec_a = {96B, +, 1}_2)
  (chrec_b = {160B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _190 = *_189;
  stmt_b: _217 = *_216;
(analyze_overlapping_iterations 
  (chrec_a = {96B, +, 1}_2)
  (chrec_b = {192B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _190 = *_189;
  stmt_b: *_216 = iftmp.0_237;
(analyze_overlapping_iterations 
  (chrec_a = {96B, +, 1}_2)
  (chrec_b = {192B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _190 = *_189;
  stmt_b: _226 = *_225;
(analyze_overlapping_iterations 
  (chrec_a = {96B, +, 1}_2)
  (chrec_b = {224B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _190 = *_189;
  stmt_b: *_225 = iftmp.0_186;
(analyze_overlapping_iterations 
  (chrec_a = {96B, +, 1}_2)
  (chrec_b = {224B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: *_189 = iftmp.0_255;
  stmt_b: _199 = *_198;
(analyze_overlapping_iterations 
  (chrec_a = {96B, +, 1}_2)
  (chrec_b = {128B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: *_189 = iftmp.0_255;
  stmt_b: *_198 = iftmp.0_249;
(analyze_overlapping_iterations 
  (chrec_a = {96B, +, 1}_2)
  (chrec_b = {128B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: *_189 = iftmp.0_255;
  stmt_b: _208 = *_207;
(analyze_overlapping_iterations 
  (chrec_a = {96B, +, 1}_2)
  (chrec_b = {160B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: *_189 = iftmp.0_255;
  stmt_b: *_207 = iftmp.0_243;
(analyze_overlapping_iterations 
  (chrec_a = {96B, +, 1}_2)
  (chrec_b = {160B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: *_189 = iftmp.0_255;
  stmt_b: _217 = *_216;
(analyze_overlapping_iterations 
  (chrec_a = {96B, +, 1}_2)
  (chrec_b = {192B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: *_189 = iftmp.0_255;
  stmt_b: *_216 = iftmp.0_237;
(analyze_overlapping_iterations 
  (chrec_a = {96B, +, 1}_2)
  (chrec_b = {192B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: *_189 = iftmp.0_255;
  stmt_b: _226 = *_225;
(analyze_overlapping_iterations 
  (chrec_a = {96B, +, 1}_2)
  (chrec_b = {224B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: *_189 = iftmp.0_255;
  stmt_b: *_225 = iftmp.0_186;
(analyze_overlapping_iterations 
  (chrec_a = {96B, +, 1}_2)
  (chrec_b = {224B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _199 = *_198;
  stmt_b: *_198 = iftmp.0_249;
(analyze_overlapping_iterations 
  (chrec_a = {128B, +, 1}_2)
  (chrec_b = {128B, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _199 = *_198;
  stmt_b: _208 = *_207;
(analyze_overlapping_iterations 
  (chrec_a = {128B, +, 1}_2)
  (chrec_b = {160B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _199 = *_198;
  stmt_b: *_207 = iftmp.0_243;
(analyze_overlapping_iterations 
  (chrec_a = {128B, +, 1}_2)
  (chrec_b = {160B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _199 = *_198;
  stmt_b: _217 = *_216;
(analyze_overlapping_iterations 
  (chrec_a = {128B, +, 1}_2)
  (chrec_b = {192B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _199 = *_198;
  stmt_b: *_216 = iftmp.0_237;
(analyze_overlapping_iterations 
  (chrec_a = {128B, +, 1}_2)
  (chrec_b = {192B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _199 = *_198;
  stmt_b: _226 = *_225;
(analyze_overlapping_iterations 
  (chrec_a = {128B, +, 1}_2)
  (chrec_b = {224B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _199 = *_198;
  stmt_b: *_225 = iftmp.0_186;
(analyze_overlapping_iterations 
  (chrec_a = {128B, +, 1}_2)
  (chrec_b = {224B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: *_198 = iftmp.0_249;
  stmt_b: _208 = *_207;
(analyze_overlapping_iterations 
  (chrec_a = {128B, +, 1}_2)
  (chrec_b = {160B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: *_198 = iftmp.0_249;
  stmt_b: *_207 = iftmp.0_243;
(analyze_overlapping_iterations 
  (chrec_a = {128B, +, 1}_2)
  (chrec_b = {160B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: *_198 = iftmp.0_249;
  stmt_b: _217 = *_216;
(analyze_overlapping_iterations 
  (chrec_a = {128B, +, 1}_2)
  (chrec_b = {192B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: *_198 = iftmp.0_249;
  stmt_b: *_216 = iftmp.0_237;
(analyze_overlapping_iterations 
  (chrec_a = {128B, +, 1}_2)
  (chrec_b = {192B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: *_198 = iftmp.0_249;
  stmt_b: _226 = *_225;
(analyze_overlapping_iterations 
  (chrec_a = {128B, +, 1}_2)
  (chrec_b = {224B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: *_198 = iftmp.0_249;
  stmt_b: *_225 = iftmp.0_186;
(analyze_overlapping_iterations 
  (chrec_a = {128B, +, 1}_2)
  (chrec_b = {224B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _208 = *_207;
  stmt_b: *_207 = iftmp.0_243;
(analyze_overlapping_iterations 
  (chrec_a = {160B, +, 1}_2)
  (chrec_b = {160B, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _208 = *_207;
  stmt_b: _217 = *_216;
(analyze_overlapping_iterations 
  (chrec_a = {160B, +, 1}_2)
  (chrec_b = {192B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _208 = *_207;
  stmt_b: *_216 = iftmp.0_237;
(analyze_overlapping_iterations 
  (chrec_a = {160B, +, 1}_2)
  (chrec_b = {192B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _208 = *_207;
  stmt_b: _226 = *_225;
(analyze_overlapping_iterations 
  (chrec_a = {160B, +, 1}_2)
  (chrec_b = {224B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _208 = *_207;
  stmt_b: *_225 = iftmp.0_186;
(analyze_overlapping_iterations 
  (chrec_a = {160B, +, 1}_2)
  (chrec_b = {224B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: *_207 = iftmp.0_243;
  stmt_b: _217 = *_216;
(analyze_overlapping_iterations 
  (chrec_a = {160B, +, 1}_2)
  (chrec_b = {192B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: *_207 = iftmp.0_243;
  stmt_b: *_216 = iftmp.0_237;
(analyze_overlapping_iterations 
  (chrec_a = {160B, +, 1}_2)
  (chrec_b = {192B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: *_207 = iftmp.0_243;
  stmt_b: _226 = *_225;
(analyze_overlapping_iterations 
  (chrec_a = {160B, +, 1}_2)
  (chrec_b = {224B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: *_207 = iftmp.0_243;
  stmt_b: *_225 = iftmp.0_186;
(analyze_overlapping_iterations 
  (chrec_a = {160B, +, 1}_2)
  (chrec_b = {224B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _217 = *_216;
  stmt_b: *_216 = iftmp.0_237;
(analyze_overlapping_iterations 
  (chrec_a = {192B, +, 1}_2)
  (chrec_b = {192B, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _217 = *_216;
  stmt_b: _226 = *_225;
(analyze_overlapping_iterations 
  (chrec_a = {192B, +, 1}_2)
  (chrec_b = {224B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _217 = *_216;
  stmt_b: *_225 = iftmp.0_186;
(analyze_overlapping_iterations 
  (chrec_a = {192B, +, 1}_2)
  (chrec_b = {224B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: *_216 = iftmp.0_237;
  stmt_b: _226 = *_225;
(analyze_overlapping_iterations 
  (chrec_a = {192B, +, 1}_2)
  (chrec_b = {224B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: *_216 = iftmp.0_237;
  stmt_b: *_225 = iftmp.0_186;
(analyze_overlapping_iterations 
  (chrec_a = {192B, +, 1}_2)
  (chrec_b = {224B, +, 1}_2)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = no dependence)
  (overlaps_b = no dependence))
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _226 = *_225;
  stmt_b: *_225 = iftmp.0_186;
(analyze_overlapping_iterations 
  (chrec_a = {224B, +, 1}_2)
  (chrec_b = {224B, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _105 = *_104[0];
  stmt_b: _105 = *_104[0];
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 0)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 16}_2)
  (chrec_b = {0B, +, 16}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _107 = *_104[4];
  stmt_b: _107 = *_104[4];
(analyze_overlapping_iterations 
  (chrec_a = 4)
  (chrec_b = 4)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 16}_2)
  (chrec_b = {0B, +, 16}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _111 = *_104[2];
  stmt_b: _111 = *_104[2];
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 16}_2)
  (chrec_b = {0B, +, 16}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _114 = *_104[6];
  stmt_b: _114 = *_104[6];
(analyze_overlapping_iterations 
  (chrec_a = 6)
  (chrec_b = 6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 16}_2)
  (chrec_b = {0B, +, 16}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _125 = *_104[5];
  stmt_b: _125 = *_104[5];
(analyze_overlapping_iterations 
  (chrec_a = 5)
  (chrec_b = 5)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 16}_2)
  (chrec_b = {0B, +, 16}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _127 = *_104[3];
  stmt_b: _127 = *_104[3];
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 16}_2)
  (chrec_b = {0B, +, 16}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _130 = *_104[7];
  stmt_b: _130 = *_104[7];
(analyze_overlapping_iterations 
  (chrec_a = 7)
  (chrec_b = 7)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 16}_2)
  (chrec_b = {0B, +, 16}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _136 = *_104[1];
  stmt_b: _136 = *_104[1];
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 16}_2)
  (chrec_b = {0B, +, 16}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _163 = *_162;
  stmt_b: _163 = *_162;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_2)
  (chrec_b = {0B, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: *_162 = iftmp.0_273;
  stmt_b: *_162 = iftmp.0_273;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_2)
  (chrec_b = {0B, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _172 = *_171;
  stmt_b: _172 = *_171;
(analyze_overlapping_iterations 
  (chrec_a = {32B, +, 1}_2)
  (chrec_b = {32B, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: *_171 = iftmp.0_267;
  stmt_b: *_171 = iftmp.0_267;
(analyze_overlapping_iterations 
  (chrec_a = {32B, +, 1}_2)
  (chrec_b = {32B, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _181 = *_180;
  stmt_b: _181 = *_180;
(analyze_overlapping_iterations 
  (chrec_a = {64B, +, 1}_2)
  (chrec_b = {64B, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: *_180 = iftmp.0_261;
  stmt_b: *_180 = iftmp.0_261;
(analyze_overlapping_iterations 
  (chrec_a = {64B, +, 1}_2)
  (chrec_b = {64B, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _190 = *_189;
  stmt_b: _190 = *_189;
(analyze_overlapping_iterations 
  (chrec_a = {96B, +, 1}_2)
  (chrec_b = {96B, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: *_189 = iftmp.0_255;
  stmt_b: *_189 = iftmp.0_255;
(analyze_overlapping_iterations 
  (chrec_a = {96B, +, 1}_2)
  (chrec_b = {96B, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _199 = *_198;
  stmt_b: _199 = *_198;
(analyze_overlapping_iterations 
  (chrec_a = {128B, +, 1}_2)
  (chrec_b = {128B, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: *_198 = iftmp.0_249;
  stmt_b: *_198 = iftmp.0_249;
(analyze_overlapping_iterations 
  (chrec_a = {128B, +, 1}_2)
  (chrec_b = {128B, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _208 = *_207;
  stmt_b: _208 = *_207;
(analyze_overlapping_iterations 
  (chrec_a = {160B, +, 1}_2)
  (chrec_b = {160B, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: *_207 = iftmp.0_243;
  stmt_b: *_207 = iftmp.0_243;
(analyze_overlapping_iterations 
  (chrec_a = {160B, +, 1}_2)
  (chrec_b = {160B, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _217 = *_216;
  stmt_b: _217 = *_216;
(analyze_overlapping_iterations 
  (chrec_a = {192B, +, 1}_2)
  (chrec_b = {192B, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: *_216 = iftmp.0_237;
  stmt_b: *_216 = iftmp.0_237;
(analyze_overlapping_iterations 
  (chrec_a = {192B, +, 1}_2)
  (chrec_b = {192B, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _226 = *_225;
  stmt_b: _226 = *_225;
(analyze_overlapping_iterations 
  (chrec_a = {224B, +, 1}_2)
  (chrec_b = {224B, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: *_225 = iftmp.0_186;
  stmt_b: *_225 = iftmp.0_186;
(analyze_overlapping_iterations 
  (chrec_a = {224B, +, 1}_2)
  (chrec_b = {224B, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/dct.c:337:5: note: versioning for alias required: can't determine dependence between *_104[0] and *_162
common/dct.c:337:5: note: mark for run-time aliasing test between *_104[0] and *_162
common/dct.c:337:5: note: versioning for alias required: can't determine dependence between *_104[0] and *_171
common/dct.c:337:5: note: mark for run-time aliasing test between *_104[0] and *_171
common/dct.c:337:5: note: versioning for alias required: can't determine dependence between *_104[0] and *_180
common/dct.c:337:5: note: mark for run-time aliasing test between *_104[0] and *_180
common/dct.c:337:5: note: versioning for alias required: can't determine dependence between *_104[0] and *_189
common/dct.c:337:5: note: mark for run-time aliasing test between *_104[0] and *_189
common/dct.c:337:5: note: versioning for alias required: can't determine dependence between *_104[0] and *_198
common/dct.c:337:5: note: mark for run-time aliasing test between *_104[0] and *_198
common/dct.c:337:5: note: versioning for alias required: can't determine dependence between *_104[0] and *_207
common/dct.c:337:5: note: mark for run-time aliasing test between *_104[0] and *_207
common/dct.c:337:5: note: versioning for alias required: can't determine dependence between *_104[0] and *_216
common/dct.c:337:5: note: mark for run-time aliasing test between *_104[0] and *_216
common/dct.c:337:5: note: versioning for alias required: can't determine dependence between *_104[0] and *_225
common/dct.c:337:5: note: mark for run-time aliasing test between *_104[0] and *_225
common/dct.c:337:5: note: versioning for alias required: can't determine dependence between *_104[4] and *_162
common/dct.c:337:5: note: mark for run-time aliasing test between *_104[4] and *_162
common/dct.c:337:5: note: versioning for alias required: can't determine dependence between *_104[4] and *_171
common/dct.c:337:5: note: mark for run-time aliasing test between *_104[4] and *_171
common/dct.c:337:5: note: versioning for alias required: can't determine dependence between *_104[4] and *_180
common/dct.c:337:5: note: mark for run-time aliasing test between *_104[4] and *_180
common/dct.c:337:5: note: versioning for alias required: can't determine dependence between *_104[4] and *_189
common/dct.c:337:5: note: mark for run-time aliasing test between *_104[4] and *_189
common/dct.c:337:5: note: versioning for alias required: can't determine dependence between *_104[4] and *_198
common/dct.c:337:5: note: mark for run-time aliasing test between *_104[4] and *_198
common/dct.c:337:5: note: versioning for alias required: can't determine dependence between *_104[4] and *_207
common/dct.c:337:5: note: mark for run-time aliasing test between *_104[4] and *_207
common/dct.c:337:5: note: versioning for alias required: can't determine dependence between *_104[4] and *_216
common/dct.c:337:5: note: mark for run-time aliasing test between *_104[4] and *_216
common/dct.c:337:5: note: versioning for alias required: can't determine dependence between *_104[4] and *_225
common/dct.c:337:5: note: mark for run-time aliasing test between *_104[4] and *_225
common/dct.c:337:5: note: versioning for alias required: can't determine dependence between *_104[2] and *_162
common/dct.c:337:5: note: mark for run-time aliasing test between *_104[2] and *_162
common/dct.c:337:5: note: versioning for alias required: can't determine dependence between *_104[2] and *_171
common/dct.c:337:5: note: mark for run-time aliasing test between *_104[2] and *_171
common/dct.c:337:5: note: versioning for alias required: can't determine dependence between *_104[2] and *_180
common/dct.c:337:5: note: mark for run-time aliasing test between *_104[2] and *_180
common/dct.c:337:5: note: versioning for alias required: can't determine dependence between *_104[2] and *_189
common/dct.c:337:5: note: mark for run-time aliasing test between *_104[2] and *_189
common/dct.c:337:5: note: versioning for alias required: can't determine dependence between *_104[2] and *_198
common/dct.c:337:5: note: mark for run-time aliasing test between *_104[2] and *_198
common/dct.c:337:5: note: versioning for alias required: can't determine dependence between *_104[2] and *_207
common/dct.c:337:5: note: mark for run-time aliasing test between *_104[2] and *_207
common/dct.c:337:5: note: versioning for alias required: can't determine dependence between *_104[2] and *_216
common/dct.c:337:5: note: mark for run-time aliasing test between *_104[2] and *_216
common/dct.c:337:5: note: versioning for alias required: can't determine dependence between *_104[2] and *_225
common/dct.c:337:5: note: mark for run-time aliasing test between *_104[2] and *_225
common/dct.c:337:5: note: versioning for alias required: can't determine dependence between *_104[6] and *_162
common/dct.c:337:5: note: mark for run-time aliasing test between *_104[6] and *_162
common/dct.c:337:5: note: versioning for alias required: can't determine dependence between *_104[6] and *_171
common/dct.c:337:5: note: mark for run-time aliasing test between *_104[6] and *_171
common/dct.c:337:5: note: versioning for alias required: can't determine dependence between *_104[6] and *_180
common/dct.c:337:5: note: mark for run-time aliasing test between *_104[6] and *_180
common/dct.c:337:5: note: versioning for alias required: can't determine dependence between *_104[6] and *_189
common/dct.c:337:5: note: mark for run-time aliasing test between *_104[6] and *_189
common/dct.c:337:5: note: versioning for alias required: can't determine dependence between *_104[6] and *_198
common/dct.c:337:5: note: mark for run-time aliasing test between *_104[6] and *_198
common/dct.c:337:5: note: versioning for alias required: can't determine dependence between *_104[6] and *_207
common/dct.c:337:5: note: mark for run-time aliasing test between *_104[6] and *_207
common/dct.c:337:5: note: versioning for alias required: can't determine dependence between *_104[6] and *_216
common/dct.c:337:5: note: mark for run-time aliasing test between *_104[6] and *_216
common/dct.c:337:5: note: versioning for alias required: can't determine dependence between *_104[6] and *_225
common/dct.c:337:5: note: mark for run-time aliasing test between *_104[6] and *_225
common/dct.c:337:5: note: versioning for alias required: can't determine dependence between *_104[5] and *_162
common/dct.c:337:5: note: mark for run-time aliasing test between *_104[5] and *_162
common/dct.c:337:5: note: versioning for alias required: can't determine dependence between *_104[5] and *_171
common/dct.c:337:5: note: mark for run-time aliasing test between *_104[5] and *_171
common/dct.c:337:5: note: versioning for alias required: can't determine dependence between *_104[5] and *_180
common/dct.c:337:5: note: mark for run-time aliasing test between *_104[5] and *_180
common/dct.c:337:5: note: versioning for alias required: can't determine dependence between *_104[5] and *_189
common/dct.c:337:5: note: mark for run-time aliasing test between *_104[5] and *_189
common/dct.c:337:5: note: versioning for alias required: can't determine dependence between *_104[5] and *_198
common/dct.c:337:5: note: mark for run-time aliasing test between *_104[5] and *_198
common/dct.c:337:5: note: versioning for alias required: can't determine dependence between *_104[5] and *_207
common/dct.c:337:5: note: mark for run-time aliasing test between *_104[5] and *_207
common/dct.c:337:5: note: versioning for alias required: can't determine dependence between *_104[5] and *_216
common/dct.c:337:5: note: mark for run-time aliasing test between *_104[5] and *_216
common/dct.c:337:5: note: versioning for alias required: can't determine dependence between *_104[5] and *_225
common/dct.c:337:5: note: mark for run-time aliasing test between *_104[5] and *_225
common/dct.c:337:5: note: versioning for alias required: can't determine dependence between *_104[3] and *_162
common/dct.c:337:5: note: mark for run-time aliasing test between *_104[3] and *_162
common/dct.c:337:5: note: versioning for alias required: can't determine dependence between *_104[3] and *_171
common/dct.c:337:5: note: mark for run-time aliasing test between *_104[3] and *_171
common/dct.c:337:5: note: versioning for alias required: can't determine dependence between *_104[3] and *_180
common/dct.c:337:5: note: mark for run-time aliasing test between *_104[3] and *_180
common/dct.c:337:5: note: versioning for alias required: can't determine dependence between *_104[3] and *_189
common/dct.c:337:5: note: mark for run-time aliasing test between *_104[3] and *_189
common/dct.c:337:5: note: versioning for alias required: can't determine dependence between *_104[3] and *_198
common/dct.c:337:5: note: mark for run-time aliasing test between *_104[3] and *_198
common/dct.c:337:5: note: versioning for alias required: can't determine dependence between *_104[3] and *_207
common/dct.c:337:5: note: mark for run-time aliasing test between *_104[3] and *_207
common/dct.c:337:5: note: versioning for alias required: can't determine dependence between *_104[3] and *_216
common/dct.c:337:5: note: mark for run-time aliasing test between *_104[3] and *_216
common/dct.c:337:5: note: versioning for alias required: can't determine dependence between *_104[3] and *_225
common/dct.c:337:5: note: mark for run-time aliasing test between *_104[3] and *_225
common/dct.c:337:5: note: versioning for alias required: can't determine dependence between *_104[7] and *_162
common/dct.c:337:5: note: mark for run-time aliasing test between *_104[7] and *_162
common/dct.c:337:5: note: versioning for alias required: can't determine dependence between *_104[7] and *_171
common/dct.c:337:5: note: mark for run-time aliasing test between *_104[7] and *_171
common/dct.c:337:5: note: versioning for alias required: can't determine dependence between *_104[7] and *_180
common/dct.c:337:5: note: mark for run-time aliasing test between *_104[7] and *_180
common/dct.c:337:5: note: versioning for alias required: can't determine dependence between *_104[7] and *_189
common/dct.c:337:5: note: mark for run-time aliasing test between *_104[7] and *_189
common/dct.c:337:5: note: versioning for alias required: can't determine dependence between *_104[7] and *_198
common/dct.c:337:5: note: mark for run-time aliasing test between *_104[7] and *_198
common/dct.c:337:5: note: versioning for alias required: can't determine dependence between *_104[7] and *_207
common/dct.c:337:5: note: mark for run-time aliasing test between *_104[7] and *_207
common/dct.c:337:5: note: versioning for alias required: can't determine dependence between *_104[7] and *_216
common/dct.c:337:5: note: mark for run-time aliasing test between *_104[7] and *_216
common/dct.c:337:5: note: versioning for alias required: can't determine dependence between *_104[7] and *_225
common/dct.c:337:5: note: mark for run-time aliasing test between *_104[7] and *_225
common/dct.c:337:5: note: versioning for alias required: can't determine dependence between *_104[1] and *_162
common/dct.c:337:5: note: mark for run-time aliasing test between *_104[1] and *_162
common/dct.c:337:5: note: versioning for alias required: can't determine dependence between *_104[1] and *_171
common/dct.c:337:5: note: mark for run-time aliasing test between *_104[1] and *_171
common/dct.c:337:5: note: versioning for alias required: can't determine dependence between *_104[1] and *_180
common/dct.c:337:5: note: mark for run-time aliasing test between *_104[1] and *_180
common/dct.c:337:5: note: versioning for alias required: can't determine dependence between *_104[1] and *_189
common/dct.c:337:5: note: mark for run-time aliasing test between *_104[1] and *_189
common/dct.c:337:5: note: versioning for alias required: can't determine dependence between *_104[1] and *_198
common/dct.c:337:5: note: mark for run-time aliasing test between *_104[1] and *_198
common/dct.c:337:5: note: versioning for alias required: can't determine dependence between *_104[1] and *_207
common/dct.c:337:5: note: mark for run-time aliasing test between *_104[1] and *_207
common/dct.c:337:5: note: versioning for alias required: can't determine dependence between *_104[1] and *_216
common/dct.c:337:5: note: mark for run-time aliasing test between *_104[1] and *_216
common/dct.c:337:5: note: versioning for alias required: can't determine dependence between *_104[1] and *_225
common/dct.c:337:5: note: mark for run-time aliasing test between *_104[1] and *_225
common/dct.c:337:5: note: dependence distance  = 0.
common/dct.c:337:5: note: dependence distance == 0 between *_162 and *_162
common/dct.c:337:5: note: dependence distance  = 0.
common/dct.c:337:5: note: dependence distance == 0 between *_171 and *_171
common/dct.c:337:5: note: dependence distance  = 0.
common/dct.c:337:5: note: dependence distance == 0 between *_180 and *_180
common/dct.c:337:5: note: dependence distance  = 0.
common/dct.c:337:5: note: dependence distance == 0 between *_189 and *_189
common/dct.c:337:5: note: dependence distance  = 0.
common/dct.c:337:5: note: dependence distance == 0 between *_198 and *_198
common/dct.c:337:5: note: dependence distance  = 0.
common/dct.c:337:5: note: dependence distance == 0 between *_207 and *_207
common/dct.c:337:5: note: dependence distance  = 0.
common/dct.c:337:5: note: dependence distance == 0 between *_216 and *_216
common/dct.c:337:5: note: dependence distance  = 0.
common/dct.c:337:5: note: dependence distance == 0 between *_225 and *_225
common/dct.c:337:5: note: === vect_determine_vectorization_factor ===
common/dct.c:337:5: note: ==> examining phi: i_305 = PHI <0(5), i_233(7)>

common/dct.c:337:5: note: ==> examining phi: .MEM_303 = PHI <.MEM_100(5), .MEM_232(7)>

common/dct.c:337:5: note: ==> examining phi: ivtmp_565 = PHI <8(5), ivtmp_564(7)>

common/dct.c:337:5: note: ==> examining statement: # DEBUG i => NULL

common/dct.c:337:5: note: skip.
common/dct.c:337:5: note: ==> examining statement: _102 = (long unsigned int) i_305;

common/dct.c:337:5: note: skip.
common/dct.c:337:5: note: ==> examining statement: _103 = _102 * 16;

common/dct.c:337:5: note: skip.
common/dct.c:337:5: note: ==> examining statement: _104 = dct_6(D) + _103;

common/dct.c:337:5: note: skip.
common/dct.c:337:5: note: ==> examining statement: _105 = *_104[0];

common/dct.c:337:5: note: get vectype for scalar type:  short int
common/dct.c:337:5: note: vectype: vector(8) short int
common/dct.c:337:5: note: nunits = 8
common/dct.c:337:5: note: ==> examining statement: _106 = (int) _105;

common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  short int
common/dct.c:337:5: note: vectype: vector(8) short int
common/dct.c:337:5: note: nunits = 8
common/dct.c:337:5: note: ==> examining statement: _107 = *_104[4];

common/dct.c:337:5: note: get vectype for scalar type:  short int
common/dct.c:337:5: note: vectype: vector(8) short int
common/dct.c:337:5: note: nunits = 8
common/dct.c:337:5: note: ==> examining statement: _108 = (int) _107;

common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  short int
common/dct.c:337:5: note: vectype: vector(8) short int
common/dct.c:337:5: note: nunits = 8
common/dct.c:337:5: note: ==> examining statement: a0_109 = _106 + _108;

common/dct.c:337:5: note: get vectype for scalar type:  const int
common/dct.c:337:5: note: vectype: const vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  const int
common/dct.c:337:5: note: vectype: const vector(4) int
common/dct.c:337:5: note: nunits = 4
common/dct.c:337:5: note: ==> examining statement: # DEBUG a0 => NULL

common/dct.c:337:5: note: skip.
common/dct.c:337:5: note: ==> examining statement: a2_110 = _106 - _108;

common/dct.c:337:5: note: get vectype for scalar type:  const int
common/dct.c:337:5: note: vectype: const vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  const int
common/dct.c:337:5: note: vectype: const vector(4) int
common/dct.c:337:5: note: nunits = 4
common/dct.c:337:5: note: ==> examining statement: # DEBUG a2 => NULL

common/dct.c:337:5: note: skip.
common/dct.c:337:5: note: ==> examining statement: _111 = *_104[2];

common/dct.c:337:5: note: get vectype for scalar type:  short int
common/dct.c:337:5: note: vectype: vector(8) short int
common/dct.c:337:5: note: nunits = 8
common/dct.c:337:5: note: ==> examining statement: _112 = _111 >> 1;

common/dct.c:337:5: note: get vectype for scalar type:  short int
common/dct.c:337:5: note: vectype: vector(8) short int
common/dct.c:337:5: note: get vectype for scalar type:  short int
common/dct.c:337:5: note: vectype: vector(8) short int
common/dct.c:337:5: note: nunits = 8
common/dct.c:337:5: note: ==> examining statement: _113 = (int) _112;

common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  short int
common/dct.c:337:5: note: vectype: vector(8) short int
common/dct.c:337:5: note: nunits = 8
common/dct.c:337:5: note: ==> examining statement: _114 = *_104[6];

common/dct.c:337:5: note: get vectype for scalar type:  short int
common/dct.c:337:5: note: vectype: vector(8) short int
common/dct.c:337:5: note: nunits = 8
common/dct.c:337:5: note: ==> examining statement: _115 = (int) _114;

common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  short int
common/dct.c:337:5: note: vectype: vector(8) short int
common/dct.c:337:5: note: nunits = 8
common/dct.c:337:5: note: ==> examining statement: a4_116 = _113 - _115;

common/dct.c:337:5: note: get vectype for scalar type:  const int
common/dct.c:337:5: note: vectype: const vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  const int
common/dct.c:337:5: note: vectype: const vector(4) int
common/dct.c:337:5: note: nunits = 4
common/dct.c:337:5: note: ==> examining statement: # DEBUG a4 => NULL

common/dct.c:337:5: note: skip.
common/dct.c:337:5: note: ==> examining statement: _117 = _114 >> 1;

common/dct.c:337:5: note: get vectype for scalar type:  short int
common/dct.c:337:5: note: vectype: vector(8) short int
common/dct.c:337:5: note: get vectype for scalar type:  short int
common/dct.c:337:5: note: vectype: vector(8) short int
common/dct.c:337:5: note: nunits = 8
common/dct.c:337:5: note: ==> examining statement: _118 = (int) _117;

common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  short int
common/dct.c:337:5: note: vectype: vector(8) short int
common/dct.c:337:5: note: nunits = 8
common/dct.c:337:5: note: ==> examining statement: _119 = (int) _111;

common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  short int
common/dct.c:337:5: note: vectype: vector(8) short int
common/dct.c:337:5: note: nunits = 8
common/dct.c:337:5: note: ==> examining statement: a6_120 = _118 + _119;

common/dct.c:337:5: note: get vectype for scalar type:  const int
common/dct.c:337:5: note: vectype: const vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  const int
common/dct.c:337:5: note: vectype: const vector(4) int
common/dct.c:337:5: note: nunits = 4
common/dct.c:337:5: note: ==> examining statement: # DEBUG a6 => NULL

common/dct.c:337:5: note: skip.
common/dct.c:337:5: note: ==> examining statement: b0_121 = a0_109 + a6_120;

common/dct.c:337:5: note: get vectype for scalar type:  const int
common/dct.c:337:5: note: vectype: const vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  const int
common/dct.c:337:5: note: vectype: const vector(4) int
common/dct.c:337:5: note: nunits = 4
common/dct.c:337:5: note: ==> examining statement: # DEBUG b0 => NULL

common/dct.c:337:5: note: skip.
common/dct.c:337:5: note: ==> examining statement: b2_122 = a2_110 + a4_116;

common/dct.c:337:5: note: get vectype for scalar type:  const int
common/dct.c:337:5: note: vectype: const vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  const int
common/dct.c:337:5: note: vectype: const vector(4) int
common/dct.c:337:5: note: nunits = 4
common/dct.c:337:5: note: ==> examining statement: # DEBUG b2 => NULL

common/dct.c:337:5: note: skip.
common/dct.c:337:5: note: ==> examining statement: b4_123 = a2_110 - a4_116;

common/dct.c:337:5: note: get vectype for scalar type:  const int
common/dct.c:337:5: note: vectype: const vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  const int
common/dct.c:337:5: note: vectype: const vector(4) int
common/dct.c:337:5: note: nunits = 4
common/dct.c:337:5: note: ==> examining statement: # DEBUG b4 => NULL

common/dct.c:337:5: note: skip.
common/dct.c:337:5: note: ==> examining statement: b6_124 = a0_109 - a6_120;

common/dct.c:337:5: note: get vectype for scalar type:  const int
common/dct.c:337:5: note: vectype: const vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  const int
common/dct.c:337:5: note: vectype: const vector(4) int
common/dct.c:337:5: note: nunits = 4
common/dct.c:337:5: note: ==> examining statement: # DEBUG b6 => NULL

common/dct.c:337:5: note: skip.
common/dct.c:337:5: note: ==> examining statement: _125 = *_104[5];

common/dct.c:337:5: note: get vectype for scalar type:  short int
common/dct.c:337:5: note: vectype: vector(8) short int
common/dct.c:337:5: note: nunits = 8
common/dct.c:337:5: note: ==> examining statement: _126 = (int) _125;

common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  short int
common/dct.c:337:5: note: vectype: vector(8) short int
common/dct.c:337:5: note: nunits = 8
common/dct.c:337:5: note: ==> examining statement: _127 = *_104[3];

common/dct.c:337:5: note: get vectype for scalar type:  short int
common/dct.c:337:5: note: vectype: vector(8) short int
common/dct.c:337:5: note: nunits = 8
common/dct.c:337:5: note: ==> examining statement: _128 = (int) _127;

common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  short int
common/dct.c:337:5: note: vectype: vector(8) short int
common/dct.c:337:5: note: nunits = 8
common/dct.c:337:5: note: ==> examining statement: _129 = _126 - _128;

common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: nunits = 4
common/dct.c:337:5: note: ==> examining statement: _130 = *_104[7];

common/dct.c:337:5: note: get vectype for scalar type:  short int
common/dct.c:337:5: note: vectype: vector(8) short int
common/dct.c:337:5: note: nunits = 8
common/dct.c:337:5: note: ==> examining statement: _131 = (int) _130;

common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  short int
common/dct.c:337:5: note: vectype: vector(8) short int
common/dct.c:337:5: note: nunits = 8
common/dct.c:337:5: note: ==> examining statement: _132 = _129 - _131;

common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: nunits = 4
common/dct.c:337:5: note: ==> examining statement: _133 = _130 >> 1;

common/dct.c:337:5: note: get vectype for scalar type:  short int
common/dct.c:337:5: note: vectype: vector(8) short int
common/dct.c:337:5: note: get vectype for scalar type:  short int
common/dct.c:337:5: note: vectype: vector(8) short int
common/dct.c:337:5: note: nunits = 8
common/dct.c:337:5: note: ==> examining statement: _134 = (int) _133;

common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  short int
common/dct.c:337:5: note: vectype: vector(8) short int
common/dct.c:337:5: note: nunits = 8
common/dct.c:337:5: note: ==> examining statement: a1_135 = _132 - _134;

common/dct.c:337:5: note: get vectype for scalar type:  const int
common/dct.c:337:5: note: vectype: const vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  const int
common/dct.c:337:5: note: vectype: const vector(4) int
common/dct.c:337:5: note: nunits = 4
common/dct.c:337:5: note: ==> examining statement: # DEBUG a1 => NULL

common/dct.c:337:5: note: skip.
common/dct.c:337:5: note: ==> examining statement: _136 = *_104[1];

common/dct.c:337:5: note: get vectype for scalar type:  short int
common/dct.c:337:5: note: vectype: vector(8) short int
common/dct.c:337:5: note: nunits = 8
common/dct.c:337:5: note: ==> examining statement: _137 = (int) _136;

common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  short int
common/dct.c:337:5: note: vectype: vector(8) short int
common/dct.c:337:5: note: nunits = 8
common/dct.c:337:5: note: ==> examining statement: _138 = _131 + _137;

common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: nunits = 4
common/dct.c:337:5: note: ==> examining statement: _139 = _138 - _128;

common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: nunits = 4
common/dct.c:337:5: note: ==> examining statement: _140 = _127 >> 1;

common/dct.c:337:5: note: get vectype for scalar type:  short int
common/dct.c:337:5: note: vectype: vector(8) short int
common/dct.c:337:5: note: get vectype for scalar type:  short int
common/dct.c:337:5: note: vectype: vector(8) short int
common/dct.c:337:5: note: nunits = 8
common/dct.c:337:5: note: ==> examining statement: _141 = (int) _140;

common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  short int
common/dct.c:337:5: note: vectype: vector(8) short int
common/dct.c:337:5: note: nunits = 8
common/dct.c:337:5: note: ==> examining statement: a3_142 = _139 - _141;

common/dct.c:337:5: note: get vectype for scalar type:  const int
common/dct.c:337:5: note: vectype: const vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  const int
common/dct.c:337:5: note: vectype: const vector(4) int
common/dct.c:337:5: note: nunits = 4
common/dct.c:337:5: note: ==> examining statement: # DEBUG a3 => NULL

common/dct.c:337:5: note: skip.
common/dct.c:337:5: note: ==> examining statement: _143 = _131 - _137;

common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: nunits = 4
common/dct.c:337:5: note: ==> examining statement: _144 = _126 + _143;

common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: nunits = 4
common/dct.c:337:5: note: ==> examining statement: _145 = _125 >> 1;

common/dct.c:337:5: note: get vectype for scalar type:  short int
common/dct.c:337:5: note: vectype: vector(8) short int
common/dct.c:337:5: note: get vectype for scalar type:  short int
common/dct.c:337:5: note: vectype: vector(8) short int
common/dct.c:337:5: note: nunits = 8
common/dct.c:337:5: note: ==> examining statement: _146 = (int) _145;

common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  short int
common/dct.c:337:5: note: vectype: vector(8) short int
common/dct.c:337:5: note: nunits = 8
common/dct.c:337:5: note: ==> examining statement: a5_147 = _144 + _146;

common/dct.c:337:5: note: get vectype for scalar type:  const int
common/dct.c:337:5: note: vectype: const vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  const int
common/dct.c:337:5: note: vectype: const vector(4) int
common/dct.c:337:5: note: nunits = 4
common/dct.c:337:5: note: ==> examining statement: # DEBUG a5 => NULL

common/dct.c:337:5: note: skip.
common/dct.c:337:5: note: ==> examining statement: _148 = _126 + _128;

common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: nunits = 4
common/dct.c:337:5: note: ==> examining statement: _149 = _137 + _148;

common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: nunits = 4
common/dct.c:337:5: note: ==> examining statement: _150 = _136 >> 1;

common/dct.c:337:5: note: get vectype for scalar type:  short int
common/dct.c:337:5: note: vectype: vector(8) short int
common/dct.c:337:5: note: get vectype for scalar type:  short int
common/dct.c:337:5: note: vectype: vector(8) short int
common/dct.c:337:5: note: nunits = 8
common/dct.c:337:5: note: ==> examining statement: _151 = (int) _150;

common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  short int
common/dct.c:337:5: note: vectype: vector(8) short int
common/dct.c:337:5: note: nunits = 8
common/dct.c:337:5: note: ==> examining statement: a7_152 = _149 + _151;

common/dct.c:337:5: note: get vectype for scalar type:  const int
common/dct.c:337:5: note: vectype: const vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  const int
common/dct.c:337:5: note: vectype: const vector(4) int
common/dct.c:337:5: note: nunits = 4
common/dct.c:337:5: note: ==> examining statement: # DEBUG a7 => NULL

common/dct.c:337:5: note: skip.
common/dct.c:337:5: note: ==> examining statement: _153 = a7_152 >> 2;

common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: nunits = 4
common/dct.c:337:5: note: ==> examining statement: b1_154 = a1_135 + _153;

common/dct.c:337:5: note: get vectype for scalar type:  const int
common/dct.c:337:5: note: vectype: const vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  const int
common/dct.c:337:5: note: vectype: const vector(4) int
common/dct.c:337:5: note: nunits = 4
common/dct.c:337:5: note: ==> examining statement: # DEBUG b1 => NULL

common/dct.c:337:5: note: skip.
common/dct.c:337:5: note: ==> examining statement: _155 = a5_147 >> 2;

common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: nunits = 4
common/dct.c:337:5: note: ==> examining statement: b3_156 = a3_142 + _155;

common/dct.c:337:5: note: get vectype for scalar type:  const int
common/dct.c:337:5: note: vectype: const vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  const int
common/dct.c:337:5: note: vectype: const vector(4) int
common/dct.c:337:5: note: nunits = 4
common/dct.c:337:5: note: ==> examining statement: # DEBUG b3 => NULL

common/dct.c:337:5: note: skip.
common/dct.c:337:5: note: ==> examining statement: _157 = a3_142 >> 2;

common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: nunits = 4
common/dct.c:337:5: note: ==> examining statement: b5_158 = _157 - a5_147;

common/dct.c:337:5: note: get vectype for scalar type:  const int
common/dct.c:337:5: note: vectype: const vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  const int
common/dct.c:337:5: note: vectype: const vector(4) int
common/dct.c:337:5: note: nunits = 4
common/dct.c:337:5: note: ==> examining statement: # DEBUG b5 => NULL

common/dct.c:337:5: note: skip.
common/dct.c:337:5: note: ==> examining statement: _159 = a1_135 >> 2;

common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: nunits = 4
common/dct.c:337:5: note: ==> examining statement: b7_160 = a7_152 - _159;

common/dct.c:337:5: note: get vectype for scalar type:  const int
common/dct.c:337:5: note: vectype: const vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  const int
common/dct.c:337:5: note: vectype: const vector(4) int
common/dct.c:337:5: note: nunits = 4
common/dct.c:337:5: note: ==> examining statement: # DEBUG b7 => NULL

common/dct.c:337:5: note: skip.
common/dct.c:337:5: note: ==> examining statement: _162 = dst_161(D) + _102;

common/dct.c:337:5: note: skip.
common/dct.c:337:5: note: ==> examining statement: _163 = *_162;

common/dct.c:337:5: note: get vectype for scalar type:  unsigned char
common/dct.c:337:5: note: vectype: vector(16) unsigned char
common/dct.c:337:5: note: nunits = 16
common/dct.c:337:5: note: ==> examining statement: _164 = (int) _163;

common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  unsigned char
common/dct.c:337:5: note: vectype: vector(16) unsigned char
common/dct.c:337:5: note: nunits = 16
common/dct.c:337:5: note: ==> examining statement: _165 = b0_121 + b7_160;

common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: nunits = 4
common/dct.c:337:5: note: ==> examining statement: _166 = _165 >> 6;

common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: nunits = 4
common/dct.c:337:5: note: ==> examining statement: _167 = _164 + _166;

common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: nunits = 4
common/dct.c:337:5: note: ==> examining statement: # DEBUG x => NULL

common/dct.c:337:5: note: skip.
common/dct.c:337:5: note: ==> examining statement: _268 = _167 & -256;

common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: nunits = 4
common/dct.c:337:5: note: ==> examining statement: _269 = -_167;

common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: nunits = 4
common/dct.c:337:5: note: ==> examining statement: _270 = _269 >> 31;

common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: nunits = 4
common/dct.c:337:5: note: ==> examining statement: iftmp.0_271 = (unsigned char) _270;

common/dct.c:337:5: note: skip.
common/dct.c:337:5: note: ==> examining statement: iftmp.0_272 = (unsigned char) _167;

common/dct.c:337:5: note: skip.
common/dct.c:337:5: note: ==> examining statement: iftmp.0_273 = _268 != 0 ? iftmp.0_271 : iftmp.0_272;

common/dct.c:337:5: note: ==> examining pattern statement: patt_560 = (unsigned char) patt_561;

common/dct.c:337:5: note: ==> examining pattern def stmt: patt_561 = _268 != 0 ? _270 : _167;

common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: nunits = 4
common/dct.c:337:5: note: ==> examining statement: iftmp.0_273 = _268 != 0 ? iftmp.0_271 : iftmp.0_272;

common/dct.c:337:5: note: ==> examining pattern statement: patt_560 = (unsigned char) patt_561;

common/dct.c:337:5: note: get vectype for scalar type:  unsigned char
common/dct.c:337:5: note: vectype: vector(16) unsigned char
common/dct.c:337:5: note: nunits = 16
common/dct.c:337:5: note: ==> examining statement: # DEBUG x => NULL

common/dct.c:337:5: note: skip.
common/dct.c:337:5: note: ==> examining statement: *_162 = iftmp.0_273;

common/dct.c:337:5: note: get vectype for scalar type:  uint8_t
common/dct.c:337:5: note: vectype: vector(16) unsigned char
common/dct.c:337:5: note: nunits = 16
common/dct.c:337:5: note: ==> examining statement: _170 = _102 + 32;

common/dct.c:337:5: note: skip.
common/dct.c:337:5: note: ==> examining statement: _171 = dst_161(D) + _170;

common/dct.c:337:5: note: skip.
common/dct.c:337:5: note: ==> examining statement: _172 = *_171;

common/dct.c:337:5: note: get vectype for scalar type:  unsigned char
common/dct.c:337:5: note: vectype: vector(16) unsigned char
common/dct.c:337:5: note: nunits = 16
common/dct.c:337:5: note: ==> examining statement: _173 = (int) _172;

common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  unsigned char
common/dct.c:337:5: note: vectype: vector(16) unsigned char
common/dct.c:337:5: note: nunits = 16
common/dct.c:337:5: note: ==> examining statement: _174 = b2_122 + b5_158;

common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: nunits = 4
common/dct.c:337:5: note: ==> examining statement: _175 = _174 >> 6;

common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: nunits = 4
common/dct.c:337:5: note: ==> examining statement: _176 = _173 + _175;

common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: nunits = 4
common/dct.c:337:5: note: ==> examining statement: # DEBUG x => NULL

common/dct.c:337:5: note: skip.
common/dct.c:337:5: note: ==> examining statement: _262 = _176 & -256;

common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: nunits = 4
common/dct.c:337:5: note: ==> examining statement: _263 = -_176;

common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: nunits = 4
common/dct.c:337:5: note: ==> examining statement: _264 = _263 >> 31;

common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: nunits = 4
common/dct.c:337:5: note: ==> examining statement: iftmp.0_265 = (unsigned char) _264;

common/dct.c:337:5: note: skip.
common/dct.c:337:5: note: ==> examining statement: iftmp.0_266 = (unsigned char) _176;

common/dct.c:337:5: note: skip.
common/dct.c:337:5: note: ==> examining statement: iftmp.0_267 = _262 != 0 ? iftmp.0_265 : iftmp.0_266;

common/dct.c:337:5: note: ==> examining pattern statement: patt_558 = (unsigned char) patt_559;

common/dct.c:337:5: note: ==> examining pattern def stmt: patt_559 = _262 != 0 ? _264 : _176;

common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: nunits = 4
common/dct.c:337:5: note: ==> examining statement: iftmp.0_267 = _262 != 0 ? iftmp.0_265 : iftmp.0_266;

common/dct.c:337:5: note: ==> examining pattern statement: patt_558 = (unsigned char) patt_559;

common/dct.c:337:5: note: get vectype for scalar type:  unsigned char
common/dct.c:337:5: note: vectype: vector(16) unsigned char
common/dct.c:337:5: note: nunits = 16
common/dct.c:337:5: note: ==> examining statement: # DEBUG x => NULL

common/dct.c:337:5: note: skip.
common/dct.c:337:5: note: ==> examining statement: *_171 = iftmp.0_267;

common/dct.c:337:5: note: get vectype for scalar type:  uint8_t
common/dct.c:337:5: note: vectype: vector(16) unsigned char
common/dct.c:337:5: note: nunits = 16
common/dct.c:337:5: note: ==> examining statement: _179 = _102 + 64;

common/dct.c:337:5: note: skip.
common/dct.c:337:5: note: ==> examining statement: _180 = dst_161(D) + _179;

common/dct.c:337:5: note: skip.
common/dct.c:337:5: note: ==> examining statement: _181 = *_180;

common/dct.c:337:5: note: get vectype for scalar type:  unsigned char
common/dct.c:337:5: note: vectype: vector(16) unsigned char
common/dct.c:337:5: note: nunits = 16
common/dct.c:337:5: note: ==> examining statement: _182 = (int) _181;

common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  unsigned char
common/dct.c:337:5: note: vectype: vector(16) unsigned char
common/dct.c:337:5: note: nunits = 16
common/dct.c:337:5: note: ==> examining statement: _183 = b4_123 + b3_156;

common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: nunits = 4
common/dct.c:337:5: note: ==> examining statement: _184 = _183 >> 6;

common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: nunits = 4
common/dct.c:337:5: note: ==> examining statement: _185 = _182 + _184;

common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: nunits = 4
common/dct.c:337:5: note: ==> examining statement: # DEBUG x => NULL

common/dct.c:337:5: note: skip.
common/dct.c:337:5: note: ==> examining statement: _256 = _185 & -256;

common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: nunits = 4
common/dct.c:337:5: note: ==> examining statement: _257 = -_185;

common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: nunits = 4
common/dct.c:337:5: note: ==> examining statement: _258 = _257 >> 31;

common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: nunits = 4
common/dct.c:337:5: note: ==> examining statement: iftmp.0_259 = (unsigned char) _258;

common/dct.c:337:5: note: skip.
common/dct.c:337:5: note: ==> examining statement: iftmp.0_260 = (unsigned char) _185;

common/dct.c:337:5: note: skip.
common/dct.c:337:5: note: ==> examining statement: iftmp.0_261 = _256 != 0 ? iftmp.0_259 : iftmp.0_260;

common/dct.c:337:5: note: ==> examining pattern statement: patt_556 = (unsigned char) patt_557;

common/dct.c:337:5: note: ==> examining pattern def stmt: patt_557 = _256 != 0 ? _258 : _185;

common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: nunits = 4
common/dct.c:337:5: note: ==> examining statement: iftmp.0_261 = _256 != 0 ? iftmp.0_259 : iftmp.0_260;

common/dct.c:337:5: note: ==> examining pattern statement: patt_556 = (unsigned char) patt_557;

common/dct.c:337:5: note: get vectype for scalar type:  unsigned char
common/dct.c:337:5: note: vectype: vector(16) unsigned char
common/dct.c:337:5: note: nunits = 16
common/dct.c:337:5: note: ==> examining statement: # DEBUG x => NULL

common/dct.c:337:5: note: skip.
common/dct.c:337:5: note: ==> examining statement: *_180 = iftmp.0_261;

common/dct.c:337:5: note: get vectype for scalar type:  uint8_t
common/dct.c:337:5: note: vectype: vector(16) unsigned char
common/dct.c:337:5: note: nunits = 16
common/dct.c:337:5: note: ==> examining statement: _188 = _102 + 96;

common/dct.c:337:5: note: skip.
common/dct.c:337:5: note: ==> examining statement: _189 = dst_161(D) + _188;

common/dct.c:337:5: note: skip.
common/dct.c:337:5: note: ==> examining statement: _190 = *_189;

common/dct.c:337:5: note: get vectype for scalar type:  unsigned char
common/dct.c:337:5: note: vectype: vector(16) unsigned char
common/dct.c:337:5: note: nunits = 16
common/dct.c:337:5: note: ==> examining statement: _191 = (int) _190;

common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  unsigned char
common/dct.c:337:5: note: vectype: vector(16) unsigned char
common/dct.c:337:5: note: nunits = 16
common/dct.c:337:5: note: ==> examining statement: _192 = b6_124 + b1_154;

common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: nunits = 4
common/dct.c:337:5: note: ==> examining statement: _193 = _192 >> 6;

common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: nunits = 4
common/dct.c:337:5: note: ==> examining statement: _194 = _191 + _193;

common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: nunits = 4
common/dct.c:337:5: note: ==> examining statement: # DEBUG x => NULL

common/dct.c:337:5: note: skip.
common/dct.c:337:5: note: ==> examining statement: _250 = _194 & -256;

common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: nunits = 4
common/dct.c:337:5: note: ==> examining statement: _251 = -_194;

common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: nunits = 4
common/dct.c:337:5: note: ==> examining statement: _252 = _251 >> 31;

common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: nunits = 4
common/dct.c:337:5: note: ==> examining statement: iftmp.0_253 = (unsigned char) _252;

common/dct.c:337:5: note: skip.
common/dct.c:337:5: note: ==> examining statement: iftmp.0_254 = (unsigned char) _194;

common/dct.c:337:5: note: skip.
common/dct.c:337:5: note: ==> examining statement: iftmp.0_255 = _250 != 0 ? iftmp.0_253 : iftmp.0_254;

common/dct.c:337:5: note: ==> examining pattern statement: patt_554 = (unsigned char) patt_555;

common/dct.c:337:5: note: ==> examining pattern def stmt: patt_555 = _250 != 0 ? _252 : _194;

common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: nunits = 4
common/dct.c:337:5: note: ==> examining statement: iftmp.0_255 = _250 != 0 ? iftmp.0_253 : iftmp.0_254;

common/dct.c:337:5: note: ==> examining pattern statement: patt_554 = (unsigned char) patt_555;

common/dct.c:337:5: note: get vectype for scalar type:  unsigned char
common/dct.c:337:5: note: vectype: vector(16) unsigned char
common/dct.c:337:5: note: nunits = 16
common/dct.c:337:5: note: ==> examining statement: # DEBUG x => NULL

common/dct.c:337:5: note: skip.
common/dct.c:337:5: note: ==> examining statement: *_189 = iftmp.0_255;

common/dct.c:337:5: note: get vectype for scalar type:  uint8_t
common/dct.c:337:5: note: vectype: vector(16) unsigned char
common/dct.c:337:5: note: nunits = 16
common/dct.c:337:5: note: ==> examining statement: _197 = _102 + 128;

common/dct.c:337:5: note: skip.
common/dct.c:337:5: note: ==> examining statement: _198 = dst_161(D) + _197;

common/dct.c:337:5: note: skip.
common/dct.c:337:5: note: ==> examining statement: _199 = *_198;

common/dct.c:337:5: note: get vectype for scalar type:  unsigned char
common/dct.c:337:5: note: vectype: vector(16) unsigned char
common/dct.c:337:5: note: nunits = 16
common/dct.c:337:5: note: ==> examining statement: _200 = (int) _199;

common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  unsigned char
common/dct.c:337:5: note: vectype: vector(16) unsigned char
common/dct.c:337:5: note: nunits = 16
common/dct.c:337:5: note: ==> examining statement: _201 = b6_124 - b1_154;

common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: nunits = 4
common/dct.c:337:5: note: ==> examining statement: _202 = _201 >> 6;

common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: nunits = 4
common/dct.c:337:5: note: ==> examining statement: _203 = _200 + _202;

common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: nunits = 4
common/dct.c:337:5: note: ==> examining statement: # DEBUG x => NULL

common/dct.c:337:5: note: skip.
common/dct.c:337:5: note: ==> examining statement: _244 = _203 & -256;

common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: nunits = 4
common/dct.c:337:5: note: ==> examining statement: _245 = -_203;

common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: nunits = 4
common/dct.c:337:5: note: ==> examining statement: _246 = _245 >> 31;

common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: nunits = 4
common/dct.c:337:5: note: ==> examining statement: iftmp.0_247 = (unsigned char) _246;

common/dct.c:337:5: note: skip.
common/dct.c:337:5: note: ==> examining statement: iftmp.0_248 = (unsigned char) _203;

common/dct.c:337:5: note: skip.
common/dct.c:337:5: note: ==> examining statement: iftmp.0_249 = _244 != 0 ? iftmp.0_247 : iftmp.0_248;

common/dct.c:337:5: note: ==> examining pattern statement: patt_552 = (unsigned char) patt_553;

common/dct.c:337:5: note: ==> examining pattern def stmt: patt_553 = _244 != 0 ? _246 : _203;

common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: nunits = 4
common/dct.c:337:5: note: ==> examining statement: iftmp.0_249 = _244 != 0 ? iftmp.0_247 : iftmp.0_248;

common/dct.c:337:5: note: ==> examining pattern statement: patt_552 = (unsigned char) patt_553;

common/dct.c:337:5: note: get vectype for scalar type:  unsigned char
common/dct.c:337:5: note: vectype: vector(16) unsigned char
common/dct.c:337:5: note: nunits = 16
common/dct.c:337:5: note: ==> examining statement: # DEBUG x => NULL

common/dct.c:337:5: note: skip.
common/dct.c:337:5: note: ==> examining statement: *_198 = iftmp.0_249;

common/dct.c:337:5: note: get vectype for scalar type:  uint8_t
common/dct.c:337:5: note: vectype: vector(16) unsigned char
common/dct.c:337:5: note: nunits = 16
common/dct.c:337:5: note: ==> examining statement: _206 = _102 + 160;

common/dct.c:337:5: note: skip.
common/dct.c:337:5: note: ==> examining statement: _207 = dst_161(D) + _206;

common/dct.c:337:5: note: skip.
common/dct.c:337:5: note: ==> examining statement: _208 = *_207;

common/dct.c:337:5: note: get vectype for scalar type:  unsigned char
common/dct.c:337:5: note: vectype: vector(16) unsigned char
common/dct.c:337:5: note: nunits = 16
common/dct.c:337:5: note: ==> examining statement: _209 = (int) _208;

common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  unsigned char
common/dct.c:337:5: note: vectype: vector(16) unsigned char
common/dct.c:337:5: note: nunits = 16
common/dct.c:337:5: note: ==> examining statement: _210 = b4_123 - b3_156;

common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: nunits = 4
common/dct.c:337:5: note: ==> examining statement: _211 = _210 >> 6;

common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: nunits = 4
common/dct.c:337:5: note: ==> examining statement: _212 = _209 + _211;

common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: nunits = 4
common/dct.c:337:5: note: ==> examining statement: # DEBUG x => NULL

common/dct.c:337:5: note: skip.
common/dct.c:337:5: note: ==> examining statement: _238 = _212 & -256;

common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: nunits = 4
common/dct.c:337:5: note: ==> examining statement: _239 = -_212;

common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: nunits = 4
common/dct.c:337:5: note: ==> examining statement: _240 = _239 >> 31;

common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: nunits = 4
common/dct.c:337:5: note: ==> examining statement: iftmp.0_241 = (unsigned char) _240;

common/dct.c:337:5: note: skip.
common/dct.c:337:5: note: ==> examining statement: iftmp.0_242 = (unsigned char) _212;

common/dct.c:337:5: note: skip.
common/dct.c:337:5: note: ==> examining statement: iftmp.0_243 = _238 != 0 ? iftmp.0_241 : iftmp.0_242;

common/dct.c:337:5: note: ==> examining pattern statement: patt_550 = (unsigned char) patt_551;

common/dct.c:337:5: note: ==> examining pattern def stmt: patt_551 = _238 != 0 ? _240 : _212;

common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: nunits = 4
common/dct.c:337:5: note: ==> examining statement: iftmp.0_243 = _238 != 0 ? iftmp.0_241 : iftmp.0_242;

common/dct.c:337:5: note: ==> examining pattern statement: patt_550 = (unsigned char) patt_551;

common/dct.c:337:5: note: get vectype for scalar type:  unsigned char
common/dct.c:337:5: note: vectype: vector(16) unsigned char
common/dct.c:337:5: note: nunits = 16
common/dct.c:337:5: note: ==> examining statement: # DEBUG x => NULL

common/dct.c:337:5: note: skip.
common/dct.c:337:5: note: ==> examining statement: *_207 = iftmp.0_243;

common/dct.c:337:5: note: get vectype for scalar type:  uint8_t
common/dct.c:337:5: note: vectype: vector(16) unsigned char
common/dct.c:337:5: note: nunits = 16
common/dct.c:337:5: note: ==> examining statement: _215 = _102 + 192;

common/dct.c:337:5: note: skip.
common/dct.c:337:5: note: ==> examining statement: _216 = dst_161(D) + _215;

common/dct.c:337:5: note: skip.
common/dct.c:337:5: note: ==> examining statement: _217 = *_216;

common/dct.c:337:5: note: get vectype for scalar type:  unsigned char
common/dct.c:337:5: note: vectype: vector(16) unsigned char
common/dct.c:337:5: note: nunits = 16
common/dct.c:337:5: note: ==> examining statement: _218 = (int) _217;

common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  unsigned char
common/dct.c:337:5: note: vectype: vector(16) unsigned char
common/dct.c:337:5: note: nunits = 16
common/dct.c:337:5: note: ==> examining statement: _219 = b2_122 - b5_158;

common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: nunits = 4
common/dct.c:337:5: note: ==> examining statement: _220 = _219 >> 6;

common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: nunits = 4
common/dct.c:337:5: note: ==> examining statement: _221 = _218 + _220;

common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: nunits = 4
common/dct.c:337:5: note: ==> examining statement: # DEBUG x => NULL

common/dct.c:337:5: note: skip.
common/dct.c:337:5: note: ==> examining statement: _177 = _221 & -256;

common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: nunits = 4
common/dct.c:337:5: note: ==> examining statement: _168 = -_221;

common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: nunits = 4
common/dct.c:337:5: note: ==> examining statement: _234 = _168 >> 31;

common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: nunits = 4
common/dct.c:337:5: note: ==> examining statement: iftmp.0_235 = (unsigned char) _234;

common/dct.c:337:5: note: skip.
common/dct.c:337:5: note: ==> examining statement: iftmp.0_236 = (unsigned char) _221;

common/dct.c:337:5: note: skip.
common/dct.c:337:5: note: ==> examining statement: iftmp.0_237 = _177 != 0 ? iftmp.0_235 : iftmp.0_236;

common/dct.c:337:5: note: ==> examining pattern statement: patt_548 = (unsigned char) patt_549;

common/dct.c:337:5: note: ==> examining pattern def stmt: patt_549 = _177 != 0 ? _234 : _221;

common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: nunits = 4
common/dct.c:337:5: note: ==> examining statement: iftmp.0_237 = _177 != 0 ? iftmp.0_235 : iftmp.0_236;

common/dct.c:337:5: note: ==> examining pattern statement: patt_548 = (unsigned char) patt_549;

common/dct.c:337:5: note: get vectype for scalar type:  unsigned char
common/dct.c:337:5: note: vectype: vector(16) unsigned char
common/dct.c:337:5: note: nunits = 16
common/dct.c:337:5: note: ==> examining statement: # DEBUG x => NULL

common/dct.c:337:5: note: skip.
common/dct.c:337:5: note: ==> examining statement: *_216 = iftmp.0_237;

common/dct.c:337:5: note: get vectype for scalar type:  uint8_t
common/dct.c:337:5: note: vectype: vector(16) unsigned char
common/dct.c:337:5: note: nunits = 16
common/dct.c:337:5: note: ==> examining statement: _224 = _102 + 224;

common/dct.c:337:5: note: skip.
common/dct.c:337:5: note: ==> examining statement: _225 = dst_161(D) + _224;

common/dct.c:337:5: note: skip.
common/dct.c:337:5: note: ==> examining statement: _226 = *_225;

common/dct.c:337:5: note: get vectype for scalar type:  unsigned char
common/dct.c:337:5: note: vectype: vector(16) unsigned char
common/dct.c:337:5: note: nunits = 16
common/dct.c:337:5: note: ==> examining statement: _227 = (int) _226;

common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  unsigned char
common/dct.c:337:5: note: vectype: vector(16) unsigned char
common/dct.c:337:5: note: nunits = 16
common/dct.c:337:5: note: ==> examining statement: _228 = b0_121 - b7_160;

common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: nunits = 4
common/dct.c:337:5: note: ==> examining statement: _229 = _228 >> 6;

common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: nunits = 4
common/dct.c:337:5: note: ==> examining statement: _230 = _227 + _229;

common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: nunits = 4
common/dct.c:337:5: note: ==> examining statement: # DEBUG x => NULL

common/dct.c:337:5: note: skip.
common/dct.c:337:5: note: ==> examining statement: _231 = _230 & -256;

common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: nunits = 4
common/dct.c:337:5: note: ==> examining statement: _222 = -_230;

common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: nunits = 4
common/dct.c:337:5: note: ==> examining statement: _213 = _222 >> 31;

common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: nunits = 4
common/dct.c:337:5: note: ==> examining statement: iftmp.0_204 = (unsigned char) _213;

common/dct.c:337:5: note: skip.
common/dct.c:337:5: note: ==> examining statement: iftmp.0_195 = (unsigned char) _230;

common/dct.c:337:5: note: skip.
common/dct.c:337:5: note: ==> examining statement: iftmp.0_186 = _231 != 0 ? iftmp.0_204 : iftmp.0_195;

common/dct.c:337:5: note: ==> examining pattern statement: patt_546 = (unsigned char) patt_547;

common/dct.c:337:5: note: ==> examining pattern def stmt: patt_547 = _231 != 0 ? _213 : _230;

common/dct.c:337:5: note: get vectype for scalar type:  int
common/dct.c:337:5: note: vectype: vector(4) int
common/dct.c:337:5: note: nunits = 4
common/dct.c:337:5: note: ==> examining statement: iftmp.0_186 = _231 != 0 ? iftmp.0_204 : iftmp.0_195;

common/dct.c:337:5: note: ==> examining pattern statement: patt_546 = (unsigned char) patt_547;

common/dct.c:337:5: note: get vectype for scalar type:  unsigned char
common/dct.c:337:5: note: vectype: vector(16) unsigned char
common/dct.c:337:5: note: nunits = 16
common/dct.c:337:5: note: ==> examining statement: # DEBUG x => NULL

common/dct.c:337:5: note: skip.
common/dct.c:337:5: note: ==> examining statement: *_225 = iftmp.0_186;

common/dct.c:337:5: note: get vectype for scalar type:  uint8_t
common/dct.c:337:5: note: vectype: vector(16) unsigned char
common/dct.c:337:5: note: nunits = 16
common/dct.c:337:5: note: ==> examining statement: i_233 = i_305 + 1;

common/dct.c:337:5: note: skip.
common/dct.c:337:5: note: ==> examining statement: # DEBUG i => i_233

common/dct.c:337:5: note: skip.
common/dct.c:337:5: note: ==> examining statement: # DEBUG i => i_233

common/dct.c:337:5: note: skip.
common/dct.c:337:5: note: ==> examining statement: ivtmp_564 = ivtmp_565 - 1;

common/dct.c:337:5: note: skip.
common/dct.c:337:5: note: ==> examining statement: if (ivtmp_564 != 0)

common/dct.c:337:5: note: skip.
common/dct.c:337:5: note: vectorization factor = 16
common/dct.c:337:5: note: === vect_analyze_data_refs_alignment ===
common/dct.c:337:5: note: dependence distance  = 0.
common/dct.c:337:5: note: accesses have the same alignment.
dependence distance modulo vf == 0 between *_162 and *_162
common/dct.c:337:5: note: dependence distance  = 0.
common/dct.c:337:5: note: accesses have the same alignment.
dependence distance modulo vf == 0 between *_171 and *_171
common/dct.c:337:5: note: dependence distance  = 0.
common/dct.c:337:5: note: accesses have the same alignment.
dependence distance modulo vf == 0 between *_180 and *_180
common/dct.c:337:5: note: dependence distance  = 0.
common/dct.c:337:5: note: accesses have the same alignment.
dependence distance modulo vf == 0 between *_189 and *_189
common/dct.c:337:5: note: dependence distance  = 0.
common/dct.c:337:5: note: accesses have the same alignment.
dependence distance modulo vf == 0 between *_198 and *_198
common/dct.c:337:5: note: dependence distance  = 0.
common/dct.c:337:5: note: accesses have the same alignment.
dependence distance modulo vf == 0 between *_207 and *_207
common/dct.c:337:5: note: dependence distance  = 0.
common/dct.c:337:5: note: accesses have the same alignment.
dependence distance modulo vf == 0 between *_216 and *_216
common/dct.c:337:5: note: dependence distance  = 0.
common/dct.c:337:5: note: accesses have the same alignment.
dependence distance modulo vf == 0 between *_225 and *_225
common/dct.c:337:5: note: vect_compute_data_ref_alignment:
common/dct.c:337:5: note: can't force alignment of ref: *_104[0]
common/dct.c:337:5: note: vect_compute_data_ref_alignment:
common/dct.c:337:5: note: can't force alignment of ref: *_104[4]
common/dct.c:337:5: note: vect_compute_data_ref_alignment:
common/dct.c:337:5: note: can't force alignment of ref: *_104[2]
common/dct.c:337:5: note: vect_compute_data_ref_alignment:
common/dct.c:337:5: note: can't force alignment of ref: *_104[6]
common/dct.c:337:5: note: vect_compute_data_ref_alignment:
common/dct.c:337:5: note: can't force alignment of ref: *_104[5]
common/dct.c:337:5: note: vect_compute_data_ref_alignment:
common/dct.c:337:5: note: can't force alignment of ref: *_104[3]
common/dct.c:337:5: note: vect_compute_data_ref_alignment:
common/dct.c:337:5: note: can't force alignment of ref: *_104[7]
common/dct.c:337:5: note: vect_compute_data_ref_alignment:
common/dct.c:337:5: note: can't force alignment of ref: *_104[1]
common/dct.c:337:5: note: vect_compute_data_ref_alignment:
common/dct.c:337:5: note: can't force alignment of ref: *_162
common/dct.c:337:5: note: vect_compute_data_ref_alignment:
common/dct.c:337:5: note: can't force alignment of ref: *_162
common/dct.c:337:5: note: vect_compute_data_ref_alignment:
common/dct.c:337:5: note: can't force alignment of ref: *_171
common/dct.c:337:5: note: vect_compute_data_ref_alignment:
common/dct.c:337:5: note: can't force alignment of ref: *_171
common/dct.c:337:5: note: vect_compute_data_ref_alignment:
common/dct.c:337:5: note: can't force alignment of ref: *_180
common/dct.c:337:5: note: vect_compute_data_ref_alignment:
common/dct.c:337:5: note: can't force alignment of ref: *_180
common/dct.c:337:5: note: vect_compute_data_ref_alignment:
common/dct.c:337:5: note: can't force alignment of ref: *_189
common/dct.c:337:5: note: vect_compute_data_ref_alignment:
common/dct.c:337:5: note: can't force alignment of ref: *_189
common/dct.c:337:5: note: vect_compute_data_ref_alignment:
common/dct.c:337:5: note: can't force alignment of ref: *_198
common/dct.c:337:5: note: vect_compute_data_ref_alignment:
common/dct.c:337:5: note: can't force alignment of ref: *_198
common/dct.c:337:5: note: vect_compute_data_ref_alignment:
common/dct.c:337:5: note: can't force alignment of ref: *_207
common/dct.c:337:5: note: vect_compute_data_ref_alignment:
common/dct.c:337:5: note: can't force alignment of ref: *_207
common/dct.c:337:5: note: vect_compute_data_ref_alignment:
common/dct.c:337:5: note: can't force alignment of ref: *_216
common/dct.c:337:5: note: vect_compute_data_ref_alignment:
common/dct.c:337:5: note: can't force alignment of ref: *_216
common/dct.c:337:5: note: vect_compute_data_ref_alignment:
common/dct.c:337:5: note: can't force alignment of ref: *_225
common/dct.c:337:5: note: vect_compute_data_ref_alignment:
common/dct.c:337:5: note: can't force alignment of ref: *_225
common/dct.c:337:5: note: === vect_prune_runtime_alias_test_list ===
common/dct.c:337:5: note: found equal ranges *_162, *_104[0] and *_162, *_104[0]
common/dct.c:337:5: note: found equal ranges *_162, *_104[0] and *_162, *_104[0]
common/dct.c:337:5: note: found equal ranges *_162, *_104[0] and *_162, *_104[0]
common/dct.c:337:5: note: found equal ranges *_162, *_104[0] and *_162, *_104[0]
common/dct.c:337:5: note: found equal ranges *_162, *_104[0] and *_162, *_104[0]
common/dct.c:337:5: note: found equal ranges *_162, *_104[0] and *_162, *_104[0]
common/dct.c:337:5: note: found equal ranges *_162, *_104[0] and *_162, *_104[0]
common/dct.c:337:5: note: merging ranges for *_162, *_104[0] and *_171, *_104[0]
common/dct.c:337:5: note: merging ranges for *_162, *_104[0] and *_171, *_104[0]
common/dct.c:337:5: note: merging ranges for *_162, *_104[0] and *_171, *_104[0]
common/dct.c:337:5: note: merging ranges for *_162, *_104[0] and *_171, *_104[0]
common/dct.c:337:5: note: merging ranges for *_162, *_104[0] and *_171, *_104[0]
common/dct.c:337:5: note: merging ranges for *_162, *_104[0] and *_171, *_104[0]
common/dct.c:337:5: note: merging ranges for *_162, *_104[0] and *_171, *_104[0]
common/dct.c:337:5: note: merging ranges for *_162, *_104[0] and *_171, *_104[0]
common/dct.c:337:5: note: merging ranges for *_162, *_104[0] and *_225, *_104[0]
common/dct.c:337:5: note: merging ranges for *_162, *_104[0] and *_225, *_104[0]
common/dct.c:337:5: note: merging ranges for *_162, *_104[0] and *_225, *_104[0]
common/dct.c:337:5: note: merging ranges for *_162, *_104[0] and *_225, *_104[0]
common/dct.c:337:5: note: merging ranges for *_162, *_104[0] and *_225, *_104[0]
common/dct.c:337:5: note: merging ranges for *_162, *_104[0] and *_225, *_104[0]
common/dct.c:337:5: note: merging ranges for *_162, *_104[0] and *_225, *_104[0]
common/dct.c:337:5: note: merging ranges for *_162, *_104[0] and *_225, *_104[0]
common/dct.c:337:5: note: merging ranges for *_162, *_104[0] and *_207, *_104[0]
common/dct.c:337:5: note: merging ranges for *_162, *_104[0] and *_207, *_104[0]
common/dct.c:337:5: note: merging ranges for *_162, *_104[0] and *_207, *_104[0]
common/dct.c:337:5: note: merging ranges for *_162, *_104[0] and *_207, *_104[0]
common/dct.c:337:5: note: merging ranges for *_162, *_104[0] and *_207, *_104[0]
common/dct.c:337:5: note: merging ranges for *_162, *_104[0] and *_207, *_104[0]
common/dct.c:337:5: note: merging ranges for *_162, *_104[0] and *_207, *_104[0]
common/dct.c:337:5: note: merging ranges for *_162, *_104[0] and *_207, *_104[0]
common/dct.c:337:5: note: merging ranges for *_162, *_104[0] and *_216, *_104[0]
common/dct.c:337:5: note: merging ranges for *_162, *_104[0] and *_216, *_104[0]
common/dct.c:337:5: note: merging ranges for *_162, *_104[0] and *_216, *_104[0]
common/dct.c:337:5: note: merging ranges for *_162, *_104[0] and *_216, *_104[0]
common/dct.c:337:5: note: merging ranges for *_162, *_104[0] and *_216, *_104[0]
common/dct.c:337:5: note: merging ranges for *_162, *_104[0] and *_216, *_104[0]
common/dct.c:337:5: note: merging ranges for *_162, *_104[0] and *_216, *_104[0]
common/dct.c:337:5: note: merging ranges for *_162, *_104[0] and *_216, *_104[0]
common/dct.c:337:5: note: merging ranges for *_162, *_104[0] and *_180, *_104[0]
common/dct.c:337:5: note: merging ranges for *_162, *_104[0] and *_180, *_104[0]
common/dct.c:337:5: note: merging ranges for *_162, *_104[0] and *_180, *_104[0]
common/dct.c:337:5: note: merging ranges for *_162, *_104[0] and *_180, *_104[0]
common/dct.c:337:5: note: merging ranges for *_162, *_104[0] and *_180, *_104[0]
common/dct.c:337:5: note: merging ranges for *_162, *_104[0] and *_180, *_104[0]
common/dct.c:337:5: note: merging ranges for *_162, *_104[0] and *_180, *_104[0]
common/dct.c:337:5: note: merging ranges for *_162, *_104[0] and *_180, *_104[0]
common/dct.c:337:5: note: merging ranges for *_162, *_104[0] and *_189, *_104[0]
common/dct.c:337:5: note: merging ranges for *_162, *_104[0] and *_189, *_104[0]
common/dct.c:337:5: note: merging ranges for *_162, *_104[0] and *_189, *_104[0]
common/dct.c:337:5: note: merging ranges for *_162, *_104[0] and *_189, *_104[0]
common/dct.c:337:5: note: merging ranges for *_162, *_104[0] and *_189, *_104[0]
common/dct.c:337:5: note: merging ranges for *_162, *_104[0] and *_189, *_104[0]
common/dct.c:337:5: note: merging ranges for *_162, *_104[0] and *_189, *_104[0]
common/dct.c:337:5: note: merging ranges for *_162, *_104[0] and *_189, *_104[0]
common/dct.c:337:5: note: merging ranges for *_162, *_104[0] and *_198, *_104[0]
common/dct.c:337:5: note: merging ranges for *_162, *_104[0] and *_198, *_104[0]
common/dct.c:337:5: note: merging ranges for *_162, *_104[0] and *_198, *_104[0]
common/dct.c:337:5: note: merging ranges for *_162, *_104[0] and *_198, *_104[0]
common/dct.c:337:5: note: merging ranges for *_162, *_104[0] and *_198, *_104[0]
common/dct.c:337:5: note: merging ranges for *_162, *_104[0] and *_198, *_104[0]
common/dct.c:337:5: note: merging ranges for *_162, *_104[0] and *_198, *_104[0]
common/dct.c:337:5: note: merging ranges for *_162, *_104[0] and *_198, *_104[0]
common/dct.c:337:5: note: improved number of alias checks from 64 to 1
common/dct.c:337:5: note: === vect_enhance_data_refs_alignment ===
common/dct.c:337:5: note: vector alignment may not be reachable
common/dct.c:337:5: note: vect_can_advance_ivs_p:
common/dct.c:337:5: note: Analyze phi: i_305 = PHI <0(5), i_233(7)>

common/dct.c:337:5: note: Analyze phi: .MEM_303 = PHI <.MEM_100(5), .MEM_232(7)>

common/dct.c:337:5: note: virtual phi. skip.
common/dct.c:337:5: note: Analyze phi: ivtmp_565 = PHI <8(5), ivtmp_564(7)>

common/dct.c:337:5: note: Vectorizing an unaligned access.
common/dct.c:337:5: note: Vectorizing an unaligned access.
common/dct.c:337:5: note: Vectorizing an unaligned access.
common/dct.c:337:5: note: Vectorizing an unaligned access.
common/dct.c:337:5: note: Vectorizing an unaligned access.
common/dct.c:337:5: note: Vectorizing an unaligned access.
common/dct.c:337:5: note: Vectorizing an unaligned access.
common/dct.c:337:5: note: Vectorizing an unaligned access.
common/dct.c:337:5: note: Vectorizing an unaligned access.
common/dct.c:337:5: note: Vectorizing an unaligned access.
common/dct.c:337:5: note: Vectorizing an unaligned access.
common/dct.c:337:5: note: Vectorizing an unaligned access.
common/dct.c:337:5: note: Vectorizing an unaligned access.
common/dct.c:337:5: note: Vectorizing an unaligned access.
common/dct.c:337:5: note: Vectorizing an unaligned access.
common/dct.c:337:5: note: Vectorizing an unaligned access.
common/dct.c:337:5: note: Vectorizing an unaligned access.
common/dct.c:337:5: note: === vect_analyze_slp ===
common/dct.c:337:5: note: === vect_make_slp_decision ===
common/dct.c:337:5: note: === vect_detect_hybrid_slp ===
common/dct.c:337:5: note: === vect_analyze_loop_operations ===
common/dct.c:337:5: note: examining phi: i_305 = PHI <0(5), i_233(7)>

common/dct.c:337:5: note: examining phi: .MEM_303 = PHI <.MEM_100(5), .MEM_232(7)>

common/dct.c:337:5: note: examining phi: ivtmp_565 = PHI <8(5), ivtmp_564(7)>

common/dct.c:337:5: note: ==> examining statement: # DEBUG i => NULL
common/dct.c:337:5: note: irrelevant.
common/dct.c:337:5: note: ==> examining statement: _102 = (long unsigned int) i_305;
common/dct.c:337:5: note: irrelevant.
common/dct.c:337:5: note: ==> examining statement: _103 = _102 * 16;
common/dct.c:337:5: note: irrelevant.
common/dct.c:337:5: note: ==> examining statement: _104 = dct_6(D) + _103;
common/dct.c:337:5: note: irrelevant.
common/dct.c:337:5: note: ==> examining statement: _105 = *_104[0];
common/dct.c:337:5: note: num. args = 4 (not unary/binary/ternary op).
common/dct.c:337:5: note: vect_is_simple_use: operand *_104[0]
common/dct.c:337:5: note: not ssa-name.
common/dct.c:337:5: note: use not simple.
common/dct.c:337:5: note: no array mode for V8HI[8]
common/dct.c:337:5: note: vect_model_load_cost: strided group_size = 8 .
common/dct.c:337:5: note: vect_model_load_cost: unaligned supported by hardware.
common/dct.c:337:5: note: vect_model_load_cost: inside_cost = 52, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: _106 = (int) _105;
common/dct.c:337:5: note: vect_is_simple_use: operand _105
common/dct.c:337:5: note: def_stmt: _105 = *_104[0];
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: === vectorizable_conversion ===
common/dct.c:337:5: note: vect_model_promotion_demotion_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: _107 = *_104[4];
common/dct.c:337:5: note: num. args = 4 (not unary/binary/ternary op).
common/dct.c:337:5: note: vect_is_simple_use: operand *_104[4]
common/dct.c:337:5: note: not ssa-name.
common/dct.c:337:5: note: use not simple.
common/dct.c:337:5: note: no array mode for V8HI[8]
common/dct.c:337:5: note: vect_model_load_cost: unaligned supported by hardware.
common/dct.c:337:5: note: vect_model_load_cost: inside_cost = 4, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: _108 = (int) _107;
common/dct.c:337:5: note: vect_is_simple_use: operand _107
common/dct.c:337:5: note: def_stmt: _107 = *_104[4];
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: === vectorizable_conversion ===
common/dct.c:337:5: note: vect_model_promotion_demotion_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: a0_109 = _106 + _108;
common/dct.c:337:5: note: vect_is_simple_use: operand _106
common/dct.c:337:5: note: def_stmt: _106 = (int) _105;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand _108
common/dct.c:337:5: note: def_stmt: _108 = (int) _107;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: === vectorizable_operation ===
common/dct.c:337:5: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: # DEBUG a0 => NULL
common/dct.c:337:5: note: irrelevant.
common/dct.c:337:5: note: ==> examining statement: a2_110 = _106 - _108;
common/dct.c:337:5: note: vect_is_simple_use: operand _106
common/dct.c:337:5: note: def_stmt: _106 = (int) _105;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand _108
common/dct.c:337:5: note: def_stmt: _108 = (int) _107;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: === vectorizable_operation ===
common/dct.c:337:5: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: # DEBUG a2 => NULL
common/dct.c:337:5: note: irrelevant.
common/dct.c:337:5: note: ==> examining statement: _111 = *_104[2];
common/dct.c:337:5: note: num. args = 4 (not unary/binary/ternary op).
common/dct.c:337:5: note: vect_is_simple_use: operand *_104[2]
common/dct.c:337:5: note: not ssa-name.
common/dct.c:337:5: note: use not simple.
common/dct.c:337:5: note: no array mode for V8HI[8]
common/dct.c:337:5: note: vect_model_load_cost: unaligned supported by hardware.
common/dct.c:337:5: note: vect_model_load_cost: inside_cost = 4, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: _112 = _111 >> 1;
common/dct.c:337:5: note: vect_is_simple_use: operand _111
common/dct.c:337:5: note: def_stmt: _111 = *_104[2];
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand 1
common/dct.c:337:5: note: vector/scalar shift/rotate found.
common/dct.c:337:5: note: === vectorizable_shift ===
common/dct.c:337:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 1 .
common/dct.c:337:5: note: ==> examining statement: _113 = (int) _112;
common/dct.c:337:5: note: vect_is_simple_use: operand _112
common/dct.c:337:5: note: def_stmt: _112 = _111 >> 1;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: === vectorizable_conversion ===
common/dct.c:337:5: note: vect_model_promotion_demotion_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: _114 = *_104[6];
common/dct.c:337:5: note: num. args = 4 (not unary/binary/ternary op).
common/dct.c:337:5: note: vect_is_simple_use: operand *_104[6]
common/dct.c:337:5: note: not ssa-name.
common/dct.c:337:5: note: use not simple.
common/dct.c:337:5: note: no array mode for V8HI[8]
common/dct.c:337:5: note: vect_model_load_cost: unaligned supported by hardware.
common/dct.c:337:5: note: vect_model_load_cost: inside_cost = 4, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: _115 = (int) _114;
common/dct.c:337:5: note: vect_is_simple_use: operand _114
common/dct.c:337:5: note: def_stmt: _114 = *_104[6];
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: === vectorizable_conversion ===
common/dct.c:337:5: note: vect_model_promotion_demotion_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: a4_116 = _113 - _115;
common/dct.c:337:5: note: vect_is_simple_use: operand _113
common/dct.c:337:5: note: def_stmt: _113 = (int) _112;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand _115
common/dct.c:337:5: note: def_stmt: _115 = (int) _114;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: === vectorizable_operation ===
common/dct.c:337:5: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: # DEBUG a4 => NULL
common/dct.c:337:5: note: irrelevant.
common/dct.c:337:5: note: ==> examining statement: _117 = _114 >> 1;
common/dct.c:337:5: note: vect_is_simple_use: operand _114
common/dct.c:337:5: note: def_stmt: _114 = *_104[6];
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand 1
common/dct.c:337:5: note: vector/scalar shift/rotate found.
common/dct.c:337:5: note: === vectorizable_shift ===
common/dct.c:337:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 1 .
common/dct.c:337:5: note: ==> examining statement: _118 = (int) _117;
common/dct.c:337:5: note: vect_is_simple_use: operand _117
common/dct.c:337:5: note: def_stmt: _117 = _114 >> 1;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: === vectorizable_conversion ===
common/dct.c:337:5: note: vect_model_promotion_demotion_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: _119 = (int) _111;
common/dct.c:337:5: note: vect_is_simple_use: operand _111
common/dct.c:337:5: note: def_stmt: _111 = *_104[2];
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: === vectorizable_conversion ===
common/dct.c:337:5: note: vect_model_promotion_demotion_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: a6_120 = _118 + _119;
common/dct.c:337:5: note: vect_is_simple_use: operand _118
common/dct.c:337:5: note: def_stmt: _118 = (int) _117;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand _119
common/dct.c:337:5: note: def_stmt: _119 = (int) _111;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: === vectorizable_operation ===
common/dct.c:337:5: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: # DEBUG a6 => NULL
common/dct.c:337:5: note: irrelevant.
common/dct.c:337:5: note: ==> examining statement: b0_121 = a0_109 + a6_120;
common/dct.c:337:5: note: vect_is_simple_use: operand a0_109
common/dct.c:337:5: note: def_stmt: a0_109 = _106 + _108;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand a6_120
common/dct.c:337:5: note: def_stmt: a6_120 = _118 + _119;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: === vectorizable_operation ===
common/dct.c:337:5: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: # DEBUG b0 => NULL
common/dct.c:337:5: note: irrelevant.
common/dct.c:337:5: note: ==> examining statement: b2_122 = a2_110 + a4_116;
common/dct.c:337:5: note: vect_is_simple_use: operand a2_110
common/dct.c:337:5: note: def_stmt: a2_110 = _106 - _108;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand a4_116
common/dct.c:337:5: note: def_stmt: a4_116 = _113 - _115;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: === vectorizable_operation ===
common/dct.c:337:5: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: # DEBUG b2 => NULL
common/dct.c:337:5: note: irrelevant.
common/dct.c:337:5: note: ==> examining statement: b4_123 = a2_110 - a4_116;
common/dct.c:337:5: note: vect_is_simple_use: operand a2_110
common/dct.c:337:5: note: def_stmt: a2_110 = _106 - _108;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand a4_116
common/dct.c:337:5: note: def_stmt: a4_116 = _113 - _115;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: === vectorizable_operation ===
common/dct.c:337:5: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: # DEBUG b4 => NULL
common/dct.c:337:5: note: irrelevant.
common/dct.c:337:5: note: ==> examining statement: b6_124 = a0_109 - a6_120;
common/dct.c:337:5: note: vect_is_simple_use: operand a0_109
common/dct.c:337:5: note: def_stmt: a0_109 = _106 + _108;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand a6_120
common/dct.c:337:5: note: def_stmt: a6_120 = _118 + _119;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: === vectorizable_operation ===
common/dct.c:337:5: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: # DEBUG b6 => NULL
common/dct.c:337:5: note: irrelevant.
common/dct.c:337:5: note: ==> examining statement: _125 = *_104[5];
common/dct.c:337:5: note: num. args = 4 (not unary/binary/ternary op).
common/dct.c:337:5: note: vect_is_simple_use: operand *_104[5]
common/dct.c:337:5: note: not ssa-name.
common/dct.c:337:5: note: use not simple.
common/dct.c:337:5: note: no array mode for V8HI[8]
common/dct.c:337:5: note: vect_model_load_cost: unaligned supported by hardware.
common/dct.c:337:5: note: vect_model_load_cost: inside_cost = 4, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: _126 = (int) _125;
common/dct.c:337:5: note: vect_is_simple_use: operand _125
common/dct.c:337:5: note: def_stmt: _125 = *_104[5];
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: === vectorizable_conversion ===
common/dct.c:337:5: note: vect_model_promotion_demotion_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: _127 = *_104[3];
common/dct.c:337:5: note: num. args = 4 (not unary/binary/ternary op).
common/dct.c:337:5: note: vect_is_simple_use: operand *_104[3]
common/dct.c:337:5: note: not ssa-name.
common/dct.c:337:5: note: use not simple.
common/dct.c:337:5: note: no array mode for V8HI[8]
common/dct.c:337:5: note: vect_model_load_cost: unaligned supported by hardware.
common/dct.c:337:5: note: vect_model_load_cost: inside_cost = 4, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: _128 = (int) _127;
common/dct.c:337:5: note: vect_is_simple_use: operand _127
common/dct.c:337:5: note: def_stmt: _127 = *_104[3];
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: === vectorizable_conversion ===
common/dct.c:337:5: note: vect_model_promotion_demotion_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: _129 = _126 - _128;
common/dct.c:337:5: note: vect_is_simple_use: operand _126
common/dct.c:337:5: note: def_stmt: _126 = (int) _125;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand _128
common/dct.c:337:5: note: def_stmt: _128 = (int) _127;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: === vectorizable_operation ===
common/dct.c:337:5: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: _130 = *_104[7];
common/dct.c:337:5: note: num. args = 4 (not unary/binary/ternary op).
common/dct.c:337:5: note: vect_is_simple_use: operand *_104[7]
common/dct.c:337:5: note: not ssa-name.
common/dct.c:337:5: note: use not simple.
common/dct.c:337:5: note: no array mode for V8HI[8]
common/dct.c:337:5: note: vect_model_load_cost: unaligned supported by hardware.
common/dct.c:337:5: note: vect_model_load_cost: inside_cost = 4, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: _131 = (int) _130;
common/dct.c:337:5: note: vect_is_simple_use: operand _130
common/dct.c:337:5: note: def_stmt: _130 = *_104[7];
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: === vectorizable_conversion ===
common/dct.c:337:5: note: vect_model_promotion_demotion_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: _132 = _129 - _131;
common/dct.c:337:5: note: vect_is_simple_use: operand _129
common/dct.c:337:5: note: def_stmt: _129 = _126 - _128;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand _131
common/dct.c:337:5: note: def_stmt: _131 = (int) _130;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: === vectorizable_operation ===
common/dct.c:337:5: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: _133 = _130 >> 1;
common/dct.c:337:5: note: vect_is_simple_use: operand _130
common/dct.c:337:5: note: def_stmt: _130 = *_104[7];
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand 1
common/dct.c:337:5: note: vector/scalar shift/rotate found.
common/dct.c:337:5: note: === vectorizable_shift ===
common/dct.c:337:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 1 .
common/dct.c:337:5: note: ==> examining statement: _134 = (int) _133;
common/dct.c:337:5: note: vect_is_simple_use: operand _133
common/dct.c:337:5: note: def_stmt: _133 = _130 >> 1;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: === vectorizable_conversion ===
common/dct.c:337:5: note: vect_model_promotion_demotion_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: a1_135 = _132 - _134;
common/dct.c:337:5: note: vect_is_simple_use: operand _132
common/dct.c:337:5: note: def_stmt: _132 = _129 - _131;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand _134
common/dct.c:337:5: note: def_stmt: _134 = (int) _133;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: === vectorizable_operation ===
common/dct.c:337:5: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: # DEBUG a1 => NULL
common/dct.c:337:5: note: irrelevant.
common/dct.c:337:5: note: ==> examining statement: _136 = *_104[1];
common/dct.c:337:5: note: num. args = 4 (not unary/binary/ternary op).
common/dct.c:337:5: note: vect_is_simple_use: operand *_104[1]
common/dct.c:337:5: note: not ssa-name.
common/dct.c:337:5: note: use not simple.
common/dct.c:337:5: note: no array mode for V8HI[8]
common/dct.c:337:5: note: vect_model_load_cost: unaligned supported by hardware.
common/dct.c:337:5: note: vect_model_load_cost: inside_cost = 4, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: _137 = (int) _136;
common/dct.c:337:5: note: vect_is_simple_use: operand _136
common/dct.c:337:5: note: def_stmt: _136 = *_104[1];
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: === vectorizable_conversion ===
common/dct.c:337:5: note: vect_model_promotion_demotion_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: _138 = _131 + _137;
common/dct.c:337:5: note: vect_is_simple_use: operand _131
common/dct.c:337:5: note: def_stmt: _131 = (int) _130;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand _137
common/dct.c:337:5: note: def_stmt: _137 = (int) _136;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: === vectorizable_operation ===
common/dct.c:337:5: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: _139 = _138 - _128;
common/dct.c:337:5: note: vect_is_simple_use: operand _138
common/dct.c:337:5: note: def_stmt: _138 = _131 + _137;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand _128
common/dct.c:337:5: note: def_stmt: _128 = (int) _127;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: === vectorizable_operation ===
common/dct.c:337:5: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: _140 = _127 >> 1;
common/dct.c:337:5: note: vect_is_simple_use: operand _127
common/dct.c:337:5: note: def_stmt: _127 = *_104[3];
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand 1
common/dct.c:337:5: note: vector/scalar shift/rotate found.
common/dct.c:337:5: note: === vectorizable_shift ===
common/dct.c:337:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 1 .
common/dct.c:337:5: note: ==> examining statement: _141 = (int) _140;
common/dct.c:337:5: note: vect_is_simple_use: operand _140
common/dct.c:337:5: note: def_stmt: _140 = _127 >> 1;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: === vectorizable_conversion ===
common/dct.c:337:5: note: vect_model_promotion_demotion_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: a3_142 = _139 - _141;
common/dct.c:337:5: note: vect_is_simple_use: operand _139
common/dct.c:337:5: note: def_stmt: _139 = _138 - _128;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand _141
common/dct.c:337:5: note: def_stmt: _141 = (int) _140;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: === vectorizable_operation ===
common/dct.c:337:5: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: # DEBUG a3 => NULL
common/dct.c:337:5: note: irrelevant.
common/dct.c:337:5: note: ==> examining statement: _143 = _131 - _137;
common/dct.c:337:5: note: vect_is_simple_use: operand _131
common/dct.c:337:5: note: def_stmt: _131 = (int) _130;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand _137
common/dct.c:337:5: note: def_stmt: _137 = (int) _136;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: === vectorizable_operation ===
common/dct.c:337:5: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: _144 = _126 + _143;
common/dct.c:337:5: note: vect_is_simple_use: operand _126
common/dct.c:337:5: note: def_stmt: _126 = (int) _125;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand _143
common/dct.c:337:5: note: def_stmt: _143 = _131 - _137;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: === vectorizable_operation ===
common/dct.c:337:5: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: _145 = _125 >> 1;
common/dct.c:337:5: note: vect_is_simple_use: operand _125
common/dct.c:337:5: note: def_stmt: _125 = *_104[5];
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand 1
common/dct.c:337:5: note: vector/scalar shift/rotate found.
common/dct.c:337:5: note: === vectorizable_shift ===
common/dct.c:337:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 1 .
common/dct.c:337:5: note: ==> examining statement: _146 = (int) _145;
common/dct.c:337:5: note: vect_is_simple_use: operand _145
common/dct.c:337:5: note: def_stmt: _145 = _125 >> 1;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: === vectorizable_conversion ===
common/dct.c:337:5: note: vect_model_promotion_demotion_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: a5_147 = _144 + _146;
common/dct.c:337:5: note: vect_is_simple_use: operand _144
common/dct.c:337:5: note: def_stmt: _144 = _126 + _143;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand _146
common/dct.c:337:5: note: def_stmt: _146 = (int) _145;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: === vectorizable_operation ===
common/dct.c:337:5: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: # DEBUG a5 => NULL
common/dct.c:337:5: note: irrelevant.
common/dct.c:337:5: note: ==> examining statement: _148 = _126 + _128;
common/dct.c:337:5: note: vect_is_simple_use: operand _126
common/dct.c:337:5: note: def_stmt: _126 = (int) _125;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand _128
common/dct.c:337:5: note: def_stmt: _128 = (int) _127;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: === vectorizable_operation ===
common/dct.c:337:5: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: _149 = _137 + _148;
common/dct.c:337:5: note: vect_is_simple_use: operand _137
common/dct.c:337:5: note: def_stmt: _137 = (int) _136;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand _148
common/dct.c:337:5: note: def_stmt: _148 = _126 + _128;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: === vectorizable_operation ===
common/dct.c:337:5: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: _150 = _136 >> 1;
common/dct.c:337:5: note: vect_is_simple_use: operand _136
common/dct.c:337:5: note: def_stmt: _136 = *_104[1];
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand 1
common/dct.c:337:5: note: vector/scalar shift/rotate found.
common/dct.c:337:5: note: === vectorizable_shift ===
common/dct.c:337:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 1 .
common/dct.c:337:5: note: ==> examining statement: _151 = (int) _150;
common/dct.c:337:5: note: vect_is_simple_use: operand _150
common/dct.c:337:5: note: def_stmt: _150 = _136 >> 1;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: === vectorizable_conversion ===
common/dct.c:337:5: note: vect_model_promotion_demotion_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: a7_152 = _149 + _151;
common/dct.c:337:5: note: vect_is_simple_use: operand _149
common/dct.c:337:5: note: def_stmt: _149 = _137 + _148;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand _151
common/dct.c:337:5: note: def_stmt: _151 = (int) _150;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: === vectorizable_operation ===
common/dct.c:337:5: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: # DEBUG a7 => NULL
common/dct.c:337:5: note: irrelevant.
common/dct.c:337:5: note: ==> examining statement: _153 = a7_152 >> 2;
common/dct.c:337:5: note: vect_is_simple_use: operand a7_152
common/dct.c:337:5: note: def_stmt: a7_152 = _149 + _151;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand 2
common/dct.c:337:5: note: vector/scalar shift/rotate found.
common/dct.c:337:5: note: === vectorizable_shift ===
common/dct.c:337:5: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 1 .
common/dct.c:337:5: note: ==> examining statement: b1_154 = a1_135 + _153;
common/dct.c:337:5: note: vect_is_simple_use: operand a1_135
common/dct.c:337:5: note: def_stmt: a1_135 = _132 - _134;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand _153
common/dct.c:337:5: note: def_stmt: _153 = a7_152 >> 2;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: === vectorizable_operation ===
common/dct.c:337:5: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: # DEBUG b1 => NULL
common/dct.c:337:5: note: irrelevant.
common/dct.c:337:5: note: ==> examining statement: _155 = a5_147 >> 2;
common/dct.c:337:5: note: vect_is_simple_use: operand a5_147
common/dct.c:337:5: note: def_stmt: a5_147 = _144 + _146;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand 2
common/dct.c:337:5: note: vector/scalar shift/rotate found.
common/dct.c:337:5: note: === vectorizable_shift ===
common/dct.c:337:5: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 1 .
common/dct.c:337:5: note: ==> examining statement: b3_156 = a3_142 + _155;
common/dct.c:337:5: note: vect_is_simple_use: operand a3_142
common/dct.c:337:5: note: def_stmt: a3_142 = _139 - _141;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand _155
common/dct.c:337:5: note: def_stmt: _155 = a5_147 >> 2;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: === vectorizable_operation ===
common/dct.c:337:5: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: # DEBUG b3 => NULL
common/dct.c:337:5: note: irrelevant.
common/dct.c:337:5: note: ==> examining statement: _157 = a3_142 >> 2;
common/dct.c:337:5: note: vect_is_simple_use: operand a3_142
common/dct.c:337:5: note: def_stmt: a3_142 = _139 - _141;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand 2
common/dct.c:337:5: note: vector/scalar shift/rotate found.
common/dct.c:337:5: note: === vectorizable_shift ===
common/dct.c:337:5: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 1 .
common/dct.c:337:5: note: ==> examining statement: b5_158 = _157 - a5_147;
common/dct.c:337:5: note: vect_is_simple_use: operand _157
common/dct.c:337:5: note: def_stmt: _157 = a3_142 >> 2;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand a5_147
common/dct.c:337:5: note: def_stmt: a5_147 = _144 + _146;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: === vectorizable_operation ===
common/dct.c:337:5: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: # DEBUG b5 => NULL
common/dct.c:337:5: note: irrelevant.
common/dct.c:337:5: note: ==> examining statement: _159 = a1_135 >> 2;
common/dct.c:337:5: note: vect_is_simple_use: operand a1_135
common/dct.c:337:5: note: def_stmt: a1_135 = _132 - _134;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand 2
common/dct.c:337:5: note: vector/scalar shift/rotate found.
common/dct.c:337:5: note: === vectorizable_shift ===
common/dct.c:337:5: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 1 .
common/dct.c:337:5: note: ==> examining statement: b7_160 = a7_152 - _159;
common/dct.c:337:5: note: vect_is_simple_use: operand a7_152
common/dct.c:337:5: note: def_stmt: a7_152 = _149 + _151;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand _159
common/dct.c:337:5: note: def_stmt: _159 = a1_135 >> 2;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: === vectorizable_operation ===
common/dct.c:337:5: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: # DEBUG b7 => NULL
common/dct.c:337:5: note: irrelevant.
common/dct.c:337:5: note: ==> examining statement: _162 = dst_161(D) + _102;
common/dct.c:337:5: note: irrelevant.
common/dct.c:337:5: note: ==> examining statement: _163 = *_162;
common/dct.c:337:5: note: vect_is_simple_use: operand *_162
common/dct.c:337:5: note: not ssa-name.
common/dct.c:337:5: note: use not simple.
common/dct.c:337:5: note: vect_is_simple_use: operand *_162
common/dct.c:337:5: note: not ssa-name.
common/dct.c:337:5: note: use not simple.
common/dct.c:337:5: note: vect_model_load_cost: unaligned supported by hardware.
common/dct.c:337:5: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: _164 = (int) _163;
common/dct.c:337:5: note: vect_is_simple_use: operand _163
common/dct.c:337:5: note: def_stmt: _163 = *_162;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: === vectorizable_conversion ===
common/dct.c:337:5: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: _165 = b0_121 + b7_160;
common/dct.c:337:5: note: vect_is_simple_use: operand b0_121
common/dct.c:337:5: note: def_stmt: b0_121 = a0_109 + a6_120;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand b7_160
common/dct.c:337:5: note: def_stmt: b7_160 = a7_152 - _159;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: === vectorizable_operation ===
common/dct.c:337:5: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: _166 = _165 >> 6;
common/dct.c:337:5: note: vect_is_simple_use: operand _165
common/dct.c:337:5: note: def_stmt: _165 = b0_121 + b7_160;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand 6
common/dct.c:337:5: note: vector/scalar shift/rotate found.
common/dct.c:337:5: note: === vectorizable_shift ===
common/dct.c:337:5: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 1 .
common/dct.c:337:5: note: ==> examining statement: _167 = _164 + _166;
common/dct.c:337:5: note: vect_is_simple_use: operand _164
common/dct.c:337:5: note: def_stmt: _164 = (int) _163;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand _166
common/dct.c:337:5: note: def_stmt: _166 = _165 >> 6;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: === vectorizable_operation ===
common/dct.c:337:5: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: # DEBUG x => NULL
common/dct.c:337:5: note: irrelevant.
common/dct.c:337:5: note: ==> examining statement: _268 = _167 & -256;
common/dct.c:337:5: note: vect_is_simple_use: operand _167
common/dct.c:337:5: note: def_stmt: _167 = _164 + _166;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand -256
common/dct.c:337:5: note: === vectorizable_operation ===
common/dct.c:337:5: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 1 .
common/dct.c:337:5: note: ==> examining statement: _269 = -_167;
common/dct.c:337:5: note: vect_is_simple_use: operand _167
common/dct.c:337:5: note: def_stmt: _167 = _164 + _166;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: === vectorizable_operation ===
common/dct.c:337:5: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: _270 = _269 >> 31;
common/dct.c:337:5: note: vect_is_simple_use: operand _269
common/dct.c:337:5: note: def_stmt: _269 = -_167;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand 31
common/dct.c:337:5: note: vector/scalar shift/rotate found.
common/dct.c:337:5: note: === vectorizable_shift ===
common/dct.c:337:5: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 1 .
common/dct.c:337:5: note: ==> examining statement: iftmp.0_271 = (unsigned char) _270;
common/dct.c:337:5: note: irrelevant.
common/dct.c:337:5: note: ==> examining statement: iftmp.0_272 = (unsigned char) _167;
common/dct.c:337:5: note: irrelevant.
common/dct.c:337:5: note: ==> examining statement: iftmp.0_273 = _268 != 0 ? iftmp.0_271 : iftmp.0_272;
common/dct.c:337:5: note: ==> examining pattern statement: patt_560 = (unsigned char) patt_561;
common/dct.c:337:5: note: ==> examining pattern def statement: patt_561 = _268 != 0 ? _270 : _167;
common/dct.c:337:5: note: ==> examining statement: patt_561 = _268 != 0 ? _270 : _167;
common/dct.c:337:5: note: vect_is_simple_use: operand _268 != 0
common/dct.c:337:5: note: not ssa-name.
common/dct.c:337:5: note: use not simple.
common/dct.c:337:5: note: vect_is_simple_use: operand _268
common/dct.c:337:5: note: def_stmt: _268 = _167 & -256;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand _270
common/dct.c:337:5: note: def_stmt: _270 = _269 >> 31;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand _167
common/dct.c:337:5: note: def_stmt: _167 = _164 + _166;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand patt_561
common/dct.c:337:5: note: def_stmt: patt_561 = _268 != 0 ? _270 : _167;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: === vectorizable_conversion ===
common/dct.c:337:5: note: vect_model_promotion_demotion_cost: inside_cost = 3, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: # DEBUG x => NULL
common/dct.c:337:5: note: irrelevant.
common/dct.c:337:5: note: ==> examining statement: *_162 = iftmp.0_273;
common/dct.c:337:5: note: vect_is_simple_use: operand iftmp.0_273
common/dct.c:337:5: note: def_stmt: iftmp.0_273 = _268 != 0 ? iftmp.0_271 : iftmp.0_272;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_model_store_cost: unaligned supported by hardware.
common/dct.c:337:5: note: vect_model_store_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: _170 = _102 + 32;
common/dct.c:337:5: note: irrelevant.
common/dct.c:337:5: note: ==> examining statement: _171 = dst_161(D) + _170;
common/dct.c:337:5: note: irrelevant.
common/dct.c:337:5: note: ==> examining statement: _172 = *_171;
common/dct.c:337:5: note: vect_is_simple_use: operand *_171
common/dct.c:337:5: note: not ssa-name.
common/dct.c:337:5: note: use not simple.
common/dct.c:337:5: note: vect_is_simple_use: operand *_171
common/dct.c:337:5: note: not ssa-name.
common/dct.c:337:5: note: use not simple.
common/dct.c:337:5: note: vect_model_load_cost: unaligned supported by hardware.
common/dct.c:337:5: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: _173 = (int) _172;
common/dct.c:337:5: note: vect_is_simple_use: operand _172
common/dct.c:337:5: note: def_stmt: _172 = *_171;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: === vectorizable_conversion ===
common/dct.c:337:5: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: _174 = b2_122 + b5_158;
common/dct.c:337:5: note: vect_is_simple_use: operand b2_122
common/dct.c:337:5: note: def_stmt: b2_122 = a2_110 + a4_116;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand b5_158
common/dct.c:337:5: note: def_stmt: b5_158 = _157 - a5_147;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: === vectorizable_operation ===
common/dct.c:337:5: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: _175 = _174 >> 6;
common/dct.c:337:5: note: vect_is_simple_use: operand _174
common/dct.c:337:5: note: def_stmt: _174 = b2_122 + b5_158;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand 6
common/dct.c:337:5: note: vector/scalar shift/rotate found.
common/dct.c:337:5: note: === vectorizable_shift ===
common/dct.c:337:5: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 1 .
common/dct.c:337:5: note: ==> examining statement: _176 = _173 + _175;
common/dct.c:337:5: note: vect_is_simple_use: operand _173
common/dct.c:337:5: note: def_stmt: _173 = (int) _172;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand _175
common/dct.c:337:5: note: def_stmt: _175 = _174 >> 6;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: === vectorizable_operation ===
common/dct.c:337:5: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: # DEBUG x => NULL
common/dct.c:337:5: note: irrelevant.
common/dct.c:337:5: note: ==> examining statement: _262 = _176 & -256;
common/dct.c:337:5: note: vect_is_simple_use: operand _176
common/dct.c:337:5: note: def_stmt: _176 = _173 + _175;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand -256
common/dct.c:337:5: note: === vectorizable_operation ===
common/dct.c:337:5: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 1 .
common/dct.c:337:5: note: ==> examining statement: _263 = -_176;
common/dct.c:337:5: note: vect_is_simple_use: operand _176
common/dct.c:337:5: note: def_stmt: _176 = _173 + _175;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: === vectorizable_operation ===
common/dct.c:337:5: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: _264 = _263 >> 31;
common/dct.c:337:5: note: vect_is_simple_use: operand _263
common/dct.c:337:5: note: def_stmt: _263 = -_176;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand 31
common/dct.c:337:5: note: vector/scalar shift/rotate found.
common/dct.c:337:5: note: === vectorizable_shift ===
common/dct.c:337:5: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 1 .
common/dct.c:337:5: note: ==> examining statement: iftmp.0_265 = (unsigned char) _264;
common/dct.c:337:5: note: irrelevant.
common/dct.c:337:5: note: ==> examining statement: iftmp.0_266 = (unsigned char) _176;
common/dct.c:337:5: note: irrelevant.
common/dct.c:337:5: note: ==> examining statement: iftmp.0_267 = _262 != 0 ? iftmp.0_265 : iftmp.0_266;
common/dct.c:337:5: note: ==> examining pattern statement: patt_558 = (unsigned char) patt_559;
common/dct.c:337:5: note: ==> examining pattern def statement: patt_559 = _262 != 0 ? _264 : _176;
common/dct.c:337:5: note: ==> examining statement: patt_559 = _262 != 0 ? _264 : _176;
common/dct.c:337:5: note: vect_is_simple_use: operand _262 != 0
common/dct.c:337:5: note: not ssa-name.
common/dct.c:337:5: note: use not simple.
common/dct.c:337:5: note: vect_is_simple_use: operand _262
common/dct.c:337:5: note: def_stmt: _262 = _176 & -256;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand _264
common/dct.c:337:5: note: def_stmt: _264 = _263 >> 31;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand _176
common/dct.c:337:5: note: def_stmt: _176 = _173 + _175;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand patt_559
common/dct.c:337:5: note: def_stmt: patt_559 = _262 != 0 ? _264 : _176;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: === vectorizable_conversion ===
common/dct.c:337:5: note: vect_model_promotion_demotion_cost: inside_cost = 3, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: # DEBUG x => NULL
common/dct.c:337:5: note: irrelevant.
common/dct.c:337:5: note: ==> examining statement: *_171 = iftmp.0_267;
common/dct.c:337:5: note: vect_is_simple_use: operand iftmp.0_267
common/dct.c:337:5: note: def_stmt: iftmp.0_267 = _262 != 0 ? iftmp.0_265 : iftmp.0_266;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_model_store_cost: unaligned supported by hardware.
common/dct.c:337:5: note: vect_model_store_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: _179 = _102 + 64;
common/dct.c:337:5: note: irrelevant.
common/dct.c:337:5: note: ==> examining statement: _180 = dst_161(D) + _179;
common/dct.c:337:5: note: irrelevant.
common/dct.c:337:5: note: ==> examining statement: _181 = *_180;
common/dct.c:337:5: note: vect_is_simple_use: operand *_180
common/dct.c:337:5: note: not ssa-name.
common/dct.c:337:5: note: use not simple.
common/dct.c:337:5: note: vect_is_simple_use: operand *_180
common/dct.c:337:5: note: not ssa-name.
common/dct.c:337:5: note: use not simple.
common/dct.c:337:5: note: vect_model_load_cost: unaligned supported by hardware.
common/dct.c:337:5: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: _182 = (int) _181;
common/dct.c:337:5: note: vect_is_simple_use: operand _181
common/dct.c:337:5: note: def_stmt: _181 = *_180;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: === vectorizable_conversion ===
common/dct.c:337:5: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: _183 = b4_123 + b3_156;
common/dct.c:337:5: note: vect_is_simple_use: operand b4_123
common/dct.c:337:5: note: def_stmt: b4_123 = a2_110 - a4_116;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand b3_156
common/dct.c:337:5: note: def_stmt: b3_156 = a3_142 + _155;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: === vectorizable_operation ===
common/dct.c:337:5: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: _184 = _183 >> 6;
common/dct.c:337:5: note: vect_is_simple_use: operand _183
common/dct.c:337:5: note: def_stmt: _183 = b4_123 + b3_156;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand 6
common/dct.c:337:5: note: vector/scalar shift/rotate found.
common/dct.c:337:5: note: === vectorizable_shift ===
common/dct.c:337:5: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 1 .
common/dct.c:337:5: note: ==> examining statement: _185 = _182 + _184;
common/dct.c:337:5: note: vect_is_simple_use: operand _182
common/dct.c:337:5: note: def_stmt: _182 = (int) _181;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand _184
common/dct.c:337:5: note: def_stmt: _184 = _183 >> 6;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: === vectorizable_operation ===
common/dct.c:337:5: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: # DEBUG x => NULL
common/dct.c:337:5: note: irrelevant.
common/dct.c:337:5: note: ==> examining statement: _256 = _185 & -256;
common/dct.c:337:5: note: vect_is_simple_use: operand _185
common/dct.c:337:5: note: def_stmt: _185 = _182 + _184;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand -256
common/dct.c:337:5: note: === vectorizable_operation ===
common/dct.c:337:5: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 1 .
common/dct.c:337:5: note: ==> examining statement: _257 = -_185;
common/dct.c:337:5: note: vect_is_simple_use: operand _185
common/dct.c:337:5: note: def_stmt: _185 = _182 + _184;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: === vectorizable_operation ===
common/dct.c:337:5: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: _258 = _257 >> 31;
common/dct.c:337:5: note: vect_is_simple_use: operand _257
common/dct.c:337:5: note: def_stmt: _257 = -_185;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand 31
common/dct.c:337:5: note: vector/scalar shift/rotate found.
common/dct.c:337:5: note: === vectorizable_shift ===
common/dct.c:337:5: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 1 .
common/dct.c:337:5: note: ==> examining statement: iftmp.0_259 = (unsigned char) _258;
common/dct.c:337:5: note: irrelevant.
common/dct.c:337:5: note: ==> examining statement: iftmp.0_260 = (unsigned char) _185;
common/dct.c:337:5: note: irrelevant.
common/dct.c:337:5: note: ==> examining statement: iftmp.0_261 = _256 != 0 ? iftmp.0_259 : iftmp.0_260;
common/dct.c:337:5: note: ==> examining pattern statement: patt_556 = (unsigned char) patt_557;
common/dct.c:337:5: note: ==> examining pattern def statement: patt_557 = _256 != 0 ? _258 : _185;
common/dct.c:337:5: note: ==> examining statement: patt_557 = _256 != 0 ? _258 : _185;
common/dct.c:337:5: note: vect_is_simple_use: operand _256 != 0
common/dct.c:337:5: note: not ssa-name.
common/dct.c:337:5: note: use not simple.
common/dct.c:337:5: note: vect_is_simple_use: operand _256
common/dct.c:337:5: note: def_stmt: _256 = _185 & -256;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand _258
common/dct.c:337:5: note: def_stmt: _258 = _257 >> 31;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand _185
common/dct.c:337:5: note: def_stmt: _185 = _182 + _184;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand patt_557
common/dct.c:337:5: note: def_stmt: patt_557 = _256 != 0 ? _258 : _185;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: === vectorizable_conversion ===
common/dct.c:337:5: note: vect_model_promotion_demotion_cost: inside_cost = 3, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: # DEBUG x => NULL
common/dct.c:337:5: note: irrelevant.
common/dct.c:337:5: note: ==> examining statement: *_180 = iftmp.0_261;
common/dct.c:337:5: note: vect_is_simple_use: operand iftmp.0_261
common/dct.c:337:5: note: def_stmt: iftmp.0_261 = _256 != 0 ? iftmp.0_259 : iftmp.0_260;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_model_store_cost: unaligned supported by hardware.
common/dct.c:337:5: note: vect_model_store_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: _188 = _102 + 96;
common/dct.c:337:5: note: irrelevant.
common/dct.c:337:5: note: ==> examining statement: _189 = dst_161(D) + _188;
common/dct.c:337:5: note: irrelevant.
common/dct.c:337:5: note: ==> examining statement: _190 = *_189;
common/dct.c:337:5: note: vect_is_simple_use: operand *_189
common/dct.c:337:5: note: not ssa-name.
common/dct.c:337:5: note: use not simple.
common/dct.c:337:5: note: vect_is_simple_use: operand *_189
common/dct.c:337:5: note: not ssa-name.
common/dct.c:337:5: note: use not simple.
common/dct.c:337:5: note: vect_model_load_cost: unaligned supported by hardware.
common/dct.c:337:5: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: _191 = (int) _190;
common/dct.c:337:5: note: vect_is_simple_use: operand _190
common/dct.c:337:5: note: def_stmt: _190 = *_189;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: === vectorizable_conversion ===
common/dct.c:337:5: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: _192 = b6_124 + b1_154;
common/dct.c:337:5: note: vect_is_simple_use: operand b6_124
common/dct.c:337:5: note: def_stmt: b6_124 = a0_109 - a6_120;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand b1_154
common/dct.c:337:5: note: def_stmt: b1_154 = a1_135 + _153;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: === vectorizable_operation ===
common/dct.c:337:5: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: _193 = _192 >> 6;
common/dct.c:337:5: note: vect_is_simple_use: operand _192
common/dct.c:337:5: note: def_stmt: _192 = b6_124 + b1_154;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand 6
common/dct.c:337:5: note: vector/scalar shift/rotate found.
common/dct.c:337:5: note: === vectorizable_shift ===
common/dct.c:337:5: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 1 .
common/dct.c:337:5: note: ==> examining statement: _194 = _191 + _193;
common/dct.c:337:5: note: vect_is_simple_use: operand _191
common/dct.c:337:5: note: def_stmt: _191 = (int) _190;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand _193
common/dct.c:337:5: note: def_stmt: _193 = _192 >> 6;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: === vectorizable_operation ===
common/dct.c:337:5: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: # DEBUG x => NULL
common/dct.c:337:5: note: irrelevant.
common/dct.c:337:5: note: ==> examining statement: _250 = _194 & -256;
common/dct.c:337:5: note: vect_is_simple_use: operand _194
common/dct.c:337:5: note: def_stmt: _194 = _191 + _193;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand -256
common/dct.c:337:5: note: === vectorizable_operation ===
common/dct.c:337:5: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 1 .
common/dct.c:337:5: note: ==> examining statement: _251 = -_194;
common/dct.c:337:5: note: vect_is_simple_use: operand _194
common/dct.c:337:5: note: def_stmt: _194 = _191 + _193;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: === vectorizable_operation ===
common/dct.c:337:5: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: _252 = _251 >> 31;
common/dct.c:337:5: note: vect_is_simple_use: operand _251
common/dct.c:337:5: note: def_stmt: _251 = -_194;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand 31
common/dct.c:337:5: note: vector/scalar shift/rotate found.
common/dct.c:337:5: note: === vectorizable_shift ===
common/dct.c:337:5: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 1 .
common/dct.c:337:5: note: ==> examining statement: iftmp.0_253 = (unsigned char) _252;
common/dct.c:337:5: note: irrelevant.
common/dct.c:337:5: note: ==> examining statement: iftmp.0_254 = (unsigned char) _194;
common/dct.c:337:5: note: irrelevant.
common/dct.c:337:5: note: ==> examining statement: iftmp.0_255 = _250 != 0 ? iftmp.0_253 : iftmp.0_254;
common/dct.c:337:5: note: ==> examining pattern statement: patt_554 = (unsigned char) patt_555;
common/dct.c:337:5: note: ==> examining pattern def statement: patt_555 = _250 != 0 ? _252 : _194;
common/dct.c:337:5: note: ==> examining statement: patt_555 = _250 != 0 ? _252 : _194;
common/dct.c:337:5: note: vect_is_simple_use: operand _250 != 0
common/dct.c:337:5: note: not ssa-name.
common/dct.c:337:5: note: use not simple.
common/dct.c:337:5: note: vect_is_simple_use: operand _250
common/dct.c:337:5: note: def_stmt: _250 = _194 & -256;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand _252
common/dct.c:337:5: note: def_stmt: _252 = _251 >> 31;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand _194
common/dct.c:337:5: note: def_stmt: _194 = _191 + _193;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand patt_555
common/dct.c:337:5: note: def_stmt: patt_555 = _250 != 0 ? _252 : _194;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: === vectorizable_conversion ===
common/dct.c:337:5: note: vect_model_promotion_demotion_cost: inside_cost = 3, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: # DEBUG x => NULL
common/dct.c:337:5: note: irrelevant.
common/dct.c:337:5: note: ==> examining statement: *_189 = iftmp.0_255;
common/dct.c:337:5: note: vect_is_simple_use: operand iftmp.0_255
common/dct.c:337:5: note: def_stmt: iftmp.0_255 = _250 != 0 ? iftmp.0_253 : iftmp.0_254;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_model_store_cost: unaligned supported by hardware.
common/dct.c:337:5: note: vect_model_store_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: _197 = _102 + 128;
common/dct.c:337:5: note: irrelevant.
common/dct.c:337:5: note: ==> examining statement: _198 = dst_161(D) + _197;
common/dct.c:337:5: note: irrelevant.
common/dct.c:337:5: note: ==> examining statement: _199 = *_198;
common/dct.c:337:5: note: vect_is_simple_use: operand *_198
common/dct.c:337:5: note: not ssa-name.
common/dct.c:337:5: note: use not simple.
common/dct.c:337:5: note: vect_is_simple_use: operand *_198
common/dct.c:337:5: note: not ssa-name.
common/dct.c:337:5: note: use not simple.
common/dct.c:337:5: note: vect_model_load_cost: unaligned supported by hardware.
common/dct.c:337:5: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: _200 = (int) _199;
common/dct.c:337:5: note: vect_is_simple_use: operand _199
common/dct.c:337:5: note: def_stmt: _199 = *_198;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: === vectorizable_conversion ===
common/dct.c:337:5: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: _201 = b6_124 - b1_154;
common/dct.c:337:5: note: vect_is_simple_use: operand b6_124
common/dct.c:337:5: note: def_stmt: b6_124 = a0_109 - a6_120;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand b1_154
common/dct.c:337:5: note: def_stmt: b1_154 = a1_135 + _153;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: === vectorizable_operation ===
common/dct.c:337:5: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: _202 = _201 >> 6;
common/dct.c:337:5: note: vect_is_simple_use: operand _201
common/dct.c:337:5: note: def_stmt: _201 = b6_124 - b1_154;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand 6
common/dct.c:337:5: note: vector/scalar shift/rotate found.
common/dct.c:337:5: note: === vectorizable_shift ===
common/dct.c:337:5: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 1 .
common/dct.c:337:5: note: ==> examining statement: _203 = _200 + _202;
common/dct.c:337:5: note: vect_is_simple_use: operand _200
common/dct.c:337:5: note: def_stmt: _200 = (int) _199;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand _202
common/dct.c:337:5: note: def_stmt: _202 = _201 >> 6;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: === vectorizable_operation ===
common/dct.c:337:5: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: # DEBUG x => NULL
common/dct.c:337:5: note: irrelevant.
common/dct.c:337:5: note: ==> examining statement: _244 = _203 & -256;
common/dct.c:337:5: note: vect_is_simple_use: operand _203
common/dct.c:337:5: note: def_stmt: _203 = _200 + _202;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand -256
common/dct.c:337:5: note: === vectorizable_operation ===
common/dct.c:337:5: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 1 .
common/dct.c:337:5: note: ==> examining statement: _245 = -_203;
common/dct.c:337:5: note: vect_is_simple_use: operand _203
common/dct.c:337:5: note: def_stmt: _203 = _200 + _202;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: === vectorizable_operation ===
common/dct.c:337:5: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: _246 = _245 >> 31;
common/dct.c:337:5: note: vect_is_simple_use: operand _245
common/dct.c:337:5: note: def_stmt: _245 = -_203;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand 31
common/dct.c:337:5: note: vector/scalar shift/rotate found.
common/dct.c:337:5: note: === vectorizable_shift ===
common/dct.c:337:5: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 1 .
common/dct.c:337:5: note: ==> examining statement: iftmp.0_247 = (unsigned char) _246;
common/dct.c:337:5: note: irrelevant.
common/dct.c:337:5: note: ==> examining statement: iftmp.0_248 = (unsigned char) _203;
common/dct.c:337:5: note: irrelevant.
common/dct.c:337:5: note: ==> examining statement: iftmp.0_249 = _244 != 0 ? iftmp.0_247 : iftmp.0_248;
common/dct.c:337:5: note: ==> examining pattern statement: patt_552 = (unsigned char) patt_553;
common/dct.c:337:5: note: ==> examining pattern def statement: patt_553 = _244 != 0 ? _246 : _203;
common/dct.c:337:5: note: ==> examining statement: patt_553 = _244 != 0 ? _246 : _203;
common/dct.c:337:5: note: vect_is_simple_use: operand _244 != 0
common/dct.c:337:5: note: not ssa-name.
common/dct.c:337:5: note: use not simple.
common/dct.c:337:5: note: vect_is_simple_use: operand _244
common/dct.c:337:5: note: def_stmt: _244 = _203 & -256;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand _246
common/dct.c:337:5: note: def_stmt: _246 = _245 >> 31;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand _203
common/dct.c:337:5: note: def_stmt: _203 = _200 + _202;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand patt_553
common/dct.c:337:5: note: def_stmt: patt_553 = _244 != 0 ? _246 : _203;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: === vectorizable_conversion ===
common/dct.c:337:5: note: vect_model_promotion_demotion_cost: inside_cost = 3, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: # DEBUG x => NULL
common/dct.c:337:5: note: irrelevant.
common/dct.c:337:5: note: ==> examining statement: *_198 = iftmp.0_249;
common/dct.c:337:5: note: vect_is_simple_use: operand iftmp.0_249
common/dct.c:337:5: note: def_stmt: iftmp.0_249 = _244 != 0 ? iftmp.0_247 : iftmp.0_248;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_model_store_cost: unaligned supported by hardware.
common/dct.c:337:5: note: vect_model_store_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: _206 = _102 + 160;
common/dct.c:337:5: note: irrelevant.
common/dct.c:337:5: note: ==> examining statement: _207 = dst_161(D) + _206;
common/dct.c:337:5: note: irrelevant.
common/dct.c:337:5: note: ==> examining statement: _208 = *_207;
common/dct.c:337:5: note: vect_is_simple_use: operand *_207
common/dct.c:337:5: note: not ssa-name.
common/dct.c:337:5: note: use not simple.
common/dct.c:337:5: note: vect_is_simple_use: operand *_207
common/dct.c:337:5: note: not ssa-name.
common/dct.c:337:5: note: use not simple.
common/dct.c:337:5: note: vect_model_load_cost: unaligned supported by hardware.
common/dct.c:337:5: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: _209 = (int) _208;
common/dct.c:337:5: note: vect_is_simple_use: operand _208
common/dct.c:337:5: note: def_stmt: _208 = *_207;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: === vectorizable_conversion ===
common/dct.c:337:5: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: _210 = b4_123 - b3_156;
common/dct.c:337:5: note: vect_is_simple_use: operand b4_123
common/dct.c:337:5: note: def_stmt: b4_123 = a2_110 - a4_116;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand b3_156
common/dct.c:337:5: note: def_stmt: b3_156 = a3_142 + _155;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: === vectorizable_operation ===
common/dct.c:337:5: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: _211 = _210 >> 6;
common/dct.c:337:5: note: vect_is_simple_use: operand _210
common/dct.c:337:5: note: def_stmt: _210 = b4_123 - b3_156;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand 6
common/dct.c:337:5: note: vector/scalar shift/rotate found.
common/dct.c:337:5: note: === vectorizable_shift ===
common/dct.c:337:5: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 1 .
common/dct.c:337:5: note: ==> examining statement: _212 = _209 + _211;
common/dct.c:337:5: note: vect_is_simple_use: operand _209
common/dct.c:337:5: note: def_stmt: _209 = (int) _208;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand _211
common/dct.c:337:5: note: def_stmt: _211 = _210 >> 6;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: === vectorizable_operation ===
common/dct.c:337:5: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: # DEBUG x => NULL
common/dct.c:337:5: note: irrelevant.
common/dct.c:337:5: note: ==> examining statement: _238 = _212 & -256;
common/dct.c:337:5: note: vect_is_simple_use: operand _212
common/dct.c:337:5: note: def_stmt: _212 = _209 + _211;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand -256
common/dct.c:337:5: note: === vectorizable_operation ===
common/dct.c:337:5: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 1 .
common/dct.c:337:5: note: ==> examining statement: _239 = -_212;
common/dct.c:337:5: note: vect_is_simple_use: operand _212
common/dct.c:337:5: note: def_stmt: _212 = _209 + _211;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: === vectorizable_operation ===
common/dct.c:337:5: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: _240 = _239 >> 31;
common/dct.c:337:5: note: vect_is_simple_use: operand _239
common/dct.c:337:5: note: def_stmt: _239 = -_212;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand 31
common/dct.c:337:5: note: vector/scalar shift/rotate found.
common/dct.c:337:5: note: === vectorizable_shift ===
common/dct.c:337:5: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 1 .
common/dct.c:337:5: note: ==> examining statement: iftmp.0_241 = (unsigned char) _240;
common/dct.c:337:5: note: irrelevant.
common/dct.c:337:5: note: ==> examining statement: iftmp.0_242 = (unsigned char) _212;
common/dct.c:337:5: note: irrelevant.
common/dct.c:337:5: note: ==> examining statement: iftmp.0_243 = _238 != 0 ? iftmp.0_241 : iftmp.0_242;
common/dct.c:337:5: note: ==> examining pattern statement: patt_550 = (unsigned char) patt_551;
common/dct.c:337:5: note: ==> examining pattern def statement: patt_551 = _238 != 0 ? _240 : _212;
common/dct.c:337:5: note: ==> examining statement: patt_551 = _238 != 0 ? _240 : _212;
common/dct.c:337:5: note: vect_is_simple_use: operand _238 != 0
common/dct.c:337:5: note: not ssa-name.
common/dct.c:337:5: note: use not simple.
common/dct.c:337:5: note: vect_is_simple_use: operand _238
common/dct.c:337:5: note: def_stmt: _238 = _212 & -256;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand _240
common/dct.c:337:5: note: def_stmt: _240 = _239 >> 31;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand _212
common/dct.c:337:5: note: def_stmt: _212 = _209 + _211;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand patt_551
common/dct.c:337:5: note: def_stmt: patt_551 = _238 != 0 ? _240 : _212;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: === vectorizable_conversion ===
common/dct.c:337:5: note: vect_model_promotion_demotion_cost: inside_cost = 3, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: # DEBUG x => NULL
common/dct.c:337:5: note: irrelevant.
common/dct.c:337:5: note: ==> examining statement: *_207 = iftmp.0_243;
common/dct.c:337:5: note: vect_is_simple_use: operand iftmp.0_243
common/dct.c:337:5: note: def_stmt: iftmp.0_243 = _238 != 0 ? iftmp.0_241 : iftmp.0_242;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_model_store_cost: unaligned supported by hardware.
common/dct.c:337:5: note: vect_model_store_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: _215 = _102 + 192;
common/dct.c:337:5: note: irrelevant.
common/dct.c:337:5: note: ==> examining statement: _216 = dst_161(D) + _215;
common/dct.c:337:5: note: irrelevant.
common/dct.c:337:5: note: ==> examining statement: _217 = *_216;
common/dct.c:337:5: note: vect_is_simple_use: operand *_216
common/dct.c:337:5: note: not ssa-name.
common/dct.c:337:5: note: use not simple.
common/dct.c:337:5: note: vect_is_simple_use: operand *_216
common/dct.c:337:5: note: not ssa-name.
common/dct.c:337:5: note: use not simple.
common/dct.c:337:5: note: vect_model_load_cost: unaligned supported by hardware.
common/dct.c:337:5: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: _218 = (int) _217;
common/dct.c:337:5: note: vect_is_simple_use: operand _217
common/dct.c:337:5: note: def_stmt: _217 = *_216;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: === vectorizable_conversion ===
common/dct.c:337:5: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: _219 = b2_122 - b5_158;
common/dct.c:337:5: note: vect_is_simple_use: operand b2_122
common/dct.c:337:5: note: def_stmt: b2_122 = a2_110 + a4_116;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand b5_158
common/dct.c:337:5: note: def_stmt: b5_158 = _157 - a5_147;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: === vectorizable_operation ===
common/dct.c:337:5: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: _220 = _219 >> 6;
common/dct.c:337:5: note: vect_is_simple_use: operand _219
common/dct.c:337:5: note: def_stmt: _219 = b2_122 - b5_158;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand 6
common/dct.c:337:5: note: vector/scalar shift/rotate found.
common/dct.c:337:5: note: === vectorizable_shift ===
common/dct.c:337:5: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 1 .
common/dct.c:337:5: note: ==> examining statement: _221 = _218 + _220;
common/dct.c:337:5: note: vect_is_simple_use: operand _218
common/dct.c:337:5: note: def_stmt: _218 = (int) _217;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand _220
common/dct.c:337:5: note: def_stmt: _220 = _219 >> 6;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: === vectorizable_operation ===
common/dct.c:337:5: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: # DEBUG x => NULL
common/dct.c:337:5: note: irrelevant.
common/dct.c:337:5: note: ==> examining statement: _177 = _221 & -256;
common/dct.c:337:5: note: vect_is_simple_use: operand _221
common/dct.c:337:5: note: def_stmt: _221 = _218 + _220;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand -256
common/dct.c:337:5: note: === vectorizable_operation ===
common/dct.c:337:5: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 1 .
common/dct.c:337:5: note: ==> examining statement: _168 = -_221;
common/dct.c:337:5: note: vect_is_simple_use: operand _221
common/dct.c:337:5: note: def_stmt: _221 = _218 + _220;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: === vectorizable_operation ===
common/dct.c:337:5: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: _234 = _168 >> 31;
common/dct.c:337:5: note: vect_is_simple_use: operand _168
common/dct.c:337:5: note: def_stmt: _168 = -_221;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand 31
common/dct.c:337:5: note: vector/scalar shift/rotate found.
common/dct.c:337:5: note: === vectorizable_shift ===
common/dct.c:337:5: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 1 .
common/dct.c:337:5: note: ==> examining statement: iftmp.0_235 = (unsigned char) _234;
common/dct.c:337:5: note: irrelevant.
common/dct.c:337:5: note: ==> examining statement: iftmp.0_236 = (unsigned char) _221;
common/dct.c:337:5: note: irrelevant.
common/dct.c:337:5: note: ==> examining statement: iftmp.0_237 = _177 != 0 ? iftmp.0_235 : iftmp.0_236;
common/dct.c:337:5: note: ==> examining pattern statement: patt_548 = (unsigned char) patt_549;
common/dct.c:337:5: note: ==> examining pattern def statement: patt_549 = _177 != 0 ? _234 : _221;
common/dct.c:337:5: note: ==> examining statement: patt_549 = _177 != 0 ? _234 : _221;
common/dct.c:337:5: note: vect_is_simple_use: operand _177 != 0
common/dct.c:337:5: note: not ssa-name.
common/dct.c:337:5: note: use not simple.
common/dct.c:337:5: note: vect_is_simple_use: operand _177
common/dct.c:337:5: note: def_stmt: _177 = _221 & -256;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand _234
common/dct.c:337:5: note: def_stmt: _234 = _168 >> 31;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand _221
common/dct.c:337:5: note: def_stmt: _221 = _218 + _220;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand patt_549
common/dct.c:337:5: note: def_stmt: patt_549 = _177 != 0 ? _234 : _221;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: === vectorizable_conversion ===
common/dct.c:337:5: note: vect_model_promotion_demotion_cost: inside_cost = 3, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: # DEBUG x => NULL
common/dct.c:337:5: note: irrelevant.
common/dct.c:337:5: note: ==> examining statement: *_216 = iftmp.0_237;
common/dct.c:337:5: note: vect_is_simple_use: operand iftmp.0_237
common/dct.c:337:5: note: def_stmt: iftmp.0_237 = _177 != 0 ? iftmp.0_235 : iftmp.0_236;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_model_store_cost: unaligned supported by hardware.
common/dct.c:337:5: note: vect_model_store_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: _224 = _102 + 224;
common/dct.c:337:5: note: irrelevant.
common/dct.c:337:5: note: ==> examining statement: _225 = dst_161(D) + _224;
common/dct.c:337:5: note: irrelevant.
common/dct.c:337:5: note: ==> examining statement: _226 = *_225;
common/dct.c:337:5: note: vect_is_simple_use: operand *_225
common/dct.c:337:5: note: not ssa-name.
common/dct.c:337:5: note: use not simple.
common/dct.c:337:5: note: vect_is_simple_use: operand *_225
common/dct.c:337:5: note: not ssa-name.
common/dct.c:337:5: note: use not simple.
common/dct.c:337:5: note: vect_model_load_cost: unaligned supported by hardware.
common/dct.c:337:5: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: _227 = (int) _226;
common/dct.c:337:5: note: vect_is_simple_use: operand _226
common/dct.c:337:5: note: def_stmt: _226 = *_225;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: === vectorizable_conversion ===
common/dct.c:337:5: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: _228 = b0_121 - b7_160;
common/dct.c:337:5: note: vect_is_simple_use: operand b0_121
common/dct.c:337:5: note: def_stmt: b0_121 = a0_109 + a6_120;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand b7_160
common/dct.c:337:5: note: def_stmt: b7_160 = a7_152 - _159;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: === vectorizable_operation ===
common/dct.c:337:5: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: _229 = _228 >> 6;
common/dct.c:337:5: note: vect_is_simple_use: operand _228
common/dct.c:337:5: note: def_stmt: _228 = b0_121 - b7_160;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand 6
common/dct.c:337:5: note: vector/scalar shift/rotate found.
common/dct.c:337:5: note: === vectorizable_shift ===
common/dct.c:337:5: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 1 .
common/dct.c:337:5: note: ==> examining statement: _230 = _227 + _229;
common/dct.c:337:5: note: vect_is_simple_use: operand _227
common/dct.c:337:5: note: def_stmt: _227 = (int) _226;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand _229
common/dct.c:337:5: note: def_stmt: _229 = _228 >> 6;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: === vectorizable_operation ===
common/dct.c:337:5: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: # DEBUG x => NULL
common/dct.c:337:5: note: irrelevant.
common/dct.c:337:5: note: ==> examining statement: _231 = _230 & -256;
common/dct.c:337:5: note: vect_is_simple_use: operand _230
common/dct.c:337:5: note: def_stmt: _230 = _227 + _229;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand -256
common/dct.c:337:5: note: === vectorizable_operation ===
common/dct.c:337:5: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 1 .
common/dct.c:337:5: note: ==> examining statement: _222 = -_230;
common/dct.c:337:5: note: vect_is_simple_use: operand _230
common/dct.c:337:5: note: def_stmt: _230 = _227 + _229;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: === vectorizable_operation ===
common/dct.c:337:5: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: _213 = _222 >> 31;
common/dct.c:337:5: note: vect_is_simple_use: operand _222
common/dct.c:337:5: note: def_stmt: _222 = -_230;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand 31
common/dct.c:337:5: note: vector/scalar shift/rotate found.
common/dct.c:337:5: note: === vectorizable_shift ===
common/dct.c:337:5: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 1 .
common/dct.c:337:5: note: ==> examining statement: iftmp.0_204 = (unsigned char) _213;
common/dct.c:337:5: note: irrelevant.
common/dct.c:337:5: note: ==> examining statement: iftmp.0_195 = (unsigned char) _230;
common/dct.c:337:5: note: irrelevant.
common/dct.c:337:5: note: ==> examining statement: iftmp.0_186 = _231 != 0 ? iftmp.0_204 : iftmp.0_195;
common/dct.c:337:5: note: ==> examining pattern statement: patt_546 = (unsigned char) patt_547;
common/dct.c:337:5: note: ==> examining pattern def statement: patt_547 = _231 != 0 ? _213 : _230;
common/dct.c:337:5: note: ==> examining statement: patt_547 = _231 != 0 ? _213 : _230;
common/dct.c:337:5: note: vect_is_simple_use: operand _231 != 0
common/dct.c:337:5: note: not ssa-name.
common/dct.c:337:5: note: use not simple.
common/dct.c:337:5: note: vect_is_simple_use: operand _231
common/dct.c:337:5: note: def_stmt: _231 = _230 & -256;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand _213
common/dct.c:337:5: note: def_stmt: _213 = _222 >> 31;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand _230
common/dct.c:337:5: note: def_stmt: _230 = _227 + _229;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_is_simple_use: operand patt_547
common/dct.c:337:5: note: def_stmt: patt_547 = _231 != 0 ? _213 : _230;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: === vectorizable_conversion ===
common/dct.c:337:5: note: vect_model_promotion_demotion_cost: inside_cost = 3, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: # DEBUG x => NULL
common/dct.c:337:5: note: irrelevant.
common/dct.c:337:5: note: ==> examining statement: *_225 = iftmp.0_186;
common/dct.c:337:5: note: vect_is_simple_use: operand iftmp.0_186
common/dct.c:337:5: note: def_stmt: iftmp.0_186 = _231 != 0 ? iftmp.0_204 : iftmp.0_195;
common/dct.c:337:5: note: type of def: 3.
common/dct.c:337:5: note: vect_model_store_cost: unaligned supported by hardware.
common/dct.c:337:5: note: vect_model_store_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:337:5: note: ==> examining statement: i_233 = i_305 + 1;
common/dct.c:337:5: note: irrelevant.
common/dct.c:337:5: note: ==> examining statement: # DEBUG i => i_233
common/dct.c:337:5: note: irrelevant.
common/dct.c:337:5: note: ==> examining statement: # DEBUG i => i_233
common/dct.c:337:5: note: irrelevant.
common/dct.c:337:5: note: ==> examining statement: ivtmp_564 = ivtmp_565 - 1;
common/dct.c:337:5: note: irrelevant.
common/dct.c:337:5: note: ==> examining statement: if (ivtmp_564 != 0)
common/dct.c:337:5: note: irrelevant.
common/dct.c:337:5: note: vectorization_factor = 16, niters = 8
common/dct.c:337:5: note: not vectorized: iteration count too small.
common/dct.c:337:5: note: not vectorized: iteration count smaller than vectorization factor.
common/dct.c:337:5: note: bad operation or unsupported loop bound.

Analyzing loop at common/dct.c:330
common/dct.c:330:5: note: ===== analyze_loop_nest =====
common/dct.c:330:5: note: === vect_analyze_loop_form ===
common/dct.c:330:5: note: === get_loop_niters ===
Analyzing # of iterations of loop 1
  exit condition [7, + , 4294967295] != 0
  bounds on difference of bases: -7 ... -7
  result:
    # of iterations 7, bounded by 7
common/dct.c:330:5: note: === vect_analyze_data_refs ===
Creating dr for *dct_6(D)[i_306]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: dct_6(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 2
	aligned to: 128
	base_object: *dct_6(D)
	Access function 0: {0, +, 1}_1
Creating dr for MEM[(int16_t[8] *)dct_6(D) + 64B][i_306]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: dct_6(D)
	offset from base address: 0
	constant offset from base address: 64
	step: 2
	aligned to: 128
	base_object: MEM[(int16_t[8] *)dct_6(D) + 64B]
	Access function 0: {0, +, 1}_1
Creating dr for MEM[(int16_t[8] *)dct_6(D) + 32B][i_306]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: dct_6(D)
	offset from base address: 0
	constant offset from base address: 32
	step: 2
	aligned to: 128
	base_object: MEM[(int16_t[8] *)dct_6(D) + 32B]
	Access function 0: {0, +, 1}_1
Creating dr for MEM[(int16_t[8] *)dct_6(D) + 96B][i_306]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: dct_6(D)
	offset from base address: 0
	constant offset from base address: 96
	step: 2
	aligned to: 128
	base_object: MEM[(int16_t[8] *)dct_6(D) + 96B]
	Access function 0: {0, +, 1}_1
Creating dr for MEM[(int16_t[8] *)dct_6(D) + 80B][i_306]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: dct_6(D)
	offset from base address: 0
	constant offset from base address: 80
	step: 2
	aligned to: 128
	base_object: MEM[(int16_t[8] *)dct_6(D) + 80B]
	Access function 0: {0, +, 1}_1
Creating dr for MEM[(int16_t[8] *)dct_6(D) + 48B][i_306]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: dct_6(D)
	offset from base address: 0
	constant offset from base address: 48
	step: 2
	aligned to: 128
	base_object: MEM[(int16_t[8] *)dct_6(D) + 48B]
	Access function 0: {0, +, 1}_1
Creating dr for MEM[(int16_t[8] *)dct_6(D) + 112B][i_306]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: dct_6(D)
	offset from base address: 0
	constant offset from base address: 112
	step: 2
	aligned to: 128
	base_object: MEM[(int16_t[8] *)dct_6(D) + 112B]
	Access function 0: {0, +, 1}_1
Creating dr for MEM[(int16_t[8] *)dct_6(D) + 16B][i_306]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: dct_6(D)
	offset from base address: 0
	constant offset from base address: 16
	step: 2
	aligned to: 128
	base_object: MEM[(int16_t[8] *)dct_6(D) + 16B]
	Access function 0: {0, +, 1}_1
Creating dr for *dct_6(D)[i_306]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: dct_6(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 2
	aligned to: 128
	base_object: *dct_6(D)
	Access function 0: {0, +, 1}_1
Creating dr for MEM[(int16_t[8] *)dct_6(D) + 16B][i_306]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: dct_6(D)
	offset from base address: 0
	constant offset from base address: 16
	step: 2
	aligned to: 128
	base_object: MEM[(int16_t[8] *)dct_6(D) + 16B]
	Access function 0: {0, +, 1}_1
Creating dr for MEM[(int16_t[8] *)dct_6(D) + 32B][i_306]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: dct_6(D)
	offset from base address: 0
	constant offset from base address: 32
	step: 2
	aligned to: 128
	base_object: MEM[(int16_t[8] *)dct_6(D) + 32B]
	Access function 0: {0, +, 1}_1
Creating dr for MEM[(int16_t[8] *)dct_6(D) + 48B][i_306]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: dct_6(D)
	offset from base address: 0
	constant offset from base address: 48
	step: 2
	aligned to: 128
	base_object: MEM[(int16_t[8] *)dct_6(D) + 48B]
	Access function 0: {0, +, 1}_1
Creating dr for MEM[(int16_t[8] *)dct_6(D) + 64B][i_306]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: dct_6(D)
	offset from base address: 0
	constant offset from base address: 64
	step: 2
	aligned to: 128
	base_object: MEM[(int16_t[8] *)dct_6(D) + 64B]
	Access function 0: {0, +, 1}_1
Creating dr for MEM[(int16_t[8] *)dct_6(D) + 80B][i_306]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: dct_6(D)
	offset from base address: 0
	constant offset from base address: 80
	step: 2
	aligned to: 128
	base_object: MEM[(int16_t[8] *)dct_6(D) + 80B]
	Access function 0: {0, +, 1}_1
Creating dr for MEM[(int16_t[8] *)dct_6(D) + 96B][i_306]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: dct_6(D)
	offset from base address: 0
	constant offset from base address: 96
	step: 2
	aligned to: 128
	base_object: MEM[(int16_t[8] *)dct_6(D) + 96B]
	Access function 0: {0, +, 1}_1
Creating dr for MEM[(int16_t[8] *)dct_6(D) + 112B][i_306]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: dct_6(D)
	offset from base address: 0
	constant offset from base address: 112
	step: 2
	aligned to: 128
	base_object: MEM[(int16_t[8] *)dct_6(D) + 112B]
	Access function 0: {0, +, 1}_1
common/dct.c:330:5: note: got vectype for stmt: _12 = *dct_6(D)[i_306];
vector(8) short int
common/dct.c:330:5: note: got vectype for stmt: _14 = MEM[(int16_t[8] *)dct_6(D) + 64B][i_306];
vector(8) short int
common/dct.c:330:5: note: got vectype for stmt: _19 = MEM[(int16_t[8] *)dct_6(D) + 32B][i_306];
vector(8) short int
common/dct.c:330:5: note: got vectype for stmt: _22 = MEM[(int16_t[8] *)dct_6(D) + 96B][i_306];
vector(8) short int
common/dct.c:330:5: note: got vectype for stmt: _33 = MEM[(int16_t[8] *)dct_6(D) + 80B][i_306];
vector(8) short int
common/dct.c:330:5: note: got vectype for stmt: _35 = MEM[(int16_t[8] *)dct_6(D) + 48B][i_306];
vector(8) short int
common/dct.c:330:5: note: got vectype for stmt: _38 = MEM[(int16_t[8] *)dct_6(D) + 112B][i_306];
vector(8) short int
common/dct.c:330:5: note: got vectype for stmt: _44 = MEM[(int16_t[8] *)dct_6(D) + 16B][i_306];
vector(8) short int
common/dct.c:330:5: note: got vectype for stmt: *dct_6(D)[i_306] = _72;
vector(8) short int
common/dct.c:330:5: note: got vectype for stmt: MEM[(int16_t[8] *)dct_6(D) + 16B][i_306] = _77;
vector(8) short int
common/dct.c:330:5: note: got vectype for stmt: MEM[(int16_t[8] *)dct_6(D) + 32B][i_306] = _82;
vector(8) short int
common/dct.c:330:5: note: got vectype for stmt: MEM[(int16_t[8] *)dct_6(D) + 48B][i_306] = _87;
vector(8) short int
common/dct.c:330:5: note: got vectype for stmt: MEM[(int16_t[8] *)dct_6(D) + 64B][i_306] = _90;
vector(8) short int
common/dct.c:330:5: note: got vectype for stmt: MEM[(int16_t[8] *)dct_6(D) + 80B][i_306] = _93;
vector(8) short int
common/dct.c:330:5: note: got vectype for stmt: MEM[(int16_t[8] *)dct_6(D) + 96B][i_306] = _96;
vector(8) short int
common/dct.c:330:5: note: got vectype for stmt: MEM[(int16_t[8] *)dct_6(D) + 112B][i_306] = _99;
vector(8) short int
common/dct.c:330:5: note: === vect_analyze_scalar_cycles ===
common/dct.c:330:5: note: Analyze phi: i_306 = PHI <i_101(4), 0(2)>

common/dct.c:330:5: note: Access function of PHI: {0, +, 1}_1
common/dct.c:330:5: note: step: 1,  init: 0
common/dct.c:330:5: note: Detected induction.
common/dct.c:330:5: note: Analyze phi: .MEM_304 = PHI <.MEM_100(4), .MEM_11(2)>

common/dct.c:330:5: note: Analyze phi: ivtmp_563 = PHI <ivtmp_562(4), 8(2)>

common/dct.c:330:5: note: Access function of PHI: {8, +, 4294967295}_1
common/dct.c:330:5: note: step: 4294967295,  init: 8
common/dct.c:330:5: note: Detected induction.
common/dct.c:330:5: note: === vect_pattern_recog ===
common/dct.c:330:5: note: === vect_analyze_data_ref_accesses ===
common/dct.c:330:5: note: === vect_mark_stmts_to_be_vectorized ===
common/dct.c:330:5: note: init: phi relevant? i_306 = PHI <i_101(4), 0(2)>
common/dct.c:330:5: note: init: phi relevant? .MEM_304 = PHI <.MEM_100(4), .MEM_11(2)>
common/dct.c:330:5: note: init: phi relevant? ivtmp_563 = PHI <ivtmp_562(4), 8(2)>
common/dct.c:330:5: note: init: stmt relevant? # DEBUG i => i_306
common/dct.c:330:5: note: init: stmt relevant? _12 = *dct_6(D)[i_306];
common/dct.c:330:5: note: init: stmt relevant? _13 = (int) _12;
common/dct.c:330:5: note: init: stmt relevant? _14 = MEM[(int16_t[8] *)dct_6(D) + 64B][i_306];
common/dct.c:330:5: note: init: stmt relevant? _15 = (int) _14;
common/dct.c:330:5: note: init: stmt relevant? a0_16 = _13 + _15;
common/dct.c:330:5: note: init: stmt relevant? # DEBUG a0 => a0_16
common/dct.c:330:5: note: init: stmt relevant? a2_18 = _13 - _15;
common/dct.c:330:5: note: init: stmt relevant? # DEBUG a2 => a2_18
common/dct.c:330:5: note: init: stmt relevant? _19 = MEM[(int16_t[8] *)dct_6(D) + 32B][i_306];
common/dct.c:330:5: note: init: stmt relevant? _20 = _19 >> 1;
common/dct.c:330:5: note: init: stmt relevant? _21 = (int) _20;
common/dct.c:330:5: note: init: stmt relevant? _22 = MEM[(int16_t[8] *)dct_6(D) + 96B][i_306];
common/dct.c:330:5: note: init: stmt relevant? _23 = (int) _22;
common/dct.c:330:5: note: init: stmt relevant? a4_24 = _21 - _23;
common/dct.c:330:5: note: init: stmt relevant? # DEBUG a4 => a4_24
common/dct.c:330:5: note: init: stmt relevant? _25 = _22 >> 1;
common/dct.c:330:5: note: init: stmt relevant? _26 = (int) _25;
common/dct.c:330:5: note: init: stmt relevant? _27 = (int) _19;
common/dct.c:330:5: note: init: stmt relevant? a6_28 = _26 + _27;
common/dct.c:330:5: note: init: stmt relevant? # DEBUG a6 => a6_28
common/dct.c:330:5: note: init: stmt relevant? b0_29 = a0_16 + a6_28;
common/dct.c:330:5: note: init: stmt relevant? # DEBUG b0 => b0_29
common/dct.c:330:5: note: init: stmt relevant? b2_30 = a2_18 + a4_24;
common/dct.c:330:5: note: init: stmt relevant? # DEBUG b2 => b2_30
common/dct.c:330:5: note: init: stmt relevant? b4_31 = a2_18 - a4_24;
common/dct.c:330:5: note: init: stmt relevant? # DEBUG b4 => b4_31
common/dct.c:330:5: note: init: stmt relevant? b6_32 = a0_16 - a6_28;
common/dct.c:330:5: note: init: stmt relevant? # DEBUG b6 => b6_32
common/dct.c:330:5: note: init: stmt relevant? _33 = MEM[(int16_t[8] *)dct_6(D) + 80B][i_306];
common/dct.c:330:5: note: init: stmt relevant? _34 = (int) _33;
common/dct.c:330:5: note: init: stmt relevant? _35 = MEM[(int16_t[8] *)dct_6(D) + 48B][i_306];
common/dct.c:330:5: note: init: stmt relevant? _36 = (int) _35;
common/dct.c:330:5: note: init: stmt relevant? _37 = _34 - _36;
common/dct.c:330:5: note: init: stmt relevant? _38 = MEM[(int16_t[8] *)dct_6(D) + 112B][i_306];
common/dct.c:330:5: note: init: stmt relevant? _39 = (int) _38;
common/dct.c:330:5: note: init: stmt relevant? _40 = _37 - _39;
common/dct.c:330:5: note: init: stmt relevant? _41 = _38 >> 1;
common/dct.c:330:5: note: init: stmt relevant? _42 = (int) _41;
common/dct.c:330:5: note: init: stmt relevant? a1_43 = _40 - _42;
common/dct.c:330:5: note: init: stmt relevant? # DEBUG a1 => a1_43
common/dct.c:330:5: note: init: stmt relevant? _44 = MEM[(int16_t[8] *)dct_6(D) + 16B][i_306];
common/dct.c:330:5: note: init: stmt relevant? _45 = (int) _44;
common/dct.c:330:5: note: init: stmt relevant? _46 = _39 + _45;
common/dct.c:330:5: note: init: stmt relevant? _47 = _46 - _36;
common/dct.c:330:5: note: init: stmt relevant? _48 = _35 >> 1;
common/dct.c:330:5: note: init: stmt relevant? _49 = (int) _48;
common/dct.c:330:5: note: init: stmt relevant? a3_50 = _47 - _49;
common/dct.c:330:5: note: init: stmt relevant? # DEBUG a3 => a3_50
common/dct.c:330:5: note: init: stmt relevant? _51 = _39 - _45;
common/dct.c:330:5: note: init: stmt relevant? _52 = _34 + _51;
common/dct.c:330:5: note: init: stmt relevant? _53 = _33 >> 1;
common/dct.c:330:5: note: init: stmt relevant? _54 = (int) _53;
common/dct.c:330:5: note: init: stmt relevant? a5_55 = _52 + _54;
common/dct.c:330:5: note: init: stmt relevant? # DEBUG a5 => a5_55
common/dct.c:330:5: note: init: stmt relevant? _56 = _34 + _36;
common/dct.c:330:5: note: init: stmt relevant? _57 = _45 + _56;
common/dct.c:330:5: note: init: stmt relevant? _58 = _44 >> 1;
common/dct.c:330:5: note: init: stmt relevant? _59 = (int) _58;
common/dct.c:330:5: note: init: stmt relevant? a7_60 = _57 + _59;
common/dct.c:330:5: note: init: stmt relevant? # DEBUG a7 => a7_60
common/dct.c:330:5: note: init: stmt relevant? _61 = a7_60 >> 2;
common/dct.c:330:5: note: init: stmt relevant? b1_62 = a1_43 + _61;
common/dct.c:330:5: note: init: stmt relevant? # DEBUG b1 => b1_62
common/dct.c:330:5: note: init: stmt relevant? _63 = a5_55 >> 2;
common/dct.c:330:5: note: init: stmt relevant? b3_64 = a3_50 + _63;
common/dct.c:330:5: note: init: stmt relevant? # DEBUG b3 => b3_64
common/dct.c:330:5: note: init: stmt relevant? _65 = a3_50 >> 2;
common/dct.c:330:5: note: init: stmt relevant? b5_66 = _65 - a5_55;
common/dct.c:330:5: note: init: stmt relevant? # DEBUG b5 => b5_66
common/dct.c:330:5: note: init: stmt relevant? _67 = a1_43 >> 2;
common/dct.c:330:5: note: init: stmt relevant? b7_68 = a7_60 - _67;
common/dct.c:330:5: note: init: stmt relevant? # DEBUG b7 => b7_68
common/dct.c:330:5: note: init: stmt relevant? _69 = (unsigned short) b0_29;
common/dct.c:330:5: note: init: stmt relevant? _70 = (unsigned short) b7_68;
common/dct.c:330:5: note: init: stmt relevant? _71 = _69 + _70;
common/dct.c:330:5: note: init: stmt relevant? _72 = (short int) _71;
common/dct.c:330:5: note: init: stmt relevant? *dct_6(D)[i_306] = _72;
common/dct.c:330:5: note: vec_stmt_relevant_p: stmt has vdefs.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: init: stmt relevant? _74 = (unsigned short) b2_30;
common/dct.c:330:5: note: init: stmt relevant? _75 = (unsigned short) b5_66;
common/dct.c:330:5: note: init: stmt relevant? _76 = _74 + _75;
common/dct.c:330:5: note: init: stmt relevant? _77 = (short int) _76;
common/dct.c:330:5: note: init: stmt relevant? MEM[(int16_t[8] *)dct_6(D) + 16B][i_306] = _77;
common/dct.c:330:5: note: vec_stmt_relevant_p: stmt has vdefs.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: init: stmt relevant? _79 = (unsigned short) b4_31;
common/dct.c:330:5: note: init: stmt relevant? _80 = (unsigned short) b3_64;
common/dct.c:330:5: note: init: stmt relevant? _81 = _79 + _80;
common/dct.c:330:5: note: init: stmt relevant? _82 = (short int) _81;
common/dct.c:330:5: note: init: stmt relevant? MEM[(int16_t[8] *)dct_6(D) + 32B][i_306] = _82;
common/dct.c:330:5: note: vec_stmt_relevant_p: stmt has vdefs.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: init: stmt relevant? _84 = (unsigned short) b6_32;
common/dct.c:330:5: note: init: stmt relevant? _85 = (unsigned short) b1_62;
common/dct.c:330:5: note: init: stmt relevant? _86 = _84 + _85;
common/dct.c:330:5: note: init: stmt relevant? _87 = (short int) _86;
common/dct.c:330:5: note: init: stmt relevant? MEM[(int16_t[8] *)dct_6(D) + 48B][i_306] = _87;
common/dct.c:330:5: note: vec_stmt_relevant_p: stmt has vdefs.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: init: stmt relevant? _89 = _84 - _85;
common/dct.c:330:5: note: init: stmt relevant? _90 = (short int) _89;
common/dct.c:330:5: note: init: stmt relevant? MEM[(int16_t[8] *)dct_6(D) + 64B][i_306] = _90;
common/dct.c:330:5: note: vec_stmt_relevant_p: stmt has vdefs.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: init: stmt relevant? _92 = _79 - _80;
common/dct.c:330:5: note: init: stmt relevant? _93 = (short int) _92;
common/dct.c:330:5: note: init: stmt relevant? MEM[(int16_t[8] *)dct_6(D) + 80B][i_306] = _93;
common/dct.c:330:5: note: vec_stmt_relevant_p: stmt has vdefs.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: init: stmt relevant? _95 = _74 - _75;
common/dct.c:330:5: note: init: stmt relevant? _96 = (short int) _95;
common/dct.c:330:5: note: init: stmt relevant? MEM[(int16_t[8] *)dct_6(D) + 96B][i_306] = _96;
common/dct.c:330:5: note: vec_stmt_relevant_p: stmt has vdefs.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: init: stmt relevant? _98 = _69 - _70;
common/dct.c:330:5: note: init: stmt relevant? _99 = (short int) _98;
common/dct.c:330:5: note: init: stmt relevant? MEM[(int16_t[8] *)dct_6(D) + 112B][i_306] = _99;
common/dct.c:330:5: note: vec_stmt_relevant_p: stmt has vdefs.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: init: stmt relevant? i_101 = i_306 + 1;
common/dct.c:330:5: note: init: stmt relevant? # DEBUG i => i_101
common/dct.c:330:5: note: init: stmt relevant? # DEBUG i => i_101
common/dct.c:330:5: note: init: stmt relevant? ivtmp_562 = ivtmp_563 - 1;
common/dct.c:330:5: note: init: stmt relevant? if (ivtmp_562 != 0)
common/dct.c:330:5: note: worklist: examine stmt: MEM[(int16_t[8] *)dct_6(D) + 112B][i_306] = _99;
common/dct.c:330:5: note: vect_is_simple_use: operand _99
common/dct.c:330:5: note: def_stmt: _99 = (short int) _98;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: worklist: examine stmt: _99 = (short int) _98;
common/dct.c:330:5: note: vect_is_simple_use: operand _98
common/dct.c:330:5: note: def_stmt: _98 = _69 - _70;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: worklist: examine stmt: _98 = _69 - _70;
common/dct.c:330:5: note: vect_is_simple_use: operand _69
common/dct.c:330:5: note: def_stmt: _69 = (unsigned short) b0_29;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: vect_is_simple_use: operand _70
common/dct.c:330:5: note: def_stmt: _70 = (unsigned short) b7_68;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: worklist: examine stmt: _70 = (unsigned short) b7_68;
common/dct.c:330:5: note: vect_is_simple_use: operand b7_68
common/dct.c:330:5: note: def_stmt: b7_68 = a7_60 - _67;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: worklist: examine stmt: b7_68 = a7_60 - _67;
common/dct.c:330:5: note: vect_is_simple_use: operand a7_60
common/dct.c:330:5: note: def_stmt: a7_60 = _57 + _59;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: vect_is_simple_use: operand _67
common/dct.c:330:5: note: def_stmt: _67 = a1_43 >> 2;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: worklist: examine stmt: _67 = a1_43 >> 2;
common/dct.c:330:5: note: vect_is_simple_use: operand a1_43
common/dct.c:330:5: note: def_stmt: a1_43 = _40 - _42;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: worklist: examine stmt: a1_43 = _40 - _42;
common/dct.c:330:5: note: vect_is_simple_use: operand _40
common/dct.c:330:5: note: def_stmt: _40 = _37 - _39;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: vect_is_simple_use: operand _42
common/dct.c:330:5: note: def_stmt: _42 = (int) _41;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: worklist: examine stmt: _42 = (int) _41;
common/dct.c:330:5: note: vect_is_simple_use: operand _41
common/dct.c:330:5: note: def_stmt: _41 = _38 >> 1;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: worklist: examine stmt: _41 = _38 >> 1;
common/dct.c:330:5: note: vect_is_simple_use: operand _38
common/dct.c:330:5: note: def_stmt: _38 = MEM[(int16_t[8] *)dct_6(D) + 112B][i_306];
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: worklist: examine stmt: _38 = MEM[(int16_t[8] *)dct_6(D) + 112B][i_306];
common/dct.c:330:5: note: worklist: examine stmt: _40 = _37 - _39;
common/dct.c:330:5: note: vect_is_simple_use: operand _37
common/dct.c:330:5: note: def_stmt: _37 = _34 - _36;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: vect_is_simple_use: operand _39
common/dct.c:330:5: note: def_stmt: _39 = (int) _38;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: worklist: examine stmt: _39 = (int) _38;
common/dct.c:330:5: note: vect_is_simple_use: operand _38
common/dct.c:330:5: note: def_stmt: _38 = MEM[(int16_t[8] *)dct_6(D) + 112B][i_306];
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: already marked relevant/live.
common/dct.c:330:5: note: worklist: examine stmt: _37 = _34 - _36;
common/dct.c:330:5: note: vect_is_simple_use: operand _34
common/dct.c:330:5: note: def_stmt: _34 = (int) _33;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: vect_is_simple_use: operand _36
common/dct.c:330:5: note: def_stmt: _36 = (int) _35;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: worklist: examine stmt: _36 = (int) _35;
common/dct.c:330:5: note: vect_is_simple_use: operand _35
common/dct.c:330:5: note: def_stmt: _35 = MEM[(int16_t[8] *)dct_6(D) + 48B][i_306];
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: worklist: examine stmt: _35 = MEM[(int16_t[8] *)dct_6(D) + 48B][i_306];
common/dct.c:330:5: note: worklist: examine stmt: _34 = (int) _33;
common/dct.c:330:5: note: vect_is_simple_use: operand _33
common/dct.c:330:5: note: def_stmt: _33 = MEM[(int16_t[8] *)dct_6(D) + 80B][i_306];
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: worklist: examine stmt: _33 = MEM[(int16_t[8] *)dct_6(D) + 80B][i_306];
common/dct.c:330:5: note: worklist: examine stmt: a7_60 = _57 + _59;
common/dct.c:330:5: note: vect_is_simple_use: operand _57
common/dct.c:330:5: note: def_stmt: _57 = _45 + _56;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: vect_is_simple_use: operand _59
common/dct.c:330:5: note: def_stmt: _59 = (int) _58;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: worklist: examine stmt: _59 = (int) _58;
common/dct.c:330:5: note: vect_is_simple_use: operand _58
common/dct.c:330:5: note: def_stmt: _58 = _44 >> 1;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: worklist: examine stmt: _58 = _44 >> 1;
common/dct.c:330:5: note: vect_is_simple_use: operand _44
common/dct.c:330:5: note: def_stmt: _44 = MEM[(int16_t[8] *)dct_6(D) + 16B][i_306];
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: worklist: examine stmt: _44 = MEM[(int16_t[8] *)dct_6(D) + 16B][i_306];
common/dct.c:330:5: note: worklist: examine stmt: _57 = _45 + _56;
common/dct.c:330:5: note: vect_is_simple_use: operand _45
common/dct.c:330:5: note: def_stmt: _45 = (int) _44;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: vect_is_simple_use: operand _56
common/dct.c:330:5: note: def_stmt: _56 = _34 + _36;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: worklist: examine stmt: _56 = _34 + _36;
common/dct.c:330:5: note: vect_is_simple_use: operand _34
common/dct.c:330:5: note: def_stmt: _34 = (int) _33;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: already marked relevant/live.
common/dct.c:330:5: note: vect_is_simple_use: operand _36
common/dct.c:330:5: note: def_stmt: _36 = (int) _35;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: already marked relevant/live.
common/dct.c:330:5: note: worklist: examine stmt: _45 = (int) _44;
common/dct.c:330:5: note: vect_is_simple_use: operand _44
common/dct.c:330:5: note: def_stmt: _44 = MEM[(int16_t[8] *)dct_6(D) + 16B][i_306];
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: already marked relevant/live.
common/dct.c:330:5: note: worklist: examine stmt: _69 = (unsigned short) b0_29;
common/dct.c:330:5: note: vect_is_simple_use: operand b0_29
common/dct.c:330:5: note: def_stmt: b0_29 = a0_16 + a6_28;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: worklist: examine stmt: b0_29 = a0_16 + a6_28;
common/dct.c:330:5: note: vect_is_simple_use: operand a0_16
common/dct.c:330:5: note: def_stmt: a0_16 = _13 + _15;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: vect_is_simple_use: operand a6_28
common/dct.c:330:5: note: def_stmt: a6_28 = _26 + _27;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: worklist: examine stmt: a6_28 = _26 + _27;
common/dct.c:330:5: note: vect_is_simple_use: operand _26
common/dct.c:330:5: note: def_stmt: _26 = (int) _25;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: vect_is_simple_use: operand _27
common/dct.c:330:5: note: def_stmt: _27 = (int) _19;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: worklist: examine stmt: _27 = (int) _19;
common/dct.c:330:5: note: vect_is_simple_use: operand _19
common/dct.c:330:5: note: def_stmt: _19 = MEM[(int16_t[8] *)dct_6(D) + 32B][i_306];
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: worklist: examine stmt: _19 = MEM[(int16_t[8] *)dct_6(D) + 32B][i_306];
common/dct.c:330:5: note: worklist: examine stmt: _26 = (int) _25;
common/dct.c:330:5: note: vect_is_simple_use: operand _25
common/dct.c:330:5: note: def_stmt: _25 = _22 >> 1;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: worklist: examine stmt: _25 = _22 >> 1;
common/dct.c:330:5: note: vect_is_simple_use: operand _22
common/dct.c:330:5: note: def_stmt: _22 = MEM[(int16_t[8] *)dct_6(D) + 96B][i_306];
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: worklist: examine stmt: _22 = MEM[(int16_t[8] *)dct_6(D) + 96B][i_306];
common/dct.c:330:5: note: worklist: examine stmt: a0_16 = _13 + _15;
common/dct.c:330:5: note: vect_is_simple_use: operand _13
common/dct.c:330:5: note: def_stmt: _13 = (int) _12;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: vect_is_simple_use: operand _15
common/dct.c:330:5: note: def_stmt: _15 = (int) _14;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: worklist: examine stmt: _15 = (int) _14;
common/dct.c:330:5: note: vect_is_simple_use: operand _14
common/dct.c:330:5: note: def_stmt: _14 = MEM[(int16_t[8] *)dct_6(D) + 64B][i_306];
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: worklist: examine stmt: _14 = MEM[(int16_t[8] *)dct_6(D) + 64B][i_306];
common/dct.c:330:5: note: worklist: examine stmt: _13 = (int) _12;
common/dct.c:330:5: note: vect_is_simple_use: operand _12
common/dct.c:330:5: note: def_stmt: _12 = *dct_6(D)[i_306];
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: worklist: examine stmt: _12 = *dct_6(D)[i_306];
common/dct.c:330:5: note: worklist: examine stmt: MEM[(int16_t[8] *)dct_6(D) + 96B][i_306] = _96;
common/dct.c:330:5: note: vect_is_simple_use: operand _96
common/dct.c:330:5: note: def_stmt: _96 = (short int) _95;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: worklist: examine stmt: _96 = (short int) _95;
common/dct.c:330:5: note: vect_is_simple_use: operand _95
common/dct.c:330:5: note: def_stmt: _95 = _74 - _75;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: worklist: examine stmt: _95 = _74 - _75;
common/dct.c:330:5: note: vect_is_simple_use: operand _74
common/dct.c:330:5: note: def_stmt: _74 = (unsigned short) b2_30;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: vect_is_simple_use: operand _75
common/dct.c:330:5: note: def_stmt: _75 = (unsigned short) b5_66;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: worklist: examine stmt: _75 = (unsigned short) b5_66;
common/dct.c:330:5: note: vect_is_simple_use: operand b5_66
common/dct.c:330:5: note: def_stmt: b5_66 = _65 - a5_55;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: worklist: examine stmt: b5_66 = _65 - a5_55;
common/dct.c:330:5: note: vect_is_simple_use: operand _65
common/dct.c:330:5: note: def_stmt: _65 = a3_50 >> 2;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: vect_is_simple_use: operand a5_55
common/dct.c:330:5: note: def_stmt: a5_55 = _52 + _54;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: worklist: examine stmt: a5_55 = _52 + _54;
common/dct.c:330:5: note: vect_is_simple_use: operand _52
common/dct.c:330:5: note: def_stmt: _52 = _34 + _51;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: vect_is_simple_use: operand _54
common/dct.c:330:5: note: def_stmt: _54 = (int) _53;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: worklist: examine stmt: _54 = (int) _53;
common/dct.c:330:5: note: vect_is_simple_use: operand _53
common/dct.c:330:5: note: def_stmt: _53 = _33 >> 1;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: worklist: examine stmt: _53 = _33 >> 1;
common/dct.c:330:5: note: vect_is_simple_use: operand _33
common/dct.c:330:5: note: def_stmt: _33 = MEM[(int16_t[8] *)dct_6(D) + 80B][i_306];
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: already marked relevant/live.
common/dct.c:330:5: note: worklist: examine stmt: _52 = _34 + _51;
common/dct.c:330:5: note: vect_is_simple_use: operand _34
common/dct.c:330:5: note: def_stmt: _34 = (int) _33;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: already marked relevant/live.
common/dct.c:330:5: note: vect_is_simple_use: operand _51
common/dct.c:330:5: note: def_stmt: _51 = _39 - _45;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: worklist: examine stmt: _51 = _39 - _45;
common/dct.c:330:5: note: vect_is_simple_use: operand _39
common/dct.c:330:5: note: def_stmt: _39 = (int) _38;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: already marked relevant/live.
common/dct.c:330:5: note: vect_is_simple_use: operand _45
common/dct.c:330:5: note: def_stmt: _45 = (int) _44;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: already marked relevant/live.
common/dct.c:330:5: note: worklist: examine stmt: _65 = a3_50 >> 2;
common/dct.c:330:5: note: vect_is_simple_use: operand a3_50
common/dct.c:330:5: note: def_stmt: a3_50 = _47 - _49;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: worklist: examine stmt: a3_50 = _47 - _49;
common/dct.c:330:5: note: vect_is_simple_use: operand _47
common/dct.c:330:5: note: def_stmt: _47 = _46 - _36;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: vect_is_simple_use: operand _49
common/dct.c:330:5: note: def_stmt: _49 = (int) _48;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: worklist: examine stmt: _49 = (int) _48;
common/dct.c:330:5: note: vect_is_simple_use: operand _48
common/dct.c:330:5: note: def_stmt: _48 = _35 >> 1;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: worklist: examine stmt: _48 = _35 >> 1;
common/dct.c:330:5: note: vect_is_simple_use: operand _35
common/dct.c:330:5: note: def_stmt: _35 = MEM[(int16_t[8] *)dct_6(D) + 48B][i_306];
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: already marked relevant/live.
common/dct.c:330:5: note: worklist: examine stmt: _47 = _46 - _36;
common/dct.c:330:5: note: vect_is_simple_use: operand _46
common/dct.c:330:5: note: def_stmt: _46 = _39 + _45;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: vect_is_simple_use: operand _36
common/dct.c:330:5: note: def_stmt: _36 = (int) _35;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: already marked relevant/live.
common/dct.c:330:5: note: worklist: examine stmt: _46 = _39 + _45;
common/dct.c:330:5: note: vect_is_simple_use: operand _39
common/dct.c:330:5: note: def_stmt: _39 = (int) _38;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: already marked relevant/live.
common/dct.c:330:5: note: vect_is_simple_use: operand _45
common/dct.c:330:5: note: def_stmt: _45 = (int) _44;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: already marked relevant/live.
common/dct.c:330:5: note: worklist: examine stmt: _74 = (unsigned short) b2_30;
common/dct.c:330:5: note: vect_is_simple_use: operand b2_30
common/dct.c:330:5: note: def_stmt: b2_30 = a2_18 + a4_24;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: worklist: examine stmt: b2_30 = a2_18 + a4_24;
common/dct.c:330:5: note: vect_is_simple_use: operand a2_18
common/dct.c:330:5: note: def_stmt: a2_18 = _13 - _15;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: vect_is_simple_use: operand a4_24
common/dct.c:330:5: note: def_stmt: a4_24 = _21 - _23;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: worklist: examine stmt: a4_24 = _21 - _23;
common/dct.c:330:5: note: vect_is_simple_use: operand _21
common/dct.c:330:5: note: def_stmt: _21 = (int) _20;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: vect_is_simple_use: operand _23
common/dct.c:330:5: note: def_stmt: _23 = (int) _22;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: worklist: examine stmt: _23 = (int) _22;
common/dct.c:330:5: note: vect_is_simple_use: operand _22
common/dct.c:330:5: note: def_stmt: _22 = MEM[(int16_t[8] *)dct_6(D) + 96B][i_306];
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: already marked relevant/live.
common/dct.c:330:5: note: worklist: examine stmt: _21 = (int) _20;
common/dct.c:330:5: note: vect_is_simple_use: operand _20
common/dct.c:330:5: note: def_stmt: _20 = _19 >> 1;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: worklist: examine stmt: _20 = _19 >> 1;
common/dct.c:330:5: note: vect_is_simple_use: operand _19
common/dct.c:330:5: note: def_stmt: _19 = MEM[(int16_t[8] *)dct_6(D) + 32B][i_306];
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: already marked relevant/live.
common/dct.c:330:5: note: worklist: examine stmt: a2_18 = _13 - _15;
common/dct.c:330:5: note: vect_is_simple_use: operand _13
common/dct.c:330:5: note: def_stmt: _13 = (int) _12;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: already marked relevant/live.
common/dct.c:330:5: note: vect_is_simple_use: operand _15
common/dct.c:330:5: note: def_stmt: _15 = (int) _14;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: already marked relevant/live.
common/dct.c:330:5: note: worklist: examine stmt: MEM[(int16_t[8] *)dct_6(D) + 80B][i_306] = _93;
common/dct.c:330:5: note: vect_is_simple_use: operand _93
common/dct.c:330:5: note: def_stmt: _93 = (short int) _92;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: worklist: examine stmt: _93 = (short int) _92;
common/dct.c:330:5: note: vect_is_simple_use: operand _92
common/dct.c:330:5: note: def_stmt: _92 = _79 - _80;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: worklist: examine stmt: _92 = _79 - _80;
common/dct.c:330:5: note: vect_is_simple_use: operand _79
common/dct.c:330:5: note: def_stmt: _79 = (unsigned short) b4_31;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: vect_is_simple_use: operand _80
common/dct.c:330:5: note: def_stmt: _80 = (unsigned short) b3_64;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: worklist: examine stmt: _80 = (unsigned short) b3_64;
common/dct.c:330:5: note: vect_is_simple_use: operand b3_64
common/dct.c:330:5: note: def_stmt: b3_64 = a3_50 + _63;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: worklist: examine stmt: b3_64 = a3_50 + _63;
common/dct.c:330:5: note: vect_is_simple_use: operand a3_50
common/dct.c:330:5: note: def_stmt: a3_50 = _47 - _49;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: already marked relevant/live.
common/dct.c:330:5: note: vect_is_simple_use: operand _63
common/dct.c:330:5: note: def_stmt: _63 = a5_55 >> 2;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: worklist: examine stmt: _63 = a5_55 >> 2;
common/dct.c:330:5: note: vect_is_simple_use: operand a5_55
common/dct.c:330:5: note: def_stmt: a5_55 = _52 + _54;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: already marked relevant/live.
common/dct.c:330:5: note: worklist: examine stmt: _79 = (unsigned short) b4_31;
common/dct.c:330:5: note: vect_is_simple_use: operand b4_31
common/dct.c:330:5: note: def_stmt: b4_31 = a2_18 - a4_24;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: worklist: examine stmt: b4_31 = a2_18 - a4_24;
common/dct.c:330:5: note: vect_is_simple_use: operand a2_18
common/dct.c:330:5: note: def_stmt: a2_18 = _13 - _15;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: already marked relevant/live.
common/dct.c:330:5: note: vect_is_simple_use: operand a4_24
common/dct.c:330:5: note: def_stmt: a4_24 = _21 - _23;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: already marked relevant/live.
common/dct.c:330:5: note: worklist: examine stmt: MEM[(int16_t[8] *)dct_6(D) + 64B][i_306] = _90;
common/dct.c:330:5: note: vect_is_simple_use: operand _90
common/dct.c:330:5: note: def_stmt: _90 = (short int) _89;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: worklist: examine stmt: _90 = (short int) _89;
common/dct.c:330:5: note: vect_is_simple_use: operand _89
common/dct.c:330:5: note: def_stmt: _89 = _84 - _85;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: worklist: examine stmt: _89 = _84 - _85;
common/dct.c:330:5: note: vect_is_simple_use: operand _84
common/dct.c:330:5: note: def_stmt: _84 = (unsigned short) b6_32;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: vect_is_simple_use: operand _85
common/dct.c:330:5: note: def_stmt: _85 = (unsigned short) b1_62;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: worklist: examine stmt: _85 = (unsigned short) b1_62;
common/dct.c:330:5: note: vect_is_simple_use: operand b1_62
common/dct.c:330:5: note: def_stmt: b1_62 = a1_43 + _61;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: worklist: examine stmt: b1_62 = a1_43 + _61;
common/dct.c:330:5: note: vect_is_simple_use: operand a1_43
common/dct.c:330:5: note: def_stmt: a1_43 = _40 - _42;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: already marked relevant/live.
common/dct.c:330:5: note: vect_is_simple_use: operand _61
common/dct.c:330:5: note: def_stmt: _61 = a7_60 >> 2;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: worklist: examine stmt: _61 = a7_60 >> 2;
common/dct.c:330:5: note: vect_is_simple_use: operand a7_60
common/dct.c:330:5: note: def_stmt: a7_60 = _57 + _59;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: already marked relevant/live.
common/dct.c:330:5: note: worklist: examine stmt: _84 = (unsigned short) b6_32;
common/dct.c:330:5: note: vect_is_simple_use: operand b6_32
common/dct.c:330:5: note: def_stmt: b6_32 = a0_16 - a6_28;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: worklist: examine stmt: b6_32 = a0_16 - a6_28;
common/dct.c:330:5: note: vect_is_simple_use: operand a0_16
common/dct.c:330:5: note: def_stmt: a0_16 = _13 + _15;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: already marked relevant/live.
common/dct.c:330:5: note: vect_is_simple_use: operand a6_28
common/dct.c:330:5: note: def_stmt: a6_28 = _26 + _27;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: already marked relevant/live.
common/dct.c:330:5: note: worklist: examine stmt: MEM[(int16_t[8] *)dct_6(D) + 48B][i_306] = _87;
common/dct.c:330:5: note: vect_is_simple_use: operand _87
common/dct.c:330:5: note: def_stmt: _87 = (short int) _86;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: worklist: examine stmt: _87 = (short int) _86;
common/dct.c:330:5: note: vect_is_simple_use: operand _86
common/dct.c:330:5: note: def_stmt: _86 = _84 + _85;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: worklist: examine stmt: _86 = _84 + _85;
common/dct.c:330:5: note: vect_is_simple_use: operand _84
common/dct.c:330:5: note: def_stmt: _84 = (unsigned short) b6_32;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: already marked relevant/live.
common/dct.c:330:5: note: vect_is_simple_use: operand _85
common/dct.c:330:5: note: def_stmt: _85 = (unsigned short) b1_62;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: already marked relevant/live.
common/dct.c:330:5: note: worklist: examine stmt: MEM[(int16_t[8] *)dct_6(D) + 32B][i_306] = _82;
common/dct.c:330:5: note: vect_is_simple_use: operand _82
common/dct.c:330:5: note: def_stmt: _82 = (short int) _81;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: worklist: examine stmt: _82 = (short int) _81;
common/dct.c:330:5: note: vect_is_simple_use: operand _81
common/dct.c:330:5: note: def_stmt: _81 = _79 + _80;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: worklist: examine stmt: _81 = _79 + _80;
common/dct.c:330:5: note: vect_is_simple_use: operand _79
common/dct.c:330:5: note: def_stmt: _79 = (unsigned short) b4_31;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: already marked relevant/live.
common/dct.c:330:5: note: vect_is_simple_use: operand _80
common/dct.c:330:5: note: def_stmt: _80 = (unsigned short) b3_64;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: already marked relevant/live.
common/dct.c:330:5: note: worklist: examine stmt: MEM[(int16_t[8] *)dct_6(D) + 16B][i_306] = _77;
common/dct.c:330:5: note: vect_is_simple_use: operand _77
common/dct.c:330:5: note: def_stmt: _77 = (short int) _76;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: worklist: examine stmt: _77 = (short int) _76;
common/dct.c:330:5: note: vect_is_simple_use: operand _76
common/dct.c:330:5: note: def_stmt: _76 = _74 + _75;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: worklist: examine stmt: _76 = _74 + _75;
common/dct.c:330:5: note: vect_is_simple_use: operand _74
common/dct.c:330:5: note: def_stmt: _74 = (unsigned short) b2_30;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: already marked relevant/live.
common/dct.c:330:5: note: vect_is_simple_use: operand _75
common/dct.c:330:5: note: def_stmt: _75 = (unsigned short) b5_66;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: already marked relevant/live.
common/dct.c:330:5: note: worklist: examine stmt: *dct_6(D)[i_306] = _72;
common/dct.c:330:5: note: vect_is_simple_use: operand _72
common/dct.c:330:5: note: def_stmt: _72 = (short int) _71;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: worklist: examine stmt: _72 = (short int) _71;
common/dct.c:330:5: note: vect_is_simple_use: operand _71
common/dct.c:330:5: note: def_stmt: _71 = _69 + _70;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: worklist: examine stmt: _71 = _69 + _70;
common/dct.c:330:5: note: vect_is_simple_use: operand _69
common/dct.c:330:5: note: def_stmt: _69 = (unsigned short) b0_29;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: already marked relevant/live.
common/dct.c:330:5: note: vect_is_simple_use: operand _70
common/dct.c:330:5: note: def_stmt: _70 = (unsigned short) b7_68;
common/dct.c:330:5: note: type of def: 3.
common/dct.c:330:5: note: mark relevant 4, live 0.
common/dct.c:330:5: note: already marked relevant/live.
common/dct.c:330:5: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _12 = *dct_6(D)[i_306];
  stmt_b: _14 = MEM[(int16_t[8] *)dct_6(D) + 64B][i_306];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _12 = *dct_6(D)[i_306];
  stmt_b: _19 = MEM[(int16_t[8] *)dct_6(D) + 32B][i_306];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _12 = *dct_6(D)[i_306];
  stmt_b: _22 = MEM[(int16_t[8] *)dct_6(D) + 96B][i_306];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _12 = *dct_6(D)[i_306];
  stmt_b: _33 = MEM[(int16_t[8] *)dct_6(D) + 80B][i_306];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _12 = *dct_6(D)[i_306];
  stmt_b: _35 = MEM[(int16_t[8] *)dct_6(D) + 48B][i_306];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _12 = *dct_6(D)[i_306];
  stmt_b: _38 = MEM[(int16_t[8] *)dct_6(D) + 112B][i_306];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _12 = *dct_6(D)[i_306];
  stmt_b: _44 = MEM[(int16_t[8] *)dct_6(D) + 16B][i_306];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _12 = *dct_6(D)[i_306];
  stmt_b: *dct_6(D)[i_306] = _72;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _12 = *dct_6(D)[i_306];
  stmt_b: MEM[(int16_t[8] *)dct_6(D) + 16B][i_306] = _77;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _12 = *dct_6(D)[i_306];
  stmt_b: MEM[(int16_t[8] *)dct_6(D) + 32B][i_306] = _82;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _12 = *dct_6(D)[i_306];
  stmt_b: MEM[(int16_t[8] *)dct_6(D) + 48B][i_306] = _87;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _12 = *dct_6(D)[i_306];
  stmt_b: MEM[(int16_t[8] *)dct_6(D) + 64B][i_306] = _90;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _12 = *dct_6(D)[i_306];
  stmt_b: MEM[(int16_t[8] *)dct_6(D) + 80B][i_306] = _93;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _12 = *dct_6(D)[i_306];
  stmt_b: MEM[(int16_t[8] *)dct_6(D) + 96B][i_306] = _96;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _12 = *dct_6(D)[i_306];
  stmt_b: MEM[(int16_t[8] *)dct_6(D) + 112B][i_306] = _99;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _14 = MEM[(int16_t[8] *)dct_6(D) + 64B][i_306];
  stmt_b: _19 = MEM[(int16_t[8] *)dct_6(D) + 32B][i_306];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _14 = MEM[(int16_t[8] *)dct_6(D) + 64B][i_306];
  stmt_b: _22 = MEM[(int16_t[8] *)dct_6(D) + 96B][i_306];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _14 = MEM[(int16_t[8] *)dct_6(D) + 64B][i_306];
  stmt_b: _33 = MEM[(int16_t[8] *)dct_6(D) + 80B][i_306];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _14 = MEM[(int16_t[8] *)dct_6(D) + 64B][i_306];
  stmt_b: _35 = MEM[(int16_t[8] *)dct_6(D) + 48B][i_306];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _14 = MEM[(int16_t[8] *)dct_6(D) + 64B][i_306];
  stmt_b: _38 = MEM[(int16_t[8] *)dct_6(D) + 112B][i_306];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _14 = MEM[(int16_t[8] *)dct_6(D) + 64B][i_306];
  stmt_b: _44 = MEM[(int16_t[8] *)dct_6(D) + 16B][i_306];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _14 = MEM[(int16_t[8] *)dct_6(D) + 64B][i_306];
  stmt_b: *dct_6(D)[i_306] = _72;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _14 = MEM[(int16_t[8] *)dct_6(D) + 64B][i_306];
  stmt_b: MEM[(int16_t[8] *)dct_6(D) + 16B][i_306] = _77;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _14 = MEM[(int16_t[8] *)dct_6(D) + 64B][i_306];
  stmt_b: MEM[(int16_t[8] *)dct_6(D) + 32B][i_306] = _82;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _14 = MEM[(int16_t[8] *)dct_6(D) + 64B][i_306];
  stmt_b: MEM[(int16_t[8] *)dct_6(D) + 48B][i_306] = _87;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _14 = MEM[(int16_t[8] *)dct_6(D) + 64B][i_306];
  stmt_b: MEM[(int16_t[8] *)dct_6(D) + 64B][i_306] = _90;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _14 = MEM[(int16_t[8] *)dct_6(D) + 64B][i_306];
  stmt_b: MEM[(int16_t[8] *)dct_6(D) + 80B][i_306] = _93;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _14 = MEM[(int16_t[8] *)dct_6(D) + 64B][i_306];
  stmt_b: MEM[(int16_t[8] *)dct_6(D) + 96B][i_306] = _96;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _14 = MEM[(int16_t[8] *)dct_6(D) + 64B][i_306];
  stmt_b: MEM[(int16_t[8] *)dct_6(D) + 112B][i_306] = _99;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _19 = MEM[(int16_t[8] *)dct_6(D) + 32B][i_306];
  stmt_b: _22 = MEM[(int16_t[8] *)dct_6(D) + 96B][i_306];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _19 = MEM[(int16_t[8] *)dct_6(D) + 32B][i_306];
  stmt_b: _33 = MEM[(int16_t[8] *)dct_6(D) + 80B][i_306];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _19 = MEM[(int16_t[8] *)dct_6(D) + 32B][i_306];
  stmt_b: _35 = MEM[(int16_t[8] *)dct_6(D) + 48B][i_306];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _19 = MEM[(int16_t[8] *)dct_6(D) + 32B][i_306];
  stmt_b: _38 = MEM[(int16_t[8] *)dct_6(D) + 112B][i_306];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _19 = MEM[(int16_t[8] *)dct_6(D) + 32B][i_306];
  stmt_b: _44 = MEM[(int16_t[8] *)dct_6(D) + 16B][i_306];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _19 = MEM[(int16_t[8] *)dct_6(D) + 32B][i_306];
  stmt_b: *dct_6(D)[i_306] = _72;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _19 = MEM[(int16_t[8] *)dct_6(D) + 32B][i_306];
  stmt_b: MEM[(int16_t[8] *)dct_6(D) + 16B][i_306] = _77;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _19 = MEM[(int16_t[8] *)dct_6(D) + 32B][i_306];
  stmt_b: MEM[(int16_t[8] *)dct_6(D) + 32B][i_306] = _82;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _19 = MEM[(int16_t[8] *)dct_6(D) + 32B][i_306];
  stmt_b: MEM[(int16_t[8] *)dct_6(D) + 48B][i_306] = _87;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _19 = MEM[(int16_t[8] *)dct_6(D) + 32B][i_306];
  stmt_b: MEM[(int16_t[8] *)dct_6(D) + 64B][i_306] = _90;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _19 = MEM[(int16_t[8] *)dct_6(D) + 32B][i_306];
  stmt_b: MEM[(int16_t[8] *)dct_6(D) + 80B][i_306] = _93;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _19 = MEM[(int16_t[8] *)dct_6(D) + 32B][i_306];
  stmt_b: MEM[(int16_t[8] *)dct_6(D) + 96B][i_306] = _96;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _19 = MEM[(int16_t[8] *)dct_6(D) + 32B][i_306];
  stmt_b: MEM[(int16_t[8] *)dct_6(D) + 112B][i_306] = _99;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _22 = MEM[(int16_t[8] *)dct_6(D) + 96B][i_306];
  stmt_b: _33 = MEM[(int16_t[8] *)dct_6(D) + 80B][i_306];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _22 = MEM[(int16_t[8] *)dct_6(D) + 96B][i_306];
  stmt_b: _35 = MEM[(int16_t[8] *)dct_6(D) + 48B][i_306];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _22 = MEM[(int16_t[8] *)dct_6(D) + 96B][i_306];
  stmt_b: _38 = MEM[(int16_t[8] *)dct_6(D) + 112B][i_306];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _22 = MEM[(int16_t[8] *)dct_6(D) + 96B][i_306];
  stmt_b: _44 = MEM[(int16_t[8] *)dct_6(D) + 16B][i_306];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _22 = MEM[(int16_t[8] *)dct_6(D) + 96B][i_306];
  stmt_b: *dct_6(D)[i_306] = _72;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _22 = MEM[(int16_t[8] *)dct_6(D) + 96B][i_306];
  stmt_b: MEM[(int16_t[8] *)dct_6(D) + 16B][i_306] = _77;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _22 = MEM[(int16_t[8] *)dct_6(D) + 96B][i_306];
  stmt_b: MEM[(int16_t[8] *)dct_6(D) + 32B][i_306] = _82;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _22 = MEM[(int16_t[8] *)dct_6(D) + 96B][i_306];
  stmt_b: MEM[(int16_t[8] *)dct_6(D) + 48B][i_306] = _87;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _22 = MEM[(int16_t[8] *)dct_6(D) + 96B][i_306];
  stmt_b: MEM[(int16_t[8] *)dct_6(D) + 64B][i_306] = _90;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _22 = MEM[(int16_t[8] *)dct_6(D) + 96B][i_306];
  stmt_b: MEM[(int16_t[8] *)dct_6(D) + 80B][i_306] = _93;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _22 = MEM[(int16_t[8] *)dct_6(D) + 96B][i_306];
  stmt_b: MEM[(int16_t[8] *)dct_6(D) + 96B][i_306] = _96;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _22 = MEM[(int16_t[8] *)dct_6(D) + 96B][i_306];
  stmt_b: MEM[(int16_t[8] *)dct_6(D) + 112B][i_306] = _99;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _33 = MEM[(int16_t[8] *)dct_6(D) + 80B][i_306];
  stmt_b: _35 = MEM[(int16_t[8] *)dct_6(D) + 48B][i_306];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _33 = MEM[(int16_t[8] *)dct_6(D) + 80B][i_306];
  stmt_b: _38 = MEM[(int16_t[8] *)dct_6(D) + 112B][i_306];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _33 = MEM[(int16_t[8] *)dct_6(D) + 80B][i_306];
  stmt_b: _44 = MEM[(int16_t[8] *)dct_6(D) + 16B][i_306];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _33 = MEM[(int16_t[8] *)dct_6(D) + 80B][i_306];
  stmt_b: *dct_6(D)[i_306] = _72;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _33 = MEM[(int16_t[8] *)dct_6(D) + 80B][i_306];
  stmt_b: MEM[(int16_t[8] *)dct_6(D) + 16B][i_306] = _77;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _33 = MEM[(int16_t[8] *)dct_6(D) + 80B][i_306];
  stmt_b: MEM[(int16_t[8] *)dct_6(D) + 32B][i_306] = _82;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _33 = MEM[(int16_t[8] *)dct_6(D) + 80B][i_306];
  stmt_b: MEM[(int16_t[8] *)dct_6(D) + 48B][i_306] = _87;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _33 = MEM[(int16_t[8] *)dct_6(D) + 80B][i_306];
  stmt_b: MEM[(int16_t[8] *)dct_6(D) + 64B][i_306] = _90;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _33 = MEM[(int16_t[8] *)dct_6(D) + 80B][i_306];
  stmt_b: MEM[(int16_t[8] *)dct_6(D) + 80B][i_306] = _93;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _33 = MEM[(int16_t[8] *)dct_6(D) + 80B][i_306];
  stmt_b: MEM[(int16_t[8] *)dct_6(D) + 96B][i_306] = _96;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _33 = MEM[(int16_t[8] *)dct_6(D) + 80B][i_306];
  stmt_b: MEM[(int16_t[8] *)dct_6(D) + 112B][i_306] = _99;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _35 = MEM[(int16_t[8] *)dct_6(D) + 48B][i_306];
  stmt_b: _38 = MEM[(int16_t[8] *)dct_6(D) + 112B][i_306];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _35 = MEM[(int16_t[8] *)dct_6(D) + 48B][i_306];
  stmt_b: _44 = MEM[(int16_t[8] *)dct_6(D) + 16B][i_306];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _35 = MEM[(int16_t[8] *)dct_6(D) + 48B][i_306];
  stmt_b: *dct_6(D)[i_306] = _72;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _35 = MEM[(int16_t[8] *)dct_6(D) + 48B][i_306];
  stmt_b: MEM[(int16_t[8] *)dct_6(D) + 16B][i_306] = _77;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _35 = MEM[(int16_t[8] *)dct_6(D) + 48B][i_306];
  stmt_b: MEM[(int16_t[8] *)dct_6(D) + 32B][i_306] = _82;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _35 = MEM[(int16_t[8] *)dct_6(D) + 48B][i_306];
  stmt_b: MEM[(int16_t[8] *)dct_6(D) + 48B][i_306] = _87;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _35 = MEM[(int16_t[8] *)dct_6(D) + 48B][i_306];
  stmt_b: MEM[(int16_t[8] *)dct_6(D) + 64B][i_306] = _90;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _35 = MEM[(int16_t[8] *)dct_6(D) + 48B][i_306];
  stmt_b: MEM[(int16_t[8] *)dct_6(D) + 80B][i_306] = _93;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _35 = MEM[(int16_t[8] *)dct_6(D) + 48B][i_306];
  stmt_b: MEM[(int16_t[8] *)dct_6(D) + 96B][i_306] = _96;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _35 = MEM[(int16_t[8] *)dct_6(D) + 48B][i_306];
  stmt_b: MEM[(int16_t[8] *)dct_6(D) + 112B][i_306] = _99;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _38 = MEM[(int16_t[8] *)dct_6(D) + 112B][i_306];
  stmt_b: _44 = MEM[(int16_t[8] *)dct_6(D) + 16B][i_306];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _38 = MEM[(int16_t[8] *)dct_6(D) + 112B][i_306];
  stmt_b: *dct_6(D)[i_306] = _72;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _38 = MEM[(int16_t[8] *)dct_6(D) + 112B][i_306];
  stmt_b: MEM[(int16_t[8] *)dct_6(D) + 16B][i_306] = _77;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _38 = MEM[(int16_t[8] *)dct_6(D) + 112B][i_306];
  stmt_b: MEM[(int16_t[8] *)dct_6(D) + 32B][i_306] = _82;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _38 = MEM[(int16_t[8] *)dct_6(D) + 112B][i_306];
  stmt_b: MEM[(int16_t[8] *)dct_6(D) + 48B][i_306] = _87;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _38 = MEM[(int16_t[8] *)dct_6(D) + 112B][i_306];
  stmt_b: MEM[(int16_t[8] *)dct_6(D) + 64B][i_306] = _90;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _38 = MEM[(int16_t[8] *)dct_6(D) + 112B][i_306];
  stmt_b: MEM[(int16_t[8] *)dct_6(D) + 80B][i_306] = _93;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _38 = MEM[(int16_t[8] *)dct_6(D) + 112B][i_306];
  stmt_b: MEM[(int16_t[8] *)dct_6(D) + 96B][i_306] = _96;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _38 = MEM[(int16_t[8] *)dct_6(D) + 112B][i_306];
  stmt_b: MEM[(int16_t[8] *)dct_6(D) + 112B][i_306] = _99;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _44 = MEM[(int16_t[8] *)dct_6(D) + 16B][i_306];
  stmt_b: *dct_6(D)[i_306] = _72;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _44 = MEM[(int16_t[8] *)dct_6(D) + 16B][i_306];
  stmt_b: MEM[(int16_t[8] *)dct_6(D) + 16B][i_306] = _77;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _44 = MEM[(int16_t[8] *)dct_6(D) + 16B][i_306];
  stmt_b: MEM[(int16_t[8] *)dct_6(D) + 32B][i_306] = _82;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _44 = MEM[(int16_t[8] *)dct_6(D) + 16B][i_306];
  stmt_b: MEM[(int16_t[8] *)dct_6(D) + 48B][i_306] = _87;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _44 = MEM[(int16_t[8] *)dct_6(D) + 16B][i_306];
  stmt_b: MEM[(int16_t[8] *)dct_6(D) + 64B][i_306] = _90;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _44 = MEM[(int16_t[8] *)dct_6(D) + 16B][i_306];
  stmt_b: MEM[(int16_t[8] *)dct_6(D) + 80B][i_306] = _93;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _44 = MEM[(int16_t[8] *)dct_6(D) + 16B][i_306];
  stmt_b: MEM[(int16_t[8] *)dct_6(D) + 96B][i_306] = _96;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _44 = MEM[(int16_t[8] *)dct_6(D) + 16B][i_306];
  stmt_b: MEM[(int16_t[8] *)dct_6(D) + 112B][i_306] = _99;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: *dct_6(D)[i_306] = _72;
  stmt_b: MEM[(int16_t[8] *)dct_6(D) + 16B][i_306] = _77;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: *dct_6(D)[i_306] = _72;
  stmt_b: MEM[(int16_t[8] *)dct_6(D) + 32B][i_306] = _82;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: *dct_6(D)[i_306] = _72;
  stmt_b: MEM[(int16_t[8] *)dct_6(D) + 48B][i_306] = _87;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: *dct_6(D)[i_306] = _72;
  stmt_b: MEM[(int16_t[8] *)dct_6(D) + 64B][i_306] = _90;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: *dct_6(D)[i_306] = _72;
  stmt_b: MEM[(int16_t[8] *)dct_6(D) + 80B][i_306] = _93;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: *dct_6(D)[i_306] = _72;
  stmt_b: MEM[(int16_t[8] *)dct_6(D) + 96B][i_306] = _96;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: *dct_6(D)[i_306] = _72;
  stmt_b: MEM[(int16_t[8] *)dct_6(D) + 112B][i_306] = _99;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: MEM[(int16_t[8] *)dct_6(D) + 16B][i_306] = _77;
  stmt_b: MEM[(int16_t[8] *)dct_6(D) + 32B][i_306] = _82;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: MEM[(int16_t[8] *)dct_6(D) + 16B][i_306] = _77;
  stmt_b: MEM[(int16_t[8] *)dct_6(D) + 48B][i_306] = _87;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: MEM[(int16_t[8] *)dct_6(D) + 16B][i_306] = _77;
  stmt_b: MEM[(int16_t[8] *)dct_6(D) + 64B][i_306] = _90;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: MEM[(int16_t[8] *)dct_6(D) + 16B][i_306] = _77;
  stmt_b: MEM[(int16_t[8] *)dct_6(D) + 80B][i_306] = _93;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: MEM[(int16_t[8] *)dct_6(D) + 16B][i_306] = _77;
  stmt_b: MEM[(int16_t[8] *)dct_6(D) + 96B][i_306] = _96;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: MEM[(int16_t[8] *)dct_6(D) + 16B][i_306] = _77;
  stmt_b: MEM[(int16_t[8] *)dct_6(D) + 112B][i_306] = _99;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: MEM[(int16_t[8] *)dct_6(D) + 32B][i_306] = _82;
  stmt_b: MEM[(int16_t[8] *)dct_6(D) + 48B][i_306] = _87;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: MEM[(int16_t[8] *)dct_6(D) + 32B][i_306] = _82;
  stmt_b: MEM[(int16_t[8] *)dct_6(D) + 64B][i_306] = _90;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: MEM[(int16_t[8] *)dct_6(D) + 32B][i_306] = _82;
  stmt_b: MEM[(int16_t[8] *)dct_6(D) + 80B][i_306] = _93;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: MEM[(int16_t[8] *)dct_6(D) + 32B][i_306] = _82;
  stmt_b: MEM[(int16_t[8] *)dct_6(D) + 96B][i_306] = _96;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: MEM[(int16_t[8] *)dct_6(D) + 32B][i_306] = _82;
  stmt_b: MEM[(int16_t[8] *)dct_6(D) + 112B][i_306] = _99;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: MEM[(int16_t[8] *)dct_6(D) + 48B][i_306] = _87;
  stmt_b: MEM[(int16_t[8] *)dct_6(D) + 64B][i_306] = _90;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: MEM[(int16_t[8] *)dct_6(D) + 48B][i_306] = _87;
  stmt_b: MEM[(int16_t[8] *)dct_6(D) + 80B][i_306] = _93;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: MEM[(int16_t[8] *)dct_6(D) + 48B][i_306] = _87;
  stmt_b: MEM[(int16_t[8] *)dct_6(D) + 96B][i_306] = _96;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: MEM[(int16_t[8] *)dct_6(D) + 48B][i_306] = _87;
  stmt_b: MEM[(int16_t[8] *)dct_6(D) + 112B][i_306] = _99;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: MEM[(int16_t[8] *)dct_6(D) + 64B][i_306] = _90;
  stmt_b: MEM[(int16_t[8] *)dct_6(D) + 80B][i_306] = _93;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: MEM[(int16_t[8] *)dct_6(D) + 64B][i_306] = _90;
  stmt_b: MEM[(int16_t[8] *)dct_6(D) + 96B][i_306] = _96;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: MEM[(int16_t[8] *)dct_6(D) + 64B][i_306] = _90;
  stmt_b: MEM[(int16_t[8] *)dct_6(D) + 112B][i_306] = _99;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: MEM[(int16_t[8] *)dct_6(D) + 80B][i_306] = _93;
  stmt_b: MEM[(int16_t[8] *)dct_6(D) + 96B][i_306] = _96;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: MEM[(int16_t[8] *)dct_6(D) + 80B][i_306] = _93;
  stmt_b: MEM[(int16_t[8] *)dct_6(D) + 112B][i_306] = _99;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: MEM[(int16_t[8] *)dct_6(D) + 96B][i_306] = _96;
  stmt_b: MEM[(int16_t[8] *)dct_6(D) + 112B][i_306] = _99;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _12 = *dct_6(D)[i_306];
  stmt_b: _12 = *dct_6(D)[i_306];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _14 = MEM[(int16_t[8] *)dct_6(D) + 64B][i_306];
  stmt_b: _14 = MEM[(int16_t[8] *)dct_6(D) + 64B][i_306];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _19 = MEM[(int16_t[8] *)dct_6(D) + 32B][i_306];
  stmt_b: _19 = MEM[(int16_t[8] *)dct_6(D) + 32B][i_306];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _22 = MEM[(int16_t[8] *)dct_6(D) + 96B][i_306];
  stmt_b: _22 = MEM[(int16_t[8] *)dct_6(D) + 96B][i_306];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _33 = MEM[(int16_t[8] *)dct_6(D) + 80B][i_306];
  stmt_b: _33 = MEM[(int16_t[8] *)dct_6(D) + 80B][i_306];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _35 = MEM[(int16_t[8] *)dct_6(D) + 48B][i_306];
  stmt_b: _35 = MEM[(int16_t[8] *)dct_6(D) + 48B][i_306];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _38 = MEM[(int16_t[8] *)dct_6(D) + 112B][i_306];
  stmt_b: _38 = MEM[(int16_t[8] *)dct_6(D) + 112B][i_306];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _44 = MEM[(int16_t[8] *)dct_6(D) + 16B][i_306];
  stmt_b: _44 = MEM[(int16_t[8] *)dct_6(D) + 16B][i_306];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: *dct_6(D)[i_306] = _72;
  stmt_b: *dct_6(D)[i_306] = _72;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: MEM[(int16_t[8] *)dct_6(D) + 16B][i_306] = _77;
  stmt_b: MEM[(int16_t[8] *)dct_6(D) + 16B][i_306] = _77;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: MEM[(int16_t[8] *)dct_6(D) + 32B][i_306] = _82;
  stmt_b: MEM[(int16_t[8] *)dct_6(D) + 32B][i_306] = _82;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: MEM[(int16_t[8] *)dct_6(D) + 48B][i_306] = _87;
  stmt_b: MEM[(int16_t[8] *)dct_6(D) + 48B][i_306] = _87;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: MEM[(int16_t[8] *)dct_6(D) + 64B][i_306] = _90;
  stmt_b: MEM[(int16_t[8] *)dct_6(D) + 64B][i_306] = _90;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: MEM[(int16_t[8] *)dct_6(D) + 80B][i_306] = _93;
  stmt_b: MEM[(int16_t[8] *)dct_6(D) + 80B][i_306] = _93;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: MEM[(int16_t[8] *)dct_6(D) + 96B][i_306] = _96;
  stmt_b: MEM[(int16_t[8] *)dct_6(D) + 96B][i_306] = _96;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: MEM[(int16_t[8] *)dct_6(D) + 112B][i_306] = _99;
  stmt_b: MEM[(int16_t[8] *)dct_6(D) + 112B][i_306] = _99;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/dct.c:330:5: note: dependence distance  = 0.
common/dct.c:330:5: note: dependence distance == 0 between *dct_6(D)[i_306] and *dct_6(D)[i_306]
common/dct.c:330:5: note: versioning for alias required: can't determine dependence between *dct_6(D)[i_306] and MEM[(int16_t[8] *)dct_6(D) + 16B][i_306]
common/dct.c:330:5: note: mark for run-time aliasing test between *dct_6(D)[i_306] and MEM[(int16_t[8] *)dct_6(D) + 16B][i_306]
common/dct.c:330:5: note: versioning for alias required: can't determine dependence between *dct_6(D)[i_306] and MEM[(int16_t[8] *)dct_6(D) + 32B][i_306]
common/dct.c:330:5: note: mark for run-time aliasing test between *dct_6(D)[i_306] and MEM[(int16_t[8] *)dct_6(D) + 32B][i_306]
common/dct.c:330:5: note: versioning for alias required: can't determine dependence between *dct_6(D)[i_306] and MEM[(int16_t[8] *)dct_6(D) + 48B][i_306]
common/dct.c:330:5: note: mark for run-time aliasing test between *dct_6(D)[i_306] and MEM[(int16_t[8] *)dct_6(D) + 48B][i_306]
common/dct.c:330:5: note: versioning for alias required: can't determine dependence between *dct_6(D)[i_306] and MEM[(int16_t[8] *)dct_6(D) + 64B][i_306]
common/dct.c:330:5: note: mark for run-time aliasing test between *dct_6(D)[i_306] and MEM[(int16_t[8] *)dct_6(D) + 64B][i_306]
common/dct.c:330:5: note: versioning for alias required: can't determine dependence between *dct_6(D)[i_306] and MEM[(int16_t[8] *)dct_6(D) + 80B][i_306]
common/dct.c:330:5: note: mark for run-time aliasing test between *dct_6(D)[i_306] and MEM[(int16_t[8] *)dct_6(D) + 80B][i_306]
common/dct.c:330:5: note: versioning for alias required: can't determine dependence between *dct_6(D)[i_306] and MEM[(int16_t[8] *)dct_6(D) + 96B][i_306]
common/dct.c:330:5: note: mark for run-time aliasing test between *dct_6(D)[i_306] and MEM[(int16_t[8] *)dct_6(D) + 96B][i_306]
common/dct.c:330:5: note: versioning for alias required: can't determine dependence between *dct_6(D)[i_306] and MEM[(int16_t[8] *)dct_6(D) + 112B][i_306]
common/dct.c:330:5: note: mark for run-time aliasing test between *dct_6(D)[i_306] and MEM[(int16_t[8] *)dct_6(D) + 112B][i_306]
common/dct.c:330:5: note: versioning for alias required: can't determine dependence between MEM[(int16_t[8] *)dct_6(D) + 64B][i_306] and *dct_6(D)[i_306]
common/dct.c:330:5: note: mark for run-time aliasing test between MEM[(int16_t[8] *)dct_6(D) + 64B][i_306] and *dct_6(D)[i_306]
common/dct.c:330:5: note: versioning for alias required: can't determine dependence between MEM[(int16_t[8] *)dct_6(D) + 64B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 16B][i_306]
common/dct.c:330:5: note: mark for run-time aliasing test between MEM[(int16_t[8] *)dct_6(D) + 64B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 16B][i_306]
common/dct.c:330:5: note: versioning for alias required: can't determine dependence between MEM[(int16_t[8] *)dct_6(D) + 64B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 32B][i_306]
common/dct.c:330:5: note: mark for run-time aliasing test between MEM[(int16_t[8] *)dct_6(D) + 64B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 32B][i_306]
common/dct.c:330:5: note: versioning for alias required: can't determine dependence between MEM[(int16_t[8] *)dct_6(D) + 64B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 48B][i_306]
common/dct.c:330:5: note: mark for run-time aliasing test between MEM[(int16_t[8] *)dct_6(D) + 64B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 48B][i_306]
common/dct.c:330:5: note: dependence distance  = 0.
common/dct.c:330:5: note: dependence distance == 0 between MEM[(int16_t[8] *)dct_6(D) + 64B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 64B][i_306]
common/dct.c:330:5: note: versioning for alias required: can't determine dependence between MEM[(int16_t[8] *)dct_6(D) + 64B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 80B][i_306]
common/dct.c:330:5: note: mark for run-time aliasing test between MEM[(int16_t[8] *)dct_6(D) + 64B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 80B][i_306]
common/dct.c:330:5: note: versioning for alias required: can't determine dependence between MEM[(int16_t[8] *)dct_6(D) + 64B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 96B][i_306]
common/dct.c:330:5: note: mark for run-time aliasing test between MEM[(int16_t[8] *)dct_6(D) + 64B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 96B][i_306]
common/dct.c:330:5: note: versioning for alias required: can't determine dependence between MEM[(int16_t[8] *)dct_6(D) + 64B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 112B][i_306]
common/dct.c:330:5: note: mark for run-time aliasing test between MEM[(int16_t[8] *)dct_6(D) + 64B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 112B][i_306]
common/dct.c:330:5: note: versioning for alias required: can't determine dependence between MEM[(int16_t[8] *)dct_6(D) + 32B][i_306] and *dct_6(D)[i_306]
common/dct.c:330:5: note: mark for run-time aliasing test between MEM[(int16_t[8] *)dct_6(D) + 32B][i_306] and *dct_6(D)[i_306]
common/dct.c:330:5: note: versioning for alias required: can't determine dependence between MEM[(int16_t[8] *)dct_6(D) + 32B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 16B][i_306]
common/dct.c:330:5: note: mark for run-time aliasing test between MEM[(int16_t[8] *)dct_6(D) + 32B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 16B][i_306]
common/dct.c:330:5: note: dependence distance  = 0.
common/dct.c:330:5: note: dependence distance == 0 between MEM[(int16_t[8] *)dct_6(D) + 32B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 32B][i_306]
common/dct.c:330:5: note: versioning for alias required: can't determine dependence between MEM[(int16_t[8] *)dct_6(D) + 32B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 48B][i_306]
common/dct.c:330:5: note: mark for run-time aliasing test between MEM[(int16_t[8] *)dct_6(D) + 32B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 48B][i_306]
common/dct.c:330:5: note: versioning for alias required: can't determine dependence between MEM[(int16_t[8] *)dct_6(D) + 32B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 64B][i_306]
common/dct.c:330:5: note: mark for run-time aliasing test between MEM[(int16_t[8] *)dct_6(D) + 32B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 64B][i_306]
common/dct.c:330:5: note: versioning for alias required: can't determine dependence between MEM[(int16_t[8] *)dct_6(D) + 32B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 80B][i_306]
common/dct.c:330:5: note: mark for run-time aliasing test between MEM[(int16_t[8] *)dct_6(D) + 32B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 80B][i_306]
common/dct.c:330:5: note: versioning for alias required: can't determine dependence between MEM[(int16_t[8] *)dct_6(D) + 32B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 96B][i_306]
common/dct.c:330:5: note: mark for run-time aliasing test between MEM[(int16_t[8] *)dct_6(D) + 32B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 96B][i_306]
common/dct.c:330:5: note: versioning for alias required: can't determine dependence between MEM[(int16_t[8] *)dct_6(D) + 32B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 112B][i_306]
common/dct.c:330:5: note: mark for run-time aliasing test between MEM[(int16_t[8] *)dct_6(D) + 32B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 112B][i_306]
common/dct.c:330:5: note: versioning for alias required: can't determine dependence between MEM[(int16_t[8] *)dct_6(D) + 96B][i_306] and *dct_6(D)[i_306]
common/dct.c:330:5: note: mark for run-time aliasing test between MEM[(int16_t[8] *)dct_6(D) + 96B][i_306] and *dct_6(D)[i_306]
common/dct.c:330:5: note: versioning for alias required: can't determine dependence between MEM[(int16_t[8] *)dct_6(D) + 96B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 16B][i_306]
common/dct.c:330:5: note: mark for run-time aliasing test between MEM[(int16_t[8] *)dct_6(D) + 96B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 16B][i_306]
common/dct.c:330:5: note: versioning for alias required: can't determine dependence between MEM[(int16_t[8] *)dct_6(D) + 96B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 32B][i_306]
common/dct.c:330:5: note: mark for run-time aliasing test between MEM[(int16_t[8] *)dct_6(D) + 96B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 32B][i_306]
common/dct.c:330:5: note: versioning for alias required: can't determine dependence between MEM[(int16_t[8] *)dct_6(D) + 96B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 48B][i_306]
common/dct.c:330:5: note: mark for run-time aliasing test between MEM[(int16_t[8] *)dct_6(D) + 96B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 48B][i_306]
common/dct.c:330:5: note: versioning for alias required: can't determine dependence between MEM[(int16_t[8] *)dct_6(D) + 96B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 64B][i_306]
common/dct.c:330:5: note: mark for run-time aliasing test between MEM[(int16_t[8] *)dct_6(D) + 96B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 64B][i_306]
common/dct.c:330:5: note: versioning for alias required: can't determine dependence between MEM[(int16_t[8] *)dct_6(D) + 96B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 80B][i_306]
common/dct.c:330:5: note: mark for run-time aliasing test between MEM[(int16_t[8] *)dct_6(D) + 96B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 80B][i_306]
common/dct.c:330:5: note: dependence distance  = 0.
common/dct.c:330:5: note: dependence distance == 0 between MEM[(int16_t[8] *)dct_6(D) + 96B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 96B][i_306]
common/dct.c:330:5: note: versioning for alias required: can't determine dependence between MEM[(int16_t[8] *)dct_6(D) + 96B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 112B][i_306]
common/dct.c:330:5: note: mark for run-time aliasing test between MEM[(int16_t[8] *)dct_6(D) + 96B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 112B][i_306]
common/dct.c:330:5: note: versioning for alias required: can't determine dependence between MEM[(int16_t[8] *)dct_6(D) + 80B][i_306] and *dct_6(D)[i_306]
common/dct.c:330:5: note: mark for run-time aliasing test between MEM[(int16_t[8] *)dct_6(D) + 80B][i_306] and *dct_6(D)[i_306]
common/dct.c:330:5: note: versioning for alias required: can't determine dependence between MEM[(int16_t[8] *)dct_6(D) + 80B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 16B][i_306]
common/dct.c:330:5: note: mark for run-time aliasing test between MEM[(int16_t[8] *)dct_6(D) + 80B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 16B][i_306]
common/dct.c:330:5: note: versioning for alias required: can't determine dependence between MEM[(int16_t[8] *)dct_6(D) + 80B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 32B][i_306]
common/dct.c:330:5: note: mark for run-time aliasing test between MEM[(int16_t[8] *)dct_6(D) + 80B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 32B][i_306]
common/dct.c:330:5: note: versioning for alias required: can't determine dependence between MEM[(int16_t[8] *)dct_6(D) + 80B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 48B][i_306]
common/dct.c:330:5: note: mark for run-time aliasing test between MEM[(int16_t[8] *)dct_6(D) + 80B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 48B][i_306]
common/dct.c:330:5: note: versioning for alias required: can't determine dependence between MEM[(int16_t[8] *)dct_6(D) + 80B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 64B][i_306]
common/dct.c:330:5: note: mark for run-time aliasing test between MEM[(int16_t[8] *)dct_6(D) + 80B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 64B][i_306]
common/dct.c:330:5: note: dependence distance  = 0.
common/dct.c:330:5: note: dependence distance == 0 between MEM[(int16_t[8] *)dct_6(D) + 80B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 80B][i_306]
common/dct.c:330:5: note: versioning for alias required: can't determine dependence between MEM[(int16_t[8] *)dct_6(D) + 80B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 96B][i_306]
common/dct.c:330:5: note: mark for run-time aliasing test between MEM[(int16_t[8] *)dct_6(D) + 80B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 96B][i_306]
common/dct.c:330:5: note: versioning for alias required: can't determine dependence between MEM[(int16_t[8] *)dct_6(D) + 80B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 112B][i_306]
common/dct.c:330:5: note: mark for run-time aliasing test between MEM[(int16_t[8] *)dct_6(D) + 80B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 112B][i_306]
common/dct.c:330:5: note: versioning for alias required: can't determine dependence between MEM[(int16_t[8] *)dct_6(D) + 48B][i_306] and *dct_6(D)[i_306]
common/dct.c:330:5: note: mark for run-time aliasing test between MEM[(int16_t[8] *)dct_6(D) + 48B][i_306] and *dct_6(D)[i_306]
common/dct.c:330:5: note: versioning for alias required: can't determine dependence between MEM[(int16_t[8] *)dct_6(D) + 48B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 16B][i_306]
common/dct.c:330:5: note: mark for run-time aliasing test between MEM[(int16_t[8] *)dct_6(D) + 48B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 16B][i_306]
common/dct.c:330:5: note: versioning for alias required: can't determine dependence between MEM[(int16_t[8] *)dct_6(D) + 48B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 32B][i_306]
common/dct.c:330:5: note: mark for run-time aliasing test between MEM[(int16_t[8] *)dct_6(D) + 48B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 32B][i_306]
common/dct.c:330:5: note: dependence distance  = 0.
common/dct.c:330:5: note: dependence distance == 0 between MEM[(int16_t[8] *)dct_6(D) + 48B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 48B][i_306]
common/dct.c:330:5: note: versioning for alias required: can't determine dependence between MEM[(int16_t[8] *)dct_6(D) + 48B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 64B][i_306]
common/dct.c:330:5: note: mark for run-time aliasing test between MEM[(int16_t[8] *)dct_6(D) + 48B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 64B][i_306]
common/dct.c:330:5: note: versioning for alias required: can't determine dependence between MEM[(int16_t[8] *)dct_6(D) + 48B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 80B][i_306]
common/dct.c:330:5: note: mark for run-time aliasing test between MEM[(int16_t[8] *)dct_6(D) + 48B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 80B][i_306]
common/dct.c:330:5: note: versioning for alias required: can't determine dependence between MEM[(int16_t[8] *)dct_6(D) + 48B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 96B][i_306]
common/dct.c:330:5: note: mark for run-time aliasing test between MEM[(int16_t[8] *)dct_6(D) + 48B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 96B][i_306]
common/dct.c:330:5: note: versioning for alias required: can't determine dependence between MEM[(int16_t[8] *)dct_6(D) + 48B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 112B][i_306]
common/dct.c:330:5: note: mark for run-time aliasing test between MEM[(int16_t[8] *)dct_6(D) + 48B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 112B][i_306]
common/dct.c:330:5: note: versioning for alias required: can't determine dependence between MEM[(int16_t[8] *)dct_6(D) + 112B][i_306] and *dct_6(D)[i_306]
common/dct.c:330:5: note: mark for run-time aliasing test between MEM[(int16_t[8] *)dct_6(D) + 112B][i_306] and *dct_6(D)[i_306]
common/dct.c:330:5: note: versioning for alias required: can't determine dependence between MEM[(int16_t[8] *)dct_6(D) + 112B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 16B][i_306]
common/dct.c:330:5: note: mark for run-time aliasing test between MEM[(int16_t[8] *)dct_6(D) + 112B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 16B][i_306]
common/dct.c:330:5: note: versioning for alias required: can't determine dependence between MEM[(int16_t[8] *)dct_6(D) + 112B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 32B][i_306]
common/dct.c:330:5: note: mark for run-time aliasing test between MEM[(int16_t[8] *)dct_6(D) + 112B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 32B][i_306]
common/dct.c:330:5: note: versioning for alias required: can't determine dependence between MEM[(int16_t[8] *)dct_6(D) + 112B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 48B][i_306]
common/dct.c:330:5: note: mark for run-time aliasing test between MEM[(int16_t[8] *)dct_6(D) + 112B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 48B][i_306]
common/dct.c:330:5: note: versioning for alias required: can't determine dependence between MEM[(int16_t[8] *)dct_6(D) + 112B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 64B][i_306]
common/dct.c:330:5: note: mark for run-time aliasing test between MEM[(int16_t[8] *)dct_6(D) + 112B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 64B][i_306]
common/dct.c:330:5: note: versioning for alias required: can't determine dependence between MEM[(int16_t[8] *)dct_6(D) + 112B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 80B][i_306]
common/dct.c:330:5: note: mark for run-time aliasing test between MEM[(int16_t[8] *)dct_6(D) + 112B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 80B][i_306]
common/dct.c:330:5: note: versioning for alias required: can't determine dependence between MEM[(int16_t[8] *)dct_6(D) + 112B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 96B][i_306]
common/dct.c:330:5: note: mark for run-time aliasing test between MEM[(int16_t[8] *)dct_6(D) + 112B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 96B][i_306]
common/dct.c:330:5: note: dependence distance  = 0.
common/dct.c:330:5: note: dependence distance == 0 between MEM[(int16_t[8] *)dct_6(D) + 112B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 112B][i_306]
common/dct.c:330:5: note: versioning for alias required: can't determine dependence between MEM[(int16_t[8] *)dct_6(D) + 16B][i_306] and *dct_6(D)[i_306]
common/dct.c:330:5: note: mark for run-time aliasing test between MEM[(int16_t[8] *)dct_6(D) + 16B][i_306] and *dct_6(D)[i_306]
common/dct.c:330:5: note: dependence distance  = 0.
common/dct.c:330:5: note: dependence distance == 0 between MEM[(int16_t[8] *)dct_6(D) + 16B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 16B][i_306]
common/dct.c:330:5: note: versioning for alias required: can't determine dependence between MEM[(int16_t[8] *)dct_6(D) + 16B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 32B][i_306]
common/dct.c:330:5: note: mark for run-time aliasing test between MEM[(int16_t[8] *)dct_6(D) + 16B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 32B][i_306]
common/dct.c:330:5: note: versioning for alias required: can't determine dependence between MEM[(int16_t[8] *)dct_6(D) + 16B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 48B][i_306]
common/dct.c:330:5: note: mark for run-time aliasing test between MEM[(int16_t[8] *)dct_6(D) + 16B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 48B][i_306]
common/dct.c:330:5: note: versioning for alias required: can't determine dependence between MEM[(int16_t[8] *)dct_6(D) + 16B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 64B][i_306]
common/dct.c:330:5: note: mark for run-time aliasing test between MEM[(int16_t[8] *)dct_6(D) + 16B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 64B][i_306]
common/dct.c:330:5: note: versioning for alias required: can't determine dependence between MEM[(int16_t[8] *)dct_6(D) + 16B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 80B][i_306]
common/dct.c:330:5: note: mark for run-time aliasing test between MEM[(int16_t[8] *)dct_6(D) + 16B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 80B][i_306]
common/dct.c:330:5: note: versioning for alias required: can't determine dependence between MEM[(int16_t[8] *)dct_6(D) + 16B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 96B][i_306]
common/dct.c:330:5: note: mark for run-time aliasing test between MEM[(int16_t[8] *)dct_6(D) + 16B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 96B][i_306]
common/dct.c:330:5: note: versioning for alias required: can't determine dependence between MEM[(int16_t[8] *)dct_6(D) + 16B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 112B][i_306]
common/dct.c:330:5: note: mark for run-time aliasing test between MEM[(int16_t[8] *)dct_6(D) + 16B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 112B][i_306]
common/dct.c:330:5: note: versioning for alias required: can't determine dependence between *dct_6(D)[i_306] and MEM[(int16_t[8] *)dct_6(D) + 16B][i_306]
common/dct.c:330:5: note: mark for run-time aliasing test between *dct_6(D)[i_306] and MEM[(int16_t[8] *)dct_6(D) + 16B][i_306]
common/dct.c:330:5: note: versioning for alias required: can't determine dependence between *dct_6(D)[i_306] and MEM[(int16_t[8] *)dct_6(D) + 32B][i_306]
common/dct.c:330:5: note: mark for run-time aliasing test between *dct_6(D)[i_306] and MEM[(int16_t[8] *)dct_6(D) + 32B][i_306]
common/dct.c:330:5: note: versioning for alias required: can't determine dependence between *dct_6(D)[i_306] and MEM[(int16_t[8] *)dct_6(D) + 48B][i_306]
common/dct.c:330:5: note: mark for run-time aliasing test between *dct_6(D)[i_306] and MEM[(int16_t[8] *)dct_6(D) + 48B][i_306]
common/dct.c:330:5: note: versioning for alias required: can't determine dependence between *dct_6(D)[i_306] and MEM[(int16_t[8] *)dct_6(D) + 64B][i_306]
common/dct.c:330:5: note: mark for run-time aliasing test between *dct_6(D)[i_306] and MEM[(int16_t[8] *)dct_6(D) + 64B][i_306]
common/dct.c:330:5: note: versioning for alias required: can't determine dependence between *dct_6(D)[i_306] and MEM[(int16_t[8] *)dct_6(D) + 80B][i_306]
common/dct.c:330:5: note: mark for run-time aliasing test between *dct_6(D)[i_306] and MEM[(int16_t[8] *)dct_6(D) + 80B][i_306]
common/dct.c:330:5: note: versioning for alias required: can't determine dependence between *dct_6(D)[i_306] and MEM[(int16_t[8] *)dct_6(D) + 96B][i_306]
common/dct.c:330:5: note: mark for run-time aliasing test between *dct_6(D)[i_306] and MEM[(int16_t[8] *)dct_6(D) + 96B][i_306]
common/dct.c:330:5: note: versioning for alias required: can't determine dependence between *dct_6(D)[i_306] and MEM[(int16_t[8] *)dct_6(D) + 112B][i_306]
common/dct.c:330:5: note: mark for run-time aliasing test between *dct_6(D)[i_306] and MEM[(int16_t[8] *)dct_6(D) + 112B][i_306]
common/dct.c:330:5: note: versioning for alias required: can't determine dependence between MEM[(int16_t[8] *)dct_6(D) + 16B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 32B][i_306]
common/dct.c:330:5: note: mark for run-time aliasing test between MEM[(int16_t[8] *)dct_6(D) + 16B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 32B][i_306]
common/dct.c:330:5: note: versioning for alias required: can't determine dependence between MEM[(int16_t[8] *)dct_6(D) + 16B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 48B][i_306]
common/dct.c:330:5: note: mark for run-time aliasing test between MEM[(int16_t[8] *)dct_6(D) + 16B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 48B][i_306]
common/dct.c:330:5: note: versioning for alias required: can't determine dependence between MEM[(int16_t[8] *)dct_6(D) + 16B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 64B][i_306]
common/dct.c:330:5: note: mark for run-time aliasing test between MEM[(int16_t[8] *)dct_6(D) + 16B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 64B][i_306]
common/dct.c:330:5: note: versioning for alias required: can't determine dependence between MEM[(int16_t[8] *)dct_6(D) + 16B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 80B][i_306]
common/dct.c:330:5: note: mark for run-time aliasing test between MEM[(int16_t[8] *)dct_6(D) + 16B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 80B][i_306]
common/dct.c:330:5: note: versioning for alias required: can't determine dependence between MEM[(int16_t[8] *)dct_6(D) + 16B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 96B][i_306]
common/dct.c:330:5: note: mark for run-time aliasing test between MEM[(int16_t[8] *)dct_6(D) + 16B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 96B][i_306]
common/dct.c:330:5: note: versioning for alias required: can't determine dependence between MEM[(int16_t[8] *)dct_6(D) + 16B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 112B][i_306]
common/dct.c:330:5: note: mark for run-time aliasing test between MEM[(int16_t[8] *)dct_6(D) + 16B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 112B][i_306]
common/dct.c:330:5: note: versioning for alias required: can't determine dependence between MEM[(int16_t[8] *)dct_6(D) + 32B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 48B][i_306]
common/dct.c:330:5: note: mark for run-time aliasing test between MEM[(int16_t[8] *)dct_6(D) + 32B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 48B][i_306]
common/dct.c:330:5: note: versioning for alias required: can't determine dependence between MEM[(int16_t[8] *)dct_6(D) + 32B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 64B][i_306]
common/dct.c:330:5: note: mark for run-time aliasing test between MEM[(int16_t[8] *)dct_6(D) + 32B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 64B][i_306]
common/dct.c:330:5: note: versioning for alias required: can't determine dependence between MEM[(int16_t[8] *)dct_6(D) + 32B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 80B][i_306]
common/dct.c:330:5: note: mark for run-time aliasing test between MEM[(int16_t[8] *)dct_6(D) + 32B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 80B][i_306]
common/dct.c:330:5: note: versioning for alias required: can't determine dependence between MEM[(int16_t[8] *)dct_6(D) + 32B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 96B][i_306]
common/dct.c:330:5: note: mark for run-time aliasing test between MEM[(int16_t[8] *)dct_6(D) + 32B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 96B][i_306]
common/dct.c:330:5: note: versioning for alias required: can't determine dependence between MEM[(int16_t[8] *)dct_6(D) + 32B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 112B][i_306]
common/dct.c:330:5: note: mark for run-time aliasing test between MEM[(int16_t[8] *)dct_6(D) + 32B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 112B][i_306]
common/dct.c:330:5: note: versioning for alias required: can't determine dependence between MEM[(int16_t[8] *)dct_6(D) + 48B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 64B][i_306]
common/dct.c:330:5: note: mark for run-time aliasing test between MEM[(int16_t[8] *)dct_6(D) + 48B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 64B][i_306]
common/dct.c:330:5: note: versioning for alias required: can't determine dependence between MEM[(int16_t[8] *)dct_6(D) + 48B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 80B][i_306]
common/dct.c:330:5: note: mark for run-time aliasing test between MEM[(int16_t[8] *)dct_6(D) + 48B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 80B][i_306]
common/dct.c:330:5: note: versioning for alias required: can't determine dependence between MEM[(int16_t[8] *)dct_6(D) + 48B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 96B][i_306]
common/dct.c:330:5: note: mark for run-time aliasing test between MEM[(int16_t[8] *)dct_6(D) + 48B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 96B][i_306]
common/dct.c:330:5: note: versioning for alias required: can't determine dependence between MEM[(int16_t[8] *)dct_6(D) + 48B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 112B][i_306]
common/dct.c:330:5: note: mark for run-time aliasing test between MEM[(int16_t[8] *)dct_6(D) + 48B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 112B][i_306]
common/dct.c:330:5: note: versioning for alias required: can't determine dependence between MEM[(int16_t[8] *)dct_6(D) + 64B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 80B][i_306]
common/dct.c:330:5: note: mark for run-time aliasing test between MEM[(int16_t[8] *)dct_6(D) + 64B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 80B][i_306]
common/dct.c:330:5: note: versioning for alias required: can't determine dependence between MEM[(int16_t[8] *)dct_6(D) + 64B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 96B][i_306]
common/dct.c:330:5: note: mark for run-time aliasing test between MEM[(int16_t[8] *)dct_6(D) + 64B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 96B][i_306]
common/dct.c:330:5: note: versioning for alias required: can't determine dependence between MEM[(int16_t[8] *)dct_6(D) + 64B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 112B][i_306]
common/dct.c:330:5: note: mark for run-time aliasing test between MEM[(int16_t[8] *)dct_6(D) + 64B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 112B][i_306]
common/dct.c:330:5: note: versioning for alias required: can't determine dependence between MEM[(int16_t[8] *)dct_6(D) + 80B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 96B][i_306]
common/dct.c:330:5: note: mark for run-time aliasing test between MEM[(int16_t[8] *)dct_6(D) + 80B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 96B][i_306]
common/dct.c:330:5: note: versioning for alias required: can't determine dependence between MEM[(int16_t[8] *)dct_6(D) + 80B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 112B][i_306]
common/dct.c:330:5: note: mark for run-time aliasing test between MEM[(int16_t[8] *)dct_6(D) + 80B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 112B][i_306]
common/dct.c:330:5: note: versioning for alias required: can't determine dependence between MEM[(int16_t[8] *)dct_6(D) + 96B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 112B][i_306]
common/dct.c:330:5: note: mark for run-time aliasing test between MEM[(int16_t[8] *)dct_6(D) + 96B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 112B][i_306]
common/dct.c:330:5: note: === vect_determine_vectorization_factor ===
common/dct.c:330:5: note: ==> examining phi: i_306 = PHI <i_101(4), 0(2)>

common/dct.c:330:5: note: ==> examining phi: .MEM_304 = PHI <.MEM_100(4), .MEM_11(2)>

common/dct.c:330:5: note: ==> examining phi: ivtmp_563 = PHI <ivtmp_562(4), 8(2)>

common/dct.c:330:5: note: ==> examining statement: # DEBUG i => i_306

common/dct.c:330:5: note: skip.
common/dct.c:330:5: note: ==> examining statement: _12 = *dct_6(D)[i_306];

common/dct.c:330:5: note: get vectype for scalar type:  short int
common/dct.c:330:5: note: vectype: vector(8) short int
common/dct.c:330:5: note: nunits = 8
common/dct.c:330:5: note: ==> examining statement: _13 = (int) _12;

common/dct.c:330:5: note: get vectype for scalar type:  int
common/dct.c:330:5: note: vectype: vector(4) int
common/dct.c:330:5: note: get vectype for scalar type:  short int
common/dct.c:330:5: note: vectype: vector(8) short int
common/dct.c:330:5: note: nunits = 8
common/dct.c:330:5: note: ==> examining statement: _14 = MEM[(int16_t[8] *)dct_6(D) + 64B][i_306];

common/dct.c:330:5: note: get vectype for scalar type:  short int
common/dct.c:330:5: note: vectype: vector(8) short int
common/dct.c:330:5: note: nunits = 8
common/dct.c:330:5: note: ==> examining statement: _15 = (int) _14;

common/dct.c:330:5: note: get vectype for scalar type:  int
common/dct.c:330:5: note: vectype: vector(4) int
common/dct.c:330:5: note: get vectype for scalar type:  short int
common/dct.c:330:5: note: vectype: vector(8) short int
common/dct.c:330:5: note: nunits = 8
common/dct.c:330:5: note: ==> examining statement: a0_16 = _13 + _15;

common/dct.c:330:5: note: get vectype for scalar type:  const int
common/dct.c:330:5: note: vectype: const vector(4) int
common/dct.c:330:5: note: get vectype for scalar type:  const int
common/dct.c:330:5: note: vectype: const vector(4) int
common/dct.c:330:5: note: nunits = 4
common/dct.c:330:5: note: ==> examining statement: # DEBUG a0 => a0_16

common/dct.c:330:5: note: skip.
common/dct.c:330:5: note: ==> examining statement: a2_18 = _13 - _15;

common/dct.c:330:5: note: get vectype for scalar type:  const int
common/dct.c:330:5: note: vectype: const vector(4) int
common/dct.c:330:5: note: get vectype for scalar type:  const int
common/dct.c:330:5: note: vectype: const vector(4) int
common/dct.c:330:5: note: nunits = 4
common/dct.c:330:5: note: ==> examining statement: # DEBUG a2 => a2_18

common/dct.c:330:5: note: skip.
common/dct.c:330:5: note: ==> examining statement: _19 = MEM[(int16_t[8] *)dct_6(D) + 32B][i_306];

common/dct.c:330:5: note: get vectype for scalar type:  short int
common/dct.c:330:5: note: vectype: vector(8) short int
common/dct.c:330:5: note: nunits = 8
common/dct.c:330:5: note: ==> examining statement: _20 = _19 >> 1;

common/dct.c:330:5: note: get vectype for scalar type:  short int
common/dct.c:330:5: note: vectype: vector(8) short int
common/dct.c:330:5: note: get vectype for scalar type:  short int
common/dct.c:330:5: note: vectype: vector(8) short int
common/dct.c:330:5: note: nunits = 8
common/dct.c:330:5: note: ==> examining statement: _21 = (int) _20;

common/dct.c:330:5: note: get vectype for scalar type:  int
common/dct.c:330:5: note: vectype: vector(4) int
common/dct.c:330:5: note: get vectype for scalar type:  short int
common/dct.c:330:5: note: vectype: vector(8) short int
common/dct.c:330:5: note: nunits = 8
common/dct.c:330:5: note: ==> examining statement: _22 = MEM[(int16_t[8] *)dct_6(D) + 96B][i_306];

common/dct.c:330:5: note: get vectype for scalar type:  short int
common/dct.c:330:5: note: vectype: vector(8) short int
common/dct.c:330:5: note: nunits = 8
common/dct.c:330:5: note: ==> examining statement: _23 = (int) _22;

common/dct.c:330:5: note: get vectype for scalar type:  int
common/dct.c:330:5: note: vectype: vector(4) int
common/dct.c:330:5: note: get vectype for scalar type:  short int
common/dct.c:330:5: note: vectype: vector(8) short int
common/dct.c:330:5: note: nunits = 8
common/dct.c:330:5: note: ==> examining statement: a4_24 = _21 - _23;

common/dct.c:330:5: note: get vectype for scalar type:  const int
common/dct.c:330:5: note: vectype: const vector(4) int
common/dct.c:330:5: note: get vectype for scalar type:  const int
common/dct.c:330:5: note: vectype: const vector(4) int
common/dct.c:330:5: note: nunits = 4
common/dct.c:330:5: note: ==> examining statement: # DEBUG a4 => a4_24

common/dct.c:330:5: note: skip.
common/dct.c:330:5: note: ==> examining statement: _25 = _22 >> 1;

common/dct.c:330:5: note: get vectype for scalar type:  short int
common/dct.c:330:5: note: vectype: vector(8) short int
common/dct.c:330:5: note: get vectype for scalar type:  short int
common/dct.c:330:5: note: vectype: vector(8) short int
common/dct.c:330:5: note: nunits = 8
common/dct.c:330:5: note: ==> examining statement: _26 = (int) _25;

common/dct.c:330:5: note: get vectype for scalar type:  int
common/dct.c:330:5: note: vectype: vector(4) int
common/dct.c:330:5: note: get vectype for scalar type:  short int
common/dct.c:330:5: note: vectype: vector(8) short int
common/dct.c:330:5: note: nunits = 8
common/dct.c:330:5: note: ==> examining statement: _27 = (int) _19;

common/dct.c:330:5: note: get vectype for scalar type:  int
common/dct.c:330:5: note: vectype: vector(4) int
common/dct.c:330:5: note: get vectype for scalar type:  short int
common/dct.c:330:5: note: vectype: vector(8) short int
common/dct.c:330:5: note: nunits = 8
common/dct.c:330:5: note: ==> examining statement: a6_28 = _26 + _27;

common/dct.c:330:5: note: get vectype for scalar type:  const int
common/dct.c:330:5: note: vectype: const vector(4) int
common/dct.c:330:5: note: get vectype for scalar type:  const int
common/dct.c:330:5: note: vectype: const vector(4) int
common/dct.c:330:5: note: nunits = 4
common/dct.c:330:5: note: ==> examining statement: # DEBUG a6 => a6_28

common/dct.c:330:5: note: skip.
common/dct.c:330:5: note: ==> examining statement: b0_29 = a0_16 + a6_28;

common/dct.c:330:5: note: get vectype for scalar type:  const int
common/dct.c:330:5: note: vectype: const vector(4) int
common/dct.c:330:5: note: get vectype for scalar type:  const int
common/dct.c:330:5: note: vectype: const vector(4) int
common/dct.c:330:5: note: nunits = 4
common/dct.c:330:5: note: ==> examining statement: # DEBUG b0 => b0_29

common/dct.c:330:5: note: skip.
common/dct.c:330:5: note: ==> examining statement: b2_30 = a2_18 + a4_24;

common/dct.c:330:5: note: get vectype for scalar type:  const int
common/dct.c:330:5: note: vectype: const vector(4) int
common/dct.c:330:5: note: get vectype for scalar type:  const int
common/dct.c:330:5: note: vectype: const vector(4) int
common/dct.c:330:5: note: nunits = 4
common/dct.c:330:5: note: ==> examining statement: # DEBUG b2 => b2_30

common/dct.c:330:5: note: skip.
common/dct.c:330:5: note: ==> examining statement: b4_31 = a2_18 - a4_24;

common/dct.c:330:5: note: get vectype for scalar type:  const int
common/dct.c:330:5: note: vectype: const vector(4) int
common/dct.c:330:5: note: get vectype for scalar type:  const int
common/dct.c:330:5: note: vectype: const vector(4) int
common/dct.c:330:5: note: nunits = 4
common/dct.c:330:5: note: ==> examining statement: # DEBUG b4 => b4_31

common/dct.c:330:5: note: skip.
common/dct.c:330:5: note: ==> examining statement: b6_32 = a0_16 - a6_28;

common/dct.c:330:5: note: get vectype for scalar type:  const int
common/dct.c:330:5: note: vectype: const vector(4) int
common/dct.c:330:5: note: get vectype for scalar type:  const int
common/dct.c:330:5: note: vectype: const vector(4) int
common/dct.c:330:5: note: nunits = 4
common/dct.c:330:5: note: ==> examining statement: # DEBUG b6 => b6_32

common/dct.c:330:5: note: skip.
common/dct.c:330:5: note: ==> examining statement: _33 = MEM[(int16_t[8] *)dct_6(D) + 80B][i_306];

common/dct.c:330:5: note: get vectype for scalar type:  short int
common/dct.c:330:5: note: vectype: vector(8) short int
common/dct.c:330:5: note: nunits = 8
common/dct.c:330:5: note: ==> examining statement: _34 = (int) _33;

common/dct.c:330:5: note: get vectype for scalar type:  int
common/dct.c:330:5: note: vectype: vector(4) int
common/dct.c:330:5: note: get vectype for scalar type:  short int
common/dct.c:330:5: note: vectype: vector(8) short int
common/dct.c:330:5: note: nunits = 8
common/dct.c:330:5: note: ==> examining statement: _35 = MEM[(int16_t[8] *)dct_6(D) + 48B][i_306];

common/dct.c:330:5: note: get vectype for scalar type:  short int
common/dct.c:330:5: note: vectype: vector(8) short int
common/dct.c:330:5: note: nunits = 8
common/dct.c:330:5: note: ==> examining statement: _36 = (int) _35;

common/dct.c:330:5: note: get vectype for scalar type:  int
common/dct.c:330:5: note: vectype: vector(4) int
common/dct.c:330:5: note: get vectype for scalar type:  short int
common/dct.c:330:5: note: vectype: vector(8) short int
common/dct.c:330:5: note: nunits = 8
common/dct.c:330:5: note: ==> examining statement: _37 = _34 - _36;

common/dct.c:330:5: note: get vectype for scalar type:  int
common/dct.c:330:5: note: vectype: vector(4) int
common/dct.c:330:5: note: get vectype for scalar type:  int
common/dct.c:330:5: note: vectype: vector(4) int
common/dct.c:330:5: note: nunits = 4
common/dct.c:330:5: note: ==> examining statement: _38 = MEM[(int16_t[8] *)dct_6(D) + 112B][i_306];

common/dct.c:330:5: note: get vectype for scalar type:  short int
common/dct.c:330:5: note: vectype: vector(8) short int
common/dct.c:330:5: note: nunits = 8
common/dct.c:330:5: note: ==> examining statement: _39 = (int) _38;

common/dct.c:330:5: note: get vectype for scalar type:  int
common/dct.c:330:5: note: vectype: vector(4) int
common/dct.c:330:5: note: get vectype for scalar type:  short int
common/dct.c:330:5: note: vectype: vector(8) short int
common/dct.c:330:5: note: nunits = 8
common/dct.c:330:5: note: ==> examining statement: _40 = _37 - _39;

common/dct.c:330:5: note: get vectype for scalar type:  int
common/dct.c:330:5: note: vectype: vector(4) int
common/dct.c:330:5: note: get vectype for scalar type:  int
common/dct.c:330:5: note: vectype: vector(4) int
common/dct.c:330:5: note: nunits = 4
common/dct.c:330:5: note: ==> examining statement: _41 = _38 >> 1;

common/dct.c:330:5: note: get vectype for scalar type:  short int
common/dct.c:330:5: note: vectype: vector(8) short int
common/dct.c:330:5: note: get vectype for scalar type:  short int
common/dct.c:330:5: note: vectype: vector(8) short int
common/dct.c:330:5: note: nunits = 8
common/dct.c:330:5: note: ==> examining statement: _42 = (int) _41;

common/dct.c:330:5: note: get vectype for scalar type:  int
common/dct.c:330:5: note: vectype: vector(4) int
common/dct.c:330:5: note: get vectype for scalar type:  short int
common/dct.c:330:5: note: vectype: vector(8) short int
common/dct.c:330:5: note: nunits = 8
common/dct.c:330:5: note: ==> examining statement: a1_43 = _40 - _42;

common/dct.c:330:5: note: get vectype for scalar type:  const int
common/dct.c:330:5: note: vectype: const vector(4) int
common/dct.c:330:5: note: get vectype for scalar type:  const int
common/dct.c:330:5: note: vectype: const vector(4) int
common/dct.c:330:5: note: nunits = 4
common/dct.c:330:5: note: ==> examining statement: # DEBUG a1 => a1_43

common/dct.c:330:5: note: skip.
common/dct.c:330:5: note: ==> examining statement: _44 = MEM[(int16_t[8] *)dct_6(D) + 16B][i_306];

common/dct.c:330:5: note: get vectype for scalar type:  short int
common/dct.c:330:5: note: vectype: vector(8) short int
common/dct.c:330:5: note: nunits = 8
common/dct.c:330:5: note: ==> examining statement: _45 = (int) _44;

common/dct.c:330:5: note: get vectype for scalar type:  int
common/dct.c:330:5: note: vectype: vector(4) int
common/dct.c:330:5: note: get vectype for scalar type:  short int
common/dct.c:330:5: note: vectype: vector(8) short int
common/dct.c:330:5: note: nunits = 8
common/dct.c:330:5: note: ==> examining statement: _46 = _39 + _45;

common/dct.c:330:5: note: get vectype for scalar type:  int
common/dct.c:330:5: note: vectype: vector(4) int
common/dct.c:330:5: note: get vectype for scalar type:  int
common/dct.c:330:5: note: vectype: vector(4) int
common/dct.c:330:5: note: nunits = 4
common/dct.c:330:5: note: ==> examining statement: _47 = _46 - _36;

common/dct.c:330:5: note: get vectype for scalar type:  int
common/dct.c:330:5: note: vectype: vector(4) int
common/dct.c:330:5: note: get vectype for scalar type:  int
common/dct.c:330:5: note: vectype: vector(4) int
common/dct.c:330:5: note: nunits = 4
common/dct.c:330:5: note: ==> examining statement: _48 = _35 >> 1;

common/dct.c:330:5: note: get vectype for scalar type:  short int
common/dct.c:330:5: note: vectype: vector(8) short int
common/dct.c:330:5: note: get vectype for scalar type:  short int
common/dct.c:330:5: note: vectype: vector(8) short int
common/dct.c:330:5: note: nunits = 8
common/dct.c:330:5: note: ==> examining statement: _49 = (int) _48;

common/dct.c:330:5: note: get vectype for scalar type:  int
common/dct.c:330:5: note: vectype: vector(4) int
common/dct.c:330:5: note: get vectype for scalar type:  short int
common/dct.c:330:5: note: vectype: vector(8) short int
common/dct.c:330:5: note: nunits = 8
common/dct.c:330:5: note: ==> examining statement: a3_50 = _47 - _49;

common/dct.c:330:5: note: get vectype for scalar type:  const int
common/dct.c:330:5: note: vectype: const vector(4) int
common/dct.c:330:5: note: get vectype for scalar type:  const int
common/dct.c:330:5: note: vectype: const vector(4) int
common/dct.c:330:5: note: nunits = 4
common/dct.c:330:5: note: ==> examining statement: # DEBUG a3 => a3_50

common/dct.c:330:5: note: skip.
common/dct.c:330:5: note: ==> examining statement: _51 = _39 - _45;

common/dct.c:330:5: note: get vectype for scalar type:  int
common/dct.c:330:5: note: vectype: vector(4) int
common/dct.c:330:5: note: get vectype for scalar type:  int
common/dct.c:330:5: note: vectype: vector(4) int
common/dct.c:330:5: note: nunits = 4
common/dct.c:330:5: note: ==> examining statement: _52 = _34 + _51;

common/dct.c:330:5: note: get vectype for scalar type:  int
common/dct.c:330:5: note: vectype: vector(4) int
common/dct.c:330:5: note: get vectype for scalar type:  int
common/dct.c:330:5: note: vectype: vector(4) int
common/dct.c:330:5: note: nunits = 4
common/dct.c:330:5: note: ==> examining statement: _53 = _33 >> 1;

common/dct.c:330:5: note: get vectype for scalar type:  short int
common/dct.c:330:5: note: vectype: vector(8) short int
common/dct.c:330:5: note: get vectype for scalar type:  short int
common/dct.c:330:5: note: vectype: vector(8) short int
common/dct.c:330:5: note: nunits = 8
common/dct.c:330:5: note: ==> examining statement: _54 = (int) _53;

common/dct.c:330:5: note: get vectype for scalar type:  int
common/dct.c:330:5: note: vectype: vector(4) int
common/dct.c:330:5: note: get vectype for scalar type:  short int
common/dct.c:330:5: note: vectype: vector(8) short int
common/dct.c:330:5: note: nunits = 8
common/dct.c:330:5: note: ==> examining statement: a5_55 = _52 + _54;

common/dct.c:330:5: note: get vectype for scalar type:  const int
common/dct.c:330:5: note: vectype: const vector(4) int
common/dct.c:330:5: note: get vectype for scalar type:  const int
common/dct.c:330:5: note: vectype: const vector(4) int
common/dct.c:330:5: note: nunits = 4
common/dct.c:330:5: note: ==> examining statement: # DEBUG a5 => a5_55

common/dct.c:330:5: note: skip.
common/dct.c:330:5: note: ==> examining statement: _56 = _34 + _36;

common/dct.c:330:5: note: get vectype for scalar type:  int
common/dct.c:330:5: note: vectype: vector(4) int
common/dct.c:330:5: note: get vectype for scalar type:  int
common/dct.c:330:5: note: vectype: vector(4) int
common/dct.c:330:5: note: nunits = 4
common/dct.c:330:5: note: ==> examining statement: _57 = _45 + _56;

common/dct.c:330:5: note: get vectype for scalar type:  int
common/dct.c:330:5: note: vectype: vector(4) int
common/dct.c:330:5: note: get vectype for scalar type:  int
common/dct.c:330:5: note: vectype: vector(4) int
common/dct.c:330:5: note: nunits = 4
common/dct.c:330:5: note: ==> examining statement: _58 = _44 >> 1;

common/dct.c:330:5: note: get vectype for scalar type:  short int
common/dct.c:330:5: note: vectype: vector(8) short int
common/dct.c:330:5: note: get vectype for scalar type:  short int
common/dct.c:330:5: note: vectype: vector(8) short int
common/dct.c:330:5: note: nunits = 8
common/dct.c:330:5: note: ==> examining statement: _59 = (int) _58;

common/dct.c:330:5: note: get vectype for scalar type:  int
common/dct.c:330:5: note: vectype: vector(4) int
common/dct.c:330:5: note: get vectype for scalar type:  short int
common/dct.c:330:5: note: vectype: vector(8) short int
common/dct.c:330:5: note: nunits = 8
common/dct.c:330:5: note: ==> examining statement: a7_60 = _57 + _59;

common/dct.c:330:5: note: get vectype for scalar type:  const int
common/dct.c:330:5: note: vectype: const vector(4) int
common/dct.c:330:5: note: get vectype for scalar type:  const int
common/dct.c:330:5: note: vectype: const vector(4) int
common/dct.c:330:5: note: nunits = 4
common/dct.c:330:5: note: ==> examining statement: # DEBUG a7 => a7_60

common/dct.c:330:5: note: skip.
common/dct.c:330:5: note: ==> examining statement: _61 = a7_60 >> 2;

common/dct.c:330:5: note: get vectype for scalar type:  int
common/dct.c:330:5: note: vectype: vector(4) int
common/dct.c:330:5: note: get vectype for scalar type:  int
common/dct.c:330:5: note: vectype: vector(4) int
common/dct.c:330:5: note: nunits = 4
common/dct.c:330:5: note: ==> examining statement: b1_62 = a1_43 + _61;

common/dct.c:330:5: note: get vectype for scalar type:  const int
common/dct.c:330:5: note: vectype: const vector(4) int
common/dct.c:330:5: note: get vectype for scalar type:  const int
common/dct.c:330:5: note: vectype: const vector(4) int
common/dct.c:330:5: note: nunits = 4
common/dct.c:330:5: note: ==> examining statement: # DEBUG b1 => b1_62

common/dct.c:330:5: note: skip.
common/dct.c:330:5: note: ==> examining statement: _63 = a5_55 >> 2;

common/dct.c:330:5: note: get vectype for scalar type:  int
common/dct.c:330:5: note: vectype: vector(4) int
common/dct.c:330:5: note: get vectype for scalar type:  int
common/dct.c:330:5: note: vectype: vector(4) int
common/dct.c:330:5: note: nunits = 4
common/dct.c:330:5: note: ==> examining statement: b3_64 = a3_50 + _63;

common/dct.c:330:5: note: get vectype for scalar type:  const int
common/dct.c:330:5: note: vectype: const vector(4) int
common/dct.c:330:5: note: get vectype for scalar type:  const int
common/dct.c:330:5: note: vectype: const vector(4) int
common/dct.c:330:5: note: nunits = 4
common/dct.c:330:5: note: ==> examining statement: # DEBUG b3 => b3_64

common/dct.c:330:5: note: skip.
common/dct.c:330:5: note: ==> examining statement: _65 = a3_50 >> 2;

common/dct.c:330:5: note: get vectype for scalar type:  int
common/dct.c:330:5: note: vectype: vector(4) int
common/dct.c:330:5: note: get vectype for scalar type:  int
common/dct.c:330:5: note: vectype: vector(4) int
common/dct.c:330:5: note: nunits = 4
common/dct.c:330:5: note: ==> examining statement: b5_66 = _65 - a5_55;

common/dct.c:330:5: note: get vectype for scalar type:  const int
common/dct.c:330:5: note: vectype: const vector(4) int
common/dct.c:330:5: note: get vectype for scalar type:  const int
common/dct.c:330:5: note: vectype: const vector(4) int
common/dct.c:330:5: note: nunits = 4
common/dct.c:330:5: note: ==> examining statement: # DEBUG b5 => b5_66

common/dct.c:330:5: note: skip.
common/dct.c:330:5: note: ==> examining statement: _67 = a1_43 >> 2;

common/dct.c:330:5: note: get vectype for scalar type:  int
common/dct.c:330:5: note: vectype: vector(4) int
common/dct.c:330:5: note: get vectype for scalar type:  int
common/dct.c:330:5: note: vectype: vector(4) int
common/dct.c:330:5: note: nunits = 4
common/dct.c:330:5: note: ==> examining statement: b7_68 = a7_60 - _67;

common/dct.c:330:5: note: get vectype for scalar type:  const int
common/dct.c:330:5: note: vectype: const vector(4) int
common/dct.c:330:5: note: get vectype for scalar type:  const int
common/dct.c:330:5: note: vectype: const vector(4) int
common/dct.c:330:5: note: nunits = 4
common/dct.c:330:5: note: ==> examining statement: # DEBUG b7 => b7_68

common/dct.c:330:5: note: skip.
common/dct.c:330:5: note: ==> examining statement: _69 = (unsigned short) b0_29;

common/dct.c:330:5: note: get vectype for scalar type:  unsigned short
common/dct.c:330:5: note: vectype: vector(8) unsigned short
common/dct.c:330:5: note: get vectype for scalar type:  unsigned short
common/dct.c:330:5: note: vectype: vector(8) unsigned short
common/dct.c:330:5: note: nunits = 8
common/dct.c:330:5: note: ==> examining statement: _70 = (unsigned short) b7_68;

common/dct.c:330:5: note: get vectype for scalar type:  unsigned short
common/dct.c:330:5: note: vectype: vector(8) unsigned short
common/dct.c:330:5: note: get vectype for scalar type:  unsigned short
common/dct.c:330:5: note: vectype: vector(8) unsigned short
common/dct.c:330:5: note: nunits = 8
common/dct.c:330:5: note: ==> examining statement: _71 = _69 + _70;

common/dct.c:330:5: note: get vectype for scalar type:  unsigned short
common/dct.c:330:5: note: vectype: vector(8) unsigned short
common/dct.c:330:5: note: get vectype for scalar type:  unsigned short
common/dct.c:330:5: note: vectype: vector(8) unsigned short
common/dct.c:330:5: note: nunits = 8
common/dct.c:330:5: note: ==> examining statement: _72 = (short int) _71;

common/dct.c:330:5: note: get vectype for scalar type:  short int
common/dct.c:330:5: note: vectype: vector(8) short int
common/dct.c:330:5: note: get vectype for scalar type:  short int
common/dct.c:330:5: note: vectype: vector(8) short int
common/dct.c:330:5: note: nunits = 8
common/dct.c:330:5: note: ==> examining statement: *dct_6(D)[i_306] = _72;

common/dct.c:330:5: note: get vectype for scalar type:  int16_t
common/dct.c:330:5: note: vectype: vector(8) short int
common/dct.c:330:5: note: nunits = 8
common/dct.c:330:5: note: ==> examining statement: _74 = (unsigned short) b2_30;

common/dct.c:330:5: note: get vectype for scalar type:  unsigned short
common/dct.c:330:5: note: vectype: vector(8) unsigned short
common/dct.c:330:5: note: get vectype for scalar type:  unsigned short
common/dct.c:330:5: note: vectype: vector(8) unsigned short
common/dct.c:330:5: note: nunits = 8
common/dct.c:330:5: note: ==> examining statement: _75 = (unsigned short) b5_66;

common/dct.c:330:5: note: get vectype for scalar type:  unsigned short
common/dct.c:330:5: note: vectype: vector(8) unsigned short
common/dct.c:330:5: note: get vectype for scalar type:  unsigned short
common/dct.c:330:5: note: vectype: vector(8) unsigned short
common/dct.c:330:5: note: nunits = 8
common/dct.c:330:5: note: ==> examining statement: _76 = _74 + _75;

common/dct.c:330:5: note: get vectype for scalar type:  unsigned short
common/dct.c:330:5: note: vectype: vector(8) unsigned short
common/dct.c:330:5: note: get vectype for scalar type:  unsigned short
common/dct.c:330:5: note: vectype: vector(8) unsigned short
common/dct.c:330:5: note: nunits = 8
common/dct.c:330:5: note: ==> examining statement: _77 = (short int) _76;

common/dct.c:330:5: note: get vectype for scalar type:  short int
common/dct.c:330:5: note: vectype: vector(8) short int
common/dct.c:330:5: note: get vectype for scalar type:  short int
common/dct.c:330:5: note: vectype: vector(8) short int
common/dct.c:330:5: note: nunits = 8
common/dct.c:330:5: note: ==> examining statement: MEM[(int16_t[8] *)dct_6(D) + 16B][i_306] = _77;

common/dct.c:330:5: note: get vectype for scalar type:  int16_t
common/dct.c:330:5: note: vectype: vector(8) short int
common/dct.c:330:5: note: nunits = 8
common/dct.c:330:5: note: ==> examining statement: _79 = (unsigned short) b4_31;

common/dct.c:330:5: note: get vectype for scalar type:  unsigned short
common/dct.c:330:5: note: vectype: vector(8) unsigned short
common/dct.c:330:5: note: get vectype for scalar type:  unsigned short
common/dct.c:330:5: note: vectype: vector(8) unsigned short
common/dct.c:330:5: note: nunits = 8
common/dct.c:330:5: note: ==> examining statement: _80 = (unsigned short) b3_64;

common/dct.c:330:5: note: get vectype for scalar type:  unsigned short
common/dct.c:330:5: note: vectype: vector(8) unsigned short
common/dct.c:330:5: note: get vectype for scalar type:  unsigned short
common/dct.c:330:5: note: vectype: vector(8) unsigned short
common/dct.c:330:5: note: nunits = 8
common/dct.c:330:5: note: ==> examining statement: _81 = _79 + _80;

common/dct.c:330:5: note: get vectype for scalar type:  unsigned short
common/dct.c:330:5: note: vectype: vector(8) unsigned short
common/dct.c:330:5: note: get vectype for scalar type:  unsigned short
common/dct.c:330:5: note: vectype: vector(8) unsigned short
common/dct.c:330:5: note: nunits = 8
common/dct.c:330:5: note: ==> examining statement: _82 = (short int) _81;

common/dct.c:330:5: note: get vectype for scalar type:  short int
common/dct.c:330:5: note: vectype: vector(8) short int
common/dct.c:330:5: note: get vectype for scalar type:  short int
common/dct.c:330:5: note: vectype: vector(8) short int
common/dct.c:330:5: note: nunits = 8
common/dct.c:330:5: note: ==> examining statement: MEM[(int16_t[8] *)dct_6(D) + 32B][i_306] = _82;

common/dct.c:330:5: note: get vectype for scalar type:  int16_t
common/dct.c:330:5: note: vectype: vector(8) short int
common/dct.c:330:5: note: nunits = 8
common/dct.c:330:5: note: ==> examining statement: _84 = (unsigned short) b6_32;

common/dct.c:330:5: note: get vectype for scalar type:  unsigned short
common/dct.c:330:5: note: vectype: vector(8) unsigned short
common/dct.c:330:5: note: get vectype for scalar type:  unsigned short
common/dct.c:330:5: note: vectype: vector(8) unsigned short
common/dct.c:330:5: note: nunits = 8
common/dct.c:330:5: note: ==> examining statement: _85 = (unsigned short) b1_62;

common/dct.c:330:5: note: get vectype for scalar type:  unsigned short
common/dct.c:330:5: note: vectype: vector(8) unsigned short
common/dct.c:330:5: note: get vectype for scalar type:  unsigned short
common/dct.c:330:5: note: vectype: vector(8) unsigned short
common/dct.c:330:5: note: nunits = 8
common/dct.c:330:5: note: ==> examining statement: _86 = _84 + _85;

common/dct.c:330:5: note: get vectype for scalar type:  unsigned short
common/dct.c:330:5: note: vectype: vector(8) unsigned short
common/dct.c:330:5: note: get vectype for scalar type:  unsigned short
common/dct.c:330:5: note: vectype: vector(8) unsigned short
common/dct.c:330:5: note: nunits = 8
common/dct.c:330:5: note: ==> examining statement: _87 = (short int) _86;

common/dct.c:330:5: note: get vectype for scalar type:  short int
common/dct.c:330:5: note: vectype: vector(8) short int
common/dct.c:330:5: note: get vectype for scalar type:  short int
common/dct.c:330:5: note: vectype: vector(8) short int
common/dct.c:330:5: note: nunits = 8
common/dct.c:330:5: note: ==> examining statement: MEM[(int16_t[8] *)dct_6(D) + 48B][i_306] = _87;

common/dct.c:330:5: note: get vectype for scalar type:  int16_t
common/dct.c:330:5: note: vectype: vector(8) short int
common/dct.c:330:5: note: nunits = 8
common/dct.c:330:5: note: ==> examining statement: _89 = _84 - _85;

common/dct.c:330:5: note: get vectype for scalar type:  unsigned short
common/dct.c:330:5: note: vectype: vector(8) unsigned short
common/dct.c:330:5: note: get vectype for scalar type:  unsigned short
common/dct.c:330:5: note: vectype: vector(8) unsigned short
common/dct.c:330:5: note: nunits = 8
common/dct.c:330:5: note: ==> examining statement: _90 = (short int) _89;

common/dct.c:330:5: note: get vectype for scalar type:  short int
common/dct.c:330:5: note: vectype: vector(8) short int
common/dct.c:330:5: note: get vectype for scalar type:  short int
common/dct.c:330:5: note: vectype: vector(8) short int
common/dct.c:330:5: note: nunits = 8
common/dct.c:330:5: note: ==> examining statement: MEM[(int16_t[8] *)dct_6(D) + 64B][i_306] = _90;

common/dct.c:330:5: note: get vectype for scalar type:  int16_t
common/dct.c:330:5: note: vectype: vector(8) short int
common/dct.c:330:5: note: nunits = 8
common/dct.c:330:5: note: ==> examining statement: _92 = _79 - _80;

common/dct.c:330:5: note: get vectype for scalar type:  unsigned short
common/dct.c:330:5: note: vectype: vector(8) unsigned short
common/dct.c:330:5: note: get vectype for scalar type:  unsigned short
common/dct.c:330:5: note: vectype: vector(8) unsigned short
common/dct.c:330:5: note: nunits = 8
common/dct.c:330:5: note: ==> examining statement: _93 = (short int) _92;

common/dct.c:330:5: note: get vectype for scalar type:  short int
common/dct.c:330:5: note: vectype: vector(8) short int
common/dct.c:330:5: note: get vectype for scalar type:  short int
common/dct.c:330:5: note: vectype: vector(8) short int
common/dct.c:330:5: note: nunits = 8
common/dct.c:330:5: note: ==> examining statement: MEM[(int16_t[8] *)dct_6(D) + 80B][i_306] = _93;

common/dct.c:330:5: note: get vectype for scalar type:  int16_t
common/dct.c:330:5: note: vectype: vector(8) short int
common/dct.c:330:5: note: nunits = 8
common/dct.c:330:5: note: ==> examining statement: _95 = _74 - _75;

common/dct.c:330:5: note: get vectype for scalar type:  unsigned short
common/dct.c:330:5: note: vectype: vector(8) unsigned short
common/dct.c:330:5: note: get vectype for scalar type:  unsigned short
common/dct.c:330:5: note: vectype: vector(8) unsigned short
common/dct.c:330:5: note: nunits = 8
common/dct.c:330:5: note: ==> examining statement: _96 = (short int) _95;

common/dct.c:330:5: note: get vectype for scalar type:  short int
common/dct.c:330:5: note: vectype: vector(8) short int
common/dct.c:330:5: note: get vectype for scalar type:  short int
common/dct.c:330:5: note: vectype: vector(8) short int
common/dct.c:330:5: note: nunits = 8
common/dct.c:330:5: note: ==> examining statement: MEM[(int16_t[8] *)dct_6(D) + 96B][i_306] = _96;

common/dct.c:330:5: note: get vectype for scalar type:  int16_t
common/dct.c:330:5: note: vectype: vector(8) short int
common/dct.c:330:5: note: nunits = 8
common/dct.c:330:5: note: ==> examining statement: _98 = _69 - _70;

common/dct.c:330:5: note: get vectype for scalar type:  unsigned short
common/dct.c:330:5: note: vectype: vector(8) unsigned short
common/dct.c:330:5: note: get vectype for scalar type:  unsigned short
common/dct.c:330:5: note: vectype: vector(8) unsigned short
common/dct.c:330:5: note: nunits = 8
common/dct.c:330:5: note: ==> examining statement: _99 = (short int) _98;

common/dct.c:330:5: note: get vectype for scalar type:  short int
common/dct.c:330:5: note: vectype: vector(8) short int
common/dct.c:330:5: note: get vectype for scalar type:  short int
common/dct.c:330:5: note: vectype: vector(8) short int
common/dct.c:330:5: note: nunits = 8
common/dct.c:330:5: note: ==> examining statement: MEM[(int16_t[8] *)dct_6(D) + 112B][i_306] = _99;

common/dct.c:330:5: note: get vectype for scalar type:  int16_t
common/dct.c:330:5: note: vectype: vector(8) short int
common/dct.c:330:5: note: nunits = 8
common/dct.c:330:5: note: ==> examining statement: i_101 = i_306 + 1;

common/dct.c:330:5: note: skip.
common/dct.c:330:5: note: ==> examining statement: # DEBUG i => i_101

common/dct.c:330:5: note: skip.
common/dct.c:330:5: note: ==> examining statement: # DEBUG i => i_101

common/dct.c:330:5: note: skip.
common/dct.c:330:5: note: ==> examining statement: ivtmp_562 = ivtmp_563 - 1;

common/dct.c:330:5: note: skip.
common/dct.c:330:5: note: ==> examining statement: if (ivtmp_562 != 0)

common/dct.c:330:5: note: skip.
common/dct.c:330:5: note: vectorization factor = 8
common/dct.c:330:5: note: === vect_analyze_data_refs_alignment ===
common/dct.c:330:5: note: dependence distance  = 0.
common/dct.c:330:5: note: accesses have the same alignment.
dependence distance modulo vf == 0 between *dct_6(D)[i_306] and *dct_6(D)[i_306]
common/dct.c:330:5: note: dependence distance  = 0.
common/dct.c:330:5: note: accesses have the same alignment.
dependence distance modulo vf == 0 between MEM[(int16_t[8] *)dct_6(D) + 64B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 64B][i_306]
common/dct.c:330:5: note: dependence distance  = 0.
common/dct.c:330:5: note: accesses have the same alignment.
dependence distance modulo vf == 0 between MEM[(int16_t[8] *)dct_6(D) + 32B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 32B][i_306]
common/dct.c:330:5: note: dependence distance  = 0.
common/dct.c:330:5: note: accesses have the same alignment.
dependence distance modulo vf == 0 between MEM[(int16_t[8] *)dct_6(D) + 96B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 96B][i_306]
common/dct.c:330:5: note: dependence distance  = 0.
common/dct.c:330:5: note: accesses have the same alignment.
dependence distance modulo vf == 0 between MEM[(int16_t[8] *)dct_6(D) + 80B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 80B][i_306]
common/dct.c:330:5: note: dependence distance  = 0.
common/dct.c:330:5: note: accesses have the same alignment.
dependence distance modulo vf == 0 between MEM[(int16_t[8] *)dct_6(D) + 48B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 48B][i_306]
common/dct.c:330:5: note: dependence distance  = 0.
common/dct.c:330:5: note: accesses have the same alignment.
dependence distance modulo vf == 0 between MEM[(int16_t[8] *)dct_6(D) + 112B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 112B][i_306]
common/dct.c:330:5: note: dependence distance  = 0.
common/dct.c:330:5: note: accesses have the same alignment.
dependence distance modulo vf == 0 between MEM[(int16_t[8] *)dct_6(D) + 16B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 16B][i_306]
common/dct.c:330:5: note: vect_compute_data_ref_alignment:
common/dct.c:330:5: note: can't force alignment of ref: *dct_6(D)[i_306]
common/dct.c:330:5: note: vect_compute_data_ref_alignment:
common/dct.c:330:5: note: can't force alignment of ref: MEM[(int16_t[8] *)dct_6(D) + 64B][i_306]
common/dct.c:330:5: note: vect_compute_data_ref_alignment:
common/dct.c:330:5: note: can't force alignment of ref: MEM[(int16_t[8] *)dct_6(D) + 32B][i_306]
common/dct.c:330:5: note: vect_compute_data_ref_alignment:
common/dct.c:330:5: note: can't force alignment of ref: MEM[(int16_t[8] *)dct_6(D) + 96B][i_306]
common/dct.c:330:5: note: vect_compute_data_ref_alignment:
common/dct.c:330:5: note: can't force alignment of ref: MEM[(int16_t[8] *)dct_6(D) + 80B][i_306]
common/dct.c:330:5: note: vect_compute_data_ref_alignment:
common/dct.c:330:5: note: can't force alignment of ref: MEM[(int16_t[8] *)dct_6(D) + 48B][i_306]
common/dct.c:330:5: note: vect_compute_data_ref_alignment:
common/dct.c:330:5: note: can't force alignment of ref: MEM[(int16_t[8] *)dct_6(D) + 112B][i_306]
common/dct.c:330:5: note: vect_compute_data_ref_alignment:
common/dct.c:330:5: note: can't force alignment of ref: MEM[(int16_t[8] *)dct_6(D) + 16B][i_306]
common/dct.c:330:5: note: vect_compute_data_ref_alignment:
common/dct.c:330:5: note: can't force alignment of ref: *dct_6(D)[i_306]
common/dct.c:330:5: note: vect_compute_data_ref_alignment:
common/dct.c:330:5: note: can't force alignment of ref: MEM[(int16_t[8] *)dct_6(D) + 16B][i_306]
common/dct.c:330:5: note: vect_compute_data_ref_alignment:
common/dct.c:330:5: note: can't force alignment of ref: MEM[(int16_t[8] *)dct_6(D) + 32B][i_306]
common/dct.c:330:5: note: vect_compute_data_ref_alignment:
common/dct.c:330:5: note: can't force alignment of ref: MEM[(int16_t[8] *)dct_6(D) + 48B][i_306]
common/dct.c:330:5: note: vect_compute_data_ref_alignment:
common/dct.c:330:5: note: can't force alignment of ref: MEM[(int16_t[8] *)dct_6(D) + 64B][i_306]
common/dct.c:330:5: note: vect_compute_data_ref_alignment:
common/dct.c:330:5: note: can't force alignment of ref: MEM[(int16_t[8] *)dct_6(D) + 80B][i_306]
common/dct.c:330:5: note: vect_compute_data_ref_alignment:
common/dct.c:330:5: note: can't force alignment of ref: MEM[(int16_t[8] *)dct_6(D) + 96B][i_306]
common/dct.c:330:5: note: vect_compute_data_ref_alignment:
common/dct.c:330:5: note: can't force alignment of ref: MEM[(int16_t[8] *)dct_6(D) + 112B][i_306]
common/dct.c:330:5: note: === vect_prune_runtime_alias_test_list ===
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
common/dct.c:330:5: note: found equal ranges *dct_6(D)[i_306], MEM[(int16_t[8] *)dct_6(D) + 32B][i_306] and *dct_6(D)[i_306], MEM[(int16_t[8] *)dct_6(D) + 32B][i_306]
common/dct.c:330:5: note: merging ranges for MEM[(int16_t[8] *)dct_6(D) + 16B][i_306], *dct_6(D)[i_306] and MEM[(int16_t[8] *)dct_6(D) + 32B][i_306], *dct_6(D)[i_306]
common/dct.c:330:5: note: merging ranges for MEM[(int16_t[8] *)dct_6(D) + 16B][i_306], *dct_6(D)[i_306] and MEM[(int16_t[8] *)dct_6(D) + 16B][i_306], *dct_6(D)[i_306]
common/dct.c:330:5: note: merging ranges for MEM[(int16_t[8] *)dct_6(D) + 16B][i_306], *dct_6(D)[i_306] and MEM[(int16_t[8] *)dct_6(D) + 48B][i_306], *dct_6(D)[i_306]
common/dct.c:330:5: note: merging ranges for MEM[(int16_t[8] *)dct_6(D) + 16B][i_306], *dct_6(D)[i_306] and MEM[(int16_t[8] *)dct_6(D) + 48B][i_306], *dct_6(D)[i_306]
common/dct.c:330:5: note: merging ranges for MEM[(int16_t[8] *)dct_6(D) + 16B][i_306], *dct_6(D)[i_306] and MEM[(int16_t[8] *)dct_6(D) + 112B][i_306], *dct_6(D)[i_306]
common/dct.c:330:5: note: merging ranges for MEM[(int16_t[8] *)dct_6(D) + 16B][i_306], *dct_6(D)[i_306] and MEM[(int16_t[8] *)dct_6(D) + 112B][i_306], *dct_6(D)[i_306]
common/dct.c:330:5: note: merging ranges for MEM[(int16_t[8] *)dct_6(D) + 16B][i_306], *dct_6(D)[i_306] and MEM[(int16_t[8] *)dct_6(D) + 80B][i_306], *dct_6(D)[i_306]
common/dct.c:330:5: note: merging ranges for MEM[(int16_t[8] *)dct_6(D) + 16B][i_306], *dct_6(D)[i_306] and MEM[(int16_t[8] *)dct_6(D) + 80B][i_306], *dct_6(D)[i_306]
common/dct.c:330:5: note: merging ranges for MEM[(int16_t[8] *)dct_6(D) + 16B][i_306], *dct_6(D)[i_306] and MEM[(int16_t[8] *)dct_6(D) + 64B][i_306], *dct_6(D)[i_306]
common/dct.c:330:5: note: merging ranges for MEM[(int16_t[8] *)dct_6(D) + 16B][i_306], *dct_6(D)[i_306] and MEM[(int16_t[8] *)dct_6(D) + 64B][i_306], *dct_6(D)[i_306]
common/dct.c:330:5: note: merging ranges for MEM[(int16_t[8] *)dct_6(D) + 16B][i_306], *dct_6(D)[i_306] and MEM[(int16_t[8] *)dct_6(D) + 96B][i_306], *dct_6(D)[i_306]
common/dct.c:330:5: note: merging ranges for MEM[(int16_t[8] *)dct_6(D) + 16B][i_306], *dct_6(D)[i_306] and MEM[(int16_t[8] *)dct_6(D) + 96B][i_306], *dct_6(D)[i_306]
common/dct.c:330:5: note: merging ranges for *dct_6(D)[i_306], MEM[(int16_t[8] *)dct_6(D) + 32B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 16B][i_306], MEM[(int16_t[8] *)dct_6(D) + 32B][i_306]
common/dct.c:330:5: note: merging ranges for *dct_6(D)[i_306], MEM[(int16_t[8] *)dct_6(D) + 32B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 48B][i_306], MEM[(int16_t[8] *)dct_6(D) + 32B][i_306]
common/dct.c:330:5: note: merging ranges for *dct_6(D)[i_306], MEM[(int16_t[8] *)dct_6(D) + 32B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 48B][i_306], MEM[(int16_t[8] *)dct_6(D) + 32B][i_306]
common/dct.c:330:5: note: merging ranges for *dct_6(D)[i_306], MEM[(int16_t[8] *)dct_6(D) + 32B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 112B][i_306], MEM[(int16_t[8] *)dct_6(D) + 32B][i_306]
common/dct.c:330:5: note: merging ranges for *dct_6(D)[i_306], MEM[(int16_t[8] *)dct_6(D) + 32B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 112B][i_306], MEM[(int16_t[8] *)dct_6(D) + 32B][i_306]
common/dct.c:330:5: note: merging ranges for *dct_6(D)[i_306], MEM[(int16_t[8] *)dct_6(D) + 32B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 80B][i_306], MEM[(int16_t[8] *)dct_6(D) + 32B][i_306]
common/dct.c:330:5: note: merging ranges for *dct_6(D)[i_306], MEM[(int16_t[8] *)dct_6(D) + 32B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 80B][i_306], MEM[(int16_t[8] *)dct_6(D) + 32B][i_306]
common/dct.c:330:5: note: merging ranges for *dct_6(D)[i_306], MEM[(int16_t[8] *)dct_6(D) + 32B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 64B][i_306], MEM[(int16_t[8] *)dct_6(D) + 32B][i_306]
common/dct.c:330:5: note: merging ranges for *dct_6(D)[i_306], MEM[(int16_t[8] *)dct_6(D) + 32B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 64B][i_306], MEM[(int16_t[8] *)dct_6(D) + 32B][i_306]
common/dct.c:330:5: note: merging ranges for *dct_6(D)[i_306], MEM[(int16_t[8] *)dct_6(D) + 32B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 96B][i_306], MEM[(int16_t[8] *)dct_6(D) + 32B][i_306]
common/dct.c:330:5: note: merging ranges for *dct_6(D)[i_306], MEM[(int16_t[8] *)dct_6(D) + 32B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 96B][i_306], MEM[(int16_t[8] *)dct_6(D) + 32B][i_306]
common/dct.c:330:5: note: merging ranges for *dct_6(D)[i_306], MEM[(int16_t[8] *)dct_6(D) + 16B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 32B][i_306], MEM[(int16_t[8] *)dct_6(D) + 16B][i_306]
common/dct.c:330:5: note: merging ranges for *dct_6(D)[i_306], MEM[(int16_t[8] *)dct_6(D) + 16B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 32B][i_306], MEM[(int16_t[8] *)dct_6(D) + 16B][i_306]
common/dct.c:330:5: note: merging ranges for *dct_6(D)[i_306], MEM[(int16_t[8] *)dct_6(D) + 16B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 48B][i_306], MEM[(int16_t[8] *)dct_6(D) + 16B][i_306]
common/dct.c:330:5: note: merging ranges for *dct_6(D)[i_306], MEM[(int16_t[8] *)dct_6(D) + 16B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 48B][i_306], MEM[(int16_t[8] *)dct_6(D) + 16B][i_306]
common/dct.c:330:5: note: merging ranges for *dct_6(D)[i_306], MEM[(int16_t[8] *)dct_6(D) + 16B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 112B][i_306], MEM[(int16_t[8] *)dct_6(D) + 16B][i_306]
common/dct.c:330:5: note: merging ranges for *dct_6(D)[i_306], MEM[(int16_t[8] *)dct_6(D) + 16B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 112B][i_306], MEM[(int16_t[8] *)dct_6(D) + 16B][i_306]
common/dct.c:330:5: note: merging ranges for *dct_6(D)[i_306], MEM[(int16_t[8] *)dct_6(D) + 16B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 80B][i_306], MEM[(int16_t[8] *)dct_6(D) + 16B][i_306]
common/dct.c:330:5: note: merging ranges for *dct_6(D)[i_306], MEM[(int16_t[8] *)dct_6(D) + 16B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 80B][i_306], MEM[(int16_t[8] *)dct_6(D) + 16B][i_306]
common/dct.c:330:5: note: merging ranges for *dct_6(D)[i_306], MEM[(int16_t[8] *)dct_6(D) + 16B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 64B][i_306], MEM[(int16_t[8] *)dct_6(D) + 16B][i_306]
common/dct.c:330:5: note: merging ranges for *dct_6(D)[i_306], MEM[(int16_t[8] *)dct_6(D) + 16B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 64B][i_306], MEM[(int16_t[8] *)dct_6(D) + 16B][i_306]
common/dct.c:330:5: note: merging ranges for *dct_6(D)[i_306], MEM[(int16_t[8] *)dct_6(D) + 16B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 96B][i_306], MEM[(int16_t[8] *)dct_6(D) + 16B][i_306]
common/dct.c:330:5: note: merging ranges for *dct_6(D)[i_306], MEM[(int16_t[8] *)dct_6(D) + 16B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 96B][i_306], MEM[(int16_t[8] *)dct_6(D) + 16B][i_306]
common/dct.c:330:5: note: merging ranges for *dct_6(D)[i_306], MEM[(int16_t[8] *)dct_6(D) + 48B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 32B][i_306], MEM[(int16_t[8] *)dct_6(D) + 48B][i_306]
common/dct.c:330:5: note: merging ranges for *dct_6(D)[i_306], MEM[(int16_t[8] *)dct_6(D) + 48B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 16B][i_306], MEM[(int16_t[8] *)dct_6(D) + 48B][i_306]
common/dct.c:330:5: note: merging ranges for *dct_6(D)[i_306], MEM[(int16_t[8] *)dct_6(D) + 48B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 112B][i_306], MEM[(int16_t[8] *)dct_6(D) + 48B][i_306]
common/dct.c:330:5: note: merging ranges for *dct_6(D)[i_306], MEM[(int16_t[8] *)dct_6(D) + 48B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 112B][i_306], MEM[(int16_t[8] *)dct_6(D) + 48B][i_306]
common/dct.c:330:5: note: merging ranges for *dct_6(D)[i_306], MEM[(int16_t[8] *)dct_6(D) + 48B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 80B][i_306], MEM[(int16_t[8] *)dct_6(D) + 48B][i_306]
common/dct.c:330:5: note: merging ranges for *dct_6(D)[i_306], MEM[(int16_t[8] *)dct_6(D) + 48B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 80B][i_306], MEM[(int16_t[8] *)dct_6(D) + 48B][i_306]
common/dct.c:330:5: note: merging ranges for *dct_6(D)[i_306], MEM[(int16_t[8] *)dct_6(D) + 48B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 64B][i_306], MEM[(int16_t[8] *)dct_6(D) + 48B][i_306]
common/dct.c:330:5: note: merging ranges for *dct_6(D)[i_306], MEM[(int16_t[8] *)dct_6(D) + 48B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 64B][i_306], MEM[(int16_t[8] *)dct_6(D) + 48B][i_306]
common/dct.c:330:5: note: merging ranges for *dct_6(D)[i_306], MEM[(int16_t[8] *)dct_6(D) + 48B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 96B][i_306], MEM[(int16_t[8] *)dct_6(D) + 48B][i_306]
common/dct.c:330:5: note: merging ranges for *dct_6(D)[i_306], MEM[(int16_t[8] *)dct_6(D) + 48B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 96B][i_306], MEM[(int16_t[8] *)dct_6(D) + 48B][i_306]
common/dct.c:330:5: note: merging ranges for *dct_6(D)[i_306], MEM[(int16_t[8] *)dct_6(D) + 112B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 32B][i_306], MEM[(int16_t[8] *)dct_6(D) + 112B][i_306]
common/dct.c:330:5: note: merging ranges for *dct_6(D)[i_306], MEM[(int16_t[8] *)dct_6(D) + 112B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 16B][i_306], MEM[(int16_t[8] *)dct_6(D) + 112B][i_306]
common/dct.c:330:5: note: merging ranges for *dct_6(D)[i_306], MEM[(int16_t[8] *)dct_6(D) + 112B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 48B][i_306], MEM[(int16_t[8] *)dct_6(D) + 112B][i_306]
common/dct.c:330:5: note: merging ranges for *dct_6(D)[i_306], MEM[(int16_t[8] *)dct_6(D) + 112B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 80B][i_306], MEM[(int16_t[8] *)dct_6(D) + 112B][i_306]
common/dct.c:330:5: note: merging ranges for *dct_6(D)[i_306], MEM[(int16_t[8] *)dct_6(D) + 112B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 64B][i_306], MEM[(int16_t[8] *)dct_6(D) + 112B][i_306]
common/dct.c:330:5: note: merging ranges for *dct_6(D)[i_306], MEM[(int16_t[8] *)dct_6(D) + 112B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 96B][i_306], MEM[(int16_t[8] *)dct_6(D) + 112B][i_306]
common/dct.c:330:5: note: merging ranges for *dct_6(D)[i_306], MEM[(int16_t[8] *)dct_6(D) + 80B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 32B][i_306], MEM[(int16_t[8] *)dct_6(D) + 80B][i_306]
common/dct.c:330:5: note: merging ranges for *dct_6(D)[i_306], MEM[(int16_t[8] *)dct_6(D) + 80B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 16B][i_306], MEM[(int16_t[8] *)dct_6(D) + 80B][i_306]
common/dct.c:330:5: note: merging ranges for *dct_6(D)[i_306], MEM[(int16_t[8] *)dct_6(D) + 80B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 48B][i_306], MEM[(int16_t[8] *)dct_6(D) + 80B][i_306]
common/dct.c:330:5: note: merging ranges for *dct_6(D)[i_306], MEM[(int16_t[8] *)dct_6(D) + 80B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 112B][i_306], MEM[(int16_t[8] *)dct_6(D) + 80B][i_306]
common/dct.c:330:5: note: merging ranges for *dct_6(D)[i_306], MEM[(int16_t[8] *)dct_6(D) + 80B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 112B][i_306], MEM[(int16_t[8] *)dct_6(D) + 80B][i_306]
common/dct.c:330:5: note: merging ranges for *dct_6(D)[i_306], MEM[(int16_t[8] *)dct_6(D) + 80B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 64B][i_306], MEM[(int16_t[8] *)dct_6(D) + 80B][i_306]
common/dct.c:330:5: note: merging ranges for *dct_6(D)[i_306], MEM[(int16_t[8] *)dct_6(D) + 80B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 96B][i_306], MEM[(int16_t[8] *)dct_6(D) + 80B][i_306]
common/dct.c:330:5: note: merging ranges for *dct_6(D)[i_306], MEM[(int16_t[8] *)dct_6(D) + 80B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 96B][i_306], MEM[(int16_t[8] *)dct_6(D) + 80B][i_306]
common/dct.c:330:5: note: merging ranges for *dct_6(D)[i_306], MEM[(int16_t[8] *)dct_6(D) + 64B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 32B][i_306], MEM[(int16_t[8] *)dct_6(D) + 64B][i_306]
common/dct.c:330:5: note: merging ranges for *dct_6(D)[i_306], MEM[(int16_t[8] *)dct_6(D) + 64B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 16B][i_306], MEM[(int16_t[8] *)dct_6(D) + 64B][i_306]
common/dct.c:330:5: note: merging ranges for *dct_6(D)[i_306], MEM[(int16_t[8] *)dct_6(D) + 64B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 48B][i_306], MEM[(int16_t[8] *)dct_6(D) + 64B][i_306]
common/dct.c:330:5: note: merging ranges for *dct_6(D)[i_306], MEM[(int16_t[8] *)dct_6(D) + 64B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 112B][i_306], MEM[(int16_t[8] *)dct_6(D) + 64B][i_306]
common/dct.c:330:5: note: merging ranges for *dct_6(D)[i_306], MEM[(int16_t[8] *)dct_6(D) + 64B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 112B][i_306], MEM[(int16_t[8] *)dct_6(D) + 64B][i_306]
common/dct.c:330:5: note: merging ranges for *dct_6(D)[i_306], MEM[(int16_t[8] *)dct_6(D) + 64B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 80B][i_306], MEM[(int16_t[8] *)dct_6(D) + 64B][i_306]
common/dct.c:330:5: note: merging ranges for *dct_6(D)[i_306], MEM[(int16_t[8] *)dct_6(D) + 64B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 80B][i_306], MEM[(int16_t[8] *)dct_6(D) + 64B][i_306]
common/dct.c:330:5: note: merging ranges for *dct_6(D)[i_306], MEM[(int16_t[8] *)dct_6(D) + 64B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 96B][i_306], MEM[(int16_t[8] *)dct_6(D) + 64B][i_306]
common/dct.c:330:5: note: merging ranges for *dct_6(D)[i_306], MEM[(int16_t[8] *)dct_6(D) + 64B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 96B][i_306], MEM[(int16_t[8] *)dct_6(D) + 64B][i_306]
common/dct.c:330:5: note: merging ranges for *dct_6(D)[i_306], MEM[(int16_t[8] *)dct_6(D) + 96B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 32B][i_306], MEM[(int16_t[8] *)dct_6(D) + 96B][i_306]
common/dct.c:330:5: note: merging ranges for *dct_6(D)[i_306], MEM[(int16_t[8] *)dct_6(D) + 96B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 16B][i_306], MEM[(int16_t[8] *)dct_6(D) + 96B][i_306]
common/dct.c:330:5: note: merging ranges for *dct_6(D)[i_306], MEM[(int16_t[8] *)dct_6(D) + 96B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 48B][i_306], MEM[(int16_t[8] *)dct_6(D) + 96B][i_306]
common/dct.c:330:5: note: merging ranges for *dct_6(D)[i_306], MEM[(int16_t[8] *)dct_6(D) + 96B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 112B][i_306], MEM[(int16_t[8] *)dct_6(D) + 96B][i_306]
common/dct.c:330:5: note: merging ranges for *dct_6(D)[i_306], MEM[(int16_t[8] *)dct_6(D) + 96B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 112B][i_306], MEM[(int16_t[8] *)dct_6(D) + 96B][i_306]
common/dct.c:330:5: note: merging ranges for *dct_6(D)[i_306], MEM[(int16_t[8] *)dct_6(D) + 96B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 80B][i_306], MEM[(int16_t[8] *)dct_6(D) + 96B][i_306]
common/dct.c:330:5: note: merging ranges for *dct_6(D)[i_306], MEM[(int16_t[8] *)dct_6(D) + 96B][i_306] and MEM[(int16_t[8] *)dct_6(D) + 64B][i_306], MEM[(int16_t[8] *)dct_6(D) + 96B][i_306]
common/dct.c:330:5: note: improved number of alias checks from 84 to 8
common/dct.c:330:5: note: number of versioning for alias run-time tests exceeds 6 (--param vect-max-version-for-alias-checks)
common/dct.c:322:13: note: vectorized 0 loops in function.
add8x8_idct8 (uint8_t * dst, int16_t[8] * dct)
{
  const int b7;
  const int b5;
  const int b3;
  const int b1;
  const int a7;
  const int a5;
  const int a3;
  const int a1;
  const int b6;
  const int b4;
  const int b2;
  const int b0;
  const int a6;
  const int a4;
  const int a2;
  const int a0;
  const int b7;
  const int b5;
  const int b3;
  const int b1;
  const int a7;
  const int a5;
  const int a3;
  const int a1;
  const int b6;
  const int b4;
  const int b2;
  const int b0;
  const int a6;
  const int a4;
  const int a2;
  const int a0;
  int i;
  short int _7;
  unsigned short _8;
  unsigned short _9;
  short int _10;
  short int _12;
  int _13;
  short int _14;
  int _15;
  short int _19;
  short int _20;
  int _21;
  short int _22;
  int _23;
  short int _25;
  int _26;
  int _27;
  short int _33;
  int _34;
  short int _35;
  int _36;
  int _37;
  short int _38;
  int _39;
  int _40;
  short int _41;
  int _42;
  short int _44;
  int _45;
  int _46;
  int _47;
  short int _48;
  int _49;
  int _51;
  int _52;
  short int _53;
  int _54;
  int _56;
  int _57;
  short int _58;
  int _59;
  int _61;
  int _63;
  int _65;
  int _67;
  unsigned short _69;
  unsigned short _70;
  unsigned short _71;
  short int _72;
  unsigned short _74;
  unsigned short _75;
  unsigned short _76;
  short int _77;
  unsigned short _79;
  unsigned short _80;
  unsigned short _81;
  short int _82;
  unsigned short _84;
  unsigned short _85;
  unsigned short _86;
  short int _87;
  unsigned short _89;
  short int _90;
  unsigned short _92;
  short int _93;
  unsigned short _95;
  short int _96;
  unsigned short _98;
  short int _99;
  long unsigned int _102;
  long unsigned int _103;
  int16_t[8] * _104;
  short int _105;
  int _106;
  short int _107;
  int _108;
  short int _111;
  short int _112;
  int _113;
  short int _114;
  int _115;
  short int _117;
  int _118;
  int _119;
  short int _125;
  int _126;
  short int _127;
  int _128;
  int _129;
  short int _130;
  int _131;
  int _132;
  short int _133;
  int _134;
  short int _136;
  int _137;
  int _138;
  int _139;
  short int _140;
  int _141;
  int _143;
  int _144;
  short int _145;
  int _146;
  int _148;
  int _149;
  short int _150;
  int _151;
  int _153;
  int _155;
  int _157;
  int _159;
  uint8_t * _162;
  unsigned char _163;
  int _164;
  int _165;
  int _166;
  int _167;
  int _168;
  sizetype _170;
  uint8_t * _171;
  unsigned char _172;
  int _173;
  int _174;
  int _175;
  int _176;
  int _177;
  sizetype _179;
  uint8_t * _180;
  unsigned char _181;
  int _182;
  int _183;
  int _184;
  int _185;
  unsigned char iftmp.0_186;
  sizetype _188;
  uint8_t * _189;
  unsigned char _190;
  int _191;
  int _192;
  int _193;
  int _194;
  unsigned char iftmp.0_195;
  sizetype _197;
  uint8_t * _198;
  unsigned char _199;
  int _200;
  int _201;
  int _202;
  int _203;
  unsigned char iftmp.0_204;
  sizetype _206;
  uint8_t * _207;
  unsigned char _208;
  int _209;
  int _210;
  int _211;
  int _212;
  int _213;
  sizetype _215;
  uint8_t * _216;
  unsigned char _217;
  int _218;
  int _219;
  int _220;
  int _221;
  int _222;
  sizetype _224;
  uint8_t * _225;
  unsigned char _226;
  int _227;
  int _228;
  int _229;
  int _230;
  int _231;
  int _234;
  unsigned char iftmp.0_235;
  unsigned char iftmp.0_236;
  unsigned char iftmp.0_237;
  int _238;
  int _239;
  int _240;
  unsigned char iftmp.0_241;
  unsigned char iftmp.0_242;
  unsigned char iftmp.0_243;
  int _244;
  int _245;
  int _246;
  unsigned char iftmp.0_247;
  unsigned char iftmp.0_248;
  unsigned char iftmp.0_249;
  int _250;
  int _251;
  int _252;
  unsigned char iftmp.0_253;
  unsigned char iftmp.0_254;
  unsigned char iftmp.0_255;
  int _256;
  int _257;
  int _258;
  unsigned char iftmp.0_259;
  unsigned char iftmp.0_260;
  unsigned char iftmp.0_261;
  int _262;
  int _263;
  int _264;
  unsigned char iftmp.0_265;
  unsigned char iftmp.0_266;
  unsigned char iftmp.0_267;
  int _268;
  int _269;
  int _270;
  unsigned char iftmp.0_271;
  unsigned char iftmp.0_272;
  unsigned char iftmp.0_273;
  int patt_547;
  int patt_549;
  int patt_551;
  int patt_553;
  int patt_555;
  int patt_557;
  int patt_559;
  int patt_561;
  unsigned int ivtmp_562;
  unsigned int ivtmp_563;
  unsigned int ivtmp_564;
  unsigned int ivtmp_565;

  <bb 2>:
  _7 = *dct_6(D)[0];
  _8 = (unsigned short) _7;
  _9 = _8 + 32;
  _10 = (short int) _9;
  *dct_6(D)[0] = _10;
  # DEBUG i => 0
  # DEBUG i => 0

  <bb 3>:
  # i_306 = PHI <i_101(4), 0(2)>
  # ivtmp_563 = PHI <ivtmp_562(4), 8(2)>
  # DEBUG i => i_306
  _12 = *dct_6(D)[i_306];
  _13 = (int) _12;
  _14 = MEM[(int16_t[8] *)dct_6(D) + 64B][i_306];
  _15 = (int) _14;
  a0_16 = _13 + _15;
  # DEBUG a0 => a0_16
  a2_18 = _13 - _15;
  # DEBUG a2 => a2_18
  _19 = MEM[(int16_t[8] *)dct_6(D) + 32B][i_306];
  _20 = _19 >> 1;
  _21 = (int) _20;
  _22 = MEM[(int16_t[8] *)dct_6(D) + 96B][i_306];
  _23 = (int) _22;
  a4_24 = _21 - _23;
  # DEBUG a4 => a4_24
  _25 = _22 >> 1;
  _26 = (int) _25;
  _27 = (int) _19;
  a6_28 = _26 + _27;
  # DEBUG a6 => a6_28
  b0_29 = a0_16 + a6_28;
  # DEBUG b0 => b0_29
  b2_30 = a2_18 + a4_24;
  # DEBUG b2 => b2_30
  b4_31 = a2_18 - a4_24;
  # DEBUG b4 => b4_31
  b6_32 = a0_16 - a6_28;
  # DEBUG b6 => b6_32
  _33 = MEM[(int16_t[8] *)dct_6(D) + 80B][i_306];
  _34 = (int) _33;
  _35 = MEM[(int16_t[8] *)dct_6(D) + 48B][i_306];
  _36 = (int) _35;
  _37 = _34 - _36;
  _38 = MEM[(int16_t[8] *)dct_6(D) + 112B][i_306];
  _39 = (int) _38;
  _40 = _37 - _39;
  _41 = _38 >> 1;
  _42 = (int) _41;
  a1_43 = _40 - _42;
  # DEBUG a1 => a1_43
  _44 = MEM[(int16_t[8] *)dct_6(D) + 16B][i_306];
  _45 = (int) _44;
  _46 = _39 + _45;
  _47 = _46 - _36;
  _48 = _35 >> 1;
  _49 = (int) _48;
  a3_50 = _47 - _49;
  # DEBUG a3 => a3_50
  _51 = _39 - _45;
  _52 = _34 + _51;
  _53 = _33 >> 1;
  _54 = (int) _53;
  a5_55 = _52 + _54;
  # DEBUG a5 => a5_55
  _56 = _34 + _36;
  _57 = _45 + _56;
  _58 = _44 >> 1;
  _59 = (int) _58;
  a7_60 = _57 + _59;
  # DEBUG a7 => a7_60
  _61 = a7_60 >> 2;
  b1_62 = a1_43 + _61;
  # DEBUG b1 => b1_62
  _63 = a5_55 >> 2;
  b3_64 = a3_50 + _63;
  # DEBUG b3 => b3_64
  _65 = a3_50 >> 2;
  b5_66 = _65 - a5_55;
  # DEBUG b5 => b5_66
  _67 = a1_43 >> 2;
  b7_68 = a7_60 - _67;
  # DEBUG b7 => b7_68
  _69 = (unsigned short) b0_29;
  _70 = (unsigned short) b7_68;
  _71 = _69 + _70;
  _72 = (short int) _71;
  *dct_6(D)[i_306] = _72;
  _74 = (unsigned short) b2_30;
  _75 = (unsigned short) b5_66;
  _76 = _74 + _75;
  _77 = (short int) _76;
  MEM[(int16_t[8] *)dct_6(D) + 16B][i_306] = _77;
  _79 = (unsigned short) b4_31;
  _80 = (unsigned short) b3_64;
  _81 = _79 + _80;
  _82 = (short int) _81;
  MEM[(int16_t[8] *)dct_6(D) + 32B][i_306] = _82;
  _84 = (unsigned short) b6_32;
  _85 = (unsigned short) b1_62;
  _86 = _84 + _85;
  _87 = (short int) _86;
  MEM[(int16_t[8] *)dct_6(D) + 48B][i_306] = _87;
  _89 = _84 - _85;
  _90 = (short int) _89;
  MEM[(int16_t[8] *)dct_6(D) + 64B][i_306] = _90;
  _92 = _79 - _80;
  _93 = (short int) _92;
  MEM[(int16_t[8] *)dct_6(D) + 80B][i_306] = _93;
  _95 = _74 - _75;
  _96 = (short int) _95;
  MEM[(int16_t[8] *)dct_6(D) + 96B][i_306] = _96;
  _98 = _69 - _70;
  _99 = (short int) _98;
  MEM[(int16_t[8] *)dct_6(D) + 112B][i_306] = _99;
  i_101 = i_306 + 1;
  # DEBUG i => i_101
  # DEBUG i => i_101
  ivtmp_562 = ivtmp_563 - 1;
  if (ivtmp_562 != 0)
    goto <bb 4>;
  else
    goto <bb 5>;

  <bb 4>:
  goto <bb 3>;

  <bb 5>:

  <bb 6>:
  # i_305 = PHI <0(5), i_233(7)>
  # ivtmp_565 = PHI <8(5), ivtmp_564(7)>
  # DEBUG i => NULL
  _102 = (long unsigned int) i_305;
  _103 = _102 * 16;
  _104 = dct_6(D) + _103;
  _105 = *_104[0];
  _106 = (int) _105;
  _107 = *_104[4];
  _108 = (int) _107;
  a0_109 = _106 + _108;
  # DEBUG a0 => NULL
  a2_110 = _106 - _108;
  # DEBUG a2 => NULL
  _111 = *_104[2];
  _112 = _111 >> 1;
  _113 = (int) _112;
  _114 = *_104[6];
  _115 = (int) _114;
  a4_116 = _113 - _115;
  # DEBUG a4 => NULL
  _117 = _114 >> 1;
  _118 = (int) _117;
  _119 = (int) _111;
  a6_120 = _118 + _119;
  # DEBUG a6 => NULL
  b0_121 = a0_109 + a6_120;
  # DEBUG b0 => NULL
  b2_122 = a2_110 + a4_116;
  # DEBUG b2 => NULL
  b4_123 = a2_110 - a4_116;
  # DEBUG b4 => NULL
  b6_124 = a0_109 - a6_120;
  # DEBUG b6 => NULL
  _125 = *_104[5];
  _126 = (int) _125;
  _127 = *_104[3];
  _128 = (int) _127;
  _129 = _126 - _128;
  _130 = *_104[7];
  _131 = (int) _130;
  _132 = _129 - _131;
  _133 = _130 >> 1;
  _134 = (int) _133;
  a1_135 = _132 - _134;
  # DEBUG a1 => NULL
  _136 = *_104[1];
  _137 = (int) _136;
  _138 = _131 + _137;
  _139 = _138 - _128;
  _140 = _127 >> 1;
  _141 = (int) _140;
  a3_142 = _139 - _141;
  # DEBUG a3 => NULL
  _143 = _131 - _137;
  _144 = _126 + _143;
  _145 = _125 >> 1;
  _146 = (int) _145;
  a5_147 = _144 + _146;
  # DEBUG a5 => NULL
  _148 = _126 + _128;
  _149 = _137 + _148;
  _150 = _136 >> 1;
  _151 = (int) _150;
  a7_152 = _149 + _151;
  # DEBUG a7 => NULL
  _153 = a7_152 >> 2;
  b1_154 = a1_135 + _153;
  # DEBUG b1 => NULL
  _155 = a5_147 >> 2;
  b3_156 = a3_142 + _155;
  # DEBUG b3 => NULL
  _157 = a3_142 >> 2;
  b5_158 = _157 - a5_147;
  # DEBUG b5 => NULL
  _159 = a1_135 >> 2;
  b7_160 = a7_152 - _159;
  # DEBUG b7 => NULL
  _162 = dst_161(D) + _102;
  _163 = *_162;
  _164 = (int) _163;
  _165 = b0_121 + b7_160;
  _166 = _165 >> 6;
  _167 = _164 + _166;
  # DEBUG x => NULL
  _268 = _167 & -256;
  _269 = -_167;
  _270 = _269 >> 31;
  iftmp.0_271 = (unsigned char) _270;
  iftmp.0_272 = (unsigned char) _167;
  iftmp.0_273 = _268 != 0 ? iftmp.0_271 : iftmp.0_272;
  # DEBUG x => NULL
  *_162 = iftmp.0_273;
  _170 = _102 + 32;
  _171 = dst_161(D) + _170;
  _172 = *_171;
  _173 = (int) _172;
  _174 = b2_122 + b5_158;
  _175 = _174 >> 6;
  _176 = _173 + _175;
  # DEBUG x => NULL
  _262 = _176 & -256;
  _263 = -_176;
  _264 = _263 >> 31;
  iftmp.0_265 = (unsigned char) _264;
  iftmp.0_266 = (unsigned char) _176;
  iftmp.0_267 = _262 != 0 ? iftmp.0_265 : iftmp.0_266;
  # DEBUG x => NULL
  *_171 = iftmp.0_267;
  _179 = _102 + 64;
  _180 = dst_161(D) + _179;
  _181 = *_180;
  _182 = (int) _181;
  _183 = b4_123 + b3_156;
  _184 = _183 >> 6;
  _185 = _182 + _184;
  # DEBUG x => NULL
  _256 = _185 & -256;
  _257 = -_185;
  _258 = _257 >> 31;
  iftmp.0_259 = (unsigned char) _258;
  iftmp.0_260 = (unsigned char) _185;
  iftmp.0_261 = _256 != 0 ? iftmp.0_259 : iftmp.0_260;
  # DEBUG x => NULL
  *_180 = iftmp.0_261;
  _188 = _102 + 96;
  _189 = dst_161(D) + _188;
  _190 = *_189;
  _191 = (int) _190;
  _192 = b6_124 + b1_154;
  _193 = _192 >> 6;
  _194 = _191 + _193;
  # DEBUG x => NULL
  _250 = _194 & -256;
  _251 = -_194;
  _252 = _251 >> 31;
  iftmp.0_253 = (unsigned char) _252;
  iftmp.0_254 = (unsigned char) _194;
  iftmp.0_255 = _250 != 0 ? iftmp.0_253 : iftmp.0_254;
  # DEBUG x => NULL
  *_189 = iftmp.0_255;
  _197 = _102 + 128;
  _198 = dst_161(D) + _197;
  _199 = *_198;
  _200 = (int) _199;
  _201 = b6_124 - b1_154;
  _202 = _201 >> 6;
  _203 = _200 + _202;
  # DEBUG x => NULL
  _244 = _203 & -256;
  _245 = -_203;
  _246 = _245 >> 31;
  iftmp.0_247 = (unsigned char) _246;
  iftmp.0_248 = (unsigned char) _203;
  iftmp.0_249 = _244 != 0 ? iftmp.0_247 : iftmp.0_248;
  # DEBUG x => NULL
  *_198 = iftmp.0_249;
  _206 = _102 + 160;
  _207 = dst_161(D) + _206;
  _208 = *_207;
  _209 = (int) _208;
  _210 = b4_123 - b3_156;
  _211 = _210 >> 6;
  _212 = _209 + _211;
  # DEBUG x => NULL
  _238 = _212 & -256;
  _239 = -_212;
  _240 = _239 >> 31;
  iftmp.0_241 = (unsigned char) _240;
  iftmp.0_242 = (unsigned char) _212;
  iftmp.0_243 = _238 != 0 ? iftmp.0_241 : iftmp.0_242;
  # DEBUG x => NULL
  *_207 = iftmp.0_243;
  _215 = _102 + 192;
  _216 = dst_161(D) + _215;
  _217 = *_216;
  _218 = (int) _217;
  _219 = b2_122 - b5_158;
  _220 = _219 >> 6;
  _221 = _218 + _220;
  # DEBUG x => NULL
  _177 = _221 & -256;
  _168 = -_221;
  _234 = _168 >> 31;
  iftmp.0_235 = (unsigned char) _234;
  iftmp.0_236 = (unsigned char) _221;
  iftmp.0_237 = _177 != 0 ? iftmp.0_235 : iftmp.0_236;
  # DEBUG x => NULL
  *_216 = iftmp.0_237;
  _224 = _102 + 224;
  _225 = dst_161(D) + _224;
  _226 = *_225;
  _227 = (int) _226;
  _228 = b0_121 - b7_160;
  _229 = _228 >> 6;
  _230 = _227 + _229;
  # DEBUG x => NULL
  _231 = _230 & -256;
  _222 = -_230;
  _213 = _222 >> 31;
  iftmp.0_204 = (unsigned char) _213;
  iftmp.0_195 = (unsigned char) _230;
  iftmp.0_186 = _231 != 0 ? iftmp.0_204 : iftmp.0_195;
  # DEBUG x => NULL
  *_225 = iftmp.0_186;
  i_233 = i_305 + 1;
  # DEBUG i => i_233
  # DEBUG i => i_233
  ivtmp_564 = ivtmp_565 - 1;
  if (ivtmp_564 != 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  goto <bb 6>;

  <bb 8>:
  return;

}



;; Function zigzag_interleave_8x8_cavlc (zigzag_interleave_8x8_cavlc, funcdef_no=138, decl_uid=6431, cgraph_uid=138, symbol_order=183)


Analyzing loop at common/dct.c:570
common/dct.c:570:5: note: ===== analyze_loop_nest =====
common/dct.c:570:5: note: === vect_analyze_loop_form ===
common/dct.c:570:5: note: ===== analyze_loop_nest_1 =====
common/dct.c:570:5: note: === vect_analyze_loop_form ===
common/dct.c:570:5: note: === get_loop_niters ===
Analyzing # of iterations of loop 2
  exit condition [15, + , 4294967295] != 0
  bounds on difference of bases: -15 ... -15
  result:
    # of iterations 15, bounded by 15
common/dct.c:570:5: note: Considering outer-loop vectorization.
common/dct.c:570:5: note: === get_loop_niters ===
Analyzing # of iterations of loop 1
  exit condition [3, + , 4294967295] != 0
  bounds on difference of bases: -3 ... -3
  result:
    # of iterations 3, bounded by 3
common/dct.c:570:5: note: === vect_analyze_data_refs ===
Creating dr for *_18
analyze_innermost: success.
	base_address: src_17(D) + (sizetype) ((long unsigned int) i_5 * 2)
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 128
	base_object: *src_17(D)
	Access function 0: {{0B, +, 2}_1, +, 8}_2
Creating dr for *_12
analyze_innermost: success.
	base_address: dst_11(D) + (sizetype) ((long unsigned int) (i_5 * 16) * 2)
	offset from base address: 0
	constant offset from base address: 0
	step: 2
	aligned to: 128
	base_object: *dst_11(D)
	Access function 0: {{0B, +, 32}_1, +, 2}_2
Applying pattern match.pd:49, generic-match.c:4015
common/dct.c:570:5: note: analyze in outer-loop: *(src_17(D) + (sizetype) ((long unsigned int) i_5 * 2))
common/dct.c:570:5: note: 	outer base_address: src_17(D)
	outer offset from base address: 0
	outer constant offset from base address: 0
	outer step: 2
	outer aligned to: 128
common/dct.c:570:5: note: got vectype for stmt: _19 = *_18;
vector(8) short int
Applying pattern match.pd:49, generic-match.c:4015
common/dct.c:570:5: note: analyze in outer-loop: *(dst_11(D) + (sizetype) ((long unsigned int) (i_5 * 16) * 2))
common/dct.c:570:5: note: 	outer base_address: dst_11(D)
	outer offset from base address: 0
	outer constant offset from base address: 0
	outer step: 32
	outer aligned to: 128
common/dct.c:570:5: note: got vectype for stmt: *_12 = _19;
vector(8) short int
common/dct.c:570:5: note: === vect_analyze_scalar_cycles ===
common/dct.c:570:5: note: Analyze phi: i_5 = PHI <i_22(6), 0(2)>

common/dct.c:570:5: note: Access function of PHI: {0, +, 1}_1
common/dct.c:570:5: note: step: 1,  init: 0
common/dct.c:570:5: note: Detected induction.
common/dct.c:570:5: note: Analyze phi: .MEM_29 = PHI <.MEM_20(6), .MEM_6(D)(2)>

common/dct.c:570:5: note: Analyze phi: ivtmp_43 = PHI <ivtmp_42(6), 4(2)>

common/dct.c:570:5: note: Access function of PHI: {4, +, 4294967295}_1
common/dct.c:570:5: note: step: 4294967295,  init: 4
common/dct.c:570:5: note: Detected induction.
common/dct.c:570:5: note: === vect_analyze_scalar_cycles ===
common/dct.c:570:5: note: Analyze phi: j_23 = PHI <j_21(3), 0(7)>

common/dct.c:570:5: note: Access function of PHI: {0, +, 1}_2
common/dct.c:570:5: note: step: 1,  init: 0
common/dct.c:570:5: note: Detected induction.
common/dct.c:570:5: note: Analyze phi: .MEM_28 = PHI <.MEM_20(3), .MEM_29(7)>

common/dct.c:570:5: note: Analyze phi: ivtmp_45 = PHI <ivtmp_44(3), 16(7)>

common/dct.c:570:5: note: Access function of PHI: {16, +, 4294967295}_2
common/dct.c:570:5: note: step: 4294967295,  init: 16
common/dct.c:570:5: note: Detected induction.
common/dct.c:570:5: note: === vect_pattern_recog ===
common/dct.c:570:5: note: vect_is_simple_use: operand i_5
common/dct.c:570:5: note: def_stmt: i_5 = PHI <i_22(6), 0(2)>
common/dct.c:570:5: note: type of def: 4.
common/dct.c:570:5: note: vect_is_simple_use: operand _9
common/dct.c:570:5: note: def_stmt: _9 = (long unsigned int) _8;
common/dct.c:570:5: note: type of def: 3.
common/dct.c:570:5: note: vect_is_simple_use: operand _8
common/dct.c:570:5: note: def_stmt: _8 = j_23 + pretmp_54;
common/dct.c:570:5: note: type of def: 3.
common/dct.c:570:5: note: vect_is_simple_use: operand 2
common/dct.c:570:5: note: vect_is_simple_use: operand j_23
common/dct.c:570:5: note: def_stmt: j_23 = PHI <j_21(3), 0(7)>
common/dct.c:570:5: note: type of def: 4.
common/dct.c:570:5: note: vect_is_simple_use: operand _15
common/dct.c:570:5: note: def_stmt: _15 = (long unsigned int) _14;
common/dct.c:570:5: note: type of def: 3.
common/dct.c:570:5: note: vect_is_simple_use: operand _14
common/dct.c:570:5: note: def_stmt: _14 = i_5 + _13;
common/dct.c:570:5: note: type of def: 3.
common/dct.c:570:5: note: vect_is_simple_use: operand 2
common/dct.c:570:5: note: === vect_analyze_data_ref_accesses ===
common/dct.c:570:5: note: grouped access in outer loop.
common/dct.c:570:5: note: not vectorized: complicated access pattern.
common/dct.c:570:5: note: bad data access.

Analyzing loop at common/dct.c:571
common/dct.c:571:9: note: ===== analyze_loop_nest =====
common/dct.c:571:9: note: === vect_analyze_loop_form ===
common/dct.c:571:9: note: === get_loop_niters ===
common/dct.c:571:9: note: === vect_analyze_data_refs ===
Creating dr for *_18
analyze_innermost: success.
	base_address: src_17(D) + (sizetype) ((long unsigned int) i_5 * 2)
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 128
	base_object: *src_17(D) + (sizetype) ((long unsigned int) i_5 * 2)
	Access function 0: {0B, +, 8}_2
Creating dr for *_12
analyze_innermost: success.
	base_address: dst_11(D) + (sizetype) ((long unsigned int) (i_5 * 16) * 2)
	offset from base address: 0
	constant offset from base address: 0
	step: 2
	aligned to: 128
	base_object: *dst_11(D) + (sizetype) ((long unsigned int) (i_5 * 16) * 2)
	Access function 0: {0B, +, 2}_2
common/dct.c:571:9: note: got vectype for stmt: _19 = *_18;
vector(8) short int
common/dct.c:571:9: note: got vectype for stmt: *_12 = _19;
vector(8) short int
common/dct.c:571:9: note: === vect_analyze_scalar_cycles ===
common/dct.c:571:9: note: Analyze phi: j_23 = PHI <j_21(3), 0(7)>

common/dct.c:571:9: note: Access function of PHI: {0, +, 1}_2
common/dct.c:571:9: note: step: 1,  init: 0
common/dct.c:571:9: note: Detected induction.
common/dct.c:571:9: note: Analyze phi: .MEM_28 = PHI <.MEM_20(3), .MEM_29(7)>

common/dct.c:571:9: note: Analyze phi: ivtmp_45 = PHI <ivtmp_44(3), 16(7)>

common/dct.c:571:9: note: Access function of PHI: {16, +, 4294967295}_2
common/dct.c:571:9: note: step: 4294967295,  init: 16
common/dct.c:571:9: note: Detected induction.
common/dct.c:571:9: note: === vect_pattern_recog ===
common/dct.c:571:9: note: vect_is_simple_use: operand _9
common/dct.c:571:9: note: def_stmt: _9 = (long unsigned int) _8;
common/dct.c:571:9: note: type of def: 3.
common/dct.c:571:9: note: vect_is_simple_use: operand _8
common/dct.c:571:9: note: def_stmt: _8 = j_23 + pretmp_54;
common/dct.c:571:9: note: type of def: 3.
common/dct.c:571:9: note: vect_is_simple_use: operand 2
common/dct.c:571:9: note: vect_is_simple_use: operand j_23
common/dct.c:571:9: note: def_stmt: j_23 = PHI <j_21(3), 0(7)>
common/dct.c:571:9: note: type of def: 4.
common/dct.c:571:9: note: vect_is_simple_use: operand _15
common/dct.c:571:9: note: def_stmt: _15 = (long unsigned int) _14;
common/dct.c:571:9: note: type of def: 3.
common/dct.c:571:9: note: vect_is_simple_use: operand _14
common/dct.c:571:9: note: def_stmt: _14 = i_5 + _13;
common/dct.c:571:9: note: type of def: 3.
common/dct.c:571:9: note: vect_is_simple_use: operand 2
common/dct.c:571:9: note: === vect_analyze_data_ref_accesses ===
common/dct.c:571:9: note: Detected single element interleaving *_18 step 8
common/dct.c:571:9: note: Data access with gaps requires scalar epilogue loop
common/dct.c:571:9: note: === vect_mark_stmts_to_be_vectorized ===
common/dct.c:571:9: note: init: phi relevant? j_23 = PHI <j_21(3), 0(7)>
common/dct.c:571:9: note: init: phi relevant? .MEM_28 = PHI <.MEM_20(3), .MEM_29(7)>
common/dct.c:571:9: note: init: phi relevant? ivtmp_45 = PHI <ivtmp_44(3), 16(7)>
common/dct.c:571:9: note: init: stmt relevant? # DEBUG j => j_23
common/dct.c:571:9: note: init: stmt relevant? _8 = j_23 + pretmp_54;
common/dct.c:571:9: note: init: stmt relevant? _9 = (long unsigned int) _8;
common/dct.c:571:9: note: init: stmt relevant? _10 = _9 * 2;
common/dct.c:571:9: note: init: stmt relevant? _12 = dst_11(D) + _10;
common/dct.c:571:9: note: init: stmt relevant? _13 = j_23 * 4;
common/dct.c:571:9: note: init: stmt relevant? _14 = i_5 + _13;
common/dct.c:571:9: note: init: stmt relevant? _15 = (long unsigned int) _14;
common/dct.c:571:9: note: init: stmt relevant? _16 = _15 * 2;
common/dct.c:571:9: note: init: stmt relevant? _18 = src_17(D) + _16;
common/dct.c:571:9: note: init: stmt relevant? _19 = *_18;
common/dct.c:571:9: note: init: stmt relevant? *_12 = _19;
common/dct.c:571:9: note: vec_stmt_relevant_p: stmt has vdefs.
common/dct.c:571:9: note: mark relevant 4, live 0.
common/dct.c:571:9: note: init: stmt relevant? j_21 = j_23 + 1;
common/dct.c:571:9: note: init: stmt relevant? # DEBUG j => j_21
common/dct.c:571:9: note: init: stmt relevant? # DEBUG j => j_21
common/dct.c:571:9: note: init: stmt relevant? ivtmp_44 = ivtmp_45 - 1;
common/dct.c:571:9: note: init: stmt relevant? if (ivtmp_44 != 0)
common/dct.c:571:9: note: worklist: examine stmt: *_12 = _19;
common/dct.c:571:9: note: vect_is_simple_use: operand _19
common/dct.c:571:9: note: def_stmt: _19 = *_18;
common/dct.c:571:9: note: type of def: 3.
common/dct.c:571:9: note: mark relevant 4, live 0.
common/dct.c:571:9: note: worklist: examine stmt: _19 = *_18;
common/dct.c:571:9: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _19 = *_18;
  stmt_b: *_12 = _19;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _19 = *_18;
  stmt_b: _19 = *_18;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 8}_2)
  (chrec_b = {0B, +, 8}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: *_12 = _19;
  stmt_b: *_12 = _19;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 2}_2)
  (chrec_b = {0B, +, 2}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/dct.c:571:9: note: versioning for alias required: can't determine dependence between *_18 and *_12
common/dct.c:571:9: note: mark for run-time aliasing test between *_18 and *_12
common/dct.c:571:9: note: === vect_determine_vectorization_factor ===
common/dct.c:571:9: note: ==> examining phi: j_23 = PHI <j_21(3), 0(7)>

common/dct.c:571:9: note: ==> examining phi: .MEM_28 = PHI <.MEM_20(3), .MEM_29(7)>

common/dct.c:571:9: note: ==> examining phi: ivtmp_45 = PHI <ivtmp_44(3), 16(7)>

common/dct.c:571:9: note: ==> examining statement: # DEBUG j => j_23

common/dct.c:571:9: note: skip.
common/dct.c:571:9: note: ==> examining statement: _8 = j_23 + pretmp_54;

common/dct.c:571:9: note: skip.
common/dct.c:571:9: note: ==> examining statement: _9 = (long unsigned int) _8;

common/dct.c:571:9: note: skip.
common/dct.c:571:9: note: ==> examining statement: _10 = _9 * 2;

common/dct.c:571:9: note: skip.
common/dct.c:571:9: note: ==> examining statement: _12 = dst_11(D) + _10;

common/dct.c:571:9: note: skip.
common/dct.c:571:9: note: ==> examining statement: _13 = j_23 * 4;

common/dct.c:571:9: note: skip.
common/dct.c:571:9: note: ==> examining statement: _14 = i_5 + _13;

common/dct.c:571:9: note: skip.
common/dct.c:571:9: note: ==> examining statement: _15 = (long unsigned int) _14;

common/dct.c:571:9: note: skip.
common/dct.c:571:9: note: ==> examining statement: _16 = _15 * 2;

common/dct.c:571:9: note: skip.
common/dct.c:571:9: note: ==> examining statement: _18 = src_17(D) + _16;

common/dct.c:571:9: note: skip.
common/dct.c:571:9: note: ==> examining statement: _19 = *_18;

common/dct.c:571:9: note: get vectype for scalar type:  short int
common/dct.c:571:9: note: vectype: vector(8) short int
common/dct.c:571:9: note: nunits = 8
common/dct.c:571:9: note: ==> examining statement: *_12 = _19;

common/dct.c:571:9: note: get vectype for scalar type:  int16_t
common/dct.c:571:9: note: vectype: vector(8) short int
common/dct.c:571:9: note: nunits = 8
common/dct.c:571:9: note: ==> examining statement: j_21 = j_23 + 1;

common/dct.c:571:9: note: skip.
common/dct.c:571:9: note: ==> examining statement: # DEBUG j => j_21

common/dct.c:571:9: note: skip.
common/dct.c:571:9: note: ==> examining statement: # DEBUG j => j_21

common/dct.c:571:9: note: skip.
common/dct.c:571:9: note: ==> examining statement: ivtmp_44 = ivtmp_45 - 1;

common/dct.c:571:9: note: skip.
common/dct.c:571:9: note: ==> examining statement: if (ivtmp_44 != 0)

common/dct.c:571:9: note: skip.
common/dct.c:571:9: note: vectorization factor = 8
common/dct.c:571:9: note: === vect_analyze_data_refs_alignment ===
common/dct.c:571:9: note: vect_compute_data_ref_alignment:
common/dct.c:571:9: note: can't force alignment of ref: *_18
common/dct.c:571:9: note: vect_compute_data_ref_alignment:
common/dct.c:571:9: note: can't force alignment of ref: *_12
common/dct.c:571:9: note: === vect_prune_runtime_alias_test_list ===
common/dct.c:571:9: note: improved number of alias checks from 1 to 1
common/dct.c:571:9: note: === vect_enhance_data_refs_alignment ===
common/dct.c:571:9: note: vector alignment may not be reachable
common/dct.c:571:9: note: vect_can_advance_ivs_p:
common/dct.c:571:9: note: Analyze phi: j_23 = PHI <j_21(3), 0(7)>

common/dct.c:571:9: note: Analyze phi: .MEM_28 = PHI <.MEM_20(3), .MEM_29(7)>

common/dct.c:571:9: note: virtual phi. skip.
common/dct.c:571:9: note: Analyze phi: ivtmp_45 = PHI <ivtmp_44(3), 16(7)>

common/dct.c:571:9: note: Vectorizing an unaligned access.
common/dct.c:571:9: note: Vectorizing an unaligned access.
common/dct.c:571:9: note: === vect_analyze_slp ===
common/dct.c:571:9: note: === vect_make_slp_decision ===
common/dct.c:571:9: note: === vect_detect_hybrid_slp ===
common/dct.c:571:9: note: === vect_analyze_loop_operations ===
common/dct.c:571:9: note: examining phi: j_23 = PHI <j_21(3), 0(7)>

common/dct.c:571:9: note: examining phi: .MEM_28 = PHI <.MEM_20(3), .MEM_29(7)>

common/dct.c:571:9: note: examining phi: ivtmp_45 = PHI <ivtmp_44(3), 16(7)>

common/dct.c:571:9: note: ==> examining statement: # DEBUG j => j_23
common/dct.c:571:9: note: irrelevant.
common/dct.c:571:9: note: ==> examining statement: _8 = j_23 + pretmp_54;
common/dct.c:571:9: note: irrelevant.
common/dct.c:571:9: note: ==> examining statement: _9 = (long unsigned int) _8;
common/dct.c:571:9: note: irrelevant.
common/dct.c:571:9: note: ==> examining statement: _10 = _9 * 2;
common/dct.c:571:9: note: irrelevant.
common/dct.c:571:9: note: ==> examining statement: _12 = dst_11(D) + _10;
common/dct.c:571:9: note: irrelevant.
common/dct.c:571:9: note: ==> examining statement: _13 = j_23 * 4;
common/dct.c:571:9: note: irrelevant.
common/dct.c:571:9: note: ==> examining statement: _14 = i_5 + _13;
common/dct.c:571:9: note: irrelevant.
common/dct.c:571:9: note: ==> examining statement: _15 = (long unsigned int) _14;
common/dct.c:571:9: note: irrelevant.
common/dct.c:571:9: note: ==> examining statement: _16 = _15 * 2;
common/dct.c:571:9: note: irrelevant.
common/dct.c:571:9: note: ==> examining statement: _18 = src_17(D) + _16;
common/dct.c:571:9: note: irrelevant.
common/dct.c:571:9: note: ==> examining statement: _19 = *_18;
common/dct.c:571:9: note: vect_is_simple_use: operand *_18
common/dct.c:571:9: note: not ssa-name.
common/dct.c:571:9: note: use not simple.
common/dct.c:571:9: note: vect_is_simple_use: operand *_18
common/dct.c:571:9: note: not ssa-name.
common/dct.c:571:9: note: use not simple.
common/dct.c:571:9: note: no array mode for V8HI[4]
common/dct.c:571:9: note: vect_model_load_cost: strided group_size = 4 .
common/dct.c:571:9: note: vect_model_load_cost: unaligned supported by hardware.
common/dct.c:571:9: note: vect_model_load_cost: inside_cost = 10, prologue_cost = 0 .
common/dct.c:571:9: note: ==> examining statement: *_12 = _19;
common/dct.c:571:9: note: vect_is_simple_use: operand _19
common/dct.c:571:9: note: def_stmt: _19 = *_18;
common/dct.c:571:9: note: type of def: 3.
common/dct.c:571:9: note: vect_model_store_cost: unaligned supported by hardware.
common/dct.c:571:9: note: vect_model_store_cost: inside_cost = 2, prologue_cost = 0 .
common/dct.c:571:9: note: ==> examining statement: j_21 = j_23 + 1;
common/dct.c:571:9: note: irrelevant.
common/dct.c:571:9: note: ==> examining statement: # DEBUG j => j_21
common/dct.c:571:9: note: irrelevant.
common/dct.c:571:9: note: ==> examining statement: # DEBUG j => j_21
common/dct.c:571:9: note: irrelevant.
common/dct.c:571:9: note: ==> examining statement: ivtmp_44 = ivtmp_45 - 1;
common/dct.c:571:9: note: irrelevant.
common/dct.c:571:9: note: ==> examining statement: if (ivtmp_44 != 0)
common/dct.c:571:9: note: irrelevant.
common/dct.c:571:9: note: vectorization_factor = 8, niters = 16
common/dct.c:571:9: note: === vect_update_slp_costs_according_to_vf ===
cost model: Adding cost of checks for loop versioning aliasing.
common/dct.c:571:9: note: Cost model analysis: 
  Vector inside of loop cost: 12
  Vector prologue cost: 4
  Vector epilogue cost: 16
  Scalar iteration cost: 2
  Scalar outside cost: 1
  Vector outside cost: 20
  prologue iterations: 0
  epilogue iterations: 8
  Calculated minimum iters for profitability: 15
common/dct.c:571:9: note:   Runtime profitability threshold = 14
common/dct.c:571:9: note:   Static estimate profitability threshold = 14
common/dct.c:571:9: note: not vectorized: estimated iteration count too small.
common/dct.c:571:9: note: not vectorized: estimated iteration count smaller than specified loop bound parameter or minimum profitable iterations (whichever is more conservative).
common/dct.c:571:9: note: bad operation or unsupported loop bound.
common/dct.c:567:13: note: vectorized 0 loops in function.
zigzag_interleave_8x8_cavlc (int16_t * dst, int16_t * src)
{
  int j;
  int i;
  int _8;
  long unsigned int _9;
  long unsigned int _10;
  int16_t * _12;
  int _13;
  int _14;
  long unsigned int _15;
  long unsigned int _16;
  int16_t * _18;
  short int _19;
  unsigned int ivtmp_42;
  unsigned int ivtmp_43;
  unsigned int ivtmp_44;
  unsigned int ivtmp_45;
  int pretmp_54;

  <bb 2>:
  # DEBUG i => 0
  # DEBUG i => 0
  goto <bb 7>;

  <bb 3>:

  <bb 4>:
  # j_23 = PHI <j_21(3), 0(7)>
  # ivtmp_45 = PHI <ivtmp_44(3), 16(7)>
  # DEBUG j => j_23
  _8 = j_23 + pretmp_54;
  _9 = (long unsigned int) _8;
  _10 = _9 * 2;
  _12 = dst_11(D) + _10;
  _13 = j_23 * 4;
  _14 = i_5 + _13;
  _15 = (long unsigned int) _14;
  _16 = _15 * 2;
  _18 = src_17(D) + _16;
  _19 = *_18;
  *_12 = _19;
  j_21 = j_23 + 1;
  # DEBUG j => j_21
  # DEBUG j => j_21
  ivtmp_44 = ivtmp_45 - 1;
  if (ivtmp_44 != 0)
    goto <bb 3>;
  else
    goto <bb 5>;

  <bb 5>:
  i_22 = i_5 + 1;
  # DEBUG i => i_22
  # DEBUG i => i_22
  ivtmp_42 = ivtmp_43 - 1;
  if (ivtmp_42 != 0)
    goto <bb 6>;
  else
    goto <bb 8>;

  <bb 6>:

  <bb 7>:
  # i_5 = PHI <i_22(6), 0(2)>
  # ivtmp_43 = PHI <ivtmp_42(6), 4(2)>
  # DEBUG i => i_5
  # DEBUG j => 0
  pretmp_54 = i_5 * 16;
  goto <bb 4>;

  <bb 8>:
  return;

}



;; Function x264_dct_init_weights (x264_dct_init_weights, funcdef_no=129, decl_uid=5025, cgraph_uid=129, symbol_order=174)


Analyzing loop at common/dct.c:433
common/dct.c:433:5: note: ===== analyze_loop_nest =====
common/dct.c:433:5: note: === vect_analyze_loop_form ===
common/dct.c:433:5: note: not vectorized: multiple nested loops.
common/dct.c:433:5: note: bad loop form.

Analyzing loop at common/dct.c:437
common/dct.c:437:9: note: ===== analyze_loop_nest =====
common/dct.c:437:9: note: === vect_analyze_loop_form ===
common/dct.c:437:9: note: not vectorized: latch block not empty.
common/dct.c:437:9: note: bad loop form.

Analyzing loop at common/dct.c:435
common/dct.c:435:9: note: ===== analyze_loop_nest =====
common/dct.c:435:9: note: === vect_analyze_loop_form ===
common/dct.c:435:9: note: not vectorized: latch block not empty.
common/dct.c:435:9: note: bad loop form.
common/dct.c:430:6: note: vectorized 0 loops in function.
x264_dct_init_weights ()
{
  int j;
  int i;
  unsigned int ivtmp_9;
  unsigned int ivtmp_10;
  int _12;
  unsigned int ivtmp_16;
  int _19;
  unsigned int ivtmp_37;
  unsigned char pretmp_40;
  unsigned int ivtmp_41;
  int pretmp_42;
  short unsigned int pretmp_43;
  short unsigned int prephitmp_44;
  unsigned char pretmp_46;
  unsigned int ivtmp_47;
  int pretmp_48;
  short unsigned int pretmp_49;
  short unsigned int prephitmp_50;
  unsigned char pretmp_52;
  int pretmp_54;
  short unsigned int pretmp_55;
  short unsigned int prephitmp_56;
  unsigned char pretmp_58;
  int pretmp_60;
  short unsigned int pretmp_61;
  short unsigned int prephitmp_62;

  <bb 2>:
  # DEBUG j => 0
  # DEBUG j => 0
  goto <bb 10>;

  <bb 3>:
  pretmp_52 = x264_zigzag_scan4[j_31][i_14];
  pretmp_54 = (int) pretmp_52;
  pretmp_55 = x264_dct4_weight2_tab[pretmp_54];

  <bb 4>:
  # i_15 = PHI <i_14(3), 0(10)>
  # prephitmp_56 = PHI <pretmp_55(3), prephitmp_50(10)>
  # ivtmp_37 = PHI <ivtmp_9(3), 16(10)>
  # DEBUG i => i_15
  _12 = (int) prephitmp_56;
  x264_dct4_weight2_zigzag[j_31][i_15] = _12;
  i_14 = i_15 + 1;
  # DEBUG i => i_14
  # DEBUG i => i_14
  ivtmp_9 = ivtmp_37 - 1;
  if (ivtmp_9 != 0)
    goto <bb 3>;
  else
    goto <bb 5>;

  <bb 5>:

  <bb 6>:
  # i_23 = PHI <0(5), i_21(7)>
  # prephitmp_62 = PHI <prephitmp_44(5), pretmp_61(7)>
  # ivtmp_47 = PHI <64(5), ivtmp_41(7)>
  # DEBUG i => i_23
  _19 = (int) prephitmp_62;
  x264_dct8_weight2_zigzag[j_31][i_23] = _19;
  i_21 = i_23 + 1;
  # DEBUG i => i_21
  # DEBUG i => i_21
  ivtmp_41 = ivtmp_47 - 1;
  if (ivtmp_41 != 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  pretmp_58 = x264_zigzag_scan8[j_31][i_21];
  pretmp_60 = (int) pretmp_58;
  pretmp_61 = x264_dct8_weight2_tab[pretmp_60];
  goto <bb 6>;

  <bb 8>:
  j_22 = j_31 + 1;
  # DEBUG j => j_22
  # DEBUG j => j_22
  ivtmp_16 = ivtmp_10 - 1;
  if (ivtmp_16 != 0)
    goto <bb 9>;
  else
    goto <bb 11>;

  <bb 9>:
  pretmp_40 = x264_zigzag_scan8[j_22][0];
  pretmp_42 = (int) pretmp_40;
  pretmp_43 = x264_dct8_weight2_tab[pretmp_42];
  pretmp_46 = x264_zigzag_scan4[j_22][0];
  pretmp_48 = (int) pretmp_46;
  pretmp_49 = x264_dct4_weight2_tab[pretmp_48];

  <bb 10>:
  # j_31 = PHI <j_22(9), 0(2)>
  # prephitmp_44 = PHI <pretmp_43(9), 256(2)>
  # prephitmp_50 = PHI <pretmp_49(9), 800(2)>
  # ivtmp_10 = PHI <ivtmp_16(9), 2(2)>
  # DEBUG j => j_31
  # DEBUG i => 0
  goto <bb 4>;

  <bb 11>:
  return;

}


