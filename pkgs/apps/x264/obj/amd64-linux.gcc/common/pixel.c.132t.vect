
;; Function x264_pixel_sad_16x16 (x264_pixel_sad_16x16, funcdef_no=115, decl_uid=7490, cgraph_uid=115, symbol_order=158)


Analyzing loop at common/pixel.c:59
common/pixel.c:59:1: note: ===== analyze_loop_nest =====
common/pixel.c:59:1: note: === vect_analyze_loop_form ===
common/pixel.c:59:1: note: ===== analyze_loop_nest_1 =====
common/pixel.c:59:1: note: === vect_analyze_loop_form ===
common/pixel.c:59:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 2
  exit condition [15, + , 4294967295] != 0
  bounds on difference of bases: -15 ... -15
  result:
    # of iterations 15, bounded by 15
common/pixel.c:59:1: note: Considering outer-loop vectorization.
common/pixel.c:59:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 1
  exit condition [15, + , 4294967295] != 0
  bounds on difference of bases: -15 ... -15
  result:
    # of iterations 15, bounded by 15
common/pixel.c:59:1: note: === vect_analyze_data_refs ===
Creating dr for *_10
analyze_innermost: success.
	base_address: pix1_29
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix1_7(D)
	Access function 0: {{0B, +, pretmp_61}_1, +, 1}_2
Creating dr for *_15
analyze_innermost: success.
	base_address: pix2_14
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix2_8(D)
	Access function 0: {{0B, +, pretmp_62}_1, +, 1}_2
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:59:1: note: analyze in outer-loop: *pix1_29
common/pixel.c:59:1: note: failed: evolution of base is not affine.
common/pixel.c:59:1: note: bad data references.

Analyzing loop at common/pixel.c:59
common/pixel.c:59:1: note: ===== analyze_loop_nest =====
common/pixel.c:59:1: note: === vect_analyze_loop_form ===
common/pixel.c:59:1: note: === get_loop_niters ===
common/pixel.c:59:1: note: === vect_analyze_data_refs ===
Creating dr for *_10
analyze_innermost: success.
	base_address: pix1_29
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix1_29
	Access function 0: {0B, +, 1}_2
Creating dr for *_15
analyze_innermost: success.
	base_address: pix2_14
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix2_14
	Access function 0: {0B, +, 1}_2
common/pixel.c:59:1: note: got vectype for stmt: _12 = *_10;
vector(16) unsigned char
common/pixel.c:59:1: note: got vectype for stmt: _16 = *_15;
vector(16) unsigned char
common/pixel.c:59:1: note: === vect_analyze_scalar_cycles ===
common/pixel.c:59:1: note: Analyze phi: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>

common/pixel.c:59:1: note: Access function of PHI: {i_sum_39, +, _19}_2
common/pixel.c:59:1: note: step: _19,  init: i_sum_39
common/pixel.c:59:1: note: step unknown.
common/pixel.c:59:1: note: Analyze phi: x_40 = PHI <x_21(3), 0(7)>

common/pixel.c:59:1: note: Access function of PHI: {0, +, 1}_2
common/pixel.c:59:1: note: step: 1,  init: 0
common/pixel.c:59:1: note: Detected induction.
common/pixel.c:59:1: note: Analyze phi: ivtmp_58 = PHI <ivtmp_57(3), 16(7)>

common/pixel.c:59:1: note: Access function of PHI: {16, +, 4294967295}_2
common/pixel.c:59:1: note: step: 4294967295,  init: 16
common/pixel.c:59:1: note: Detected induction.
common/pixel.c:59:1: note: Analyze phi: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>

common/pixel.c:59:1: note: detected reduction: i_sum_20 = _19 + i_sum_38;

common/pixel.c:59:1: note: Detected reduction.
common/pixel.c:59:1: note: === vect_pattern_recog ===
common/pixel.c:59:1: note: vect_is_simple_use: operand _19
common/pixel.c:59:1: note: def_stmt: _19 = ABS_EXPR <_18>;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: vect_is_simple_use: operand _19
common/pixel.c:59:1: note: def_stmt: _19 = ABS_EXPR <_18>;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: vect_is_simple_use: operand _19
common/pixel.c:59:1: note: def_stmt: _19 = ABS_EXPR <_18>;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: vect_is_simple_use: operand _13
common/pixel.c:59:1: note: def_stmt: _13 = (int) _12;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: vect_is_simple_use: operand _12
common/pixel.c:59:1: note: def_stmt: _12 = *_10;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: vect_is_simple_use: operand _17
common/pixel.c:59:1: note: def_stmt: _17 = (int) _16;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: vect_is_simple_use: operand _16
common/pixel.c:59:1: note: def_stmt: _16 = *_15;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: vect_recog_sad_pattern: detected: patt_54 = SAD_EXPR <_12, _16, i_sum_38>;

common/pixel.c:59:1: note: pattern recognized: patt_54 = SAD_EXPR <_12, _16, i_sum_38>;
common/pixel.c:59:1: note: === vect_analyze_data_ref_accesses ===
common/pixel.c:59:1: note: === vect_mark_stmts_to_be_vectorized ===
common/pixel.c:59:1: note: init: phi relevant? i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>
common/pixel.c:59:1: note: init: phi relevant? x_40 = PHI <x_21(3), 0(7)>
common/pixel.c:59:1: note: init: phi relevant? ivtmp_58 = PHI <ivtmp_57(3), 16(7)>
common/pixel.c:59:1: note: init: stmt relevant? # DEBUG x => x_40
common/pixel.c:59:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_38
common/pixel.c:59:1: note: init: stmt relevant? _9 = (sizetype) x_40;
common/pixel.c:59:1: note: init: stmt relevant? _10 = pix1_29 + _9;
common/pixel.c:59:1: note: init: stmt relevant? _12 = *_10;
common/pixel.c:59:1: note: init: stmt relevant? _13 = (int) _12;
common/pixel.c:59:1: note: init: stmt relevant? _15 = pix2_14 + _9;
common/pixel.c:59:1: note: init: stmt relevant? _16 = *_15;
common/pixel.c:59:1: note: init: stmt relevant? _17 = (int) _16;
common/pixel.c:59:1: note: init: stmt relevant? _18 = _13 - _17;
common/pixel.c:59:1: note: init: stmt relevant? _19 = ABS_EXPR <_18>;
common/pixel.c:59:1: note: init: stmt relevant? i_sum_20 = _19 + i_sum_38;
common/pixel.c:59:1: note: vec_stmt_relevant_p: used out of loop.
common/pixel.c:59:1: note: mark relevant 0, live 1.
common/pixel.c:59:1: note: last stmt in pattern. don't mark relevant/live.
common/pixel.c:59:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_20
common/pixel.c:59:1: note: init: stmt relevant? x_21 = x_40 + 1;
common/pixel.c:59:1: note: init: stmt relevant? # DEBUG x => x_21
common/pixel.c:59:1: note: init: stmt relevant? # DEBUG x => x_21
common/pixel.c:59:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_20
common/pixel.c:59:1: note: init: stmt relevant? ivtmp_57 = ivtmp_58 - 1;
common/pixel.c:59:1: note: init: stmt relevant? if (ivtmp_57 != 0)
common/pixel.c:59:1: note: worklist: examine stmt: patt_54 = SAD_EXPR <_12, _16, i_sum_38>;
common/pixel.c:59:1: note: vect_is_simple_use: operand _12
common/pixel.c:59:1: note: def_stmt: _12 = *_10;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: mark relevant 3, live 0.
common/pixel.c:59:1: note: vect_is_simple_use: operand _16
common/pixel.c:59:1: note: def_stmt: _16 = *_15;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: mark relevant 3, live 0.
common/pixel.c:59:1: note: vect_is_simple_use: operand i_sum_38
common/pixel.c:59:1: note: def_stmt: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>
common/pixel.c:59:1: note: type of def: 5.
common/pixel.c:59:1: note: mark relevant 3, live 0.
common/pixel.c:59:1: note: worklist: examine stmt: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>
common/pixel.c:59:1: note: vect_is_simple_use: operand i_sum_20
common/pixel.c:59:1: note: def_stmt: i_sum_20 = _19 + i_sum_38;
common/pixel.c:59:1: note: type of def: 5.
common/pixel.c:59:1: note: reduc-stmt defining reduc-phi in the same nest.
common/pixel.c:59:1: note: vect_is_simple_use: operand i_sum_39
common/pixel.c:59:1: note: def_stmt: i_sum_39 = PHI <i_sum_60(6), 0(2)>
common/pixel.c:59:1: note: type of def: 2.
common/pixel.c:59:1: note: def_stmt is out of loop.
common/pixel.c:59:1: note: worklist: examine stmt: _16 = *_15;
common/pixel.c:59:1: note: worklist: examine stmt: _12 = *_10;
common/pixel.c:59:1: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _12 = *_10;
  stmt_b: _16 = *_15;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _12 = *_10;
  stmt_b: _12 = *_10;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_2)
  (chrec_b = {0B, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _16 = *_15;
  stmt_b: _16 = *_15;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_2)
  (chrec_b = {0B, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/pixel.c:59:1: note: === vect_determine_vectorization_factor ===
common/pixel.c:59:1: note: ==> examining phi: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>

common/pixel.c:59:1: note: get vectype for scalar type:  int
common/pixel.c:59:1: note: vectype: vector(4) int
common/pixel.c:59:1: note: nunits = 4
common/pixel.c:59:1: note: ==> examining phi: x_40 = PHI <x_21(3), 0(7)>

common/pixel.c:59:1: note: ==> examining phi: ivtmp_58 = PHI <ivtmp_57(3), 16(7)>

common/pixel.c:59:1: note: ==> examining statement: # DEBUG x => x_40

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: # DEBUG i_sum => i_sum_38

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: _9 = (sizetype) x_40;

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: _10 = pix1_29 + _9;

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: _12 = *_10;

common/pixel.c:59:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:59:1: note: vectype: vector(16) unsigned char
common/pixel.c:59:1: note: nunits = 16
common/pixel.c:59:1: note: ==> examining statement: _13 = (int) _12;

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: _15 = pix2_14 + _9;

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: _16 = *_15;

common/pixel.c:59:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:59:1: note: vectype: vector(16) unsigned char
common/pixel.c:59:1: note: nunits = 16
common/pixel.c:59:1: note: ==> examining statement: _17 = (int) _16;

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: _18 = _13 - _17;

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: _19 = ABS_EXPR <_18>;

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: i_sum_20 = _19 + i_sum_38;

common/pixel.c:59:1: note: ==> examining pattern statement: patt_54 = SAD_EXPR <_12, _16, i_sum_38>;

common/pixel.c:59:1: note: get vectype for scalar type:  int
common/pixel.c:59:1: note: vectype: vector(4) int
common/pixel.c:59:1: note: nunits = 4
common/pixel.c:59:1: note: ==> examining statement: # DEBUG i_sum => i_sum_20

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: x_21 = x_40 + 1;

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: # DEBUG x => x_21

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: # DEBUG x => x_21

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: # DEBUG i_sum => i_sum_20

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: ivtmp_57 = ivtmp_58 - 1;

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: if (ivtmp_57 != 0)

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: vectorization factor = 16
common/pixel.c:59:1: note: === vect_analyze_data_refs_alignment ===
common/pixel.c:59:1: note: vect_compute_data_ref_alignment:
common/pixel.c:59:1: note: can't force alignment of ref: *_10
common/pixel.c:59:1: note: vect_compute_data_ref_alignment:
common/pixel.c:59:1: note: can't force alignment of ref: *_15
common/pixel.c:59:1: note: === vect_prune_runtime_alias_test_list ===
common/pixel.c:59:1: note: === vect_enhance_data_refs_alignment ===
common/pixel.c:59:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:59:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:59:1: note: vect_can_advance_ivs_p:
common/pixel.c:59:1: note: Analyze phi: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>

common/pixel.c:59:1: note: reduc phi. skip.
common/pixel.c:59:1: note: Analyze phi: x_40 = PHI <x_21(3), 0(7)>

common/pixel.c:59:1: note: Analyze phi: ivtmp_58 = PHI <ivtmp_57(3), 16(7)>

common/pixel.c:59:1: note: Vectorizing an unaligned access.
common/pixel.c:59:1: note: Vectorizing an unaligned access.
common/pixel.c:59:1: note: === vect_analyze_slp ===
common/pixel.c:59:1: note: === vect_make_slp_decision ===
common/pixel.c:59:1: note: === vect_detect_hybrid_slp ===
common/pixel.c:59:1: note: === vect_analyze_loop_operations ===
common/pixel.c:59:1: note: examining phi: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>

common/pixel.c:59:1: note: examining phi: x_40 = PHI <x_21(3), 0(7)>

common/pixel.c:59:1: note: examining phi: ivtmp_58 = PHI <ivtmp_57(3), 16(7)>

common/pixel.c:59:1: note: ==> examining statement: # DEBUG x => x_40
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: # DEBUG i_sum => i_sum_38
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: _9 = (sizetype) x_40;
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: _10 = pix1_29 + _9;
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: _12 = *_10;
common/pixel.c:59:1: note: vect_is_simple_use: operand *_10
common/pixel.c:59:1: note: not ssa-name.
common/pixel.c:59:1: note: use not simple.
common/pixel.c:59:1: note: vect_is_simple_use: operand *_10
common/pixel.c:59:1: note: not ssa-name.
common/pixel.c:59:1: note: use not simple.
common/pixel.c:59:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:59:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:59:1: note: ==> examining statement: _13 = (int) _12;
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: _15 = pix2_14 + _9;
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: _16 = *_15;
common/pixel.c:59:1: note: vect_is_simple_use: operand *_15
common/pixel.c:59:1: note: not ssa-name.
common/pixel.c:59:1: note: use not simple.
common/pixel.c:59:1: note: vect_is_simple_use: operand *_15
common/pixel.c:59:1: note: not ssa-name.
common/pixel.c:59:1: note: use not simple.
common/pixel.c:59:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:59:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:59:1: note: ==> examining statement: _17 = (int) _16;
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: _18 = _13 - _17;
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: _19 = ABS_EXPR <_18>;
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: i_sum_20 = _19 + i_sum_38;
common/pixel.c:59:1: note: ==> examining pattern statement: patt_54 = SAD_EXPR <_12, _16, i_sum_38>;
common/pixel.c:59:1: note: vect_is_simple_use: operand _12
common/pixel.c:59:1: note: def_stmt: _12 = *_10;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: vect_is_simple_use: operand _16
common/pixel.c:59:1: note: def_stmt: _16 = *_15;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: vect_is_simple_use: operand i_sum_38
common/pixel.c:59:1: note: def_stmt: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>
common/pixel.c:59:1: note: type of def: 5.
common/pixel.c:59:1: note: detected reduction: i_sum_20 = _19 + i_sum_38;

common/pixel.c:59:1: note: reduc op not supported by target.
vect_model_reduction_cost: inside_cost = 1, prologue_cost = 1, epilogue_cost = 5 .
common/pixel.c:59:1: note: ==> examining statement: # DEBUG i_sum => i_sum_20
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: x_21 = x_40 + 1;
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: # DEBUG x => x_21
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: # DEBUG x => x_21
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: # DEBUG i_sum => i_sum_20
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: ivtmp_57 = ivtmp_58 - 1;
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: if (ivtmp_57 != 0)
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: vectorization_factor = 16, niters = 16
common/pixel.c:59:1: note: === vect_update_slp_costs_according_to_vf ===
common/pixel.c:59:1: note: Cost model analysis: 
  Vector inside of loop cost: 5
  Vector prologue cost: 1
  Vector epilogue cost: 5
  Scalar iteration cost: 3
  Scalar outside cost: 0
  Vector outside cost: 6
  prologue iterations: 0
  epilogue iterations: 0
  Calculated minimum iters for profitability: 3
common/pixel.c:59:1: note:   Runtime profitability threshold = 15
common/pixel.c:59:1: note:   Static estimate profitability threshold = 15
common/pixel.c:59:1: note: loop vectorized
common/pixel.c:59:1: note: === vec_transform_loop ===
common/pixel.c:59:1: note: ------>vectorizing phi: i_sum_38 = PHI <i_sum_20(3), i_sum_39(9)>

common/pixel.c:59:1: note: multiple-types.
common/pixel.c:59:1: note: ------>vectorizing phi: x_40 = PHI <x_21(3), 0(9)>

common/pixel.c:59:1: note: ------>vectorizing phi: ivtmp_58 = PHI <ivtmp_57(3), 16(9)>

common/pixel.c:59:1: note: ------>vectorizing statement: # DEBUG x => x_40

common/pixel.c:59:1: note: ------>vectorizing statement: # DEBUG i_sum => i_sum_38

common/pixel.c:59:1: note: ------>vectorizing statement: _9 = (sizetype) x_40;

common/pixel.c:59:1: note: ------>vectorizing statement: _10 = pix1_29 + _9;

common/pixel.c:59:1: note: ------>vectorizing statement: _12 = *_10;

common/pixel.c:59:1: note: transform statement.
common/pixel.c:59:1: note: transform load. ncopies = 1
common/pixel.c:59:1: note: create vector_type-pointer variable to type: vector(16) unsigned char  vectorizing a pointer ref: *pix1_29
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:59:1: note: created vectp_pix1.142_53
common/pixel.c:59:1: note: add new stmt: vect__12.143_50 = MEM[(uint8_t *)vectp_pix1.141_52];
common/pixel.c:59:1: note: ------>vectorizing statement: _13 = (int) _12;

common/pixel.c:59:1: note: ------>vectorizing statement: _15 = pix2_14 + _9;

common/pixel.c:59:1: note: ------>vectorizing statement: _16 = *_15;

common/pixel.c:59:1: note: transform statement.
common/pixel.c:59:1: note: transform load. ncopies = 1
common/pixel.c:59:1: note: create vector_type-pointer variable to type: vector(16) unsigned char  vectorizing a pointer ref: *pix2_14
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:59:1: note: created vectp_pix2.145_49
common/pixel.c:59:1: note: add new stmt: vect__16.146_46 = MEM[(uint8_t *)vectp_pix2.144_48];
common/pixel.c:59:1: note: ------>vectorizing statement: _17 = (int) _16;

common/pixel.c:59:1: note: ------>vectorizing statement: _18 = _13 - _17;

common/pixel.c:59:1: note: ------>vectorizing statement: _19 = ABS_EXPR <_18>;

common/pixel.c:59:1: note: ------>vectorizing statement: i_sum_20 = _19 + i_sum_38;

common/pixel.c:59:1: note: multiple-types.
common/pixel.c:59:1: note: transform statement.
common/pixel.c:59:1: note: vect_is_simple_use: operand _12
common/pixel.c:59:1: note: def_stmt: _12 = *_10;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: vect_is_simple_use: operand _16
common/pixel.c:59:1: note: def_stmt: _16 = *_15;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: vect_is_simple_use: operand i_sum_38
common/pixel.c:59:1: note: def_stmt: i_sum_38 = PHI <i_sum_20(3), i_sum_39(9)>
common/pixel.c:59:1: note: type of def: 5.
common/pixel.c:59:1: note: detected reduction: i_sum_20 = _19 + i_sum_38;

common/pixel.c:59:1: note: reduc op not supported by target.
common/pixel.c:59:1: note: transform reduction.
common/pixel.c:59:1: note: vect_get_vec_def_for_operand: _12
common/pixel.c:59:1: note: vect_is_simple_use: operand _12
common/pixel.c:59:1: note: def_stmt: _12 = *_10;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: def =  _12
  def_stmt =  _12 = *_10;
common/pixel.c:59:1: note: vect_get_vec_def_for_operand: _16
common/pixel.c:59:1: note: vect_is_simple_use: operand _16
common/pixel.c:59:1: note: def_stmt: _16 = *_15;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: def =  _16
  def_stmt =  _16 = *_15;
common/pixel.c:59:1: note: add new stmt: vect_patt_54.147_44 = SAD_EXPR <vect__12.143_50, vect__16.146_46, vect_patt_54.147_45>;
common/pixel.c:59:1: note: vect_is_simple_use: operand i_sum_39
common/pixel.c:59:1: note: def_stmt: i_sum_39 = PHI <i_sum_60(6), 0(2)>
common/pixel.c:59:1: note: type of def: 2.
common/pixel.c:59:1: note: vect_get_vec_def_for_operand: i_sum_38
common/pixel.c:59:1: note: vect_is_simple_use: operand i_sum_38
common/pixel.c:59:1: note: def_stmt: i_sum_38 = PHI <i_sum_20(3), i_sum_39(9)>
common/pixel.c:59:1: note: type of def: 5.
common/pixel.c:59:1: note: def =  i_sum_38
  def_stmt =  i_sum_38 = PHI <i_sum_20(3), i_sum_39(9)>
common/pixel.c:59:1: note: transform reduction: created def-use cycle: vect_patt_54.147_45 = PHI <vect_patt_54.147_44(3), { 0, 0, 0, 0 }(9)>

vect_patt_54.147_44 = SAD_EXPR <vect__12.143_50, vect__16.146_46, vect_patt_54.147_45>;

common/pixel.c:59:1: note: Reduce using vector shifts
common/pixel.c:59:1: note: extract scalar result
common/pixel.c:59:1: note: ------>vectorizing statement: # DEBUG i_sum => i_sum_20

common/pixel.c:59:1: note: ------>vectorizing statement: x_21 = x_40 + 1;

common/pixel.c:59:1: note: ------>vectorizing statement: # DEBUG x => x_21

common/pixel.c:59:1: note: ------>vectorizing statement: # DEBUG x => x_21

common/pixel.c:59:1: note: ------>vectorizing statement: # DEBUG i_sum => i_sum_20

common/pixel.c:59:1: note: ------>vectorizing statement: ivtmp_57 = ivtmp_58 - 1;

common/pixel.c:59:1: note: ------>vectorizing statement: vectp_pix1.141_51 = vectp_pix1.141_52 + 16;

common/pixel.c:59:1: note: ------>vectorizing statement: vectp_pix2.144_47 = vectp_pix2.144_48 + 16;

common/pixel.c:59:1: note: ------>vectorizing statement: if (ivtmp_57 != 0)


loop at common/pixel.c:59: if (ivtmp_31 < 1)

;; Scaling loop 2 with scale 0.062500, bounding iterations to 1 from guessed 16
;; guessed iterations are now 1
common/pixel.c:59:1: note: LOOP VECTORIZED

common/pixel.c:59:1: note: vectorized 1 loops in function.
Merging blocks 7 and 9
x264_pixel_sad_16x16 (uint8_t * pix1, int i_stride_pix1, uint8_t * pix2, int i_stride_pix2)
{
  int vect_i_sum_20.150;
  vector(4) int vect_i_sum_20.149;
  int stmp_i_sum_20.148;
  vector(4) int vect_patt_54.147;
  vector(16) unsigned char vect__16.146;
  vector(16) unsigned char * vectp_pix2.145;
  vector(16) unsigned char * vectp_pix2.144;
  vector(16) unsigned char vect__12.143;
  vector(16) unsigned char * vectp_pix1.142;
  vector(16) unsigned char * vectp_pix1.141;
  int y;
  int x;
  int i_sum;
  sizetype _9;
  uint8_t * _10;
  unsigned char _12;
  int _13;
  uint8_t * _15;
  unsigned char _16;
  int _17;
  int _18;
  int _19;
  unsigned int ivtmp_31;
  unsigned int ivtmp_32;
  unsigned int ivtmp_55;
  unsigned int ivtmp_56;
  unsigned int ivtmp_57;
  unsigned int ivtmp_58;
  sizetype pretmp_61;
  sizetype pretmp_62;

  <bb 2>:
  # DEBUG i_sum => 0
  # DEBUG y => 0
  # DEBUG y => 0
  # DEBUG i_sum => 0
  # DEBUG pix2 => pix2_8(D)
  # DEBUG pix1 => pix1_7(D)
  pretmp_61 = (sizetype) i_stride_pix1_22(D);
  pretmp_62 = (sizetype) i_stride_pix2_25(D);
  goto <bb 7>;

  <bb 3>:

  <bb 4>:
  # i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>
  # x_40 = PHI <x_21(3), 0(7)>
  # ivtmp_58 = PHI <ivtmp_57(3), 16(7)>
  # vectp_pix1.141_52 = PHI <vectp_pix1.141_51(3), vectp_pix1.142_53(7)>
  # vectp_pix2.144_48 = PHI <vectp_pix2.144_47(3), vectp_pix2.145_49(7)>
  # vect_patt_54.147_45 = PHI <vect_patt_54.147_44(3), { 0, 0, 0, 0 }(7)>
  # ivtmp_32 = PHI <ivtmp_31(3), 0(7)>
  # DEBUG x => x_40
  # DEBUG i_sum => i_sum_38
  _9 = (sizetype) x_40;
  _10 = pix1_29 + _9;
  vect__12.143_50 = MEM[(uint8_t *)vectp_pix1.141_52];
  _12 = *_10;
  _13 = (int) _12;
  _15 = pix2_14 + _9;
  vect__16.146_46 = MEM[(uint8_t *)vectp_pix2.144_48];
  _16 = *_15;
  _17 = (int) _16;
  _18 = _13 - _17;
  _19 = ABS_EXPR <_18>;
  vect_patt_54.147_44 = SAD_EXPR <vect__12.143_50, vect__16.146_46, vect_patt_54.147_45>;
  i_sum_20 = _19 + i_sum_38;
  # DEBUG i_sum => i_sum_20
  x_21 = x_40 + 1;
  # DEBUG x => x_21
  # DEBUG x => x_21
  # DEBUG i_sum => i_sum_20
  ivtmp_57 = ivtmp_58 - 1;
  vectp_pix1.141_51 = vectp_pix1.141_52 + 16;
  vectp_pix2.144_47 = vectp_pix2.144_48 + 16;
  ivtmp_31 = ivtmp_32 + 1;
  if (ivtmp_31 < 1)
    goto <bb 3>;
  else
    goto <bb 5>;

  <bb 5>:
  # i_sum_60 = PHI <i_sum_20(4)>
  # vect_patt_54.147_43 = PHI <vect_patt_54.147_44(4)>
  vect_i_sum_20.149_42 = VEC_PERM_EXPR <vect_patt_54.147_43, { 0, 0, 0, 0 }, { 2, 3, 4, 5 }>;
  vect_i_sum_20.149_37 = vect_i_sum_20.149_42 + vect_patt_54.147_43;
  vect_i_sum_20.149_36 = VEC_PERM_EXPR <vect_i_sum_20.149_37, { 0, 0, 0, 0 }, { 1, 2, 3, 4 }>;
  vect_i_sum_20.149_35 = vect_i_sum_20.149_36 + vect_i_sum_20.149_37;
  stmp_i_sum_20.148_34 = BIT_FIELD_REF <vect_i_sum_20.149_35, 32, 0>;
  vect_i_sum_20.150_33 = stmp_i_sum_20.148_34 + i_sum_39;
  pix1_24 = pix1_29 + pretmp_61;
  # DEBUG pix1 => pix1_24
  pix2_27 = pix2_14 + pretmp_62;
  # DEBUG pix2 => pix2_27
  y_28 = y_41 + 1;
  # DEBUG y => y_28
  # DEBUG y => y_28
  # DEBUG i_sum => vect_i_sum_20.150_33
  # DEBUG pix2 => pix2_27
  # DEBUG pix1 => pix1_24
  ivtmp_55 = ivtmp_56 - 1;
  if (ivtmp_55 != 0)
    goto <bb 6>;
  else
    goto <bb 8>;

  <bb 6>:

  <bb 7>:
  # pix1_29 = PHI <pix1_24(6), pix1_7(D)(2)>
  # pix2_14 = PHI <pix2_27(6), pix2_8(D)(2)>
  # i_sum_39 = PHI <vect_i_sum_20.150_33(6), 0(2)>
  # y_41 = PHI <y_28(6), 0(2)>
  # ivtmp_56 = PHI <ivtmp_55(6), 16(2)>
  # DEBUG y => y_41
  # DEBUG i_sum => i_sum_39
  # DEBUG pix2 => pix2_14
  # DEBUG pix1 => pix1_29
  # DEBUG x => 0
  # DEBUG i_sum => i_sum_39
  vectp_pix1.142_53 = pix1_29;
  vectp_pix2.145_49 = pix2_14;
  goto <bb 4>;

  <bb 8>:
  # i_sum_59 = PHI <vect_i_sum_20.150_33(5)>
  return i_sum_59;

}



;; Function x264_pixel_sad_16x8 (x264_pixel_sad_16x8, funcdef_no=116, decl_uid=7505, cgraph_uid=116, symbol_order=159)


Analyzing loop at common/pixel.c:60
common/pixel.c:60:1: note: ===== analyze_loop_nest =====
common/pixel.c:60:1: note: === vect_analyze_loop_form ===
common/pixel.c:60:1: note: ===== analyze_loop_nest_1 =====
common/pixel.c:60:1: note: === vect_analyze_loop_form ===
common/pixel.c:60:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 2
  exit condition [15, + , 4294967295] != 0
  bounds on difference of bases: -15 ... -15
  result:
    # of iterations 15, bounded by 15
common/pixel.c:60:1: note: Considering outer-loop vectorization.
common/pixel.c:60:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 1
  exit condition [7, + , 4294967295] != 0
  bounds on difference of bases: -7 ... -7
  result:
    # of iterations 7, bounded by 7
common/pixel.c:60:1: note: === vect_analyze_data_refs ===
Creating dr for *_10
analyze_innermost: success.
	base_address: pix1_29
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix1_7(D)
	Access function 0: {{0B, +, pretmp_61}_1, +, 1}_2
Creating dr for *_15
analyze_innermost: success.
	base_address: pix2_14
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix2_8(D)
	Access function 0: {{0B, +, pretmp_62}_1, +, 1}_2
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:60:1: note: analyze in outer-loop: *pix1_29
common/pixel.c:60:1: note: failed: evolution of base is not affine.
common/pixel.c:60:1: note: bad data references.

Analyzing loop at common/pixel.c:60
common/pixel.c:60:1: note: ===== analyze_loop_nest =====
common/pixel.c:60:1: note: === vect_analyze_loop_form ===
common/pixel.c:60:1: note: === get_loop_niters ===
common/pixel.c:60:1: note: === vect_analyze_data_refs ===
Creating dr for *_10
analyze_innermost: success.
	base_address: pix1_29
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix1_29
	Access function 0: {0B, +, 1}_2
Creating dr for *_15
analyze_innermost: success.
	base_address: pix2_14
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix2_14
	Access function 0: {0B, +, 1}_2
common/pixel.c:60:1: note: got vectype for stmt: _12 = *_10;
vector(16) unsigned char
common/pixel.c:60:1: note: got vectype for stmt: _16 = *_15;
vector(16) unsigned char
common/pixel.c:60:1: note: === vect_analyze_scalar_cycles ===
common/pixel.c:60:1: note: Analyze phi: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>

common/pixel.c:60:1: note: Access function of PHI: {i_sum_39, +, _19}_2
common/pixel.c:60:1: note: step: _19,  init: i_sum_39
common/pixel.c:60:1: note: step unknown.
common/pixel.c:60:1: note: Analyze phi: x_40 = PHI <x_21(3), 0(7)>

common/pixel.c:60:1: note: Access function of PHI: {0, +, 1}_2
common/pixel.c:60:1: note: step: 1,  init: 0
common/pixel.c:60:1: note: Detected induction.
common/pixel.c:60:1: note: Analyze phi: ivtmp_58 = PHI <ivtmp_57(3), 16(7)>

common/pixel.c:60:1: note: Access function of PHI: {16, +, 4294967295}_2
common/pixel.c:60:1: note: step: 4294967295,  init: 16
common/pixel.c:60:1: note: Detected induction.
common/pixel.c:60:1: note: Analyze phi: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>

common/pixel.c:60:1: note: detected reduction: i_sum_20 = _19 + i_sum_38;

common/pixel.c:60:1: note: Detected reduction.
common/pixel.c:60:1: note: === vect_pattern_recog ===
common/pixel.c:60:1: note: vect_is_simple_use: operand _19
common/pixel.c:60:1: note: def_stmt: _19 = ABS_EXPR <_18>;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: vect_is_simple_use: operand _19
common/pixel.c:60:1: note: def_stmt: _19 = ABS_EXPR <_18>;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: vect_is_simple_use: operand _19
common/pixel.c:60:1: note: def_stmt: _19 = ABS_EXPR <_18>;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: vect_is_simple_use: operand _13
common/pixel.c:60:1: note: def_stmt: _13 = (int) _12;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: vect_is_simple_use: operand _12
common/pixel.c:60:1: note: def_stmt: _12 = *_10;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: vect_is_simple_use: operand _17
common/pixel.c:60:1: note: def_stmt: _17 = (int) _16;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: vect_is_simple_use: operand _16
common/pixel.c:60:1: note: def_stmt: _16 = *_15;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: vect_recog_sad_pattern: detected: patt_54 = SAD_EXPR <_12, _16, i_sum_38>;

common/pixel.c:60:1: note: pattern recognized: patt_54 = SAD_EXPR <_12, _16, i_sum_38>;
common/pixel.c:60:1: note: === vect_analyze_data_ref_accesses ===
common/pixel.c:60:1: note: === vect_mark_stmts_to_be_vectorized ===
common/pixel.c:60:1: note: init: phi relevant? i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>
common/pixel.c:60:1: note: init: phi relevant? x_40 = PHI <x_21(3), 0(7)>
common/pixel.c:60:1: note: init: phi relevant? ivtmp_58 = PHI <ivtmp_57(3), 16(7)>
common/pixel.c:60:1: note: init: stmt relevant? # DEBUG x => x_40
common/pixel.c:60:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_38
common/pixel.c:60:1: note: init: stmt relevant? _9 = (sizetype) x_40;
common/pixel.c:60:1: note: init: stmt relevant? _10 = pix1_29 + _9;
common/pixel.c:60:1: note: init: stmt relevant? _12 = *_10;
common/pixel.c:60:1: note: init: stmt relevant? _13 = (int) _12;
common/pixel.c:60:1: note: init: stmt relevant? _15 = pix2_14 + _9;
common/pixel.c:60:1: note: init: stmt relevant? _16 = *_15;
common/pixel.c:60:1: note: init: stmt relevant? _17 = (int) _16;
common/pixel.c:60:1: note: init: stmt relevant? _18 = _13 - _17;
common/pixel.c:60:1: note: init: stmt relevant? _19 = ABS_EXPR <_18>;
common/pixel.c:60:1: note: init: stmt relevant? i_sum_20 = _19 + i_sum_38;
common/pixel.c:60:1: note: vec_stmt_relevant_p: used out of loop.
common/pixel.c:60:1: note: mark relevant 0, live 1.
common/pixel.c:60:1: note: last stmt in pattern. don't mark relevant/live.
common/pixel.c:60:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_20
common/pixel.c:60:1: note: init: stmt relevant? x_21 = x_40 + 1;
common/pixel.c:60:1: note: init: stmt relevant? # DEBUG x => x_21
common/pixel.c:60:1: note: init: stmt relevant? # DEBUG x => x_21
common/pixel.c:60:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_20
common/pixel.c:60:1: note: init: stmt relevant? ivtmp_57 = ivtmp_58 - 1;
common/pixel.c:60:1: note: init: stmt relevant? if (ivtmp_57 != 0)
common/pixel.c:60:1: note: worklist: examine stmt: patt_54 = SAD_EXPR <_12, _16, i_sum_38>;
common/pixel.c:60:1: note: vect_is_simple_use: operand _12
common/pixel.c:60:1: note: def_stmt: _12 = *_10;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: mark relevant 3, live 0.
common/pixel.c:60:1: note: vect_is_simple_use: operand _16
common/pixel.c:60:1: note: def_stmt: _16 = *_15;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: mark relevant 3, live 0.
common/pixel.c:60:1: note: vect_is_simple_use: operand i_sum_38
common/pixel.c:60:1: note: def_stmt: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>
common/pixel.c:60:1: note: type of def: 5.
common/pixel.c:60:1: note: mark relevant 3, live 0.
common/pixel.c:60:1: note: worklist: examine stmt: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>
common/pixel.c:60:1: note: vect_is_simple_use: operand i_sum_20
common/pixel.c:60:1: note: def_stmt: i_sum_20 = _19 + i_sum_38;
common/pixel.c:60:1: note: type of def: 5.
common/pixel.c:60:1: note: reduc-stmt defining reduc-phi in the same nest.
common/pixel.c:60:1: note: vect_is_simple_use: operand i_sum_39
common/pixel.c:60:1: note: def_stmt: i_sum_39 = PHI <i_sum_60(6), 0(2)>
common/pixel.c:60:1: note: type of def: 2.
common/pixel.c:60:1: note: def_stmt is out of loop.
common/pixel.c:60:1: note: worklist: examine stmt: _16 = *_15;
common/pixel.c:60:1: note: worklist: examine stmt: _12 = *_10;
common/pixel.c:60:1: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _12 = *_10;
  stmt_b: _16 = *_15;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _12 = *_10;
  stmt_b: _12 = *_10;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_2)
  (chrec_b = {0B, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _16 = *_15;
  stmt_b: _16 = *_15;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_2)
  (chrec_b = {0B, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/pixel.c:60:1: note: === vect_determine_vectorization_factor ===
common/pixel.c:60:1: note: ==> examining phi: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>

common/pixel.c:60:1: note: get vectype for scalar type:  int
common/pixel.c:60:1: note: vectype: vector(4) int
common/pixel.c:60:1: note: nunits = 4
common/pixel.c:60:1: note: ==> examining phi: x_40 = PHI <x_21(3), 0(7)>

common/pixel.c:60:1: note: ==> examining phi: ivtmp_58 = PHI <ivtmp_57(3), 16(7)>

common/pixel.c:60:1: note: ==> examining statement: # DEBUG x => x_40

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: # DEBUG i_sum => i_sum_38

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: _9 = (sizetype) x_40;

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: _10 = pix1_29 + _9;

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: _12 = *_10;

common/pixel.c:60:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:60:1: note: vectype: vector(16) unsigned char
common/pixel.c:60:1: note: nunits = 16
common/pixel.c:60:1: note: ==> examining statement: _13 = (int) _12;

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: _15 = pix2_14 + _9;

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: _16 = *_15;

common/pixel.c:60:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:60:1: note: vectype: vector(16) unsigned char
common/pixel.c:60:1: note: nunits = 16
common/pixel.c:60:1: note: ==> examining statement: _17 = (int) _16;

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: _18 = _13 - _17;

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: _19 = ABS_EXPR <_18>;

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: i_sum_20 = _19 + i_sum_38;

common/pixel.c:60:1: note: ==> examining pattern statement: patt_54 = SAD_EXPR <_12, _16, i_sum_38>;

common/pixel.c:60:1: note: get vectype for scalar type:  int
common/pixel.c:60:1: note: vectype: vector(4) int
common/pixel.c:60:1: note: nunits = 4
common/pixel.c:60:1: note: ==> examining statement: # DEBUG i_sum => i_sum_20

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: x_21 = x_40 + 1;

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: # DEBUG x => x_21

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: # DEBUG x => x_21

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: # DEBUG i_sum => i_sum_20

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: ivtmp_57 = ivtmp_58 - 1;

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: if (ivtmp_57 != 0)

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: vectorization factor = 16
common/pixel.c:60:1: note: === vect_analyze_data_refs_alignment ===
common/pixel.c:60:1: note: vect_compute_data_ref_alignment:
common/pixel.c:60:1: note: can't force alignment of ref: *_10
common/pixel.c:60:1: note: vect_compute_data_ref_alignment:
common/pixel.c:60:1: note: can't force alignment of ref: *_15
common/pixel.c:60:1: note: === vect_prune_runtime_alias_test_list ===
common/pixel.c:60:1: note: === vect_enhance_data_refs_alignment ===
common/pixel.c:60:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:60:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:60:1: note: vect_can_advance_ivs_p:
common/pixel.c:60:1: note: Analyze phi: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>

common/pixel.c:60:1: note: reduc phi. skip.
common/pixel.c:60:1: note: Analyze phi: x_40 = PHI <x_21(3), 0(7)>

common/pixel.c:60:1: note: Analyze phi: ivtmp_58 = PHI <ivtmp_57(3), 16(7)>

common/pixel.c:60:1: note: Vectorizing an unaligned access.
common/pixel.c:60:1: note: Vectorizing an unaligned access.
common/pixel.c:60:1: note: === vect_analyze_slp ===
common/pixel.c:60:1: note: === vect_make_slp_decision ===
common/pixel.c:60:1: note: === vect_detect_hybrid_slp ===
common/pixel.c:60:1: note: === vect_analyze_loop_operations ===
common/pixel.c:60:1: note: examining phi: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>

common/pixel.c:60:1: note: examining phi: x_40 = PHI <x_21(3), 0(7)>

common/pixel.c:60:1: note: examining phi: ivtmp_58 = PHI <ivtmp_57(3), 16(7)>

common/pixel.c:60:1: note: ==> examining statement: # DEBUG x => x_40
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: # DEBUG i_sum => i_sum_38
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: _9 = (sizetype) x_40;
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: _10 = pix1_29 + _9;
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: _12 = *_10;
common/pixel.c:60:1: note: vect_is_simple_use: operand *_10
common/pixel.c:60:1: note: not ssa-name.
common/pixel.c:60:1: note: use not simple.
common/pixel.c:60:1: note: vect_is_simple_use: operand *_10
common/pixel.c:60:1: note: not ssa-name.
common/pixel.c:60:1: note: use not simple.
common/pixel.c:60:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:60:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:60:1: note: ==> examining statement: _13 = (int) _12;
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: _15 = pix2_14 + _9;
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: _16 = *_15;
common/pixel.c:60:1: note: vect_is_simple_use: operand *_15
common/pixel.c:60:1: note: not ssa-name.
common/pixel.c:60:1: note: use not simple.
common/pixel.c:60:1: note: vect_is_simple_use: operand *_15
common/pixel.c:60:1: note: not ssa-name.
common/pixel.c:60:1: note: use not simple.
common/pixel.c:60:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:60:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:60:1: note: ==> examining statement: _17 = (int) _16;
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: _18 = _13 - _17;
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: _19 = ABS_EXPR <_18>;
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: i_sum_20 = _19 + i_sum_38;
common/pixel.c:60:1: note: ==> examining pattern statement: patt_54 = SAD_EXPR <_12, _16, i_sum_38>;
common/pixel.c:60:1: note: vect_is_simple_use: operand _12
common/pixel.c:60:1: note: def_stmt: _12 = *_10;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: vect_is_simple_use: operand _16
common/pixel.c:60:1: note: def_stmt: _16 = *_15;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: vect_is_simple_use: operand i_sum_38
common/pixel.c:60:1: note: def_stmt: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>
common/pixel.c:60:1: note: type of def: 5.
common/pixel.c:60:1: note: detected reduction: i_sum_20 = _19 + i_sum_38;

common/pixel.c:60:1: note: reduc op not supported by target.
vect_model_reduction_cost: inside_cost = 1, prologue_cost = 1, epilogue_cost = 5 .
common/pixel.c:60:1: note: ==> examining statement: # DEBUG i_sum => i_sum_20
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: x_21 = x_40 + 1;
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: # DEBUG x => x_21
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: # DEBUG x => x_21
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: # DEBUG i_sum => i_sum_20
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: ivtmp_57 = ivtmp_58 - 1;
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: if (ivtmp_57 != 0)
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: vectorization_factor = 16, niters = 16
common/pixel.c:60:1: note: === vect_update_slp_costs_according_to_vf ===
common/pixel.c:60:1: note: Cost model analysis: 
  Vector inside of loop cost: 5
  Vector prologue cost: 1
  Vector epilogue cost: 5
  Scalar iteration cost: 3
  Scalar outside cost: 0
  Vector outside cost: 6
  prologue iterations: 0
  epilogue iterations: 0
  Calculated minimum iters for profitability: 3
common/pixel.c:60:1: note:   Runtime profitability threshold = 15
common/pixel.c:60:1: note:   Static estimate profitability threshold = 15
common/pixel.c:60:1: note: loop vectorized
common/pixel.c:60:1: note: === vec_transform_loop ===
common/pixel.c:60:1: note: ------>vectorizing phi: i_sum_38 = PHI <i_sum_20(3), i_sum_39(9)>

common/pixel.c:60:1: note: multiple-types.
common/pixel.c:60:1: note: ------>vectorizing phi: x_40 = PHI <x_21(3), 0(9)>

common/pixel.c:60:1: note: ------>vectorizing phi: ivtmp_58 = PHI <ivtmp_57(3), 16(9)>

common/pixel.c:60:1: note: ------>vectorizing statement: # DEBUG x => x_40

common/pixel.c:60:1: note: ------>vectorizing statement: # DEBUG i_sum => i_sum_38

common/pixel.c:60:1: note: ------>vectorizing statement: _9 = (sizetype) x_40;

common/pixel.c:60:1: note: ------>vectorizing statement: _10 = pix1_29 + _9;

common/pixel.c:60:1: note: ------>vectorizing statement: _12 = *_10;

common/pixel.c:60:1: note: transform statement.
common/pixel.c:60:1: note: transform load. ncopies = 1
common/pixel.c:60:1: note: create vector_type-pointer variable to type: vector(16) unsigned char  vectorizing a pointer ref: *pix1_29
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:60:1: note: created vectp_pix1.154_53
common/pixel.c:60:1: note: add new stmt: vect__12.155_50 = MEM[(uint8_t *)vectp_pix1.153_52];
common/pixel.c:60:1: note: ------>vectorizing statement: _13 = (int) _12;

common/pixel.c:60:1: note: ------>vectorizing statement: _15 = pix2_14 + _9;

common/pixel.c:60:1: note: ------>vectorizing statement: _16 = *_15;

common/pixel.c:60:1: note: transform statement.
common/pixel.c:60:1: note: transform load. ncopies = 1
common/pixel.c:60:1: note: create vector_type-pointer variable to type: vector(16) unsigned char  vectorizing a pointer ref: *pix2_14
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:60:1: note: created vectp_pix2.157_49
common/pixel.c:60:1: note: add new stmt: vect__16.158_46 = MEM[(uint8_t *)vectp_pix2.156_48];
common/pixel.c:60:1: note: ------>vectorizing statement: _17 = (int) _16;

common/pixel.c:60:1: note: ------>vectorizing statement: _18 = _13 - _17;

common/pixel.c:60:1: note: ------>vectorizing statement: _19 = ABS_EXPR <_18>;

common/pixel.c:60:1: note: ------>vectorizing statement: i_sum_20 = _19 + i_sum_38;

common/pixel.c:60:1: note: multiple-types.
common/pixel.c:60:1: note: transform statement.
common/pixel.c:60:1: note: vect_is_simple_use: operand _12
common/pixel.c:60:1: note: def_stmt: _12 = *_10;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: vect_is_simple_use: operand _16
common/pixel.c:60:1: note: def_stmt: _16 = *_15;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: vect_is_simple_use: operand i_sum_38
common/pixel.c:60:1: note: def_stmt: i_sum_38 = PHI <i_sum_20(3), i_sum_39(9)>
common/pixel.c:60:1: note: type of def: 5.
common/pixel.c:60:1: note: detected reduction: i_sum_20 = _19 + i_sum_38;

common/pixel.c:60:1: note: reduc op not supported by target.
common/pixel.c:60:1: note: transform reduction.
common/pixel.c:60:1: note: vect_get_vec_def_for_operand: _12
common/pixel.c:60:1: note: vect_is_simple_use: operand _12
common/pixel.c:60:1: note: def_stmt: _12 = *_10;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: def =  _12
  def_stmt =  _12 = *_10;
common/pixel.c:60:1: note: vect_get_vec_def_for_operand: _16
common/pixel.c:60:1: note: vect_is_simple_use: operand _16
common/pixel.c:60:1: note: def_stmt: _16 = *_15;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: def =  _16
  def_stmt =  _16 = *_15;
common/pixel.c:60:1: note: add new stmt: vect_patt_54.159_44 = SAD_EXPR <vect__12.155_50, vect__16.158_46, vect_patt_54.159_45>;
common/pixel.c:60:1: note: vect_is_simple_use: operand i_sum_39
common/pixel.c:60:1: note: def_stmt: i_sum_39 = PHI <i_sum_60(6), 0(2)>
common/pixel.c:60:1: note: type of def: 2.
common/pixel.c:60:1: note: vect_get_vec_def_for_operand: i_sum_38
common/pixel.c:60:1: note: vect_is_simple_use: operand i_sum_38
common/pixel.c:60:1: note: def_stmt: i_sum_38 = PHI <i_sum_20(3), i_sum_39(9)>
common/pixel.c:60:1: note: type of def: 5.
common/pixel.c:60:1: note: def =  i_sum_38
  def_stmt =  i_sum_38 = PHI <i_sum_20(3), i_sum_39(9)>
common/pixel.c:60:1: note: transform reduction: created def-use cycle: vect_patt_54.159_45 = PHI <vect_patt_54.159_44(3), { 0, 0, 0, 0 }(9)>

vect_patt_54.159_44 = SAD_EXPR <vect__12.155_50, vect__16.158_46, vect_patt_54.159_45>;

common/pixel.c:60:1: note: Reduce using vector shifts
common/pixel.c:60:1: note: extract scalar result
common/pixel.c:60:1: note: ------>vectorizing statement: # DEBUG i_sum => i_sum_20

common/pixel.c:60:1: note: ------>vectorizing statement: x_21 = x_40 + 1;

common/pixel.c:60:1: note: ------>vectorizing statement: # DEBUG x => x_21

common/pixel.c:60:1: note: ------>vectorizing statement: # DEBUG x => x_21

common/pixel.c:60:1: note: ------>vectorizing statement: # DEBUG i_sum => i_sum_20

common/pixel.c:60:1: note: ------>vectorizing statement: ivtmp_57 = ivtmp_58 - 1;

common/pixel.c:60:1: note: ------>vectorizing statement: vectp_pix1.153_51 = vectp_pix1.153_52 + 16;

common/pixel.c:60:1: note: ------>vectorizing statement: vectp_pix2.156_47 = vectp_pix2.156_48 + 16;

common/pixel.c:60:1: note: ------>vectorizing statement: if (ivtmp_57 != 0)


loop at common/pixel.c:60: if (ivtmp_31 < 1)

;; Scaling loop 2 with scale 0.062500, bounding iterations to 1 from guessed 16
;; guessed iterations are now 1
common/pixel.c:60:1: note: LOOP VECTORIZED

common/pixel.c:60:1: note: vectorized 1 loops in function.
Merging blocks 7 and 9
x264_pixel_sad_16x8 (uint8_t * pix1, int i_stride_pix1, uint8_t * pix2, int i_stride_pix2)
{
  int vect_i_sum_20.162;
  vector(4) int vect_i_sum_20.161;
  int stmp_i_sum_20.160;
  vector(4) int vect_patt_54.159;
  vector(16) unsigned char vect__16.158;
  vector(16) unsigned char * vectp_pix2.157;
  vector(16) unsigned char * vectp_pix2.156;
  vector(16) unsigned char vect__12.155;
  vector(16) unsigned char * vectp_pix1.154;
  vector(16) unsigned char * vectp_pix1.153;
  int y;
  int x;
  int i_sum;
  sizetype _9;
  uint8_t * _10;
  unsigned char _12;
  int _13;
  uint8_t * _15;
  unsigned char _16;
  int _17;
  int _18;
  int _19;
  unsigned int ivtmp_31;
  unsigned int ivtmp_32;
  unsigned int ivtmp_55;
  unsigned int ivtmp_56;
  unsigned int ivtmp_57;
  unsigned int ivtmp_58;
  sizetype pretmp_61;
  sizetype pretmp_62;

  <bb 2>:
  # DEBUG i_sum => 0
  # DEBUG y => 0
  # DEBUG y => 0
  # DEBUG i_sum => 0
  # DEBUG pix2 => pix2_8(D)
  # DEBUG pix1 => pix1_7(D)
  pretmp_61 = (sizetype) i_stride_pix1_22(D);
  pretmp_62 = (sizetype) i_stride_pix2_25(D);
  goto <bb 7>;

  <bb 3>:

  <bb 4>:
  # i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>
  # x_40 = PHI <x_21(3), 0(7)>
  # ivtmp_58 = PHI <ivtmp_57(3), 16(7)>
  # vectp_pix1.153_52 = PHI <vectp_pix1.153_51(3), vectp_pix1.154_53(7)>
  # vectp_pix2.156_48 = PHI <vectp_pix2.156_47(3), vectp_pix2.157_49(7)>
  # vect_patt_54.159_45 = PHI <vect_patt_54.159_44(3), { 0, 0, 0, 0 }(7)>
  # ivtmp_32 = PHI <ivtmp_31(3), 0(7)>
  # DEBUG x => x_40
  # DEBUG i_sum => i_sum_38
  _9 = (sizetype) x_40;
  _10 = pix1_29 + _9;
  vect__12.155_50 = MEM[(uint8_t *)vectp_pix1.153_52];
  _12 = *_10;
  _13 = (int) _12;
  _15 = pix2_14 + _9;
  vect__16.158_46 = MEM[(uint8_t *)vectp_pix2.156_48];
  _16 = *_15;
  _17 = (int) _16;
  _18 = _13 - _17;
  _19 = ABS_EXPR <_18>;
  vect_patt_54.159_44 = SAD_EXPR <vect__12.155_50, vect__16.158_46, vect_patt_54.159_45>;
  i_sum_20 = _19 + i_sum_38;
  # DEBUG i_sum => i_sum_20
  x_21 = x_40 + 1;
  # DEBUG x => x_21
  # DEBUG x => x_21
  # DEBUG i_sum => i_sum_20
  ivtmp_57 = ivtmp_58 - 1;
  vectp_pix1.153_51 = vectp_pix1.153_52 + 16;
  vectp_pix2.156_47 = vectp_pix2.156_48 + 16;
  ivtmp_31 = ivtmp_32 + 1;
  if (ivtmp_31 < 1)
    goto <bb 3>;
  else
    goto <bb 5>;

  <bb 5>:
  # i_sum_60 = PHI <i_sum_20(4)>
  # vect_patt_54.159_43 = PHI <vect_patt_54.159_44(4)>
  vect_i_sum_20.161_42 = VEC_PERM_EXPR <vect_patt_54.159_43, { 0, 0, 0, 0 }, { 2, 3, 4, 5 }>;
  vect_i_sum_20.161_37 = vect_i_sum_20.161_42 + vect_patt_54.159_43;
  vect_i_sum_20.161_36 = VEC_PERM_EXPR <vect_i_sum_20.161_37, { 0, 0, 0, 0 }, { 1, 2, 3, 4 }>;
  vect_i_sum_20.161_35 = vect_i_sum_20.161_36 + vect_i_sum_20.161_37;
  stmp_i_sum_20.160_34 = BIT_FIELD_REF <vect_i_sum_20.161_35, 32, 0>;
  vect_i_sum_20.162_33 = stmp_i_sum_20.160_34 + i_sum_39;
  pix1_24 = pix1_29 + pretmp_61;
  # DEBUG pix1 => pix1_24
  pix2_27 = pix2_14 + pretmp_62;
  # DEBUG pix2 => pix2_27
  y_28 = y_41 + 1;
  # DEBUG y => y_28
  # DEBUG y => y_28
  # DEBUG i_sum => vect_i_sum_20.162_33
  # DEBUG pix2 => pix2_27
  # DEBUG pix1 => pix1_24
  ivtmp_55 = ivtmp_56 - 1;
  if (ivtmp_55 != 0)
    goto <bb 6>;
  else
    goto <bb 8>;

  <bb 6>:

  <bb 7>:
  # pix1_29 = PHI <pix1_24(6), pix1_7(D)(2)>
  # pix2_14 = PHI <pix2_27(6), pix2_8(D)(2)>
  # i_sum_39 = PHI <vect_i_sum_20.162_33(6), 0(2)>
  # y_41 = PHI <y_28(6), 0(2)>
  # ivtmp_56 = PHI <ivtmp_55(6), 8(2)>
  # DEBUG y => y_41
  # DEBUG i_sum => i_sum_39
  # DEBUG pix2 => pix2_14
  # DEBUG pix1 => pix1_29
  # DEBUG x => 0
  # DEBUG i_sum => i_sum_39
  vectp_pix1.154_53 = pix1_29;
  vectp_pix2.157_49 = pix2_14;
  goto <bb 4>;

  <bb 8>:
  # i_sum_59 = PHI <vect_i_sum_20.162_33(5)>
  return i_sum_59;

}



;; Function x264_pixel_sad_8x16 (x264_pixel_sad_8x16, funcdef_no=117, decl_uid=7520, cgraph_uid=117, symbol_order=160)


Analyzing loop at common/pixel.c:61
common/pixel.c:61:1: note: ===== analyze_loop_nest =====
common/pixel.c:61:1: note: === vect_analyze_loop_form ===
common/pixel.c:61:1: note: ===== analyze_loop_nest_1 =====
common/pixel.c:61:1: note: === vect_analyze_loop_form ===
common/pixel.c:61:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 2
  exit condition [7, + , 4294967295] != 0
  bounds on difference of bases: -7 ... -7
  result:
    # of iterations 7, bounded by 7
common/pixel.c:61:1: note: Considering outer-loop vectorization.
common/pixel.c:61:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 1
  exit condition [15, + , 4294967295] != 0
  bounds on difference of bases: -15 ... -15
  result:
    # of iterations 15, bounded by 15
common/pixel.c:61:1: note: === vect_analyze_data_refs ===
Creating dr for *_10
analyze_innermost: success.
	base_address: pix1_29
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix1_7(D)
	Access function 0: {{0B, +, pretmp_61}_1, +, 1}_2
Creating dr for *_15
analyze_innermost: success.
	base_address: pix2_14
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix2_8(D)
	Access function 0: {{0B, +, pretmp_62}_1, +, 1}_2
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:61:1: note: analyze in outer-loop: *pix1_29
common/pixel.c:61:1: note: failed: evolution of base is not affine.
common/pixel.c:61:1: note: bad data references.

Analyzing loop at common/pixel.c:61
common/pixel.c:61:1: note: ===== analyze_loop_nest =====
common/pixel.c:61:1: note: === vect_analyze_loop_form ===
common/pixel.c:61:1: note: === get_loop_niters ===
common/pixel.c:61:1: note: === vect_analyze_data_refs ===
Creating dr for *_10
analyze_innermost: success.
	base_address: pix1_29
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix1_29
	Access function 0: {0B, +, 1}_2
Creating dr for *_15
analyze_innermost: success.
	base_address: pix2_14
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix2_14
	Access function 0: {0B, +, 1}_2
common/pixel.c:61:1: note: got vectype for stmt: _12 = *_10;
vector(16) unsigned char
common/pixel.c:61:1: note: got vectype for stmt: _16 = *_15;
vector(16) unsigned char
common/pixel.c:61:1: note: === vect_analyze_scalar_cycles ===
common/pixel.c:61:1: note: Analyze phi: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>

common/pixel.c:61:1: note: Access function of PHI: {i_sum_39, +, _19}_2
common/pixel.c:61:1: note: step: _19,  init: i_sum_39
common/pixel.c:61:1: note: step unknown.
common/pixel.c:61:1: note: Analyze phi: x_40 = PHI <x_21(3), 0(7)>

common/pixel.c:61:1: note: Access function of PHI: {0, +, 1}_2
common/pixel.c:61:1: note: step: 1,  init: 0
common/pixel.c:61:1: note: Detected induction.
common/pixel.c:61:1: note: Analyze phi: ivtmp_58 = PHI <ivtmp_57(3), 8(7)>

common/pixel.c:61:1: note: Access function of PHI: {8, +, 4294967295}_2
common/pixel.c:61:1: note: step: 4294967295,  init: 8
common/pixel.c:61:1: note: Detected induction.
common/pixel.c:61:1: note: Analyze phi: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>

common/pixel.c:61:1: note: detected reduction: i_sum_20 = _19 + i_sum_38;

common/pixel.c:61:1: note: Detected reduction.
common/pixel.c:61:1: note: === vect_pattern_recog ===
common/pixel.c:61:1: note: vect_is_simple_use: operand _19
common/pixel.c:61:1: note: def_stmt: _19 = ABS_EXPR <_18>;
common/pixel.c:61:1: note: type of def: 3.
common/pixel.c:61:1: note: vect_is_simple_use: operand _19
common/pixel.c:61:1: note: def_stmt: _19 = ABS_EXPR <_18>;
common/pixel.c:61:1: note: type of def: 3.
common/pixel.c:61:1: note: vect_is_simple_use: operand _19
common/pixel.c:61:1: note: def_stmt: _19 = ABS_EXPR <_18>;
common/pixel.c:61:1: note: type of def: 3.
common/pixel.c:61:1: note: vect_is_simple_use: operand _13
common/pixel.c:61:1: note: def_stmt: _13 = (int) _12;
common/pixel.c:61:1: note: type of def: 3.
common/pixel.c:61:1: note: vect_is_simple_use: operand _12
common/pixel.c:61:1: note: def_stmt: _12 = *_10;
common/pixel.c:61:1: note: type of def: 3.
common/pixel.c:61:1: note: vect_is_simple_use: operand _17
common/pixel.c:61:1: note: def_stmt: _17 = (int) _16;
common/pixel.c:61:1: note: type of def: 3.
common/pixel.c:61:1: note: vect_is_simple_use: operand _16
common/pixel.c:61:1: note: def_stmt: _16 = *_15;
common/pixel.c:61:1: note: type of def: 3.
common/pixel.c:61:1: note: vect_recog_sad_pattern: detected: patt_54 = SAD_EXPR <_12, _16, i_sum_38>;

common/pixel.c:61:1: note: pattern recognized: patt_54 = SAD_EXPR <_12, _16, i_sum_38>;
common/pixel.c:61:1: note: === vect_analyze_data_ref_accesses ===
common/pixel.c:61:1: note: === vect_mark_stmts_to_be_vectorized ===
common/pixel.c:61:1: note: init: phi relevant? i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>
common/pixel.c:61:1: note: init: phi relevant? x_40 = PHI <x_21(3), 0(7)>
common/pixel.c:61:1: note: init: phi relevant? ivtmp_58 = PHI <ivtmp_57(3), 8(7)>
common/pixel.c:61:1: note: init: stmt relevant? # DEBUG x => x_40
common/pixel.c:61:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_38
common/pixel.c:61:1: note: init: stmt relevant? _9 = (sizetype) x_40;
common/pixel.c:61:1: note: init: stmt relevant? _10 = pix1_29 + _9;
common/pixel.c:61:1: note: init: stmt relevant? _12 = *_10;
common/pixel.c:61:1: note: init: stmt relevant? _13 = (int) _12;
common/pixel.c:61:1: note: init: stmt relevant? _15 = pix2_14 + _9;
common/pixel.c:61:1: note: init: stmt relevant? _16 = *_15;
common/pixel.c:61:1: note: init: stmt relevant? _17 = (int) _16;
common/pixel.c:61:1: note: init: stmt relevant? _18 = _13 - _17;
common/pixel.c:61:1: note: init: stmt relevant? _19 = ABS_EXPR <_18>;
common/pixel.c:61:1: note: init: stmt relevant? i_sum_20 = _19 + i_sum_38;
common/pixel.c:61:1: note: vec_stmt_relevant_p: used out of loop.
common/pixel.c:61:1: note: mark relevant 0, live 1.
common/pixel.c:61:1: note: last stmt in pattern. don't mark relevant/live.
common/pixel.c:61:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_20
common/pixel.c:61:1: note: init: stmt relevant? x_21 = x_40 + 1;
common/pixel.c:61:1: note: init: stmt relevant? # DEBUG x => x_21
common/pixel.c:61:1: note: init: stmt relevant? # DEBUG x => x_21
common/pixel.c:61:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_20
common/pixel.c:61:1: note: init: stmt relevant? ivtmp_57 = ivtmp_58 - 1;
common/pixel.c:61:1: note: init: stmt relevant? if (ivtmp_57 != 0)
common/pixel.c:61:1: note: worklist: examine stmt: patt_54 = SAD_EXPR <_12, _16, i_sum_38>;
common/pixel.c:61:1: note: vect_is_simple_use: operand _12
common/pixel.c:61:1: note: def_stmt: _12 = *_10;
common/pixel.c:61:1: note: type of def: 3.
common/pixel.c:61:1: note: mark relevant 3, live 0.
common/pixel.c:61:1: note: vect_is_simple_use: operand _16
common/pixel.c:61:1: note: def_stmt: _16 = *_15;
common/pixel.c:61:1: note: type of def: 3.
common/pixel.c:61:1: note: mark relevant 3, live 0.
common/pixel.c:61:1: note: vect_is_simple_use: operand i_sum_38
common/pixel.c:61:1: note: def_stmt: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>
common/pixel.c:61:1: note: type of def: 5.
common/pixel.c:61:1: note: mark relevant 3, live 0.
common/pixel.c:61:1: note: worklist: examine stmt: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>
common/pixel.c:61:1: note: vect_is_simple_use: operand i_sum_20
common/pixel.c:61:1: note: def_stmt: i_sum_20 = _19 + i_sum_38;
common/pixel.c:61:1: note: type of def: 5.
common/pixel.c:61:1: note: reduc-stmt defining reduc-phi in the same nest.
common/pixel.c:61:1: note: vect_is_simple_use: operand i_sum_39
common/pixel.c:61:1: note: def_stmt: i_sum_39 = PHI <i_sum_60(6), 0(2)>
common/pixel.c:61:1: note: type of def: 2.
common/pixel.c:61:1: note: def_stmt is out of loop.
common/pixel.c:61:1: note: worklist: examine stmt: _16 = *_15;
common/pixel.c:61:1: note: worklist: examine stmt: _12 = *_10;
common/pixel.c:61:1: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _12 = *_10;
  stmt_b: _16 = *_15;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _12 = *_10;
  stmt_b: _12 = *_10;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_2)
  (chrec_b = {0B, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _16 = *_15;
  stmt_b: _16 = *_15;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_2)
  (chrec_b = {0B, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/pixel.c:61:1: note: === vect_determine_vectorization_factor ===
common/pixel.c:61:1: note: ==> examining phi: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>

common/pixel.c:61:1: note: get vectype for scalar type:  int
common/pixel.c:61:1: note: vectype: vector(4) int
common/pixel.c:61:1: note: nunits = 4
common/pixel.c:61:1: note: ==> examining phi: x_40 = PHI <x_21(3), 0(7)>

common/pixel.c:61:1: note: ==> examining phi: ivtmp_58 = PHI <ivtmp_57(3), 8(7)>

common/pixel.c:61:1: note: ==> examining statement: # DEBUG x => x_40

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: # DEBUG i_sum => i_sum_38

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: _9 = (sizetype) x_40;

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: _10 = pix1_29 + _9;

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: _12 = *_10;

common/pixel.c:61:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:61:1: note: vectype: vector(16) unsigned char
common/pixel.c:61:1: note: nunits = 16
common/pixel.c:61:1: note: ==> examining statement: _13 = (int) _12;

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: _15 = pix2_14 + _9;

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: _16 = *_15;

common/pixel.c:61:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:61:1: note: vectype: vector(16) unsigned char
common/pixel.c:61:1: note: nunits = 16
common/pixel.c:61:1: note: ==> examining statement: _17 = (int) _16;

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: _18 = _13 - _17;

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: _19 = ABS_EXPR <_18>;

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: i_sum_20 = _19 + i_sum_38;

common/pixel.c:61:1: note: ==> examining pattern statement: patt_54 = SAD_EXPR <_12, _16, i_sum_38>;

common/pixel.c:61:1: note: get vectype for scalar type:  int
common/pixel.c:61:1: note: vectype: vector(4) int
common/pixel.c:61:1: note: nunits = 4
common/pixel.c:61:1: note: ==> examining statement: # DEBUG i_sum => i_sum_20

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: x_21 = x_40 + 1;

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: # DEBUG x => x_21

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: # DEBUG x => x_21

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: # DEBUG i_sum => i_sum_20

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: ivtmp_57 = ivtmp_58 - 1;

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: if (ivtmp_57 != 0)

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: vectorization factor = 16
common/pixel.c:61:1: note: === vect_analyze_data_refs_alignment ===
common/pixel.c:61:1: note: vect_compute_data_ref_alignment:
common/pixel.c:61:1: note: can't force alignment of ref: *_10
common/pixel.c:61:1: note: vect_compute_data_ref_alignment:
common/pixel.c:61:1: note: can't force alignment of ref: *_15
common/pixel.c:61:1: note: === vect_prune_runtime_alias_test_list ===
common/pixel.c:61:1: note: === vect_enhance_data_refs_alignment ===
common/pixel.c:61:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:61:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:61:1: note: vect_can_advance_ivs_p:
common/pixel.c:61:1: note: Analyze phi: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>

common/pixel.c:61:1: note: reduc phi. skip.
common/pixel.c:61:1: note: Analyze phi: x_40 = PHI <x_21(3), 0(7)>

common/pixel.c:61:1: note: Analyze phi: ivtmp_58 = PHI <ivtmp_57(3), 8(7)>

common/pixel.c:61:1: note: Vectorizing an unaligned access.
common/pixel.c:61:1: note: Vectorizing an unaligned access.
common/pixel.c:61:1: note: === vect_analyze_slp ===
common/pixel.c:61:1: note: === vect_make_slp_decision ===
common/pixel.c:61:1: note: === vect_detect_hybrid_slp ===
common/pixel.c:61:1: note: === vect_analyze_loop_operations ===
common/pixel.c:61:1: note: examining phi: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>

common/pixel.c:61:1: note: examining phi: x_40 = PHI <x_21(3), 0(7)>

common/pixel.c:61:1: note: examining phi: ivtmp_58 = PHI <ivtmp_57(3), 8(7)>

common/pixel.c:61:1: note: ==> examining statement: # DEBUG x => x_40
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: # DEBUG i_sum => i_sum_38
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: _9 = (sizetype) x_40;
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: _10 = pix1_29 + _9;
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: _12 = *_10;
common/pixel.c:61:1: note: vect_is_simple_use: operand *_10
common/pixel.c:61:1: note: not ssa-name.
common/pixel.c:61:1: note: use not simple.
common/pixel.c:61:1: note: vect_is_simple_use: operand *_10
common/pixel.c:61:1: note: not ssa-name.
common/pixel.c:61:1: note: use not simple.
common/pixel.c:61:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:61:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:61:1: note: ==> examining statement: _13 = (int) _12;
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: _15 = pix2_14 + _9;
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: _16 = *_15;
common/pixel.c:61:1: note: vect_is_simple_use: operand *_15
common/pixel.c:61:1: note: not ssa-name.
common/pixel.c:61:1: note: use not simple.
common/pixel.c:61:1: note: vect_is_simple_use: operand *_15
common/pixel.c:61:1: note: not ssa-name.
common/pixel.c:61:1: note: use not simple.
common/pixel.c:61:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:61:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:61:1: note: ==> examining statement: _17 = (int) _16;
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: _18 = _13 - _17;
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: _19 = ABS_EXPR <_18>;
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: i_sum_20 = _19 + i_sum_38;
common/pixel.c:61:1: note: ==> examining pattern statement: patt_54 = SAD_EXPR <_12, _16, i_sum_38>;
common/pixel.c:61:1: note: vect_is_simple_use: operand _12
common/pixel.c:61:1: note: def_stmt: _12 = *_10;
common/pixel.c:61:1: note: type of def: 3.
common/pixel.c:61:1: note: vect_is_simple_use: operand _16
common/pixel.c:61:1: note: def_stmt: _16 = *_15;
common/pixel.c:61:1: note: type of def: 3.
common/pixel.c:61:1: note: vect_is_simple_use: operand i_sum_38
common/pixel.c:61:1: note: def_stmt: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>
common/pixel.c:61:1: note: type of def: 5.
common/pixel.c:61:1: note: detected reduction: i_sum_20 = _19 + i_sum_38;

common/pixel.c:61:1: note: reduc op not supported by target.
vect_model_reduction_cost: inside_cost = 1, prologue_cost = 1, epilogue_cost = 5 .
common/pixel.c:61:1: note: ==> examining statement: # DEBUG i_sum => i_sum_20
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: x_21 = x_40 + 1;
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: # DEBUG x => x_21
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: # DEBUG x => x_21
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: # DEBUG i_sum => i_sum_20
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: ivtmp_57 = ivtmp_58 - 1;
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: if (ivtmp_57 != 0)
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: vectorization_factor = 16, niters = 8
common/pixel.c:61:1: note: not vectorized: iteration count too small.
common/pixel.c:61:1: note: not vectorized: iteration count smaller than vectorization factor.
common/pixel.c:61:1: note: bad operation or unsupported loop bound.
common/pixel.c:61:1: note: vectorized 0 loops in function.
x264_pixel_sad_8x16 (uint8_t * pix1, int i_stride_pix1, uint8_t * pix2, int i_stride_pix2)
{
  int y;
  int x;
  int i_sum;
  sizetype _9;
  uint8_t * _10;
  unsigned char _12;
  int _13;
  uint8_t * _15;
  unsigned char _16;
  int _17;
  int _18;
  int _19;
  unsigned int ivtmp_55;
  unsigned int ivtmp_56;
  unsigned int ivtmp_57;
  unsigned int ivtmp_58;
  sizetype pretmp_61;
  sizetype pretmp_62;

  <bb 2>:
  # DEBUG i_sum => 0
  # DEBUG y => 0
  # DEBUG y => 0
  # DEBUG i_sum => 0
  # DEBUG pix2 => pix2_8(D)
  # DEBUG pix1 => pix1_7(D)
  pretmp_61 = (sizetype) i_stride_pix1_22(D);
  pretmp_62 = (sizetype) i_stride_pix2_25(D);
  goto <bb 7>;

  <bb 3>:

  <bb 4>:
  # i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>
  # x_40 = PHI <x_21(3), 0(7)>
  # ivtmp_58 = PHI <ivtmp_57(3), 8(7)>
  # DEBUG x => x_40
  # DEBUG i_sum => i_sum_38
  _9 = (sizetype) x_40;
  _10 = pix1_29 + _9;
  _12 = *_10;
  _13 = (int) _12;
  _15 = pix2_14 + _9;
  _16 = *_15;
  _17 = (int) _16;
  _18 = _13 - _17;
  _19 = ABS_EXPR <_18>;
  i_sum_20 = _19 + i_sum_38;
  # DEBUG i_sum => i_sum_20
  x_21 = x_40 + 1;
  # DEBUG x => x_21
  # DEBUG x => x_21
  # DEBUG i_sum => i_sum_20
  ivtmp_57 = ivtmp_58 - 1;
  if (ivtmp_57 != 0)
    goto <bb 3>;
  else
    goto <bb 5>;

  <bb 5>:
  # i_sum_60 = PHI <i_sum_20(4)>
  pix1_24 = pix1_29 + pretmp_61;
  # DEBUG pix1 => pix1_24
  pix2_27 = pix2_14 + pretmp_62;
  # DEBUG pix2 => pix2_27
  y_28 = y_41 + 1;
  # DEBUG y => y_28
  # DEBUG y => y_28
  # DEBUG i_sum => i_sum_60
  # DEBUG pix2 => pix2_27
  # DEBUG pix1 => pix1_24
  ivtmp_55 = ivtmp_56 - 1;
  if (ivtmp_55 != 0)
    goto <bb 6>;
  else
    goto <bb 8>;

  <bb 6>:

  <bb 7>:
  # pix1_29 = PHI <pix1_24(6), pix1_7(D)(2)>
  # pix2_14 = PHI <pix2_27(6), pix2_8(D)(2)>
  # i_sum_39 = PHI <i_sum_60(6), 0(2)>
  # y_41 = PHI <y_28(6), 0(2)>
  # ivtmp_56 = PHI <ivtmp_55(6), 16(2)>
  # DEBUG y => y_41
  # DEBUG i_sum => i_sum_39
  # DEBUG pix2 => pix2_14
  # DEBUG pix1 => pix1_29
  # DEBUG x => 0
  # DEBUG i_sum => i_sum_39
  goto <bb 4>;

  <bb 8>:
  # i_sum_59 = PHI <i_sum_60(5)>
  return i_sum_59;

}



;; Function x264_pixel_sad_8x8 (x264_pixel_sad_8x8, funcdef_no=118, decl_uid=7535, cgraph_uid=118, symbol_order=161)


Analyzing loop at common/pixel.c:62
common/pixel.c:62:1: note: ===== analyze_loop_nest =====
common/pixel.c:62:1: note: === vect_analyze_loop_form ===
common/pixel.c:62:1: note: ===== analyze_loop_nest_1 =====
common/pixel.c:62:1: note: === vect_analyze_loop_form ===
common/pixel.c:62:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 2
  exit condition [7, + , 4294967295] != 0
  bounds on difference of bases: -7 ... -7
  result:
    # of iterations 7, bounded by 7
common/pixel.c:62:1: note: Considering outer-loop vectorization.
common/pixel.c:62:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 1
  exit condition [7, + , 4294967295] != 0
  bounds on difference of bases: -7 ... -7
  result:
    # of iterations 7, bounded by 7
common/pixel.c:62:1: note: === vect_analyze_data_refs ===
Creating dr for *_10
analyze_innermost: success.
	base_address: pix1_29
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix1_7(D)
	Access function 0: {{0B, +, pretmp_61}_1, +, 1}_2
Creating dr for *_15
analyze_innermost: success.
	base_address: pix2_14
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix2_8(D)
	Access function 0: {{0B, +, pretmp_62}_1, +, 1}_2
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:62:1: note: analyze in outer-loop: *pix1_29
common/pixel.c:62:1: note: failed: evolution of base is not affine.
common/pixel.c:62:1: note: bad data references.

Analyzing loop at common/pixel.c:62
common/pixel.c:62:1: note: ===== analyze_loop_nest =====
common/pixel.c:62:1: note: === vect_analyze_loop_form ===
common/pixel.c:62:1: note: === get_loop_niters ===
common/pixel.c:62:1: note: === vect_analyze_data_refs ===
Creating dr for *_10
analyze_innermost: success.
	base_address: pix1_29
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix1_29
	Access function 0: {0B, +, 1}_2
Creating dr for *_15
analyze_innermost: success.
	base_address: pix2_14
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix2_14
	Access function 0: {0B, +, 1}_2
common/pixel.c:62:1: note: got vectype for stmt: _12 = *_10;
vector(16) unsigned char
common/pixel.c:62:1: note: got vectype for stmt: _16 = *_15;
vector(16) unsigned char
common/pixel.c:62:1: note: === vect_analyze_scalar_cycles ===
common/pixel.c:62:1: note: Analyze phi: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>

common/pixel.c:62:1: note: Access function of PHI: {i_sum_39, +, _19}_2
common/pixel.c:62:1: note: step: _19,  init: i_sum_39
common/pixel.c:62:1: note: step unknown.
common/pixel.c:62:1: note: Analyze phi: x_40 = PHI <x_21(3), 0(7)>

common/pixel.c:62:1: note: Access function of PHI: {0, +, 1}_2
common/pixel.c:62:1: note: step: 1,  init: 0
common/pixel.c:62:1: note: Detected induction.
common/pixel.c:62:1: note: Analyze phi: ivtmp_58 = PHI <ivtmp_57(3), 8(7)>

common/pixel.c:62:1: note: Access function of PHI: {8, +, 4294967295}_2
common/pixel.c:62:1: note: step: 4294967295,  init: 8
common/pixel.c:62:1: note: Detected induction.
common/pixel.c:62:1: note: Analyze phi: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>

common/pixel.c:62:1: note: detected reduction: i_sum_20 = _19 + i_sum_38;

common/pixel.c:62:1: note: Detected reduction.
common/pixel.c:62:1: note: === vect_pattern_recog ===
common/pixel.c:62:1: note: vect_is_simple_use: operand _19
common/pixel.c:62:1: note: def_stmt: _19 = ABS_EXPR <_18>;
common/pixel.c:62:1: note: type of def: 3.
common/pixel.c:62:1: note: vect_is_simple_use: operand _19
common/pixel.c:62:1: note: def_stmt: _19 = ABS_EXPR <_18>;
common/pixel.c:62:1: note: type of def: 3.
common/pixel.c:62:1: note: vect_is_simple_use: operand _19
common/pixel.c:62:1: note: def_stmt: _19 = ABS_EXPR <_18>;
common/pixel.c:62:1: note: type of def: 3.
common/pixel.c:62:1: note: vect_is_simple_use: operand _13
common/pixel.c:62:1: note: def_stmt: _13 = (int) _12;
common/pixel.c:62:1: note: type of def: 3.
common/pixel.c:62:1: note: vect_is_simple_use: operand _12
common/pixel.c:62:1: note: def_stmt: _12 = *_10;
common/pixel.c:62:1: note: type of def: 3.
common/pixel.c:62:1: note: vect_is_simple_use: operand _17
common/pixel.c:62:1: note: def_stmt: _17 = (int) _16;
common/pixel.c:62:1: note: type of def: 3.
common/pixel.c:62:1: note: vect_is_simple_use: operand _16
common/pixel.c:62:1: note: def_stmt: _16 = *_15;
common/pixel.c:62:1: note: type of def: 3.
common/pixel.c:62:1: note: vect_recog_sad_pattern: detected: patt_54 = SAD_EXPR <_12, _16, i_sum_38>;

common/pixel.c:62:1: note: pattern recognized: patt_54 = SAD_EXPR <_12, _16, i_sum_38>;
common/pixel.c:62:1: note: === vect_analyze_data_ref_accesses ===
common/pixel.c:62:1: note: === vect_mark_stmts_to_be_vectorized ===
common/pixel.c:62:1: note: init: phi relevant? i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>
common/pixel.c:62:1: note: init: phi relevant? x_40 = PHI <x_21(3), 0(7)>
common/pixel.c:62:1: note: init: phi relevant? ivtmp_58 = PHI <ivtmp_57(3), 8(7)>
common/pixel.c:62:1: note: init: stmt relevant? # DEBUG x => x_40
common/pixel.c:62:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_38
common/pixel.c:62:1: note: init: stmt relevant? _9 = (sizetype) x_40;
common/pixel.c:62:1: note: init: stmt relevant? _10 = pix1_29 + _9;
common/pixel.c:62:1: note: init: stmt relevant? _12 = *_10;
common/pixel.c:62:1: note: init: stmt relevant? _13 = (int) _12;
common/pixel.c:62:1: note: init: stmt relevant? _15 = pix2_14 + _9;
common/pixel.c:62:1: note: init: stmt relevant? _16 = *_15;
common/pixel.c:62:1: note: init: stmt relevant? _17 = (int) _16;
common/pixel.c:62:1: note: init: stmt relevant? _18 = _13 - _17;
common/pixel.c:62:1: note: init: stmt relevant? _19 = ABS_EXPR <_18>;
common/pixel.c:62:1: note: init: stmt relevant? i_sum_20 = _19 + i_sum_38;
common/pixel.c:62:1: note: vec_stmt_relevant_p: used out of loop.
common/pixel.c:62:1: note: mark relevant 0, live 1.
common/pixel.c:62:1: note: last stmt in pattern. don't mark relevant/live.
common/pixel.c:62:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_20
common/pixel.c:62:1: note: init: stmt relevant? x_21 = x_40 + 1;
common/pixel.c:62:1: note: init: stmt relevant? # DEBUG x => x_21
common/pixel.c:62:1: note: init: stmt relevant? # DEBUG x => x_21
common/pixel.c:62:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_20
common/pixel.c:62:1: note: init: stmt relevant? ivtmp_57 = ivtmp_58 - 1;
common/pixel.c:62:1: note: init: stmt relevant? if (ivtmp_57 != 0)
common/pixel.c:62:1: note: worklist: examine stmt: patt_54 = SAD_EXPR <_12, _16, i_sum_38>;
common/pixel.c:62:1: note: vect_is_simple_use: operand _12
common/pixel.c:62:1: note: def_stmt: _12 = *_10;
common/pixel.c:62:1: note: type of def: 3.
common/pixel.c:62:1: note: mark relevant 3, live 0.
common/pixel.c:62:1: note: vect_is_simple_use: operand _16
common/pixel.c:62:1: note: def_stmt: _16 = *_15;
common/pixel.c:62:1: note: type of def: 3.
common/pixel.c:62:1: note: mark relevant 3, live 0.
common/pixel.c:62:1: note: vect_is_simple_use: operand i_sum_38
common/pixel.c:62:1: note: def_stmt: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>
common/pixel.c:62:1: note: type of def: 5.
common/pixel.c:62:1: note: mark relevant 3, live 0.
common/pixel.c:62:1: note: worklist: examine stmt: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>
common/pixel.c:62:1: note: vect_is_simple_use: operand i_sum_20
common/pixel.c:62:1: note: def_stmt: i_sum_20 = _19 + i_sum_38;
common/pixel.c:62:1: note: type of def: 5.
common/pixel.c:62:1: note: reduc-stmt defining reduc-phi in the same nest.
common/pixel.c:62:1: note: vect_is_simple_use: operand i_sum_39
common/pixel.c:62:1: note: def_stmt: i_sum_39 = PHI <i_sum_60(6), 0(2)>
common/pixel.c:62:1: note: type of def: 2.
common/pixel.c:62:1: note: def_stmt is out of loop.
common/pixel.c:62:1: note: worklist: examine stmt: _16 = *_15;
common/pixel.c:62:1: note: worklist: examine stmt: _12 = *_10;
common/pixel.c:62:1: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _12 = *_10;
  stmt_b: _16 = *_15;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _12 = *_10;
  stmt_b: _12 = *_10;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_2)
  (chrec_b = {0B, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _16 = *_15;
  stmt_b: _16 = *_15;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_2)
  (chrec_b = {0B, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/pixel.c:62:1: note: === vect_determine_vectorization_factor ===
common/pixel.c:62:1: note: ==> examining phi: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>

common/pixel.c:62:1: note: get vectype for scalar type:  int
common/pixel.c:62:1: note: vectype: vector(4) int
common/pixel.c:62:1: note: nunits = 4
common/pixel.c:62:1: note: ==> examining phi: x_40 = PHI <x_21(3), 0(7)>

common/pixel.c:62:1: note: ==> examining phi: ivtmp_58 = PHI <ivtmp_57(3), 8(7)>

common/pixel.c:62:1: note: ==> examining statement: # DEBUG x => x_40

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: # DEBUG i_sum => i_sum_38

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: _9 = (sizetype) x_40;

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: _10 = pix1_29 + _9;

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: _12 = *_10;

common/pixel.c:62:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:62:1: note: vectype: vector(16) unsigned char
common/pixel.c:62:1: note: nunits = 16
common/pixel.c:62:1: note: ==> examining statement: _13 = (int) _12;

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: _15 = pix2_14 + _9;

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: _16 = *_15;

common/pixel.c:62:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:62:1: note: vectype: vector(16) unsigned char
common/pixel.c:62:1: note: nunits = 16
common/pixel.c:62:1: note: ==> examining statement: _17 = (int) _16;

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: _18 = _13 - _17;

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: _19 = ABS_EXPR <_18>;

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: i_sum_20 = _19 + i_sum_38;

common/pixel.c:62:1: note: ==> examining pattern statement: patt_54 = SAD_EXPR <_12, _16, i_sum_38>;

common/pixel.c:62:1: note: get vectype for scalar type:  int
common/pixel.c:62:1: note: vectype: vector(4) int
common/pixel.c:62:1: note: nunits = 4
common/pixel.c:62:1: note: ==> examining statement: # DEBUG i_sum => i_sum_20

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: x_21 = x_40 + 1;

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: # DEBUG x => x_21

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: # DEBUG x => x_21

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: # DEBUG i_sum => i_sum_20

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: ivtmp_57 = ivtmp_58 - 1;

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: if (ivtmp_57 != 0)

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: vectorization factor = 16
common/pixel.c:62:1: note: === vect_analyze_data_refs_alignment ===
common/pixel.c:62:1: note: vect_compute_data_ref_alignment:
common/pixel.c:62:1: note: can't force alignment of ref: *_10
common/pixel.c:62:1: note: vect_compute_data_ref_alignment:
common/pixel.c:62:1: note: can't force alignment of ref: *_15
common/pixel.c:62:1: note: === vect_prune_runtime_alias_test_list ===
common/pixel.c:62:1: note: === vect_enhance_data_refs_alignment ===
common/pixel.c:62:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:62:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:62:1: note: vect_can_advance_ivs_p:
common/pixel.c:62:1: note: Analyze phi: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>

common/pixel.c:62:1: note: reduc phi. skip.
common/pixel.c:62:1: note: Analyze phi: x_40 = PHI <x_21(3), 0(7)>

common/pixel.c:62:1: note: Analyze phi: ivtmp_58 = PHI <ivtmp_57(3), 8(7)>

common/pixel.c:62:1: note: Vectorizing an unaligned access.
common/pixel.c:62:1: note: Vectorizing an unaligned access.
common/pixel.c:62:1: note: === vect_analyze_slp ===
common/pixel.c:62:1: note: === vect_make_slp_decision ===
common/pixel.c:62:1: note: === vect_detect_hybrid_slp ===
common/pixel.c:62:1: note: === vect_analyze_loop_operations ===
common/pixel.c:62:1: note: examining phi: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>

common/pixel.c:62:1: note: examining phi: x_40 = PHI <x_21(3), 0(7)>

common/pixel.c:62:1: note: examining phi: ivtmp_58 = PHI <ivtmp_57(3), 8(7)>

common/pixel.c:62:1: note: ==> examining statement: # DEBUG x => x_40
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: # DEBUG i_sum => i_sum_38
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: _9 = (sizetype) x_40;
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: _10 = pix1_29 + _9;
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: _12 = *_10;
common/pixel.c:62:1: note: vect_is_simple_use: operand *_10
common/pixel.c:62:1: note: not ssa-name.
common/pixel.c:62:1: note: use not simple.
common/pixel.c:62:1: note: vect_is_simple_use: operand *_10
common/pixel.c:62:1: note: not ssa-name.
common/pixel.c:62:1: note: use not simple.
common/pixel.c:62:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:62:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:62:1: note: ==> examining statement: _13 = (int) _12;
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: _15 = pix2_14 + _9;
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: _16 = *_15;
common/pixel.c:62:1: note: vect_is_simple_use: operand *_15
common/pixel.c:62:1: note: not ssa-name.
common/pixel.c:62:1: note: use not simple.
common/pixel.c:62:1: note: vect_is_simple_use: operand *_15
common/pixel.c:62:1: note: not ssa-name.
common/pixel.c:62:1: note: use not simple.
common/pixel.c:62:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:62:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:62:1: note: ==> examining statement: _17 = (int) _16;
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: _18 = _13 - _17;
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: _19 = ABS_EXPR <_18>;
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: i_sum_20 = _19 + i_sum_38;
common/pixel.c:62:1: note: ==> examining pattern statement: patt_54 = SAD_EXPR <_12, _16, i_sum_38>;
common/pixel.c:62:1: note: vect_is_simple_use: operand _12
common/pixel.c:62:1: note: def_stmt: _12 = *_10;
common/pixel.c:62:1: note: type of def: 3.
common/pixel.c:62:1: note: vect_is_simple_use: operand _16
common/pixel.c:62:1: note: def_stmt: _16 = *_15;
common/pixel.c:62:1: note: type of def: 3.
common/pixel.c:62:1: note: vect_is_simple_use: operand i_sum_38
common/pixel.c:62:1: note: def_stmt: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>
common/pixel.c:62:1: note: type of def: 5.
common/pixel.c:62:1: note: detected reduction: i_sum_20 = _19 + i_sum_38;

common/pixel.c:62:1: note: reduc op not supported by target.
vect_model_reduction_cost: inside_cost = 1, prologue_cost = 1, epilogue_cost = 5 .
common/pixel.c:62:1: note: ==> examining statement: # DEBUG i_sum => i_sum_20
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: x_21 = x_40 + 1;
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: # DEBUG x => x_21
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: # DEBUG x => x_21
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: # DEBUG i_sum => i_sum_20
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: ivtmp_57 = ivtmp_58 - 1;
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: if (ivtmp_57 != 0)
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: vectorization_factor = 16, niters = 8
common/pixel.c:62:1: note: not vectorized: iteration count too small.
common/pixel.c:62:1: note: not vectorized: iteration count smaller than vectorization factor.
common/pixel.c:62:1: note: bad operation or unsupported loop bound.
common/pixel.c:62:1: note: vectorized 0 loops in function.
x264_pixel_sad_8x8 (uint8_t * pix1, int i_stride_pix1, uint8_t * pix2, int i_stride_pix2)
{
  int y;
  int x;
  int i_sum;
  sizetype _9;
  uint8_t * _10;
  unsigned char _12;
  int _13;
  uint8_t * _15;
  unsigned char _16;
  int _17;
  int _18;
  int _19;
  unsigned int ivtmp_55;
  unsigned int ivtmp_56;
  unsigned int ivtmp_57;
  unsigned int ivtmp_58;
  sizetype pretmp_61;
  sizetype pretmp_62;

  <bb 2>:
  # DEBUG i_sum => 0
  # DEBUG y => 0
  # DEBUG y => 0
  # DEBUG i_sum => 0
  # DEBUG pix2 => pix2_8(D)
  # DEBUG pix1 => pix1_7(D)
  pretmp_61 = (sizetype) i_stride_pix1_22(D);
  pretmp_62 = (sizetype) i_stride_pix2_25(D);
  goto <bb 7>;

  <bb 3>:

  <bb 4>:
  # i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>
  # x_40 = PHI <x_21(3), 0(7)>
  # ivtmp_58 = PHI <ivtmp_57(3), 8(7)>
  # DEBUG x => x_40
  # DEBUG i_sum => i_sum_38
  _9 = (sizetype) x_40;
  _10 = pix1_29 + _9;
  _12 = *_10;
  _13 = (int) _12;
  _15 = pix2_14 + _9;
  _16 = *_15;
  _17 = (int) _16;
  _18 = _13 - _17;
  _19 = ABS_EXPR <_18>;
  i_sum_20 = _19 + i_sum_38;
  # DEBUG i_sum => i_sum_20
  x_21 = x_40 + 1;
  # DEBUG x => x_21
  # DEBUG x => x_21
  # DEBUG i_sum => i_sum_20
  ivtmp_57 = ivtmp_58 - 1;
  if (ivtmp_57 != 0)
    goto <bb 3>;
  else
    goto <bb 5>;

  <bb 5>:
  # i_sum_60 = PHI <i_sum_20(4)>
  pix1_24 = pix1_29 + pretmp_61;
  # DEBUG pix1 => pix1_24
  pix2_27 = pix2_14 + pretmp_62;
  # DEBUG pix2 => pix2_27
  y_28 = y_41 + 1;
  # DEBUG y => y_28
  # DEBUG y => y_28
  # DEBUG i_sum => i_sum_60
  # DEBUG pix2 => pix2_27
  # DEBUG pix1 => pix1_24
  ivtmp_55 = ivtmp_56 - 1;
  if (ivtmp_55 != 0)
    goto <bb 6>;
  else
    goto <bb 8>;

  <bb 6>:

  <bb 7>:
  # pix1_29 = PHI <pix1_24(6), pix1_7(D)(2)>
  # pix2_14 = PHI <pix2_27(6), pix2_8(D)(2)>
  # i_sum_39 = PHI <i_sum_60(6), 0(2)>
  # y_41 = PHI <y_28(6), 0(2)>
  # ivtmp_56 = PHI <ivtmp_55(6), 8(2)>
  # DEBUG y => y_41
  # DEBUG i_sum => i_sum_39
  # DEBUG pix2 => pix2_14
  # DEBUG pix1 => pix1_29
  # DEBUG x => 0
  # DEBUG i_sum => i_sum_39
  goto <bb 4>;

  <bb 8>:
  # i_sum_59 = PHI <i_sum_60(5)>
  return i_sum_59;

}



;; Function x264_pixel_sad_8x4 (x264_pixel_sad_8x4, funcdef_no=119, decl_uid=7550, cgraph_uid=119, symbol_order=162)


Analyzing loop at common/pixel.c:63
common/pixel.c:63:1: note: ===== analyze_loop_nest =====
common/pixel.c:63:1: note: === vect_analyze_loop_form ===
common/pixel.c:63:1: note: ===== analyze_loop_nest_1 =====
common/pixel.c:63:1: note: === vect_analyze_loop_form ===
common/pixel.c:63:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 2
  exit condition [7, + , 4294967295] != 0
  bounds on difference of bases: -7 ... -7
  result:
    # of iterations 7, bounded by 7
common/pixel.c:63:1: note: Considering outer-loop vectorization.
common/pixel.c:63:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 1
  exit condition [3, + , 4294967295] != 0
  bounds on difference of bases: -3 ... -3
  result:
    # of iterations 3, bounded by 3
common/pixel.c:63:1: note: === vect_analyze_data_refs ===
Creating dr for *_10
analyze_innermost: success.
	base_address: pix1_29
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix1_7(D)
	Access function 0: {{0B, +, pretmp_61}_1, +, 1}_2
Creating dr for *_15
analyze_innermost: success.
	base_address: pix2_14
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix2_8(D)
	Access function 0: {{0B, +, pretmp_62}_1, +, 1}_2
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:63:1: note: analyze in outer-loop: *pix1_29
common/pixel.c:63:1: note: failed: evolution of base is not affine.
common/pixel.c:63:1: note: bad data references.

Analyzing loop at common/pixel.c:63
common/pixel.c:63:1: note: ===== analyze_loop_nest =====
common/pixel.c:63:1: note: === vect_analyze_loop_form ===
common/pixel.c:63:1: note: === get_loop_niters ===
common/pixel.c:63:1: note: === vect_analyze_data_refs ===
Creating dr for *_10
analyze_innermost: success.
	base_address: pix1_29
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix1_29
	Access function 0: {0B, +, 1}_2
Creating dr for *_15
analyze_innermost: success.
	base_address: pix2_14
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix2_14
	Access function 0: {0B, +, 1}_2
common/pixel.c:63:1: note: got vectype for stmt: _12 = *_10;
vector(16) unsigned char
common/pixel.c:63:1: note: got vectype for stmt: _16 = *_15;
vector(16) unsigned char
common/pixel.c:63:1: note: === vect_analyze_scalar_cycles ===
common/pixel.c:63:1: note: Analyze phi: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>

common/pixel.c:63:1: note: Access function of PHI: {i_sum_39, +, _19}_2
common/pixel.c:63:1: note: step: _19,  init: i_sum_39
common/pixel.c:63:1: note: step unknown.
common/pixel.c:63:1: note: Analyze phi: x_40 = PHI <x_21(3), 0(7)>

common/pixel.c:63:1: note: Access function of PHI: {0, +, 1}_2
common/pixel.c:63:1: note: step: 1,  init: 0
common/pixel.c:63:1: note: Detected induction.
common/pixel.c:63:1: note: Analyze phi: ivtmp_58 = PHI <ivtmp_57(3), 8(7)>

common/pixel.c:63:1: note: Access function of PHI: {8, +, 4294967295}_2
common/pixel.c:63:1: note: step: 4294967295,  init: 8
common/pixel.c:63:1: note: Detected induction.
common/pixel.c:63:1: note: Analyze phi: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>

common/pixel.c:63:1: note: detected reduction: i_sum_20 = _19 + i_sum_38;

common/pixel.c:63:1: note: Detected reduction.
common/pixel.c:63:1: note: === vect_pattern_recog ===
common/pixel.c:63:1: note: vect_is_simple_use: operand _19
common/pixel.c:63:1: note: def_stmt: _19 = ABS_EXPR <_18>;
common/pixel.c:63:1: note: type of def: 3.
common/pixel.c:63:1: note: vect_is_simple_use: operand _19
common/pixel.c:63:1: note: def_stmt: _19 = ABS_EXPR <_18>;
common/pixel.c:63:1: note: type of def: 3.
common/pixel.c:63:1: note: vect_is_simple_use: operand _19
common/pixel.c:63:1: note: def_stmt: _19 = ABS_EXPR <_18>;
common/pixel.c:63:1: note: type of def: 3.
common/pixel.c:63:1: note: vect_is_simple_use: operand _13
common/pixel.c:63:1: note: def_stmt: _13 = (int) _12;
common/pixel.c:63:1: note: type of def: 3.
common/pixel.c:63:1: note: vect_is_simple_use: operand _12
common/pixel.c:63:1: note: def_stmt: _12 = *_10;
common/pixel.c:63:1: note: type of def: 3.
common/pixel.c:63:1: note: vect_is_simple_use: operand _17
common/pixel.c:63:1: note: def_stmt: _17 = (int) _16;
common/pixel.c:63:1: note: type of def: 3.
common/pixel.c:63:1: note: vect_is_simple_use: operand _16
common/pixel.c:63:1: note: def_stmt: _16 = *_15;
common/pixel.c:63:1: note: type of def: 3.
common/pixel.c:63:1: note: vect_recog_sad_pattern: detected: patt_54 = SAD_EXPR <_12, _16, i_sum_38>;

common/pixel.c:63:1: note: pattern recognized: patt_54 = SAD_EXPR <_12, _16, i_sum_38>;
common/pixel.c:63:1: note: === vect_analyze_data_ref_accesses ===
common/pixel.c:63:1: note: === vect_mark_stmts_to_be_vectorized ===
common/pixel.c:63:1: note: init: phi relevant? i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>
common/pixel.c:63:1: note: init: phi relevant? x_40 = PHI <x_21(3), 0(7)>
common/pixel.c:63:1: note: init: phi relevant? ivtmp_58 = PHI <ivtmp_57(3), 8(7)>
common/pixel.c:63:1: note: init: stmt relevant? # DEBUG x => x_40
common/pixel.c:63:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_38
common/pixel.c:63:1: note: init: stmt relevant? _9 = (sizetype) x_40;
common/pixel.c:63:1: note: init: stmt relevant? _10 = pix1_29 + _9;
common/pixel.c:63:1: note: init: stmt relevant? _12 = *_10;
common/pixel.c:63:1: note: init: stmt relevant? _13 = (int) _12;
common/pixel.c:63:1: note: init: stmt relevant? _15 = pix2_14 + _9;
common/pixel.c:63:1: note: init: stmt relevant? _16 = *_15;
common/pixel.c:63:1: note: init: stmt relevant? _17 = (int) _16;
common/pixel.c:63:1: note: init: stmt relevant? _18 = _13 - _17;
common/pixel.c:63:1: note: init: stmt relevant? _19 = ABS_EXPR <_18>;
common/pixel.c:63:1: note: init: stmt relevant? i_sum_20 = _19 + i_sum_38;
common/pixel.c:63:1: note: vec_stmt_relevant_p: used out of loop.
common/pixel.c:63:1: note: mark relevant 0, live 1.
common/pixel.c:63:1: note: last stmt in pattern. don't mark relevant/live.
common/pixel.c:63:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_20
common/pixel.c:63:1: note: init: stmt relevant? x_21 = x_40 + 1;
common/pixel.c:63:1: note: init: stmt relevant? # DEBUG x => x_21
common/pixel.c:63:1: note: init: stmt relevant? # DEBUG x => x_21
common/pixel.c:63:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_20
common/pixel.c:63:1: note: init: stmt relevant? ivtmp_57 = ivtmp_58 - 1;
common/pixel.c:63:1: note: init: stmt relevant? if (ivtmp_57 != 0)
common/pixel.c:63:1: note: worklist: examine stmt: patt_54 = SAD_EXPR <_12, _16, i_sum_38>;
common/pixel.c:63:1: note: vect_is_simple_use: operand _12
common/pixel.c:63:1: note: def_stmt: _12 = *_10;
common/pixel.c:63:1: note: type of def: 3.
common/pixel.c:63:1: note: mark relevant 3, live 0.
common/pixel.c:63:1: note: vect_is_simple_use: operand _16
common/pixel.c:63:1: note: def_stmt: _16 = *_15;
common/pixel.c:63:1: note: type of def: 3.
common/pixel.c:63:1: note: mark relevant 3, live 0.
common/pixel.c:63:1: note: vect_is_simple_use: operand i_sum_38
common/pixel.c:63:1: note: def_stmt: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>
common/pixel.c:63:1: note: type of def: 5.
common/pixel.c:63:1: note: mark relevant 3, live 0.
common/pixel.c:63:1: note: worklist: examine stmt: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>
common/pixel.c:63:1: note: vect_is_simple_use: operand i_sum_20
common/pixel.c:63:1: note: def_stmt: i_sum_20 = _19 + i_sum_38;
common/pixel.c:63:1: note: type of def: 5.
common/pixel.c:63:1: note: reduc-stmt defining reduc-phi in the same nest.
common/pixel.c:63:1: note: vect_is_simple_use: operand i_sum_39
common/pixel.c:63:1: note: def_stmt: i_sum_39 = PHI <i_sum_60(6), 0(2)>
common/pixel.c:63:1: note: type of def: 2.
common/pixel.c:63:1: note: def_stmt is out of loop.
common/pixel.c:63:1: note: worklist: examine stmt: _16 = *_15;
common/pixel.c:63:1: note: worklist: examine stmt: _12 = *_10;
common/pixel.c:63:1: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _12 = *_10;
  stmt_b: _16 = *_15;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _12 = *_10;
  stmt_b: _12 = *_10;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_2)
  (chrec_b = {0B, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _16 = *_15;
  stmt_b: _16 = *_15;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_2)
  (chrec_b = {0B, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/pixel.c:63:1: note: === vect_determine_vectorization_factor ===
common/pixel.c:63:1: note: ==> examining phi: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>

common/pixel.c:63:1: note: get vectype for scalar type:  int
common/pixel.c:63:1: note: vectype: vector(4) int
common/pixel.c:63:1: note: nunits = 4
common/pixel.c:63:1: note: ==> examining phi: x_40 = PHI <x_21(3), 0(7)>

common/pixel.c:63:1: note: ==> examining phi: ivtmp_58 = PHI <ivtmp_57(3), 8(7)>

common/pixel.c:63:1: note: ==> examining statement: # DEBUG x => x_40

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: # DEBUG i_sum => i_sum_38

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: _9 = (sizetype) x_40;

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: _10 = pix1_29 + _9;

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: _12 = *_10;

common/pixel.c:63:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:63:1: note: vectype: vector(16) unsigned char
common/pixel.c:63:1: note: nunits = 16
common/pixel.c:63:1: note: ==> examining statement: _13 = (int) _12;

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: _15 = pix2_14 + _9;

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: _16 = *_15;

common/pixel.c:63:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:63:1: note: vectype: vector(16) unsigned char
common/pixel.c:63:1: note: nunits = 16
common/pixel.c:63:1: note: ==> examining statement: _17 = (int) _16;

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: _18 = _13 - _17;

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: _19 = ABS_EXPR <_18>;

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: i_sum_20 = _19 + i_sum_38;

common/pixel.c:63:1: note: ==> examining pattern statement: patt_54 = SAD_EXPR <_12, _16, i_sum_38>;

common/pixel.c:63:1: note: get vectype for scalar type:  int
common/pixel.c:63:1: note: vectype: vector(4) int
common/pixel.c:63:1: note: nunits = 4
common/pixel.c:63:1: note: ==> examining statement: # DEBUG i_sum => i_sum_20

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: x_21 = x_40 + 1;

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: # DEBUG x => x_21

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: # DEBUG x => x_21

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: # DEBUG i_sum => i_sum_20

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: ivtmp_57 = ivtmp_58 - 1;

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: if (ivtmp_57 != 0)

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: vectorization factor = 16
common/pixel.c:63:1: note: === vect_analyze_data_refs_alignment ===
common/pixel.c:63:1: note: vect_compute_data_ref_alignment:
common/pixel.c:63:1: note: can't force alignment of ref: *_10
common/pixel.c:63:1: note: vect_compute_data_ref_alignment:
common/pixel.c:63:1: note: can't force alignment of ref: *_15
common/pixel.c:63:1: note: === vect_prune_runtime_alias_test_list ===
common/pixel.c:63:1: note: === vect_enhance_data_refs_alignment ===
common/pixel.c:63:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:63:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:63:1: note: vect_can_advance_ivs_p:
common/pixel.c:63:1: note: Analyze phi: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>

common/pixel.c:63:1: note: reduc phi. skip.
common/pixel.c:63:1: note: Analyze phi: x_40 = PHI <x_21(3), 0(7)>

common/pixel.c:63:1: note: Analyze phi: ivtmp_58 = PHI <ivtmp_57(3), 8(7)>

common/pixel.c:63:1: note: Vectorizing an unaligned access.
common/pixel.c:63:1: note: Vectorizing an unaligned access.
common/pixel.c:63:1: note: === vect_analyze_slp ===
common/pixel.c:63:1: note: === vect_make_slp_decision ===
common/pixel.c:63:1: note: === vect_detect_hybrid_slp ===
common/pixel.c:63:1: note: === vect_analyze_loop_operations ===
common/pixel.c:63:1: note: examining phi: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>

common/pixel.c:63:1: note: examining phi: x_40 = PHI <x_21(3), 0(7)>

common/pixel.c:63:1: note: examining phi: ivtmp_58 = PHI <ivtmp_57(3), 8(7)>

common/pixel.c:63:1: note: ==> examining statement: # DEBUG x => x_40
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: # DEBUG i_sum => i_sum_38
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: _9 = (sizetype) x_40;
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: _10 = pix1_29 + _9;
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: _12 = *_10;
common/pixel.c:63:1: note: vect_is_simple_use: operand *_10
common/pixel.c:63:1: note: not ssa-name.
common/pixel.c:63:1: note: use not simple.
common/pixel.c:63:1: note: vect_is_simple_use: operand *_10
common/pixel.c:63:1: note: not ssa-name.
common/pixel.c:63:1: note: use not simple.
common/pixel.c:63:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:63:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:63:1: note: ==> examining statement: _13 = (int) _12;
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: _15 = pix2_14 + _9;
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: _16 = *_15;
common/pixel.c:63:1: note: vect_is_simple_use: operand *_15
common/pixel.c:63:1: note: not ssa-name.
common/pixel.c:63:1: note: use not simple.
common/pixel.c:63:1: note: vect_is_simple_use: operand *_15
common/pixel.c:63:1: note: not ssa-name.
common/pixel.c:63:1: note: use not simple.
common/pixel.c:63:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:63:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:63:1: note: ==> examining statement: _17 = (int) _16;
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: _18 = _13 - _17;
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: _19 = ABS_EXPR <_18>;
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: i_sum_20 = _19 + i_sum_38;
common/pixel.c:63:1: note: ==> examining pattern statement: patt_54 = SAD_EXPR <_12, _16, i_sum_38>;
common/pixel.c:63:1: note: vect_is_simple_use: operand _12
common/pixel.c:63:1: note: def_stmt: _12 = *_10;
common/pixel.c:63:1: note: type of def: 3.
common/pixel.c:63:1: note: vect_is_simple_use: operand _16
common/pixel.c:63:1: note: def_stmt: _16 = *_15;
common/pixel.c:63:1: note: type of def: 3.
common/pixel.c:63:1: note: vect_is_simple_use: operand i_sum_38
common/pixel.c:63:1: note: def_stmt: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>
common/pixel.c:63:1: note: type of def: 5.
common/pixel.c:63:1: note: detected reduction: i_sum_20 = _19 + i_sum_38;

common/pixel.c:63:1: note: reduc op not supported by target.
vect_model_reduction_cost: inside_cost = 1, prologue_cost = 1, epilogue_cost = 5 .
common/pixel.c:63:1: note: ==> examining statement: # DEBUG i_sum => i_sum_20
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: x_21 = x_40 + 1;
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: # DEBUG x => x_21
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: # DEBUG x => x_21
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: # DEBUG i_sum => i_sum_20
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: ivtmp_57 = ivtmp_58 - 1;
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: if (ivtmp_57 != 0)
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: vectorization_factor = 16, niters = 8
common/pixel.c:63:1: note: not vectorized: iteration count too small.
common/pixel.c:63:1: note: not vectorized: iteration count smaller than vectorization factor.
common/pixel.c:63:1: note: bad operation or unsupported loop bound.
common/pixel.c:63:1: note: vectorized 0 loops in function.
x264_pixel_sad_8x4 (uint8_t * pix1, int i_stride_pix1, uint8_t * pix2, int i_stride_pix2)
{
  int y;
  int x;
  int i_sum;
  sizetype _9;
  uint8_t * _10;
  unsigned char _12;
  int _13;
  uint8_t * _15;
  unsigned char _16;
  int _17;
  int _18;
  int _19;
  unsigned int ivtmp_55;
  unsigned int ivtmp_56;
  unsigned int ivtmp_57;
  unsigned int ivtmp_58;
  sizetype pretmp_61;
  sizetype pretmp_62;

  <bb 2>:
  # DEBUG i_sum => 0
  # DEBUG y => 0
  # DEBUG y => 0
  # DEBUG i_sum => 0
  # DEBUG pix2 => pix2_8(D)
  # DEBUG pix1 => pix1_7(D)
  pretmp_61 = (sizetype) i_stride_pix1_22(D);
  pretmp_62 = (sizetype) i_stride_pix2_25(D);
  goto <bb 7>;

  <bb 3>:

  <bb 4>:
  # i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>
  # x_40 = PHI <x_21(3), 0(7)>
  # ivtmp_58 = PHI <ivtmp_57(3), 8(7)>
  # DEBUG x => x_40
  # DEBUG i_sum => i_sum_38
  _9 = (sizetype) x_40;
  _10 = pix1_29 + _9;
  _12 = *_10;
  _13 = (int) _12;
  _15 = pix2_14 + _9;
  _16 = *_15;
  _17 = (int) _16;
  _18 = _13 - _17;
  _19 = ABS_EXPR <_18>;
  i_sum_20 = _19 + i_sum_38;
  # DEBUG i_sum => i_sum_20
  x_21 = x_40 + 1;
  # DEBUG x => x_21
  # DEBUG x => x_21
  # DEBUG i_sum => i_sum_20
  ivtmp_57 = ivtmp_58 - 1;
  if (ivtmp_57 != 0)
    goto <bb 3>;
  else
    goto <bb 5>;

  <bb 5>:
  # i_sum_60 = PHI <i_sum_20(4)>
  pix1_24 = pix1_29 + pretmp_61;
  # DEBUG pix1 => pix1_24
  pix2_27 = pix2_14 + pretmp_62;
  # DEBUG pix2 => pix2_27
  y_28 = y_41 + 1;
  # DEBUG y => y_28
  # DEBUG y => y_28
  # DEBUG i_sum => i_sum_60
  # DEBUG pix2 => pix2_27
  # DEBUG pix1 => pix1_24
  ivtmp_55 = ivtmp_56 - 1;
  if (ivtmp_55 != 0)
    goto <bb 6>;
  else
    goto <bb 8>;

  <bb 6>:

  <bb 7>:
  # pix1_29 = PHI <pix1_24(6), pix1_7(D)(2)>
  # pix2_14 = PHI <pix2_27(6), pix2_8(D)(2)>
  # i_sum_39 = PHI <i_sum_60(6), 0(2)>
  # y_41 = PHI <y_28(6), 0(2)>
  # ivtmp_56 = PHI <ivtmp_55(6), 4(2)>
  # DEBUG y => y_41
  # DEBUG i_sum => i_sum_39
  # DEBUG pix2 => pix2_14
  # DEBUG pix1 => pix1_29
  # DEBUG x => 0
  # DEBUG i_sum => i_sum_39
  goto <bb 4>;

  <bb 8>:
  # i_sum_59 = PHI <i_sum_60(5)>
  return i_sum_59;

}



;; Function x264_pixel_sad_4x8 (x264_pixel_sad_4x8, funcdef_no=120, decl_uid=7565, cgraph_uid=120, symbol_order=163)


Analyzing loop at common/pixel.c:64
common/pixel.c:64:1: note: ===== analyze_loop_nest =====
common/pixel.c:64:1: note: === vect_analyze_loop_form ===
common/pixel.c:64:1: note: ===== analyze_loop_nest_1 =====
common/pixel.c:64:1: note: === vect_analyze_loop_form ===
common/pixel.c:64:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 2
  exit condition [3, + , 4294967295] != 0
  bounds on difference of bases: -3 ... -3
  result:
    # of iterations 3, bounded by 3
common/pixel.c:64:1: note: Considering outer-loop vectorization.
common/pixel.c:64:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 1
  exit condition [7, + , 4294967295] != 0
  bounds on difference of bases: -7 ... -7
  result:
    # of iterations 7, bounded by 7
common/pixel.c:64:1: note: === vect_analyze_data_refs ===
Creating dr for *_10
analyze_innermost: success.
	base_address: pix1_29
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix1_7(D)
	Access function 0: {{0B, +, pretmp_61}_1, +, 1}_2
Creating dr for *_15
analyze_innermost: success.
	base_address: pix2_14
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix2_8(D)
	Access function 0: {{0B, +, pretmp_62}_1, +, 1}_2
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:64:1: note: analyze in outer-loop: *pix1_29
common/pixel.c:64:1: note: failed: evolution of base is not affine.
common/pixel.c:64:1: note: bad data references.

Analyzing loop at common/pixel.c:64
common/pixel.c:64:1: note: ===== analyze_loop_nest =====
common/pixel.c:64:1: note: === vect_analyze_loop_form ===
common/pixel.c:64:1: note: === get_loop_niters ===
common/pixel.c:64:1: note: === vect_analyze_data_refs ===
Creating dr for *_10
analyze_innermost: success.
	base_address: pix1_29
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix1_29
	Access function 0: {0B, +, 1}_2
Creating dr for *_15
analyze_innermost: success.
	base_address: pix2_14
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix2_14
	Access function 0: {0B, +, 1}_2
common/pixel.c:64:1: note: got vectype for stmt: _12 = *_10;
vector(16) unsigned char
common/pixel.c:64:1: note: got vectype for stmt: _16 = *_15;
vector(16) unsigned char
common/pixel.c:64:1: note: === vect_analyze_scalar_cycles ===
common/pixel.c:64:1: note: Analyze phi: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>

common/pixel.c:64:1: note: Access function of PHI: {i_sum_39, +, _19}_2
common/pixel.c:64:1: note: step: _19,  init: i_sum_39
common/pixel.c:64:1: note: step unknown.
common/pixel.c:64:1: note: Analyze phi: x_40 = PHI <x_21(3), 0(7)>

common/pixel.c:64:1: note: Access function of PHI: {0, +, 1}_2
common/pixel.c:64:1: note: step: 1,  init: 0
common/pixel.c:64:1: note: Detected induction.
common/pixel.c:64:1: note: Analyze phi: ivtmp_58 = PHI <ivtmp_57(3), 4(7)>

common/pixel.c:64:1: note: Access function of PHI: {4, +, 4294967295}_2
common/pixel.c:64:1: note: step: 4294967295,  init: 4
common/pixel.c:64:1: note: Detected induction.
common/pixel.c:64:1: note: Analyze phi: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>

common/pixel.c:64:1: note: detected reduction: i_sum_20 = _19 + i_sum_38;

common/pixel.c:64:1: note: Detected reduction.
common/pixel.c:64:1: note: === vect_pattern_recog ===
common/pixel.c:64:1: note: vect_is_simple_use: operand _19
common/pixel.c:64:1: note: def_stmt: _19 = ABS_EXPR <_18>;
common/pixel.c:64:1: note: type of def: 3.
common/pixel.c:64:1: note: vect_is_simple_use: operand _19
common/pixel.c:64:1: note: def_stmt: _19 = ABS_EXPR <_18>;
common/pixel.c:64:1: note: type of def: 3.
common/pixel.c:64:1: note: vect_is_simple_use: operand _19
common/pixel.c:64:1: note: def_stmt: _19 = ABS_EXPR <_18>;
common/pixel.c:64:1: note: type of def: 3.
common/pixel.c:64:1: note: vect_is_simple_use: operand _13
common/pixel.c:64:1: note: def_stmt: _13 = (int) _12;
common/pixel.c:64:1: note: type of def: 3.
common/pixel.c:64:1: note: vect_is_simple_use: operand _12
common/pixel.c:64:1: note: def_stmt: _12 = *_10;
common/pixel.c:64:1: note: type of def: 3.
common/pixel.c:64:1: note: vect_is_simple_use: operand _17
common/pixel.c:64:1: note: def_stmt: _17 = (int) _16;
common/pixel.c:64:1: note: type of def: 3.
common/pixel.c:64:1: note: vect_is_simple_use: operand _16
common/pixel.c:64:1: note: def_stmt: _16 = *_15;
common/pixel.c:64:1: note: type of def: 3.
common/pixel.c:64:1: note: vect_recog_sad_pattern: detected: patt_54 = SAD_EXPR <_12, _16, i_sum_38>;

common/pixel.c:64:1: note: pattern recognized: patt_54 = SAD_EXPR <_12, _16, i_sum_38>;
common/pixel.c:64:1: note: === vect_analyze_data_ref_accesses ===
common/pixel.c:64:1: note: === vect_mark_stmts_to_be_vectorized ===
common/pixel.c:64:1: note: init: phi relevant? i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>
common/pixel.c:64:1: note: init: phi relevant? x_40 = PHI <x_21(3), 0(7)>
common/pixel.c:64:1: note: init: phi relevant? ivtmp_58 = PHI <ivtmp_57(3), 4(7)>
common/pixel.c:64:1: note: init: stmt relevant? # DEBUG x => x_40
common/pixel.c:64:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_38
common/pixel.c:64:1: note: init: stmt relevant? _9 = (sizetype) x_40;
common/pixel.c:64:1: note: init: stmt relevant? _10 = pix1_29 + _9;
common/pixel.c:64:1: note: init: stmt relevant? _12 = *_10;
common/pixel.c:64:1: note: init: stmt relevant? _13 = (int) _12;
common/pixel.c:64:1: note: init: stmt relevant? _15 = pix2_14 + _9;
common/pixel.c:64:1: note: init: stmt relevant? _16 = *_15;
common/pixel.c:64:1: note: init: stmt relevant? _17 = (int) _16;
common/pixel.c:64:1: note: init: stmt relevant? _18 = _13 - _17;
common/pixel.c:64:1: note: init: stmt relevant? _19 = ABS_EXPR <_18>;
common/pixel.c:64:1: note: init: stmt relevant? i_sum_20 = _19 + i_sum_38;
common/pixel.c:64:1: note: vec_stmt_relevant_p: used out of loop.
common/pixel.c:64:1: note: mark relevant 0, live 1.
common/pixel.c:64:1: note: last stmt in pattern. don't mark relevant/live.
common/pixel.c:64:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_20
common/pixel.c:64:1: note: init: stmt relevant? x_21 = x_40 + 1;
common/pixel.c:64:1: note: init: stmt relevant? # DEBUG x => x_21
common/pixel.c:64:1: note: init: stmt relevant? # DEBUG x => x_21
common/pixel.c:64:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_20
common/pixel.c:64:1: note: init: stmt relevant? ivtmp_57 = ivtmp_58 - 1;
common/pixel.c:64:1: note: init: stmt relevant? if (ivtmp_57 != 0)
common/pixel.c:64:1: note: worklist: examine stmt: patt_54 = SAD_EXPR <_12, _16, i_sum_38>;
common/pixel.c:64:1: note: vect_is_simple_use: operand _12
common/pixel.c:64:1: note: def_stmt: _12 = *_10;
common/pixel.c:64:1: note: type of def: 3.
common/pixel.c:64:1: note: mark relevant 3, live 0.
common/pixel.c:64:1: note: vect_is_simple_use: operand _16
common/pixel.c:64:1: note: def_stmt: _16 = *_15;
common/pixel.c:64:1: note: type of def: 3.
common/pixel.c:64:1: note: mark relevant 3, live 0.
common/pixel.c:64:1: note: vect_is_simple_use: operand i_sum_38
common/pixel.c:64:1: note: def_stmt: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>
common/pixel.c:64:1: note: type of def: 5.
common/pixel.c:64:1: note: mark relevant 3, live 0.
common/pixel.c:64:1: note: worklist: examine stmt: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>
common/pixel.c:64:1: note: vect_is_simple_use: operand i_sum_20
common/pixel.c:64:1: note: def_stmt: i_sum_20 = _19 + i_sum_38;
common/pixel.c:64:1: note: type of def: 5.
common/pixel.c:64:1: note: reduc-stmt defining reduc-phi in the same nest.
common/pixel.c:64:1: note: vect_is_simple_use: operand i_sum_39
common/pixel.c:64:1: note: def_stmt: i_sum_39 = PHI <i_sum_60(6), 0(2)>
common/pixel.c:64:1: note: type of def: 2.
common/pixel.c:64:1: note: def_stmt is out of loop.
common/pixel.c:64:1: note: worklist: examine stmt: _16 = *_15;
common/pixel.c:64:1: note: worklist: examine stmt: _12 = *_10;
common/pixel.c:64:1: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _12 = *_10;
  stmt_b: _16 = *_15;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _12 = *_10;
  stmt_b: _12 = *_10;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_2)
  (chrec_b = {0B, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _16 = *_15;
  stmt_b: _16 = *_15;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_2)
  (chrec_b = {0B, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/pixel.c:64:1: note: === vect_determine_vectorization_factor ===
common/pixel.c:64:1: note: ==> examining phi: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>

common/pixel.c:64:1: note: get vectype for scalar type:  int
common/pixel.c:64:1: note: vectype: vector(4) int
common/pixel.c:64:1: note: nunits = 4
common/pixel.c:64:1: note: ==> examining phi: x_40 = PHI <x_21(3), 0(7)>

common/pixel.c:64:1: note: ==> examining phi: ivtmp_58 = PHI <ivtmp_57(3), 4(7)>

common/pixel.c:64:1: note: ==> examining statement: # DEBUG x => x_40

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: # DEBUG i_sum => i_sum_38

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: _9 = (sizetype) x_40;

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: _10 = pix1_29 + _9;

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: _12 = *_10;

common/pixel.c:64:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:64:1: note: vectype: vector(16) unsigned char
common/pixel.c:64:1: note: nunits = 16
common/pixel.c:64:1: note: ==> examining statement: _13 = (int) _12;

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: _15 = pix2_14 + _9;

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: _16 = *_15;

common/pixel.c:64:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:64:1: note: vectype: vector(16) unsigned char
common/pixel.c:64:1: note: nunits = 16
common/pixel.c:64:1: note: ==> examining statement: _17 = (int) _16;

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: _18 = _13 - _17;

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: _19 = ABS_EXPR <_18>;

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: i_sum_20 = _19 + i_sum_38;

common/pixel.c:64:1: note: ==> examining pattern statement: patt_54 = SAD_EXPR <_12, _16, i_sum_38>;

common/pixel.c:64:1: note: get vectype for scalar type:  int
common/pixel.c:64:1: note: vectype: vector(4) int
common/pixel.c:64:1: note: nunits = 4
common/pixel.c:64:1: note: ==> examining statement: # DEBUG i_sum => i_sum_20

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: x_21 = x_40 + 1;

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: # DEBUG x => x_21

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: # DEBUG x => x_21

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: # DEBUG i_sum => i_sum_20

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: ivtmp_57 = ivtmp_58 - 1;

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: if (ivtmp_57 != 0)

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: vectorization factor = 16
common/pixel.c:64:1: note: === vect_analyze_data_refs_alignment ===
common/pixel.c:64:1: note: vect_compute_data_ref_alignment:
common/pixel.c:64:1: note: can't force alignment of ref: *_10
common/pixel.c:64:1: note: vect_compute_data_ref_alignment:
common/pixel.c:64:1: note: can't force alignment of ref: *_15
common/pixel.c:64:1: note: === vect_prune_runtime_alias_test_list ===
common/pixel.c:64:1: note: === vect_enhance_data_refs_alignment ===
common/pixel.c:64:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:64:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:64:1: note: vect_can_advance_ivs_p:
common/pixel.c:64:1: note: Analyze phi: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>

common/pixel.c:64:1: note: reduc phi. skip.
common/pixel.c:64:1: note: Analyze phi: x_40 = PHI <x_21(3), 0(7)>

common/pixel.c:64:1: note: Analyze phi: ivtmp_58 = PHI <ivtmp_57(3), 4(7)>

common/pixel.c:64:1: note: Vectorizing an unaligned access.
common/pixel.c:64:1: note: Vectorizing an unaligned access.
common/pixel.c:64:1: note: === vect_analyze_slp ===
common/pixel.c:64:1: note: === vect_make_slp_decision ===
common/pixel.c:64:1: note: === vect_detect_hybrid_slp ===
common/pixel.c:64:1: note: === vect_analyze_loop_operations ===
common/pixel.c:64:1: note: examining phi: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>

common/pixel.c:64:1: note: examining phi: x_40 = PHI <x_21(3), 0(7)>

common/pixel.c:64:1: note: examining phi: ivtmp_58 = PHI <ivtmp_57(3), 4(7)>

common/pixel.c:64:1: note: ==> examining statement: # DEBUG x => x_40
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: # DEBUG i_sum => i_sum_38
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: _9 = (sizetype) x_40;
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: _10 = pix1_29 + _9;
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: _12 = *_10;
common/pixel.c:64:1: note: vect_is_simple_use: operand *_10
common/pixel.c:64:1: note: not ssa-name.
common/pixel.c:64:1: note: use not simple.
common/pixel.c:64:1: note: vect_is_simple_use: operand *_10
common/pixel.c:64:1: note: not ssa-name.
common/pixel.c:64:1: note: use not simple.
common/pixel.c:64:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:64:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:64:1: note: ==> examining statement: _13 = (int) _12;
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: _15 = pix2_14 + _9;
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: _16 = *_15;
common/pixel.c:64:1: note: vect_is_simple_use: operand *_15
common/pixel.c:64:1: note: not ssa-name.
common/pixel.c:64:1: note: use not simple.
common/pixel.c:64:1: note: vect_is_simple_use: operand *_15
common/pixel.c:64:1: note: not ssa-name.
common/pixel.c:64:1: note: use not simple.
common/pixel.c:64:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:64:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:64:1: note: ==> examining statement: _17 = (int) _16;
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: _18 = _13 - _17;
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: _19 = ABS_EXPR <_18>;
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: i_sum_20 = _19 + i_sum_38;
common/pixel.c:64:1: note: ==> examining pattern statement: patt_54 = SAD_EXPR <_12, _16, i_sum_38>;
common/pixel.c:64:1: note: vect_is_simple_use: operand _12
common/pixel.c:64:1: note: def_stmt: _12 = *_10;
common/pixel.c:64:1: note: type of def: 3.
common/pixel.c:64:1: note: vect_is_simple_use: operand _16
common/pixel.c:64:1: note: def_stmt: _16 = *_15;
common/pixel.c:64:1: note: type of def: 3.
common/pixel.c:64:1: note: vect_is_simple_use: operand i_sum_38
common/pixel.c:64:1: note: def_stmt: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>
common/pixel.c:64:1: note: type of def: 5.
common/pixel.c:64:1: note: detected reduction: i_sum_20 = _19 + i_sum_38;

common/pixel.c:64:1: note: reduc op not supported by target.
vect_model_reduction_cost: inside_cost = 1, prologue_cost = 1, epilogue_cost = 5 .
common/pixel.c:64:1: note: ==> examining statement: # DEBUG i_sum => i_sum_20
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: x_21 = x_40 + 1;
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: # DEBUG x => x_21
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: # DEBUG x => x_21
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: # DEBUG i_sum => i_sum_20
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: ivtmp_57 = ivtmp_58 - 1;
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: if (ivtmp_57 != 0)
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: vectorization_factor = 16, niters = 4
common/pixel.c:64:1: note: not vectorized: iteration count too small.
common/pixel.c:64:1: note: not vectorized: iteration count smaller than vectorization factor.
common/pixel.c:64:1: note: bad operation or unsupported loop bound.
common/pixel.c:64:1: note: vectorized 0 loops in function.
x264_pixel_sad_4x8 (uint8_t * pix1, int i_stride_pix1, uint8_t * pix2, int i_stride_pix2)
{
  int y;
  int x;
  int i_sum;
  sizetype _9;
  uint8_t * _10;
  unsigned char _12;
  int _13;
  uint8_t * _15;
  unsigned char _16;
  int _17;
  int _18;
  int _19;
  unsigned int ivtmp_55;
  unsigned int ivtmp_56;
  unsigned int ivtmp_57;
  unsigned int ivtmp_58;
  sizetype pretmp_61;
  sizetype pretmp_62;

  <bb 2>:
  # DEBUG i_sum => 0
  # DEBUG y => 0
  # DEBUG y => 0
  # DEBUG i_sum => 0
  # DEBUG pix2 => pix2_8(D)
  # DEBUG pix1 => pix1_7(D)
  pretmp_61 = (sizetype) i_stride_pix1_22(D);
  pretmp_62 = (sizetype) i_stride_pix2_25(D);
  goto <bb 7>;

  <bb 3>:

  <bb 4>:
  # i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>
  # x_40 = PHI <x_21(3), 0(7)>
  # ivtmp_58 = PHI <ivtmp_57(3), 4(7)>
  # DEBUG x => x_40
  # DEBUG i_sum => i_sum_38
  _9 = (sizetype) x_40;
  _10 = pix1_29 + _9;
  _12 = *_10;
  _13 = (int) _12;
  _15 = pix2_14 + _9;
  _16 = *_15;
  _17 = (int) _16;
  _18 = _13 - _17;
  _19 = ABS_EXPR <_18>;
  i_sum_20 = _19 + i_sum_38;
  # DEBUG i_sum => i_sum_20
  x_21 = x_40 + 1;
  # DEBUG x => x_21
  # DEBUG x => x_21
  # DEBUG i_sum => i_sum_20
  ivtmp_57 = ivtmp_58 - 1;
  if (ivtmp_57 != 0)
    goto <bb 3>;
  else
    goto <bb 5>;

  <bb 5>:
  # i_sum_60 = PHI <i_sum_20(4)>
  pix1_24 = pix1_29 + pretmp_61;
  # DEBUG pix1 => pix1_24
  pix2_27 = pix2_14 + pretmp_62;
  # DEBUG pix2 => pix2_27
  y_28 = y_41 + 1;
  # DEBUG y => y_28
  # DEBUG y => y_28
  # DEBUG i_sum => i_sum_60
  # DEBUG pix2 => pix2_27
  # DEBUG pix1 => pix1_24
  ivtmp_55 = ivtmp_56 - 1;
  if (ivtmp_55 != 0)
    goto <bb 6>;
  else
    goto <bb 8>;

  <bb 6>:

  <bb 7>:
  # pix1_29 = PHI <pix1_24(6), pix1_7(D)(2)>
  # pix2_14 = PHI <pix2_27(6), pix2_8(D)(2)>
  # i_sum_39 = PHI <i_sum_60(6), 0(2)>
  # y_41 = PHI <y_28(6), 0(2)>
  # ivtmp_56 = PHI <ivtmp_55(6), 8(2)>
  # DEBUG y => y_41
  # DEBUG i_sum => i_sum_39
  # DEBUG pix2 => pix2_14
  # DEBUG pix1 => pix1_29
  # DEBUG x => 0
  # DEBUG i_sum => i_sum_39
  goto <bb 4>;

  <bb 8>:
  # i_sum_59 = PHI <i_sum_60(5)>
  return i_sum_59;

}



;; Function x264_pixel_sad_4x4 (x264_pixel_sad_4x4, funcdef_no=121, decl_uid=7580, cgraph_uid=121, symbol_order=164)


Analyzing loop at common/pixel.c:65
common/pixel.c:65:1: note: ===== analyze_loop_nest =====
common/pixel.c:65:1: note: === vect_analyze_loop_form ===
common/pixel.c:65:1: note: ===== analyze_loop_nest_1 =====
common/pixel.c:65:1: note: === vect_analyze_loop_form ===
common/pixel.c:65:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 2
  exit condition [3, + , 4294967295] != 0
  bounds on difference of bases: -3 ... -3
  result:
    # of iterations 3, bounded by 3
common/pixel.c:65:1: note: Considering outer-loop vectorization.
common/pixel.c:65:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 1
  exit condition [3, + , 4294967295] != 0
  bounds on difference of bases: -3 ... -3
  result:
    # of iterations 3, bounded by 3
common/pixel.c:65:1: note: === vect_analyze_data_refs ===
Creating dr for *_10
analyze_innermost: success.
	base_address: pix1_29
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix1_7(D)
	Access function 0: {{0B, +, pretmp_61}_1, +, 1}_2
Creating dr for *_15
analyze_innermost: success.
	base_address: pix2_14
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix2_8(D)
	Access function 0: {{0B, +, pretmp_62}_1, +, 1}_2
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:65:1: note: analyze in outer-loop: *pix1_29
common/pixel.c:65:1: note: failed: evolution of base is not affine.
common/pixel.c:65:1: note: bad data references.

Analyzing loop at common/pixel.c:65
common/pixel.c:65:1: note: ===== analyze_loop_nest =====
common/pixel.c:65:1: note: === vect_analyze_loop_form ===
common/pixel.c:65:1: note: === get_loop_niters ===
common/pixel.c:65:1: note: === vect_analyze_data_refs ===
Creating dr for *_10
analyze_innermost: success.
	base_address: pix1_29
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix1_29
	Access function 0: {0B, +, 1}_2
Creating dr for *_15
analyze_innermost: success.
	base_address: pix2_14
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix2_14
	Access function 0: {0B, +, 1}_2
common/pixel.c:65:1: note: got vectype for stmt: _12 = *_10;
vector(16) unsigned char
common/pixel.c:65:1: note: got vectype for stmt: _16 = *_15;
vector(16) unsigned char
common/pixel.c:65:1: note: === vect_analyze_scalar_cycles ===
common/pixel.c:65:1: note: Analyze phi: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>

common/pixel.c:65:1: note: Access function of PHI: {i_sum_39, +, _19}_2
common/pixel.c:65:1: note: step: _19,  init: i_sum_39
common/pixel.c:65:1: note: step unknown.
common/pixel.c:65:1: note: Analyze phi: x_40 = PHI <x_21(3), 0(7)>

common/pixel.c:65:1: note: Access function of PHI: {0, +, 1}_2
common/pixel.c:65:1: note: step: 1,  init: 0
common/pixel.c:65:1: note: Detected induction.
common/pixel.c:65:1: note: Analyze phi: ivtmp_58 = PHI <ivtmp_57(3), 4(7)>

common/pixel.c:65:1: note: Access function of PHI: {4, +, 4294967295}_2
common/pixel.c:65:1: note: step: 4294967295,  init: 4
common/pixel.c:65:1: note: Detected induction.
common/pixel.c:65:1: note: Analyze phi: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>

common/pixel.c:65:1: note: detected reduction: i_sum_20 = _19 + i_sum_38;

common/pixel.c:65:1: note: Detected reduction.
common/pixel.c:65:1: note: === vect_pattern_recog ===
common/pixel.c:65:1: note: vect_is_simple_use: operand _19
common/pixel.c:65:1: note: def_stmt: _19 = ABS_EXPR <_18>;
common/pixel.c:65:1: note: type of def: 3.
common/pixel.c:65:1: note: vect_is_simple_use: operand _19
common/pixel.c:65:1: note: def_stmt: _19 = ABS_EXPR <_18>;
common/pixel.c:65:1: note: type of def: 3.
common/pixel.c:65:1: note: vect_is_simple_use: operand _19
common/pixel.c:65:1: note: def_stmt: _19 = ABS_EXPR <_18>;
common/pixel.c:65:1: note: type of def: 3.
common/pixel.c:65:1: note: vect_is_simple_use: operand _13
common/pixel.c:65:1: note: def_stmt: _13 = (int) _12;
common/pixel.c:65:1: note: type of def: 3.
common/pixel.c:65:1: note: vect_is_simple_use: operand _12
common/pixel.c:65:1: note: def_stmt: _12 = *_10;
common/pixel.c:65:1: note: type of def: 3.
common/pixel.c:65:1: note: vect_is_simple_use: operand _17
common/pixel.c:65:1: note: def_stmt: _17 = (int) _16;
common/pixel.c:65:1: note: type of def: 3.
common/pixel.c:65:1: note: vect_is_simple_use: operand _16
common/pixel.c:65:1: note: def_stmt: _16 = *_15;
common/pixel.c:65:1: note: type of def: 3.
common/pixel.c:65:1: note: vect_recog_sad_pattern: detected: patt_54 = SAD_EXPR <_12, _16, i_sum_38>;

common/pixel.c:65:1: note: pattern recognized: patt_54 = SAD_EXPR <_12, _16, i_sum_38>;
common/pixel.c:65:1: note: === vect_analyze_data_ref_accesses ===
common/pixel.c:65:1: note: === vect_mark_stmts_to_be_vectorized ===
common/pixel.c:65:1: note: init: phi relevant? i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>
common/pixel.c:65:1: note: init: phi relevant? x_40 = PHI <x_21(3), 0(7)>
common/pixel.c:65:1: note: init: phi relevant? ivtmp_58 = PHI <ivtmp_57(3), 4(7)>
common/pixel.c:65:1: note: init: stmt relevant? # DEBUG x => x_40
common/pixel.c:65:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_38
common/pixel.c:65:1: note: init: stmt relevant? _9 = (sizetype) x_40;
common/pixel.c:65:1: note: init: stmt relevant? _10 = pix1_29 + _9;
common/pixel.c:65:1: note: init: stmt relevant? _12 = *_10;
common/pixel.c:65:1: note: init: stmt relevant? _13 = (int) _12;
common/pixel.c:65:1: note: init: stmt relevant? _15 = pix2_14 + _9;
common/pixel.c:65:1: note: init: stmt relevant? _16 = *_15;
common/pixel.c:65:1: note: init: stmt relevant? _17 = (int) _16;
common/pixel.c:65:1: note: init: stmt relevant? _18 = _13 - _17;
common/pixel.c:65:1: note: init: stmt relevant? _19 = ABS_EXPR <_18>;
common/pixel.c:65:1: note: init: stmt relevant? i_sum_20 = _19 + i_sum_38;
common/pixel.c:65:1: note: vec_stmt_relevant_p: used out of loop.
common/pixel.c:65:1: note: mark relevant 0, live 1.
common/pixel.c:65:1: note: last stmt in pattern. don't mark relevant/live.
common/pixel.c:65:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_20
common/pixel.c:65:1: note: init: stmt relevant? x_21 = x_40 + 1;
common/pixel.c:65:1: note: init: stmt relevant? # DEBUG x => x_21
common/pixel.c:65:1: note: init: stmt relevant? # DEBUG x => x_21
common/pixel.c:65:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_20
common/pixel.c:65:1: note: init: stmt relevant? ivtmp_57 = ivtmp_58 - 1;
common/pixel.c:65:1: note: init: stmt relevant? if (ivtmp_57 != 0)
common/pixel.c:65:1: note: worklist: examine stmt: patt_54 = SAD_EXPR <_12, _16, i_sum_38>;
common/pixel.c:65:1: note: vect_is_simple_use: operand _12
common/pixel.c:65:1: note: def_stmt: _12 = *_10;
common/pixel.c:65:1: note: type of def: 3.
common/pixel.c:65:1: note: mark relevant 3, live 0.
common/pixel.c:65:1: note: vect_is_simple_use: operand _16
common/pixel.c:65:1: note: def_stmt: _16 = *_15;
common/pixel.c:65:1: note: type of def: 3.
common/pixel.c:65:1: note: mark relevant 3, live 0.
common/pixel.c:65:1: note: vect_is_simple_use: operand i_sum_38
common/pixel.c:65:1: note: def_stmt: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>
common/pixel.c:65:1: note: type of def: 5.
common/pixel.c:65:1: note: mark relevant 3, live 0.
common/pixel.c:65:1: note: worklist: examine stmt: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>
common/pixel.c:65:1: note: vect_is_simple_use: operand i_sum_20
common/pixel.c:65:1: note: def_stmt: i_sum_20 = _19 + i_sum_38;
common/pixel.c:65:1: note: type of def: 5.
common/pixel.c:65:1: note: reduc-stmt defining reduc-phi in the same nest.
common/pixel.c:65:1: note: vect_is_simple_use: operand i_sum_39
common/pixel.c:65:1: note: def_stmt: i_sum_39 = PHI <i_sum_60(6), 0(2)>
common/pixel.c:65:1: note: type of def: 2.
common/pixel.c:65:1: note: def_stmt is out of loop.
common/pixel.c:65:1: note: worklist: examine stmt: _16 = *_15;
common/pixel.c:65:1: note: worklist: examine stmt: _12 = *_10;
common/pixel.c:65:1: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _12 = *_10;
  stmt_b: _16 = *_15;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _12 = *_10;
  stmt_b: _12 = *_10;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_2)
  (chrec_b = {0B, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _16 = *_15;
  stmt_b: _16 = *_15;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_2)
  (chrec_b = {0B, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/pixel.c:65:1: note: === vect_determine_vectorization_factor ===
common/pixel.c:65:1: note: ==> examining phi: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>

common/pixel.c:65:1: note: get vectype for scalar type:  int
common/pixel.c:65:1: note: vectype: vector(4) int
common/pixel.c:65:1: note: nunits = 4
common/pixel.c:65:1: note: ==> examining phi: x_40 = PHI <x_21(3), 0(7)>

common/pixel.c:65:1: note: ==> examining phi: ivtmp_58 = PHI <ivtmp_57(3), 4(7)>

common/pixel.c:65:1: note: ==> examining statement: # DEBUG x => x_40

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: # DEBUG i_sum => i_sum_38

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: _9 = (sizetype) x_40;

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: _10 = pix1_29 + _9;

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: _12 = *_10;

common/pixel.c:65:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:65:1: note: vectype: vector(16) unsigned char
common/pixel.c:65:1: note: nunits = 16
common/pixel.c:65:1: note: ==> examining statement: _13 = (int) _12;

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: _15 = pix2_14 + _9;

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: _16 = *_15;

common/pixel.c:65:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:65:1: note: vectype: vector(16) unsigned char
common/pixel.c:65:1: note: nunits = 16
common/pixel.c:65:1: note: ==> examining statement: _17 = (int) _16;

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: _18 = _13 - _17;

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: _19 = ABS_EXPR <_18>;

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: i_sum_20 = _19 + i_sum_38;

common/pixel.c:65:1: note: ==> examining pattern statement: patt_54 = SAD_EXPR <_12, _16, i_sum_38>;

common/pixel.c:65:1: note: get vectype for scalar type:  int
common/pixel.c:65:1: note: vectype: vector(4) int
common/pixel.c:65:1: note: nunits = 4
common/pixel.c:65:1: note: ==> examining statement: # DEBUG i_sum => i_sum_20

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: x_21 = x_40 + 1;

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: # DEBUG x => x_21

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: # DEBUG x => x_21

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: # DEBUG i_sum => i_sum_20

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: ivtmp_57 = ivtmp_58 - 1;

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: if (ivtmp_57 != 0)

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: vectorization factor = 16
common/pixel.c:65:1: note: === vect_analyze_data_refs_alignment ===
common/pixel.c:65:1: note: vect_compute_data_ref_alignment:
common/pixel.c:65:1: note: can't force alignment of ref: *_10
common/pixel.c:65:1: note: vect_compute_data_ref_alignment:
common/pixel.c:65:1: note: can't force alignment of ref: *_15
common/pixel.c:65:1: note: === vect_prune_runtime_alias_test_list ===
common/pixel.c:65:1: note: === vect_enhance_data_refs_alignment ===
common/pixel.c:65:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:65:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:65:1: note: vect_can_advance_ivs_p:
common/pixel.c:65:1: note: Analyze phi: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>

common/pixel.c:65:1: note: reduc phi. skip.
common/pixel.c:65:1: note: Analyze phi: x_40 = PHI <x_21(3), 0(7)>

common/pixel.c:65:1: note: Analyze phi: ivtmp_58 = PHI <ivtmp_57(3), 4(7)>

common/pixel.c:65:1: note: Vectorizing an unaligned access.
common/pixel.c:65:1: note: Vectorizing an unaligned access.
common/pixel.c:65:1: note: === vect_analyze_slp ===
common/pixel.c:65:1: note: === vect_make_slp_decision ===
common/pixel.c:65:1: note: === vect_detect_hybrid_slp ===
common/pixel.c:65:1: note: === vect_analyze_loop_operations ===
common/pixel.c:65:1: note: examining phi: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>

common/pixel.c:65:1: note: examining phi: x_40 = PHI <x_21(3), 0(7)>

common/pixel.c:65:1: note: examining phi: ivtmp_58 = PHI <ivtmp_57(3), 4(7)>

common/pixel.c:65:1: note: ==> examining statement: # DEBUG x => x_40
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: # DEBUG i_sum => i_sum_38
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: _9 = (sizetype) x_40;
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: _10 = pix1_29 + _9;
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: _12 = *_10;
common/pixel.c:65:1: note: vect_is_simple_use: operand *_10
common/pixel.c:65:1: note: not ssa-name.
common/pixel.c:65:1: note: use not simple.
common/pixel.c:65:1: note: vect_is_simple_use: operand *_10
common/pixel.c:65:1: note: not ssa-name.
common/pixel.c:65:1: note: use not simple.
common/pixel.c:65:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:65:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:65:1: note: ==> examining statement: _13 = (int) _12;
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: _15 = pix2_14 + _9;
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: _16 = *_15;
common/pixel.c:65:1: note: vect_is_simple_use: operand *_15
common/pixel.c:65:1: note: not ssa-name.
common/pixel.c:65:1: note: use not simple.
common/pixel.c:65:1: note: vect_is_simple_use: operand *_15
common/pixel.c:65:1: note: not ssa-name.
common/pixel.c:65:1: note: use not simple.
common/pixel.c:65:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:65:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:65:1: note: ==> examining statement: _17 = (int) _16;
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: _18 = _13 - _17;
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: _19 = ABS_EXPR <_18>;
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: i_sum_20 = _19 + i_sum_38;
common/pixel.c:65:1: note: ==> examining pattern statement: patt_54 = SAD_EXPR <_12, _16, i_sum_38>;
common/pixel.c:65:1: note: vect_is_simple_use: operand _12
common/pixel.c:65:1: note: def_stmt: _12 = *_10;
common/pixel.c:65:1: note: type of def: 3.
common/pixel.c:65:1: note: vect_is_simple_use: operand _16
common/pixel.c:65:1: note: def_stmt: _16 = *_15;
common/pixel.c:65:1: note: type of def: 3.
common/pixel.c:65:1: note: vect_is_simple_use: operand i_sum_38
common/pixel.c:65:1: note: def_stmt: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>
common/pixel.c:65:1: note: type of def: 5.
common/pixel.c:65:1: note: detected reduction: i_sum_20 = _19 + i_sum_38;

common/pixel.c:65:1: note: reduc op not supported by target.
vect_model_reduction_cost: inside_cost = 1, prologue_cost = 1, epilogue_cost = 5 .
common/pixel.c:65:1: note: ==> examining statement: # DEBUG i_sum => i_sum_20
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: x_21 = x_40 + 1;
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: # DEBUG x => x_21
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: # DEBUG x => x_21
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: # DEBUG i_sum => i_sum_20
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: ivtmp_57 = ivtmp_58 - 1;
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: if (ivtmp_57 != 0)
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: vectorization_factor = 16, niters = 4
common/pixel.c:65:1: note: not vectorized: iteration count too small.
common/pixel.c:65:1: note: not vectorized: iteration count smaller than vectorization factor.
common/pixel.c:65:1: note: bad operation or unsupported loop bound.
common/pixel.c:65:1: note: vectorized 0 loops in function.
x264_pixel_sad_4x4 (uint8_t * pix1, int i_stride_pix1, uint8_t * pix2, int i_stride_pix2)
{
  int y;
  int x;
  int i_sum;
  sizetype _9;
  uint8_t * _10;
  unsigned char _12;
  int _13;
  uint8_t * _15;
  unsigned char _16;
  int _17;
  int _18;
  int _19;
  unsigned int ivtmp_55;
  unsigned int ivtmp_56;
  unsigned int ivtmp_57;
  unsigned int ivtmp_58;
  sizetype pretmp_61;
  sizetype pretmp_62;

  <bb 2>:
  # DEBUG i_sum => 0
  # DEBUG y => 0
  # DEBUG y => 0
  # DEBUG i_sum => 0
  # DEBUG pix2 => pix2_8(D)
  # DEBUG pix1 => pix1_7(D)
  pretmp_61 = (sizetype) i_stride_pix1_22(D);
  pretmp_62 = (sizetype) i_stride_pix2_25(D);
  goto <bb 7>;

  <bb 3>:

  <bb 4>:
  # i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>
  # x_40 = PHI <x_21(3), 0(7)>
  # ivtmp_58 = PHI <ivtmp_57(3), 4(7)>
  # DEBUG x => x_40
  # DEBUG i_sum => i_sum_38
  _9 = (sizetype) x_40;
  _10 = pix1_29 + _9;
  _12 = *_10;
  _13 = (int) _12;
  _15 = pix2_14 + _9;
  _16 = *_15;
  _17 = (int) _16;
  _18 = _13 - _17;
  _19 = ABS_EXPR <_18>;
  i_sum_20 = _19 + i_sum_38;
  # DEBUG i_sum => i_sum_20
  x_21 = x_40 + 1;
  # DEBUG x => x_21
  # DEBUG x => x_21
  # DEBUG i_sum => i_sum_20
  ivtmp_57 = ivtmp_58 - 1;
  if (ivtmp_57 != 0)
    goto <bb 3>;
  else
    goto <bb 5>;

  <bb 5>:
  # i_sum_60 = PHI <i_sum_20(4)>
  pix1_24 = pix1_29 + pretmp_61;
  # DEBUG pix1 => pix1_24
  pix2_27 = pix2_14 + pretmp_62;
  # DEBUG pix2 => pix2_27
  y_28 = y_41 + 1;
  # DEBUG y => y_28
  # DEBUG y => y_28
  # DEBUG i_sum => i_sum_60
  # DEBUG pix2 => pix2_27
  # DEBUG pix1 => pix1_24
  ivtmp_55 = ivtmp_56 - 1;
  if (ivtmp_55 != 0)
    goto <bb 6>;
  else
    goto <bb 8>;

  <bb 6>:

  <bb 7>:
  # pix1_29 = PHI <pix1_24(6), pix1_7(D)(2)>
  # pix2_14 = PHI <pix2_27(6), pix2_8(D)(2)>
  # i_sum_39 = PHI <i_sum_60(6), 0(2)>
  # y_41 = PHI <y_28(6), 0(2)>
  # ivtmp_56 = PHI <ivtmp_55(6), 4(2)>
  # DEBUG y => y_41
  # DEBUG i_sum => i_sum_39
  # DEBUG pix2 => pix2_14
  # DEBUG pix1 => pix1_29
  # DEBUG x => 0
  # DEBUG i_sum => i_sum_39
  goto <bb 4>;

  <bb 8>:
  # i_sum_59 = PHI <i_sum_60(5)>
  return i_sum_59;

}



;; Function x264_pixel_ssd_16x16 (x264_pixel_ssd_16x16, funcdef_no=122, decl_uid=7595, cgraph_uid=122, symbol_order=165)


Analyzing loop at common/pixel.c:90
common/pixel.c:90:1: note: ===== analyze_loop_nest =====
common/pixel.c:90:1: note: === vect_analyze_loop_form ===
common/pixel.c:90:1: note: ===== analyze_loop_nest_1 =====
common/pixel.c:90:1: note: === vect_analyze_loop_form ===
common/pixel.c:90:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 2
  exit condition [15, + , 4294967295] != 0
  bounds on difference of bases: -15 ... -15
  result:
    # of iterations 15, bounded by 15
common/pixel.c:90:1: note: Considering outer-loop vectorization.
common/pixel.c:90:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 1
  exit condition [15, + , 4294967295] != 0
  bounds on difference of bases: -15 ... -15
  result:
    # of iterations 15, bounded by 15
common/pixel.c:90:1: note: === vect_analyze_data_refs ===
Creating dr for *_10
analyze_innermost: success.
	base_address: pix1_29
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix1_7(D)
	Access function 0: {{0B, +, pretmp_61}_1, +, 1}_2
Creating dr for *_15
analyze_innermost: success.
	base_address: pix2_14
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix2_8(D)
	Access function 0: {{0B, +, pretmp_62}_1, +, 1}_2
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:90:1: note: analyze in outer-loop: *pix1_29
common/pixel.c:90:1: note: failed: evolution of base is not affine.
common/pixel.c:90:1: note: bad data references.

Analyzing loop at common/pixel.c:90
common/pixel.c:90:1: note: ===== analyze_loop_nest =====
common/pixel.c:90:1: note: === vect_analyze_loop_form ===
common/pixel.c:90:1: note: === get_loop_niters ===
common/pixel.c:90:1: note: === vect_analyze_data_refs ===
Creating dr for *_10
analyze_innermost: success.
	base_address: pix1_29
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix1_29
	Access function 0: {0B, +, 1}_2
Creating dr for *_15
analyze_innermost: success.
	base_address: pix2_14
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix2_14
	Access function 0: {0B, +, 1}_2
common/pixel.c:90:1: note: got vectype for stmt: _12 = *_10;
vector(16) unsigned char
common/pixel.c:90:1: note: got vectype for stmt: _16 = *_15;
vector(16) unsigned char
common/pixel.c:90:1: note: === vect_analyze_scalar_cycles ===
common/pixel.c:90:1: note: Analyze phi: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>

common/pixel.c:90:1: note: Access function of PHI: {i_sum_39, +, _19}_2
common/pixel.c:90:1: note: step: _19,  init: i_sum_39
common/pixel.c:90:1: note: step unknown.
common/pixel.c:90:1: note: Analyze phi: x_40 = PHI <x_21(3), 0(7)>

common/pixel.c:90:1: note: Access function of PHI: {0, +, 1}_2
common/pixel.c:90:1: note: step: 1,  init: 0
common/pixel.c:90:1: note: Detected induction.
common/pixel.c:90:1: note: Analyze phi: ivtmp_58 = PHI <ivtmp_57(3), 16(7)>

common/pixel.c:90:1: note: Access function of PHI: {16, +, 4294967295}_2
common/pixel.c:90:1: note: step: 4294967295,  init: 16
common/pixel.c:90:1: note: Detected induction.
common/pixel.c:90:1: note: Analyze phi: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>

common/pixel.c:90:1: note: detected reduction: i_sum_20 = _19 + i_sum_38;

common/pixel.c:90:1: note: Detected reduction.
common/pixel.c:90:1: note: === vect_pattern_recog ===
common/pixel.c:90:1: note: vect_is_simple_use: operand d_18
common/pixel.c:90:1: note: def_stmt: d_18 = _13 - _17;
common/pixel.c:90:1: note: type of def: 3.
common/pixel.c:90:1: note: vect_is_simple_use: operand _19
common/pixel.c:90:1: note: def_stmt: _19 = d_18 * d_18;
common/pixel.c:90:1: note: type of def: 3.
common/pixel.c:90:1: note: vect_is_simple_use: operand _19
common/pixel.c:90:1: note: def_stmt: _19 = d_18 * d_18;
common/pixel.c:90:1: note: type of def: 3.
common/pixel.c:90:1: note: vect_is_simple_use: operand d_18
common/pixel.c:90:1: note: def_stmt: d_18 = _13 - _17;
common/pixel.c:90:1: note: type of def: 3.
common/pixel.c:90:1: note: vect_is_simple_use: operand _19
common/pixel.c:90:1: note: def_stmt: _19 = d_18 * d_18;
common/pixel.c:90:1: note: type of def: 3.
common/pixel.c:90:1: note: === vect_analyze_data_ref_accesses ===
common/pixel.c:90:1: note: === vect_mark_stmts_to_be_vectorized ===
common/pixel.c:90:1: note: init: phi relevant? i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>
common/pixel.c:90:1: note: init: phi relevant? x_40 = PHI <x_21(3), 0(7)>
common/pixel.c:90:1: note: init: phi relevant? ivtmp_58 = PHI <ivtmp_57(3), 16(7)>
common/pixel.c:90:1: note: init: stmt relevant? # DEBUG x => x_40
common/pixel.c:90:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_38
common/pixel.c:90:1: note: init: stmt relevant? _9 = (sizetype) x_40;
common/pixel.c:90:1: note: init: stmt relevant? _10 = pix1_29 + _9;
common/pixel.c:90:1: note: init: stmt relevant? _12 = *_10;
common/pixel.c:90:1: note: init: stmt relevant? _13 = (int) _12;
common/pixel.c:90:1: note: init: stmt relevant? _15 = pix2_14 + _9;
common/pixel.c:90:1: note: init: stmt relevant? _16 = *_15;
common/pixel.c:90:1: note: init: stmt relevant? _17 = (int) _16;
common/pixel.c:90:1: note: init: stmt relevant? d_18 = _13 - _17;
common/pixel.c:90:1: note: init: stmt relevant? # DEBUG d => d_18
common/pixel.c:90:1: note: init: stmt relevant? _19 = d_18 * d_18;
common/pixel.c:90:1: note: init: stmt relevant? i_sum_20 = _19 + i_sum_38;
common/pixel.c:90:1: note: vec_stmt_relevant_p: used out of loop.
common/pixel.c:90:1: note: mark relevant 0, live 1.
common/pixel.c:90:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_20
common/pixel.c:90:1: note: init: stmt relevant? x_21 = x_40 + 1;
common/pixel.c:90:1: note: init: stmt relevant? # DEBUG x => x_21
common/pixel.c:90:1: note: init: stmt relevant? # DEBUG x => x_21
common/pixel.c:90:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_20
common/pixel.c:90:1: note: init: stmt relevant? ivtmp_57 = ivtmp_58 - 1;
common/pixel.c:90:1: note: init: stmt relevant? if (ivtmp_57 != 0)
common/pixel.c:90:1: note: worklist: examine stmt: i_sum_20 = _19 + i_sum_38;
common/pixel.c:90:1: note: vect_is_simple_use: operand _19
common/pixel.c:90:1: note: def_stmt: _19 = d_18 * d_18;
common/pixel.c:90:1: note: type of def: 3.
common/pixel.c:90:1: note: mark relevant 3, live 0.
common/pixel.c:90:1: note: vect_is_simple_use: operand i_sum_38
common/pixel.c:90:1: note: def_stmt: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>
common/pixel.c:90:1: note: type of def: 5.
common/pixel.c:90:1: note: mark relevant 3, live 0.
common/pixel.c:90:1: note: worklist: examine stmt: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>
common/pixel.c:90:1: note: vect_is_simple_use: operand i_sum_20
common/pixel.c:90:1: note: def_stmt: i_sum_20 = _19 + i_sum_38;
common/pixel.c:90:1: note: type of def: 5.
common/pixel.c:90:1: note: reduc-stmt defining reduc-phi in the same nest.
common/pixel.c:90:1: note: vect_is_simple_use: operand i_sum_39
common/pixel.c:90:1: note: def_stmt: i_sum_39 = PHI <i_sum_60(6), 0(2)>
common/pixel.c:90:1: note: type of def: 2.
common/pixel.c:90:1: note: def_stmt is out of loop.
common/pixel.c:90:1: note: worklist: examine stmt: _19 = d_18 * d_18;
common/pixel.c:90:1: note: vect_is_simple_use: operand d_18
common/pixel.c:90:1: note: def_stmt: d_18 = _13 - _17;
common/pixel.c:90:1: note: type of def: 3.
common/pixel.c:90:1: note: mark relevant 3, live 0.
common/pixel.c:90:1: note: vect_is_simple_use: operand d_18
common/pixel.c:90:1: note: def_stmt: d_18 = _13 - _17;
common/pixel.c:90:1: note: type of def: 3.
common/pixel.c:90:1: note: mark relevant 3, live 0.
common/pixel.c:90:1: note: already marked relevant/live.
common/pixel.c:90:1: note: worklist: examine stmt: d_18 = _13 - _17;
common/pixel.c:90:1: note: vect_is_simple_use: operand _13
common/pixel.c:90:1: note: def_stmt: _13 = (int) _12;
common/pixel.c:90:1: note: type of def: 3.
common/pixel.c:90:1: note: mark relevant 3, live 0.
common/pixel.c:90:1: note: vect_is_simple_use: operand _17
common/pixel.c:90:1: note: def_stmt: _17 = (int) _16;
common/pixel.c:90:1: note: type of def: 3.
common/pixel.c:90:1: note: mark relevant 3, live 0.
common/pixel.c:90:1: note: worklist: examine stmt: _17 = (int) _16;
common/pixel.c:90:1: note: vect_is_simple_use: operand _16
common/pixel.c:90:1: note: def_stmt: _16 = *_15;
common/pixel.c:90:1: note: type of def: 3.
common/pixel.c:90:1: note: mark relevant 3, live 0.
common/pixel.c:90:1: note: worklist: examine stmt: _16 = *_15;
common/pixel.c:90:1: note: worklist: examine stmt: _13 = (int) _12;
common/pixel.c:90:1: note: vect_is_simple_use: operand _12
common/pixel.c:90:1: note: def_stmt: _12 = *_10;
common/pixel.c:90:1: note: type of def: 3.
common/pixel.c:90:1: note: mark relevant 3, live 0.
common/pixel.c:90:1: note: worklist: examine stmt: _12 = *_10;
common/pixel.c:90:1: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _12 = *_10;
  stmt_b: _16 = *_15;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _12 = *_10;
  stmt_b: _12 = *_10;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_2)
  (chrec_b = {0B, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _16 = *_15;
  stmt_b: _16 = *_15;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_2)
  (chrec_b = {0B, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/pixel.c:90:1: note: === vect_determine_vectorization_factor ===
common/pixel.c:90:1: note: ==> examining phi: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>

common/pixel.c:90:1: note: get vectype for scalar type:  int
common/pixel.c:90:1: note: vectype: vector(4) int
common/pixel.c:90:1: note: nunits = 4
common/pixel.c:90:1: note: ==> examining phi: x_40 = PHI <x_21(3), 0(7)>

common/pixel.c:90:1: note: ==> examining phi: ivtmp_58 = PHI <ivtmp_57(3), 16(7)>

common/pixel.c:90:1: note: ==> examining statement: # DEBUG x => x_40

common/pixel.c:90:1: note: skip.
common/pixel.c:90:1: note: ==> examining statement: # DEBUG i_sum => i_sum_38

common/pixel.c:90:1: note: skip.
common/pixel.c:90:1: note: ==> examining statement: _9 = (sizetype) x_40;

common/pixel.c:90:1: note: skip.
common/pixel.c:90:1: note: ==> examining statement: _10 = pix1_29 + _9;

common/pixel.c:90:1: note: skip.
common/pixel.c:90:1: note: ==> examining statement: _12 = *_10;

common/pixel.c:90:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:90:1: note: vectype: vector(16) unsigned char
common/pixel.c:90:1: note: nunits = 16
common/pixel.c:90:1: note: ==> examining statement: _13 = (int) _12;

common/pixel.c:90:1: note: get vectype for scalar type:  int
common/pixel.c:90:1: note: vectype: vector(4) int
common/pixel.c:90:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:90:1: note: vectype: vector(16) unsigned char
common/pixel.c:90:1: note: nunits = 16
common/pixel.c:90:1: note: ==> examining statement: _15 = pix2_14 + _9;

common/pixel.c:90:1: note: skip.
common/pixel.c:90:1: note: ==> examining statement: _16 = *_15;

common/pixel.c:90:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:90:1: note: vectype: vector(16) unsigned char
common/pixel.c:90:1: note: nunits = 16
common/pixel.c:90:1: note: ==> examining statement: _17 = (int) _16;

common/pixel.c:90:1: note: get vectype for scalar type:  int
common/pixel.c:90:1: note: vectype: vector(4) int
common/pixel.c:90:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:90:1: note: vectype: vector(16) unsigned char
common/pixel.c:90:1: note: nunits = 16
common/pixel.c:90:1: note: ==> examining statement: d_18 = _13 - _17;

common/pixel.c:90:1: note: get vectype for scalar type:  int
common/pixel.c:90:1: note: vectype: vector(4) int
common/pixel.c:90:1: note: get vectype for scalar type:  int
common/pixel.c:90:1: note: vectype: vector(4) int
common/pixel.c:90:1: note: nunits = 4
common/pixel.c:90:1: note: ==> examining statement: # DEBUG d => d_18

common/pixel.c:90:1: note: skip.
common/pixel.c:90:1: note: ==> examining statement: _19 = d_18 * d_18;

common/pixel.c:90:1: note: get vectype for scalar type:  int
common/pixel.c:90:1: note: vectype: vector(4) int
common/pixel.c:90:1: note: get vectype for scalar type:  int
common/pixel.c:90:1: note: vectype: vector(4) int
common/pixel.c:90:1: note: nunits = 4
common/pixel.c:90:1: note: ==> examining statement: i_sum_20 = _19 + i_sum_38;

common/pixel.c:90:1: note: get vectype for scalar type:  int
common/pixel.c:90:1: note: vectype: vector(4) int
common/pixel.c:90:1: note: get vectype for scalar type:  int
common/pixel.c:90:1: note: vectype: vector(4) int
common/pixel.c:90:1: note: nunits = 4
common/pixel.c:90:1: note: ==> examining statement: # DEBUG i_sum => i_sum_20

common/pixel.c:90:1: note: skip.
common/pixel.c:90:1: note: ==> examining statement: x_21 = x_40 + 1;

common/pixel.c:90:1: note: skip.
common/pixel.c:90:1: note: ==> examining statement: # DEBUG x => x_21

common/pixel.c:90:1: note: skip.
common/pixel.c:90:1: note: ==> examining statement: # DEBUG x => x_21

common/pixel.c:90:1: note: skip.
common/pixel.c:90:1: note: ==> examining statement: # DEBUG i_sum => i_sum_20

common/pixel.c:90:1: note: skip.
common/pixel.c:90:1: note: ==> examining statement: ivtmp_57 = ivtmp_58 - 1;

common/pixel.c:90:1: note: skip.
common/pixel.c:90:1: note: ==> examining statement: if (ivtmp_57 != 0)

common/pixel.c:90:1: note: skip.
common/pixel.c:90:1: note: vectorization factor = 16
common/pixel.c:90:1: note: === vect_analyze_data_refs_alignment ===
common/pixel.c:90:1: note: vect_compute_data_ref_alignment:
common/pixel.c:90:1: note: can't force alignment of ref: *_10
common/pixel.c:90:1: note: vect_compute_data_ref_alignment:
common/pixel.c:90:1: note: can't force alignment of ref: *_15
common/pixel.c:90:1: note: === vect_prune_runtime_alias_test_list ===
common/pixel.c:90:1: note: === vect_enhance_data_refs_alignment ===
common/pixel.c:90:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:90:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:90:1: note: vect_can_advance_ivs_p:
common/pixel.c:90:1: note: Analyze phi: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>

common/pixel.c:90:1: note: reduc phi. skip.
common/pixel.c:90:1: note: Analyze phi: x_40 = PHI <x_21(3), 0(7)>

common/pixel.c:90:1: note: Analyze phi: ivtmp_58 = PHI <ivtmp_57(3), 16(7)>

common/pixel.c:90:1: note: Vectorizing an unaligned access.
common/pixel.c:90:1: note: Vectorizing an unaligned access.
common/pixel.c:90:1: note: === vect_analyze_slp ===
common/pixel.c:90:1: note: === vect_make_slp_decision ===
common/pixel.c:90:1: note: === vect_detect_hybrid_slp ===
common/pixel.c:90:1: note: === vect_analyze_loop_operations ===
common/pixel.c:90:1: note: examining phi: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>

common/pixel.c:90:1: note: examining phi: x_40 = PHI <x_21(3), 0(7)>

common/pixel.c:90:1: note: examining phi: ivtmp_58 = PHI <ivtmp_57(3), 16(7)>

common/pixel.c:90:1: note: ==> examining statement: # DEBUG x => x_40
common/pixel.c:90:1: note: irrelevant.
common/pixel.c:90:1: note: ==> examining statement: # DEBUG i_sum => i_sum_38
common/pixel.c:90:1: note: irrelevant.
common/pixel.c:90:1: note: ==> examining statement: _9 = (sizetype) x_40;
common/pixel.c:90:1: note: irrelevant.
common/pixel.c:90:1: note: ==> examining statement: _10 = pix1_29 + _9;
common/pixel.c:90:1: note: irrelevant.
common/pixel.c:90:1: note: ==> examining statement: _12 = *_10;
common/pixel.c:90:1: note: vect_is_simple_use: operand *_10
common/pixel.c:90:1: note: not ssa-name.
common/pixel.c:90:1: note: use not simple.
common/pixel.c:90:1: note: vect_is_simple_use: operand *_10
common/pixel.c:90:1: note: not ssa-name.
common/pixel.c:90:1: note: use not simple.
common/pixel.c:90:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:90:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:90:1: note: ==> examining statement: _13 = (int) _12;
common/pixel.c:90:1: note: vect_is_simple_use: operand _12
common/pixel.c:90:1: note: def_stmt: _12 = *_10;
common/pixel.c:90:1: note: type of def: 3.
common/pixel.c:90:1: note: === vectorizable_conversion ===
common/pixel.c:90:1: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:90:1: note: ==> examining statement: _15 = pix2_14 + _9;
common/pixel.c:90:1: note: irrelevant.
common/pixel.c:90:1: note: ==> examining statement: _16 = *_15;
common/pixel.c:90:1: note: vect_is_simple_use: operand *_15
common/pixel.c:90:1: note: not ssa-name.
common/pixel.c:90:1: note: use not simple.
common/pixel.c:90:1: note: vect_is_simple_use: operand *_15
common/pixel.c:90:1: note: not ssa-name.
common/pixel.c:90:1: note: use not simple.
common/pixel.c:90:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:90:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:90:1: note: ==> examining statement: _17 = (int) _16;
common/pixel.c:90:1: note: vect_is_simple_use: operand _16
common/pixel.c:90:1: note: def_stmt: _16 = *_15;
common/pixel.c:90:1: note: type of def: 3.
common/pixel.c:90:1: note: === vectorizable_conversion ===
common/pixel.c:90:1: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:90:1: note: ==> examining statement: d_18 = _13 - _17;
common/pixel.c:90:1: note: vect_is_simple_use: operand _13
common/pixel.c:90:1: note: def_stmt: _13 = (int) _12;
common/pixel.c:90:1: note: type of def: 3.
common/pixel.c:90:1: note: vect_is_simple_use: operand _17
common/pixel.c:90:1: note: def_stmt: _17 = (int) _16;
common/pixel.c:90:1: note: type of def: 3.
common/pixel.c:90:1: note: === vectorizable_operation ===
common/pixel.c:90:1: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:90:1: note: ==> examining statement: # DEBUG d => d_18
common/pixel.c:90:1: note: irrelevant.
common/pixel.c:90:1: note: ==> examining statement: _19 = d_18 * d_18;
common/pixel.c:90:1: note: vect_is_simple_use: operand d_18
common/pixel.c:90:1: note: def_stmt: d_18 = _13 - _17;
common/pixel.c:90:1: note: type of def: 3.
common/pixel.c:90:1: note: vect_is_simple_use: operand d_18
common/pixel.c:90:1: note: def_stmt: d_18 = _13 - _17;
common/pixel.c:90:1: note: type of def: 3.
common/pixel.c:90:1: note: === vectorizable_operation ===
common/pixel.c:90:1: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:90:1: note: ==> examining statement: i_sum_20 = _19 + i_sum_38;
common/pixel.c:90:1: note: vect_is_simple_use: operand _19
common/pixel.c:90:1: note: def_stmt: _19 = d_18 * d_18;
common/pixel.c:90:1: note: type of def: 3.
common/pixel.c:90:1: note: vect_is_simple_use: operand i_sum_38
common/pixel.c:90:1: note: def_stmt: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>
common/pixel.c:90:1: note: type of def: 5.
common/pixel.c:90:1: note: detected reduction: i_sum_20 = _19 + i_sum_38;

common/pixel.c:90:1: note: reduc op not supported by target.
vect_model_reduction_cost: inside_cost = 4, prologue_cost = 1, epilogue_cost = 5 .
common/pixel.c:90:1: note: ==> examining statement: # DEBUG i_sum => i_sum_20
common/pixel.c:90:1: note: irrelevant.
common/pixel.c:90:1: note: ==> examining statement: x_21 = x_40 + 1;
common/pixel.c:90:1: note: irrelevant.
common/pixel.c:90:1: note: ==> examining statement: # DEBUG x => x_21
common/pixel.c:90:1: note: irrelevant.
common/pixel.c:90:1: note: ==> examining statement: # DEBUG x => x_21
common/pixel.c:90:1: note: irrelevant.
common/pixel.c:90:1: note: ==> examining statement: # DEBUG i_sum => i_sum_20
common/pixel.c:90:1: note: irrelevant.
common/pixel.c:90:1: note: ==> examining statement: ivtmp_57 = ivtmp_58 - 1;
common/pixel.c:90:1: note: irrelevant.
common/pixel.c:90:1: note: ==> examining statement: if (ivtmp_57 != 0)
common/pixel.c:90:1: note: irrelevant.
common/pixel.c:90:1: note: vectorization_factor = 16, niters = 16
common/pixel.c:90:1: note: === vect_update_slp_costs_according_to_vf ===
common/pixel.c:90:1: note: Cost model analysis: 
  Vector inside of loop cost: 28
  Vector prologue cost: 1
  Vector epilogue cost: 5
  Scalar iteration cost: 7
  Scalar outside cost: 0
  Vector outside cost: 6
  prologue iterations: 0
  epilogue iterations: 0
  Calculated minimum iters for profitability: 2
common/pixel.c:90:1: note:   Runtime profitability threshold = 15
common/pixel.c:90:1: note:   Static estimate profitability threshold = 15
common/pixel.c:90:1: note: loop vectorized
common/pixel.c:90:1: note: === vec_transform_loop ===
common/pixel.c:90:1: note: ------>vectorizing phi: i_sum_38 = PHI <i_sum_20(3), i_sum_39(9)>

common/pixel.c:90:1: note: multiple-types.
common/pixel.c:90:1: note: ------>vectorizing phi: x_40 = PHI <x_21(3), 0(9)>

common/pixel.c:90:1: note: ------>vectorizing phi: ivtmp_58 = PHI <ivtmp_57(3), 16(9)>

common/pixel.c:90:1: note: ------>vectorizing statement: # DEBUG x => x_40

common/pixel.c:90:1: note: ------>vectorizing statement: # DEBUG i_sum => i_sum_38

common/pixel.c:90:1: note: ------>vectorizing statement: _9 = (sizetype) x_40;

common/pixel.c:90:1: note: ------>vectorizing statement: _10 = pix1_29 + _9;

common/pixel.c:90:1: note: ------>vectorizing statement: _12 = *_10;

common/pixel.c:90:1: note: transform statement.
common/pixel.c:90:1: note: transform load. ncopies = 1
common/pixel.c:90:1: note: create vector_type-pointer variable to type: vector(16) unsigned char  vectorizing a pointer ref: *pix1_29
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:90:1: note: created vectp_pix1.227_54
common/pixel.c:90:1: note: add new stmt: vect__12.228_51 = MEM[(uint8_t *)vectp_pix1.226_53];
common/pixel.c:90:1: note: ------>vectorizing statement: _13 = (int) _12;

common/pixel.c:90:1: note: multiple-types.
common/pixel.c:90:1: note: transform statement.
common/pixel.c:90:1: note: vect_is_simple_use: operand _12
common/pixel.c:90:1: note: def_stmt: _12 = *_10;
common/pixel.c:90:1: note: type of def: 3.
common/pixel.c:90:1: note: transform conversion. ncopies = 1.
common/pixel.c:90:1: note: vect_get_vec_def_for_operand: _12
common/pixel.c:90:1: note: vect_is_simple_use: operand _12
common/pixel.c:90:1: note: def_stmt: _12 = *_10;
common/pixel.c:90:1: note: type of def: 3.
common/pixel.c:90:1: note: def =  _12
  def_stmt =  _12 = *_10;
common/pixel.c:90:1: note: add new stmt: vect__13.230_50 = [vec_unpack_lo_expr] vect__12.228_51;
common/pixel.c:90:1: note: add new stmt: vect__13.230_49 = [vec_unpack_hi_expr] vect__12.228_51;
common/pixel.c:90:1: note: add new stmt: vect__13.229_48 = [vec_unpack_lo_expr] vect__13.230_50;
common/pixel.c:90:1: note: add new stmt: vect__13.229_47 = [vec_unpack_hi_expr] vect__13.230_50;
common/pixel.c:90:1: note: add new stmt: vect__13.229_46 = [vec_unpack_lo_expr] vect__13.230_49;
common/pixel.c:90:1: note: add new stmt: vect__13.229_45 = [vec_unpack_hi_expr] vect__13.230_49;
common/pixel.c:90:1: note: ------>vectorizing statement: _15 = pix2_14 + _9;

common/pixel.c:90:1: note: ------>vectorizing statement: _16 = *_15;

common/pixel.c:90:1: note: transform statement.
common/pixel.c:90:1: note: transform load. ncopies = 1
common/pixel.c:90:1: note: create vector_type-pointer variable to type: vector(16) unsigned char  vectorizing a pointer ref: *pix2_14
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:90:1: note: created vectp_pix2.232_44
common/pixel.c:90:1: note: add new stmt: vect__16.233_37 = MEM[(uint8_t *)vectp_pix2.231_43];
common/pixel.c:90:1: note: ------>vectorizing statement: _17 = (int) _16;

common/pixel.c:90:1: note: multiple-types.
common/pixel.c:90:1: note: transform statement.
common/pixel.c:90:1: note: vect_is_simple_use: operand _16
common/pixel.c:90:1: note: def_stmt: _16 = *_15;
common/pixel.c:90:1: note: type of def: 3.
common/pixel.c:90:1: note: transform conversion. ncopies = 1.
common/pixel.c:90:1: note: vect_get_vec_def_for_operand: _16
common/pixel.c:90:1: note: vect_is_simple_use: operand _16
common/pixel.c:90:1: note: def_stmt: _16 = *_15;
common/pixel.c:90:1: note: type of def: 3.
common/pixel.c:90:1: note: def =  _16
  def_stmt =  _16 = *_15;
common/pixel.c:90:1: note: add new stmt: vect__17.235_36 = [vec_unpack_lo_expr] vect__16.233_37;
common/pixel.c:90:1: note: add new stmt: vect__17.235_35 = [vec_unpack_hi_expr] vect__16.233_37;
common/pixel.c:90:1: note: add new stmt: vect__17.234_34 = [vec_unpack_lo_expr] vect__17.235_36;
common/pixel.c:90:1: note: add new stmt: vect__17.234_33 = [vec_unpack_hi_expr] vect__17.235_36;
common/pixel.c:90:1: note: add new stmt: vect__17.234_32 = [vec_unpack_lo_expr] vect__17.235_35;
common/pixel.c:90:1: note: add new stmt: vect__17.234_31 = [vec_unpack_hi_expr] vect__17.235_35;
common/pixel.c:90:1: note: ------>vectorizing statement: d_18 = _13 - _17;

common/pixel.c:90:1: note: multiple-types.
common/pixel.c:90:1: note: transform statement.
common/pixel.c:90:1: note: vect_is_simple_use: operand _13
common/pixel.c:90:1: note: def_stmt: _13 = (int) _12;
common/pixel.c:90:1: note: type of def: 3.
common/pixel.c:90:1: note: vect_is_simple_use: operand _17
common/pixel.c:90:1: note: def_stmt: _17 = (int) _16;
common/pixel.c:90:1: note: type of def: 3.
common/pixel.c:90:1: note: transform binary/unary operation.
common/pixel.c:90:1: note: vect_get_vec_def_for_operand: _13
common/pixel.c:90:1: note: vect_is_simple_use: operand _13
common/pixel.c:90:1: note: def_stmt: _13 = (int) _12;
common/pixel.c:90:1: note: type of def: 3.
common/pixel.c:90:1: note: def =  _13
  def_stmt =  _13 = (int) _12;
common/pixel.c:90:1: note: vect_get_vec_def_for_operand: _17
common/pixel.c:90:1: note: vect_is_simple_use: operand _17
common/pixel.c:90:1: note: def_stmt: _17 = (int) _16;
common/pixel.c:90:1: note: type of def: 3.
common/pixel.c:90:1: note: def =  _17
  def_stmt =  _17 = (int) _16;
common/pixel.c:90:1: note: add new stmt: vect_d_18.236_30 = vect__13.229_48 - vect__17.234_34;
common/pixel.c:90:1: note: add new stmt: vect_d_18.236_6 = vect__13.229_47 - vect__17.234_33;
common/pixel.c:90:1: note: add new stmt: vect_d_18.236_5 = vect__13.229_46 - vect__17.234_32;
common/pixel.c:90:1: note: add new stmt: vect_d_18.236_4 = vect__13.229_45 - vect__17.234_31;
common/pixel.c:90:1: note: ------>vectorizing statement: # DEBUG d => d_18

common/pixel.c:90:1: note: ------>vectorizing statement: _19 = d_18 * d_18;

common/pixel.c:90:1: note: multiple-types.
common/pixel.c:90:1: note: transform statement.
common/pixel.c:90:1: note: vect_is_simple_use: operand d_18
common/pixel.c:90:1: note: def_stmt: d_18 = _13 - _17;
common/pixel.c:90:1: note: type of def: 3.
common/pixel.c:90:1: note: vect_is_simple_use: operand d_18
common/pixel.c:90:1: note: def_stmt: d_18 = _13 - _17;
common/pixel.c:90:1: note: type of def: 3.
common/pixel.c:90:1: note: transform binary/unary operation.
common/pixel.c:90:1: note: vect_get_vec_def_for_operand: d_18
common/pixel.c:90:1: note: vect_is_simple_use: operand d_18
common/pixel.c:90:1: note: def_stmt: d_18 = _13 - _17;
common/pixel.c:90:1: note: type of def: 3.
common/pixel.c:90:1: note: def =  d_18
  def_stmt =  d_18 = _13 - _17;
common/pixel.c:90:1: note: vect_get_vec_def_for_operand: d_18
common/pixel.c:90:1: note: vect_is_simple_use: operand d_18
common/pixel.c:90:1: note: def_stmt: d_18 = _13 - _17;
common/pixel.c:90:1: note: type of def: 3.
common/pixel.c:90:1: note: def =  d_18
  def_stmt =  d_18 = _13 - _17;
common/pixel.c:90:1: note: add new stmt: vect__19.237_3 = vect_d_18.236_30 * vect_d_18.236_30;
common/pixel.c:90:1: note: add new stmt: vect__19.237_2 = vect_d_18.236_6 * vect_d_18.236_6;
common/pixel.c:90:1: note: add new stmt: vect__19.237_1 = vect_d_18.236_5 * vect_d_18.236_5;
common/pixel.c:90:1: note: add new stmt: vect__19.237_65 = vect_d_18.236_4 * vect_d_18.236_4;
common/pixel.c:90:1: note: ------>vectorizing statement: i_sum_20 = _19 + i_sum_38;

common/pixel.c:90:1: note: multiple-types.
common/pixel.c:90:1: note: transform statement.
common/pixel.c:90:1: note: vect_is_simple_use: operand _19
common/pixel.c:90:1: note: def_stmt: _19 = d_18 * d_18;
common/pixel.c:90:1: note: type of def: 3.
common/pixel.c:90:1: note: vect_is_simple_use: operand i_sum_38
common/pixel.c:90:1: note: def_stmt: i_sum_38 = PHI <i_sum_20(3), i_sum_39(9)>
common/pixel.c:90:1: note: type of def: 5.
common/pixel.c:90:1: note: detected reduction: i_sum_20 = _19 + i_sum_38;

common/pixel.c:90:1: note: reduc op not supported by target.
common/pixel.c:90:1: note: transform reduction.
common/pixel.c:90:1: note: vect_get_vec_def_for_operand: _19
common/pixel.c:90:1: note: vect_is_simple_use: operand _19
common/pixel.c:90:1: note: def_stmt: _19 = d_18 * d_18;
common/pixel.c:90:1: note: type of def: 3.
common/pixel.c:90:1: note: def =  _19
  def_stmt =  _19 = d_18 * d_18;
common/pixel.c:90:1: note: add new stmt: vect_i_sum_20.238_63 = vect__19.237_3 + vect_i_sum_20.238_64;
common/pixel.c:90:1: note: vect_is_simple_use: operand _19
common/pixel.c:90:1: note: def_stmt: _19 = d_18 * d_18;
common/pixel.c:90:1: note: type of def: 3.
common/pixel.c:90:1: note: add new stmt: vect_i_sum_20.238_23 = vect__19.237_2 + vect_i_sum_20.238_63;
common/pixel.c:90:1: note: vect_is_simple_use: operand _19
common/pixel.c:90:1: note: def_stmt: _19 = d_18 * d_18;
common/pixel.c:90:1: note: type of def: 3.
common/pixel.c:90:1: note: add new stmt: vect_i_sum_20.238_26 = vect__19.237_1 + vect_i_sum_20.238_23;
common/pixel.c:90:1: note: vect_is_simple_use: operand _19
common/pixel.c:90:1: note: def_stmt: _19 = d_18 * d_18;
common/pixel.c:90:1: note: type of def: 3.
common/pixel.c:90:1: note: add new stmt: vect_i_sum_20.238_66 = vect__19.237_65 + vect_i_sum_20.238_26;
common/pixel.c:90:1: note: vect_is_simple_use: operand i_sum_39
common/pixel.c:90:1: note: def_stmt: i_sum_39 = PHI <i_sum_60(6), 0(2)>
common/pixel.c:90:1: note: type of def: 2.
common/pixel.c:90:1: note: vect_get_vec_def_for_operand: i_sum_38
common/pixel.c:90:1: note: vect_is_simple_use: operand i_sum_38
common/pixel.c:90:1: note: def_stmt: i_sum_38 = PHI <i_sum_20(3), i_sum_39(9)>
common/pixel.c:90:1: note: type of def: 5.
common/pixel.c:90:1: note: def =  i_sum_38
  def_stmt =  i_sum_38 = PHI <i_sum_20(3), i_sum_39(9)>
common/pixel.c:90:1: note: transform reduction: created def-use cycle: vect_i_sum_20.238_64 = PHI <vect_i_sum_20.238_66(3), { 0, 0, 0, 0 }(9)>

vect_i_sum_20.238_66 = vect__19.237_65 + vect_i_sum_20.238_26;

common/pixel.c:90:1: note: Reduce using vector shifts
common/pixel.c:90:1: note: extract scalar result
common/pixel.c:90:1: note: ------>vectorizing statement: # DEBUG i_sum => i_sum_20

common/pixel.c:90:1: note: ------>vectorizing statement: x_21 = x_40 + 1;

common/pixel.c:90:1: note: ------>vectorizing statement: # DEBUG x => x_21

common/pixel.c:90:1: note: ------>vectorizing statement: # DEBUG x => x_21

common/pixel.c:90:1: note: ------>vectorizing statement: # DEBUG i_sum => i_sum_20

common/pixel.c:90:1: note: ------>vectorizing statement: ivtmp_57 = ivtmp_58 - 1;

common/pixel.c:90:1: note: ------>vectorizing statement: vectp_pix1.226_52 = vectp_pix1.226_53 + 16;

common/pixel.c:90:1: note: ------>vectorizing statement: vectp_pix2.231_42 = vectp_pix2.231_43 + 16;

common/pixel.c:90:1: note: ------>vectorizing statement: if (ivtmp_57 != 0)


loop at common/pixel.c:90: if (ivtmp_75 < 1)

;; Scaling loop 2 with scale 0.062500, bounding iterations to 1 from guessed 16
;; guessed iterations are now 1
common/pixel.c:90:1: note: LOOP VECTORIZED

common/pixel.c:90:1: note: vectorized 1 loops in function.
Merging blocks 7 and 9
x264_pixel_ssd_16x16 (uint8_t * pix1, int i_stride_pix1, uint8_t * pix2, int i_stride_pix2)
{
  int vect_i_sum_20.241;
  vector(4) int vect_i_sum_20.240;
  int stmp_i_sum_20.239;
  vector(4) int vect_i_sum_20.238;
  vector(4) int vect__19.237;
  vector(4) int vect_d_18.236;
  vector(8) short unsigned int vect__17.235;
  vector(4) int vect__17.234;
  vector(16) unsigned char vect__16.233;
  vector(16) unsigned char * vectp_pix2.232;
  vector(16) unsigned char * vectp_pix2.231;
  vector(8) short unsigned int vect__13.230;
  vector(4) int vect__13.229;
  vector(16) unsigned char vect__12.228;
  vector(16) unsigned char * vectp_pix1.227;
  vector(16) unsigned char * vectp_pix1.226;
  int d;
  int y;
  int x;
  int i_sum;
  sizetype _9;
  uint8_t * _10;
  unsigned char _12;
  int _13;
  uint8_t * _15;
  unsigned char _16;
  int _17;
  int _19;
  unsigned int ivtmp_55;
  unsigned int ivtmp_56;
  unsigned int ivtmp_57;
  unsigned int ivtmp_58;
  sizetype pretmp_61;
  sizetype pretmp_62;
  unsigned int ivtmp_74;
  unsigned int ivtmp_75;

  <bb 2>:
  # DEBUG i_sum => 0
  # DEBUG y => 0
  # DEBUG y => 0
  # DEBUG i_sum => 0
  # DEBUG pix2 => pix2_8(D)
  # DEBUG pix1 => pix1_7(D)
  pretmp_61 = (sizetype) i_stride_pix1_22(D);
  pretmp_62 = (sizetype) i_stride_pix2_25(D);
  goto <bb 7>;

  <bb 3>:

  <bb 4>:
  # i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>
  # x_40 = PHI <x_21(3), 0(7)>
  # ivtmp_58 = PHI <ivtmp_57(3), 16(7)>
  # vectp_pix1.226_53 = PHI <vectp_pix1.226_52(3), vectp_pix1.227_54(7)>
  # vectp_pix2.231_43 = PHI <vectp_pix2.231_42(3), vectp_pix2.232_44(7)>
  # vect_i_sum_20.238_64 = PHI <vect_i_sum_20.238_66(3), { 0, 0, 0, 0 }(7)>
  # ivtmp_74 = PHI <ivtmp_75(3), 0(7)>
  # DEBUG x => x_40
  # DEBUG i_sum => i_sum_38
  _9 = (sizetype) x_40;
  _10 = pix1_29 + _9;
  vect__12.228_51 = MEM[(uint8_t *)vectp_pix1.226_53];
  _12 = *_10;
  vect__13.230_50 = [vec_unpack_lo_expr] vect__12.228_51;
  vect__13.230_49 = [vec_unpack_hi_expr] vect__12.228_51;
  vect__13.229_48 = [vec_unpack_lo_expr] vect__13.230_50;
  vect__13.229_47 = [vec_unpack_hi_expr] vect__13.230_50;
  vect__13.229_46 = [vec_unpack_lo_expr] vect__13.230_49;
  vect__13.229_45 = [vec_unpack_hi_expr] vect__13.230_49;
  _13 = (int) _12;
  _15 = pix2_14 + _9;
  vect__16.233_37 = MEM[(uint8_t *)vectp_pix2.231_43];
  _16 = *_15;
  vect__17.235_36 = [vec_unpack_lo_expr] vect__16.233_37;
  vect__17.235_35 = [vec_unpack_hi_expr] vect__16.233_37;
  vect__17.234_34 = [vec_unpack_lo_expr] vect__17.235_36;
  vect__17.234_33 = [vec_unpack_hi_expr] vect__17.235_36;
  vect__17.234_32 = [vec_unpack_lo_expr] vect__17.235_35;
  vect__17.234_31 = [vec_unpack_hi_expr] vect__17.235_35;
  _17 = (int) _16;
  vect_d_18.236_30 = vect__13.229_48 - vect__17.234_34;
  vect_d_18.236_6 = vect__13.229_47 - vect__17.234_33;
  vect_d_18.236_5 = vect__13.229_46 - vect__17.234_32;
  vect_d_18.236_4 = vect__13.229_45 - vect__17.234_31;
  d_18 = _13 - _17;
  # DEBUG d => d_18
  vect__19.237_3 = vect_d_18.236_30 * vect_d_18.236_30;
  vect__19.237_2 = vect_d_18.236_6 * vect_d_18.236_6;
  vect__19.237_1 = vect_d_18.236_5 * vect_d_18.236_5;
  vect__19.237_65 = vect_d_18.236_4 * vect_d_18.236_4;
  _19 = d_18 * d_18;
  vect_i_sum_20.238_63 = vect__19.237_3 + vect_i_sum_20.238_64;
  vect_i_sum_20.238_23 = vect__19.237_2 + vect_i_sum_20.238_63;
  vect_i_sum_20.238_26 = vect__19.237_1 + vect_i_sum_20.238_23;
  vect_i_sum_20.238_66 = vect__19.237_65 + vect_i_sum_20.238_26;
  i_sum_20 = _19 + i_sum_38;
  # DEBUG i_sum => i_sum_20
  x_21 = x_40 + 1;
  # DEBUG x => x_21
  # DEBUG x => x_21
  # DEBUG i_sum => i_sum_20
  ivtmp_57 = ivtmp_58 - 1;
  vectp_pix1.226_52 = vectp_pix1.226_53 + 16;
  vectp_pix2.231_42 = vectp_pix2.231_43 + 16;
  ivtmp_75 = ivtmp_74 + 1;
  if (ivtmp_75 < 1)
    goto <bb 3>;
  else
    goto <bb 5>;

  <bb 5>:
  # i_sum_60 = PHI <i_sum_20(4)>
  # vect_i_sum_20.238_67 = PHI <vect_i_sum_20.238_66(4)>
  vect_i_sum_20.240_68 = VEC_PERM_EXPR <vect_i_sum_20.238_67, { 0, 0, 0, 0 }, { 2, 3, 4, 5 }>;
  vect_i_sum_20.240_69 = vect_i_sum_20.240_68 + vect_i_sum_20.238_67;
  vect_i_sum_20.240_70 = VEC_PERM_EXPR <vect_i_sum_20.240_69, { 0, 0, 0, 0 }, { 1, 2, 3, 4 }>;
  vect_i_sum_20.240_71 = vect_i_sum_20.240_70 + vect_i_sum_20.240_69;
  stmp_i_sum_20.239_72 = BIT_FIELD_REF <vect_i_sum_20.240_71, 32, 0>;
  vect_i_sum_20.241_73 = stmp_i_sum_20.239_72 + i_sum_39;
  pix1_24 = pix1_29 + pretmp_61;
  # DEBUG pix1 => pix1_24
  pix2_27 = pix2_14 + pretmp_62;
  # DEBUG pix2 => pix2_27
  y_28 = y_41 + 1;
  # DEBUG y => y_28
  # DEBUG y => y_28
  # DEBUG i_sum => vect_i_sum_20.241_73
  # DEBUG pix2 => pix2_27
  # DEBUG pix1 => pix1_24
  ivtmp_55 = ivtmp_56 - 1;
  if (ivtmp_55 != 0)
    goto <bb 6>;
  else
    goto <bb 8>;

  <bb 6>:

  <bb 7>:
  # pix1_29 = PHI <pix1_24(6), pix1_7(D)(2)>
  # pix2_14 = PHI <pix2_27(6), pix2_8(D)(2)>
  # i_sum_39 = PHI <vect_i_sum_20.241_73(6), 0(2)>
  # y_41 = PHI <y_28(6), 0(2)>
  # ivtmp_56 = PHI <ivtmp_55(6), 16(2)>
  # DEBUG y => y_41
  # DEBUG i_sum => i_sum_39
  # DEBUG pix2 => pix2_14
  # DEBUG pix1 => pix1_29
  # DEBUG x => 0
  # DEBUG i_sum => i_sum_39
  vectp_pix1.227_54 = pix1_29;
  vectp_pix2.232_44 = pix2_14;
  goto <bb 4>;

  <bb 8>:
  # i_sum_59 = PHI <vect_i_sum_20.241_73(5)>
  return i_sum_59;

}



;; Function x264_pixel_ssd_16x8 (x264_pixel_ssd_16x8, funcdef_no=123, decl_uid=7611, cgraph_uid=123, symbol_order=166)


Analyzing loop at common/pixel.c:91
common/pixel.c:91:1: note: ===== analyze_loop_nest =====
common/pixel.c:91:1: note: === vect_analyze_loop_form ===
common/pixel.c:91:1: note: ===== analyze_loop_nest_1 =====
common/pixel.c:91:1: note: === vect_analyze_loop_form ===
common/pixel.c:91:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 2
  exit condition [15, + , 4294967295] != 0
  bounds on difference of bases: -15 ... -15
  result:
    # of iterations 15, bounded by 15
common/pixel.c:91:1: note: Considering outer-loop vectorization.
common/pixel.c:91:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 1
  exit condition [7, + , 4294967295] != 0
  bounds on difference of bases: -7 ... -7
  result:
    # of iterations 7, bounded by 7
common/pixel.c:91:1: note: === vect_analyze_data_refs ===
Creating dr for *_10
analyze_innermost: success.
	base_address: pix1_29
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix1_7(D)
	Access function 0: {{0B, +, pretmp_61}_1, +, 1}_2
Creating dr for *_15
analyze_innermost: success.
	base_address: pix2_14
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix2_8(D)
	Access function 0: {{0B, +, pretmp_62}_1, +, 1}_2
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:91:1: note: analyze in outer-loop: *pix1_29
common/pixel.c:91:1: note: failed: evolution of base is not affine.
common/pixel.c:91:1: note: bad data references.

Analyzing loop at common/pixel.c:91
common/pixel.c:91:1: note: ===== analyze_loop_nest =====
common/pixel.c:91:1: note: === vect_analyze_loop_form ===
common/pixel.c:91:1: note: === get_loop_niters ===
common/pixel.c:91:1: note: === vect_analyze_data_refs ===
Creating dr for *_10
analyze_innermost: success.
	base_address: pix1_29
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix1_29
	Access function 0: {0B, +, 1}_2
Creating dr for *_15
analyze_innermost: success.
	base_address: pix2_14
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix2_14
	Access function 0: {0B, +, 1}_2
common/pixel.c:91:1: note: got vectype for stmt: _12 = *_10;
vector(16) unsigned char
common/pixel.c:91:1: note: got vectype for stmt: _16 = *_15;
vector(16) unsigned char
common/pixel.c:91:1: note: === vect_analyze_scalar_cycles ===
common/pixel.c:91:1: note: Analyze phi: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>

common/pixel.c:91:1: note: Access function of PHI: {i_sum_39, +, _19}_2
common/pixel.c:91:1: note: step: _19,  init: i_sum_39
common/pixel.c:91:1: note: step unknown.
common/pixel.c:91:1: note: Analyze phi: x_40 = PHI <x_21(3), 0(7)>

common/pixel.c:91:1: note: Access function of PHI: {0, +, 1}_2
common/pixel.c:91:1: note: step: 1,  init: 0
common/pixel.c:91:1: note: Detected induction.
common/pixel.c:91:1: note: Analyze phi: ivtmp_58 = PHI <ivtmp_57(3), 16(7)>

common/pixel.c:91:1: note: Access function of PHI: {16, +, 4294967295}_2
common/pixel.c:91:1: note: step: 4294967295,  init: 16
common/pixel.c:91:1: note: Detected induction.
common/pixel.c:91:1: note: Analyze phi: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>

common/pixel.c:91:1: note: detected reduction: i_sum_20 = _19 + i_sum_38;

common/pixel.c:91:1: note: Detected reduction.
common/pixel.c:91:1: note: === vect_pattern_recog ===
common/pixel.c:91:1: note: vect_is_simple_use: operand d_18
common/pixel.c:91:1: note: def_stmt: d_18 = _13 - _17;
common/pixel.c:91:1: note: type of def: 3.
common/pixel.c:91:1: note: vect_is_simple_use: operand _19
common/pixel.c:91:1: note: def_stmt: _19 = d_18 * d_18;
common/pixel.c:91:1: note: type of def: 3.
common/pixel.c:91:1: note: vect_is_simple_use: operand _19
common/pixel.c:91:1: note: def_stmt: _19 = d_18 * d_18;
common/pixel.c:91:1: note: type of def: 3.
common/pixel.c:91:1: note: vect_is_simple_use: operand d_18
common/pixel.c:91:1: note: def_stmt: d_18 = _13 - _17;
common/pixel.c:91:1: note: type of def: 3.
common/pixel.c:91:1: note: vect_is_simple_use: operand _19
common/pixel.c:91:1: note: def_stmt: _19 = d_18 * d_18;
common/pixel.c:91:1: note: type of def: 3.
common/pixel.c:91:1: note: === vect_analyze_data_ref_accesses ===
common/pixel.c:91:1: note: === vect_mark_stmts_to_be_vectorized ===
common/pixel.c:91:1: note: init: phi relevant? i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>
common/pixel.c:91:1: note: init: phi relevant? x_40 = PHI <x_21(3), 0(7)>
common/pixel.c:91:1: note: init: phi relevant? ivtmp_58 = PHI <ivtmp_57(3), 16(7)>
common/pixel.c:91:1: note: init: stmt relevant? # DEBUG x => x_40
common/pixel.c:91:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_38
common/pixel.c:91:1: note: init: stmt relevant? _9 = (sizetype) x_40;
common/pixel.c:91:1: note: init: stmt relevant? _10 = pix1_29 + _9;
common/pixel.c:91:1: note: init: stmt relevant? _12 = *_10;
common/pixel.c:91:1: note: init: stmt relevant? _13 = (int) _12;
common/pixel.c:91:1: note: init: stmt relevant? _15 = pix2_14 + _9;
common/pixel.c:91:1: note: init: stmt relevant? _16 = *_15;
common/pixel.c:91:1: note: init: stmt relevant? _17 = (int) _16;
common/pixel.c:91:1: note: init: stmt relevant? d_18 = _13 - _17;
common/pixel.c:91:1: note: init: stmt relevant? # DEBUG d => d_18
common/pixel.c:91:1: note: init: stmt relevant? _19 = d_18 * d_18;
common/pixel.c:91:1: note: init: stmt relevant? i_sum_20 = _19 + i_sum_38;
common/pixel.c:91:1: note: vec_stmt_relevant_p: used out of loop.
common/pixel.c:91:1: note: mark relevant 0, live 1.
common/pixel.c:91:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_20
common/pixel.c:91:1: note: init: stmt relevant? x_21 = x_40 + 1;
common/pixel.c:91:1: note: init: stmt relevant? # DEBUG x => x_21
common/pixel.c:91:1: note: init: stmt relevant? # DEBUG x => x_21
common/pixel.c:91:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_20
common/pixel.c:91:1: note: init: stmt relevant? ivtmp_57 = ivtmp_58 - 1;
common/pixel.c:91:1: note: init: stmt relevant? if (ivtmp_57 != 0)
common/pixel.c:91:1: note: worklist: examine stmt: i_sum_20 = _19 + i_sum_38;
common/pixel.c:91:1: note: vect_is_simple_use: operand _19
common/pixel.c:91:1: note: def_stmt: _19 = d_18 * d_18;
common/pixel.c:91:1: note: type of def: 3.
common/pixel.c:91:1: note: mark relevant 3, live 0.
common/pixel.c:91:1: note: vect_is_simple_use: operand i_sum_38
common/pixel.c:91:1: note: def_stmt: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>
common/pixel.c:91:1: note: type of def: 5.
common/pixel.c:91:1: note: mark relevant 3, live 0.
common/pixel.c:91:1: note: worklist: examine stmt: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>
common/pixel.c:91:1: note: vect_is_simple_use: operand i_sum_20
common/pixel.c:91:1: note: def_stmt: i_sum_20 = _19 + i_sum_38;
common/pixel.c:91:1: note: type of def: 5.
common/pixel.c:91:1: note: reduc-stmt defining reduc-phi in the same nest.
common/pixel.c:91:1: note: vect_is_simple_use: operand i_sum_39
common/pixel.c:91:1: note: def_stmt: i_sum_39 = PHI <i_sum_60(6), 0(2)>
common/pixel.c:91:1: note: type of def: 2.
common/pixel.c:91:1: note: def_stmt is out of loop.
common/pixel.c:91:1: note: worklist: examine stmt: _19 = d_18 * d_18;
common/pixel.c:91:1: note: vect_is_simple_use: operand d_18
common/pixel.c:91:1: note: def_stmt: d_18 = _13 - _17;
common/pixel.c:91:1: note: type of def: 3.
common/pixel.c:91:1: note: mark relevant 3, live 0.
common/pixel.c:91:1: note: vect_is_simple_use: operand d_18
common/pixel.c:91:1: note: def_stmt: d_18 = _13 - _17;
common/pixel.c:91:1: note: type of def: 3.
common/pixel.c:91:1: note: mark relevant 3, live 0.
common/pixel.c:91:1: note: already marked relevant/live.
common/pixel.c:91:1: note: worklist: examine stmt: d_18 = _13 - _17;
common/pixel.c:91:1: note: vect_is_simple_use: operand _13
common/pixel.c:91:1: note: def_stmt: _13 = (int) _12;
common/pixel.c:91:1: note: type of def: 3.
common/pixel.c:91:1: note: mark relevant 3, live 0.
common/pixel.c:91:1: note: vect_is_simple_use: operand _17
common/pixel.c:91:1: note: def_stmt: _17 = (int) _16;
common/pixel.c:91:1: note: type of def: 3.
common/pixel.c:91:1: note: mark relevant 3, live 0.
common/pixel.c:91:1: note: worklist: examine stmt: _17 = (int) _16;
common/pixel.c:91:1: note: vect_is_simple_use: operand _16
common/pixel.c:91:1: note: def_stmt: _16 = *_15;
common/pixel.c:91:1: note: type of def: 3.
common/pixel.c:91:1: note: mark relevant 3, live 0.
common/pixel.c:91:1: note: worklist: examine stmt: _16 = *_15;
common/pixel.c:91:1: note: worklist: examine stmt: _13 = (int) _12;
common/pixel.c:91:1: note: vect_is_simple_use: operand _12
common/pixel.c:91:1: note: def_stmt: _12 = *_10;
common/pixel.c:91:1: note: type of def: 3.
common/pixel.c:91:1: note: mark relevant 3, live 0.
common/pixel.c:91:1: note: worklist: examine stmt: _12 = *_10;
common/pixel.c:91:1: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _12 = *_10;
  stmt_b: _16 = *_15;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _12 = *_10;
  stmt_b: _12 = *_10;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_2)
  (chrec_b = {0B, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _16 = *_15;
  stmt_b: _16 = *_15;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_2)
  (chrec_b = {0B, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/pixel.c:91:1: note: === vect_determine_vectorization_factor ===
common/pixel.c:91:1: note: ==> examining phi: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>

common/pixel.c:91:1: note: get vectype for scalar type:  int
common/pixel.c:91:1: note: vectype: vector(4) int
common/pixel.c:91:1: note: nunits = 4
common/pixel.c:91:1: note: ==> examining phi: x_40 = PHI <x_21(3), 0(7)>

common/pixel.c:91:1: note: ==> examining phi: ivtmp_58 = PHI <ivtmp_57(3), 16(7)>

common/pixel.c:91:1: note: ==> examining statement: # DEBUG x => x_40

common/pixel.c:91:1: note: skip.
common/pixel.c:91:1: note: ==> examining statement: # DEBUG i_sum => i_sum_38

common/pixel.c:91:1: note: skip.
common/pixel.c:91:1: note: ==> examining statement: _9 = (sizetype) x_40;

common/pixel.c:91:1: note: skip.
common/pixel.c:91:1: note: ==> examining statement: _10 = pix1_29 + _9;

common/pixel.c:91:1: note: skip.
common/pixel.c:91:1: note: ==> examining statement: _12 = *_10;

common/pixel.c:91:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:91:1: note: vectype: vector(16) unsigned char
common/pixel.c:91:1: note: nunits = 16
common/pixel.c:91:1: note: ==> examining statement: _13 = (int) _12;

common/pixel.c:91:1: note: get vectype for scalar type:  int
common/pixel.c:91:1: note: vectype: vector(4) int
common/pixel.c:91:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:91:1: note: vectype: vector(16) unsigned char
common/pixel.c:91:1: note: nunits = 16
common/pixel.c:91:1: note: ==> examining statement: _15 = pix2_14 + _9;

common/pixel.c:91:1: note: skip.
common/pixel.c:91:1: note: ==> examining statement: _16 = *_15;

common/pixel.c:91:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:91:1: note: vectype: vector(16) unsigned char
common/pixel.c:91:1: note: nunits = 16
common/pixel.c:91:1: note: ==> examining statement: _17 = (int) _16;

common/pixel.c:91:1: note: get vectype for scalar type:  int
common/pixel.c:91:1: note: vectype: vector(4) int
common/pixel.c:91:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:91:1: note: vectype: vector(16) unsigned char
common/pixel.c:91:1: note: nunits = 16
common/pixel.c:91:1: note: ==> examining statement: d_18 = _13 - _17;

common/pixel.c:91:1: note: get vectype for scalar type:  int
common/pixel.c:91:1: note: vectype: vector(4) int
common/pixel.c:91:1: note: get vectype for scalar type:  int
common/pixel.c:91:1: note: vectype: vector(4) int
common/pixel.c:91:1: note: nunits = 4
common/pixel.c:91:1: note: ==> examining statement: # DEBUG d => d_18

common/pixel.c:91:1: note: skip.
common/pixel.c:91:1: note: ==> examining statement: _19 = d_18 * d_18;

common/pixel.c:91:1: note: get vectype for scalar type:  int
common/pixel.c:91:1: note: vectype: vector(4) int
common/pixel.c:91:1: note: get vectype for scalar type:  int
common/pixel.c:91:1: note: vectype: vector(4) int
common/pixel.c:91:1: note: nunits = 4
common/pixel.c:91:1: note: ==> examining statement: i_sum_20 = _19 + i_sum_38;

common/pixel.c:91:1: note: get vectype for scalar type:  int
common/pixel.c:91:1: note: vectype: vector(4) int
common/pixel.c:91:1: note: get vectype for scalar type:  int
common/pixel.c:91:1: note: vectype: vector(4) int
common/pixel.c:91:1: note: nunits = 4
common/pixel.c:91:1: note: ==> examining statement: # DEBUG i_sum => i_sum_20

common/pixel.c:91:1: note: skip.
common/pixel.c:91:1: note: ==> examining statement: x_21 = x_40 + 1;

common/pixel.c:91:1: note: skip.
common/pixel.c:91:1: note: ==> examining statement: # DEBUG x => x_21

common/pixel.c:91:1: note: skip.
common/pixel.c:91:1: note: ==> examining statement: # DEBUG x => x_21

common/pixel.c:91:1: note: skip.
common/pixel.c:91:1: note: ==> examining statement: # DEBUG i_sum => i_sum_20

common/pixel.c:91:1: note: skip.
common/pixel.c:91:1: note: ==> examining statement: ivtmp_57 = ivtmp_58 - 1;

common/pixel.c:91:1: note: skip.
common/pixel.c:91:1: note: ==> examining statement: if (ivtmp_57 != 0)

common/pixel.c:91:1: note: skip.
common/pixel.c:91:1: note: vectorization factor = 16
common/pixel.c:91:1: note: === vect_analyze_data_refs_alignment ===
common/pixel.c:91:1: note: vect_compute_data_ref_alignment:
common/pixel.c:91:1: note: can't force alignment of ref: *_10
common/pixel.c:91:1: note: vect_compute_data_ref_alignment:
common/pixel.c:91:1: note: can't force alignment of ref: *_15
common/pixel.c:91:1: note: === vect_prune_runtime_alias_test_list ===
common/pixel.c:91:1: note: === vect_enhance_data_refs_alignment ===
common/pixel.c:91:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:91:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:91:1: note: vect_can_advance_ivs_p:
common/pixel.c:91:1: note: Analyze phi: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>

common/pixel.c:91:1: note: reduc phi. skip.
common/pixel.c:91:1: note: Analyze phi: x_40 = PHI <x_21(3), 0(7)>

common/pixel.c:91:1: note: Analyze phi: ivtmp_58 = PHI <ivtmp_57(3), 16(7)>

common/pixel.c:91:1: note: Vectorizing an unaligned access.
common/pixel.c:91:1: note: Vectorizing an unaligned access.
common/pixel.c:91:1: note: === vect_analyze_slp ===
common/pixel.c:91:1: note: === vect_make_slp_decision ===
common/pixel.c:91:1: note: === vect_detect_hybrid_slp ===
common/pixel.c:91:1: note: === vect_analyze_loop_operations ===
common/pixel.c:91:1: note: examining phi: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>

common/pixel.c:91:1: note: examining phi: x_40 = PHI <x_21(3), 0(7)>

common/pixel.c:91:1: note: examining phi: ivtmp_58 = PHI <ivtmp_57(3), 16(7)>

common/pixel.c:91:1: note: ==> examining statement: # DEBUG x => x_40
common/pixel.c:91:1: note: irrelevant.
common/pixel.c:91:1: note: ==> examining statement: # DEBUG i_sum => i_sum_38
common/pixel.c:91:1: note: irrelevant.
common/pixel.c:91:1: note: ==> examining statement: _9 = (sizetype) x_40;
common/pixel.c:91:1: note: irrelevant.
common/pixel.c:91:1: note: ==> examining statement: _10 = pix1_29 + _9;
common/pixel.c:91:1: note: irrelevant.
common/pixel.c:91:1: note: ==> examining statement: _12 = *_10;
common/pixel.c:91:1: note: vect_is_simple_use: operand *_10
common/pixel.c:91:1: note: not ssa-name.
common/pixel.c:91:1: note: use not simple.
common/pixel.c:91:1: note: vect_is_simple_use: operand *_10
common/pixel.c:91:1: note: not ssa-name.
common/pixel.c:91:1: note: use not simple.
common/pixel.c:91:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:91:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:91:1: note: ==> examining statement: _13 = (int) _12;
common/pixel.c:91:1: note: vect_is_simple_use: operand _12
common/pixel.c:91:1: note: def_stmt: _12 = *_10;
common/pixel.c:91:1: note: type of def: 3.
common/pixel.c:91:1: note: === vectorizable_conversion ===
common/pixel.c:91:1: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:91:1: note: ==> examining statement: _15 = pix2_14 + _9;
common/pixel.c:91:1: note: irrelevant.
common/pixel.c:91:1: note: ==> examining statement: _16 = *_15;
common/pixel.c:91:1: note: vect_is_simple_use: operand *_15
common/pixel.c:91:1: note: not ssa-name.
common/pixel.c:91:1: note: use not simple.
common/pixel.c:91:1: note: vect_is_simple_use: operand *_15
common/pixel.c:91:1: note: not ssa-name.
common/pixel.c:91:1: note: use not simple.
common/pixel.c:91:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:91:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:91:1: note: ==> examining statement: _17 = (int) _16;
common/pixel.c:91:1: note: vect_is_simple_use: operand _16
common/pixel.c:91:1: note: def_stmt: _16 = *_15;
common/pixel.c:91:1: note: type of def: 3.
common/pixel.c:91:1: note: === vectorizable_conversion ===
common/pixel.c:91:1: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:91:1: note: ==> examining statement: d_18 = _13 - _17;
common/pixel.c:91:1: note: vect_is_simple_use: operand _13
common/pixel.c:91:1: note: def_stmt: _13 = (int) _12;
common/pixel.c:91:1: note: type of def: 3.
common/pixel.c:91:1: note: vect_is_simple_use: operand _17
common/pixel.c:91:1: note: def_stmt: _17 = (int) _16;
common/pixel.c:91:1: note: type of def: 3.
common/pixel.c:91:1: note: === vectorizable_operation ===
common/pixel.c:91:1: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:91:1: note: ==> examining statement: # DEBUG d => d_18
common/pixel.c:91:1: note: irrelevant.
common/pixel.c:91:1: note: ==> examining statement: _19 = d_18 * d_18;
common/pixel.c:91:1: note: vect_is_simple_use: operand d_18
common/pixel.c:91:1: note: def_stmt: d_18 = _13 - _17;
common/pixel.c:91:1: note: type of def: 3.
common/pixel.c:91:1: note: vect_is_simple_use: operand d_18
common/pixel.c:91:1: note: def_stmt: d_18 = _13 - _17;
common/pixel.c:91:1: note: type of def: 3.
common/pixel.c:91:1: note: === vectorizable_operation ===
common/pixel.c:91:1: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:91:1: note: ==> examining statement: i_sum_20 = _19 + i_sum_38;
common/pixel.c:91:1: note: vect_is_simple_use: operand _19
common/pixel.c:91:1: note: def_stmt: _19 = d_18 * d_18;
common/pixel.c:91:1: note: type of def: 3.
common/pixel.c:91:1: note: vect_is_simple_use: operand i_sum_38
common/pixel.c:91:1: note: def_stmt: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>
common/pixel.c:91:1: note: type of def: 5.
common/pixel.c:91:1: note: detected reduction: i_sum_20 = _19 + i_sum_38;

common/pixel.c:91:1: note: reduc op not supported by target.
vect_model_reduction_cost: inside_cost = 4, prologue_cost = 1, epilogue_cost = 5 .
common/pixel.c:91:1: note: ==> examining statement: # DEBUG i_sum => i_sum_20
common/pixel.c:91:1: note: irrelevant.
common/pixel.c:91:1: note: ==> examining statement: x_21 = x_40 + 1;
common/pixel.c:91:1: note: irrelevant.
common/pixel.c:91:1: note: ==> examining statement: # DEBUG x => x_21
common/pixel.c:91:1: note: irrelevant.
common/pixel.c:91:1: note: ==> examining statement: # DEBUG x => x_21
common/pixel.c:91:1: note: irrelevant.
common/pixel.c:91:1: note: ==> examining statement: # DEBUG i_sum => i_sum_20
common/pixel.c:91:1: note: irrelevant.
common/pixel.c:91:1: note: ==> examining statement: ivtmp_57 = ivtmp_58 - 1;
common/pixel.c:91:1: note: irrelevant.
common/pixel.c:91:1: note: ==> examining statement: if (ivtmp_57 != 0)
common/pixel.c:91:1: note: irrelevant.
common/pixel.c:91:1: note: vectorization_factor = 16, niters = 16
common/pixel.c:91:1: note: === vect_update_slp_costs_according_to_vf ===
common/pixel.c:91:1: note: Cost model analysis: 
  Vector inside of loop cost: 28
  Vector prologue cost: 1
  Vector epilogue cost: 5
  Scalar iteration cost: 7
  Scalar outside cost: 0
  Vector outside cost: 6
  prologue iterations: 0
  epilogue iterations: 0
  Calculated minimum iters for profitability: 2
common/pixel.c:91:1: note:   Runtime profitability threshold = 15
common/pixel.c:91:1: note:   Static estimate profitability threshold = 15
common/pixel.c:91:1: note: loop vectorized
common/pixel.c:91:1: note: === vec_transform_loop ===
common/pixel.c:91:1: note: ------>vectorizing phi: i_sum_38 = PHI <i_sum_20(3), i_sum_39(9)>

common/pixel.c:91:1: note: multiple-types.
common/pixel.c:91:1: note: ------>vectorizing phi: x_40 = PHI <x_21(3), 0(9)>

common/pixel.c:91:1: note: ------>vectorizing phi: ivtmp_58 = PHI <ivtmp_57(3), 16(9)>

common/pixel.c:91:1: note: ------>vectorizing statement: # DEBUG x => x_40

common/pixel.c:91:1: note: ------>vectorizing statement: # DEBUG i_sum => i_sum_38

common/pixel.c:91:1: note: ------>vectorizing statement: _9 = (sizetype) x_40;

common/pixel.c:91:1: note: ------>vectorizing statement: _10 = pix1_29 + _9;

common/pixel.c:91:1: note: ------>vectorizing statement: _12 = *_10;

common/pixel.c:91:1: note: transform statement.
common/pixel.c:91:1: note: transform load. ncopies = 1
common/pixel.c:91:1: note: create vector_type-pointer variable to type: vector(16) unsigned char  vectorizing a pointer ref: *pix1_29
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:91:1: note: created vectp_pix1.256_54
common/pixel.c:91:1: note: add new stmt: vect__12.257_51 = MEM[(uint8_t *)vectp_pix1.255_53];
common/pixel.c:91:1: note: ------>vectorizing statement: _13 = (int) _12;

common/pixel.c:91:1: note: multiple-types.
common/pixel.c:91:1: note: transform statement.
common/pixel.c:91:1: note: vect_is_simple_use: operand _12
common/pixel.c:91:1: note: def_stmt: _12 = *_10;
common/pixel.c:91:1: note: type of def: 3.
common/pixel.c:91:1: note: transform conversion. ncopies = 1.
common/pixel.c:91:1: note: vect_get_vec_def_for_operand: _12
common/pixel.c:91:1: note: vect_is_simple_use: operand _12
common/pixel.c:91:1: note: def_stmt: _12 = *_10;
common/pixel.c:91:1: note: type of def: 3.
common/pixel.c:91:1: note: def =  _12
  def_stmt =  _12 = *_10;
common/pixel.c:91:1: note: add new stmt: vect__13.259_50 = [vec_unpack_lo_expr] vect__12.257_51;
common/pixel.c:91:1: note: add new stmt: vect__13.259_49 = [vec_unpack_hi_expr] vect__12.257_51;
common/pixel.c:91:1: note: add new stmt: vect__13.258_48 = [vec_unpack_lo_expr] vect__13.259_50;
common/pixel.c:91:1: note: add new stmt: vect__13.258_47 = [vec_unpack_hi_expr] vect__13.259_50;
common/pixel.c:91:1: note: add new stmt: vect__13.258_46 = [vec_unpack_lo_expr] vect__13.259_49;
common/pixel.c:91:1: note: add new stmt: vect__13.258_45 = [vec_unpack_hi_expr] vect__13.259_49;
common/pixel.c:91:1: note: ------>vectorizing statement: _15 = pix2_14 + _9;

common/pixel.c:91:1: note: ------>vectorizing statement: _16 = *_15;

common/pixel.c:91:1: note: transform statement.
common/pixel.c:91:1: note: transform load. ncopies = 1
common/pixel.c:91:1: note: create vector_type-pointer variable to type: vector(16) unsigned char  vectorizing a pointer ref: *pix2_14
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:91:1: note: created vectp_pix2.261_44
common/pixel.c:91:1: note: add new stmt: vect__16.262_37 = MEM[(uint8_t *)vectp_pix2.260_43];
common/pixel.c:91:1: note: ------>vectorizing statement: _17 = (int) _16;

common/pixel.c:91:1: note: multiple-types.
common/pixel.c:91:1: note: transform statement.
common/pixel.c:91:1: note: vect_is_simple_use: operand _16
common/pixel.c:91:1: note: def_stmt: _16 = *_15;
common/pixel.c:91:1: note: type of def: 3.
common/pixel.c:91:1: note: transform conversion. ncopies = 1.
common/pixel.c:91:1: note: vect_get_vec_def_for_operand: _16
common/pixel.c:91:1: note: vect_is_simple_use: operand _16
common/pixel.c:91:1: note: def_stmt: _16 = *_15;
common/pixel.c:91:1: note: type of def: 3.
common/pixel.c:91:1: note: def =  _16
  def_stmt =  _16 = *_15;
common/pixel.c:91:1: note: add new stmt: vect__17.264_36 = [vec_unpack_lo_expr] vect__16.262_37;
common/pixel.c:91:1: note: add new stmt: vect__17.264_35 = [vec_unpack_hi_expr] vect__16.262_37;
common/pixel.c:91:1: note: add new stmt: vect__17.263_34 = [vec_unpack_lo_expr] vect__17.264_36;
common/pixel.c:91:1: note: add new stmt: vect__17.263_33 = [vec_unpack_hi_expr] vect__17.264_36;
common/pixel.c:91:1: note: add new stmt: vect__17.263_32 = [vec_unpack_lo_expr] vect__17.264_35;
common/pixel.c:91:1: note: add new stmt: vect__17.263_31 = [vec_unpack_hi_expr] vect__17.264_35;
common/pixel.c:91:1: note: ------>vectorizing statement: d_18 = _13 - _17;

common/pixel.c:91:1: note: multiple-types.
common/pixel.c:91:1: note: transform statement.
common/pixel.c:91:1: note: vect_is_simple_use: operand _13
common/pixel.c:91:1: note: def_stmt: _13 = (int) _12;
common/pixel.c:91:1: note: type of def: 3.
common/pixel.c:91:1: note: vect_is_simple_use: operand _17
common/pixel.c:91:1: note: def_stmt: _17 = (int) _16;
common/pixel.c:91:1: note: type of def: 3.
common/pixel.c:91:1: note: transform binary/unary operation.
common/pixel.c:91:1: note: vect_get_vec_def_for_operand: _13
common/pixel.c:91:1: note: vect_is_simple_use: operand _13
common/pixel.c:91:1: note: def_stmt: _13 = (int) _12;
common/pixel.c:91:1: note: type of def: 3.
common/pixel.c:91:1: note: def =  _13
  def_stmt =  _13 = (int) _12;
common/pixel.c:91:1: note: vect_get_vec_def_for_operand: _17
common/pixel.c:91:1: note: vect_is_simple_use: operand _17
common/pixel.c:91:1: note: def_stmt: _17 = (int) _16;
common/pixel.c:91:1: note: type of def: 3.
common/pixel.c:91:1: note: def =  _17
  def_stmt =  _17 = (int) _16;
common/pixel.c:91:1: note: add new stmt: vect_d_18.265_30 = vect__13.258_48 - vect__17.263_34;
common/pixel.c:91:1: note: add new stmt: vect_d_18.265_6 = vect__13.258_47 - vect__17.263_33;
common/pixel.c:91:1: note: add new stmt: vect_d_18.265_5 = vect__13.258_46 - vect__17.263_32;
common/pixel.c:91:1: note: add new stmt: vect_d_18.265_4 = vect__13.258_45 - vect__17.263_31;
common/pixel.c:91:1: note: ------>vectorizing statement: # DEBUG d => d_18

common/pixel.c:91:1: note: ------>vectorizing statement: _19 = d_18 * d_18;

common/pixel.c:91:1: note: multiple-types.
common/pixel.c:91:1: note: transform statement.
common/pixel.c:91:1: note: vect_is_simple_use: operand d_18
common/pixel.c:91:1: note: def_stmt: d_18 = _13 - _17;
common/pixel.c:91:1: note: type of def: 3.
common/pixel.c:91:1: note: vect_is_simple_use: operand d_18
common/pixel.c:91:1: note: def_stmt: d_18 = _13 - _17;
common/pixel.c:91:1: note: type of def: 3.
common/pixel.c:91:1: note: transform binary/unary operation.
common/pixel.c:91:1: note: vect_get_vec_def_for_operand: d_18
common/pixel.c:91:1: note: vect_is_simple_use: operand d_18
common/pixel.c:91:1: note: def_stmt: d_18 = _13 - _17;
common/pixel.c:91:1: note: type of def: 3.
common/pixel.c:91:1: note: def =  d_18
  def_stmt =  d_18 = _13 - _17;
common/pixel.c:91:1: note: vect_get_vec_def_for_operand: d_18
common/pixel.c:91:1: note: vect_is_simple_use: operand d_18
common/pixel.c:91:1: note: def_stmt: d_18 = _13 - _17;
common/pixel.c:91:1: note: type of def: 3.
common/pixel.c:91:1: note: def =  d_18
  def_stmt =  d_18 = _13 - _17;
common/pixel.c:91:1: note: add new stmt: vect__19.266_3 = vect_d_18.265_30 * vect_d_18.265_30;
common/pixel.c:91:1: note: add new stmt: vect__19.266_2 = vect_d_18.265_6 * vect_d_18.265_6;
common/pixel.c:91:1: note: add new stmt: vect__19.266_1 = vect_d_18.265_5 * vect_d_18.265_5;
common/pixel.c:91:1: note: add new stmt: vect__19.266_65 = vect_d_18.265_4 * vect_d_18.265_4;
common/pixel.c:91:1: note: ------>vectorizing statement: i_sum_20 = _19 + i_sum_38;

common/pixel.c:91:1: note: multiple-types.
common/pixel.c:91:1: note: transform statement.
common/pixel.c:91:1: note: vect_is_simple_use: operand _19
common/pixel.c:91:1: note: def_stmt: _19 = d_18 * d_18;
common/pixel.c:91:1: note: type of def: 3.
common/pixel.c:91:1: note: vect_is_simple_use: operand i_sum_38
common/pixel.c:91:1: note: def_stmt: i_sum_38 = PHI <i_sum_20(3), i_sum_39(9)>
common/pixel.c:91:1: note: type of def: 5.
common/pixel.c:91:1: note: detected reduction: i_sum_20 = _19 + i_sum_38;

common/pixel.c:91:1: note: reduc op not supported by target.
common/pixel.c:91:1: note: transform reduction.
common/pixel.c:91:1: note: vect_get_vec_def_for_operand: _19
common/pixel.c:91:1: note: vect_is_simple_use: operand _19
common/pixel.c:91:1: note: def_stmt: _19 = d_18 * d_18;
common/pixel.c:91:1: note: type of def: 3.
common/pixel.c:91:1: note: def =  _19
  def_stmt =  _19 = d_18 * d_18;
common/pixel.c:91:1: note: add new stmt: vect_i_sum_20.267_63 = vect__19.266_3 + vect_i_sum_20.267_64;
common/pixel.c:91:1: note: vect_is_simple_use: operand _19
common/pixel.c:91:1: note: def_stmt: _19 = d_18 * d_18;
common/pixel.c:91:1: note: type of def: 3.
common/pixel.c:91:1: note: add new stmt: vect_i_sum_20.267_23 = vect__19.266_2 + vect_i_sum_20.267_63;
common/pixel.c:91:1: note: vect_is_simple_use: operand _19
common/pixel.c:91:1: note: def_stmt: _19 = d_18 * d_18;
common/pixel.c:91:1: note: type of def: 3.
common/pixel.c:91:1: note: add new stmt: vect_i_sum_20.267_26 = vect__19.266_1 + vect_i_sum_20.267_23;
common/pixel.c:91:1: note: vect_is_simple_use: operand _19
common/pixel.c:91:1: note: def_stmt: _19 = d_18 * d_18;
common/pixel.c:91:1: note: type of def: 3.
common/pixel.c:91:1: note: add new stmt: vect_i_sum_20.267_66 = vect__19.266_65 + vect_i_sum_20.267_26;
common/pixel.c:91:1: note: vect_is_simple_use: operand i_sum_39
common/pixel.c:91:1: note: def_stmt: i_sum_39 = PHI <i_sum_60(6), 0(2)>
common/pixel.c:91:1: note: type of def: 2.
common/pixel.c:91:1: note: vect_get_vec_def_for_operand: i_sum_38
common/pixel.c:91:1: note: vect_is_simple_use: operand i_sum_38
common/pixel.c:91:1: note: def_stmt: i_sum_38 = PHI <i_sum_20(3), i_sum_39(9)>
common/pixel.c:91:1: note: type of def: 5.
common/pixel.c:91:1: note: def =  i_sum_38
  def_stmt =  i_sum_38 = PHI <i_sum_20(3), i_sum_39(9)>
common/pixel.c:91:1: note: transform reduction: created def-use cycle: vect_i_sum_20.267_64 = PHI <vect_i_sum_20.267_66(3), { 0, 0, 0, 0 }(9)>

vect_i_sum_20.267_66 = vect__19.266_65 + vect_i_sum_20.267_26;

common/pixel.c:91:1: note: Reduce using vector shifts
common/pixel.c:91:1: note: extract scalar result
common/pixel.c:91:1: note: ------>vectorizing statement: # DEBUG i_sum => i_sum_20

common/pixel.c:91:1: note: ------>vectorizing statement: x_21 = x_40 + 1;

common/pixel.c:91:1: note: ------>vectorizing statement: # DEBUG x => x_21

common/pixel.c:91:1: note: ------>vectorizing statement: # DEBUG x => x_21

common/pixel.c:91:1: note: ------>vectorizing statement: # DEBUG i_sum => i_sum_20

common/pixel.c:91:1: note: ------>vectorizing statement: ivtmp_57 = ivtmp_58 - 1;

common/pixel.c:91:1: note: ------>vectorizing statement: vectp_pix1.255_52 = vectp_pix1.255_53 + 16;

common/pixel.c:91:1: note: ------>vectorizing statement: vectp_pix2.260_42 = vectp_pix2.260_43 + 16;

common/pixel.c:91:1: note: ------>vectorizing statement: if (ivtmp_57 != 0)


loop at common/pixel.c:91: if (ivtmp_75 < 1)

;; Scaling loop 2 with scale 0.062500, bounding iterations to 1 from guessed 16
;; guessed iterations are now 1
common/pixel.c:91:1: note: LOOP VECTORIZED

common/pixel.c:91:1: note: vectorized 1 loops in function.
Merging blocks 7 and 9
x264_pixel_ssd_16x8 (uint8_t * pix1, int i_stride_pix1, uint8_t * pix2, int i_stride_pix2)
{
  int vect_i_sum_20.270;
  vector(4) int vect_i_sum_20.269;
  int stmp_i_sum_20.268;
  vector(4) int vect_i_sum_20.267;
  vector(4) int vect__19.266;
  vector(4) int vect_d_18.265;
  vector(8) short unsigned int vect__17.264;
  vector(4) int vect__17.263;
  vector(16) unsigned char vect__16.262;
  vector(16) unsigned char * vectp_pix2.261;
  vector(16) unsigned char * vectp_pix2.260;
  vector(8) short unsigned int vect__13.259;
  vector(4) int vect__13.258;
  vector(16) unsigned char vect__12.257;
  vector(16) unsigned char * vectp_pix1.256;
  vector(16) unsigned char * vectp_pix1.255;
  int d;
  int y;
  int x;
  int i_sum;
  sizetype _9;
  uint8_t * _10;
  unsigned char _12;
  int _13;
  uint8_t * _15;
  unsigned char _16;
  int _17;
  int _19;
  unsigned int ivtmp_55;
  unsigned int ivtmp_56;
  unsigned int ivtmp_57;
  unsigned int ivtmp_58;
  sizetype pretmp_61;
  sizetype pretmp_62;
  unsigned int ivtmp_74;
  unsigned int ivtmp_75;

  <bb 2>:
  # DEBUG i_sum => 0
  # DEBUG y => 0
  # DEBUG y => 0
  # DEBUG i_sum => 0
  # DEBUG pix2 => pix2_8(D)
  # DEBUG pix1 => pix1_7(D)
  pretmp_61 = (sizetype) i_stride_pix1_22(D);
  pretmp_62 = (sizetype) i_stride_pix2_25(D);
  goto <bb 7>;

  <bb 3>:

  <bb 4>:
  # i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>
  # x_40 = PHI <x_21(3), 0(7)>
  # ivtmp_58 = PHI <ivtmp_57(3), 16(7)>
  # vectp_pix1.255_53 = PHI <vectp_pix1.255_52(3), vectp_pix1.256_54(7)>
  # vectp_pix2.260_43 = PHI <vectp_pix2.260_42(3), vectp_pix2.261_44(7)>
  # vect_i_sum_20.267_64 = PHI <vect_i_sum_20.267_66(3), { 0, 0, 0, 0 }(7)>
  # ivtmp_74 = PHI <ivtmp_75(3), 0(7)>
  # DEBUG x => x_40
  # DEBUG i_sum => i_sum_38
  _9 = (sizetype) x_40;
  _10 = pix1_29 + _9;
  vect__12.257_51 = MEM[(uint8_t *)vectp_pix1.255_53];
  _12 = *_10;
  vect__13.259_50 = [vec_unpack_lo_expr] vect__12.257_51;
  vect__13.259_49 = [vec_unpack_hi_expr] vect__12.257_51;
  vect__13.258_48 = [vec_unpack_lo_expr] vect__13.259_50;
  vect__13.258_47 = [vec_unpack_hi_expr] vect__13.259_50;
  vect__13.258_46 = [vec_unpack_lo_expr] vect__13.259_49;
  vect__13.258_45 = [vec_unpack_hi_expr] vect__13.259_49;
  _13 = (int) _12;
  _15 = pix2_14 + _9;
  vect__16.262_37 = MEM[(uint8_t *)vectp_pix2.260_43];
  _16 = *_15;
  vect__17.264_36 = [vec_unpack_lo_expr] vect__16.262_37;
  vect__17.264_35 = [vec_unpack_hi_expr] vect__16.262_37;
  vect__17.263_34 = [vec_unpack_lo_expr] vect__17.264_36;
  vect__17.263_33 = [vec_unpack_hi_expr] vect__17.264_36;
  vect__17.263_32 = [vec_unpack_lo_expr] vect__17.264_35;
  vect__17.263_31 = [vec_unpack_hi_expr] vect__17.264_35;
  _17 = (int) _16;
  vect_d_18.265_30 = vect__13.258_48 - vect__17.263_34;
  vect_d_18.265_6 = vect__13.258_47 - vect__17.263_33;
  vect_d_18.265_5 = vect__13.258_46 - vect__17.263_32;
  vect_d_18.265_4 = vect__13.258_45 - vect__17.263_31;
  d_18 = _13 - _17;
  # DEBUG d => d_18
  vect__19.266_3 = vect_d_18.265_30 * vect_d_18.265_30;
  vect__19.266_2 = vect_d_18.265_6 * vect_d_18.265_6;
  vect__19.266_1 = vect_d_18.265_5 * vect_d_18.265_5;
  vect__19.266_65 = vect_d_18.265_4 * vect_d_18.265_4;
  _19 = d_18 * d_18;
  vect_i_sum_20.267_63 = vect__19.266_3 + vect_i_sum_20.267_64;
  vect_i_sum_20.267_23 = vect__19.266_2 + vect_i_sum_20.267_63;
  vect_i_sum_20.267_26 = vect__19.266_1 + vect_i_sum_20.267_23;
  vect_i_sum_20.267_66 = vect__19.266_65 + vect_i_sum_20.267_26;
  i_sum_20 = _19 + i_sum_38;
  # DEBUG i_sum => i_sum_20
  x_21 = x_40 + 1;
  # DEBUG x => x_21
  # DEBUG x => x_21
  # DEBUG i_sum => i_sum_20
  ivtmp_57 = ivtmp_58 - 1;
  vectp_pix1.255_52 = vectp_pix1.255_53 + 16;
  vectp_pix2.260_42 = vectp_pix2.260_43 + 16;
  ivtmp_75 = ivtmp_74 + 1;
  if (ivtmp_75 < 1)
    goto <bb 3>;
  else
    goto <bb 5>;

  <bb 5>:
  # i_sum_60 = PHI <i_sum_20(4)>
  # vect_i_sum_20.267_67 = PHI <vect_i_sum_20.267_66(4)>
  vect_i_sum_20.269_68 = VEC_PERM_EXPR <vect_i_sum_20.267_67, { 0, 0, 0, 0 }, { 2, 3, 4, 5 }>;
  vect_i_sum_20.269_69 = vect_i_sum_20.269_68 + vect_i_sum_20.267_67;
  vect_i_sum_20.269_70 = VEC_PERM_EXPR <vect_i_sum_20.269_69, { 0, 0, 0, 0 }, { 1, 2, 3, 4 }>;
  vect_i_sum_20.269_71 = vect_i_sum_20.269_70 + vect_i_sum_20.269_69;
  stmp_i_sum_20.268_72 = BIT_FIELD_REF <vect_i_sum_20.269_71, 32, 0>;
  vect_i_sum_20.270_73 = stmp_i_sum_20.268_72 + i_sum_39;
  pix1_24 = pix1_29 + pretmp_61;
  # DEBUG pix1 => pix1_24
  pix2_27 = pix2_14 + pretmp_62;
  # DEBUG pix2 => pix2_27
  y_28 = y_41 + 1;
  # DEBUG y => y_28
  # DEBUG y => y_28
  # DEBUG i_sum => vect_i_sum_20.270_73
  # DEBUG pix2 => pix2_27
  # DEBUG pix1 => pix1_24
  ivtmp_55 = ivtmp_56 - 1;
  if (ivtmp_55 != 0)
    goto <bb 6>;
  else
    goto <bb 8>;

  <bb 6>:

  <bb 7>:
  # pix1_29 = PHI <pix1_24(6), pix1_7(D)(2)>
  # pix2_14 = PHI <pix2_27(6), pix2_8(D)(2)>
  # i_sum_39 = PHI <vect_i_sum_20.270_73(6), 0(2)>
  # y_41 = PHI <y_28(6), 0(2)>
  # ivtmp_56 = PHI <ivtmp_55(6), 8(2)>
  # DEBUG y => y_41
  # DEBUG i_sum => i_sum_39
  # DEBUG pix2 => pix2_14
  # DEBUG pix1 => pix1_29
  # DEBUG x => 0
  # DEBUG i_sum => i_sum_39
  vectp_pix1.256_54 = pix1_29;
  vectp_pix2.261_44 = pix2_14;
  goto <bb 4>;

  <bb 8>:
  # i_sum_59 = PHI <vect_i_sum_20.270_73(5)>
  return i_sum_59;

}



;; Function x264_pixel_ssd_8x16 (x264_pixel_ssd_8x16, funcdef_no=124, decl_uid=7627, cgraph_uid=124, symbol_order=167)


Analyzing loop at common/pixel.c:92
common/pixel.c:92:1: note: ===== analyze_loop_nest =====
common/pixel.c:92:1: note: === vect_analyze_loop_form ===
common/pixel.c:92:1: note: ===== analyze_loop_nest_1 =====
common/pixel.c:92:1: note: === vect_analyze_loop_form ===
common/pixel.c:92:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 2
  exit condition [7, + , 4294967295] != 0
  bounds on difference of bases: -7 ... -7
  result:
    # of iterations 7, bounded by 7
common/pixel.c:92:1: note: Considering outer-loop vectorization.
common/pixel.c:92:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 1
  exit condition [15, + , 4294967295] != 0
  bounds on difference of bases: -15 ... -15
  result:
    # of iterations 15, bounded by 15
common/pixel.c:92:1: note: === vect_analyze_data_refs ===
Creating dr for *_10
analyze_innermost: success.
	base_address: pix1_29
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix1_7(D)
	Access function 0: {{0B, +, pretmp_61}_1, +, 1}_2
Creating dr for *_15
analyze_innermost: success.
	base_address: pix2_14
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix2_8(D)
	Access function 0: {{0B, +, pretmp_62}_1, +, 1}_2
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:92:1: note: analyze in outer-loop: *pix1_29
common/pixel.c:92:1: note: failed: evolution of base is not affine.
common/pixel.c:92:1: note: bad data references.

Analyzing loop at common/pixel.c:92
common/pixel.c:92:1: note: ===== analyze_loop_nest =====
common/pixel.c:92:1: note: === vect_analyze_loop_form ===
common/pixel.c:92:1: note: === get_loop_niters ===
common/pixel.c:92:1: note: === vect_analyze_data_refs ===
Creating dr for *_10
analyze_innermost: success.
	base_address: pix1_29
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix1_29
	Access function 0: {0B, +, 1}_2
Creating dr for *_15
analyze_innermost: success.
	base_address: pix2_14
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix2_14
	Access function 0: {0B, +, 1}_2
common/pixel.c:92:1: note: got vectype for stmt: _12 = *_10;
vector(16) unsigned char
common/pixel.c:92:1: note: got vectype for stmt: _16 = *_15;
vector(16) unsigned char
common/pixel.c:92:1: note: === vect_analyze_scalar_cycles ===
common/pixel.c:92:1: note: Analyze phi: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>

common/pixel.c:92:1: note: Access function of PHI: {i_sum_39, +, _19}_2
common/pixel.c:92:1: note: step: _19,  init: i_sum_39
common/pixel.c:92:1: note: step unknown.
common/pixel.c:92:1: note: Analyze phi: x_40 = PHI <x_21(3), 0(7)>

common/pixel.c:92:1: note: Access function of PHI: {0, +, 1}_2
common/pixel.c:92:1: note: step: 1,  init: 0
common/pixel.c:92:1: note: Detected induction.
common/pixel.c:92:1: note: Analyze phi: ivtmp_58 = PHI <ivtmp_57(3), 8(7)>

common/pixel.c:92:1: note: Access function of PHI: {8, +, 4294967295}_2
common/pixel.c:92:1: note: step: 4294967295,  init: 8
common/pixel.c:92:1: note: Detected induction.
common/pixel.c:92:1: note: Analyze phi: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>

common/pixel.c:92:1: note: detected reduction: i_sum_20 = _19 + i_sum_38;

common/pixel.c:92:1: note: Detected reduction.
common/pixel.c:92:1: note: === vect_pattern_recog ===
common/pixel.c:92:1: note: vect_is_simple_use: operand d_18
common/pixel.c:92:1: note: def_stmt: d_18 = _13 - _17;
common/pixel.c:92:1: note: type of def: 3.
common/pixel.c:92:1: note: vect_is_simple_use: operand _19
common/pixel.c:92:1: note: def_stmt: _19 = d_18 * d_18;
common/pixel.c:92:1: note: type of def: 3.
common/pixel.c:92:1: note: vect_is_simple_use: operand _19
common/pixel.c:92:1: note: def_stmt: _19 = d_18 * d_18;
common/pixel.c:92:1: note: type of def: 3.
common/pixel.c:92:1: note: vect_is_simple_use: operand d_18
common/pixel.c:92:1: note: def_stmt: d_18 = _13 - _17;
common/pixel.c:92:1: note: type of def: 3.
common/pixel.c:92:1: note: vect_is_simple_use: operand _19
common/pixel.c:92:1: note: def_stmt: _19 = d_18 * d_18;
common/pixel.c:92:1: note: type of def: 3.
common/pixel.c:92:1: note: === vect_analyze_data_ref_accesses ===
common/pixel.c:92:1: note: === vect_mark_stmts_to_be_vectorized ===
common/pixel.c:92:1: note: init: phi relevant? i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>
common/pixel.c:92:1: note: init: phi relevant? x_40 = PHI <x_21(3), 0(7)>
common/pixel.c:92:1: note: init: phi relevant? ivtmp_58 = PHI <ivtmp_57(3), 8(7)>
common/pixel.c:92:1: note: init: stmt relevant? # DEBUG x => x_40
common/pixel.c:92:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_38
common/pixel.c:92:1: note: init: stmt relevant? _9 = (sizetype) x_40;
common/pixel.c:92:1: note: init: stmt relevant? _10 = pix1_29 + _9;
common/pixel.c:92:1: note: init: stmt relevant? _12 = *_10;
common/pixel.c:92:1: note: init: stmt relevant? _13 = (int) _12;
common/pixel.c:92:1: note: init: stmt relevant? _15 = pix2_14 + _9;
common/pixel.c:92:1: note: init: stmt relevant? _16 = *_15;
common/pixel.c:92:1: note: init: stmt relevant? _17 = (int) _16;
common/pixel.c:92:1: note: init: stmt relevant? d_18 = _13 - _17;
common/pixel.c:92:1: note: init: stmt relevant? # DEBUG d => d_18
common/pixel.c:92:1: note: init: stmt relevant? _19 = d_18 * d_18;
common/pixel.c:92:1: note: init: stmt relevant? i_sum_20 = _19 + i_sum_38;
common/pixel.c:92:1: note: vec_stmt_relevant_p: used out of loop.
common/pixel.c:92:1: note: mark relevant 0, live 1.
common/pixel.c:92:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_20
common/pixel.c:92:1: note: init: stmt relevant? x_21 = x_40 + 1;
common/pixel.c:92:1: note: init: stmt relevant? # DEBUG x => x_21
common/pixel.c:92:1: note: init: stmt relevant? # DEBUG x => x_21
common/pixel.c:92:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_20
common/pixel.c:92:1: note: init: stmt relevant? ivtmp_57 = ivtmp_58 - 1;
common/pixel.c:92:1: note: init: stmt relevant? if (ivtmp_57 != 0)
common/pixel.c:92:1: note: worklist: examine stmt: i_sum_20 = _19 + i_sum_38;
common/pixel.c:92:1: note: vect_is_simple_use: operand _19
common/pixel.c:92:1: note: def_stmt: _19 = d_18 * d_18;
common/pixel.c:92:1: note: type of def: 3.
common/pixel.c:92:1: note: mark relevant 3, live 0.
common/pixel.c:92:1: note: vect_is_simple_use: operand i_sum_38
common/pixel.c:92:1: note: def_stmt: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>
common/pixel.c:92:1: note: type of def: 5.
common/pixel.c:92:1: note: mark relevant 3, live 0.
common/pixel.c:92:1: note: worklist: examine stmt: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>
common/pixel.c:92:1: note: vect_is_simple_use: operand i_sum_20
common/pixel.c:92:1: note: def_stmt: i_sum_20 = _19 + i_sum_38;
common/pixel.c:92:1: note: type of def: 5.
common/pixel.c:92:1: note: reduc-stmt defining reduc-phi in the same nest.
common/pixel.c:92:1: note: vect_is_simple_use: operand i_sum_39
common/pixel.c:92:1: note: def_stmt: i_sum_39 = PHI <i_sum_60(6), 0(2)>
common/pixel.c:92:1: note: type of def: 2.
common/pixel.c:92:1: note: def_stmt is out of loop.
common/pixel.c:92:1: note: worklist: examine stmt: _19 = d_18 * d_18;
common/pixel.c:92:1: note: vect_is_simple_use: operand d_18
common/pixel.c:92:1: note: def_stmt: d_18 = _13 - _17;
common/pixel.c:92:1: note: type of def: 3.
common/pixel.c:92:1: note: mark relevant 3, live 0.
common/pixel.c:92:1: note: vect_is_simple_use: operand d_18
common/pixel.c:92:1: note: def_stmt: d_18 = _13 - _17;
common/pixel.c:92:1: note: type of def: 3.
common/pixel.c:92:1: note: mark relevant 3, live 0.
common/pixel.c:92:1: note: already marked relevant/live.
common/pixel.c:92:1: note: worklist: examine stmt: d_18 = _13 - _17;
common/pixel.c:92:1: note: vect_is_simple_use: operand _13
common/pixel.c:92:1: note: def_stmt: _13 = (int) _12;
common/pixel.c:92:1: note: type of def: 3.
common/pixel.c:92:1: note: mark relevant 3, live 0.
common/pixel.c:92:1: note: vect_is_simple_use: operand _17
common/pixel.c:92:1: note: def_stmt: _17 = (int) _16;
common/pixel.c:92:1: note: type of def: 3.
common/pixel.c:92:1: note: mark relevant 3, live 0.
common/pixel.c:92:1: note: worklist: examine stmt: _17 = (int) _16;
common/pixel.c:92:1: note: vect_is_simple_use: operand _16
common/pixel.c:92:1: note: def_stmt: _16 = *_15;
common/pixel.c:92:1: note: type of def: 3.
common/pixel.c:92:1: note: mark relevant 3, live 0.
common/pixel.c:92:1: note: worklist: examine stmt: _16 = *_15;
common/pixel.c:92:1: note: worklist: examine stmt: _13 = (int) _12;
common/pixel.c:92:1: note: vect_is_simple_use: operand _12
common/pixel.c:92:1: note: def_stmt: _12 = *_10;
common/pixel.c:92:1: note: type of def: 3.
common/pixel.c:92:1: note: mark relevant 3, live 0.
common/pixel.c:92:1: note: worklist: examine stmt: _12 = *_10;
common/pixel.c:92:1: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _12 = *_10;
  stmt_b: _16 = *_15;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _12 = *_10;
  stmt_b: _12 = *_10;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_2)
  (chrec_b = {0B, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _16 = *_15;
  stmt_b: _16 = *_15;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_2)
  (chrec_b = {0B, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/pixel.c:92:1: note: === vect_determine_vectorization_factor ===
common/pixel.c:92:1: note: ==> examining phi: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>

common/pixel.c:92:1: note: get vectype for scalar type:  int
common/pixel.c:92:1: note: vectype: vector(4) int
common/pixel.c:92:1: note: nunits = 4
common/pixel.c:92:1: note: ==> examining phi: x_40 = PHI <x_21(3), 0(7)>

common/pixel.c:92:1: note: ==> examining phi: ivtmp_58 = PHI <ivtmp_57(3), 8(7)>

common/pixel.c:92:1: note: ==> examining statement: # DEBUG x => x_40

common/pixel.c:92:1: note: skip.
common/pixel.c:92:1: note: ==> examining statement: # DEBUG i_sum => i_sum_38

common/pixel.c:92:1: note: skip.
common/pixel.c:92:1: note: ==> examining statement: _9 = (sizetype) x_40;

common/pixel.c:92:1: note: skip.
common/pixel.c:92:1: note: ==> examining statement: _10 = pix1_29 + _9;

common/pixel.c:92:1: note: skip.
common/pixel.c:92:1: note: ==> examining statement: _12 = *_10;

common/pixel.c:92:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:92:1: note: vectype: vector(16) unsigned char
common/pixel.c:92:1: note: nunits = 16
common/pixel.c:92:1: note: ==> examining statement: _13 = (int) _12;

common/pixel.c:92:1: note: get vectype for scalar type:  int
common/pixel.c:92:1: note: vectype: vector(4) int
common/pixel.c:92:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:92:1: note: vectype: vector(16) unsigned char
common/pixel.c:92:1: note: nunits = 16
common/pixel.c:92:1: note: ==> examining statement: _15 = pix2_14 + _9;

common/pixel.c:92:1: note: skip.
common/pixel.c:92:1: note: ==> examining statement: _16 = *_15;

common/pixel.c:92:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:92:1: note: vectype: vector(16) unsigned char
common/pixel.c:92:1: note: nunits = 16
common/pixel.c:92:1: note: ==> examining statement: _17 = (int) _16;

common/pixel.c:92:1: note: get vectype for scalar type:  int
common/pixel.c:92:1: note: vectype: vector(4) int
common/pixel.c:92:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:92:1: note: vectype: vector(16) unsigned char
common/pixel.c:92:1: note: nunits = 16
common/pixel.c:92:1: note: ==> examining statement: d_18 = _13 - _17;

common/pixel.c:92:1: note: get vectype for scalar type:  int
common/pixel.c:92:1: note: vectype: vector(4) int
common/pixel.c:92:1: note: get vectype for scalar type:  int
common/pixel.c:92:1: note: vectype: vector(4) int
common/pixel.c:92:1: note: nunits = 4
common/pixel.c:92:1: note: ==> examining statement: # DEBUG d => d_18

common/pixel.c:92:1: note: skip.
common/pixel.c:92:1: note: ==> examining statement: _19 = d_18 * d_18;

common/pixel.c:92:1: note: get vectype for scalar type:  int
common/pixel.c:92:1: note: vectype: vector(4) int
common/pixel.c:92:1: note: get vectype for scalar type:  int
common/pixel.c:92:1: note: vectype: vector(4) int
common/pixel.c:92:1: note: nunits = 4
common/pixel.c:92:1: note: ==> examining statement: i_sum_20 = _19 + i_sum_38;

common/pixel.c:92:1: note: get vectype for scalar type:  int
common/pixel.c:92:1: note: vectype: vector(4) int
common/pixel.c:92:1: note: get vectype for scalar type:  int
common/pixel.c:92:1: note: vectype: vector(4) int
common/pixel.c:92:1: note: nunits = 4
common/pixel.c:92:1: note: ==> examining statement: # DEBUG i_sum => i_sum_20

common/pixel.c:92:1: note: skip.
common/pixel.c:92:1: note: ==> examining statement: x_21 = x_40 + 1;

common/pixel.c:92:1: note: skip.
common/pixel.c:92:1: note: ==> examining statement: # DEBUG x => x_21

common/pixel.c:92:1: note: skip.
common/pixel.c:92:1: note: ==> examining statement: # DEBUG x => x_21

common/pixel.c:92:1: note: skip.
common/pixel.c:92:1: note: ==> examining statement: # DEBUG i_sum => i_sum_20

common/pixel.c:92:1: note: skip.
common/pixel.c:92:1: note: ==> examining statement: ivtmp_57 = ivtmp_58 - 1;

common/pixel.c:92:1: note: skip.
common/pixel.c:92:1: note: ==> examining statement: if (ivtmp_57 != 0)

common/pixel.c:92:1: note: skip.
common/pixel.c:92:1: note: vectorization factor = 16
common/pixel.c:92:1: note: === vect_analyze_data_refs_alignment ===
common/pixel.c:92:1: note: vect_compute_data_ref_alignment:
common/pixel.c:92:1: note: can't force alignment of ref: *_10
common/pixel.c:92:1: note: vect_compute_data_ref_alignment:
common/pixel.c:92:1: note: can't force alignment of ref: *_15
common/pixel.c:92:1: note: === vect_prune_runtime_alias_test_list ===
common/pixel.c:92:1: note: === vect_enhance_data_refs_alignment ===
common/pixel.c:92:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:92:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:92:1: note: vect_can_advance_ivs_p:
common/pixel.c:92:1: note: Analyze phi: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>

common/pixel.c:92:1: note: reduc phi. skip.
common/pixel.c:92:1: note: Analyze phi: x_40 = PHI <x_21(3), 0(7)>

common/pixel.c:92:1: note: Analyze phi: ivtmp_58 = PHI <ivtmp_57(3), 8(7)>

common/pixel.c:92:1: note: Vectorizing an unaligned access.
common/pixel.c:92:1: note: Vectorizing an unaligned access.
common/pixel.c:92:1: note: === vect_analyze_slp ===
common/pixel.c:92:1: note: === vect_make_slp_decision ===
common/pixel.c:92:1: note: === vect_detect_hybrid_slp ===
common/pixel.c:92:1: note: === vect_analyze_loop_operations ===
common/pixel.c:92:1: note: examining phi: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>

common/pixel.c:92:1: note: examining phi: x_40 = PHI <x_21(3), 0(7)>

common/pixel.c:92:1: note: examining phi: ivtmp_58 = PHI <ivtmp_57(3), 8(7)>

common/pixel.c:92:1: note: ==> examining statement: # DEBUG x => x_40
common/pixel.c:92:1: note: irrelevant.
common/pixel.c:92:1: note: ==> examining statement: # DEBUG i_sum => i_sum_38
common/pixel.c:92:1: note: irrelevant.
common/pixel.c:92:1: note: ==> examining statement: _9 = (sizetype) x_40;
common/pixel.c:92:1: note: irrelevant.
common/pixel.c:92:1: note: ==> examining statement: _10 = pix1_29 + _9;
common/pixel.c:92:1: note: irrelevant.
common/pixel.c:92:1: note: ==> examining statement: _12 = *_10;
common/pixel.c:92:1: note: vect_is_simple_use: operand *_10
common/pixel.c:92:1: note: not ssa-name.
common/pixel.c:92:1: note: use not simple.
common/pixel.c:92:1: note: vect_is_simple_use: operand *_10
common/pixel.c:92:1: note: not ssa-name.
common/pixel.c:92:1: note: use not simple.
common/pixel.c:92:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:92:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:92:1: note: ==> examining statement: _13 = (int) _12;
common/pixel.c:92:1: note: vect_is_simple_use: operand _12
common/pixel.c:92:1: note: def_stmt: _12 = *_10;
common/pixel.c:92:1: note: type of def: 3.
common/pixel.c:92:1: note: === vectorizable_conversion ===
common/pixel.c:92:1: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:92:1: note: ==> examining statement: _15 = pix2_14 + _9;
common/pixel.c:92:1: note: irrelevant.
common/pixel.c:92:1: note: ==> examining statement: _16 = *_15;
common/pixel.c:92:1: note: vect_is_simple_use: operand *_15
common/pixel.c:92:1: note: not ssa-name.
common/pixel.c:92:1: note: use not simple.
common/pixel.c:92:1: note: vect_is_simple_use: operand *_15
common/pixel.c:92:1: note: not ssa-name.
common/pixel.c:92:1: note: use not simple.
common/pixel.c:92:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:92:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:92:1: note: ==> examining statement: _17 = (int) _16;
common/pixel.c:92:1: note: vect_is_simple_use: operand _16
common/pixel.c:92:1: note: def_stmt: _16 = *_15;
common/pixel.c:92:1: note: type of def: 3.
common/pixel.c:92:1: note: === vectorizable_conversion ===
common/pixel.c:92:1: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:92:1: note: ==> examining statement: d_18 = _13 - _17;
common/pixel.c:92:1: note: vect_is_simple_use: operand _13
common/pixel.c:92:1: note: def_stmt: _13 = (int) _12;
common/pixel.c:92:1: note: type of def: 3.
common/pixel.c:92:1: note: vect_is_simple_use: operand _17
common/pixel.c:92:1: note: def_stmt: _17 = (int) _16;
common/pixel.c:92:1: note: type of def: 3.
common/pixel.c:92:1: note: === vectorizable_operation ===
common/pixel.c:92:1: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:92:1: note: ==> examining statement: # DEBUG d => d_18
common/pixel.c:92:1: note: irrelevant.
common/pixel.c:92:1: note: ==> examining statement: _19 = d_18 * d_18;
common/pixel.c:92:1: note: vect_is_simple_use: operand d_18
common/pixel.c:92:1: note: def_stmt: d_18 = _13 - _17;
common/pixel.c:92:1: note: type of def: 3.
common/pixel.c:92:1: note: vect_is_simple_use: operand d_18
common/pixel.c:92:1: note: def_stmt: d_18 = _13 - _17;
common/pixel.c:92:1: note: type of def: 3.
common/pixel.c:92:1: note: === vectorizable_operation ===
common/pixel.c:92:1: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:92:1: note: ==> examining statement: i_sum_20 = _19 + i_sum_38;
common/pixel.c:92:1: note: vect_is_simple_use: operand _19
common/pixel.c:92:1: note: def_stmt: _19 = d_18 * d_18;
common/pixel.c:92:1: note: type of def: 3.
common/pixel.c:92:1: note: vect_is_simple_use: operand i_sum_38
common/pixel.c:92:1: note: def_stmt: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>
common/pixel.c:92:1: note: type of def: 5.
common/pixel.c:92:1: note: detected reduction: i_sum_20 = _19 + i_sum_38;

common/pixel.c:92:1: note: reduc op not supported by target.
vect_model_reduction_cost: inside_cost = 4, prologue_cost = 1, epilogue_cost = 5 .
common/pixel.c:92:1: note: ==> examining statement: # DEBUG i_sum => i_sum_20
common/pixel.c:92:1: note: irrelevant.
common/pixel.c:92:1: note: ==> examining statement: x_21 = x_40 + 1;
common/pixel.c:92:1: note: irrelevant.
common/pixel.c:92:1: note: ==> examining statement: # DEBUG x => x_21
common/pixel.c:92:1: note: irrelevant.
common/pixel.c:92:1: note: ==> examining statement: # DEBUG x => x_21
common/pixel.c:92:1: note: irrelevant.
common/pixel.c:92:1: note: ==> examining statement: # DEBUG i_sum => i_sum_20
common/pixel.c:92:1: note: irrelevant.
common/pixel.c:92:1: note: ==> examining statement: ivtmp_57 = ivtmp_58 - 1;
common/pixel.c:92:1: note: irrelevant.
common/pixel.c:92:1: note: ==> examining statement: if (ivtmp_57 != 0)
common/pixel.c:92:1: note: irrelevant.
common/pixel.c:92:1: note: vectorization_factor = 16, niters = 8
common/pixel.c:92:1: note: not vectorized: iteration count too small.
common/pixel.c:92:1: note: not vectorized: iteration count smaller than vectorization factor.
common/pixel.c:92:1: note: bad operation or unsupported loop bound.
common/pixel.c:92:1: note: vectorized 0 loops in function.
x264_pixel_ssd_8x16 (uint8_t * pix1, int i_stride_pix1, uint8_t * pix2, int i_stride_pix2)
{
  int d;
  int y;
  int x;
  int i_sum;
  sizetype _9;
  uint8_t * _10;
  unsigned char _12;
  int _13;
  uint8_t * _15;
  unsigned char _16;
  int _17;
  int _19;
  unsigned int ivtmp_55;
  unsigned int ivtmp_56;
  unsigned int ivtmp_57;
  unsigned int ivtmp_58;
  sizetype pretmp_61;
  sizetype pretmp_62;

  <bb 2>:
  # DEBUG i_sum => 0
  # DEBUG y => 0
  # DEBUG y => 0
  # DEBUG i_sum => 0
  # DEBUG pix2 => pix2_8(D)
  # DEBUG pix1 => pix1_7(D)
  pretmp_61 = (sizetype) i_stride_pix1_22(D);
  pretmp_62 = (sizetype) i_stride_pix2_25(D);
  goto <bb 7>;

  <bb 3>:

  <bb 4>:
  # i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>
  # x_40 = PHI <x_21(3), 0(7)>
  # ivtmp_58 = PHI <ivtmp_57(3), 8(7)>
  # DEBUG x => x_40
  # DEBUG i_sum => i_sum_38
  _9 = (sizetype) x_40;
  _10 = pix1_29 + _9;
  _12 = *_10;
  _13 = (int) _12;
  _15 = pix2_14 + _9;
  _16 = *_15;
  _17 = (int) _16;
  d_18 = _13 - _17;
  # DEBUG d => d_18
  _19 = d_18 * d_18;
  i_sum_20 = _19 + i_sum_38;
  # DEBUG i_sum => i_sum_20
  x_21 = x_40 + 1;
  # DEBUG x => x_21
  # DEBUG x => x_21
  # DEBUG i_sum => i_sum_20
  ivtmp_57 = ivtmp_58 - 1;
  if (ivtmp_57 != 0)
    goto <bb 3>;
  else
    goto <bb 5>;

  <bb 5>:
  # i_sum_60 = PHI <i_sum_20(4)>
  pix1_24 = pix1_29 + pretmp_61;
  # DEBUG pix1 => pix1_24
  pix2_27 = pix2_14 + pretmp_62;
  # DEBUG pix2 => pix2_27
  y_28 = y_41 + 1;
  # DEBUG y => y_28
  # DEBUG y => y_28
  # DEBUG i_sum => i_sum_60
  # DEBUG pix2 => pix2_27
  # DEBUG pix1 => pix1_24
  ivtmp_55 = ivtmp_56 - 1;
  if (ivtmp_55 != 0)
    goto <bb 6>;
  else
    goto <bb 8>;

  <bb 6>:

  <bb 7>:
  # pix1_29 = PHI <pix1_24(6), pix1_7(D)(2)>
  # pix2_14 = PHI <pix2_27(6), pix2_8(D)(2)>
  # i_sum_39 = PHI <i_sum_60(6), 0(2)>
  # y_41 = PHI <y_28(6), 0(2)>
  # ivtmp_56 = PHI <ivtmp_55(6), 16(2)>
  # DEBUG y => y_41
  # DEBUG i_sum => i_sum_39
  # DEBUG pix2 => pix2_14
  # DEBUG pix1 => pix1_29
  # DEBUG x => 0
  # DEBUG i_sum => i_sum_39
  goto <bb 4>;

  <bb 8>:
  # i_sum_59 = PHI <i_sum_60(5)>
  return i_sum_59;

}



;; Function x264_pixel_ssd_8x8 (x264_pixel_ssd_8x8, funcdef_no=125, decl_uid=7643, cgraph_uid=125, symbol_order=168)


Analyzing loop at common/pixel.c:93
common/pixel.c:93:1: note: ===== analyze_loop_nest =====
common/pixel.c:93:1: note: === vect_analyze_loop_form ===
common/pixel.c:93:1: note: ===== analyze_loop_nest_1 =====
common/pixel.c:93:1: note: === vect_analyze_loop_form ===
common/pixel.c:93:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 2
  exit condition [7, + , 4294967295] != 0
  bounds on difference of bases: -7 ... -7
  result:
    # of iterations 7, bounded by 7
common/pixel.c:93:1: note: Considering outer-loop vectorization.
common/pixel.c:93:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 1
  exit condition [7, + , 4294967295] != 0
  bounds on difference of bases: -7 ... -7
  result:
    # of iterations 7, bounded by 7
common/pixel.c:93:1: note: === vect_analyze_data_refs ===
Creating dr for *_10
analyze_innermost: success.
	base_address: pix1_29
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix1_7(D)
	Access function 0: {{0B, +, pretmp_61}_1, +, 1}_2
Creating dr for *_15
analyze_innermost: success.
	base_address: pix2_14
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix2_8(D)
	Access function 0: {{0B, +, pretmp_62}_1, +, 1}_2
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:93:1: note: analyze in outer-loop: *pix1_29
common/pixel.c:93:1: note: failed: evolution of base is not affine.
common/pixel.c:93:1: note: bad data references.

Analyzing loop at common/pixel.c:93
common/pixel.c:93:1: note: ===== analyze_loop_nest =====
common/pixel.c:93:1: note: === vect_analyze_loop_form ===
common/pixel.c:93:1: note: === get_loop_niters ===
common/pixel.c:93:1: note: === vect_analyze_data_refs ===
Creating dr for *_10
analyze_innermost: success.
	base_address: pix1_29
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix1_29
	Access function 0: {0B, +, 1}_2
Creating dr for *_15
analyze_innermost: success.
	base_address: pix2_14
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix2_14
	Access function 0: {0B, +, 1}_2
common/pixel.c:93:1: note: got vectype for stmt: _12 = *_10;
vector(16) unsigned char
common/pixel.c:93:1: note: got vectype for stmt: _16 = *_15;
vector(16) unsigned char
common/pixel.c:93:1: note: === vect_analyze_scalar_cycles ===
common/pixel.c:93:1: note: Analyze phi: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>

common/pixel.c:93:1: note: Access function of PHI: {i_sum_39, +, _19}_2
common/pixel.c:93:1: note: step: _19,  init: i_sum_39
common/pixel.c:93:1: note: step unknown.
common/pixel.c:93:1: note: Analyze phi: x_40 = PHI <x_21(3), 0(7)>

common/pixel.c:93:1: note: Access function of PHI: {0, +, 1}_2
common/pixel.c:93:1: note: step: 1,  init: 0
common/pixel.c:93:1: note: Detected induction.
common/pixel.c:93:1: note: Analyze phi: ivtmp_58 = PHI <ivtmp_57(3), 8(7)>

common/pixel.c:93:1: note: Access function of PHI: {8, +, 4294967295}_2
common/pixel.c:93:1: note: step: 4294967295,  init: 8
common/pixel.c:93:1: note: Detected induction.
common/pixel.c:93:1: note: Analyze phi: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>

common/pixel.c:93:1: note: detected reduction: i_sum_20 = _19 + i_sum_38;

common/pixel.c:93:1: note: Detected reduction.
common/pixel.c:93:1: note: === vect_pattern_recog ===
common/pixel.c:93:1: note: vect_is_simple_use: operand d_18
common/pixel.c:93:1: note: def_stmt: d_18 = _13 - _17;
common/pixel.c:93:1: note: type of def: 3.
common/pixel.c:93:1: note: vect_is_simple_use: operand _19
common/pixel.c:93:1: note: def_stmt: _19 = d_18 * d_18;
common/pixel.c:93:1: note: type of def: 3.
common/pixel.c:93:1: note: vect_is_simple_use: operand _19
common/pixel.c:93:1: note: def_stmt: _19 = d_18 * d_18;
common/pixel.c:93:1: note: type of def: 3.
common/pixel.c:93:1: note: vect_is_simple_use: operand d_18
common/pixel.c:93:1: note: def_stmt: d_18 = _13 - _17;
common/pixel.c:93:1: note: type of def: 3.
common/pixel.c:93:1: note: vect_is_simple_use: operand _19
common/pixel.c:93:1: note: def_stmt: _19 = d_18 * d_18;
common/pixel.c:93:1: note: type of def: 3.
common/pixel.c:93:1: note: === vect_analyze_data_ref_accesses ===
common/pixel.c:93:1: note: === vect_mark_stmts_to_be_vectorized ===
common/pixel.c:93:1: note: init: phi relevant? i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>
common/pixel.c:93:1: note: init: phi relevant? x_40 = PHI <x_21(3), 0(7)>
common/pixel.c:93:1: note: init: phi relevant? ivtmp_58 = PHI <ivtmp_57(3), 8(7)>
common/pixel.c:93:1: note: init: stmt relevant? # DEBUG x => x_40
common/pixel.c:93:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_38
common/pixel.c:93:1: note: init: stmt relevant? _9 = (sizetype) x_40;
common/pixel.c:93:1: note: init: stmt relevant? _10 = pix1_29 + _9;
common/pixel.c:93:1: note: init: stmt relevant? _12 = *_10;
common/pixel.c:93:1: note: init: stmt relevant? _13 = (int) _12;
common/pixel.c:93:1: note: init: stmt relevant? _15 = pix2_14 + _9;
common/pixel.c:93:1: note: init: stmt relevant? _16 = *_15;
common/pixel.c:93:1: note: init: stmt relevant? _17 = (int) _16;
common/pixel.c:93:1: note: init: stmt relevant? d_18 = _13 - _17;
common/pixel.c:93:1: note: init: stmt relevant? # DEBUG d => d_18
common/pixel.c:93:1: note: init: stmt relevant? _19 = d_18 * d_18;
common/pixel.c:93:1: note: init: stmt relevant? i_sum_20 = _19 + i_sum_38;
common/pixel.c:93:1: note: vec_stmt_relevant_p: used out of loop.
common/pixel.c:93:1: note: mark relevant 0, live 1.
common/pixel.c:93:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_20
common/pixel.c:93:1: note: init: stmt relevant? x_21 = x_40 + 1;
common/pixel.c:93:1: note: init: stmt relevant? # DEBUG x => x_21
common/pixel.c:93:1: note: init: stmt relevant? # DEBUG x => x_21
common/pixel.c:93:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_20
common/pixel.c:93:1: note: init: stmt relevant? ivtmp_57 = ivtmp_58 - 1;
common/pixel.c:93:1: note: init: stmt relevant? if (ivtmp_57 != 0)
common/pixel.c:93:1: note: worklist: examine stmt: i_sum_20 = _19 + i_sum_38;
common/pixel.c:93:1: note: vect_is_simple_use: operand _19
common/pixel.c:93:1: note: def_stmt: _19 = d_18 * d_18;
common/pixel.c:93:1: note: type of def: 3.
common/pixel.c:93:1: note: mark relevant 3, live 0.
common/pixel.c:93:1: note: vect_is_simple_use: operand i_sum_38
common/pixel.c:93:1: note: def_stmt: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>
common/pixel.c:93:1: note: type of def: 5.
common/pixel.c:93:1: note: mark relevant 3, live 0.
common/pixel.c:93:1: note: worklist: examine stmt: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>
common/pixel.c:93:1: note: vect_is_simple_use: operand i_sum_20
common/pixel.c:93:1: note: def_stmt: i_sum_20 = _19 + i_sum_38;
common/pixel.c:93:1: note: type of def: 5.
common/pixel.c:93:1: note: reduc-stmt defining reduc-phi in the same nest.
common/pixel.c:93:1: note: vect_is_simple_use: operand i_sum_39
common/pixel.c:93:1: note: def_stmt: i_sum_39 = PHI <i_sum_60(6), 0(2)>
common/pixel.c:93:1: note: type of def: 2.
common/pixel.c:93:1: note: def_stmt is out of loop.
common/pixel.c:93:1: note: worklist: examine stmt: _19 = d_18 * d_18;
common/pixel.c:93:1: note: vect_is_simple_use: operand d_18
common/pixel.c:93:1: note: def_stmt: d_18 = _13 - _17;
common/pixel.c:93:1: note: type of def: 3.
common/pixel.c:93:1: note: mark relevant 3, live 0.
common/pixel.c:93:1: note: vect_is_simple_use: operand d_18
common/pixel.c:93:1: note: def_stmt: d_18 = _13 - _17;
common/pixel.c:93:1: note: type of def: 3.
common/pixel.c:93:1: note: mark relevant 3, live 0.
common/pixel.c:93:1: note: already marked relevant/live.
common/pixel.c:93:1: note: worklist: examine stmt: d_18 = _13 - _17;
common/pixel.c:93:1: note: vect_is_simple_use: operand _13
common/pixel.c:93:1: note: def_stmt: _13 = (int) _12;
common/pixel.c:93:1: note: type of def: 3.
common/pixel.c:93:1: note: mark relevant 3, live 0.
common/pixel.c:93:1: note: vect_is_simple_use: operand _17
common/pixel.c:93:1: note: def_stmt: _17 = (int) _16;
common/pixel.c:93:1: note: type of def: 3.
common/pixel.c:93:1: note: mark relevant 3, live 0.
common/pixel.c:93:1: note: worklist: examine stmt: _17 = (int) _16;
common/pixel.c:93:1: note: vect_is_simple_use: operand _16
common/pixel.c:93:1: note: def_stmt: _16 = *_15;
common/pixel.c:93:1: note: type of def: 3.
common/pixel.c:93:1: note: mark relevant 3, live 0.
common/pixel.c:93:1: note: worklist: examine stmt: _16 = *_15;
common/pixel.c:93:1: note: worklist: examine stmt: _13 = (int) _12;
common/pixel.c:93:1: note: vect_is_simple_use: operand _12
common/pixel.c:93:1: note: def_stmt: _12 = *_10;
common/pixel.c:93:1: note: type of def: 3.
common/pixel.c:93:1: note: mark relevant 3, live 0.
common/pixel.c:93:1: note: worklist: examine stmt: _12 = *_10;
common/pixel.c:93:1: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _12 = *_10;
  stmt_b: _16 = *_15;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _12 = *_10;
  stmt_b: _12 = *_10;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_2)
  (chrec_b = {0B, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _16 = *_15;
  stmt_b: _16 = *_15;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_2)
  (chrec_b = {0B, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/pixel.c:93:1: note: === vect_determine_vectorization_factor ===
common/pixel.c:93:1: note: ==> examining phi: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>

common/pixel.c:93:1: note: get vectype for scalar type:  int
common/pixel.c:93:1: note: vectype: vector(4) int
common/pixel.c:93:1: note: nunits = 4
common/pixel.c:93:1: note: ==> examining phi: x_40 = PHI <x_21(3), 0(7)>

common/pixel.c:93:1: note: ==> examining phi: ivtmp_58 = PHI <ivtmp_57(3), 8(7)>

common/pixel.c:93:1: note: ==> examining statement: # DEBUG x => x_40

common/pixel.c:93:1: note: skip.
common/pixel.c:93:1: note: ==> examining statement: # DEBUG i_sum => i_sum_38

common/pixel.c:93:1: note: skip.
common/pixel.c:93:1: note: ==> examining statement: _9 = (sizetype) x_40;

common/pixel.c:93:1: note: skip.
common/pixel.c:93:1: note: ==> examining statement: _10 = pix1_29 + _9;

common/pixel.c:93:1: note: skip.
common/pixel.c:93:1: note: ==> examining statement: _12 = *_10;

common/pixel.c:93:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:93:1: note: vectype: vector(16) unsigned char
common/pixel.c:93:1: note: nunits = 16
common/pixel.c:93:1: note: ==> examining statement: _13 = (int) _12;

common/pixel.c:93:1: note: get vectype for scalar type:  int
common/pixel.c:93:1: note: vectype: vector(4) int
common/pixel.c:93:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:93:1: note: vectype: vector(16) unsigned char
common/pixel.c:93:1: note: nunits = 16
common/pixel.c:93:1: note: ==> examining statement: _15 = pix2_14 + _9;

common/pixel.c:93:1: note: skip.
common/pixel.c:93:1: note: ==> examining statement: _16 = *_15;

common/pixel.c:93:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:93:1: note: vectype: vector(16) unsigned char
common/pixel.c:93:1: note: nunits = 16
common/pixel.c:93:1: note: ==> examining statement: _17 = (int) _16;

common/pixel.c:93:1: note: get vectype for scalar type:  int
common/pixel.c:93:1: note: vectype: vector(4) int
common/pixel.c:93:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:93:1: note: vectype: vector(16) unsigned char
common/pixel.c:93:1: note: nunits = 16
common/pixel.c:93:1: note: ==> examining statement: d_18 = _13 - _17;

common/pixel.c:93:1: note: get vectype for scalar type:  int
common/pixel.c:93:1: note: vectype: vector(4) int
common/pixel.c:93:1: note: get vectype for scalar type:  int
common/pixel.c:93:1: note: vectype: vector(4) int
common/pixel.c:93:1: note: nunits = 4
common/pixel.c:93:1: note: ==> examining statement: # DEBUG d => d_18

common/pixel.c:93:1: note: skip.
common/pixel.c:93:1: note: ==> examining statement: _19 = d_18 * d_18;

common/pixel.c:93:1: note: get vectype for scalar type:  int
common/pixel.c:93:1: note: vectype: vector(4) int
common/pixel.c:93:1: note: get vectype for scalar type:  int
common/pixel.c:93:1: note: vectype: vector(4) int
common/pixel.c:93:1: note: nunits = 4
common/pixel.c:93:1: note: ==> examining statement: i_sum_20 = _19 + i_sum_38;

common/pixel.c:93:1: note: get vectype for scalar type:  int
common/pixel.c:93:1: note: vectype: vector(4) int
common/pixel.c:93:1: note: get vectype for scalar type:  int
common/pixel.c:93:1: note: vectype: vector(4) int
common/pixel.c:93:1: note: nunits = 4
common/pixel.c:93:1: note: ==> examining statement: # DEBUG i_sum => i_sum_20

common/pixel.c:93:1: note: skip.
common/pixel.c:93:1: note: ==> examining statement: x_21 = x_40 + 1;

common/pixel.c:93:1: note: skip.
common/pixel.c:93:1: note: ==> examining statement: # DEBUG x => x_21

common/pixel.c:93:1: note: skip.
common/pixel.c:93:1: note: ==> examining statement: # DEBUG x => x_21

common/pixel.c:93:1: note: skip.
common/pixel.c:93:1: note: ==> examining statement: # DEBUG i_sum => i_sum_20

common/pixel.c:93:1: note: skip.
common/pixel.c:93:1: note: ==> examining statement: ivtmp_57 = ivtmp_58 - 1;

common/pixel.c:93:1: note: skip.
common/pixel.c:93:1: note: ==> examining statement: if (ivtmp_57 != 0)

common/pixel.c:93:1: note: skip.
common/pixel.c:93:1: note: vectorization factor = 16
common/pixel.c:93:1: note: === vect_analyze_data_refs_alignment ===
common/pixel.c:93:1: note: vect_compute_data_ref_alignment:
common/pixel.c:93:1: note: can't force alignment of ref: *_10
common/pixel.c:93:1: note: vect_compute_data_ref_alignment:
common/pixel.c:93:1: note: can't force alignment of ref: *_15
common/pixel.c:93:1: note: === vect_prune_runtime_alias_test_list ===
common/pixel.c:93:1: note: === vect_enhance_data_refs_alignment ===
common/pixel.c:93:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:93:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:93:1: note: vect_can_advance_ivs_p:
common/pixel.c:93:1: note: Analyze phi: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>

common/pixel.c:93:1: note: reduc phi. skip.
common/pixel.c:93:1: note: Analyze phi: x_40 = PHI <x_21(3), 0(7)>

common/pixel.c:93:1: note: Analyze phi: ivtmp_58 = PHI <ivtmp_57(3), 8(7)>

common/pixel.c:93:1: note: Vectorizing an unaligned access.
common/pixel.c:93:1: note: Vectorizing an unaligned access.
common/pixel.c:93:1: note: === vect_analyze_slp ===
common/pixel.c:93:1: note: === vect_make_slp_decision ===
common/pixel.c:93:1: note: === vect_detect_hybrid_slp ===
common/pixel.c:93:1: note: === vect_analyze_loop_operations ===
common/pixel.c:93:1: note: examining phi: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>

common/pixel.c:93:1: note: examining phi: x_40 = PHI <x_21(3), 0(7)>

common/pixel.c:93:1: note: examining phi: ivtmp_58 = PHI <ivtmp_57(3), 8(7)>

common/pixel.c:93:1: note: ==> examining statement: # DEBUG x => x_40
common/pixel.c:93:1: note: irrelevant.
common/pixel.c:93:1: note: ==> examining statement: # DEBUG i_sum => i_sum_38
common/pixel.c:93:1: note: irrelevant.
common/pixel.c:93:1: note: ==> examining statement: _9 = (sizetype) x_40;
common/pixel.c:93:1: note: irrelevant.
common/pixel.c:93:1: note: ==> examining statement: _10 = pix1_29 + _9;
common/pixel.c:93:1: note: irrelevant.
common/pixel.c:93:1: note: ==> examining statement: _12 = *_10;
common/pixel.c:93:1: note: vect_is_simple_use: operand *_10
common/pixel.c:93:1: note: not ssa-name.
common/pixel.c:93:1: note: use not simple.
common/pixel.c:93:1: note: vect_is_simple_use: operand *_10
common/pixel.c:93:1: note: not ssa-name.
common/pixel.c:93:1: note: use not simple.
common/pixel.c:93:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:93:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:93:1: note: ==> examining statement: _13 = (int) _12;
common/pixel.c:93:1: note: vect_is_simple_use: operand _12
common/pixel.c:93:1: note: def_stmt: _12 = *_10;
common/pixel.c:93:1: note: type of def: 3.
common/pixel.c:93:1: note: === vectorizable_conversion ===
common/pixel.c:93:1: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:93:1: note: ==> examining statement: _15 = pix2_14 + _9;
common/pixel.c:93:1: note: irrelevant.
common/pixel.c:93:1: note: ==> examining statement: _16 = *_15;
common/pixel.c:93:1: note: vect_is_simple_use: operand *_15
common/pixel.c:93:1: note: not ssa-name.
common/pixel.c:93:1: note: use not simple.
common/pixel.c:93:1: note: vect_is_simple_use: operand *_15
common/pixel.c:93:1: note: not ssa-name.
common/pixel.c:93:1: note: use not simple.
common/pixel.c:93:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:93:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:93:1: note: ==> examining statement: _17 = (int) _16;
common/pixel.c:93:1: note: vect_is_simple_use: operand _16
common/pixel.c:93:1: note: def_stmt: _16 = *_15;
common/pixel.c:93:1: note: type of def: 3.
common/pixel.c:93:1: note: === vectorizable_conversion ===
common/pixel.c:93:1: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:93:1: note: ==> examining statement: d_18 = _13 - _17;
common/pixel.c:93:1: note: vect_is_simple_use: operand _13
common/pixel.c:93:1: note: def_stmt: _13 = (int) _12;
common/pixel.c:93:1: note: type of def: 3.
common/pixel.c:93:1: note: vect_is_simple_use: operand _17
common/pixel.c:93:1: note: def_stmt: _17 = (int) _16;
common/pixel.c:93:1: note: type of def: 3.
common/pixel.c:93:1: note: === vectorizable_operation ===
common/pixel.c:93:1: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:93:1: note: ==> examining statement: # DEBUG d => d_18
common/pixel.c:93:1: note: irrelevant.
common/pixel.c:93:1: note: ==> examining statement: _19 = d_18 * d_18;
common/pixel.c:93:1: note: vect_is_simple_use: operand d_18
common/pixel.c:93:1: note: def_stmt: d_18 = _13 - _17;
common/pixel.c:93:1: note: type of def: 3.
common/pixel.c:93:1: note: vect_is_simple_use: operand d_18
common/pixel.c:93:1: note: def_stmt: d_18 = _13 - _17;
common/pixel.c:93:1: note: type of def: 3.
common/pixel.c:93:1: note: === vectorizable_operation ===
common/pixel.c:93:1: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:93:1: note: ==> examining statement: i_sum_20 = _19 + i_sum_38;
common/pixel.c:93:1: note: vect_is_simple_use: operand _19
common/pixel.c:93:1: note: def_stmt: _19 = d_18 * d_18;
common/pixel.c:93:1: note: type of def: 3.
common/pixel.c:93:1: note: vect_is_simple_use: operand i_sum_38
common/pixel.c:93:1: note: def_stmt: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>
common/pixel.c:93:1: note: type of def: 5.
common/pixel.c:93:1: note: detected reduction: i_sum_20 = _19 + i_sum_38;

common/pixel.c:93:1: note: reduc op not supported by target.
vect_model_reduction_cost: inside_cost = 4, prologue_cost = 1, epilogue_cost = 5 .
common/pixel.c:93:1: note: ==> examining statement: # DEBUG i_sum => i_sum_20
common/pixel.c:93:1: note: irrelevant.
common/pixel.c:93:1: note: ==> examining statement: x_21 = x_40 + 1;
common/pixel.c:93:1: note: irrelevant.
common/pixel.c:93:1: note: ==> examining statement: # DEBUG x => x_21
common/pixel.c:93:1: note: irrelevant.
common/pixel.c:93:1: note: ==> examining statement: # DEBUG x => x_21
common/pixel.c:93:1: note: irrelevant.
common/pixel.c:93:1: note: ==> examining statement: # DEBUG i_sum => i_sum_20
common/pixel.c:93:1: note: irrelevant.
common/pixel.c:93:1: note: ==> examining statement: ivtmp_57 = ivtmp_58 - 1;
common/pixel.c:93:1: note: irrelevant.
common/pixel.c:93:1: note: ==> examining statement: if (ivtmp_57 != 0)
common/pixel.c:93:1: note: irrelevant.
common/pixel.c:93:1: note: vectorization_factor = 16, niters = 8
common/pixel.c:93:1: note: not vectorized: iteration count too small.
common/pixel.c:93:1: note: not vectorized: iteration count smaller than vectorization factor.
common/pixel.c:93:1: note: bad operation or unsupported loop bound.
common/pixel.c:93:1: note: vectorized 0 loops in function.
x264_pixel_ssd_8x8 (uint8_t * pix1, int i_stride_pix1, uint8_t * pix2, int i_stride_pix2)
{
  int d;
  int y;
  int x;
  int i_sum;
  sizetype _9;
  uint8_t * _10;
  unsigned char _12;
  int _13;
  uint8_t * _15;
  unsigned char _16;
  int _17;
  int _19;
  unsigned int ivtmp_55;
  unsigned int ivtmp_56;
  unsigned int ivtmp_57;
  unsigned int ivtmp_58;
  sizetype pretmp_61;
  sizetype pretmp_62;

  <bb 2>:
  # DEBUG i_sum => 0
  # DEBUG y => 0
  # DEBUG y => 0
  # DEBUG i_sum => 0
  # DEBUG pix2 => pix2_8(D)
  # DEBUG pix1 => pix1_7(D)
  pretmp_61 = (sizetype) i_stride_pix1_22(D);
  pretmp_62 = (sizetype) i_stride_pix2_25(D);
  goto <bb 7>;

  <bb 3>:

  <bb 4>:
  # i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>
  # x_40 = PHI <x_21(3), 0(7)>
  # ivtmp_58 = PHI <ivtmp_57(3), 8(7)>
  # DEBUG x => x_40
  # DEBUG i_sum => i_sum_38
  _9 = (sizetype) x_40;
  _10 = pix1_29 + _9;
  _12 = *_10;
  _13 = (int) _12;
  _15 = pix2_14 + _9;
  _16 = *_15;
  _17 = (int) _16;
  d_18 = _13 - _17;
  # DEBUG d => d_18
  _19 = d_18 * d_18;
  i_sum_20 = _19 + i_sum_38;
  # DEBUG i_sum => i_sum_20
  x_21 = x_40 + 1;
  # DEBUG x => x_21
  # DEBUG x => x_21
  # DEBUG i_sum => i_sum_20
  ivtmp_57 = ivtmp_58 - 1;
  if (ivtmp_57 != 0)
    goto <bb 3>;
  else
    goto <bb 5>;

  <bb 5>:
  # i_sum_60 = PHI <i_sum_20(4)>
  pix1_24 = pix1_29 + pretmp_61;
  # DEBUG pix1 => pix1_24
  pix2_27 = pix2_14 + pretmp_62;
  # DEBUG pix2 => pix2_27
  y_28 = y_41 + 1;
  # DEBUG y => y_28
  # DEBUG y => y_28
  # DEBUG i_sum => i_sum_60
  # DEBUG pix2 => pix2_27
  # DEBUG pix1 => pix1_24
  ivtmp_55 = ivtmp_56 - 1;
  if (ivtmp_55 != 0)
    goto <bb 6>;
  else
    goto <bb 8>;

  <bb 6>:

  <bb 7>:
  # pix1_29 = PHI <pix1_24(6), pix1_7(D)(2)>
  # pix2_14 = PHI <pix2_27(6), pix2_8(D)(2)>
  # i_sum_39 = PHI <i_sum_60(6), 0(2)>
  # y_41 = PHI <y_28(6), 0(2)>
  # ivtmp_56 = PHI <ivtmp_55(6), 8(2)>
  # DEBUG y => y_41
  # DEBUG i_sum => i_sum_39
  # DEBUG pix2 => pix2_14
  # DEBUG pix1 => pix1_29
  # DEBUG x => 0
  # DEBUG i_sum => i_sum_39
  goto <bb 4>;

  <bb 8>:
  # i_sum_59 = PHI <i_sum_60(5)>
  return i_sum_59;

}



;; Function x264_pixel_ssd_8x4 (x264_pixel_ssd_8x4, funcdef_no=126, decl_uid=7659, cgraph_uid=126, symbol_order=169)


Analyzing loop at common/pixel.c:94
common/pixel.c:94:1: note: ===== analyze_loop_nest =====
common/pixel.c:94:1: note: === vect_analyze_loop_form ===
common/pixel.c:94:1: note: ===== analyze_loop_nest_1 =====
common/pixel.c:94:1: note: === vect_analyze_loop_form ===
common/pixel.c:94:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 2
  exit condition [7, + , 4294967295] != 0
  bounds on difference of bases: -7 ... -7
  result:
    # of iterations 7, bounded by 7
common/pixel.c:94:1: note: Considering outer-loop vectorization.
common/pixel.c:94:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 1
  exit condition [3, + , 4294967295] != 0
  bounds on difference of bases: -3 ... -3
  result:
    # of iterations 3, bounded by 3
common/pixel.c:94:1: note: === vect_analyze_data_refs ===
Creating dr for *_10
analyze_innermost: success.
	base_address: pix1_29
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix1_7(D)
	Access function 0: {{0B, +, pretmp_61}_1, +, 1}_2
Creating dr for *_15
analyze_innermost: success.
	base_address: pix2_14
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix2_8(D)
	Access function 0: {{0B, +, pretmp_62}_1, +, 1}_2
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:94:1: note: analyze in outer-loop: *pix1_29
common/pixel.c:94:1: note: failed: evolution of base is not affine.
common/pixel.c:94:1: note: bad data references.

Analyzing loop at common/pixel.c:94
common/pixel.c:94:1: note: ===== analyze_loop_nest =====
common/pixel.c:94:1: note: === vect_analyze_loop_form ===
common/pixel.c:94:1: note: === get_loop_niters ===
common/pixel.c:94:1: note: === vect_analyze_data_refs ===
Creating dr for *_10
analyze_innermost: success.
	base_address: pix1_29
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix1_29
	Access function 0: {0B, +, 1}_2
Creating dr for *_15
analyze_innermost: success.
	base_address: pix2_14
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix2_14
	Access function 0: {0B, +, 1}_2
common/pixel.c:94:1: note: got vectype for stmt: _12 = *_10;
vector(16) unsigned char
common/pixel.c:94:1: note: got vectype for stmt: _16 = *_15;
vector(16) unsigned char
common/pixel.c:94:1: note: === vect_analyze_scalar_cycles ===
common/pixel.c:94:1: note: Analyze phi: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>

common/pixel.c:94:1: note: Access function of PHI: {i_sum_39, +, _19}_2
common/pixel.c:94:1: note: step: _19,  init: i_sum_39
common/pixel.c:94:1: note: step unknown.
common/pixel.c:94:1: note: Analyze phi: x_40 = PHI <x_21(3), 0(7)>

common/pixel.c:94:1: note: Access function of PHI: {0, +, 1}_2
common/pixel.c:94:1: note: step: 1,  init: 0
common/pixel.c:94:1: note: Detected induction.
common/pixel.c:94:1: note: Analyze phi: ivtmp_58 = PHI <ivtmp_57(3), 8(7)>

common/pixel.c:94:1: note: Access function of PHI: {8, +, 4294967295}_2
common/pixel.c:94:1: note: step: 4294967295,  init: 8
common/pixel.c:94:1: note: Detected induction.
common/pixel.c:94:1: note: Analyze phi: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>

common/pixel.c:94:1: note: detected reduction: i_sum_20 = _19 + i_sum_38;

common/pixel.c:94:1: note: Detected reduction.
common/pixel.c:94:1: note: === vect_pattern_recog ===
common/pixel.c:94:1: note: vect_is_simple_use: operand d_18
common/pixel.c:94:1: note: def_stmt: d_18 = _13 - _17;
common/pixel.c:94:1: note: type of def: 3.
common/pixel.c:94:1: note: vect_is_simple_use: operand _19
common/pixel.c:94:1: note: def_stmt: _19 = d_18 * d_18;
common/pixel.c:94:1: note: type of def: 3.
common/pixel.c:94:1: note: vect_is_simple_use: operand _19
common/pixel.c:94:1: note: def_stmt: _19 = d_18 * d_18;
common/pixel.c:94:1: note: type of def: 3.
common/pixel.c:94:1: note: vect_is_simple_use: operand d_18
common/pixel.c:94:1: note: def_stmt: d_18 = _13 - _17;
common/pixel.c:94:1: note: type of def: 3.
common/pixel.c:94:1: note: vect_is_simple_use: operand _19
common/pixel.c:94:1: note: def_stmt: _19 = d_18 * d_18;
common/pixel.c:94:1: note: type of def: 3.
common/pixel.c:94:1: note: === vect_analyze_data_ref_accesses ===
common/pixel.c:94:1: note: === vect_mark_stmts_to_be_vectorized ===
common/pixel.c:94:1: note: init: phi relevant? i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>
common/pixel.c:94:1: note: init: phi relevant? x_40 = PHI <x_21(3), 0(7)>
common/pixel.c:94:1: note: init: phi relevant? ivtmp_58 = PHI <ivtmp_57(3), 8(7)>
common/pixel.c:94:1: note: init: stmt relevant? # DEBUG x => x_40
common/pixel.c:94:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_38
common/pixel.c:94:1: note: init: stmt relevant? _9 = (sizetype) x_40;
common/pixel.c:94:1: note: init: stmt relevant? _10 = pix1_29 + _9;
common/pixel.c:94:1: note: init: stmt relevant? _12 = *_10;
common/pixel.c:94:1: note: init: stmt relevant? _13 = (int) _12;
common/pixel.c:94:1: note: init: stmt relevant? _15 = pix2_14 + _9;
common/pixel.c:94:1: note: init: stmt relevant? _16 = *_15;
common/pixel.c:94:1: note: init: stmt relevant? _17 = (int) _16;
common/pixel.c:94:1: note: init: stmt relevant? d_18 = _13 - _17;
common/pixel.c:94:1: note: init: stmt relevant? # DEBUG d => d_18
common/pixel.c:94:1: note: init: stmt relevant? _19 = d_18 * d_18;
common/pixel.c:94:1: note: init: stmt relevant? i_sum_20 = _19 + i_sum_38;
common/pixel.c:94:1: note: vec_stmt_relevant_p: used out of loop.
common/pixel.c:94:1: note: mark relevant 0, live 1.
common/pixel.c:94:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_20
common/pixel.c:94:1: note: init: stmt relevant? x_21 = x_40 + 1;
common/pixel.c:94:1: note: init: stmt relevant? # DEBUG x => x_21
common/pixel.c:94:1: note: init: stmt relevant? # DEBUG x => x_21
common/pixel.c:94:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_20
common/pixel.c:94:1: note: init: stmt relevant? ivtmp_57 = ivtmp_58 - 1;
common/pixel.c:94:1: note: init: stmt relevant? if (ivtmp_57 != 0)
common/pixel.c:94:1: note: worklist: examine stmt: i_sum_20 = _19 + i_sum_38;
common/pixel.c:94:1: note: vect_is_simple_use: operand _19
common/pixel.c:94:1: note: def_stmt: _19 = d_18 * d_18;
common/pixel.c:94:1: note: type of def: 3.
common/pixel.c:94:1: note: mark relevant 3, live 0.
common/pixel.c:94:1: note: vect_is_simple_use: operand i_sum_38
common/pixel.c:94:1: note: def_stmt: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>
common/pixel.c:94:1: note: type of def: 5.
common/pixel.c:94:1: note: mark relevant 3, live 0.
common/pixel.c:94:1: note: worklist: examine stmt: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>
common/pixel.c:94:1: note: vect_is_simple_use: operand i_sum_20
common/pixel.c:94:1: note: def_stmt: i_sum_20 = _19 + i_sum_38;
common/pixel.c:94:1: note: type of def: 5.
common/pixel.c:94:1: note: reduc-stmt defining reduc-phi in the same nest.
common/pixel.c:94:1: note: vect_is_simple_use: operand i_sum_39
common/pixel.c:94:1: note: def_stmt: i_sum_39 = PHI <i_sum_60(6), 0(2)>
common/pixel.c:94:1: note: type of def: 2.
common/pixel.c:94:1: note: def_stmt is out of loop.
common/pixel.c:94:1: note: worklist: examine stmt: _19 = d_18 * d_18;
common/pixel.c:94:1: note: vect_is_simple_use: operand d_18
common/pixel.c:94:1: note: def_stmt: d_18 = _13 - _17;
common/pixel.c:94:1: note: type of def: 3.
common/pixel.c:94:1: note: mark relevant 3, live 0.
common/pixel.c:94:1: note: vect_is_simple_use: operand d_18
common/pixel.c:94:1: note: def_stmt: d_18 = _13 - _17;
common/pixel.c:94:1: note: type of def: 3.
common/pixel.c:94:1: note: mark relevant 3, live 0.
common/pixel.c:94:1: note: already marked relevant/live.
common/pixel.c:94:1: note: worklist: examine stmt: d_18 = _13 - _17;
common/pixel.c:94:1: note: vect_is_simple_use: operand _13
common/pixel.c:94:1: note: def_stmt: _13 = (int) _12;
common/pixel.c:94:1: note: type of def: 3.
common/pixel.c:94:1: note: mark relevant 3, live 0.
common/pixel.c:94:1: note: vect_is_simple_use: operand _17
common/pixel.c:94:1: note: def_stmt: _17 = (int) _16;
common/pixel.c:94:1: note: type of def: 3.
common/pixel.c:94:1: note: mark relevant 3, live 0.
common/pixel.c:94:1: note: worklist: examine stmt: _17 = (int) _16;
common/pixel.c:94:1: note: vect_is_simple_use: operand _16
common/pixel.c:94:1: note: def_stmt: _16 = *_15;
common/pixel.c:94:1: note: type of def: 3.
common/pixel.c:94:1: note: mark relevant 3, live 0.
common/pixel.c:94:1: note: worklist: examine stmt: _16 = *_15;
common/pixel.c:94:1: note: worklist: examine stmt: _13 = (int) _12;
common/pixel.c:94:1: note: vect_is_simple_use: operand _12
common/pixel.c:94:1: note: def_stmt: _12 = *_10;
common/pixel.c:94:1: note: type of def: 3.
common/pixel.c:94:1: note: mark relevant 3, live 0.
common/pixel.c:94:1: note: worklist: examine stmt: _12 = *_10;
common/pixel.c:94:1: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _12 = *_10;
  stmt_b: _16 = *_15;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _12 = *_10;
  stmt_b: _12 = *_10;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_2)
  (chrec_b = {0B, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _16 = *_15;
  stmt_b: _16 = *_15;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_2)
  (chrec_b = {0B, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/pixel.c:94:1: note: === vect_determine_vectorization_factor ===
common/pixel.c:94:1: note: ==> examining phi: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>

common/pixel.c:94:1: note: get vectype for scalar type:  int
common/pixel.c:94:1: note: vectype: vector(4) int
common/pixel.c:94:1: note: nunits = 4
common/pixel.c:94:1: note: ==> examining phi: x_40 = PHI <x_21(3), 0(7)>

common/pixel.c:94:1: note: ==> examining phi: ivtmp_58 = PHI <ivtmp_57(3), 8(7)>

common/pixel.c:94:1: note: ==> examining statement: # DEBUG x => x_40

common/pixel.c:94:1: note: skip.
common/pixel.c:94:1: note: ==> examining statement: # DEBUG i_sum => i_sum_38

common/pixel.c:94:1: note: skip.
common/pixel.c:94:1: note: ==> examining statement: _9 = (sizetype) x_40;

common/pixel.c:94:1: note: skip.
common/pixel.c:94:1: note: ==> examining statement: _10 = pix1_29 + _9;

common/pixel.c:94:1: note: skip.
common/pixel.c:94:1: note: ==> examining statement: _12 = *_10;

common/pixel.c:94:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:94:1: note: vectype: vector(16) unsigned char
common/pixel.c:94:1: note: nunits = 16
common/pixel.c:94:1: note: ==> examining statement: _13 = (int) _12;

common/pixel.c:94:1: note: get vectype for scalar type:  int
common/pixel.c:94:1: note: vectype: vector(4) int
common/pixel.c:94:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:94:1: note: vectype: vector(16) unsigned char
common/pixel.c:94:1: note: nunits = 16
common/pixel.c:94:1: note: ==> examining statement: _15 = pix2_14 + _9;

common/pixel.c:94:1: note: skip.
common/pixel.c:94:1: note: ==> examining statement: _16 = *_15;

common/pixel.c:94:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:94:1: note: vectype: vector(16) unsigned char
common/pixel.c:94:1: note: nunits = 16
common/pixel.c:94:1: note: ==> examining statement: _17 = (int) _16;

common/pixel.c:94:1: note: get vectype for scalar type:  int
common/pixel.c:94:1: note: vectype: vector(4) int
common/pixel.c:94:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:94:1: note: vectype: vector(16) unsigned char
common/pixel.c:94:1: note: nunits = 16
common/pixel.c:94:1: note: ==> examining statement: d_18 = _13 - _17;

common/pixel.c:94:1: note: get vectype for scalar type:  int
common/pixel.c:94:1: note: vectype: vector(4) int
common/pixel.c:94:1: note: get vectype for scalar type:  int
common/pixel.c:94:1: note: vectype: vector(4) int
common/pixel.c:94:1: note: nunits = 4
common/pixel.c:94:1: note: ==> examining statement: # DEBUG d => d_18

common/pixel.c:94:1: note: skip.
common/pixel.c:94:1: note: ==> examining statement: _19 = d_18 * d_18;

common/pixel.c:94:1: note: get vectype for scalar type:  int
common/pixel.c:94:1: note: vectype: vector(4) int
common/pixel.c:94:1: note: get vectype for scalar type:  int
common/pixel.c:94:1: note: vectype: vector(4) int
common/pixel.c:94:1: note: nunits = 4
common/pixel.c:94:1: note: ==> examining statement: i_sum_20 = _19 + i_sum_38;

common/pixel.c:94:1: note: get vectype for scalar type:  int
common/pixel.c:94:1: note: vectype: vector(4) int
common/pixel.c:94:1: note: get vectype for scalar type:  int
common/pixel.c:94:1: note: vectype: vector(4) int
common/pixel.c:94:1: note: nunits = 4
common/pixel.c:94:1: note: ==> examining statement: # DEBUG i_sum => i_sum_20

common/pixel.c:94:1: note: skip.
common/pixel.c:94:1: note: ==> examining statement: x_21 = x_40 + 1;

common/pixel.c:94:1: note: skip.
common/pixel.c:94:1: note: ==> examining statement: # DEBUG x => x_21

common/pixel.c:94:1: note: skip.
common/pixel.c:94:1: note: ==> examining statement: # DEBUG x => x_21

common/pixel.c:94:1: note: skip.
common/pixel.c:94:1: note: ==> examining statement: # DEBUG i_sum => i_sum_20

common/pixel.c:94:1: note: skip.
common/pixel.c:94:1: note: ==> examining statement: ivtmp_57 = ivtmp_58 - 1;

common/pixel.c:94:1: note: skip.
common/pixel.c:94:1: note: ==> examining statement: if (ivtmp_57 != 0)

common/pixel.c:94:1: note: skip.
common/pixel.c:94:1: note: vectorization factor = 16
common/pixel.c:94:1: note: === vect_analyze_data_refs_alignment ===
common/pixel.c:94:1: note: vect_compute_data_ref_alignment:
common/pixel.c:94:1: note: can't force alignment of ref: *_10
common/pixel.c:94:1: note: vect_compute_data_ref_alignment:
common/pixel.c:94:1: note: can't force alignment of ref: *_15
common/pixel.c:94:1: note: === vect_prune_runtime_alias_test_list ===
common/pixel.c:94:1: note: === vect_enhance_data_refs_alignment ===
common/pixel.c:94:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:94:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:94:1: note: vect_can_advance_ivs_p:
common/pixel.c:94:1: note: Analyze phi: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>

common/pixel.c:94:1: note: reduc phi. skip.
common/pixel.c:94:1: note: Analyze phi: x_40 = PHI <x_21(3), 0(7)>

common/pixel.c:94:1: note: Analyze phi: ivtmp_58 = PHI <ivtmp_57(3), 8(7)>

common/pixel.c:94:1: note: Vectorizing an unaligned access.
common/pixel.c:94:1: note: Vectorizing an unaligned access.
common/pixel.c:94:1: note: === vect_analyze_slp ===
common/pixel.c:94:1: note: === vect_make_slp_decision ===
common/pixel.c:94:1: note: === vect_detect_hybrid_slp ===
common/pixel.c:94:1: note: === vect_analyze_loop_operations ===
common/pixel.c:94:1: note: examining phi: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>

common/pixel.c:94:1: note: examining phi: x_40 = PHI <x_21(3), 0(7)>

common/pixel.c:94:1: note: examining phi: ivtmp_58 = PHI <ivtmp_57(3), 8(7)>

common/pixel.c:94:1: note: ==> examining statement: # DEBUG x => x_40
common/pixel.c:94:1: note: irrelevant.
common/pixel.c:94:1: note: ==> examining statement: # DEBUG i_sum => i_sum_38
common/pixel.c:94:1: note: irrelevant.
common/pixel.c:94:1: note: ==> examining statement: _9 = (sizetype) x_40;
common/pixel.c:94:1: note: irrelevant.
common/pixel.c:94:1: note: ==> examining statement: _10 = pix1_29 + _9;
common/pixel.c:94:1: note: irrelevant.
common/pixel.c:94:1: note: ==> examining statement: _12 = *_10;
common/pixel.c:94:1: note: vect_is_simple_use: operand *_10
common/pixel.c:94:1: note: not ssa-name.
common/pixel.c:94:1: note: use not simple.
common/pixel.c:94:1: note: vect_is_simple_use: operand *_10
common/pixel.c:94:1: note: not ssa-name.
common/pixel.c:94:1: note: use not simple.
common/pixel.c:94:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:94:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:94:1: note: ==> examining statement: _13 = (int) _12;
common/pixel.c:94:1: note: vect_is_simple_use: operand _12
common/pixel.c:94:1: note: def_stmt: _12 = *_10;
common/pixel.c:94:1: note: type of def: 3.
common/pixel.c:94:1: note: === vectorizable_conversion ===
common/pixel.c:94:1: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:94:1: note: ==> examining statement: _15 = pix2_14 + _9;
common/pixel.c:94:1: note: irrelevant.
common/pixel.c:94:1: note: ==> examining statement: _16 = *_15;
common/pixel.c:94:1: note: vect_is_simple_use: operand *_15
common/pixel.c:94:1: note: not ssa-name.
common/pixel.c:94:1: note: use not simple.
common/pixel.c:94:1: note: vect_is_simple_use: operand *_15
common/pixel.c:94:1: note: not ssa-name.
common/pixel.c:94:1: note: use not simple.
common/pixel.c:94:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:94:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:94:1: note: ==> examining statement: _17 = (int) _16;
common/pixel.c:94:1: note: vect_is_simple_use: operand _16
common/pixel.c:94:1: note: def_stmt: _16 = *_15;
common/pixel.c:94:1: note: type of def: 3.
common/pixel.c:94:1: note: === vectorizable_conversion ===
common/pixel.c:94:1: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:94:1: note: ==> examining statement: d_18 = _13 - _17;
common/pixel.c:94:1: note: vect_is_simple_use: operand _13
common/pixel.c:94:1: note: def_stmt: _13 = (int) _12;
common/pixel.c:94:1: note: type of def: 3.
common/pixel.c:94:1: note: vect_is_simple_use: operand _17
common/pixel.c:94:1: note: def_stmt: _17 = (int) _16;
common/pixel.c:94:1: note: type of def: 3.
common/pixel.c:94:1: note: === vectorizable_operation ===
common/pixel.c:94:1: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:94:1: note: ==> examining statement: # DEBUG d => d_18
common/pixel.c:94:1: note: irrelevant.
common/pixel.c:94:1: note: ==> examining statement: _19 = d_18 * d_18;
common/pixel.c:94:1: note: vect_is_simple_use: operand d_18
common/pixel.c:94:1: note: def_stmt: d_18 = _13 - _17;
common/pixel.c:94:1: note: type of def: 3.
common/pixel.c:94:1: note: vect_is_simple_use: operand d_18
common/pixel.c:94:1: note: def_stmt: d_18 = _13 - _17;
common/pixel.c:94:1: note: type of def: 3.
common/pixel.c:94:1: note: === vectorizable_operation ===
common/pixel.c:94:1: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:94:1: note: ==> examining statement: i_sum_20 = _19 + i_sum_38;
common/pixel.c:94:1: note: vect_is_simple_use: operand _19
common/pixel.c:94:1: note: def_stmt: _19 = d_18 * d_18;
common/pixel.c:94:1: note: type of def: 3.
common/pixel.c:94:1: note: vect_is_simple_use: operand i_sum_38
common/pixel.c:94:1: note: def_stmt: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>
common/pixel.c:94:1: note: type of def: 5.
common/pixel.c:94:1: note: detected reduction: i_sum_20 = _19 + i_sum_38;

common/pixel.c:94:1: note: reduc op not supported by target.
vect_model_reduction_cost: inside_cost = 4, prologue_cost = 1, epilogue_cost = 5 .
common/pixel.c:94:1: note: ==> examining statement: # DEBUG i_sum => i_sum_20
common/pixel.c:94:1: note: irrelevant.
common/pixel.c:94:1: note: ==> examining statement: x_21 = x_40 + 1;
common/pixel.c:94:1: note: irrelevant.
common/pixel.c:94:1: note: ==> examining statement: # DEBUG x => x_21
common/pixel.c:94:1: note: irrelevant.
common/pixel.c:94:1: note: ==> examining statement: # DEBUG x => x_21
common/pixel.c:94:1: note: irrelevant.
common/pixel.c:94:1: note: ==> examining statement: # DEBUG i_sum => i_sum_20
common/pixel.c:94:1: note: irrelevant.
common/pixel.c:94:1: note: ==> examining statement: ivtmp_57 = ivtmp_58 - 1;
common/pixel.c:94:1: note: irrelevant.
common/pixel.c:94:1: note: ==> examining statement: if (ivtmp_57 != 0)
common/pixel.c:94:1: note: irrelevant.
common/pixel.c:94:1: note: vectorization_factor = 16, niters = 8
common/pixel.c:94:1: note: not vectorized: iteration count too small.
common/pixel.c:94:1: note: not vectorized: iteration count smaller than vectorization factor.
common/pixel.c:94:1: note: bad operation or unsupported loop bound.
common/pixel.c:94:1: note: vectorized 0 loops in function.
x264_pixel_ssd_8x4 (uint8_t * pix1, int i_stride_pix1, uint8_t * pix2, int i_stride_pix2)
{
  int d;
  int y;
  int x;
  int i_sum;
  sizetype _9;
  uint8_t * _10;
  unsigned char _12;
  int _13;
  uint8_t * _15;
  unsigned char _16;
  int _17;
  int _19;
  unsigned int ivtmp_55;
  unsigned int ivtmp_56;
  unsigned int ivtmp_57;
  unsigned int ivtmp_58;
  sizetype pretmp_61;
  sizetype pretmp_62;

  <bb 2>:
  # DEBUG i_sum => 0
  # DEBUG y => 0
  # DEBUG y => 0
  # DEBUG i_sum => 0
  # DEBUG pix2 => pix2_8(D)
  # DEBUG pix1 => pix1_7(D)
  pretmp_61 = (sizetype) i_stride_pix1_22(D);
  pretmp_62 = (sizetype) i_stride_pix2_25(D);
  goto <bb 7>;

  <bb 3>:

  <bb 4>:
  # i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>
  # x_40 = PHI <x_21(3), 0(7)>
  # ivtmp_58 = PHI <ivtmp_57(3), 8(7)>
  # DEBUG x => x_40
  # DEBUG i_sum => i_sum_38
  _9 = (sizetype) x_40;
  _10 = pix1_29 + _9;
  _12 = *_10;
  _13 = (int) _12;
  _15 = pix2_14 + _9;
  _16 = *_15;
  _17 = (int) _16;
  d_18 = _13 - _17;
  # DEBUG d => d_18
  _19 = d_18 * d_18;
  i_sum_20 = _19 + i_sum_38;
  # DEBUG i_sum => i_sum_20
  x_21 = x_40 + 1;
  # DEBUG x => x_21
  # DEBUG x => x_21
  # DEBUG i_sum => i_sum_20
  ivtmp_57 = ivtmp_58 - 1;
  if (ivtmp_57 != 0)
    goto <bb 3>;
  else
    goto <bb 5>;

  <bb 5>:
  # i_sum_60 = PHI <i_sum_20(4)>
  pix1_24 = pix1_29 + pretmp_61;
  # DEBUG pix1 => pix1_24
  pix2_27 = pix2_14 + pretmp_62;
  # DEBUG pix2 => pix2_27
  y_28 = y_41 + 1;
  # DEBUG y => y_28
  # DEBUG y => y_28
  # DEBUG i_sum => i_sum_60
  # DEBUG pix2 => pix2_27
  # DEBUG pix1 => pix1_24
  ivtmp_55 = ivtmp_56 - 1;
  if (ivtmp_55 != 0)
    goto <bb 6>;
  else
    goto <bb 8>;

  <bb 6>:

  <bb 7>:
  # pix1_29 = PHI <pix1_24(6), pix1_7(D)(2)>
  # pix2_14 = PHI <pix2_27(6), pix2_8(D)(2)>
  # i_sum_39 = PHI <i_sum_60(6), 0(2)>
  # y_41 = PHI <y_28(6), 0(2)>
  # ivtmp_56 = PHI <ivtmp_55(6), 4(2)>
  # DEBUG y => y_41
  # DEBUG i_sum => i_sum_39
  # DEBUG pix2 => pix2_14
  # DEBUG pix1 => pix1_29
  # DEBUG x => 0
  # DEBUG i_sum => i_sum_39
  goto <bb 4>;

  <bb 8>:
  # i_sum_59 = PHI <i_sum_60(5)>
  return i_sum_59;

}



;; Function x264_pixel_ssd_4x8 (x264_pixel_ssd_4x8, funcdef_no=127, decl_uid=7675, cgraph_uid=127, symbol_order=170)


Analyzing loop at common/pixel.c:95
common/pixel.c:95:1: note: ===== analyze_loop_nest =====
common/pixel.c:95:1: note: === vect_analyze_loop_form ===
common/pixel.c:95:1: note: ===== analyze_loop_nest_1 =====
common/pixel.c:95:1: note: === vect_analyze_loop_form ===
common/pixel.c:95:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 2
  exit condition [3, + , 4294967295] != 0
  bounds on difference of bases: -3 ... -3
  result:
    # of iterations 3, bounded by 3
common/pixel.c:95:1: note: Considering outer-loop vectorization.
common/pixel.c:95:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 1
  exit condition [7, + , 4294967295] != 0
  bounds on difference of bases: -7 ... -7
  result:
    # of iterations 7, bounded by 7
common/pixel.c:95:1: note: === vect_analyze_data_refs ===
Creating dr for *_10
analyze_innermost: success.
	base_address: pix1_29
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix1_7(D)
	Access function 0: {{0B, +, pretmp_61}_1, +, 1}_2
Creating dr for *_15
analyze_innermost: success.
	base_address: pix2_14
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix2_8(D)
	Access function 0: {{0B, +, pretmp_62}_1, +, 1}_2
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:95:1: note: analyze in outer-loop: *pix1_29
common/pixel.c:95:1: note: failed: evolution of base is not affine.
common/pixel.c:95:1: note: bad data references.

Analyzing loop at common/pixel.c:95
common/pixel.c:95:1: note: ===== analyze_loop_nest =====
common/pixel.c:95:1: note: === vect_analyze_loop_form ===
common/pixel.c:95:1: note: === get_loop_niters ===
common/pixel.c:95:1: note: === vect_analyze_data_refs ===
Creating dr for *_10
analyze_innermost: success.
	base_address: pix1_29
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix1_29
	Access function 0: {0B, +, 1}_2
Creating dr for *_15
analyze_innermost: success.
	base_address: pix2_14
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix2_14
	Access function 0: {0B, +, 1}_2
common/pixel.c:95:1: note: got vectype for stmt: _12 = *_10;
vector(16) unsigned char
common/pixel.c:95:1: note: got vectype for stmt: _16 = *_15;
vector(16) unsigned char
common/pixel.c:95:1: note: === vect_analyze_scalar_cycles ===
common/pixel.c:95:1: note: Analyze phi: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>

common/pixel.c:95:1: note: Access function of PHI: {i_sum_39, +, _19}_2
common/pixel.c:95:1: note: step: _19,  init: i_sum_39
common/pixel.c:95:1: note: step unknown.
common/pixel.c:95:1: note: Analyze phi: x_40 = PHI <x_21(3), 0(7)>

common/pixel.c:95:1: note: Access function of PHI: {0, +, 1}_2
common/pixel.c:95:1: note: step: 1,  init: 0
common/pixel.c:95:1: note: Detected induction.
common/pixel.c:95:1: note: Analyze phi: ivtmp_58 = PHI <ivtmp_57(3), 4(7)>

common/pixel.c:95:1: note: Access function of PHI: {4, +, 4294967295}_2
common/pixel.c:95:1: note: step: 4294967295,  init: 4
common/pixel.c:95:1: note: Detected induction.
common/pixel.c:95:1: note: Analyze phi: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>

common/pixel.c:95:1: note: detected reduction: i_sum_20 = _19 + i_sum_38;

common/pixel.c:95:1: note: Detected reduction.
common/pixel.c:95:1: note: === vect_pattern_recog ===
common/pixel.c:95:1: note: vect_is_simple_use: operand d_18
common/pixel.c:95:1: note: def_stmt: d_18 = _13 - _17;
common/pixel.c:95:1: note: type of def: 3.
common/pixel.c:95:1: note: vect_is_simple_use: operand _19
common/pixel.c:95:1: note: def_stmt: _19 = d_18 * d_18;
common/pixel.c:95:1: note: type of def: 3.
common/pixel.c:95:1: note: vect_is_simple_use: operand _19
common/pixel.c:95:1: note: def_stmt: _19 = d_18 * d_18;
common/pixel.c:95:1: note: type of def: 3.
common/pixel.c:95:1: note: vect_is_simple_use: operand d_18
common/pixel.c:95:1: note: def_stmt: d_18 = _13 - _17;
common/pixel.c:95:1: note: type of def: 3.
common/pixel.c:95:1: note: vect_is_simple_use: operand _19
common/pixel.c:95:1: note: def_stmt: _19 = d_18 * d_18;
common/pixel.c:95:1: note: type of def: 3.
common/pixel.c:95:1: note: === vect_analyze_data_ref_accesses ===
common/pixel.c:95:1: note: === vect_mark_stmts_to_be_vectorized ===
common/pixel.c:95:1: note: init: phi relevant? i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>
common/pixel.c:95:1: note: init: phi relevant? x_40 = PHI <x_21(3), 0(7)>
common/pixel.c:95:1: note: init: phi relevant? ivtmp_58 = PHI <ivtmp_57(3), 4(7)>
common/pixel.c:95:1: note: init: stmt relevant? # DEBUG x => x_40
common/pixel.c:95:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_38
common/pixel.c:95:1: note: init: stmt relevant? _9 = (sizetype) x_40;
common/pixel.c:95:1: note: init: stmt relevant? _10 = pix1_29 + _9;
common/pixel.c:95:1: note: init: stmt relevant? _12 = *_10;
common/pixel.c:95:1: note: init: stmt relevant? _13 = (int) _12;
common/pixel.c:95:1: note: init: stmt relevant? _15 = pix2_14 + _9;
common/pixel.c:95:1: note: init: stmt relevant? _16 = *_15;
common/pixel.c:95:1: note: init: stmt relevant? _17 = (int) _16;
common/pixel.c:95:1: note: init: stmt relevant? d_18 = _13 - _17;
common/pixel.c:95:1: note: init: stmt relevant? # DEBUG d => d_18
common/pixel.c:95:1: note: init: stmt relevant? _19 = d_18 * d_18;
common/pixel.c:95:1: note: init: stmt relevant? i_sum_20 = _19 + i_sum_38;
common/pixel.c:95:1: note: vec_stmt_relevant_p: used out of loop.
common/pixel.c:95:1: note: mark relevant 0, live 1.
common/pixel.c:95:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_20
common/pixel.c:95:1: note: init: stmt relevant? x_21 = x_40 + 1;
common/pixel.c:95:1: note: init: stmt relevant? # DEBUG x => x_21
common/pixel.c:95:1: note: init: stmt relevant? # DEBUG x => x_21
common/pixel.c:95:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_20
common/pixel.c:95:1: note: init: stmt relevant? ivtmp_57 = ivtmp_58 - 1;
common/pixel.c:95:1: note: init: stmt relevant? if (ivtmp_57 != 0)
common/pixel.c:95:1: note: worklist: examine stmt: i_sum_20 = _19 + i_sum_38;
common/pixel.c:95:1: note: vect_is_simple_use: operand _19
common/pixel.c:95:1: note: def_stmt: _19 = d_18 * d_18;
common/pixel.c:95:1: note: type of def: 3.
common/pixel.c:95:1: note: mark relevant 3, live 0.
common/pixel.c:95:1: note: vect_is_simple_use: operand i_sum_38
common/pixel.c:95:1: note: def_stmt: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>
common/pixel.c:95:1: note: type of def: 5.
common/pixel.c:95:1: note: mark relevant 3, live 0.
common/pixel.c:95:1: note: worklist: examine stmt: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>
common/pixel.c:95:1: note: vect_is_simple_use: operand i_sum_20
common/pixel.c:95:1: note: def_stmt: i_sum_20 = _19 + i_sum_38;
common/pixel.c:95:1: note: type of def: 5.
common/pixel.c:95:1: note: reduc-stmt defining reduc-phi in the same nest.
common/pixel.c:95:1: note: vect_is_simple_use: operand i_sum_39
common/pixel.c:95:1: note: def_stmt: i_sum_39 = PHI <i_sum_60(6), 0(2)>
common/pixel.c:95:1: note: type of def: 2.
common/pixel.c:95:1: note: def_stmt is out of loop.
common/pixel.c:95:1: note: worklist: examine stmt: _19 = d_18 * d_18;
common/pixel.c:95:1: note: vect_is_simple_use: operand d_18
common/pixel.c:95:1: note: def_stmt: d_18 = _13 - _17;
common/pixel.c:95:1: note: type of def: 3.
common/pixel.c:95:1: note: mark relevant 3, live 0.
common/pixel.c:95:1: note: vect_is_simple_use: operand d_18
common/pixel.c:95:1: note: def_stmt: d_18 = _13 - _17;
common/pixel.c:95:1: note: type of def: 3.
common/pixel.c:95:1: note: mark relevant 3, live 0.
common/pixel.c:95:1: note: already marked relevant/live.
common/pixel.c:95:1: note: worklist: examine stmt: d_18 = _13 - _17;
common/pixel.c:95:1: note: vect_is_simple_use: operand _13
common/pixel.c:95:1: note: def_stmt: _13 = (int) _12;
common/pixel.c:95:1: note: type of def: 3.
common/pixel.c:95:1: note: mark relevant 3, live 0.
common/pixel.c:95:1: note: vect_is_simple_use: operand _17
common/pixel.c:95:1: note: def_stmt: _17 = (int) _16;
common/pixel.c:95:1: note: type of def: 3.
common/pixel.c:95:1: note: mark relevant 3, live 0.
common/pixel.c:95:1: note: worklist: examine stmt: _17 = (int) _16;
common/pixel.c:95:1: note: vect_is_simple_use: operand _16
common/pixel.c:95:1: note: def_stmt: _16 = *_15;
common/pixel.c:95:1: note: type of def: 3.
common/pixel.c:95:1: note: mark relevant 3, live 0.
common/pixel.c:95:1: note: worklist: examine stmt: _16 = *_15;
common/pixel.c:95:1: note: worklist: examine stmt: _13 = (int) _12;
common/pixel.c:95:1: note: vect_is_simple_use: operand _12
common/pixel.c:95:1: note: def_stmt: _12 = *_10;
common/pixel.c:95:1: note: type of def: 3.
common/pixel.c:95:1: note: mark relevant 3, live 0.
common/pixel.c:95:1: note: worklist: examine stmt: _12 = *_10;
common/pixel.c:95:1: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _12 = *_10;
  stmt_b: _16 = *_15;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _12 = *_10;
  stmt_b: _12 = *_10;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_2)
  (chrec_b = {0B, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _16 = *_15;
  stmt_b: _16 = *_15;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_2)
  (chrec_b = {0B, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/pixel.c:95:1: note: === vect_determine_vectorization_factor ===
common/pixel.c:95:1: note: ==> examining phi: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>

common/pixel.c:95:1: note: get vectype for scalar type:  int
common/pixel.c:95:1: note: vectype: vector(4) int
common/pixel.c:95:1: note: nunits = 4
common/pixel.c:95:1: note: ==> examining phi: x_40 = PHI <x_21(3), 0(7)>

common/pixel.c:95:1: note: ==> examining phi: ivtmp_58 = PHI <ivtmp_57(3), 4(7)>

common/pixel.c:95:1: note: ==> examining statement: # DEBUG x => x_40

common/pixel.c:95:1: note: skip.
common/pixel.c:95:1: note: ==> examining statement: # DEBUG i_sum => i_sum_38

common/pixel.c:95:1: note: skip.
common/pixel.c:95:1: note: ==> examining statement: _9 = (sizetype) x_40;

common/pixel.c:95:1: note: skip.
common/pixel.c:95:1: note: ==> examining statement: _10 = pix1_29 + _9;

common/pixel.c:95:1: note: skip.
common/pixel.c:95:1: note: ==> examining statement: _12 = *_10;

common/pixel.c:95:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:95:1: note: vectype: vector(16) unsigned char
common/pixel.c:95:1: note: nunits = 16
common/pixel.c:95:1: note: ==> examining statement: _13 = (int) _12;

common/pixel.c:95:1: note: get vectype for scalar type:  int
common/pixel.c:95:1: note: vectype: vector(4) int
common/pixel.c:95:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:95:1: note: vectype: vector(16) unsigned char
common/pixel.c:95:1: note: nunits = 16
common/pixel.c:95:1: note: ==> examining statement: _15 = pix2_14 + _9;

common/pixel.c:95:1: note: skip.
common/pixel.c:95:1: note: ==> examining statement: _16 = *_15;

common/pixel.c:95:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:95:1: note: vectype: vector(16) unsigned char
common/pixel.c:95:1: note: nunits = 16
common/pixel.c:95:1: note: ==> examining statement: _17 = (int) _16;

common/pixel.c:95:1: note: get vectype for scalar type:  int
common/pixel.c:95:1: note: vectype: vector(4) int
common/pixel.c:95:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:95:1: note: vectype: vector(16) unsigned char
common/pixel.c:95:1: note: nunits = 16
common/pixel.c:95:1: note: ==> examining statement: d_18 = _13 - _17;

common/pixel.c:95:1: note: get vectype for scalar type:  int
common/pixel.c:95:1: note: vectype: vector(4) int
common/pixel.c:95:1: note: get vectype for scalar type:  int
common/pixel.c:95:1: note: vectype: vector(4) int
common/pixel.c:95:1: note: nunits = 4
common/pixel.c:95:1: note: ==> examining statement: # DEBUG d => d_18

common/pixel.c:95:1: note: skip.
common/pixel.c:95:1: note: ==> examining statement: _19 = d_18 * d_18;

common/pixel.c:95:1: note: get vectype for scalar type:  int
common/pixel.c:95:1: note: vectype: vector(4) int
common/pixel.c:95:1: note: get vectype for scalar type:  int
common/pixel.c:95:1: note: vectype: vector(4) int
common/pixel.c:95:1: note: nunits = 4
common/pixel.c:95:1: note: ==> examining statement: i_sum_20 = _19 + i_sum_38;

common/pixel.c:95:1: note: get vectype for scalar type:  int
common/pixel.c:95:1: note: vectype: vector(4) int
common/pixel.c:95:1: note: get vectype for scalar type:  int
common/pixel.c:95:1: note: vectype: vector(4) int
common/pixel.c:95:1: note: nunits = 4
common/pixel.c:95:1: note: ==> examining statement: # DEBUG i_sum => i_sum_20

common/pixel.c:95:1: note: skip.
common/pixel.c:95:1: note: ==> examining statement: x_21 = x_40 + 1;

common/pixel.c:95:1: note: skip.
common/pixel.c:95:1: note: ==> examining statement: # DEBUG x => x_21

common/pixel.c:95:1: note: skip.
common/pixel.c:95:1: note: ==> examining statement: # DEBUG x => x_21

common/pixel.c:95:1: note: skip.
common/pixel.c:95:1: note: ==> examining statement: # DEBUG i_sum => i_sum_20

common/pixel.c:95:1: note: skip.
common/pixel.c:95:1: note: ==> examining statement: ivtmp_57 = ivtmp_58 - 1;

common/pixel.c:95:1: note: skip.
common/pixel.c:95:1: note: ==> examining statement: if (ivtmp_57 != 0)

common/pixel.c:95:1: note: skip.
common/pixel.c:95:1: note: vectorization factor = 16
common/pixel.c:95:1: note: === vect_analyze_data_refs_alignment ===
common/pixel.c:95:1: note: vect_compute_data_ref_alignment:
common/pixel.c:95:1: note: can't force alignment of ref: *_10
common/pixel.c:95:1: note: vect_compute_data_ref_alignment:
common/pixel.c:95:1: note: can't force alignment of ref: *_15
common/pixel.c:95:1: note: === vect_prune_runtime_alias_test_list ===
common/pixel.c:95:1: note: === vect_enhance_data_refs_alignment ===
common/pixel.c:95:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:95:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:95:1: note: vect_can_advance_ivs_p:
common/pixel.c:95:1: note: Analyze phi: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>

common/pixel.c:95:1: note: reduc phi. skip.
common/pixel.c:95:1: note: Analyze phi: x_40 = PHI <x_21(3), 0(7)>

common/pixel.c:95:1: note: Analyze phi: ivtmp_58 = PHI <ivtmp_57(3), 4(7)>

common/pixel.c:95:1: note: Vectorizing an unaligned access.
common/pixel.c:95:1: note: Vectorizing an unaligned access.
common/pixel.c:95:1: note: === vect_analyze_slp ===
common/pixel.c:95:1: note: === vect_make_slp_decision ===
common/pixel.c:95:1: note: === vect_detect_hybrid_slp ===
common/pixel.c:95:1: note: === vect_analyze_loop_operations ===
common/pixel.c:95:1: note: examining phi: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>

common/pixel.c:95:1: note: examining phi: x_40 = PHI <x_21(3), 0(7)>

common/pixel.c:95:1: note: examining phi: ivtmp_58 = PHI <ivtmp_57(3), 4(7)>

common/pixel.c:95:1: note: ==> examining statement: # DEBUG x => x_40
common/pixel.c:95:1: note: irrelevant.
common/pixel.c:95:1: note: ==> examining statement: # DEBUG i_sum => i_sum_38
common/pixel.c:95:1: note: irrelevant.
common/pixel.c:95:1: note: ==> examining statement: _9 = (sizetype) x_40;
common/pixel.c:95:1: note: irrelevant.
common/pixel.c:95:1: note: ==> examining statement: _10 = pix1_29 + _9;
common/pixel.c:95:1: note: irrelevant.
common/pixel.c:95:1: note: ==> examining statement: _12 = *_10;
common/pixel.c:95:1: note: vect_is_simple_use: operand *_10
common/pixel.c:95:1: note: not ssa-name.
common/pixel.c:95:1: note: use not simple.
common/pixel.c:95:1: note: vect_is_simple_use: operand *_10
common/pixel.c:95:1: note: not ssa-name.
common/pixel.c:95:1: note: use not simple.
common/pixel.c:95:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:95:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:95:1: note: ==> examining statement: _13 = (int) _12;
common/pixel.c:95:1: note: vect_is_simple_use: operand _12
common/pixel.c:95:1: note: def_stmt: _12 = *_10;
common/pixel.c:95:1: note: type of def: 3.
common/pixel.c:95:1: note: === vectorizable_conversion ===
common/pixel.c:95:1: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:95:1: note: ==> examining statement: _15 = pix2_14 + _9;
common/pixel.c:95:1: note: irrelevant.
common/pixel.c:95:1: note: ==> examining statement: _16 = *_15;
common/pixel.c:95:1: note: vect_is_simple_use: operand *_15
common/pixel.c:95:1: note: not ssa-name.
common/pixel.c:95:1: note: use not simple.
common/pixel.c:95:1: note: vect_is_simple_use: operand *_15
common/pixel.c:95:1: note: not ssa-name.
common/pixel.c:95:1: note: use not simple.
common/pixel.c:95:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:95:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:95:1: note: ==> examining statement: _17 = (int) _16;
common/pixel.c:95:1: note: vect_is_simple_use: operand _16
common/pixel.c:95:1: note: def_stmt: _16 = *_15;
common/pixel.c:95:1: note: type of def: 3.
common/pixel.c:95:1: note: === vectorizable_conversion ===
common/pixel.c:95:1: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:95:1: note: ==> examining statement: d_18 = _13 - _17;
common/pixel.c:95:1: note: vect_is_simple_use: operand _13
common/pixel.c:95:1: note: def_stmt: _13 = (int) _12;
common/pixel.c:95:1: note: type of def: 3.
common/pixel.c:95:1: note: vect_is_simple_use: operand _17
common/pixel.c:95:1: note: def_stmt: _17 = (int) _16;
common/pixel.c:95:1: note: type of def: 3.
common/pixel.c:95:1: note: === vectorizable_operation ===
common/pixel.c:95:1: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:95:1: note: ==> examining statement: # DEBUG d => d_18
common/pixel.c:95:1: note: irrelevant.
common/pixel.c:95:1: note: ==> examining statement: _19 = d_18 * d_18;
common/pixel.c:95:1: note: vect_is_simple_use: operand d_18
common/pixel.c:95:1: note: def_stmt: d_18 = _13 - _17;
common/pixel.c:95:1: note: type of def: 3.
common/pixel.c:95:1: note: vect_is_simple_use: operand d_18
common/pixel.c:95:1: note: def_stmt: d_18 = _13 - _17;
common/pixel.c:95:1: note: type of def: 3.
common/pixel.c:95:1: note: === vectorizable_operation ===
common/pixel.c:95:1: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:95:1: note: ==> examining statement: i_sum_20 = _19 + i_sum_38;
common/pixel.c:95:1: note: vect_is_simple_use: operand _19
common/pixel.c:95:1: note: def_stmt: _19 = d_18 * d_18;
common/pixel.c:95:1: note: type of def: 3.
common/pixel.c:95:1: note: vect_is_simple_use: operand i_sum_38
common/pixel.c:95:1: note: def_stmt: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>
common/pixel.c:95:1: note: type of def: 5.
common/pixel.c:95:1: note: detected reduction: i_sum_20 = _19 + i_sum_38;

common/pixel.c:95:1: note: reduc op not supported by target.
vect_model_reduction_cost: inside_cost = 4, prologue_cost = 1, epilogue_cost = 5 .
common/pixel.c:95:1: note: ==> examining statement: # DEBUG i_sum => i_sum_20
common/pixel.c:95:1: note: irrelevant.
common/pixel.c:95:1: note: ==> examining statement: x_21 = x_40 + 1;
common/pixel.c:95:1: note: irrelevant.
common/pixel.c:95:1: note: ==> examining statement: # DEBUG x => x_21
common/pixel.c:95:1: note: irrelevant.
common/pixel.c:95:1: note: ==> examining statement: # DEBUG x => x_21
common/pixel.c:95:1: note: irrelevant.
common/pixel.c:95:1: note: ==> examining statement: # DEBUG i_sum => i_sum_20
common/pixel.c:95:1: note: irrelevant.
common/pixel.c:95:1: note: ==> examining statement: ivtmp_57 = ivtmp_58 - 1;
common/pixel.c:95:1: note: irrelevant.
common/pixel.c:95:1: note: ==> examining statement: if (ivtmp_57 != 0)
common/pixel.c:95:1: note: irrelevant.
common/pixel.c:95:1: note: vectorization_factor = 16, niters = 4
common/pixel.c:95:1: note: not vectorized: iteration count too small.
common/pixel.c:95:1: note: not vectorized: iteration count smaller than vectorization factor.
common/pixel.c:95:1: note: bad operation or unsupported loop bound.
common/pixel.c:95:1: note: vectorized 0 loops in function.
x264_pixel_ssd_4x8 (uint8_t * pix1, int i_stride_pix1, uint8_t * pix2, int i_stride_pix2)
{
  int d;
  int y;
  int x;
  int i_sum;
  sizetype _9;
  uint8_t * _10;
  unsigned char _12;
  int _13;
  uint8_t * _15;
  unsigned char _16;
  int _17;
  int _19;
  unsigned int ivtmp_55;
  unsigned int ivtmp_56;
  unsigned int ivtmp_57;
  unsigned int ivtmp_58;
  sizetype pretmp_61;
  sizetype pretmp_62;

  <bb 2>:
  # DEBUG i_sum => 0
  # DEBUG y => 0
  # DEBUG y => 0
  # DEBUG i_sum => 0
  # DEBUG pix2 => pix2_8(D)
  # DEBUG pix1 => pix1_7(D)
  pretmp_61 = (sizetype) i_stride_pix1_22(D);
  pretmp_62 = (sizetype) i_stride_pix2_25(D);
  goto <bb 7>;

  <bb 3>:

  <bb 4>:
  # i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>
  # x_40 = PHI <x_21(3), 0(7)>
  # ivtmp_58 = PHI <ivtmp_57(3), 4(7)>
  # DEBUG x => x_40
  # DEBUG i_sum => i_sum_38
  _9 = (sizetype) x_40;
  _10 = pix1_29 + _9;
  _12 = *_10;
  _13 = (int) _12;
  _15 = pix2_14 + _9;
  _16 = *_15;
  _17 = (int) _16;
  d_18 = _13 - _17;
  # DEBUG d => d_18
  _19 = d_18 * d_18;
  i_sum_20 = _19 + i_sum_38;
  # DEBUG i_sum => i_sum_20
  x_21 = x_40 + 1;
  # DEBUG x => x_21
  # DEBUG x => x_21
  # DEBUG i_sum => i_sum_20
  ivtmp_57 = ivtmp_58 - 1;
  if (ivtmp_57 != 0)
    goto <bb 3>;
  else
    goto <bb 5>;

  <bb 5>:
  # i_sum_60 = PHI <i_sum_20(4)>
  pix1_24 = pix1_29 + pretmp_61;
  # DEBUG pix1 => pix1_24
  pix2_27 = pix2_14 + pretmp_62;
  # DEBUG pix2 => pix2_27
  y_28 = y_41 + 1;
  # DEBUG y => y_28
  # DEBUG y => y_28
  # DEBUG i_sum => i_sum_60
  # DEBUG pix2 => pix2_27
  # DEBUG pix1 => pix1_24
  ivtmp_55 = ivtmp_56 - 1;
  if (ivtmp_55 != 0)
    goto <bb 6>;
  else
    goto <bb 8>;

  <bb 6>:

  <bb 7>:
  # pix1_29 = PHI <pix1_24(6), pix1_7(D)(2)>
  # pix2_14 = PHI <pix2_27(6), pix2_8(D)(2)>
  # i_sum_39 = PHI <i_sum_60(6), 0(2)>
  # y_41 = PHI <y_28(6), 0(2)>
  # ivtmp_56 = PHI <ivtmp_55(6), 8(2)>
  # DEBUG y => y_41
  # DEBUG i_sum => i_sum_39
  # DEBUG pix2 => pix2_14
  # DEBUG pix1 => pix1_29
  # DEBUG x => 0
  # DEBUG i_sum => i_sum_39
  goto <bb 4>;

  <bb 8>:
  # i_sum_59 = PHI <i_sum_60(5)>
  return i_sum_59;

}



;; Function x264_pixel_ssd_4x4 (x264_pixel_ssd_4x4, funcdef_no=128, decl_uid=7691, cgraph_uid=128, symbol_order=171)


Analyzing loop at common/pixel.c:96
common/pixel.c:96:1: note: ===== analyze_loop_nest =====
common/pixel.c:96:1: note: === vect_analyze_loop_form ===
common/pixel.c:96:1: note: ===== analyze_loop_nest_1 =====
common/pixel.c:96:1: note: === vect_analyze_loop_form ===
common/pixel.c:96:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 2
  exit condition [3, + , 4294967295] != 0
  bounds on difference of bases: -3 ... -3
  result:
    # of iterations 3, bounded by 3
common/pixel.c:96:1: note: Considering outer-loop vectorization.
common/pixel.c:96:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 1
  exit condition [3, + , 4294967295] != 0
  bounds on difference of bases: -3 ... -3
  result:
    # of iterations 3, bounded by 3
common/pixel.c:96:1: note: === vect_analyze_data_refs ===
Creating dr for *_10
analyze_innermost: success.
	base_address: pix1_29
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix1_7(D)
	Access function 0: {{0B, +, pretmp_61}_1, +, 1}_2
Creating dr for *_15
analyze_innermost: success.
	base_address: pix2_14
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix2_8(D)
	Access function 0: {{0B, +, pretmp_62}_1, +, 1}_2
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:96:1: note: analyze in outer-loop: *pix1_29
common/pixel.c:96:1: note: failed: evolution of base is not affine.
common/pixel.c:96:1: note: bad data references.

Analyzing loop at common/pixel.c:96
common/pixel.c:96:1: note: ===== analyze_loop_nest =====
common/pixel.c:96:1: note: === vect_analyze_loop_form ===
common/pixel.c:96:1: note: === get_loop_niters ===
common/pixel.c:96:1: note: === vect_analyze_data_refs ===
Creating dr for *_10
analyze_innermost: success.
	base_address: pix1_29
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix1_29
	Access function 0: {0B, +, 1}_2
Creating dr for *_15
analyze_innermost: success.
	base_address: pix2_14
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix2_14
	Access function 0: {0B, +, 1}_2
common/pixel.c:96:1: note: got vectype for stmt: _12 = *_10;
vector(16) unsigned char
common/pixel.c:96:1: note: got vectype for stmt: _16 = *_15;
vector(16) unsigned char
common/pixel.c:96:1: note: === vect_analyze_scalar_cycles ===
common/pixel.c:96:1: note: Analyze phi: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>

common/pixel.c:96:1: note: Access function of PHI: {i_sum_39, +, _19}_2
common/pixel.c:96:1: note: step: _19,  init: i_sum_39
common/pixel.c:96:1: note: step unknown.
common/pixel.c:96:1: note: Analyze phi: x_40 = PHI <x_21(3), 0(7)>

common/pixel.c:96:1: note: Access function of PHI: {0, +, 1}_2
common/pixel.c:96:1: note: step: 1,  init: 0
common/pixel.c:96:1: note: Detected induction.
common/pixel.c:96:1: note: Analyze phi: ivtmp_58 = PHI <ivtmp_57(3), 4(7)>

common/pixel.c:96:1: note: Access function of PHI: {4, +, 4294967295}_2
common/pixel.c:96:1: note: step: 4294967295,  init: 4
common/pixel.c:96:1: note: Detected induction.
common/pixel.c:96:1: note: Analyze phi: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>

common/pixel.c:96:1: note: detected reduction: i_sum_20 = _19 + i_sum_38;

common/pixel.c:96:1: note: Detected reduction.
common/pixel.c:96:1: note: === vect_pattern_recog ===
common/pixel.c:96:1: note: vect_is_simple_use: operand d_18
common/pixel.c:96:1: note: def_stmt: d_18 = _13 - _17;
common/pixel.c:96:1: note: type of def: 3.
common/pixel.c:96:1: note: vect_is_simple_use: operand _19
common/pixel.c:96:1: note: def_stmt: _19 = d_18 * d_18;
common/pixel.c:96:1: note: type of def: 3.
common/pixel.c:96:1: note: vect_is_simple_use: operand _19
common/pixel.c:96:1: note: def_stmt: _19 = d_18 * d_18;
common/pixel.c:96:1: note: type of def: 3.
common/pixel.c:96:1: note: vect_is_simple_use: operand d_18
common/pixel.c:96:1: note: def_stmt: d_18 = _13 - _17;
common/pixel.c:96:1: note: type of def: 3.
common/pixel.c:96:1: note: vect_is_simple_use: operand _19
common/pixel.c:96:1: note: def_stmt: _19 = d_18 * d_18;
common/pixel.c:96:1: note: type of def: 3.
common/pixel.c:96:1: note: === vect_analyze_data_ref_accesses ===
common/pixel.c:96:1: note: === vect_mark_stmts_to_be_vectorized ===
common/pixel.c:96:1: note: init: phi relevant? i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>
common/pixel.c:96:1: note: init: phi relevant? x_40 = PHI <x_21(3), 0(7)>
common/pixel.c:96:1: note: init: phi relevant? ivtmp_58 = PHI <ivtmp_57(3), 4(7)>
common/pixel.c:96:1: note: init: stmt relevant? # DEBUG x => x_40
common/pixel.c:96:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_38
common/pixel.c:96:1: note: init: stmt relevant? _9 = (sizetype) x_40;
common/pixel.c:96:1: note: init: stmt relevant? _10 = pix1_29 + _9;
common/pixel.c:96:1: note: init: stmt relevant? _12 = *_10;
common/pixel.c:96:1: note: init: stmt relevant? _13 = (int) _12;
common/pixel.c:96:1: note: init: stmt relevant? _15 = pix2_14 + _9;
common/pixel.c:96:1: note: init: stmt relevant? _16 = *_15;
common/pixel.c:96:1: note: init: stmt relevant? _17 = (int) _16;
common/pixel.c:96:1: note: init: stmt relevant? d_18 = _13 - _17;
common/pixel.c:96:1: note: init: stmt relevant? # DEBUG d => d_18
common/pixel.c:96:1: note: init: stmt relevant? _19 = d_18 * d_18;
common/pixel.c:96:1: note: init: stmt relevant? i_sum_20 = _19 + i_sum_38;
common/pixel.c:96:1: note: vec_stmt_relevant_p: used out of loop.
common/pixel.c:96:1: note: mark relevant 0, live 1.
common/pixel.c:96:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_20
common/pixel.c:96:1: note: init: stmt relevant? x_21 = x_40 + 1;
common/pixel.c:96:1: note: init: stmt relevant? # DEBUG x => x_21
common/pixel.c:96:1: note: init: stmt relevant? # DEBUG x => x_21
common/pixel.c:96:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_20
common/pixel.c:96:1: note: init: stmt relevant? ivtmp_57 = ivtmp_58 - 1;
common/pixel.c:96:1: note: init: stmt relevant? if (ivtmp_57 != 0)
common/pixel.c:96:1: note: worklist: examine stmt: i_sum_20 = _19 + i_sum_38;
common/pixel.c:96:1: note: vect_is_simple_use: operand _19
common/pixel.c:96:1: note: def_stmt: _19 = d_18 * d_18;
common/pixel.c:96:1: note: type of def: 3.
common/pixel.c:96:1: note: mark relevant 3, live 0.
common/pixel.c:96:1: note: vect_is_simple_use: operand i_sum_38
common/pixel.c:96:1: note: def_stmt: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>
common/pixel.c:96:1: note: type of def: 5.
common/pixel.c:96:1: note: mark relevant 3, live 0.
common/pixel.c:96:1: note: worklist: examine stmt: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>
common/pixel.c:96:1: note: vect_is_simple_use: operand i_sum_20
common/pixel.c:96:1: note: def_stmt: i_sum_20 = _19 + i_sum_38;
common/pixel.c:96:1: note: type of def: 5.
common/pixel.c:96:1: note: reduc-stmt defining reduc-phi in the same nest.
common/pixel.c:96:1: note: vect_is_simple_use: operand i_sum_39
common/pixel.c:96:1: note: def_stmt: i_sum_39 = PHI <i_sum_60(6), 0(2)>
common/pixel.c:96:1: note: type of def: 2.
common/pixel.c:96:1: note: def_stmt is out of loop.
common/pixel.c:96:1: note: worklist: examine stmt: _19 = d_18 * d_18;
common/pixel.c:96:1: note: vect_is_simple_use: operand d_18
common/pixel.c:96:1: note: def_stmt: d_18 = _13 - _17;
common/pixel.c:96:1: note: type of def: 3.
common/pixel.c:96:1: note: mark relevant 3, live 0.
common/pixel.c:96:1: note: vect_is_simple_use: operand d_18
common/pixel.c:96:1: note: def_stmt: d_18 = _13 - _17;
common/pixel.c:96:1: note: type of def: 3.
common/pixel.c:96:1: note: mark relevant 3, live 0.
common/pixel.c:96:1: note: already marked relevant/live.
common/pixel.c:96:1: note: worklist: examine stmt: d_18 = _13 - _17;
common/pixel.c:96:1: note: vect_is_simple_use: operand _13
common/pixel.c:96:1: note: def_stmt: _13 = (int) _12;
common/pixel.c:96:1: note: type of def: 3.
common/pixel.c:96:1: note: mark relevant 3, live 0.
common/pixel.c:96:1: note: vect_is_simple_use: operand _17
common/pixel.c:96:1: note: def_stmt: _17 = (int) _16;
common/pixel.c:96:1: note: type of def: 3.
common/pixel.c:96:1: note: mark relevant 3, live 0.
common/pixel.c:96:1: note: worklist: examine stmt: _17 = (int) _16;
common/pixel.c:96:1: note: vect_is_simple_use: operand _16
common/pixel.c:96:1: note: def_stmt: _16 = *_15;
common/pixel.c:96:1: note: type of def: 3.
common/pixel.c:96:1: note: mark relevant 3, live 0.
common/pixel.c:96:1: note: worklist: examine stmt: _16 = *_15;
common/pixel.c:96:1: note: worklist: examine stmt: _13 = (int) _12;
common/pixel.c:96:1: note: vect_is_simple_use: operand _12
common/pixel.c:96:1: note: def_stmt: _12 = *_10;
common/pixel.c:96:1: note: type of def: 3.
common/pixel.c:96:1: note: mark relevant 3, live 0.
common/pixel.c:96:1: note: worklist: examine stmt: _12 = *_10;
common/pixel.c:96:1: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _12 = *_10;
  stmt_b: _16 = *_15;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _12 = *_10;
  stmt_b: _12 = *_10;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_2)
  (chrec_b = {0B, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _16 = *_15;
  stmt_b: _16 = *_15;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_2)
  (chrec_b = {0B, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/pixel.c:96:1: note: === vect_determine_vectorization_factor ===
common/pixel.c:96:1: note: ==> examining phi: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>

common/pixel.c:96:1: note: get vectype for scalar type:  int
common/pixel.c:96:1: note: vectype: vector(4) int
common/pixel.c:96:1: note: nunits = 4
common/pixel.c:96:1: note: ==> examining phi: x_40 = PHI <x_21(3), 0(7)>

common/pixel.c:96:1: note: ==> examining phi: ivtmp_58 = PHI <ivtmp_57(3), 4(7)>

common/pixel.c:96:1: note: ==> examining statement: # DEBUG x => x_40

common/pixel.c:96:1: note: skip.
common/pixel.c:96:1: note: ==> examining statement: # DEBUG i_sum => i_sum_38

common/pixel.c:96:1: note: skip.
common/pixel.c:96:1: note: ==> examining statement: _9 = (sizetype) x_40;

common/pixel.c:96:1: note: skip.
common/pixel.c:96:1: note: ==> examining statement: _10 = pix1_29 + _9;

common/pixel.c:96:1: note: skip.
common/pixel.c:96:1: note: ==> examining statement: _12 = *_10;

common/pixel.c:96:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:96:1: note: vectype: vector(16) unsigned char
common/pixel.c:96:1: note: nunits = 16
common/pixel.c:96:1: note: ==> examining statement: _13 = (int) _12;

common/pixel.c:96:1: note: get vectype for scalar type:  int
common/pixel.c:96:1: note: vectype: vector(4) int
common/pixel.c:96:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:96:1: note: vectype: vector(16) unsigned char
common/pixel.c:96:1: note: nunits = 16
common/pixel.c:96:1: note: ==> examining statement: _15 = pix2_14 + _9;

common/pixel.c:96:1: note: skip.
common/pixel.c:96:1: note: ==> examining statement: _16 = *_15;

common/pixel.c:96:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:96:1: note: vectype: vector(16) unsigned char
common/pixel.c:96:1: note: nunits = 16
common/pixel.c:96:1: note: ==> examining statement: _17 = (int) _16;

common/pixel.c:96:1: note: get vectype for scalar type:  int
common/pixel.c:96:1: note: vectype: vector(4) int
common/pixel.c:96:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:96:1: note: vectype: vector(16) unsigned char
common/pixel.c:96:1: note: nunits = 16
common/pixel.c:96:1: note: ==> examining statement: d_18 = _13 - _17;

common/pixel.c:96:1: note: get vectype for scalar type:  int
common/pixel.c:96:1: note: vectype: vector(4) int
common/pixel.c:96:1: note: get vectype for scalar type:  int
common/pixel.c:96:1: note: vectype: vector(4) int
common/pixel.c:96:1: note: nunits = 4
common/pixel.c:96:1: note: ==> examining statement: # DEBUG d => d_18

common/pixel.c:96:1: note: skip.
common/pixel.c:96:1: note: ==> examining statement: _19 = d_18 * d_18;

common/pixel.c:96:1: note: get vectype for scalar type:  int
common/pixel.c:96:1: note: vectype: vector(4) int
common/pixel.c:96:1: note: get vectype for scalar type:  int
common/pixel.c:96:1: note: vectype: vector(4) int
common/pixel.c:96:1: note: nunits = 4
common/pixel.c:96:1: note: ==> examining statement: i_sum_20 = _19 + i_sum_38;

common/pixel.c:96:1: note: get vectype for scalar type:  int
common/pixel.c:96:1: note: vectype: vector(4) int
common/pixel.c:96:1: note: get vectype for scalar type:  int
common/pixel.c:96:1: note: vectype: vector(4) int
common/pixel.c:96:1: note: nunits = 4
common/pixel.c:96:1: note: ==> examining statement: # DEBUG i_sum => i_sum_20

common/pixel.c:96:1: note: skip.
common/pixel.c:96:1: note: ==> examining statement: x_21 = x_40 + 1;

common/pixel.c:96:1: note: skip.
common/pixel.c:96:1: note: ==> examining statement: # DEBUG x => x_21

common/pixel.c:96:1: note: skip.
common/pixel.c:96:1: note: ==> examining statement: # DEBUG x => x_21

common/pixel.c:96:1: note: skip.
common/pixel.c:96:1: note: ==> examining statement: # DEBUG i_sum => i_sum_20

common/pixel.c:96:1: note: skip.
common/pixel.c:96:1: note: ==> examining statement: ivtmp_57 = ivtmp_58 - 1;

common/pixel.c:96:1: note: skip.
common/pixel.c:96:1: note: ==> examining statement: if (ivtmp_57 != 0)

common/pixel.c:96:1: note: skip.
common/pixel.c:96:1: note: vectorization factor = 16
common/pixel.c:96:1: note: === vect_analyze_data_refs_alignment ===
common/pixel.c:96:1: note: vect_compute_data_ref_alignment:
common/pixel.c:96:1: note: can't force alignment of ref: *_10
common/pixel.c:96:1: note: vect_compute_data_ref_alignment:
common/pixel.c:96:1: note: can't force alignment of ref: *_15
common/pixel.c:96:1: note: === vect_prune_runtime_alias_test_list ===
common/pixel.c:96:1: note: === vect_enhance_data_refs_alignment ===
common/pixel.c:96:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:96:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:96:1: note: vect_can_advance_ivs_p:
common/pixel.c:96:1: note: Analyze phi: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>

common/pixel.c:96:1: note: reduc phi. skip.
common/pixel.c:96:1: note: Analyze phi: x_40 = PHI <x_21(3), 0(7)>

common/pixel.c:96:1: note: Analyze phi: ivtmp_58 = PHI <ivtmp_57(3), 4(7)>

common/pixel.c:96:1: note: Vectorizing an unaligned access.
common/pixel.c:96:1: note: Vectorizing an unaligned access.
common/pixel.c:96:1: note: === vect_analyze_slp ===
common/pixel.c:96:1: note: === vect_make_slp_decision ===
common/pixel.c:96:1: note: === vect_detect_hybrid_slp ===
common/pixel.c:96:1: note: === vect_analyze_loop_operations ===
common/pixel.c:96:1: note: examining phi: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>

common/pixel.c:96:1: note: examining phi: x_40 = PHI <x_21(3), 0(7)>

common/pixel.c:96:1: note: examining phi: ivtmp_58 = PHI <ivtmp_57(3), 4(7)>

common/pixel.c:96:1: note: ==> examining statement: # DEBUG x => x_40
common/pixel.c:96:1: note: irrelevant.
common/pixel.c:96:1: note: ==> examining statement: # DEBUG i_sum => i_sum_38
common/pixel.c:96:1: note: irrelevant.
common/pixel.c:96:1: note: ==> examining statement: _9 = (sizetype) x_40;
common/pixel.c:96:1: note: irrelevant.
common/pixel.c:96:1: note: ==> examining statement: _10 = pix1_29 + _9;
common/pixel.c:96:1: note: irrelevant.
common/pixel.c:96:1: note: ==> examining statement: _12 = *_10;
common/pixel.c:96:1: note: vect_is_simple_use: operand *_10
common/pixel.c:96:1: note: not ssa-name.
common/pixel.c:96:1: note: use not simple.
common/pixel.c:96:1: note: vect_is_simple_use: operand *_10
common/pixel.c:96:1: note: not ssa-name.
common/pixel.c:96:1: note: use not simple.
common/pixel.c:96:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:96:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:96:1: note: ==> examining statement: _13 = (int) _12;
common/pixel.c:96:1: note: vect_is_simple_use: operand _12
common/pixel.c:96:1: note: def_stmt: _12 = *_10;
common/pixel.c:96:1: note: type of def: 3.
common/pixel.c:96:1: note: === vectorizable_conversion ===
common/pixel.c:96:1: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:96:1: note: ==> examining statement: _15 = pix2_14 + _9;
common/pixel.c:96:1: note: irrelevant.
common/pixel.c:96:1: note: ==> examining statement: _16 = *_15;
common/pixel.c:96:1: note: vect_is_simple_use: operand *_15
common/pixel.c:96:1: note: not ssa-name.
common/pixel.c:96:1: note: use not simple.
common/pixel.c:96:1: note: vect_is_simple_use: operand *_15
common/pixel.c:96:1: note: not ssa-name.
common/pixel.c:96:1: note: use not simple.
common/pixel.c:96:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:96:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:96:1: note: ==> examining statement: _17 = (int) _16;
common/pixel.c:96:1: note: vect_is_simple_use: operand _16
common/pixel.c:96:1: note: def_stmt: _16 = *_15;
common/pixel.c:96:1: note: type of def: 3.
common/pixel.c:96:1: note: === vectorizable_conversion ===
common/pixel.c:96:1: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:96:1: note: ==> examining statement: d_18 = _13 - _17;
common/pixel.c:96:1: note: vect_is_simple_use: operand _13
common/pixel.c:96:1: note: def_stmt: _13 = (int) _12;
common/pixel.c:96:1: note: type of def: 3.
common/pixel.c:96:1: note: vect_is_simple_use: operand _17
common/pixel.c:96:1: note: def_stmt: _17 = (int) _16;
common/pixel.c:96:1: note: type of def: 3.
common/pixel.c:96:1: note: === vectorizable_operation ===
common/pixel.c:96:1: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:96:1: note: ==> examining statement: # DEBUG d => d_18
common/pixel.c:96:1: note: irrelevant.
common/pixel.c:96:1: note: ==> examining statement: _19 = d_18 * d_18;
common/pixel.c:96:1: note: vect_is_simple_use: operand d_18
common/pixel.c:96:1: note: def_stmt: d_18 = _13 - _17;
common/pixel.c:96:1: note: type of def: 3.
common/pixel.c:96:1: note: vect_is_simple_use: operand d_18
common/pixel.c:96:1: note: def_stmt: d_18 = _13 - _17;
common/pixel.c:96:1: note: type of def: 3.
common/pixel.c:96:1: note: === vectorizable_operation ===
common/pixel.c:96:1: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:96:1: note: ==> examining statement: i_sum_20 = _19 + i_sum_38;
common/pixel.c:96:1: note: vect_is_simple_use: operand _19
common/pixel.c:96:1: note: def_stmt: _19 = d_18 * d_18;
common/pixel.c:96:1: note: type of def: 3.
common/pixel.c:96:1: note: vect_is_simple_use: operand i_sum_38
common/pixel.c:96:1: note: def_stmt: i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>
common/pixel.c:96:1: note: type of def: 5.
common/pixel.c:96:1: note: detected reduction: i_sum_20 = _19 + i_sum_38;

common/pixel.c:96:1: note: reduc op not supported by target.
vect_model_reduction_cost: inside_cost = 4, prologue_cost = 1, epilogue_cost = 5 .
common/pixel.c:96:1: note: ==> examining statement: # DEBUG i_sum => i_sum_20
common/pixel.c:96:1: note: irrelevant.
common/pixel.c:96:1: note: ==> examining statement: x_21 = x_40 + 1;
common/pixel.c:96:1: note: irrelevant.
common/pixel.c:96:1: note: ==> examining statement: # DEBUG x => x_21
common/pixel.c:96:1: note: irrelevant.
common/pixel.c:96:1: note: ==> examining statement: # DEBUG x => x_21
common/pixel.c:96:1: note: irrelevant.
common/pixel.c:96:1: note: ==> examining statement: # DEBUG i_sum => i_sum_20
common/pixel.c:96:1: note: irrelevant.
common/pixel.c:96:1: note: ==> examining statement: ivtmp_57 = ivtmp_58 - 1;
common/pixel.c:96:1: note: irrelevant.
common/pixel.c:96:1: note: ==> examining statement: if (ivtmp_57 != 0)
common/pixel.c:96:1: note: irrelevant.
common/pixel.c:96:1: note: vectorization_factor = 16, niters = 4
common/pixel.c:96:1: note: not vectorized: iteration count too small.
common/pixel.c:96:1: note: not vectorized: iteration count smaller than vectorization factor.
common/pixel.c:96:1: note: bad operation or unsupported loop bound.
common/pixel.c:96:1: note: vectorized 0 loops in function.
x264_pixel_ssd_4x4 (uint8_t * pix1, int i_stride_pix1, uint8_t * pix2, int i_stride_pix2)
{
  int d;
  int y;
  int x;
  int i_sum;
  sizetype _9;
  uint8_t * _10;
  unsigned char _12;
  int _13;
  uint8_t * _15;
  unsigned char _16;
  int _17;
  int _19;
  unsigned int ivtmp_55;
  unsigned int ivtmp_56;
  unsigned int ivtmp_57;
  unsigned int ivtmp_58;
  sizetype pretmp_61;
  sizetype pretmp_62;

  <bb 2>:
  # DEBUG i_sum => 0
  # DEBUG y => 0
  # DEBUG y => 0
  # DEBUG i_sum => 0
  # DEBUG pix2 => pix2_8(D)
  # DEBUG pix1 => pix1_7(D)
  pretmp_61 = (sizetype) i_stride_pix1_22(D);
  pretmp_62 = (sizetype) i_stride_pix2_25(D);
  goto <bb 7>;

  <bb 3>:

  <bb 4>:
  # i_sum_38 = PHI <i_sum_20(3), i_sum_39(7)>
  # x_40 = PHI <x_21(3), 0(7)>
  # ivtmp_58 = PHI <ivtmp_57(3), 4(7)>
  # DEBUG x => x_40
  # DEBUG i_sum => i_sum_38
  _9 = (sizetype) x_40;
  _10 = pix1_29 + _9;
  _12 = *_10;
  _13 = (int) _12;
  _15 = pix2_14 + _9;
  _16 = *_15;
  _17 = (int) _16;
  d_18 = _13 - _17;
  # DEBUG d => d_18
  _19 = d_18 * d_18;
  i_sum_20 = _19 + i_sum_38;
  # DEBUG i_sum => i_sum_20
  x_21 = x_40 + 1;
  # DEBUG x => x_21
  # DEBUG x => x_21
  # DEBUG i_sum => i_sum_20
  ivtmp_57 = ivtmp_58 - 1;
  if (ivtmp_57 != 0)
    goto <bb 3>;
  else
    goto <bb 5>;

  <bb 5>:
  # i_sum_60 = PHI <i_sum_20(4)>
  pix1_24 = pix1_29 + pretmp_61;
  # DEBUG pix1 => pix1_24
  pix2_27 = pix2_14 + pretmp_62;
  # DEBUG pix2 => pix2_27
  y_28 = y_41 + 1;
  # DEBUG y => y_28
  # DEBUG y => y_28
  # DEBUG i_sum => i_sum_60
  # DEBUG pix2 => pix2_27
  # DEBUG pix1 => pix1_24
  ivtmp_55 = ivtmp_56 - 1;
  if (ivtmp_55 != 0)
    goto <bb 6>;
  else
    goto <bb 8>;

  <bb 6>:

  <bb 7>:
  # pix1_29 = PHI <pix1_24(6), pix1_7(D)(2)>
  # pix2_14 = PHI <pix2_27(6), pix2_8(D)(2)>
  # i_sum_39 = PHI <i_sum_60(6), 0(2)>
  # y_41 = PHI <y_28(6), 0(2)>
  # ivtmp_56 = PHI <ivtmp_55(6), 4(2)>
  # DEBUG y => y_41
  # DEBUG i_sum => i_sum_39
  # DEBUG pix2 => pix2_14
  # DEBUG pix1 => pix1_29
  # DEBUG x => 0
  # DEBUG i_sum => i_sum_39
  goto <bb 4>;

  <bb 8>:
  # i_sum_59 = PHI <i_sum_60(5)>
  return i_sum_59;

}



;; Function x264_pixel_var_16x16 (x264_pixel_var_16x16, funcdef_no=130, decl_uid=7745, cgraph_uid=130, symbol_order=173)


Analyzing loop at common/pixel.c:161
common/pixel.c:161:1: note: ===== analyze_loop_nest =====
common/pixel.c:161:1: note: === vect_analyze_loop_form ===
common/pixel.c:161:1: note: ===== analyze_loop_nest_1 =====
common/pixel.c:161:1: note: === vect_analyze_loop_form ===
common/pixel.c:161:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 2
  exit condition [15, + , 4294967295] != 0
  bounds on difference of bases: -15 ... -15
  result:
    # of iterations 15, bounded by 15
common/pixel.c:161:1: note: Considering outer-loop vectorization.
common/pixel.c:161:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 1
  exit condition [15, + , 4294967295] != 0
  bounds on difference of bases: -15 ... -15
  result:
    # of iterations 15, bounded by 15
common/pixel.c:161:1: note: === vect_analyze_data_refs ===
Creating dr for *_10
analyze_innermost: success.
	base_address: pix_17
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix_8(D)
	Access function 0: {{0B, +, pretmp_75}_1, +, 1}_2
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:161:1: note: analyze in outer-loop: *pix_17
common/pixel.c:161:1: note: failed: evolution of base is not affine.
common/pixel.c:161:1: note: bad data references.

Analyzing loop at common/pixel.c:161
common/pixel.c:161:1: note: ===== analyze_loop_nest =====
common/pixel.c:161:1: note: === vect_analyze_loop_form ===
common/pixel.c:161:1: note: === get_loop_niters ===
common/pixel.c:161:1: note: === vect_analyze_data_refs ===
Creating dr for *_10
analyze_innermost: success.
	base_address: pix_17
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix_17
	Access function 0: {0B, +, 1}_2
common/pixel.c:161:1: note: got vectype for stmt: _12 = *_10;
vector(16) unsigned char
common/pixel.c:161:1: note: === vect_analyze_scalar_cycles ===
common/pixel.c:161:1: note: Analyze phi: sum_16 = PHI <sum_14(3), sum_15(7)>

common/pixel.c:161:1: note: Access function of PHI: {sum_15, +, _13}_2
common/pixel.c:161:1: note: step: _13,  init: sum_15
common/pixel.c:161:1: note: step unknown.
common/pixel.c:161:1: note: Analyze phi: sqr_44 = PHI <sqr_21(3), sqr_45(7)>

common/pixel.c:161:1: note: Access function of PHI: {sqr_45, +, _20}_2
common/pixel.c:161:1: note: step: _20,  init: sqr_45
common/pixel.c:161:1: note: step unknown.
common/pixel.c:161:1: note: Analyze phi: x_46 = PHI <x_22(3), 0(7)>

common/pixel.c:161:1: note: Access function of PHI: {0, +, 1}_2
common/pixel.c:161:1: note: step: 1,  init: 0
common/pixel.c:161:1: note: Detected induction.
common/pixel.c:161:1: note: Analyze phi: ivtmp_70 = PHI <ivtmp_69(3), 16(7)>

common/pixel.c:161:1: note: Access function of PHI: {16, +, 4294967295}_2
common/pixel.c:161:1: note: step: 4294967295,  init: 16
common/pixel.c:161:1: note: Detected induction.
common/pixel.c:161:1: note: Analyze phi: sqr_44 = PHI <sqr_21(3), sqr_45(7)>

common/pixel.c:161:1: note: detected reduction: sqr_21 = _20 + sqr_44;

common/pixel.c:161:1: note: Detected reduction.
common/pixel.c:161:1: note: Analyze phi: sum_16 = PHI <sum_14(3), sum_15(7)>

common/pixel.c:161:1: note: detected reduction: sum_14 = _13 + sum_16;

common/pixel.c:161:1: note: Detected reduction.
common/pixel.c:161:1: note: === vect_pattern_recog ===
common/pixel.c:161:1: note: vect_is_simple_use: operand _13
common/pixel.c:161:1: note: def_stmt: _13 = (unsigned int) _12;
common/pixel.c:161:1: note: type of def: 3.
common/pixel.c:161:1: note: vect_is_simple_use: operand _12
common/pixel.c:161:1: note: def_stmt: _12 = *_10;
common/pixel.c:161:1: note: type of def: 3.
common/pixel.c:161:1: note: vect_recog_widen_sum_pattern: detected: patt_66 = _12 w+ sum_16;

common/pixel.c:161:1: note: vect_is_simple_use: operand _13
common/pixel.c:161:1: note: def_stmt: _13 = (unsigned int) _12;
common/pixel.c:161:1: note: type of def: 3.
common/pixel.c:161:1: note: vect_is_simple_use: operand _12
common/pixel.c:161:1: note: def_stmt: _12 = *_10;
common/pixel.c:161:1: note: type of def: 3.
common/pixel.c:161:1: note: vect_is_simple_use: operand _13
common/pixel.c:161:1: note: def_stmt: _13 = (unsigned int) _12;
common/pixel.c:161:1: note: type of def: 3.
common/pixel.c:161:1: note: vect_is_simple_use: operand _12
common/pixel.c:161:1: note: def_stmt: _12 = *_10;
common/pixel.c:161:1: note: type of def: 3.
common/pixel.c:161:1: note: vect_is_simple_use: operand _18
common/pixel.c:161:1: note: def_stmt: _18 = (int) _12;
common/pixel.c:161:1: note: type of def: 3.
common/pixel.c:161:1: note: vect_is_simple_use: operand _12
common/pixel.c:161:1: note: def_stmt: _12 = *_10;
common/pixel.c:161:1: note: type of def: 3.
common/pixel.c:161:1: note: vect_is_simple_use: operand _18
common/pixel.c:161:1: note: def_stmt: _18 = (int) _12;
common/pixel.c:161:1: note: type of def: 3.
common/pixel.c:161:1: note: vect_is_simple_use: operand _12
common/pixel.c:161:1: note: def_stmt: _12 = *_10;
common/pixel.c:161:1: note: type of def: 3.
common/pixel.c:161:1: note: vect_recog_widen_mult_pattern: detected:
common/pixel.c:161:1: note: patt_64 = (unsigned int) patt_65;
common/pixel.c:161:1: note: pattern recognized: patt_64 = (unsigned int) patt_65;
common/pixel.c:161:1: note: vect_is_simple_use: operand _20
common/pixel.c:161:1: note: def_stmt: _20 = (unsigned int) _19;
common/pixel.c:161:1: note: type of def: 3.
common/pixel.c:161:1: note: vect_is_simple_use: operand _20
common/pixel.c:161:1: note: def_stmt: _20 = (unsigned int) _19;
common/pixel.c:161:1: note: type of def: 3.
common/pixel.c:161:1: note: vect_is_simple_use: operand _20
common/pixel.c:161:1: note: def_stmt: _20 = (unsigned int) _19;
common/pixel.c:161:1: note: type of def: 3.
common/pixel.c:161:1: note: vect_is_simple_use: operand _19
common/pixel.c:161:1: note: def_stmt: _19 = _18 * _18;
common/pixel.c:161:1: note: type of def: 3.
common/pixel.c:161:1: note: === vect_analyze_data_ref_accesses ===
common/pixel.c:161:1: note: === vect_mark_stmts_to_be_vectorized ===
common/pixel.c:161:1: note: init: phi relevant? sum_16 = PHI <sum_14(3), sum_15(7)>
common/pixel.c:161:1: note: init: phi relevant? sqr_44 = PHI <sqr_21(3), sqr_45(7)>
common/pixel.c:161:1: note: init: phi relevant? x_46 = PHI <x_22(3), 0(7)>
common/pixel.c:161:1: note: init: phi relevant? ivtmp_70 = PHI <ivtmp_69(3), 16(7)>
common/pixel.c:161:1: note: init: stmt relevant? # DEBUG x => x_46
common/pixel.c:161:1: note: init: stmt relevant? # DEBUG sqr => sqr_44
common/pixel.c:161:1: note: init: stmt relevant? # DEBUG sum => sum_16
common/pixel.c:161:1: note: init: stmt relevant? _9 = (sizetype) x_46;
common/pixel.c:161:1: note: init: stmt relevant? _10 = pix_17 + _9;
common/pixel.c:161:1: note: init: stmt relevant? _12 = *_10;
common/pixel.c:161:1: note: init: stmt relevant? _13 = (unsigned int) _12;
common/pixel.c:161:1: note: init: stmt relevant? sum_14 = _13 + sum_16;
common/pixel.c:161:1: note: vec_stmt_relevant_p: used out of loop.
common/pixel.c:161:1: note: mark relevant 0, live 1.
common/pixel.c:161:1: note: init: stmt relevant? # DEBUG sum => sum_14
common/pixel.c:161:1: note: init: stmt relevant? _18 = (int) _12;
common/pixel.c:161:1: note: init: stmt relevant? _19 = _18 * _18;
common/pixel.c:161:1: note: init: stmt relevant? _20 = (unsigned int) _19;
common/pixel.c:161:1: note: init: stmt relevant? sqr_21 = _20 + sqr_44;
common/pixel.c:161:1: note: vec_stmt_relevant_p: used out of loop.
common/pixel.c:161:1: note: mark relevant 0, live 1.
common/pixel.c:161:1: note: init: stmt relevant? # DEBUG sqr => sqr_21
common/pixel.c:161:1: note: init: stmt relevant? x_22 = x_46 + 1;
common/pixel.c:161:1: note: init: stmt relevant? # DEBUG x => x_22
common/pixel.c:161:1: note: init: stmt relevant? # DEBUG x => x_22
common/pixel.c:161:1: note: init: stmt relevant? # DEBUG sqr => sqr_21
common/pixel.c:161:1: note: init: stmt relevant? # DEBUG sum => sum_14
common/pixel.c:161:1: note: init: stmt relevant? ivtmp_69 = ivtmp_70 - 1;
common/pixel.c:161:1: note: init: stmt relevant? if (ivtmp_69 != 0)
common/pixel.c:161:1: note: worklist: examine stmt: sqr_21 = _20 + sqr_44;
common/pixel.c:161:1: note: vect_is_simple_use: operand _20
common/pixel.c:161:1: note: def_stmt: _20 = (unsigned int) _19;
common/pixel.c:161:1: note: type of def: 3.
common/pixel.c:161:1: note: mark relevant 3, live 0.
common/pixel.c:161:1: note: last stmt in pattern. don't mark relevant/live.
common/pixel.c:161:1: note: vect_is_simple_use: operand sqr_44
common/pixel.c:161:1: note: def_stmt: sqr_44 = PHI <sqr_21(3), sqr_45(7)>
common/pixel.c:161:1: note: type of def: 5.
common/pixel.c:161:1: note: mark relevant 3, live 0.
common/pixel.c:161:1: note: worklist: examine stmt: sqr_44 = PHI <sqr_21(3), sqr_45(7)>
common/pixel.c:161:1: note: vect_is_simple_use: operand sqr_21
common/pixel.c:161:1: note: def_stmt: sqr_21 = _20 + sqr_44;
common/pixel.c:161:1: note: type of def: 5.
common/pixel.c:161:1: note: reduc-stmt defining reduc-phi in the same nest.
common/pixel.c:161:1: note: vect_is_simple_use: operand sqr_45
common/pixel.c:161:1: note: def_stmt: sqr_45 = PHI <sqr_72(6), 0(2)>
common/pixel.c:161:1: note: type of def: 2.
common/pixel.c:161:1: note: def_stmt is out of loop.
common/pixel.c:161:1: note: worklist: examine stmt: patt_64 = (unsigned int) patt_65;
common/pixel.c:161:1: note: vect_is_simple_use: operand patt_65
common/pixel.c:161:1: note: def_stmt: patt_65 = _12 w* _12;
common/pixel.c:161:1: note: type of def: 3.
common/pixel.c:161:1: note: mark relevant 3, live 0.
common/pixel.c:161:1: note: worklist: examine stmt: patt_65 = _12 w* _12;
common/pixel.c:161:1: note: vect_is_simple_use: operand _12
common/pixel.c:161:1: note: def_stmt: _12 = *_10;
common/pixel.c:161:1: note: type of def: 3.
common/pixel.c:161:1: note: mark relevant 3, live 0.
common/pixel.c:161:1: note: vect_is_simple_use: operand _12
common/pixel.c:161:1: note: def_stmt: _12 = *_10;
common/pixel.c:161:1: note: type of def: 3.
common/pixel.c:161:1: note: mark relevant 3, live 0.
common/pixel.c:161:1: note: already marked relevant/live.
common/pixel.c:161:1: note: worklist: examine stmt: _12 = *_10;
common/pixel.c:161:1: note: worklist: examine stmt: sum_14 = _13 + sum_16;
common/pixel.c:161:1: note: vect_is_simple_use: operand _13
common/pixel.c:161:1: note: def_stmt: _13 = (unsigned int) _12;
common/pixel.c:161:1: note: type of def: 3.
common/pixel.c:161:1: note: mark relevant 3, live 0.
common/pixel.c:161:1: note: vect_is_simple_use: operand sum_16
common/pixel.c:161:1: note: def_stmt: sum_16 = PHI <sum_14(3), sum_15(7)>
common/pixel.c:161:1: note: type of def: 5.
common/pixel.c:161:1: note: mark relevant 3, live 0.
common/pixel.c:161:1: note: worklist: examine stmt: sum_16 = PHI <sum_14(3), sum_15(7)>
common/pixel.c:161:1: note: vect_is_simple_use: operand sum_14
common/pixel.c:161:1: note: def_stmt: sum_14 = _13 + sum_16;
common/pixel.c:161:1: note: type of def: 5.
common/pixel.c:161:1: note: reduc-stmt defining reduc-phi in the same nest.
common/pixel.c:161:1: note: vect_is_simple_use: operand sum_15
common/pixel.c:161:1: note: def_stmt: sum_15 = PHI <sum_74(6), 0(2)>
common/pixel.c:161:1: note: type of def: 2.
common/pixel.c:161:1: note: def_stmt is out of loop.
common/pixel.c:161:1: note: worklist: examine stmt: _13 = (unsigned int) _12;
common/pixel.c:161:1: note: vect_is_simple_use: operand _12
common/pixel.c:161:1: note: def_stmt: _12 = *_10;
common/pixel.c:161:1: note: type of def: 3.
common/pixel.c:161:1: note: mark relevant 3, live 0.
common/pixel.c:161:1: note: already marked relevant/live.
common/pixel.c:161:1: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _12 = *_10;
  stmt_b: _12 = *_10;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_2)
  (chrec_b = {0B, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/pixel.c:161:1: note: === vect_determine_vectorization_factor ===
common/pixel.c:161:1: note: ==> examining phi: sum_16 = PHI <sum_14(3), sum_15(7)>

common/pixel.c:161:1: note: get vectype for scalar type:  uint32_t
common/pixel.c:161:1: note: vectype: vector(4) unsigned int
common/pixel.c:161:1: note: nunits = 4
common/pixel.c:161:1: note: ==> examining phi: sqr_44 = PHI <sqr_21(3), sqr_45(7)>

common/pixel.c:161:1: note: get vectype for scalar type:  uint32_t
common/pixel.c:161:1: note: vectype: vector(4) unsigned int
common/pixel.c:161:1: note: nunits = 4
common/pixel.c:161:1: note: ==> examining phi: x_46 = PHI <x_22(3), 0(7)>

common/pixel.c:161:1: note: ==> examining phi: ivtmp_70 = PHI <ivtmp_69(3), 16(7)>

common/pixel.c:161:1: note: ==> examining statement: # DEBUG x => x_46

common/pixel.c:161:1: note: skip.
common/pixel.c:161:1: note: ==> examining statement: # DEBUG sqr => sqr_44

common/pixel.c:161:1: note: skip.
common/pixel.c:161:1: note: ==> examining statement: # DEBUG sum => sum_16

common/pixel.c:161:1: note: skip.
common/pixel.c:161:1: note: ==> examining statement: _9 = (sizetype) x_46;

common/pixel.c:161:1: note: skip.
common/pixel.c:161:1: note: ==> examining statement: _10 = pix_17 + _9;

common/pixel.c:161:1: note: skip.
common/pixel.c:161:1: note: ==> examining statement: _12 = *_10;

common/pixel.c:161:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:161:1: note: vectype: vector(16) unsigned char
common/pixel.c:161:1: note: nunits = 16
common/pixel.c:161:1: note: ==> examining statement: _13 = (unsigned int) _12;

common/pixel.c:161:1: note: get vectype for scalar type:  unsigned int
common/pixel.c:161:1: note: vectype: vector(4) unsigned int
common/pixel.c:161:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:161:1: note: vectype: vector(16) unsigned char
common/pixel.c:161:1: note: nunits = 16
common/pixel.c:161:1: note: ==> examining statement: sum_14 = _13 + sum_16;

common/pixel.c:161:1: note: get vectype for scalar type:  uint32_t
common/pixel.c:161:1: note: vectype: vector(4) unsigned int
common/pixel.c:161:1: note: get vectype for scalar type:  uint32_t
common/pixel.c:161:1: note: vectype: vector(4) unsigned int
common/pixel.c:161:1: note: nunits = 4
common/pixel.c:161:1: note: ==> examining statement: # DEBUG sum => sum_14

common/pixel.c:161:1: note: skip.
common/pixel.c:161:1: note: ==> examining statement: _18 = (int) _12;

common/pixel.c:161:1: note: skip.
common/pixel.c:161:1: note: ==> examining statement: _19 = _18 * _18;

common/pixel.c:161:1: note: skip.
common/pixel.c:161:1: note: ==> examining statement: _20 = (unsigned int) _19;

common/pixel.c:161:1: note: ==> examining pattern statement: patt_64 = (unsigned int) patt_65;

common/pixel.c:161:1: note: ==> examining pattern def stmt: patt_65 = _12 w* _12;

common/pixel.c:161:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:161:1: note: vectype: vector(16) unsigned char
common/pixel.c:161:1: note: nunits = 16
common/pixel.c:161:1: note: ==> examining statement: _20 = (unsigned int) _19;

common/pixel.c:161:1: note: ==> examining pattern statement: patt_64 = (unsigned int) patt_65;

common/pixel.c:161:1: note: get vectype for scalar type:  unsigned short
common/pixel.c:161:1: note: vectype: vector(8) unsigned short
common/pixel.c:161:1: note: nunits = 8
common/pixel.c:161:1: note: ==> examining statement: sqr_21 = _20 + sqr_44;

common/pixel.c:161:1: note: get vectype for scalar type:  uint32_t
common/pixel.c:161:1: note: vectype: vector(4) unsigned int
common/pixel.c:161:1: note: get vectype for scalar type:  uint32_t
common/pixel.c:161:1: note: vectype: vector(4) unsigned int
common/pixel.c:161:1: note: nunits = 4
common/pixel.c:161:1: note: ==> examining statement: # DEBUG sqr => sqr_21

common/pixel.c:161:1: note: skip.
common/pixel.c:161:1: note: ==> examining statement: x_22 = x_46 + 1;

common/pixel.c:161:1: note: skip.
common/pixel.c:161:1: note: ==> examining statement: # DEBUG x => x_22

common/pixel.c:161:1: note: skip.
common/pixel.c:161:1: note: ==> examining statement: # DEBUG x => x_22

common/pixel.c:161:1: note: skip.
common/pixel.c:161:1: note: ==> examining statement: # DEBUG sqr => sqr_21

common/pixel.c:161:1: note: skip.
common/pixel.c:161:1: note: ==> examining statement: # DEBUG sum => sum_14

common/pixel.c:161:1: note: skip.
common/pixel.c:161:1: note: ==> examining statement: ivtmp_69 = ivtmp_70 - 1;

common/pixel.c:161:1: note: skip.
common/pixel.c:161:1: note: ==> examining statement: if (ivtmp_69 != 0)

common/pixel.c:161:1: note: skip.
common/pixel.c:161:1: note: vectorization factor = 16
common/pixel.c:161:1: note: === vect_analyze_data_refs_alignment ===
common/pixel.c:161:1: note: vect_compute_data_ref_alignment:
common/pixel.c:161:1: note: can't force alignment of ref: *_10
common/pixel.c:161:1: note: === vect_prune_runtime_alias_test_list ===
common/pixel.c:161:1: note: === vect_enhance_data_refs_alignment ===
common/pixel.c:161:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:161:1: note: vect_can_advance_ivs_p:
common/pixel.c:161:1: note: Analyze phi: sum_16 = PHI <sum_14(3), sum_15(7)>

common/pixel.c:161:1: note: reduc phi. skip.
common/pixel.c:161:1: note: Analyze phi: sqr_44 = PHI <sqr_21(3), sqr_45(7)>

common/pixel.c:161:1: note: reduc phi. skip.
common/pixel.c:161:1: note: Analyze phi: x_46 = PHI <x_22(3), 0(7)>

common/pixel.c:161:1: note: Analyze phi: ivtmp_70 = PHI <ivtmp_69(3), 16(7)>

common/pixel.c:161:1: note: Vectorizing an unaligned access.
common/pixel.c:161:1: note: === vect_analyze_slp ===
common/pixel.c:161:1: note: Build SLP for sqr_21 = _20 + sqr_44;

common/pixel.c:161:1: note: Build SLP for sum_14 = _13 + sum_16;

common/pixel.c:161:1: note: vect_is_simple_use: operand _20
common/pixel.c:161:1: note: def_stmt: _20 = (unsigned int) _19;
common/pixel.c:161:1: note: type of def: 3.
common/pixel.c:161:1: note: vect_is_simple_use: operand sqr_44
common/pixel.c:161:1: note: def_stmt: sqr_44 = PHI <sqr_21(3), sqr_45(7)>
common/pixel.c:161:1: note: type of def: 5.
common/pixel.c:161:1: note: vect_is_simple_use: operand _13
common/pixel.c:161:1: note: def_stmt: _13 = (unsigned int) _12;
common/pixel.c:161:1: note: type of def: 3.
common/pixel.c:161:1: note: vect_is_simple_use: operand sum_16
common/pixel.c:161:1: note: def_stmt: sum_16 = PHI <sum_14(3), sum_15(7)>
common/pixel.c:161:1: note: type of def: 5.
common/pixel.c:161:1: note: Build SLP for patt_64 = (unsigned int) patt_65;

common/pixel.c:161:1: note: Build SLP for _13 = (unsigned int) _12;

common/pixel.c:161:1: note: vect_is_simple_use: operand patt_65
common/pixel.c:161:1: note: def_stmt: patt_65 = _12 w* _12;
common/pixel.c:161:1: note: type of def: 3.
common/pixel.c:161:1: note: vect_is_simple_use: operand _12
common/pixel.c:161:1: note: def_stmt: _12 = *_10;
common/pixel.c:161:1: note: type of def: 3.
common/pixel.c:161:1: note: Build SLP failed: different types
common/pixel.c:161:1: note: === vect_make_slp_decision ===
common/pixel.c:161:1: note: === vect_detect_hybrid_slp ===
common/pixel.c:161:1: note: === vect_analyze_loop_operations ===
common/pixel.c:161:1: note: examining phi: sum_16 = PHI <sum_14(3), sum_15(7)>

common/pixel.c:161:1: note: examining phi: sqr_44 = PHI <sqr_21(3), sqr_45(7)>

common/pixel.c:161:1: note: examining phi: x_46 = PHI <x_22(3), 0(7)>

common/pixel.c:161:1: note: examining phi: ivtmp_70 = PHI <ivtmp_69(3), 16(7)>

common/pixel.c:161:1: note: ==> examining statement: # DEBUG x => x_46
common/pixel.c:161:1: note: irrelevant.
common/pixel.c:161:1: note: ==> examining statement: # DEBUG sqr => sqr_44
common/pixel.c:161:1: note: irrelevant.
common/pixel.c:161:1: note: ==> examining statement: # DEBUG sum => sum_16
common/pixel.c:161:1: note: irrelevant.
common/pixel.c:161:1: note: ==> examining statement: _9 = (sizetype) x_46;
common/pixel.c:161:1: note: irrelevant.
common/pixel.c:161:1: note: ==> examining statement: _10 = pix_17 + _9;
common/pixel.c:161:1: note: irrelevant.
common/pixel.c:161:1: note: ==> examining statement: _12 = *_10;
common/pixel.c:161:1: note: vect_is_simple_use: operand *_10
common/pixel.c:161:1: note: not ssa-name.
common/pixel.c:161:1: note: use not simple.
common/pixel.c:161:1: note: vect_is_simple_use: operand *_10
common/pixel.c:161:1: note: not ssa-name.
common/pixel.c:161:1: note: use not simple.
common/pixel.c:161:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:161:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:161:1: note: ==> examining statement: _13 = (unsigned int) _12;
common/pixel.c:161:1: note: vect_is_simple_use: operand _12
common/pixel.c:161:1: note: def_stmt: _12 = *_10;
common/pixel.c:161:1: note: type of def: 3.
common/pixel.c:161:1: note: === vectorizable_conversion ===
common/pixel.c:161:1: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:161:1: note: ==> examining statement: sum_14 = _13 + sum_16;
common/pixel.c:161:1: note: vect_is_simple_use: operand _13
common/pixel.c:161:1: note: def_stmt: _13 = (unsigned int) _12;
common/pixel.c:161:1: note: type of def: 3.
common/pixel.c:161:1: note: vect_is_simple_use: operand sum_16
common/pixel.c:161:1: note: def_stmt: sum_16 = PHI <sum_14(3), sum_15(7)>
common/pixel.c:161:1: note: type of def: 5.
common/pixel.c:161:1: note: detected reduction: sum_14 = _13 + sum_16;

common/pixel.c:161:1: note: reduc op not supported by target.
vect_model_reduction_cost: inside_cost = 4, prologue_cost = 1, epilogue_cost = 5 .
common/pixel.c:161:1: note: ==> examining statement: # DEBUG sum => sum_14
common/pixel.c:161:1: note: irrelevant.
common/pixel.c:161:1: note: ==> examining statement: _18 = (int) _12;
common/pixel.c:161:1: note: irrelevant.
common/pixel.c:161:1: note: ==> examining statement: _19 = _18 * _18;
common/pixel.c:161:1: note: irrelevant.
common/pixel.c:161:1: note: ==> examining statement: _20 = (unsigned int) _19;
common/pixel.c:161:1: note: ==> examining pattern statement: patt_64 = (unsigned int) patt_65;
common/pixel.c:161:1: note: ==> examining pattern def statement: patt_65 = _12 w* _12;
common/pixel.c:161:1: note: ==> examining statement: patt_65 = _12 w* _12;
common/pixel.c:161:1: note: vect_is_simple_use: operand _12
common/pixel.c:161:1: note: def_stmt: _12 = *_10;
common/pixel.c:161:1: note: type of def: 3.
common/pixel.c:161:1: note: vect_is_simple_use: operand _12
common/pixel.c:161:1: note: def_stmt: _12 = *_10;
common/pixel.c:161:1: note: type of def: 3.
common/pixel.c:161:1: note: === vectorizable_conversion ===
common/pixel.c:161:1: note: vect_model_promotion_demotion_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:161:1: note: vect_is_simple_use: operand patt_65
common/pixel.c:161:1: note: def_stmt: patt_65 = _12 w* _12;
common/pixel.c:161:1: note: type of def: 3.
common/pixel.c:161:1: note: === vectorizable_conversion ===
common/pixel.c:161:1: note: vect_model_promotion_demotion_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:161:1: note: ==> examining statement: sqr_21 = _20 + sqr_44;
common/pixel.c:161:1: note: vect_is_simple_use: operand _20
common/pixel.c:161:1: note: def_stmt: _20 = (unsigned int) _19;
common/pixel.c:161:1: note: type of def: 3.
common/pixel.c:161:1: note: vect_is_simple_use: operand sqr_44
common/pixel.c:161:1: note: def_stmt: sqr_44 = PHI <sqr_21(3), sqr_45(7)>
common/pixel.c:161:1: note: type of def: 5.
common/pixel.c:161:1: note: detected reduction: sqr_21 = _20 + sqr_44;

common/pixel.c:161:1: note: reduc op not supported by target.
vect_model_reduction_cost: inside_cost = 4, prologue_cost = 1, epilogue_cost = 5 .
common/pixel.c:161:1: note: ==> examining statement: # DEBUG sqr => sqr_21
common/pixel.c:161:1: note: irrelevant.
common/pixel.c:161:1: note: ==> examining statement: x_22 = x_46 + 1;
common/pixel.c:161:1: note: irrelevant.
common/pixel.c:161:1: note: ==> examining statement: # DEBUG x => x_22
common/pixel.c:161:1: note: irrelevant.
common/pixel.c:161:1: note: ==> examining statement: # DEBUG x => x_22
common/pixel.c:161:1: note: irrelevant.
common/pixel.c:161:1: note: ==> examining statement: # DEBUG sqr => sqr_21
common/pixel.c:161:1: note: irrelevant.
common/pixel.c:161:1: note: ==> examining statement: # DEBUG sum => sum_14
common/pixel.c:161:1: note: irrelevant.
common/pixel.c:161:1: note: ==> examining statement: ivtmp_69 = ivtmp_70 - 1;
common/pixel.c:161:1: note: irrelevant.
common/pixel.c:161:1: note: ==> examining statement: if (ivtmp_69 != 0)
common/pixel.c:161:1: note: irrelevant.
common/pixel.c:161:1: note: vectorization_factor = 16, niters = 16
common/pixel.c:161:1: note: === vect_update_slp_costs_according_to_vf ===
common/pixel.c:161:1: note: Cost model analysis: 
  Vector inside of loop cost: 20
  Vector prologue cost: 2
  Vector epilogue cost: 10
  Scalar iteration cost: 5
  Scalar outside cost: 0
  Vector outside cost: 12
  prologue iterations: 0
  epilogue iterations: 0
  Calculated minimum iters for profitability: 4
common/pixel.c:161:1: note:   Runtime profitability threshold = 15
common/pixel.c:161:1: note:   Static estimate profitability threshold = 15
common/pixel.c:161:1: note: loop vectorized
common/pixel.c:161:1: note: === vec_transform_loop ===
common/pixel.c:161:1: note: ------>vectorizing phi: sum_16 = PHI <sum_14(3), sum_15(9)>

common/pixel.c:161:1: note: multiple-types.
common/pixel.c:161:1: note: ------>vectorizing phi: sqr_44 = PHI <sqr_21(3), sqr_45(9)>

common/pixel.c:161:1: note: multiple-types.
common/pixel.c:161:1: note: ------>vectorizing phi: x_46 = PHI <x_22(3), 0(9)>

common/pixel.c:161:1: note: ------>vectorizing phi: ivtmp_70 = PHI <ivtmp_69(3), 16(9)>

common/pixel.c:161:1: note: ------>vectorizing statement: # DEBUG x => x_46

common/pixel.c:161:1: note: ------>vectorizing statement: # DEBUG sqr => sqr_44

common/pixel.c:161:1: note: ------>vectorizing statement: # DEBUG sum => sum_16

common/pixel.c:161:1: note: ------>vectorizing statement: _9 = (sizetype) x_46;

common/pixel.c:161:1: note: ------>vectorizing statement: _10 = pix_17 + _9;

common/pixel.c:161:1: note: ------>vectorizing statement: _12 = *_10;

common/pixel.c:161:1: note: transform statement.
common/pixel.c:161:1: note: transform load. ncopies = 1
common/pixel.c:161:1: note: create vector_type-pointer variable to type: vector(16) unsigned char  vectorizing a pointer ref: *pix_17
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:161:1: note: created vectp_pix.334_63
common/pixel.c:161:1: note: add new stmt: vect__12.335_60 = MEM[(uint8_t *)vectp_pix.333_62];
common/pixel.c:161:1: note: ------>vectorizing statement: _13 = (unsigned int) _12;

common/pixel.c:161:1: note: multiple-types.
common/pixel.c:161:1: note: transform statement.
common/pixel.c:161:1: note: vect_is_simple_use: operand _12
common/pixel.c:161:1: note: def_stmt: _12 = *_10;
common/pixel.c:161:1: note: type of def: 3.
common/pixel.c:161:1: note: transform conversion. ncopies = 1.
common/pixel.c:161:1: note: vect_get_vec_def_for_operand: _12
common/pixel.c:161:1: note: vect_is_simple_use: operand _12
common/pixel.c:161:1: note: def_stmt: _12 = *_10;
common/pixel.c:161:1: note: type of def: 3.
common/pixel.c:161:1: note: def =  _12
  def_stmt =  _12 = *_10;
common/pixel.c:161:1: note: add new stmt: vect__13.337_59 = [vec_unpack_lo_expr] vect__12.335_60;
common/pixel.c:161:1: note: add new stmt: vect__13.337_58 = [vec_unpack_hi_expr] vect__12.335_60;
common/pixel.c:161:1: note: add new stmt: vect__13.336_57 = [vec_unpack_lo_expr] vect__13.337_59;
common/pixel.c:161:1: note: add new stmt: vect__13.336_56 = [vec_unpack_hi_expr] vect__13.337_59;
common/pixel.c:161:1: note: add new stmt: vect__13.336_55 = [vec_unpack_lo_expr] vect__13.337_58;
common/pixel.c:161:1: note: add new stmt: vect__13.336_54 = [vec_unpack_hi_expr] vect__13.337_58;
common/pixel.c:161:1: note: ------>vectorizing statement: sum_14 = _13 + sum_16;

common/pixel.c:161:1: note: multiple-types.
common/pixel.c:161:1: note: transform statement.
common/pixel.c:161:1: note: vect_is_simple_use: operand _13
common/pixel.c:161:1: note: def_stmt: _13 = (unsigned int) _12;
common/pixel.c:161:1: note: type of def: 3.
common/pixel.c:161:1: note: vect_is_simple_use: operand sum_16
common/pixel.c:161:1: note: def_stmt: sum_16 = PHI <sum_14(3), sum_15(9)>
common/pixel.c:161:1: note: type of def: 5.
common/pixel.c:161:1: note: detected reduction: sum_14 = _13 + sum_16;

common/pixel.c:161:1: note: reduc op not supported by target.
common/pixel.c:161:1: note: transform reduction.
common/pixel.c:161:1: note: vect_get_vec_def_for_operand: _13
common/pixel.c:161:1: note: vect_is_simple_use: operand _13
common/pixel.c:161:1: note: def_stmt: _13 = (unsigned int) _12;
common/pixel.c:161:1: note: type of def: 3.
common/pixel.c:161:1: note: def =  _13
  def_stmt =  _13 = (unsigned int) _12;
common/pixel.c:161:1: note: add new stmt: vect_sum_14.338_52 = vect__13.336_57 + vect_sum_14.338_53;
common/pixel.c:161:1: note: vect_is_simple_use: operand _13
common/pixel.c:161:1: note: def_stmt: _13 = (unsigned int) _12;
common/pixel.c:161:1: note: type of def: 3.
common/pixel.c:161:1: note: add new stmt: vect_sum_14.338_51 = vect__13.336_56 + vect_sum_14.338_52;
common/pixel.c:161:1: note: vect_is_simple_use: operand _13
common/pixel.c:161:1: note: def_stmt: _13 = (unsigned int) _12;
common/pixel.c:161:1: note: type of def: 3.
common/pixel.c:161:1: note: add new stmt: vect_sum_14.338_50 = vect__13.336_55 + vect_sum_14.338_51;
common/pixel.c:161:1: note: vect_is_simple_use: operand _13
common/pixel.c:161:1: note: def_stmt: _13 = (unsigned int) _12;
common/pixel.c:161:1: note: type of def: 3.
common/pixel.c:161:1: note: add new stmt: vect_sum_14.338_49 = vect__13.336_54 + vect_sum_14.338_50;
common/pixel.c:161:1: note: vect_is_simple_use: operand sum_15
common/pixel.c:161:1: note: def_stmt: sum_15 = PHI <sum_74(6), 0(2)>
common/pixel.c:161:1: note: type of def: 2.
common/pixel.c:161:1: note: vect_get_vec_def_for_operand: sum_16
common/pixel.c:161:1: note: vect_is_simple_use: operand sum_16
common/pixel.c:161:1: note: def_stmt: sum_16 = PHI <sum_14(3), sum_15(9)>
common/pixel.c:161:1: note: type of def: 5.
common/pixel.c:161:1: note: def =  sum_16
  def_stmt =  sum_16 = PHI <sum_14(3), sum_15(9)>
common/pixel.c:161:1: note: transform reduction: created def-use cycle: vect_sum_14.338_53 = PHI <vect_sum_14.338_49(3), { 0, 0, 0, 0 }(9)>

vect_sum_14.338_49 = vect__13.336_54 + vect_sum_14.338_50;

common/pixel.c:161:1: note: Reduce using vector shifts
common/pixel.c:161:1: note: extract scalar result
common/pixel.c:161:1: note: ------>vectorizing statement: # DEBUG sum => sum_14

common/pixel.c:161:1: note: ------>vectorizing statement: _18 = (int) _12;

common/pixel.c:161:1: note: ------>vectorizing statement: _19 = _18 * _18;

common/pixel.c:161:1: note: ------>vectorizing statement: _20 = (unsigned int) _19;

common/pixel.c:161:1: note: ==> vectorizing pattern def stmt: patt_65 = _12 w* _12;

common/pixel.c:161:1: note: multiple-types.
common/pixel.c:161:1: note: transform statement.
common/pixel.c:161:1: note: vect_is_simple_use: operand _12
common/pixel.c:161:1: note: def_stmt: _12 = *_10;
common/pixel.c:161:1: note: type of def: 3.
common/pixel.c:161:1: note: vect_is_simple_use: operand _12
common/pixel.c:161:1: note: def_stmt: _12 = *_10;
common/pixel.c:161:1: note: type of def: 3.
common/pixel.c:161:1: note: transform conversion. ncopies = 1.
common/pixel.c:161:1: note: vect_get_vec_def_for_operand: _12
common/pixel.c:161:1: note: vect_is_simple_use: operand _12
common/pixel.c:161:1: note: def_stmt: _12 = *_10;
common/pixel.c:161:1: note: type of def: 3.
common/pixel.c:161:1: note: def =  _12
  def_stmt =  _12 = *_10;
common/pixel.c:161:1: note: vect_get_vec_def_for_operand: _12
common/pixel.c:161:1: note: vect_is_simple_use: operand _12
common/pixel.c:161:1: note: def_stmt: _12 = *_10;
common/pixel.c:161:1: note: type of def: 3.
common/pixel.c:161:1: note: def =  _12
  def_stmt =  _12 = *_10;
common/pixel.c:161:1: note: add new stmt: vect_patt_65.342_37 = WIDEN_MULT_LO_EXPR <vect__12.335_60, vect__12.335_60>;
common/pixel.c:161:1: note: add new stmt: vect_patt_65.342_36 = WIDEN_MULT_HI_EXPR <vect__12.335_60, vect__12.335_60>;
common/pixel.c:161:1: note: ------>vectorizing statement: _20 = (unsigned int) _19;

common/pixel.c:161:1: note: multiple-types.
common/pixel.c:161:1: note: transform statement.
common/pixel.c:161:1: note: vect_is_simple_use: operand patt_65
common/pixel.c:161:1: note: def_stmt: patt_65 = _12 w* _12;
common/pixel.c:161:1: note: type of def: 3.
common/pixel.c:161:1: note: transform conversion. ncopies = 2.
common/pixel.c:161:1: note: vect_get_vec_def_for_operand: patt_65
common/pixel.c:161:1: note: vect_is_simple_use: operand patt_65
common/pixel.c:161:1: note: def_stmt: patt_65 = _12 w* _12;
common/pixel.c:161:1: note: type of def: 3.
common/pixel.c:161:1: note: def =  patt_65
  def_stmt =  patt_65 = _12 w* _12;
common/pixel.c:161:1: note: add new stmt: vect_patt_64.343_35 = [vec_unpack_lo_expr] vect_patt_65.342_37;
common/pixel.c:161:1: note: add new stmt: vect_patt_64.343_34 = [vec_unpack_hi_expr] vect_patt_65.342_37;
common/pixel.c:161:1: note: add new stmt: vect_patt_64.343_33 = [vec_unpack_lo_expr] vect_patt_65.342_36;
common/pixel.c:161:1: note: add new stmt: vect_patt_64.343_7 = [vec_unpack_hi_expr] vect_patt_65.342_36;
common/pixel.c:161:1: note: ------>vectorizing statement: sqr_21 = _20 + sqr_44;

common/pixel.c:161:1: note: multiple-types.
common/pixel.c:161:1: note: transform statement.
common/pixel.c:161:1: note: vect_is_simple_use: operand _20
common/pixel.c:161:1: note: def_stmt: _20 = (unsigned int) _19;
common/pixel.c:161:1: note: type of def: 3.
common/pixel.c:161:1: note: vect_is_simple_use: operand sqr_44
common/pixel.c:161:1: note: def_stmt: sqr_44 = PHI <sqr_21(3), sqr_45(9)>
common/pixel.c:161:1: note: type of def: 5.
common/pixel.c:161:1: note: detected reduction: sqr_21 = _20 + sqr_44;

common/pixel.c:161:1: note: reduc op not supported by target.
common/pixel.c:161:1: note: transform reduction.
common/pixel.c:161:1: note: vect_get_vec_def_for_operand: _20
common/pixel.c:161:1: note: vect_is_simple_use: operand _20
common/pixel.c:161:1: note: def_stmt: _20 = (unsigned int) _19;
common/pixel.c:161:1: note: type of def: 3.
common/pixel.c:161:1: note: def =  _20
  def_stmt =  _20 = (unsigned int) _19;
common/pixel.c:161:1: note: add new stmt: vect_sqr_21.344_5 = vect_patt_64.343_35 + vect_sqr_21.344_6;
common/pixel.c:161:1: note: vect_is_simple_use: operand _20
common/pixel.c:161:1: note: def_stmt: _20 = (unsigned int) _19;
common/pixel.c:161:1: note: type of def: 3.
common/pixel.c:161:1: note: add new stmt: vect_sqr_21.344_4 = vect_patt_64.343_34 + vect_sqr_21.344_5;
common/pixel.c:161:1: note: vect_is_simple_use: operand _20
common/pixel.c:161:1: note: def_stmt: _20 = (unsigned int) _19;
common/pixel.c:161:1: note: type of def: 3.
common/pixel.c:161:1: note: add new stmt: vect_sqr_21.344_3 = vect_patt_64.343_33 + vect_sqr_21.344_4;
common/pixel.c:161:1: note: vect_is_simple_use: operand _20
common/pixel.c:161:1: note: def_stmt: _20 = (unsigned int) _19;
common/pixel.c:161:1: note: type of def: 3.
common/pixel.c:161:1: note: add new stmt: vect_sqr_21.344_2 = vect_patt_64.343_7 + vect_sqr_21.344_3;
common/pixel.c:161:1: note: vect_is_simple_use: operand sqr_45
common/pixel.c:161:1: note: def_stmt: sqr_45 = PHI <sqr_72(6), 0(2)>
common/pixel.c:161:1: note: type of def: 2.
common/pixel.c:161:1: note: vect_get_vec_def_for_operand: sqr_44
common/pixel.c:161:1: note: vect_is_simple_use: operand sqr_44
common/pixel.c:161:1: note: def_stmt: sqr_44 = PHI <sqr_21(3), sqr_45(9)>
common/pixel.c:161:1: note: type of def: 5.
common/pixel.c:161:1: note: def =  sqr_44
  def_stmt =  sqr_44 = PHI <sqr_21(3), sqr_45(9)>
common/pixel.c:161:1: note: transform reduction: created def-use cycle: vect_sqr_21.344_6 = PHI <vect_sqr_21.344_2(3), { 0, 0, 0, 0 }(9)>

vect_sqr_21.344_2 = vect_patt_64.343_7 + vect_sqr_21.344_3;

common/pixel.c:161:1: note: Reduce using vector shifts
common/pixel.c:161:1: note: extract scalar result
common/pixel.c:161:1: note: ------>vectorizing statement: # DEBUG sqr => sqr_21

common/pixel.c:161:1: note: ------>vectorizing statement: x_22 = x_46 + 1;

common/pixel.c:161:1: note: ------>vectorizing statement: # DEBUG x => x_22

common/pixel.c:161:1: note: ------>vectorizing statement: # DEBUG x => x_22

common/pixel.c:161:1: note: ------>vectorizing statement: # DEBUG sqr => sqr_21

common/pixel.c:161:1: note: ------>vectorizing statement: # DEBUG sum => sum_14

common/pixel.c:161:1: note: ------>vectorizing statement: ivtmp_69 = ivtmp_70 - 1;

common/pixel.c:161:1: note: ------>vectorizing statement: vectp_pix.333_61 = vectp_pix.333_62 + 16;

common/pixel.c:161:1: note: ------>vectorizing statement: if (ivtmp_69 != 0)


loop at common/pixel.c:161: if (ivtmp_82 < 1)

;; Scaling loop 2 with scale 0.062500, bounding iterations to 1 from guessed 16
;; guessed iterations are now 1
common/pixel.c:161:1: note: LOOP VECTORIZED

common/pixel.c:161:1: note: vectorized 1 loops in function.
Merging blocks 7 and 9
x264_pixel_var_16x16 (uint8_t * pix, int i_stride, uint32_t * sad)
{
  uint32_t vect_sqr_21.347;
  vector(4) unsigned int vect_sqr_21.346;
  uint32_t stmp_sqr_21.345;
  vector(4) unsigned int vect_sqr_21.344;
  vector(4) unsigned int vect_patt_64.343;
  vector(8) unsigned short vect_patt_65.342;
  uint32_t vect_sum_14.341;
  vector(4) unsigned int vect_sum_14.340;
  uint32_t stmp_sum_14.339;
  vector(4) unsigned int vect_sum_14.338;
  vector(8) short unsigned int vect__13.337;
  vector(4) unsigned int vect__13.336;
  vector(16) unsigned char vect__12.335;
  vector(16) unsigned char * vectp_pix.334;
  vector(16) unsigned char * vectp_pix.333;
  int y;
  int x;
  uint32_t sqr;
  uint32_t sum;
  uint32_t var;
  sizetype _9;
  uint8_t * _10;
  unsigned char _12;
  unsigned int _13;
  int _18;
  int _19;
  unsigned int _20;
  unsigned int _27;
  unsigned int _28;
  int _32;
  unsigned short patt_65;
  unsigned int patt_66;
  unsigned int ivtmp_67;
  unsigned int ivtmp_68;
  unsigned int ivtmp_69;
  unsigned int ivtmp_70;
  sizetype pretmp_75;
  unsigned int ivtmp_81;
  unsigned int ivtmp_82;

  <bb 2>:
  # DEBUG var => 0
  # DEBUG sum => 0
  # DEBUG sqr => 0
  # DEBUG y => 0
  # DEBUG y => 0
  # DEBUG sqr => 0
  # DEBUG sum => 0
  # DEBUG pix => pix_8(D)
  pretmp_75 = (sizetype) i_stride_23(D);
  goto <bb 7>;

  <bb 3>:

  <bb 4>:
  # sum_16 = PHI <sum_14(3), sum_15(7)>
  # sqr_44 = PHI <sqr_21(3), sqr_45(7)>
  # x_46 = PHI <x_22(3), 0(7)>
  # ivtmp_70 = PHI <ivtmp_69(3), 16(7)>
  # vectp_pix.333_62 = PHI <vectp_pix.333_61(3), vectp_pix.334_63(7)>
  # vect_sum_14.338_53 = PHI <vect_sum_14.338_49(3), { 0, 0, 0, 0 }(7)>
  # vect_sqr_21.344_6 = PHI <vect_sqr_21.344_2(3), { 0, 0, 0, 0 }(7)>
  # ivtmp_81 = PHI <ivtmp_82(3), 0(7)>
  # DEBUG x => x_46
  # DEBUG sqr => sqr_44
  # DEBUG sum => sum_16
  _9 = (sizetype) x_46;
  _10 = pix_17 + _9;
  vect__12.335_60 = MEM[(uint8_t *)vectp_pix.333_62];
  _12 = *_10;
  vect__13.337_59 = [vec_unpack_lo_expr] vect__12.335_60;
  vect__13.337_58 = [vec_unpack_hi_expr] vect__12.335_60;
  vect__13.336_57 = [vec_unpack_lo_expr] vect__13.337_59;
  vect__13.336_56 = [vec_unpack_hi_expr] vect__13.337_59;
  vect__13.336_55 = [vec_unpack_lo_expr] vect__13.337_58;
  vect__13.336_54 = [vec_unpack_hi_expr] vect__13.337_58;
  _13 = (unsigned int) _12;
  vect_sum_14.338_52 = vect__13.336_57 + vect_sum_14.338_53;
  vect_sum_14.338_51 = vect__13.336_56 + vect_sum_14.338_52;
  vect_sum_14.338_50 = vect__13.336_55 + vect_sum_14.338_51;
  vect_sum_14.338_49 = vect__13.336_54 + vect_sum_14.338_50;
  sum_14 = _13 + sum_16;
  # DEBUG sum => sum_14
  _18 = (int) _12;
  _19 = _18 * _18;
  vect_patt_65.342_37 = WIDEN_MULT_LO_EXPR <vect__12.335_60, vect__12.335_60>;
  vect_patt_65.342_36 = WIDEN_MULT_HI_EXPR <vect__12.335_60, vect__12.335_60>;
  vect_patt_64.343_35 = [vec_unpack_lo_expr] vect_patt_65.342_37;
  vect_patt_64.343_34 = [vec_unpack_hi_expr] vect_patt_65.342_37;
  vect_patt_64.343_33 = [vec_unpack_lo_expr] vect_patt_65.342_36;
  vect_patt_64.343_7 = [vec_unpack_hi_expr] vect_patt_65.342_36;
  _20 = (unsigned int) _19;
  vect_sqr_21.344_5 = vect_patt_64.343_35 + vect_sqr_21.344_6;
  vect_sqr_21.344_4 = vect_patt_64.343_34 + vect_sqr_21.344_5;
  vect_sqr_21.344_3 = vect_patt_64.343_33 + vect_sqr_21.344_4;
  vect_sqr_21.344_2 = vect_patt_64.343_7 + vect_sqr_21.344_3;
  sqr_21 = _20 + sqr_44;
  # DEBUG sqr => sqr_21
  x_22 = x_46 + 1;
  # DEBUG x => x_22
  # DEBUG x => x_22
  # DEBUG sqr => sqr_21
  # DEBUG sum => sum_14
  ivtmp_69 = ivtmp_70 - 1;
  vectp_pix.333_61 = vectp_pix.333_62 + 16;
  ivtmp_82 = ivtmp_81 + 1;
  if (ivtmp_82 < 1)
    goto <bb 3>;
  else
    goto <bb 5>;

  <bb 5>:
  # sum_74 = PHI <sum_14(4)>
  # sqr_72 = PHI <sqr_21(4)>
  # vect_sum_14.338_48 = PHI <vect_sum_14.338_49(4)>
  # vect_sqr_21.344_1 = PHI <vect_sqr_21.344_2(4)>
  vect_sqr_21.346_78 = VEC_PERM_EXPR <vect_sqr_21.344_1, { 0, 0, 0, 0 }, { 2, 3, 4, 5 }>;
  vect_sqr_21.346_77 = vect_sqr_21.346_78 + vect_sqr_21.344_1;
  vect_sqr_21.346_76 = VEC_PERM_EXPR <vect_sqr_21.346_77, { 0, 0, 0, 0 }, { 1, 2, 3, 4 }>;
  vect_sqr_21.346_24 = vect_sqr_21.346_76 + vect_sqr_21.346_77;
  stmp_sqr_21.345_79 = BIT_FIELD_REF <vect_sqr_21.346_24, 32, 0>;
  vect_sqr_21.347_80 = stmp_sqr_21.345_79 + sqr_45;
  vect_sum_14.340_43 = VEC_PERM_EXPR <vect_sum_14.338_48, { 0, 0, 0, 0 }, { 2, 3, 4, 5 }>;
  vect_sum_14.340_42 = vect_sum_14.340_43 + vect_sum_14.338_48;
  vect_sum_14.340_41 = VEC_PERM_EXPR <vect_sum_14.340_42, { 0, 0, 0, 0 }, { 1, 2, 3, 4 }>;
  vect_sum_14.340_40 = vect_sum_14.340_41 + vect_sum_14.340_42;
  stmp_sum_14.339_39 = BIT_FIELD_REF <vect_sum_14.340_40, 32, 0>;
  vect_sum_14.341_38 = stmp_sum_14.339_39 + sum_15;
  pix_25 = pix_17 + pretmp_75;
  # DEBUG pix => pix_25
  y_26 = y_47 + 1;
  # DEBUG y => y_26
  # DEBUG y => y_26
  # DEBUG sqr => vect_sqr_21.347_80
  # DEBUG sum => vect_sum_14.341_38
  # DEBUG pix => pix_25
  ivtmp_67 = ivtmp_68 - 1;
  if (ivtmp_67 != 0)
    goto <bb 6>;
  else
    goto <bb 8>;

  <bb 6>:

  <bb 7>:
  # pix_17 = PHI <pix_25(6), pix_8(D)(2)>
  # sum_15 = PHI <vect_sum_14.341_38(6), 0(2)>
  # sqr_45 = PHI <vect_sqr_21.347_80(6), 0(2)>
  # y_47 = PHI <y_26(6), 0(2)>
  # ivtmp_68 = PHI <ivtmp_67(6), 16(2)>
  # DEBUG y => y_47
  # DEBUG sqr => sqr_45
  # DEBUG sum => sum_15
  # DEBUG pix => pix_17
  # DEBUG x => 0
  # DEBUG sqr => sqr_45
  # DEBUG sum => sum_15
  vectp_pix.334_63 = pix_17;
  goto <bb 4>;

  <bb 8>:
  # sum_73 = PHI <vect_sum_14.341_38(5)>
  # sqr_71 = PHI <vect_sqr_21.347_80(5)>
  _27 = sum_73 * sum_73;
  _28 = _27 >> 8;
  var_29 = sqr_71 - _28;
  # DEBUG var => var_29
  *sad_30(D) = sum_73;
  _32 = (int) var_29;
  return _32;

}



;; Function x264_pixel_var_8x8 (x264_pixel_var_8x8, funcdef_no=131, decl_uid=7761, cgraph_uid=131, symbol_order=174)


Analyzing loop at common/pixel.c:162
common/pixel.c:162:1: note: ===== analyze_loop_nest =====
common/pixel.c:162:1: note: === vect_analyze_loop_form ===
common/pixel.c:162:1: note: ===== analyze_loop_nest_1 =====
common/pixel.c:162:1: note: === vect_analyze_loop_form ===
common/pixel.c:162:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 2
  exit condition [7, + , 4294967295] != 0
  bounds on difference of bases: -7 ... -7
  result:
    # of iterations 7, bounded by 7
common/pixel.c:162:1: note: Considering outer-loop vectorization.
common/pixel.c:162:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 1
  exit condition [7, + , 4294967295] != 0
  bounds on difference of bases: -7 ... -7
  result:
    # of iterations 7, bounded by 7
common/pixel.c:162:1: note: === vect_analyze_data_refs ===
Creating dr for *_10
analyze_innermost: success.
	base_address: pix_17
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix_8(D)
	Access function 0: {{0B, +, pretmp_75}_1, +, 1}_2
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:162:1: note: analyze in outer-loop: *pix_17
common/pixel.c:162:1: note: failed: evolution of base is not affine.
common/pixel.c:162:1: note: bad data references.

Analyzing loop at common/pixel.c:162
common/pixel.c:162:1: note: ===== analyze_loop_nest =====
common/pixel.c:162:1: note: === vect_analyze_loop_form ===
common/pixel.c:162:1: note: === get_loop_niters ===
common/pixel.c:162:1: note: === vect_analyze_data_refs ===
Creating dr for *_10
analyze_innermost: success.
	base_address: pix_17
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix_17
	Access function 0: {0B, +, 1}_2
common/pixel.c:162:1: note: got vectype for stmt: _12 = *_10;
vector(16) unsigned char
common/pixel.c:162:1: note: === vect_analyze_scalar_cycles ===
common/pixel.c:162:1: note: Analyze phi: sum_16 = PHI <sum_14(3), sum_15(7)>

common/pixel.c:162:1: note: Access function of PHI: {sum_15, +, _13}_2
common/pixel.c:162:1: note: step: _13,  init: sum_15
common/pixel.c:162:1: note: step unknown.
common/pixel.c:162:1: note: Analyze phi: sqr_44 = PHI <sqr_21(3), sqr_45(7)>

common/pixel.c:162:1: note: Access function of PHI: {sqr_45, +, _20}_2
common/pixel.c:162:1: note: step: _20,  init: sqr_45
common/pixel.c:162:1: note: step unknown.
common/pixel.c:162:1: note: Analyze phi: x_46 = PHI <x_22(3), 0(7)>

common/pixel.c:162:1: note: Access function of PHI: {0, +, 1}_2
common/pixel.c:162:1: note: step: 1,  init: 0
common/pixel.c:162:1: note: Detected induction.
common/pixel.c:162:1: note: Analyze phi: ivtmp_70 = PHI <ivtmp_69(3), 8(7)>

common/pixel.c:162:1: note: Access function of PHI: {8, +, 4294967295}_2
common/pixel.c:162:1: note: step: 4294967295,  init: 8
common/pixel.c:162:1: note: Detected induction.
common/pixel.c:162:1: note: Analyze phi: sqr_44 = PHI <sqr_21(3), sqr_45(7)>

common/pixel.c:162:1: note: detected reduction: sqr_21 = _20 + sqr_44;

common/pixel.c:162:1: note: Detected reduction.
common/pixel.c:162:1: note: Analyze phi: sum_16 = PHI <sum_14(3), sum_15(7)>

common/pixel.c:162:1: note: detected reduction: sum_14 = _13 + sum_16;

common/pixel.c:162:1: note: Detected reduction.
common/pixel.c:162:1: note: === vect_pattern_recog ===
common/pixel.c:162:1: note: vect_is_simple_use: operand _13
common/pixel.c:162:1: note: def_stmt: _13 = (unsigned int) _12;
common/pixel.c:162:1: note: type of def: 3.
common/pixel.c:162:1: note: vect_is_simple_use: operand _12
common/pixel.c:162:1: note: def_stmt: _12 = *_10;
common/pixel.c:162:1: note: type of def: 3.
common/pixel.c:162:1: note: vect_recog_widen_sum_pattern: detected: patt_66 = _12 w+ sum_16;

common/pixel.c:162:1: note: vect_is_simple_use: operand _13
common/pixel.c:162:1: note: def_stmt: _13 = (unsigned int) _12;
common/pixel.c:162:1: note: type of def: 3.
common/pixel.c:162:1: note: vect_is_simple_use: operand _12
common/pixel.c:162:1: note: def_stmt: _12 = *_10;
common/pixel.c:162:1: note: type of def: 3.
common/pixel.c:162:1: note: vect_is_simple_use: operand _13
common/pixel.c:162:1: note: def_stmt: _13 = (unsigned int) _12;
common/pixel.c:162:1: note: type of def: 3.
common/pixel.c:162:1: note: vect_is_simple_use: operand _12
common/pixel.c:162:1: note: def_stmt: _12 = *_10;
common/pixel.c:162:1: note: type of def: 3.
common/pixel.c:162:1: note: vect_is_simple_use: operand _18
common/pixel.c:162:1: note: def_stmt: _18 = (int) _12;
common/pixel.c:162:1: note: type of def: 3.
common/pixel.c:162:1: note: vect_is_simple_use: operand _12
common/pixel.c:162:1: note: def_stmt: _12 = *_10;
common/pixel.c:162:1: note: type of def: 3.
common/pixel.c:162:1: note: vect_is_simple_use: operand _18
common/pixel.c:162:1: note: def_stmt: _18 = (int) _12;
common/pixel.c:162:1: note: type of def: 3.
common/pixel.c:162:1: note: vect_is_simple_use: operand _12
common/pixel.c:162:1: note: def_stmt: _12 = *_10;
common/pixel.c:162:1: note: type of def: 3.
common/pixel.c:162:1: note: vect_recog_widen_mult_pattern: detected:
common/pixel.c:162:1: note: patt_64 = (unsigned int) patt_65;
common/pixel.c:162:1: note: pattern recognized: patt_64 = (unsigned int) patt_65;
common/pixel.c:162:1: note: vect_is_simple_use: operand _20
common/pixel.c:162:1: note: def_stmt: _20 = (unsigned int) _19;
common/pixel.c:162:1: note: type of def: 3.
common/pixel.c:162:1: note: vect_is_simple_use: operand _20
common/pixel.c:162:1: note: def_stmt: _20 = (unsigned int) _19;
common/pixel.c:162:1: note: type of def: 3.
common/pixel.c:162:1: note: vect_is_simple_use: operand _20
common/pixel.c:162:1: note: def_stmt: _20 = (unsigned int) _19;
common/pixel.c:162:1: note: type of def: 3.
common/pixel.c:162:1: note: vect_is_simple_use: operand _19
common/pixel.c:162:1: note: def_stmt: _19 = _18 * _18;
common/pixel.c:162:1: note: type of def: 3.
common/pixel.c:162:1: note: === vect_analyze_data_ref_accesses ===
common/pixel.c:162:1: note: === vect_mark_stmts_to_be_vectorized ===
common/pixel.c:162:1: note: init: phi relevant? sum_16 = PHI <sum_14(3), sum_15(7)>
common/pixel.c:162:1: note: init: phi relevant? sqr_44 = PHI <sqr_21(3), sqr_45(7)>
common/pixel.c:162:1: note: init: phi relevant? x_46 = PHI <x_22(3), 0(7)>
common/pixel.c:162:1: note: init: phi relevant? ivtmp_70 = PHI <ivtmp_69(3), 8(7)>
common/pixel.c:162:1: note: init: stmt relevant? # DEBUG x => x_46
common/pixel.c:162:1: note: init: stmt relevant? # DEBUG sqr => sqr_44
common/pixel.c:162:1: note: init: stmt relevant? # DEBUG sum => sum_16
common/pixel.c:162:1: note: init: stmt relevant? _9 = (sizetype) x_46;
common/pixel.c:162:1: note: init: stmt relevant? _10 = pix_17 + _9;
common/pixel.c:162:1: note: init: stmt relevant? _12 = *_10;
common/pixel.c:162:1: note: init: stmt relevant? _13 = (unsigned int) _12;
common/pixel.c:162:1: note: init: stmt relevant? sum_14 = _13 + sum_16;
common/pixel.c:162:1: note: vec_stmt_relevant_p: used out of loop.
common/pixel.c:162:1: note: mark relevant 0, live 1.
common/pixel.c:162:1: note: init: stmt relevant? # DEBUG sum => sum_14
common/pixel.c:162:1: note: init: stmt relevant? _18 = (int) _12;
common/pixel.c:162:1: note: init: stmt relevant? _19 = _18 * _18;
common/pixel.c:162:1: note: init: stmt relevant? _20 = (unsigned int) _19;
common/pixel.c:162:1: note: init: stmt relevant? sqr_21 = _20 + sqr_44;
common/pixel.c:162:1: note: vec_stmt_relevant_p: used out of loop.
common/pixel.c:162:1: note: mark relevant 0, live 1.
common/pixel.c:162:1: note: init: stmt relevant? # DEBUG sqr => sqr_21
common/pixel.c:162:1: note: init: stmt relevant? x_22 = x_46 + 1;
common/pixel.c:162:1: note: init: stmt relevant? # DEBUG x => x_22
common/pixel.c:162:1: note: init: stmt relevant? # DEBUG x => x_22
common/pixel.c:162:1: note: init: stmt relevant? # DEBUG sqr => sqr_21
common/pixel.c:162:1: note: init: stmt relevant? # DEBUG sum => sum_14
common/pixel.c:162:1: note: init: stmt relevant? ivtmp_69 = ivtmp_70 - 1;
common/pixel.c:162:1: note: init: stmt relevant? if (ivtmp_69 != 0)
common/pixel.c:162:1: note: worklist: examine stmt: sqr_21 = _20 + sqr_44;
common/pixel.c:162:1: note: vect_is_simple_use: operand _20
common/pixel.c:162:1: note: def_stmt: _20 = (unsigned int) _19;
common/pixel.c:162:1: note: type of def: 3.
common/pixel.c:162:1: note: mark relevant 3, live 0.
common/pixel.c:162:1: note: last stmt in pattern. don't mark relevant/live.
common/pixel.c:162:1: note: vect_is_simple_use: operand sqr_44
common/pixel.c:162:1: note: def_stmt: sqr_44 = PHI <sqr_21(3), sqr_45(7)>
common/pixel.c:162:1: note: type of def: 5.
common/pixel.c:162:1: note: mark relevant 3, live 0.
common/pixel.c:162:1: note: worklist: examine stmt: sqr_44 = PHI <sqr_21(3), sqr_45(7)>
common/pixel.c:162:1: note: vect_is_simple_use: operand sqr_21
common/pixel.c:162:1: note: def_stmt: sqr_21 = _20 + sqr_44;
common/pixel.c:162:1: note: type of def: 5.
common/pixel.c:162:1: note: reduc-stmt defining reduc-phi in the same nest.
common/pixel.c:162:1: note: vect_is_simple_use: operand sqr_45
common/pixel.c:162:1: note: def_stmt: sqr_45 = PHI <sqr_72(6), 0(2)>
common/pixel.c:162:1: note: type of def: 2.
common/pixel.c:162:1: note: def_stmt is out of loop.
common/pixel.c:162:1: note: worklist: examine stmt: patt_64 = (unsigned int) patt_65;
common/pixel.c:162:1: note: vect_is_simple_use: operand patt_65
common/pixel.c:162:1: note: def_stmt: patt_65 = _12 w* _12;
common/pixel.c:162:1: note: type of def: 3.
common/pixel.c:162:1: note: mark relevant 3, live 0.
common/pixel.c:162:1: note: worklist: examine stmt: patt_65 = _12 w* _12;
common/pixel.c:162:1: note: vect_is_simple_use: operand _12
common/pixel.c:162:1: note: def_stmt: _12 = *_10;
common/pixel.c:162:1: note: type of def: 3.
common/pixel.c:162:1: note: mark relevant 3, live 0.
common/pixel.c:162:1: note: vect_is_simple_use: operand _12
common/pixel.c:162:1: note: def_stmt: _12 = *_10;
common/pixel.c:162:1: note: type of def: 3.
common/pixel.c:162:1: note: mark relevant 3, live 0.
common/pixel.c:162:1: note: already marked relevant/live.
common/pixel.c:162:1: note: worklist: examine stmt: _12 = *_10;
common/pixel.c:162:1: note: worklist: examine stmt: sum_14 = _13 + sum_16;
common/pixel.c:162:1: note: vect_is_simple_use: operand _13
common/pixel.c:162:1: note: def_stmt: _13 = (unsigned int) _12;
common/pixel.c:162:1: note: type of def: 3.
common/pixel.c:162:1: note: mark relevant 3, live 0.
common/pixel.c:162:1: note: vect_is_simple_use: operand sum_16
common/pixel.c:162:1: note: def_stmt: sum_16 = PHI <sum_14(3), sum_15(7)>
common/pixel.c:162:1: note: type of def: 5.
common/pixel.c:162:1: note: mark relevant 3, live 0.
common/pixel.c:162:1: note: worklist: examine stmt: sum_16 = PHI <sum_14(3), sum_15(7)>
common/pixel.c:162:1: note: vect_is_simple_use: operand sum_14
common/pixel.c:162:1: note: def_stmt: sum_14 = _13 + sum_16;
common/pixel.c:162:1: note: type of def: 5.
common/pixel.c:162:1: note: reduc-stmt defining reduc-phi in the same nest.
common/pixel.c:162:1: note: vect_is_simple_use: operand sum_15
common/pixel.c:162:1: note: def_stmt: sum_15 = PHI <sum_74(6), 0(2)>
common/pixel.c:162:1: note: type of def: 2.
common/pixel.c:162:1: note: def_stmt is out of loop.
common/pixel.c:162:1: note: worklist: examine stmt: _13 = (unsigned int) _12;
common/pixel.c:162:1: note: vect_is_simple_use: operand _12
common/pixel.c:162:1: note: def_stmt: _12 = *_10;
common/pixel.c:162:1: note: type of def: 3.
common/pixel.c:162:1: note: mark relevant 3, live 0.
common/pixel.c:162:1: note: already marked relevant/live.
common/pixel.c:162:1: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _12 = *_10;
  stmt_b: _12 = *_10;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_2)
  (chrec_b = {0B, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/pixel.c:162:1: note: === vect_determine_vectorization_factor ===
common/pixel.c:162:1: note: ==> examining phi: sum_16 = PHI <sum_14(3), sum_15(7)>

common/pixel.c:162:1: note: get vectype for scalar type:  uint32_t
common/pixel.c:162:1: note: vectype: vector(4) unsigned int
common/pixel.c:162:1: note: nunits = 4
common/pixel.c:162:1: note: ==> examining phi: sqr_44 = PHI <sqr_21(3), sqr_45(7)>

common/pixel.c:162:1: note: get vectype for scalar type:  uint32_t
common/pixel.c:162:1: note: vectype: vector(4) unsigned int
common/pixel.c:162:1: note: nunits = 4
common/pixel.c:162:1: note: ==> examining phi: x_46 = PHI <x_22(3), 0(7)>

common/pixel.c:162:1: note: ==> examining phi: ivtmp_70 = PHI <ivtmp_69(3), 8(7)>

common/pixel.c:162:1: note: ==> examining statement: # DEBUG x => x_46

common/pixel.c:162:1: note: skip.
common/pixel.c:162:1: note: ==> examining statement: # DEBUG sqr => sqr_44

common/pixel.c:162:1: note: skip.
common/pixel.c:162:1: note: ==> examining statement: # DEBUG sum => sum_16

common/pixel.c:162:1: note: skip.
common/pixel.c:162:1: note: ==> examining statement: _9 = (sizetype) x_46;

common/pixel.c:162:1: note: skip.
common/pixel.c:162:1: note: ==> examining statement: _10 = pix_17 + _9;

common/pixel.c:162:1: note: skip.
common/pixel.c:162:1: note: ==> examining statement: _12 = *_10;

common/pixel.c:162:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:162:1: note: vectype: vector(16) unsigned char
common/pixel.c:162:1: note: nunits = 16
common/pixel.c:162:1: note: ==> examining statement: _13 = (unsigned int) _12;

common/pixel.c:162:1: note: get vectype for scalar type:  unsigned int
common/pixel.c:162:1: note: vectype: vector(4) unsigned int
common/pixel.c:162:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:162:1: note: vectype: vector(16) unsigned char
common/pixel.c:162:1: note: nunits = 16
common/pixel.c:162:1: note: ==> examining statement: sum_14 = _13 + sum_16;

common/pixel.c:162:1: note: get vectype for scalar type:  uint32_t
common/pixel.c:162:1: note: vectype: vector(4) unsigned int
common/pixel.c:162:1: note: get vectype for scalar type:  uint32_t
common/pixel.c:162:1: note: vectype: vector(4) unsigned int
common/pixel.c:162:1: note: nunits = 4
common/pixel.c:162:1: note: ==> examining statement: # DEBUG sum => sum_14

common/pixel.c:162:1: note: skip.
common/pixel.c:162:1: note: ==> examining statement: _18 = (int) _12;

common/pixel.c:162:1: note: skip.
common/pixel.c:162:1: note: ==> examining statement: _19 = _18 * _18;

common/pixel.c:162:1: note: skip.
common/pixel.c:162:1: note: ==> examining statement: _20 = (unsigned int) _19;

common/pixel.c:162:1: note: ==> examining pattern statement: patt_64 = (unsigned int) patt_65;

common/pixel.c:162:1: note: ==> examining pattern def stmt: patt_65 = _12 w* _12;

common/pixel.c:162:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:162:1: note: vectype: vector(16) unsigned char
common/pixel.c:162:1: note: nunits = 16
common/pixel.c:162:1: note: ==> examining statement: _20 = (unsigned int) _19;

common/pixel.c:162:1: note: ==> examining pattern statement: patt_64 = (unsigned int) patt_65;

common/pixel.c:162:1: note: get vectype for scalar type:  unsigned short
common/pixel.c:162:1: note: vectype: vector(8) unsigned short
common/pixel.c:162:1: note: nunits = 8
common/pixel.c:162:1: note: ==> examining statement: sqr_21 = _20 + sqr_44;

common/pixel.c:162:1: note: get vectype for scalar type:  uint32_t
common/pixel.c:162:1: note: vectype: vector(4) unsigned int
common/pixel.c:162:1: note: get vectype for scalar type:  uint32_t
common/pixel.c:162:1: note: vectype: vector(4) unsigned int
common/pixel.c:162:1: note: nunits = 4
common/pixel.c:162:1: note: ==> examining statement: # DEBUG sqr => sqr_21

common/pixel.c:162:1: note: skip.
common/pixel.c:162:1: note: ==> examining statement: x_22 = x_46 + 1;

common/pixel.c:162:1: note: skip.
common/pixel.c:162:1: note: ==> examining statement: # DEBUG x => x_22

common/pixel.c:162:1: note: skip.
common/pixel.c:162:1: note: ==> examining statement: # DEBUG x => x_22

common/pixel.c:162:1: note: skip.
common/pixel.c:162:1: note: ==> examining statement: # DEBUG sqr => sqr_21

common/pixel.c:162:1: note: skip.
common/pixel.c:162:1: note: ==> examining statement: # DEBUG sum => sum_14

common/pixel.c:162:1: note: skip.
common/pixel.c:162:1: note: ==> examining statement: ivtmp_69 = ivtmp_70 - 1;

common/pixel.c:162:1: note: skip.
common/pixel.c:162:1: note: ==> examining statement: if (ivtmp_69 != 0)

common/pixel.c:162:1: note: skip.
common/pixel.c:162:1: note: vectorization factor = 16
common/pixel.c:162:1: note: === vect_analyze_data_refs_alignment ===
common/pixel.c:162:1: note: vect_compute_data_ref_alignment:
common/pixel.c:162:1: note: can't force alignment of ref: *_10
common/pixel.c:162:1: note: === vect_prune_runtime_alias_test_list ===
common/pixel.c:162:1: note: === vect_enhance_data_refs_alignment ===
common/pixel.c:162:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:162:1: note: vect_can_advance_ivs_p:
common/pixel.c:162:1: note: Analyze phi: sum_16 = PHI <sum_14(3), sum_15(7)>

common/pixel.c:162:1: note: reduc phi. skip.
common/pixel.c:162:1: note: Analyze phi: sqr_44 = PHI <sqr_21(3), sqr_45(7)>

common/pixel.c:162:1: note: reduc phi. skip.
common/pixel.c:162:1: note: Analyze phi: x_46 = PHI <x_22(3), 0(7)>

common/pixel.c:162:1: note: Analyze phi: ivtmp_70 = PHI <ivtmp_69(3), 8(7)>

common/pixel.c:162:1: note: Vectorizing an unaligned access.
common/pixel.c:162:1: note: === vect_analyze_slp ===
common/pixel.c:162:1: note: Build SLP for sqr_21 = _20 + sqr_44;

common/pixel.c:162:1: note: Build SLP for sum_14 = _13 + sum_16;

common/pixel.c:162:1: note: vect_is_simple_use: operand _20
common/pixel.c:162:1: note: def_stmt: _20 = (unsigned int) _19;
common/pixel.c:162:1: note: type of def: 3.
common/pixel.c:162:1: note: vect_is_simple_use: operand sqr_44
common/pixel.c:162:1: note: def_stmt: sqr_44 = PHI <sqr_21(3), sqr_45(7)>
common/pixel.c:162:1: note: type of def: 5.
common/pixel.c:162:1: note: vect_is_simple_use: operand _13
common/pixel.c:162:1: note: def_stmt: _13 = (unsigned int) _12;
common/pixel.c:162:1: note: type of def: 3.
common/pixel.c:162:1: note: vect_is_simple_use: operand sum_16
common/pixel.c:162:1: note: def_stmt: sum_16 = PHI <sum_14(3), sum_15(7)>
common/pixel.c:162:1: note: type of def: 5.
common/pixel.c:162:1: note: Build SLP for patt_64 = (unsigned int) patt_65;

common/pixel.c:162:1: note: Build SLP for _13 = (unsigned int) _12;

common/pixel.c:162:1: note: vect_is_simple_use: operand patt_65
common/pixel.c:162:1: note: def_stmt: patt_65 = _12 w* _12;
common/pixel.c:162:1: note: type of def: 3.
common/pixel.c:162:1: note: vect_is_simple_use: operand _12
common/pixel.c:162:1: note: def_stmt: _12 = *_10;
common/pixel.c:162:1: note: type of def: 3.
common/pixel.c:162:1: note: Build SLP failed: different types
common/pixel.c:162:1: note: === vect_make_slp_decision ===
common/pixel.c:162:1: note: === vect_detect_hybrid_slp ===
common/pixel.c:162:1: note: === vect_analyze_loop_operations ===
common/pixel.c:162:1: note: examining phi: sum_16 = PHI <sum_14(3), sum_15(7)>

common/pixel.c:162:1: note: examining phi: sqr_44 = PHI <sqr_21(3), sqr_45(7)>

common/pixel.c:162:1: note: examining phi: x_46 = PHI <x_22(3), 0(7)>

common/pixel.c:162:1: note: examining phi: ivtmp_70 = PHI <ivtmp_69(3), 8(7)>

common/pixel.c:162:1: note: ==> examining statement: # DEBUG x => x_46
common/pixel.c:162:1: note: irrelevant.
common/pixel.c:162:1: note: ==> examining statement: # DEBUG sqr => sqr_44
common/pixel.c:162:1: note: irrelevant.
common/pixel.c:162:1: note: ==> examining statement: # DEBUG sum => sum_16
common/pixel.c:162:1: note: irrelevant.
common/pixel.c:162:1: note: ==> examining statement: _9 = (sizetype) x_46;
common/pixel.c:162:1: note: irrelevant.
common/pixel.c:162:1: note: ==> examining statement: _10 = pix_17 + _9;
common/pixel.c:162:1: note: irrelevant.
common/pixel.c:162:1: note: ==> examining statement: _12 = *_10;
common/pixel.c:162:1: note: vect_is_simple_use: operand *_10
common/pixel.c:162:1: note: not ssa-name.
common/pixel.c:162:1: note: use not simple.
common/pixel.c:162:1: note: vect_is_simple_use: operand *_10
common/pixel.c:162:1: note: not ssa-name.
common/pixel.c:162:1: note: use not simple.
common/pixel.c:162:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:162:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:162:1: note: ==> examining statement: _13 = (unsigned int) _12;
common/pixel.c:162:1: note: vect_is_simple_use: operand _12
common/pixel.c:162:1: note: def_stmt: _12 = *_10;
common/pixel.c:162:1: note: type of def: 3.
common/pixel.c:162:1: note: === vectorizable_conversion ===
common/pixel.c:162:1: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:162:1: note: ==> examining statement: sum_14 = _13 + sum_16;
common/pixel.c:162:1: note: vect_is_simple_use: operand _13
common/pixel.c:162:1: note: def_stmt: _13 = (unsigned int) _12;
common/pixel.c:162:1: note: type of def: 3.
common/pixel.c:162:1: note: vect_is_simple_use: operand sum_16
common/pixel.c:162:1: note: def_stmt: sum_16 = PHI <sum_14(3), sum_15(7)>
common/pixel.c:162:1: note: type of def: 5.
common/pixel.c:162:1: note: detected reduction: sum_14 = _13 + sum_16;

common/pixel.c:162:1: note: reduc op not supported by target.
vect_model_reduction_cost: inside_cost = 4, prologue_cost = 1, epilogue_cost = 5 .
common/pixel.c:162:1: note: ==> examining statement: # DEBUG sum => sum_14
common/pixel.c:162:1: note: irrelevant.
common/pixel.c:162:1: note: ==> examining statement: _18 = (int) _12;
common/pixel.c:162:1: note: irrelevant.
common/pixel.c:162:1: note: ==> examining statement: _19 = _18 * _18;
common/pixel.c:162:1: note: irrelevant.
common/pixel.c:162:1: note: ==> examining statement: _20 = (unsigned int) _19;
common/pixel.c:162:1: note: ==> examining pattern statement: patt_64 = (unsigned int) patt_65;
common/pixel.c:162:1: note: ==> examining pattern def statement: patt_65 = _12 w* _12;
common/pixel.c:162:1: note: ==> examining statement: patt_65 = _12 w* _12;
common/pixel.c:162:1: note: vect_is_simple_use: operand _12
common/pixel.c:162:1: note: def_stmt: _12 = *_10;
common/pixel.c:162:1: note: type of def: 3.
common/pixel.c:162:1: note: vect_is_simple_use: operand _12
common/pixel.c:162:1: note: def_stmt: _12 = *_10;
common/pixel.c:162:1: note: type of def: 3.
common/pixel.c:162:1: note: === vectorizable_conversion ===
common/pixel.c:162:1: note: vect_model_promotion_demotion_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:162:1: note: vect_is_simple_use: operand patt_65
common/pixel.c:162:1: note: def_stmt: patt_65 = _12 w* _12;
common/pixel.c:162:1: note: type of def: 3.
common/pixel.c:162:1: note: === vectorizable_conversion ===
common/pixel.c:162:1: note: vect_model_promotion_demotion_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:162:1: note: ==> examining statement: sqr_21 = _20 + sqr_44;
common/pixel.c:162:1: note: vect_is_simple_use: operand _20
common/pixel.c:162:1: note: def_stmt: _20 = (unsigned int) _19;
common/pixel.c:162:1: note: type of def: 3.
common/pixel.c:162:1: note: vect_is_simple_use: operand sqr_44
common/pixel.c:162:1: note: def_stmt: sqr_44 = PHI <sqr_21(3), sqr_45(7)>
common/pixel.c:162:1: note: type of def: 5.
common/pixel.c:162:1: note: detected reduction: sqr_21 = _20 + sqr_44;

common/pixel.c:162:1: note: reduc op not supported by target.
vect_model_reduction_cost: inside_cost = 4, prologue_cost = 1, epilogue_cost = 5 .
common/pixel.c:162:1: note: ==> examining statement: # DEBUG sqr => sqr_21
common/pixel.c:162:1: note: irrelevant.
common/pixel.c:162:1: note: ==> examining statement: x_22 = x_46 + 1;
common/pixel.c:162:1: note: irrelevant.
common/pixel.c:162:1: note: ==> examining statement: # DEBUG x => x_22
common/pixel.c:162:1: note: irrelevant.
common/pixel.c:162:1: note: ==> examining statement: # DEBUG x => x_22
common/pixel.c:162:1: note: irrelevant.
common/pixel.c:162:1: note: ==> examining statement: # DEBUG sqr => sqr_21
common/pixel.c:162:1: note: irrelevant.
common/pixel.c:162:1: note: ==> examining statement: # DEBUG sum => sum_14
common/pixel.c:162:1: note: irrelevant.
common/pixel.c:162:1: note: ==> examining statement: ivtmp_69 = ivtmp_70 - 1;
common/pixel.c:162:1: note: irrelevant.
common/pixel.c:162:1: note: ==> examining statement: if (ivtmp_69 != 0)
common/pixel.c:162:1: note: irrelevant.
common/pixel.c:162:1: note: vectorization_factor = 16, niters = 8
common/pixel.c:162:1: note: not vectorized: iteration count too small.
common/pixel.c:162:1: note: not vectorized: iteration count smaller than vectorization factor.
common/pixel.c:162:1: note: bad operation or unsupported loop bound.
common/pixel.c:162:1: note: vectorized 0 loops in function.
x264_pixel_var_8x8 (uint8_t * pix, int i_stride, uint32_t * sad)
{
  int y;
  int x;
  uint32_t sqr;
  uint32_t sum;
  uint32_t var;
  sizetype _9;
  uint8_t * _10;
  unsigned char _12;
  unsigned int _13;
  int _18;
  int _19;
  unsigned int _20;
  unsigned int _27;
  unsigned int _28;
  int _32;
  unsigned short patt_65;
  unsigned int patt_66;
  unsigned int ivtmp_67;
  unsigned int ivtmp_68;
  unsigned int ivtmp_69;
  unsigned int ivtmp_70;
  sizetype pretmp_75;

  <bb 2>:
  # DEBUG var => 0
  # DEBUG sum => 0
  # DEBUG sqr => 0
  # DEBUG y => 0
  # DEBUG y => 0
  # DEBUG sqr => 0
  # DEBUG sum => 0
  # DEBUG pix => pix_8(D)
  pretmp_75 = (sizetype) i_stride_23(D);
  goto <bb 7>;

  <bb 3>:

  <bb 4>:
  # sum_16 = PHI <sum_14(3), sum_15(7)>
  # sqr_44 = PHI <sqr_21(3), sqr_45(7)>
  # x_46 = PHI <x_22(3), 0(7)>
  # ivtmp_70 = PHI <ivtmp_69(3), 8(7)>
  # DEBUG x => x_46
  # DEBUG sqr => sqr_44
  # DEBUG sum => sum_16
  _9 = (sizetype) x_46;
  _10 = pix_17 + _9;
  _12 = *_10;
  _13 = (unsigned int) _12;
  sum_14 = _13 + sum_16;
  # DEBUG sum => sum_14
  _18 = (int) _12;
  _19 = _18 * _18;
  _20 = (unsigned int) _19;
  sqr_21 = _20 + sqr_44;
  # DEBUG sqr => sqr_21
  x_22 = x_46 + 1;
  # DEBUG x => x_22
  # DEBUG x => x_22
  # DEBUG sqr => sqr_21
  # DEBUG sum => sum_14
  ivtmp_69 = ivtmp_70 - 1;
  if (ivtmp_69 != 0)
    goto <bb 3>;
  else
    goto <bb 5>;

  <bb 5>:
  # sum_74 = PHI <sum_14(4)>
  # sqr_72 = PHI <sqr_21(4)>
  pix_25 = pix_17 + pretmp_75;
  # DEBUG pix => pix_25
  y_26 = y_47 + 1;
  # DEBUG y => y_26
  # DEBUG y => y_26
  # DEBUG sqr => sqr_72
  # DEBUG sum => sum_74
  # DEBUG pix => pix_25
  ivtmp_67 = ivtmp_68 - 1;
  if (ivtmp_67 != 0)
    goto <bb 6>;
  else
    goto <bb 8>;

  <bb 6>:

  <bb 7>:
  # pix_17 = PHI <pix_25(6), pix_8(D)(2)>
  # sum_15 = PHI <sum_74(6), 0(2)>
  # sqr_45 = PHI <sqr_72(6), 0(2)>
  # y_47 = PHI <y_26(6), 0(2)>
  # ivtmp_68 = PHI <ivtmp_67(6), 8(2)>
  # DEBUG y => y_47
  # DEBUG sqr => sqr_45
  # DEBUG sum => sum_15
  # DEBUG pix => pix_17
  # DEBUG x => 0
  # DEBUG sqr => sqr_45
  # DEBUG sum => sum_15
  goto <bb 4>;

  <bb 8>:
  # sum_73 = PHI <sum_74(5)>
  # sqr_71 = PHI <sqr_72(5)>
  _27 = sum_73 * sum_73;
  _28 = _27 >> 6;
  var_29 = sqr_71 - _28;
  # DEBUG var => var_29
  *sad_30(D) = sum_73;
  _32 = (int) var_29;
  return _32;

}



;; Function pixel_satd_wxh (pixel_satd_wxh, funcdef_no=132, decl_uid=7780, cgraph_uid=132, symbol_order=175)


Analyzing loop at common/pixel.c:185
common/pixel.c:185:5: note: ===== analyze_loop_nest =====
common/pixel.c:185:5: note: === vect_analyze_loop_form ===
common/pixel.c:185:5: note: not vectorized: multiple nested loops.
common/pixel.c:185:5: note: bad loop form.

Analyzing loop at common/pixel.c:187
common/pixel.c:187:9: note: ===== analyze_loop_nest =====
common/pixel.c:187:9: note: === vect_analyze_loop_form ===
common/pixel.c:187:9: note: not vectorized: multiple nested loops.
common/pixel.c:187:9: note: bad loop form.

Analyzing loop at common/pixel.c:200
common/pixel.c:200:13: note: ===== analyze_loop_nest =====
common/pixel.c:200:13: note: === vect_analyze_loop_form ===
common/pixel.c:200:13: note: === get_loop_niters ===
Analyzing # of iterations of loop 4
  exit condition [3, + , 4294967295] != 0
  bounds on difference of bases: -3 ... -3
  result:
    # of iterations 3, bounded by 3
common/pixel.c:200:13: note: === vect_analyze_data_refs ===
Creating dr for tmp[0][i_121]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &tmp
	offset from base address: 0
	constant offset from base address: 0
	step: 2
	aligned to: 128
	base_object: tmp
	Access function 0: {0, +, 1}_4
	Access function 1: 0
Creating dr for tmp[1][i_121]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &tmp
	offset from base address: 0
	constant offset from base address: 8
	step: 2
	aligned to: 128
	base_object: tmp
	Access function 0: {0, +, 1}_4
	Access function 1: 1
Creating dr for tmp[2][i_121]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &tmp
	offset from base address: 0
	constant offset from base address: 16
	step: 2
	aligned to: 128
	base_object: tmp
	Access function 0: {0, +, 1}_4
	Access function 1: 2
Creating dr for tmp[3][i_121]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &tmp
	offset from base address: 0
	constant offset from base address: 24
	step: 2
	aligned to: 128
	base_object: tmp
	Access function 0: {0, +, 1}_4
	Access function 1: 3
common/pixel.c:200:13: note: got vectype for stmt: _74 = tmp[0][i_121];
vector(8) short int
common/pixel.c:200:13: note: got vectype for stmt: _76 = tmp[1][i_121];
vector(8) short int
common/pixel.c:200:13: note: got vectype for stmt: _80 = tmp[2][i_121];
vector(8) short int
common/pixel.c:200:13: note: got vectype for stmt: _82 = tmp[3][i_121];
vector(8) short int
common/pixel.c:200:13: note: === vect_analyze_scalar_cycles ===
common/pixel.c:200:13: note: Analyze phi: i_satd_119 = PHI <i_satd_22(8), i_satd_97(10)>

common/pixel.c:200:13: note: Access function of PHI: {i_satd_22, +, _96}_4
common/pixel.c:200:13: note: step: _96,  init: i_satd_22
common/pixel.c:200:13: note: step unknown.
common/pixel.c:200:13: note: Analyze phi: i_121 = PHI <0(8), i_98(10)>

common/pixel.c:200:13: note: Access function of PHI: {0, +, 1}_4
common/pixel.c:200:13: note: step: 1,  init: 0
common/pixel.c:200:13: note: Detected induction.
common/pixel.c:200:13: note: Analyze phi: ivtmp_12 = PHI <4(8), ivtmp_289(10)>

common/pixel.c:200:13: note: Access function of PHI: {4, +, 4294967295}_4
common/pixel.c:200:13: note: step: 4294967295,  init: 4
common/pixel.c:200:13: note: Detected induction.
common/pixel.c:200:13: note: Analyze phi: i_satd_119 = PHI <i_satd_22(8), i_satd_97(10)>

common/pixel.c:200:13: note: detected reduction: i_satd_97 = _96 + i_satd_119;

common/pixel.c:200:13: note: Detected reduction.
common/pixel.c:200:13: note: === vect_pattern_recog ===
common/pixel.c:200:13: note: vect_is_simple_use: operand _96
common/pixel.c:200:13: note: def_stmt: _96 = _94 + _95;
common/pixel.c:200:13: note: type of def: 3.
common/pixel.c:200:13: note: vect_is_simple_use: operand _96
common/pixel.c:200:13: note: def_stmt: _96 = _94 + _95;
common/pixel.c:200:13: note: type of def: 3.
common/pixel.c:200:13: note: vect_is_simple_use: operand _96
common/pixel.c:200:13: note: def_stmt: _96 = _94 + _95;
common/pixel.c:200:13: note: type of def: 3.
common/pixel.c:200:13: note: === vect_analyze_data_ref_accesses ===
common/pixel.c:200:13: note: === vect_mark_stmts_to_be_vectorized ===
common/pixel.c:200:13: note: init: phi relevant? i_satd_119 = PHI <i_satd_22(8), i_satd_97(10)>
common/pixel.c:200:13: note: init: phi relevant? i_121 = PHI <0(8), i_98(10)>
common/pixel.c:200:13: note: init: phi relevant? ivtmp_12 = PHI <4(8), ivtmp_289(10)>
common/pixel.c:200:13: note: init: stmt relevant? # DEBUG i => i_121
common/pixel.c:200:13: note: init: stmt relevant? # DEBUG i_satd => i_satd_119
common/pixel.c:200:13: note: init: stmt relevant? _74 = tmp[0][i_121];
common/pixel.c:200:13: note: init: stmt relevant? _75 = (int) _74;
common/pixel.c:200:13: note: init: stmt relevant? _76 = tmp[1][i_121];
common/pixel.c:200:13: note: init: stmt relevant? _77 = (int) _76;
common/pixel.c:200:13: note: init: stmt relevant? t0_78 = _75 + _77;
common/pixel.c:200:13: note: init: stmt relevant? # DEBUG t0 => t0_78
common/pixel.c:200:13: note: init: stmt relevant? t1_79 = _75 - _77;
common/pixel.c:200:13: note: init: stmt relevant? # DEBUG t1 => t1_79
common/pixel.c:200:13: note: init: stmt relevant? _80 = tmp[2][i_121];
common/pixel.c:200:13: note: init: stmt relevant? _81 = (int) _80;
common/pixel.c:200:13: note: init: stmt relevant? _82 = tmp[3][i_121];
common/pixel.c:200:13: note: init: stmt relevant? _83 = (int) _82;
common/pixel.c:200:13: note: init: stmt relevant? t2_84 = _81 + _83;
common/pixel.c:200:13: note: init: stmt relevant? # DEBUG t2 => t2_84
common/pixel.c:200:13: note: init: stmt relevant? t3_85 = _81 - _83;
common/pixel.c:200:13: note: init: stmt relevant? # DEBUG t3 => t3_85
common/pixel.c:200:13: note: init: stmt relevant? a0_86 = t0_78 + t2_84;
common/pixel.c:200:13: note: init: stmt relevant? # DEBUG a0 => a0_86
common/pixel.c:200:13: note: init: stmt relevant? a2_87 = t0_78 - t2_84;
common/pixel.c:200:13: note: init: stmt relevant? # DEBUG a2 => a2_87
common/pixel.c:200:13: note: init: stmt relevant? a1_88 = t1_79 + t3_85;
common/pixel.c:200:13: note: init: stmt relevant? # DEBUG a1 => a1_88
common/pixel.c:200:13: note: init: stmt relevant? a3_89 = t1_79 - t3_85;
common/pixel.c:200:13: note: init: stmt relevant? # DEBUG a3 => a3_89
common/pixel.c:200:13: note: init: stmt relevant? _90 = ABS_EXPR <a0_86>;
common/pixel.c:200:13: note: init: stmt relevant? _91 = ABS_EXPR <a1_88>;
common/pixel.c:200:13: note: init: stmt relevant? _92 = _90 + _91;
common/pixel.c:200:13: note: init: stmt relevant? _93 = ABS_EXPR <a2_87>;
common/pixel.c:200:13: note: init: stmt relevant? _94 = _92 + _93;
common/pixel.c:200:13: note: init: stmt relevant? _95 = ABS_EXPR <a3_89>;
common/pixel.c:200:13: note: init: stmt relevant? _96 = _94 + _95;
common/pixel.c:200:13: note: init: stmt relevant? i_satd_97 = _96 + i_satd_119;
common/pixel.c:200:13: note: vec_stmt_relevant_p: used out of loop.
common/pixel.c:200:13: note: mark relevant 0, live 1.
common/pixel.c:200:13: note: init: stmt relevant? # DEBUG i_satd => i_satd_97
common/pixel.c:200:13: note: init: stmt relevant? i_98 = i_121 + 1;
common/pixel.c:200:13: note: init: stmt relevant? # DEBUG i => i_98
common/pixel.c:200:13: note: init: stmt relevant? # DEBUG i => i_98
common/pixel.c:200:13: note: init: stmt relevant? # DEBUG i_satd => i_satd_97
common/pixel.c:200:13: note: init: stmt relevant? ivtmp_289 = ivtmp_12 - 1;
common/pixel.c:200:13: note: init: stmt relevant? if (ivtmp_289 != 0)
common/pixel.c:200:13: note: worklist: examine stmt: i_satd_97 = _96 + i_satd_119;
common/pixel.c:200:13: note: vect_is_simple_use: operand _96
common/pixel.c:200:13: note: def_stmt: _96 = _94 + _95;
common/pixel.c:200:13: note: type of def: 3.
common/pixel.c:200:13: note: mark relevant 3, live 0.
common/pixel.c:200:13: note: vect_is_simple_use: operand i_satd_119
common/pixel.c:200:13: note: def_stmt: i_satd_119 = PHI <i_satd_22(8), i_satd_97(10)>
common/pixel.c:200:13: note: type of def: 5.
common/pixel.c:200:13: note: mark relevant 3, live 0.
common/pixel.c:200:13: note: worklist: examine stmt: i_satd_119 = PHI <i_satd_22(8), i_satd_97(10)>
common/pixel.c:200:13: note: vect_is_simple_use: operand i_satd_22
common/pixel.c:200:13: note: def_stmt: i_satd_22 = PHI <i_satd_63(17), i_satd_287(4)>
common/pixel.c:200:13: note: type of def: 2.
common/pixel.c:200:13: note: def_stmt is out of loop.
common/pixel.c:200:13: note: vect_is_simple_use: operand i_satd_97
common/pixel.c:200:13: note: def_stmt: i_satd_97 = _96 + i_satd_119;
common/pixel.c:200:13: note: type of def: 5.
common/pixel.c:200:13: note: reduc-stmt defining reduc-phi in the same nest.
common/pixel.c:200:13: note: worklist: examine stmt: _96 = _94 + _95;
common/pixel.c:200:13: note: vect_is_simple_use: operand _94
common/pixel.c:200:13: note: def_stmt: _94 = _92 + _93;
common/pixel.c:200:13: note: type of def: 3.
common/pixel.c:200:13: note: mark relevant 3, live 0.
common/pixel.c:200:13: note: vect_is_simple_use: operand _95
common/pixel.c:200:13: note: def_stmt: _95 = ABS_EXPR <a3_89>;
common/pixel.c:200:13: note: type of def: 3.
common/pixel.c:200:13: note: mark relevant 3, live 0.
common/pixel.c:200:13: note: worklist: examine stmt: _95 = ABS_EXPR <a3_89>;
common/pixel.c:200:13: note: vect_is_simple_use: operand a3_89
common/pixel.c:200:13: note: def_stmt: a3_89 = t1_79 - t3_85;
common/pixel.c:200:13: note: type of def: 3.
common/pixel.c:200:13: note: mark relevant 3, live 0.
common/pixel.c:200:13: note: worklist: examine stmt: a3_89 = t1_79 - t3_85;
common/pixel.c:200:13: note: vect_is_simple_use: operand t1_79
common/pixel.c:200:13: note: def_stmt: t1_79 = _75 - _77;
common/pixel.c:200:13: note: type of def: 3.
common/pixel.c:200:13: note: mark relevant 3, live 0.
common/pixel.c:200:13: note: vect_is_simple_use: operand t3_85
common/pixel.c:200:13: note: def_stmt: t3_85 = _81 - _83;
common/pixel.c:200:13: note: type of def: 3.
common/pixel.c:200:13: note: mark relevant 3, live 0.
common/pixel.c:200:13: note: worklist: examine stmt: t3_85 = _81 - _83;
common/pixel.c:200:13: note: vect_is_simple_use: operand _81
common/pixel.c:200:13: note: def_stmt: _81 = (int) _80;
common/pixel.c:200:13: note: type of def: 3.
common/pixel.c:200:13: note: mark relevant 3, live 0.
common/pixel.c:200:13: note: vect_is_simple_use: operand _83
common/pixel.c:200:13: note: def_stmt: _83 = (int) _82;
common/pixel.c:200:13: note: type of def: 3.
common/pixel.c:200:13: note: mark relevant 3, live 0.
common/pixel.c:200:13: note: worklist: examine stmt: _83 = (int) _82;
common/pixel.c:200:13: note: vect_is_simple_use: operand _82
common/pixel.c:200:13: note: def_stmt: _82 = tmp[3][i_121];
common/pixel.c:200:13: note: type of def: 3.
common/pixel.c:200:13: note: mark relevant 3, live 0.
common/pixel.c:200:13: note: worklist: examine stmt: _82 = tmp[3][i_121];
common/pixel.c:200:13: note: worklist: examine stmt: _81 = (int) _80;
common/pixel.c:200:13: note: vect_is_simple_use: operand _80
common/pixel.c:200:13: note: def_stmt: _80 = tmp[2][i_121];
common/pixel.c:200:13: note: type of def: 3.
common/pixel.c:200:13: note: mark relevant 3, live 0.
common/pixel.c:200:13: note: worklist: examine stmt: _80 = tmp[2][i_121];
common/pixel.c:200:13: note: worklist: examine stmt: t1_79 = _75 - _77;
common/pixel.c:200:13: note: vect_is_simple_use: operand _75
common/pixel.c:200:13: note: def_stmt: _75 = (int) _74;
common/pixel.c:200:13: note: type of def: 3.
common/pixel.c:200:13: note: mark relevant 3, live 0.
common/pixel.c:200:13: note: vect_is_simple_use: operand _77
common/pixel.c:200:13: note: def_stmt: _77 = (int) _76;
common/pixel.c:200:13: note: type of def: 3.
common/pixel.c:200:13: note: mark relevant 3, live 0.
common/pixel.c:200:13: note: worklist: examine stmt: _77 = (int) _76;
common/pixel.c:200:13: note: vect_is_simple_use: operand _76
common/pixel.c:200:13: note: def_stmt: _76 = tmp[1][i_121];
common/pixel.c:200:13: note: type of def: 3.
common/pixel.c:200:13: note: mark relevant 3, live 0.
common/pixel.c:200:13: note: worklist: examine stmt: _76 = tmp[1][i_121];
common/pixel.c:200:13: note: worklist: examine stmt: _75 = (int) _74;
common/pixel.c:200:13: note: vect_is_simple_use: operand _74
common/pixel.c:200:13: note: def_stmt: _74 = tmp[0][i_121];
common/pixel.c:200:13: note: type of def: 3.
common/pixel.c:200:13: note: mark relevant 3, live 0.
common/pixel.c:200:13: note: worklist: examine stmt: _74 = tmp[0][i_121];
common/pixel.c:200:13: note: worklist: examine stmt: _94 = _92 + _93;
common/pixel.c:200:13: note: vect_is_simple_use: operand _92
common/pixel.c:200:13: note: def_stmt: _92 = _90 + _91;
common/pixel.c:200:13: note: type of def: 3.
common/pixel.c:200:13: note: mark relevant 3, live 0.
common/pixel.c:200:13: note: vect_is_simple_use: operand _93
common/pixel.c:200:13: note: def_stmt: _93 = ABS_EXPR <a2_87>;
common/pixel.c:200:13: note: type of def: 3.
common/pixel.c:200:13: note: mark relevant 3, live 0.
common/pixel.c:200:13: note: worklist: examine stmt: _93 = ABS_EXPR <a2_87>;
common/pixel.c:200:13: note: vect_is_simple_use: operand a2_87
common/pixel.c:200:13: note: def_stmt: a2_87 = t0_78 - t2_84;
common/pixel.c:200:13: note: type of def: 3.
common/pixel.c:200:13: note: mark relevant 3, live 0.
common/pixel.c:200:13: note: worklist: examine stmt: a2_87 = t0_78 - t2_84;
common/pixel.c:200:13: note: vect_is_simple_use: operand t0_78
common/pixel.c:200:13: note: def_stmt: t0_78 = _75 + _77;
common/pixel.c:200:13: note: type of def: 3.
common/pixel.c:200:13: note: mark relevant 3, live 0.
common/pixel.c:200:13: note: vect_is_simple_use: operand t2_84
common/pixel.c:200:13: note: def_stmt: t2_84 = _81 + _83;
common/pixel.c:200:13: note: type of def: 3.
common/pixel.c:200:13: note: mark relevant 3, live 0.
common/pixel.c:200:13: note: worklist: examine stmt: t2_84 = _81 + _83;
common/pixel.c:200:13: note: vect_is_simple_use: operand _81
common/pixel.c:200:13: note: def_stmt: _81 = (int) _80;
common/pixel.c:200:13: note: type of def: 3.
common/pixel.c:200:13: note: mark relevant 3, live 0.
common/pixel.c:200:13: note: already marked relevant/live.
common/pixel.c:200:13: note: vect_is_simple_use: operand _83
common/pixel.c:200:13: note: def_stmt: _83 = (int) _82;
common/pixel.c:200:13: note: type of def: 3.
common/pixel.c:200:13: note: mark relevant 3, live 0.
common/pixel.c:200:13: note: already marked relevant/live.
common/pixel.c:200:13: note: worklist: examine stmt: t0_78 = _75 + _77;
common/pixel.c:200:13: note: vect_is_simple_use: operand _75
common/pixel.c:200:13: note: def_stmt: _75 = (int) _74;
common/pixel.c:200:13: note: type of def: 3.
common/pixel.c:200:13: note: mark relevant 3, live 0.
common/pixel.c:200:13: note: already marked relevant/live.
common/pixel.c:200:13: note: vect_is_simple_use: operand _77
common/pixel.c:200:13: note: def_stmt: _77 = (int) _76;
common/pixel.c:200:13: note: type of def: 3.
common/pixel.c:200:13: note: mark relevant 3, live 0.
common/pixel.c:200:13: note: already marked relevant/live.
common/pixel.c:200:13: note: worklist: examine stmt: _92 = _90 + _91;
common/pixel.c:200:13: note: vect_is_simple_use: operand _90
common/pixel.c:200:13: note: def_stmt: _90 = ABS_EXPR <a0_86>;
common/pixel.c:200:13: note: type of def: 3.
common/pixel.c:200:13: note: mark relevant 3, live 0.
common/pixel.c:200:13: note: vect_is_simple_use: operand _91
common/pixel.c:200:13: note: def_stmt: _91 = ABS_EXPR <a1_88>;
common/pixel.c:200:13: note: type of def: 3.
common/pixel.c:200:13: note: mark relevant 3, live 0.
common/pixel.c:200:13: note: worklist: examine stmt: _91 = ABS_EXPR <a1_88>;
common/pixel.c:200:13: note: vect_is_simple_use: operand a1_88
common/pixel.c:200:13: note: def_stmt: a1_88 = t1_79 + t3_85;
common/pixel.c:200:13: note: type of def: 3.
common/pixel.c:200:13: note: mark relevant 3, live 0.
common/pixel.c:200:13: note: worklist: examine stmt: a1_88 = t1_79 + t3_85;
common/pixel.c:200:13: note: vect_is_simple_use: operand t1_79
common/pixel.c:200:13: note: def_stmt: t1_79 = _75 - _77;
common/pixel.c:200:13: note: type of def: 3.
common/pixel.c:200:13: note: mark relevant 3, live 0.
common/pixel.c:200:13: note: already marked relevant/live.
common/pixel.c:200:13: note: vect_is_simple_use: operand t3_85
common/pixel.c:200:13: note: def_stmt: t3_85 = _81 - _83;
common/pixel.c:200:13: note: type of def: 3.
common/pixel.c:200:13: note: mark relevant 3, live 0.
common/pixel.c:200:13: note: already marked relevant/live.
common/pixel.c:200:13: note: worklist: examine stmt: _90 = ABS_EXPR <a0_86>;
common/pixel.c:200:13: note: vect_is_simple_use: operand a0_86
common/pixel.c:200:13: note: def_stmt: a0_86 = t0_78 + t2_84;
common/pixel.c:200:13: note: type of def: 3.
common/pixel.c:200:13: note: mark relevant 3, live 0.
common/pixel.c:200:13: note: worklist: examine stmt: a0_86 = t0_78 + t2_84;
common/pixel.c:200:13: note: vect_is_simple_use: operand t0_78
common/pixel.c:200:13: note: def_stmt: t0_78 = _75 + _77;
common/pixel.c:200:13: note: type of def: 3.
common/pixel.c:200:13: note: mark relevant 3, live 0.
common/pixel.c:200:13: note: already marked relevant/live.
common/pixel.c:200:13: note: vect_is_simple_use: operand t2_84
common/pixel.c:200:13: note: def_stmt: t2_84 = _81 + _83;
common/pixel.c:200:13: note: type of def: 3.
common/pixel.c:200:13: note: mark relevant 3, live 0.
common/pixel.c:200:13: note: already marked relevant/live.
common/pixel.c:200:13: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _74 = tmp[0][i_121];
  stmt_b: _76 = tmp[1][i_121];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_4)
  (chrec_b = {0, +, 1}_4)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 1)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _74 = tmp[0][i_121];
  stmt_b: _80 = tmp[2][i_121];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_4)
  (chrec_b = {0, +, 1}_4)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _74 = tmp[0][i_121];
  stmt_b: _82 = tmp[3][i_121];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_4)
  (chrec_b = {0, +, 1}_4)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _76 = tmp[1][i_121];
  stmt_b: _80 = tmp[2][i_121];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_4)
  (chrec_b = {0, +, 1}_4)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _76 = tmp[1][i_121];
  stmt_b: _82 = tmp[3][i_121];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_4)
  (chrec_b = {0, +, 1}_4)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _80 = tmp[2][i_121];
  stmt_b: _82 = tmp[3][i_121];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_4)
  (chrec_b = {0, +, 1}_4)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _74 = tmp[0][i_121];
  stmt_b: _74 = tmp[0][i_121];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_4)
  (chrec_b = {0, +, 1}_4)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 0)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _76 = tmp[1][i_121];
  stmt_b: _76 = tmp[1][i_121];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_4)
  (chrec_b = {0, +, 1}_4)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _80 = tmp[2][i_121];
  stmt_b: _80 = tmp[2][i_121];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_4)
  (chrec_b = {0, +, 1}_4)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _82 = tmp[3][i_121];
  stmt_b: _82 = tmp[3][i_121];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_4)
  (chrec_b = {0, +, 1}_4)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/pixel.c:200:13: note: === vect_determine_vectorization_factor ===
common/pixel.c:200:13: note: ==> examining phi: i_satd_119 = PHI <i_satd_22(8), i_satd_97(10)>

common/pixel.c:200:13: note: get vectype for scalar type:  int
common/pixel.c:200:13: note: vectype: vector(4) int
common/pixel.c:200:13: note: nunits = 4
common/pixel.c:200:13: note: ==> examining phi: i_121 = PHI <0(8), i_98(10)>

common/pixel.c:200:13: note: ==> examining phi: ivtmp_12 = PHI <4(8), ivtmp_289(10)>

common/pixel.c:200:13: note: ==> examining statement: # DEBUG i => i_121

common/pixel.c:200:13: note: skip.
common/pixel.c:200:13: note: ==> examining statement: # DEBUG i_satd => i_satd_119

common/pixel.c:200:13: note: skip.
common/pixel.c:200:13: note: ==> examining statement: _74 = tmp[0][i_121];

common/pixel.c:200:13: note: get vectype for scalar type:  short int
common/pixel.c:200:13: note: vectype: vector(8) short int
common/pixel.c:200:13: note: nunits = 8
common/pixel.c:200:13: note: ==> examining statement: _75 = (int) _74;

common/pixel.c:200:13: note: get vectype for scalar type:  int
common/pixel.c:200:13: note: vectype: vector(4) int
common/pixel.c:200:13: note: get vectype for scalar type:  short int
common/pixel.c:200:13: note: vectype: vector(8) short int
common/pixel.c:200:13: note: nunits = 8
common/pixel.c:200:13: note: ==> examining statement: _76 = tmp[1][i_121];

common/pixel.c:200:13: note: get vectype for scalar type:  short int
common/pixel.c:200:13: note: vectype: vector(8) short int
common/pixel.c:200:13: note: nunits = 8
common/pixel.c:200:13: note: ==> examining statement: _77 = (int) _76;

common/pixel.c:200:13: note: get vectype for scalar type:  int
common/pixel.c:200:13: note: vectype: vector(4) int
common/pixel.c:200:13: note: get vectype for scalar type:  short int
common/pixel.c:200:13: note: vectype: vector(8) short int
common/pixel.c:200:13: note: nunits = 8
common/pixel.c:200:13: note: ==> examining statement: t0_78 = _75 + _77;

common/pixel.c:200:13: note: get vectype for scalar type:  int
common/pixel.c:200:13: note: vectype: vector(4) int
common/pixel.c:200:13: note: get vectype for scalar type:  int
common/pixel.c:200:13: note: vectype: vector(4) int
common/pixel.c:200:13: note: nunits = 4
common/pixel.c:200:13: note: ==> examining statement: # DEBUG t0 => t0_78

common/pixel.c:200:13: note: skip.
common/pixel.c:200:13: note: ==> examining statement: t1_79 = _75 - _77;

common/pixel.c:200:13: note: get vectype for scalar type:  int
common/pixel.c:200:13: note: vectype: vector(4) int
common/pixel.c:200:13: note: get vectype for scalar type:  int
common/pixel.c:200:13: note: vectype: vector(4) int
common/pixel.c:200:13: note: nunits = 4
common/pixel.c:200:13: note: ==> examining statement: # DEBUG t1 => t1_79

common/pixel.c:200:13: note: skip.
common/pixel.c:200:13: note: ==> examining statement: _80 = tmp[2][i_121];

common/pixel.c:200:13: note: get vectype for scalar type:  short int
common/pixel.c:200:13: note: vectype: vector(8) short int
common/pixel.c:200:13: note: nunits = 8
common/pixel.c:200:13: note: ==> examining statement: _81 = (int) _80;

common/pixel.c:200:13: note: get vectype for scalar type:  int
common/pixel.c:200:13: note: vectype: vector(4) int
common/pixel.c:200:13: note: get vectype for scalar type:  short int
common/pixel.c:200:13: note: vectype: vector(8) short int
common/pixel.c:200:13: note: nunits = 8
common/pixel.c:200:13: note: ==> examining statement: _82 = tmp[3][i_121];

common/pixel.c:200:13: note: get vectype for scalar type:  short int
common/pixel.c:200:13: note: vectype: vector(8) short int
common/pixel.c:200:13: note: nunits = 8
common/pixel.c:200:13: note: ==> examining statement: _83 = (int) _82;

common/pixel.c:200:13: note: get vectype for scalar type:  int
common/pixel.c:200:13: note: vectype: vector(4) int
common/pixel.c:200:13: note: get vectype for scalar type:  short int
common/pixel.c:200:13: note: vectype: vector(8) short int
common/pixel.c:200:13: note: nunits = 8
common/pixel.c:200:13: note: ==> examining statement: t2_84 = _81 + _83;

common/pixel.c:200:13: note: get vectype for scalar type:  int
common/pixel.c:200:13: note: vectype: vector(4) int
common/pixel.c:200:13: note: get vectype for scalar type:  int
common/pixel.c:200:13: note: vectype: vector(4) int
common/pixel.c:200:13: note: nunits = 4
common/pixel.c:200:13: note: ==> examining statement: # DEBUG t2 => t2_84

common/pixel.c:200:13: note: skip.
common/pixel.c:200:13: note: ==> examining statement: t3_85 = _81 - _83;

common/pixel.c:200:13: note: get vectype for scalar type:  int
common/pixel.c:200:13: note: vectype: vector(4) int
common/pixel.c:200:13: note: get vectype for scalar type:  int
common/pixel.c:200:13: note: vectype: vector(4) int
common/pixel.c:200:13: note: nunits = 4
common/pixel.c:200:13: note: ==> examining statement: # DEBUG t3 => t3_85

common/pixel.c:200:13: note: skip.
common/pixel.c:200:13: note: ==> examining statement: a0_86 = t0_78 + t2_84;

common/pixel.c:200:13: note: get vectype for scalar type:  int
common/pixel.c:200:13: note: vectype: vector(4) int
common/pixel.c:200:13: note: get vectype for scalar type:  int
common/pixel.c:200:13: note: vectype: vector(4) int
common/pixel.c:200:13: note: nunits = 4
common/pixel.c:200:13: note: ==> examining statement: # DEBUG a0 => a0_86

common/pixel.c:200:13: note: skip.
common/pixel.c:200:13: note: ==> examining statement: a2_87 = t0_78 - t2_84;

common/pixel.c:200:13: note: get vectype for scalar type:  int
common/pixel.c:200:13: note: vectype: vector(4) int
common/pixel.c:200:13: note: get vectype for scalar type:  int
common/pixel.c:200:13: note: vectype: vector(4) int
common/pixel.c:200:13: note: nunits = 4
common/pixel.c:200:13: note: ==> examining statement: # DEBUG a2 => a2_87

common/pixel.c:200:13: note: skip.
common/pixel.c:200:13: note: ==> examining statement: a1_88 = t1_79 + t3_85;

common/pixel.c:200:13: note: get vectype for scalar type:  int
common/pixel.c:200:13: note: vectype: vector(4) int
common/pixel.c:200:13: note: get vectype for scalar type:  int
common/pixel.c:200:13: note: vectype: vector(4) int
common/pixel.c:200:13: note: nunits = 4
common/pixel.c:200:13: note: ==> examining statement: # DEBUG a1 => a1_88

common/pixel.c:200:13: note: skip.
common/pixel.c:200:13: note: ==> examining statement: a3_89 = t1_79 - t3_85;

common/pixel.c:200:13: note: get vectype for scalar type:  int
common/pixel.c:200:13: note: vectype: vector(4) int
common/pixel.c:200:13: note: get vectype for scalar type:  int
common/pixel.c:200:13: note: vectype: vector(4) int
common/pixel.c:200:13: note: nunits = 4
common/pixel.c:200:13: note: ==> examining statement: # DEBUG a3 => a3_89

common/pixel.c:200:13: note: skip.
common/pixel.c:200:13: note: ==> examining statement: _90 = ABS_EXPR <a0_86>;

common/pixel.c:200:13: note: get vectype for scalar type:  int
common/pixel.c:200:13: note: vectype: vector(4) int
common/pixel.c:200:13: note: get vectype for scalar type:  int
common/pixel.c:200:13: note: vectype: vector(4) int
common/pixel.c:200:13: note: nunits = 4
common/pixel.c:200:13: note: ==> examining statement: _91 = ABS_EXPR <a1_88>;

common/pixel.c:200:13: note: get vectype for scalar type:  int
common/pixel.c:200:13: note: vectype: vector(4) int
common/pixel.c:200:13: note: get vectype for scalar type:  int
common/pixel.c:200:13: note: vectype: vector(4) int
common/pixel.c:200:13: note: nunits = 4
common/pixel.c:200:13: note: ==> examining statement: _92 = _90 + _91;

common/pixel.c:200:13: note: get vectype for scalar type:  int
common/pixel.c:200:13: note: vectype: vector(4) int
common/pixel.c:200:13: note: get vectype for scalar type:  int
common/pixel.c:200:13: note: vectype: vector(4) int
common/pixel.c:200:13: note: nunits = 4
common/pixel.c:200:13: note: ==> examining statement: _93 = ABS_EXPR <a2_87>;

common/pixel.c:200:13: note: get vectype for scalar type:  int
common/pixel.c:200:13: note: vectype: vector(4) int
common/pixel.c:200:13: note: get vectype for scalar type:  int
common/pixel.c:200:13: note: vectype: vector(4) int
common/pixel.c:200:13: note: nunits = 4
common/pixel.c:200:13: note: ==> examining statement: _94 = _92 + _93;

common/pixel.c:200:13: note: get vectype for scalar type:  int
common/pixel.c:200:13: note: vectype: vector(4) int
common/pixel.c:200:13: note: get vectype for scalar type:  int
common/pixel.c:200:13: note: vectype: vector(4) int
common/pixel.c:200:13: note: nunits = 4
common/pixel.c:200:13: note: ==> examining statement: _95 = ABS_EXPR <a3_89>;

common/pixel.c:200:13: note: get vectype for scalar type:  int
common/pixel.c:200:13: note: vectype: vector(4) int
common/pixel.c:200:13: note: get vectype for scalar type:  int
common/pixel.c:200:13: note: vectype: vector(4) int
common/pixel.c:200:13: note: nunits = 4
common/pixel.c:200:13: note: ==> examining statement: _96 = _94 + _95;

common/pixel.c:200:13: note: get vectype for scalar type:  int
common/pixel.c:200:13: note: vectype: vector(4) int
common/pixel.c:200:13: note: get vectype for scalar type:  int
common/pixel.c:200:13: note: vectype: vector(4) int
common/pixel.c:200:13: note: nunits = 4
common/pixel.c:200:13: note: ==> examining statement: i_satd_97 = _96 + i_satd_119;

common/pixel.c:200:13: note: get vectype for scalar type:  int
common/pixel.c:200:13: note: vectype: vector(4) int
common/pixel.c:200:13: note: get vectype for scalar type:  int
common/pixel.c:200:13: note: vectype: vector(4) int
common/pixel.c:200:13: note: nunits = 4
common/pixel.c:200:13: note: ==> examining statement: # DEBUG i_satd => i_satd_97

common/pixel.c:200:13: note: skip.
common/pixel.c:200:13: note: ==> examining statement: i_98 = i_121 + 1;

common/pixel.c:200:13: note: skip.
common/pixel.c:200:13: note: ==> examining statement: # DEBUG i => i_98

common/pixel.c:200:13: note: skip.
common/pixel.c:200:13: note: ==> examining statement: # DEBUG i => i_98

common/pixel.c:200:13: note: skip.
common/pixel.c:200:13: note: ==> examining statement: # DEBUG i_satd => i_satd_97

common/pixel.c:200:13: note: skip.
common/pixel.c:200:13: note: ==> examining statement: ivtmp_289 = ivtmp_12 - 1;

common/pixel.c:200:13: note: skip.
common/pixel.c:200:13: note: ==> examining statement: if (ivtmp_289 != 0)

common/pixel.c:200:13: note: skip.
common/pixel.c:200:13: note: vectorization factor = 8
common/pixel.c:200:13: note: === vect_analyze_data_refs_alignment ===
common/pixel.c:200:13: note: vect_compute_data_ref_alignment:
common/pixel.c:200:13: note: misalign = 0 bytes of ref tmp[0][i_121]
common/pixel.c:200:13: note: vect_compute_data_ref_alignment:
common/pixel.c:200:13: note: misalign = 8 bytes of ref tmp[1][i_121]
common/pixel.c:200:13: note: vect_compute_data_ref_alignment:
common/pixel.c:200:13: note: misalign = 0 bytes of ref tmp[2][i_121]
common/pixel.c:200:13: note: vect_compute_data_ref_alignment:
common/pixel.c:200:13: note: misalign = 8 bytes of ref tmp[3][i_121]
common/pixel.c:200:13: note: === vect_prune_runtime_alias_test_list ===
common/pixel.c:200:13: note: === vect_enhance_data_refs_alignment ===
common/pixel.c:200:13: note: data size =2. misalignment = 8.
common/pixel.c:200:13: note: data size =2. misalignment = 8.
common/pixel.c:200:13: note: vect_can_advance_ivs_p:
common/pixel.c:200:13: note: Analyze phi: i_satd_119 = PHI <i_satd_22(8), i_satd_97(10)>

common/pixel.c:200:13: note: reduc phi. skip.
common/pixel.c:200:13: note: Analyze phi: i_121 = PHI <0(8), i_98(10)>

common/pixel.c:200:13: note: Analyze phi: ivtmp_12 = PHI <4(8), ivtmp_289(10)>

common/pixel.c:200:13: note: vect_model_load_cost: aligned.
common/pixel.c:200:13: note: vect_get_data_access_cost: inside_cost = 1, outside_cost = 0.
common/pixel.c:200:13: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:200:13: note: vect_get_data_access_cost: inside_cost = 3, outside_cost = 0.
common/pixel.c:200:13: note: vect_model_load_cost: aligned.
common/pixel.c:200:13: note: vect_get_data_access_cost: inside_cost = 4, outside_cost = 0.
common/pixel.c:200:13: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:200:13: note: vect_get_data_access_cost: inside_cost = 6, outside_cost = 0.
common/pixel.c:200:13: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:200:13: note: vect_get_data_access_cost: inside_cost = 2, outside_cost = 0.
common/pixel.c:200:13: note: vect_model_load_cost: aligned.
common/pixel.c:200:13: note: vect_get_data_access_cost: inside_cost = 3, outside_cost = 0.
common/pixel.c:200:13: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:200:13: note: vect_get_data_access_cost: inside_cost = 5, outside_cost = 0.
common/pixel.c:200:13: note: vect_model_load_cost: aligned.
common/pixel.c:200:13: note: vect_get_data_access_cost: inside_cost = 6, outside_cost = 0.
common/pixel.c:200:13: note: Vectorizing an unaligned access.
common/pixel.c:200:13: note: Vectorizing an unaligned access.
common/pixel.c:200:13: note: === vect_analyze_slp ===
common/pixel.c:200:13: note: === vect_make_slp_decision ===
common/pixel.c:200:13: note: === vect_detect_hybrid_slp ===
common/pixel.c:200:13: note: === vect_analyze_loop_operations ===
common/pixel.c:200:13: note: examining phi: i_satd_119 = PHI <i_satd_22(8), i_satd_97(10)>

common/pixel.c:200:13: note: examining phi: i_121 = PHI <0(8), i_98(10)>

common/pixel.c:200:13: note: examining phi: ivtmp_12 = PHI <4(8), ivtmp_289(10)>

common/pixel.c:200:13: note: ==> examining statement: # DEBUG i => i_121
common/pixel.c:200:13: note: irrelevant.
common/pixel.c:200:13: note: ==> examining statement: # DEBUG i_satd => i_satd_119
common/pixel.c:200:13: note: irrelevant.
common/pixel.c:200:13: note: ==> examining statement: _74 = tmp[0][i_121];
common/pixel.c:200:13: note: num. args = 4 (not unary/binary/ternary op).
common/pixel.c:200:13: note: vect_is_simple_use: operand tmp[0][i_121]
common/pixel.c:200:13: note: not ssa-name.
common/pixel.c:200:13: note: use not simple.
common/pixel.c:200:13: note: vect_model_load_cost: aligned.
common/pixel.c:200:13: note: vect_model_load_cost: inside_cost = 1, prologue_cost = 0 .
common/pixel.c:200:13: note: ==> examining statement: _75 = (int) _74;
common/pixel.c:200:13: note: vect_is_simple_use: operand _74
common/pixel.c:200:13: note: def_stmt: _74 = tmp[0][i_121];
common/pixel.c:200:13: note: type of def: 3.
common/pixel.c:200:13: note: === vectorizable_conversion ===
common/pixel.c:200:13: note: vect_model_promotion_demotion_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:200:13: note: ==> examining statement: _76 = tmp[1][i_121];
common/pixel.c:200:13: note: num. args = 4 (not unary/binary/ternary op).
common/pixel.c:200:13: note: vect_is_simple_use: operand tmp[1][i_121]
common/pixel.c:200:13: note: not ssa-name.
common/pixel.c:200:13: note: use not simple.
common/pixel.c:200:13: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:200:13: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:200:13: note: ==> examining statement: _77 = (int) _76;
common/pixel.c:200:13: note: vect_is_simple_use: operand _76
common/pixel.c:200:13: note: def_stmt: _76 = tmp[1][i_121];
common/pixel.c:200:13: note: type of def: 3.
common/pixel.c:200:13: note: === vectorizable_conversion ===
common/pixel.c:200:13: note: vect_model_promotion_demotion_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:200:13: note: ==> examining statement: t0_78 = _75 + _77;
common/pixel.c:200:13: note: vect_is_simple_use: operand _75
common/pixel.c:200:13: note: def_stmt: _75 = (int) _74;
common/pixel.c:200:13: note: type of def: 3.
common/pixel.c:200:13: note: vect_is_simple_use: operand _77
common/pixel.c:200:13: note: def_stmt: _77 = (int) _76;
common/pixel.c:200:13: note: type of def: 3.
common/pixel.c:200:13: note: === vectorizable_operation ===
common/pixel.c:200:13: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:200:13: note: ==> examining statement: # DEBUG t0 => t0_78
common/pixel.c:200:13: note: irrelevant.
common/pixel.c:200:13: note: ==> examining statement: t1_79 = _75 - _77;
common/pixel.c:200:13: note: vect_is_simple_use: operand _75
common/pixel.c:200:13: note: def_stmt: _75 = (int) _74;
common/pixel.c:200:13: note: type of def: 3.
common/pixel.c:200:13: note: vect_is_simple_use: operand _77
common/pixel.c:200:13: note: def_stmt: _77 = (int) _76;
common/pixel.c:200:13: note: type of def: 3.
common/pixel.c:200:13: note: === vectorizable_operation ===
common/pixel.c:200:13: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:200:13: note: ==> examining statement: # DEBUG t1 => t1_79
common/pixel.c:200:13: note: irrelevant.
common/pixel.c:200:13: note: ==> examining statement: _80 = tmp[2][i_121];
common/pixel.c:200:13: note: num. args = 4 (not unary/binary/ternary op).
common/pixel.c:200:13: note: vect_is_simple_use: operand tmp[2][i_121]
common/pixel.c:200:13: note: not ssa-name.
common/pixel.c:200:13: note: use not simple.
common/pixel.c:200:13: note: vect_model_load_cost: aligned.
common/pixel.c:200:13: note: vect_model_load_cost: inside_cost = 1, prologue_cost = 0 .
common/pixel.c:200:13: note: ==> examining statement: _81 = (int) _80;
common/pixel.c:200:13: note: vect_is_simple_use: operand _80
common/pixel.c:200:13: note: def_stmt: _80 = tmp[2][i_121];
common/pixel.c:200:13: note: type of def: 3.
common/pixel.c:200:13: note: === vectorizable_conversion ===
common/pixel.c:200:13: note: vect_model_promotion_demotion_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:200:13: note: ==> examining statement: _82 = tmp[3][i_121];
common/pixel.c:200:13: note: num. args = 4 (not unary/binary/ternary op).
common/pixel.c:200:13: note: vect_is_simple_use: operand tmp[3][i_121]
common/pixel.c:200:13: note: not ssa-name.
common/pixel.c:200:13: note: use not simple.
common/pixel.c:200:13: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:200:13: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:200:13: note: ==> examining statement: _83 = (int) _82;
common/pixel.c:200:13: note: vect_is_simple_use: operand _82
common/pixel.c:200:13: note: def_stmt: _82 = tmp[3][i_121];
common/pixel.c:200:13: note: type of def: 3.
common/pixel.c:200:13: note: === vectorizable_conversion ===
common/pixel.c:200:13: note: vect_model_promotion_demotion_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:200:13: note: ==> examining statement: t2_84 = _81 + _83;
common/pixel.c:200:13: note: vect_is_simple_use: operand _81
common/pixel.c:200:13: note: def_stmt: _81 = (int) _80;
common/pixel.c:200:13: note: type of def: 3.
common/pixel.c:200:13: note: vect_is_simple_use: operand _83
common/pixel.c:200:13: note: def_stmt: _83 = (int) _82;
common/pixel.c:200:13: note: type of def: 3.
common/pixel.c:200:13: note: === vectorizable_operation ===
common/pixel.c:200:13: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:200:13: note: ==> examining statement: # DEBUG t2 => t2_84
common/pixel.c:200:13: note: irrelevant.
common/pixel.c:200:13: note: ==> examining statement: t3_85 = _81 - _83;
common/pixel.c:200:13: note: vect_is_simple_use: operand _81
common/pixel.c:200:13: note: def_stmt: _81 = (int) _80;
common/pixel.c:200:13: note: type of def: 3.
common/pixel.c:200:13: note: vect_is_simple_use: operand _83
common/pixel.c:200:13: note: def_stmt: _83 = (int) _82;
common/pixel.c:200:13: note: type of def: 3.
common/pixel.c:200:13: note: === vectorizable_operation ===
common/pixel.c:200:13: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:200:13: note: ==> examining statement: # DEBUG t3 => t3_85
common/pixel.c:200:13: note: irrelevant.
common/pixel.c:200:13: note: ==> examining statement: a0_86 = t0_78 + t2_84;
common/pixel.c:200:13: note: vect_is_simple_use: operand t0_78
common/pixel.c:200:13: note: def_stmt: t0_78 = _75 + _77;
common/pixel.c:200:13: note: type of def: 3.
common/pixel.c:200:13: note: vect_is_simple_use: operand t2_84
common/pixel.c:200:13: note: def_stmt: t2_84 = _81 + _83;
common/pixel.c:200:13: note: type of def: 3.
common/pixel.c:200:13: note: === vectorizable_operation ===
common/pixel.c:200:13: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:200:13: note: ==> examining statement: # DEBUG a0 => a0_86
common/pixel.c:200:13: note: irrelevant.
common/pixel.c:200:13: note: ==> examining statement: a2_87 = t0_78 - t2_84;
common/pixel.c:200:13: note: vect_is_simple_use: operand t0_78
common/pixel.c:200:13: note: def_stmt: t0_78 = _75 + _77;
common/pixel.c:200:13: note: type of def: 3.
common/pixel.c:200:13: note: vect_is_simple_use: operand t2_84
common/pixel.c:200:13: note: def_stmt: t2_84 = _81 + _83;
common/pixel.c:200:13: note: type of def: 3.
common/pixel.c:200:13: note: === vectorizable_operation ===
common/pixel.c:200:13: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:200:13: note: ==> examining statement: # DEBUG a2 => a2_87
common/pixel.c:200:13: note: irrelevant.
common/pixel.c:200:13: note: ==> examining statement: a1_88 = t1_79 + t3_85;
common/pixel.c:200:13: note: vect_is_simple_use: operand t1_79
common/pixel.c:200:13: note: def_stmt: t1_79 = _75 - _77;
common/pixel.c:200:13: note: type of def: 3.
common/pixel.c:200:13: note: vect_is_simple_use: operand t3_85
common/pixel.c:200:13: note: def_stmt: t3_85 = _81 - _83;
common/pixel.c:200:13: note: type of def: 3.
common/pixel.c:200:13: note: === vectorizable_operation ===
common/pixel.c:200:13: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:200:13: note: ==> examining statement: # DEBUG a1 => a1_88
common/pixel.c:200:13: note: irrelevant.
common/pixel.c:200:13: note: ==> examining statement: a3_89 = t1_79 - t3_85;
common/pixel.c:200:13: note: vect_is_simple_use: operand t1_79
common/pixel.c:200:13: note: def_stmt: t1_79 = _75 - _77;
common/pixel.c:200:13: note: type of def: 3.
common/pixel.c:200:13: note: vect_is_simple_use: operand t3_85
common/pixel.c:200:13: note: def_stmt: t3_85 = _81 - _83;
common/pixel.c:200:13: note: type of def: 3.
common/pixel.c:200:13: note: === vectorizable_operation ===
common/pixel.c:200:13: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:200:13: note: ==> examining statement: # DEBUG a3 => a3_89
common/pixel.c:200:13: note: irrelevant.
common/pixel.c:200:13: note: ==> examining statement: _90 = ABS_EXPR <a0_86>;
common/pixel.c:200:13: note: vect_is_simple_use: operand a0_86
common/pixel.c:200:13: note: def_stmt: a0_86 = t0_78 + t2_84;
common/pixel.c:200:13: note: type of def: 3.
common/pixel.c:200:13: note: === vectorizable_operation ===
common/pixel.c:200:13: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:200:13: note: ==> examining statement: _91 = ABS_EXPR <a1_88>;
common/pixel.c:200:13: note: vect_is_simple_use: operand a1_88
common/pixel.c:200:13: note: def_stmt: a1_88 = t1_79 + t3_85;
common/pixel.c:200:13: note: type of def: 3.
common/pixel.c:200:13: note: === vectorizable_operation ===
common/pixel.c:200:13: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:200:13: note: ==> examining statement: _92 = _90 + _91;
common/pixel.c:200:13: note: vect_is_simple_use: operand _90
common/pixel.c:200:13: note: def_stmt: _90 = ABS_EXPR <a0_86>;
common/pixel.c:200:13: note: type of def: 3.
common/pixel.c:200:13: note: vect_is_simple_use: operand _91
common/pixel.c:200:13: note: def_stmt: _91 = ABS_EXPR <a1_88>;
common/pixel.c:200:13: note: type of def: 3.
common/pixel.c:200:13: note: === vectorizable_operation ===
common/pixel.c:200:13: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:200:13: note: ==> examining statement: _93 = ABS_EXPR <a2_87>;
common/pixel.c:200:13: note: vect_is_simple_use: operand a2_87
common/pixel.c:200:13: note: def_stmt: a2_87 = t0_78 - t2_84;
common/pixel.c:200:13: note: type of def: 3.
common/pixel.c:200:13: note: === vectorizable_operation ===
common/pixel.c:200:13: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:200:13: note: ==> examining statement: _94 = _92 + _93;
common/pixel.c:200:13: note: vect_is_simple_use: operand _92
common/pixel.c:200:13: note: def_stmt: _92 = _90 + _91;
common/pixel.c:200:13: note: type of def: 3.
common/pixel.c:200:13: note: vect_is_simple_use: operand _93
common/pixel.c:200:13: note: def_stmt: _93 = ABS_EXPR <a2_87>;
common/pixel.c:200:13: note: type of def: 3.
common/pixel.c:200:13: note: === vectorizable_operation ===
common/pixel.c:200:13: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:200:13: note: ==> examining statement: _95 = ABS_EXPR <a3_89>;
common/pixel.c:200:13: note: vect_is_simple_use: operand a3_89
common/pixel.c:200:13: note: def_stmt: a3_89 = t1_79 - t3_85;
common/pixel.c:200:13: note: type of def: 3.
common/pixel.c:200:13: note: === vectorizable_operation ===
common/pixel.c:200:13: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:200:13: note: ==> examining statement: _96 = _94 + _95;
common/pixel.c:200:13: note: vect_is_simple_use: operand _94
common/pixel.c:200:13: note: def_stmt: _94 = _92 + _93;
common/pixel.c:200:13: note: type of def: 3.
common/pixel.c:200:13: note: vect_is_simple_use: operand _95
common/pixel.c:200:13: note: def_stmt: _95 = ABS_EXPR <a3_89>;
common/pixel.c:200:13: note: type of def: 3.
common/pixel.c:200:13: note: === vectorizable_operation ===
common/pixel.c:200:13: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:200:13: note: ==> examining statement: i_satd_97 = _96 + i_satd_119;
common/pixel.c:200:13: note: vect_is_simple_use: operand _96
common/pixel.c:200:13: note: def_stmt: _96 = _94 + _95;
common/pixel.c:200:13: note: type of def: 3.
common/pixel.c:200:13: note: vect_is_simple_use: operand i_satd_119
common/pixel.c:200:13: note: def_stmt: i_satd_119 = PHI <i_satd_22(8), i_satd_97(10)>
common/pixel.c:200:13: note: type of def: 5.
common/pixel.c:200:13: note: detected reduction: i_satd_97 = _96 + i_satd_119;

common/pixel.c:200:13: note: reduc op not supported by target.
vect_model_reduction_cost: inside_cost = 2, prologue_cost = 1, epilogue_cost = 5 .
common/pixel.c:200:13: note: ==> examining statement: # DEBUG i_satd => i_satd_97
common/pixel.c:200:13: note: irrelevant.
common/pixel.c:200:13: note: ==> examining statement: i_98 = i_121 + 1;
common/pixel.c:200:13: note: irrelevant.
common/pixel.c:200:13: note: ==> examining statement: # DEBUG i => i_98
common/pixel.c:200:13: note: irrelevant.
common/pixel.c:200:13: note: ==> examining statement: # DEBUG i => i_98
common/pixel.c:200:13: note: irrelevant.
common/pixel.c:200:13: note: ==> examining statement: # DEBUG i_satd => i_satd_97
common/pixel.c:200:13: note: irrelevant.
common/pixel.c:200:13: note: ==> examining statement: ivtmp_289 = ivtmp_12 - 1;
common/pixel.c:200:13: note: irrelevant.
common/pixel.c:200:13: note: ==> examining statement: if (ivtmp_289 != 0)
common/pixel.c:200:13: note: irrelevant.
common/pixel.c:200:13: note: vectorization_factor = 8, niters = 4
common/pixel.c:200:13: note: not vectorized: iteration count too small.
common/pixel.c:200:13: note: not vectorized: iteration count smaller than vectorization factor.
common/pixel.c:200:13: note: bad operation or unsupported loop bound.

Analyzing loop at common/pixel.c:192
common/pixel.c:192:13: note: ===== analyze_loop_nest =====
common/pixel.c:192:13: note: === vect_analyze_loop_form ===
common/pixel.c:192:13: note: === get_loop_niters ===
Analyzing # of iterations of loop 3
  exit condition [3, + , 4294967295] != 0
  bounds on difference of bases: -3 ... -3
  result:
    # of iterations 3, bounded by 3
common/pixel.c:192:13: note: === vect_analyze_data_refs ===
Creating dr for *p1_122
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: pix1_117 + (sizetype) x_113
	offset from base address: 0
	constant offset from base address: 0
	step: (ssizetype) pretmp_298
	aligned to: 128
	base_object: *pix1_117 + (sizetype) x_113
	Access function 0: {0B, +, pretmp_298}_3
Creating dr for *p2_123
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: pix2_118 + (sizetype) x_113
	offset from base address: 0
	constant offset from base address: 0
	step: (ssizetype) pretmp_299
	aligned to: 128
	base_object: *pix2_118 + (sizetype) x_113
	Access function 0: {0B, +, pretmp_299}_3
Creating dr for MEM[(uint8_t *)p1_122 + 1B]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: pix1_117 + (sizetype) x_113
	offset from base address: 0
	constant offset from base address: 1
	step: (ssizetype) pretmp_298
	aligned to: 128
	base_object: *pix1_117 + (sizetype) x_113
	Access function 0: {1B, +, pretmp_298}_3
Creating dr for MEM[(uint8_t *)p2_123 + 1B]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: pix2_118 + (sizetype) x_113
	offset from base address: 0
	constant offset from base address: 1
	step: (ssizetype) pretmp_299
	aligned to: 128
	base_object: *pix2_118 + (sizetype) x_113
	Access function 0: {1B, +, pretmp_299}_3
Creating dr for MEM[(uint8_t *)p1_122 + 2B]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: pix1_117 + (sizetype) x_113
	offset from base address: 0
	constant offset from base address: 2
	step: (ssizetype) pretmp_298
	aligned to: 128
	base_object: *pix1_117 + (sizetype) x_113
	Access function 0: {2B, +, pretmp_298}_3
Creating dr for MEM[(uint8_t *)p2_123 + 2B]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: pix2_118 + (sizetype) x_113
	offset from base address: 0
	constant offset from base address: 2
	step: (ssizetype) pretmp_299
	aligned to: 128
	base_object: *pix2_118 + (sizetype) x_113
	Access function 0: {2B, +, pretmp_299}_3
Creating dr for MEM[(uint8_t *)p1_122 + 3B]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: pix1_117 + (sizetype) x_113
	offset from base address: 0
	constant offset from base address: 3
	step: (ssizetype) pretmp_298
	aligned to: 128
	base_object: *pix1_117 + (sizetype) x_113
	Access function 0: {3B, +, pretmp_298}_3
Creating dr for MEM[(uint8_t *)p2_123 + 3B]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: pix2_118 + (sizetype) x_113
	offset from base address: 0
	constant offset from base address: 3
	step: (ssizetype) pretmp_299
	aligned to: 128
	base_object: *pix2_118 + (sizetype) x_113
	Access function 0: {3B, +, pretmp_299}_3
Creating dr for tmp[i_120][0]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &tmp
	offset from base address: 0
	constant offset from base address: 0
	step: 8
	aligned to: 128
	base_object: tmp
	Access function 0: 0
	Access function 1: {0, +, 1}_3
Creating dr for tmp[i_120][2]
analyze_innermost: success.
	base_address: &tmp
	offset from base address: 0
	constant offset from base address: 4
	step: 8
	aligned to: 128
	base_object: tmp
	Access function 0: 2
	Access function 1: {0, +, 1}_3
Creating dr for tmp[i_120][1]
analyze_innermost: success.
	base_address: &tmp
	offset from base address: 0
	constant offset from base address: 2
	step: 8
	aligned to: 128
	base_object: tmp
	Access function 0: 1
	Access function 1: {0, +, 1}_3
Creating dr for tmp[i_120][3]
analyze_innermost: success.
	base_address: &tmp
	offset from base address: 0
	constant offset from base address: 6
	step: 8
	aligned to: 128
	base_object: tmp
	Access function 0: 3
	Access function 1: {0, +, 1}_3
common/pixel.c:192:13: note: got vectype for stmt: _24 = *p1_122;
vector(16) unsigned char
common/pixel.c:192:13: note: got vectype for stmt: _26 = *p2_123;
vector(16) unsigned char
common/pixel.c:192:13: note: got vectype for stmt: _29 = MEM[(uint8_t *)p1_122 + 1B];
vector(16) unsigned char
common/pixel.c:192:13: note: got vectype for stmt: _31 = MEM[(uint8_t *)p2_123 + 1B];
vector(16) unsigned char
common/pixel.c:192:13: note: got vectype for stmt: _34 = MEM[(uint8_t *)p1_122 + 2B];
vector(16) unsigned char
common/pixel.c:192:13: note: got vectype for stmt: _36 = MEM[(uint8_t *)p2_123 + 2B];
vector(16) unsigned char
common/pixel.c:192:13: note: got vectype for stmt: _39 = MEM[(uint8_t *)p1_122 + 3B];
vector(16) unsigned char
common/pixel.c:192:13: note: got vectype for stmt: _41 = MEM[(uint8_t *)p2_123 + 3B];
vector(16) unsigned char
common/pixel.c:192:13: note: got vectype for stmt: tmp[i_120][0] = _51;
vector(8) short int
common/pixel.c:192:13: note: got vectype for stmt: tmp[i_120][2] = _55;
vector(8) short int
common/pixel.c:192:13: note: got vectype for stmt: tmp[i_120][1] = _60;
vector(8) short int
common/pixel.c:192:13: note: got vectype for stmt: tmp[i_120][3] = _65;
vector(8) short int
common/pixel.c:192:13: note: === vect_analyze_scalar_cycles ===
common/pixel.c:192:13: note: Analyze phi: i_120 = PHI <i_67(7), 0(5)>

common/pixel.c:192:13: note: Access function of PHI: {0, +, 1}_3
common/pixel.c:192:13: note: step: 1,  init: 0
common/pixel.c:192:13: note: Detected induction.
common/pixel.c:192:13: note: Analyze phi: p1_122 = PHI <p1_70(7), p1_21(5)>

common/pixel.c:192:13: note: Access function of PHI: {p1_21, +, pretmp_298}_3
common/pixel.c:192:13: note: step: pretmp_298,  init: p1_21
common/pixel.c:192:13: note: Detected induction.
common/pixel.c:192:13: note: Analyze phi: p2_123 = PHI <p2_73(7), p2_23(5)>

common/pixel.c:192:13: note: Access function of PHI: {p2_23, +, pretmp_299}_3
common/pixel.c:192:13: note: step: pretmp_299,  init: p2_23
common/pixel.c:192:13: note: Detected induction.
common/pixel.c:192:13: note: Analyze phi: .MEM_124 = PHI <.MEM_66(7), .MEM_125(5)>

common/pixel.c:192:13: note: Analyze phi: ivtmp_288 = PHI <ivtmp_284(7), 4(5)>

common/pixel.c:192:13: note: Access function of PHI: {4, +, 4294967295}_3
common/pixel.c:192:13: note: step: 4294967295,  init: 4
common/pixel.c:192:13: note: Detected induction.
common/pixel.c:192:13: note: === vect_pattern_recog ===
common/pixel.c:192:13: note: === vect_analyze_data_ref_accesses ===
common/pixel.c:192:13: note: Detected interleaving tmp[i_120][0] and tmp[i_120][1]
common/pixel.c:192:13: note: Detected interleaving tmp[i_120][0] and tmp[i_120][2]
common/pixel.c:192:13: note: Detected interleaving tmp[i_120][0] and tmp[i_120][3]
common/pixel.c:192:13: note: Detected interleaving of size 4
common/pixel.c:192:13: note: === vect_mark_stmts_to_be_vectorized ===
common/pixel.c:192:13: note: init: phi relevant? i_120 = PHI <i_67(7), 0(5)>
common/pixel.c:192:13: note: init: phi relevant? p1_122 = PHI <p1_70(7), p1_21(5)>
common/pixel.c:192:13: note: init: phi relevant? p2_123 = PHI <p2_73(7), p2_23(5)>
common/pixel.c:192:13: note: init: phi relevant? .MEM_124 = PHI <.MEM_66(7), .MEM_125(5)>
common/pixel.c:192:13: note: init: phi relevant? ivtmp_288 = PHI <ivtmp_284(7), 4(5)>
common/pixel.c:192:13: note: init: stmt relevant? # DEBUG p2 => p2_123
common/pixel.c:192:13: note: init: stmt relevant? # DEBUG p1 => p1_122
common/pixel.c:192:13: note: init: stmt relevant? # DEBUG i => i_120
common/pixel.c:192:13: note: init: stmt relevant? _24 = *p1_122;
common/pixel.c:192:13: note: init: stmt relevant? _25 = (int) _24;
common/pixel.c:192:13: note: init: stmt relevant? _26 = *p2_123;
common/pixel.c:192:13: note: init: stmt relevant? _27 = (int) _26;
common/pixel.c:192:13: note: init: stmt relevant? a0_28 = _25 - _27;
common/pixel.c:192:13: note: init: stmt relevant? # DEBUG a0 => a0_28
common/pixel.c:192:13: note: init: stmt relevant? _29 = MEM[(uint8_t *)p1_122 + 1B];
common/pixel.c:192:13: note: init: stmt relevant? _30 = (int) _29;
common/pixel.c:192:13: note: init: stmt relevant? _31 = MEM[(uint8_t *)p2_123 + 1B];
common/pixel.c:192:13: note: init: stmt relevant? _32 = (int) _31;
common/pixel.c:192:13: note: init: stmt relevant? a1_33 = _30 - _32;
common/pixel.c:192:13: note: init: stmt relevant? # DEBUG a1 => a1_33
common/pixel.c:192:13: note: init: stmt relevant? _34 = MEM[(uint8_t *)p1_122 + 2B];
common/pixel.c:192:13: note: init: stmt relevant? _35 = (int) _34;
common/pixel.c:192:13: note: init: stmt relevant? _36 = MEM[(uint8_t *)p2_123 + 2B];
common/pixel.c:192:13: note: init: stmt relevant? _37 = (int) _36;
common/pixel.c:192:13: note: init: stmt relevant? a2_38 = _35 - _37;
common/pixel.c:192:13: note: init: stmt relevant? # DEBUG a2 => a2_38
common/pixel.c:192:13: note: init: stmt relevant? _39 = MEM[(uint8_t *)p1_122 + 3B];
common/pixel.c:192:13: note: init: stmt relevant? _40 = (int) _39;
common/pixel.c:192:13: note: init: stmt relevant? _41 = MEM[(uint8_t *)p2_123 + 3B];
common/pixel.c:192:13: note: init: stmt relevant? _42 = (int) _41;
common/pixel.c:192:13: note: init: stmt relevant? a3_43 = _40 - _42;
common/pixel.c:192:13: note: init: stmt relevant? # DEBUG a3 => a3_43
common/pixel.c:192:13: note: init: stmt relevant? t0_44 = a0_28 + a1_33;
common/pixel.c:192:13: note: init: stmt relevant? # DEBUG t0 => t0_44
common/pixel.c:192:13: note: init: stmt relevant? t1_45 = a0_28 - a1_33;
common/pixel.c:192:13: note: init: stmt relevant? # DEBUG t1 => t1_45
common/pixel.c:192:13: note: init: stmt relevant? t2_46 = a2_38 + a3_43;
common/pixel.c:192:13: note: init: stmt relevant? # DEBUG t2 => t2_46
common/pixel.c:192:13: note: init: stmt relevant? t3_47 = a2_38 - a3_43;
common/pixel.c:192:13: note: init: stmt relevant? # DEBUG t3 => t3_47
common/pixel.c:192:13: note: init: stmt relevant? _48 = (unsigned short) t0_44;
common/pixel.c:192:13: note: init: stmt relevant? _49 = (unsigned short) t2_46;
common/pixel.c:192:13: note: init: stmt relevant? _50 = _48 + _49;
common/pixel.c:192:13: note: init: stmt relevant? _51 = (short int) _50;
common/pixel.c:192:13: note: init: stmt relevant? tmp[i_120][0] = _51;
common/pixel.c:192:13: note: vec_stmt_relevant_p: stmt has vdefs.
common/pixel.c:192:13: note: mark relevant 4, live 0.
common/pixel.c:192:13: note: init: stmt relevant? _54 = _48 - _49;
common/pixel.c:192:13: note: init: stmt relevant? _55 = (short int) _54;
common/pixel.c:192:13: note: init: stmt relevant? tmp[i_120][2] = _55;
common/pixel.c:192:13: note: vec_stmt_relevant_p: stmt has vdefs.
common/pixel.c:192:13: note: mark relevant 4, live 0.
common/pixel.c:192:13: note: init: stmt relevant? _57 = (unsigned short) t1_45;
common/pixel.c:192:13: note: init: stmt relevant? _58 = (unsigned short) t3_47;
common/pixel.c:192:13: note: init: stmt relevant? _59 = _57 + _58;
common/pixel.c:192:13: note: init: stmt relevant? _60 = (short int) _59;
common/pixel.c:192:13: note: init: stmt relevant? tmp[i_120][1] = _60;
common/pixel.c:192:13: note: vec_stmt_relevant_p: stmt has vdefs.
common/pixel.c:192:13: note: mark relevant 4, live 0.
common/pixel.c:192:13: note: init: stmt relevant? _64 = _57 - _58;
common/pixel.c:192:13: note: init: stmt relevant? _65 = (short int) _64;
common/pixel.c:192:13: note: init: stmt relevant? tmp[i_120][3] = _65;
common/pixel.c:192:13: note: vec_stmt_relevant_p: stmt has vdefs.
common/pixel.c:192:13: note: mark relevant 4, live 0.
common/pixel.c:192:13: note: init: stmt relevant? i_67 = i_120 + 1;
common/pixel.c:192:13: note: init: stmt relevant? # DEBUG i => i_67
common/pixel.c:192:13: note: init: stmt relevant? p1_70 = p1_122 + pretmp_298;
common/pixel.c:192:13: note: init: stmt relevant? # DEBUG p1 => p1_70
common/pixel.c:192:13: note: init: stmt relevant? p2_73 = p2_123 + pretmp_299;
common/pixel.c:192:13: note: init: stmt relevant? # DEBUG p2 => p2_73
common/pixel.c:192:13: note: init: stmt relevant? # DEBUG p2 => p2_73
common/pixel.c:192:13: note: init: stmt relevant? # DEBUG p1 => p1_70
common/pixel.c:192:13: note: init: stmt relevant? # DEBUG i => i_67
common/pixel.c:192:13: note: init: stmt relevant? ivtmp_284 = ivtmp_288 - 1;
common/pixel.c:192:13: note: init: stmt relevant? if (ivtmp_284 != 0)
common/pixel.c:192:13: note: worklist: examine stmt: tmp[i_120][3] = _65;
common/pixel.c:192:13: note: vect_is_simple_use: operand _65
common/pixel.c:192:13: note: def_stmt: _65 = (short int) _64;
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: mark relevant 4, live 0.
common/pixel.c:192:13: note: worklist: examine stmt: _65 = (short int) _64;
common/pixel.c:192:13: note: vect_is_simple_use: operand _64
common/pixel.c:192:13: note: def_stmt: _64 = _57 - _58;
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: mark relevant 4, live 0.
common/pixel.c:192:13: note: worklist: examine stmt: _64 = _57 - _58;
common/pixel.c:192:13: note: vect_is_simple_use: operand _57
common/pixel.c:192:13: note: def_stmt: _57 = (unsigned short) t1_45;
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: mark relevant 4, live 0.
common/pixel.c:192:13: note: vect_is_simple_use: operand _58
common/pixel.c:192:13: note: def_stmt: _58 = (unsigned short) t3_47;
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: mark relevant 4, live 0.
common/pixel.c:192:13: note: worklist: examine stmt: _58 = (unsigned short) t3_47;
common/pixel.c:192:13: note: vect_is_simple_use: operand t3_47
common/pixel.c:192:13: note: def_stmt: t3_47 = a2_38 - a3_43;
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: mark relevant 4, live 0.
common/pixel.c:192:13: note: worklist: examine stmt: t3_47 = a2_38 - a3_43;
common/pixel.c:192:13: note: vect_is_simple_use: operand a2_38
common/pixel.c:192:13: note: def_stmt: a2_38 = _35 - _37;
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: mark relevant 4, live 0.
common/pixel.c:192:13: note: vect_is_simple_use: operand a3_43
common/pixel.c:192:13: note: def_stmt: a3_43 = _40 - _42;
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: mark relevant 4, live 0.
common/pixel.c:192:13: note: worklist: examine stmt: a3_43 = _40 - _42;
common/pixel.c:192:13: note: vect_is_simple_use: operand _40
common/pixel.c:192:13: note: def_stmt: _40 = (int) _39;
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: mark relevant 4, live 0.
common/pixel.c:192:13: note: vect_is_simple_use: operand _42
common/pixel.c:192:13: note: def_stmt: _42 = (int) _41;
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: mark relevant 4, live 0.
common/pixel.c:192:13: note: worklist: examine stmt: _42 = (int) _41;
common/pixel.c:192:13: note: vect_is_simple_use: operand _41
common/pixel.c:192:13: note: def_stmt: _41 = MEM[(uint8_t *)p2_123 + 3B];
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: mark relevant 4, live 0.
common/pixel.c:192:13: note: worklist: examine stmt: _41 = MEM[(uint8_t *)p2_123 + 3B];
common/pixel.c:192:13: note: worklist: examine stmt: _40 = (int) _39;
common/pixel.c:192:13: note: vect_is_simple_use: operand _39
common/pixel.c:192:13: note: def_stmt: _39 = MEM[(uint8_t *)p1_122 + 3B];
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: mark relevant 4, live 0.
common/pixel.c:192:13: note: worklist: examine stmt: _39 = MEM[(uint8_t *)p1_122 + 3B];
common/pixel.c:192:13: note: worklist: examine stmt: a2_38 = _35 - _37;
common/pixel.c:192:13: note: vect_is_simple_use: operand _35
common/pixel.c:192:13: note: def_stmt: _35 = (int) _34;
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: mark relevant 4, live 0.
common/pixel.c:192:13: note: vect_is_simple_use: operand _37
common/pixel.c:192:13: note: def_stmt: _37 = (int) _36;
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: mark relevant 4, live 0.
common/pixel.c:192:13: note: worklist: examine stmt: _37 = (int) _36;
common/pixel.c:192:13: note: vect_is_simple_use: operand _36
common/pixel.c:192:13: note: def_stmt: _36 = MEM[(uint8_t *)p2_123 + 2B];
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: mark relevant 4, live 0.
common/pixel.c:192:13: note: worklist: examine stmt: _36 = MEM[(uint8_t *)p2_123 + 2B];
common/pixel.c:192:13: note: worklist: examine stmt: _35 = (int) _34;
common/pixel.c:192:13: note: vect_is_simple_use: operand _34
common/pixel.c:192:13: note: def_stmt: _34 = MEM[(uint8_t *)p1_122 + 2B];
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: mark relevant 4, live 0.
common/pixel.c:192:13: note: worklist: examine stmt: _34 = MEM[(uint8_t *)p1_122 + 2B];
common/pixel.c:192:13: note: worklist: examine stmt: _57 = (unsigned short) t1_45;
common/pixel.c:192:13: note: vect_is_simple_use: operand t1_45
common/pixel.c:192:13: note: def_stmt: t1_45 = a0_28 - a1_33;
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: mark relevant 4, live 0.
common/pixel.c:192:13: note: worklist: examine stmt: t1_45 = a0_28 - a1_33;
common/pixel.c:192:13: note: vect_is_simple_use: operand a0_28
common/pixel.c:192:13: note: def_stmt: a0_28 = _25 - _27;
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: mark relevant 4, live 0.
common/pixel.c:192:13: note: vect_is_simple_use: operand a1_33
common/pixel.c:192:13: note: def_stmt: a1_33 = _30 - _32;
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: mark relevant 4, live 0.
common/pixel.c:192:13: note: worklist: examine stmt: a1_33 = _30 - _32;
common/pixel.c:192:13: note: vect_is_simple_use: operand _30
common/pixel.c:192:13: note: def_stmt: _30 = (int) _29;
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: mark relevant 4, live 0.
common/pixel.c:192:13: note: vect_is_simple_use: operand _32
common/pixel.c:192:13: note: def_stmt: _32 = (int) _31;
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: mark relevant 4, live 0.
common/pixel.c:192:13: note: worklist: examine stmt: _32 = (int) _31;
common/pixel.c:192:13: note: vect_is_simple_use: operand _31
common/pixel.c:192:13: note: def_stmt: _31 = MEM[(uint8_t *)p2_123 + 1B];
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: mark relevant 4, live 0.
common/pixel.c:192:13: note: worklist: examine stmt: _31 = MEM[(uint8_t *)p2_123 + 1B];
common/pixel.c:192:13: note: worklist: examine stmt: _30 = (int) _29;
common/pixel.c:192:13: note: vect_is_simple_use: operand _29
common/pixel.c:192:13: note: def_stmt: _29 = MEM[(uint8_t *)p1_122 + 1B];
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: mark relevant 4, live 0.
common/pixel.c:192:13: note: worklist: examine stmt: _29 = MEM[(uint8_t *)p1_122 + 1B];
common/pixel.c:192:13: note: worklist: examine stmt: a0_28 = _25 - _27;
common/pixel.c:192:13: note: vect_is_simple_use: operand _25
common/pixel.c:192:13: note: def_stmt: _25 = (int) _24;
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: mark relevant 4, live 0.
common/pixel.c:192:13: note: vect_is_simple_use: operand _27
common/pixel.c:192:13: note: def_stmt: _27 = (int) _26;
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: mark relevant 4, live 0.
common/pixel.c:192:13: note: worklist: examine stmt: _27 = (int) _26;
common/pixel.c:192:13: note: vect_is_simple_use: operand _26
common/pixel.c:192:13: note: def_stmt: _26 = *p2_123;
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: mark relevant 4, live 0.
common/pixel.c:192:13: note: worklist: examine stmt: _26 = *p2_123;
common/pixel.c:192:13: note: worklist: examine stmt: _25 = (int) _24;
common/pixel.c:192:13: note: vect_is_simple_use: operand _24
common/pixel.c:192:13: note: def_stmt: _24 = *p1_122;
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: mark relevant 4, live 0.
common/pixel.c:192:13: note: worklist: examine stmt: _24 = *p1_122;
common/pixel.c:192:13: note: worklist: examine stmt: tmp[i_120][1] = _60;
common/pixel.c:192:13: note: vect_is_simple_use: operand _60
common/pixel.c:192:13: note: def_stmt: _60 = (short int) _59;
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: mark relevant 4, live 0.
common/pixel.c:192:13: note: worklist: examine stmt: _60 = (short int) _59;
common/pixel.c:192:13: note: vect_is_simple_use: operand _59
common/pixel.c:192:13: note: def_stmt: _59 = _57 + _58;
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: mark relevant 4, live 0.
common/pixel.c:192:13: note: worklist: examine stmt: _59 = _57 + _58;
common/pixel.c:192:13: note: vect_is_simple_use: operand _57
common/pixel.c:192:13: note: def_stmt: _57 = (unsigned short) t1_45;
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: mark relevant 4, live 0.
common/pixel.c:192:13: note: already marked relevant/live.
common/pixel.c:192:13: note: vect_is_simple_use: operand _58
common/pixel.c:192:13: note: def_stmt: _58 = (unsigned short) t3_47;
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: mark relevant 4, live 0.
common/pixel.c:192:13: note: already marked relevant/live.
common/pixel.c:192:13: note: worklist: examine stmt: tmp[i_120][2] = _55;
common/pixel.c:192:13: note: vect_is_simple_use: operand _55
common/pixel.c:192:13: note: def_stmt: _55 = (short int) _54;
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: mark relevant 4, live 0.
common/pixel.c:192:13: note: worklist: examine stmt: _55 = (short int) _54;
common/pixel.c:192:13: note: vect_is_simple_use: operand _54
common/pixel.c:192:13: note: def_stmt: _54 = _48 - _49;
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: mark relevant 4, live 0.
common/pixel.c:192:13: note: worklist: examine stmt: _54 = _48 - _49;
common/pixel.c:192:13: note: vect_is_simple_use: operand _48
common/pixel.c:192:13: note: def_stmt: _48 = (unsigned short) t0_44;
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: mark relevant 4, live 0.
common/pixel.c:192:13: note: vect_is_simple_use: operand _49
common/pixel.c:192:13: note: def_stmt: _49 = (unsigned short) t2_46;
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: mark relevant 4, live 0.
common/pixel.c:192:13: note: worklist: examine stmt: _49 = (unsigned short) t2_46;
common/pixel.c:192:13: note: vect_is_simple_use: operand t2_46
common/pixel.c:192:13: note: def_stmt: t2_46 = a2_38 + a3_43;
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: mark relevant 4, live 0.
common/pixel.c:192:13: note: worklist: examine stmt: t2_46 = a2_38 + a3_43;
common/pixel.c:192:13: note: vect_is_simple_use: operand a2_38
common/pixel.c:192:13: note: def_stmt: a2_38 = _35 - _37;
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: mark relevant 4, live 0.
common/pixel.c:192:13: note: already marked relevant/live.
common/pixel.c:192:13: note: vect_is_simple_use: operand a3_43
common/pixel.c:192:13: note: def_stmt: a3_43 = _40 - _42;
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: mark relevant 4, live 0.
common/pixel.c:192:13: note: already marked relevant/live.
common/pixel.c:192:13: note: worklist: examine stmt: _48 = (unsigned short) t0_44;
common/pixel.c:192:13: note: vect_is_simple_use: operand t0_44
common/pixel.c:192:13: note: def_stmt: t0_44 = a0_28 + a1_33;
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: mark relevant 4, live 0.
common/pixel.c:192:13: note: worklist: examine stmt: t0_44 = a0_28 + a1_33;
common/pixel.c:192:13: note: vect_is_simple_use: operand a0_28
common/pixel.c:192:13: note: def_stmt: a0_28 = _25 - _27;
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: mark relevant 4, live 0.
common/pixel.c:192:13: note: already marked relevant/live.
common/pixel.c:192:13: note: vect_is_simple_use: operand a1_33
common/pixel.c:192:13: note: def_stmt: a1_33 = _30 - _32;
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: mark relevant 4, live 0.
common/pixel.c:192:13: note: already marked relevant/live.
common/pixel.c:192:13: note: worklist: examine stmt: tmp[i_120][0] = _51;
common/pixel.c:192:13: note: vect_is_simple_use: operand _51
common/pixel.c:192:13: note: def_stmt: _51 = (short int) _50;
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: mark relevant 4, live 0.
common/pixel.c:192:13: note: worklist: examine stmt: _51 = (short int) _50;
common/pixel.c:192:13: note: vect_is_simple_use: operand _50
common/pixel.c:192:13: note: def_stmt: _50 = _48 + _49;
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: mark relevant 4, live 0.
common/pixel.c:192:13: note: worklist: examine stmt: _50 = _48 + _49;
common/pixel.c:192:13: note: vect_is_simple_use: operand _48
common/pixel.c:192:13: note: def_stmt: _48 = (unsigned short) t0_44;
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: mark relevant 4, live 0.
common/pixel.c:192:13: note: already marked relevant/live.
common/pixel.c:192:13: note: vect_is_simple_use: operand _49
common/pixel.c:192:13: note: def_stmt: _49 = (unsigned short) t2_46;
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: mark relevant 4, live 0.
common/pixel.c:192:13: note: already marked relevant/live.
common/pixel.c:192:13: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _24 = *p1_122;
  stmt_b: _26 = *p2_123;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _24 = *p1_122;
  stmt_b: _29 = MEM[(uint8_t *)p1_122 + 1B];
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, pretmp_298}_3)
  (chrec_b = {1B, +, pretmp_298}_3)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _24 = *p1_122;
  stmt_b: _31 = MEM[(uint8_t *)p2_123 + 1B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _24 = *p1_122;
  stmt_b: _34 = MEM[(uint8_t *)p1_122 + 2B];
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, pretmp_298}_3)
  (chrec_b = {2B, +, pretmp_298}_3)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _24 = *p1_122;
  stmt_b: _36 = MEM[(uint8_t *)p2_123 + 2B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _24 = *p1_122;
  stmt_b: _39 = MEM[(uint8_t *)p1_122 + 3B];
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, pretmp_298}_3)
  (chrec_b = {3B, +, pretmp_298}_3)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _24 = *p1_122;
  stmt_b: _41 = MEM[(uint8_t *)p2_123 + 3B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _24 = *p1_122;
  stmt_b: tmp[i_120][0] = _51;
) -> no dependence
(compute_affine_dependence
  stmt_a: _24 = *p1_122;
  stmt_b: tmp[i_120][2] = _55;
) -> no dependence
(compute_affine_dependence
  stmt_a: _24 = *p1_122;
  stmt_b: tmp[i_120][1] = _60;
) -> no dependence
(compute_affine_dependence
  stmt_a: _24 = *p1_122;
  stmt_b: tmp[i_120][3] = _65;
) -> no dependence
(compute_affine_dependence
  stmt_a: _26 = *p2_123;
  stmt_b: _29 = MEM[(uint8_t *)p1_122 + 1B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _26 = *p2_123;
  stmt_b: _31 = MEM[(uint8_t *)p2_123 + 1B];
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, pretmp_299}_3)
  (chrec_b = {1B, +, pretmp_299}_3)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _26 = *p2_123;
  stmt_b: _34 = MEM[(uint8_t *)p1_122 + 2B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _26 = *p2_123;
  stmt_b: _36 = MEM[(uint8_t *)p2_123 + 2B];
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, pretmp_299}_3)
  (chrec_b = {2B, +, pretmp_299}_3)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _26 = *p2_123;
  stmt_b: _39 = MEM[(uint8_t *)p1_122 + 3B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _26 = *p2_123;
  stmt_b: _41 = MEM[(uint8_t *)p2_123 + 3B];
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, pretmp_299}_3)
  (chrec_b = {3B, +, pretmp_299}_3)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _26 = *p2_123;
  stmt_b: tmp[i_120][0] = _51;
) -> no dependence
(compute_affine_dependence
  stmt_a: _26 = *p2_123;
  stmt_b: tmp[i_120][2] = _55;
) -> no dependence
(compute_affine_dependence
  stmt_a: _26 = *p2_123;
  stmt_b: tmp[i_120][1] = _60;
) -> no dependence
(compute_affine_dependence
  stmt_a: _26 = *p2_123;
  stmt_b: tmp[i_120][3] = _65;
) -> no dependence
(compute_affine_dependence
  stmt_a: _29 = MEM[(uint8_t *)p1_122 + 1B];
  stmt_b: _31 = MEM[(uint8_t *)p2_123 + 1B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _29 = MEM[(uint8_t *)p1_122 + 1B];
  stmt_b: _34 = MEM[(uint8_t *)p1_122 + 2B];
(analyze_overlapping_iterations 
  (chrec_a = {1B, +, pretmp_298}_3)
  (chrec_b = {2B, +, pretmp_298}_3)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _29 = MEM[(uint8_t *)p1_122 + 1B];
  stmt_b: _36 = MEM[(uint8_t *)p2_123 + 2B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _29 = MEM[(uint8_t *)p1_122 + 1B];
  stmt_b: _39 = MEM[(uint8_t *)p1_122 + 3B];
(analyze_overlapping_iterations 
  (chrec_a = {1B, +, pretmp_298}_3)
  (chrec_b = {3B, +, pretmp_298}_3)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _29 = MEM[(uint8_t *)p1_122 + 1B];
  stmt_b: _41 = MEM[(uint8_t *)p2_123 + 3B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _29 = MEM[(uint8_t *)p1_122 + 1B];
  stmt_b: tmp[i_120][0] = _51;
) -> no dependence
(compute_affine_dependence
  stmt_a: _29 = MEM[(uint8_t *)p1_122 + 1B];
  stmt_b: tmp[i_120][2] = _55;
) -> no dependence
(compute_affine_dependence
  stmt_a: _29 = MEM[(uint8_t *)p1_122 + 1B];
  stmt_b: tmp[i_120][1] = _60;
) -> no dependence
(compute_affine_dependence
  stmt_a: _29 = MEM[(uint8_t *)p1_122 + 1B];
  stmt_b: tmp[i_120][3] = _65;
) -> no dependence
(compute_affine_dependence
  stmt_a: _31 = MEM[(uint8_t *)p2_123 + 1B];
  stmt_b: _34 = MEM[(uint8_t *)p1_122 + 2B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _31 = MEM[(uint8_t *)p2_123 + 1B];
  stmt_b: _36 = MEM[(uint8_t *)p2_123 + 2B];
(analyze_overlapping_iterations 
  (chrec_a = {1B, +, pretmp_299}_3)
  (chrec_b = {2B, +, pretmp_299}_3)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _31 = MEM[(uint8_t *)p2_123 + 1B];
  stmt_b: _39 = MEM[(uint8_t *)p1_122 + 3B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _31 = MEM[(uint8_t *)p2_123 + 1B];
  stmt_b: _41 = MEM[(uint8_t *)p2_123 + 3B];
(analyze_overlapping_iterations 
  (chrec_a = {1B, +, pretmp_299}_3)
  (chrec_b = {3B, +, pretmp_299}_3)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _31 = MEM[(uint8_t *)p2_123 + 1B];
  stmt_b: tmp[i_120][0] = _51;
) -> no dependence
(compute_affine_dependence
  stmt_a: _31 = MEM[(uint8_t *)p2_123 + 1B];
  stmt_b: tmp[i_120][2] = _55;
) -> no dependence
(compute_affine_dependence
  stmt_a: _31 = MEM[(uint8_t *)p2_123 + 1B];
  stmt_b: tmp[i_120][1] = _60;
) -> no dependence
(compute_affine_dependence
  stmt_a: _31 = MEM[(uint8_t *)p2_123 + 1B];
  stmt_b: tmp[i_120][3] = _65;
) -> no dependence
(compute_affine_dependence
  stmt_a: _34 = MEM[(uint8_t *)p1_122 + 2B];
  stmt_b: _36 = MEM[(uint8_t *)p2_123 + 2B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _34 = MEM[(uint8_t *)p1_122 + 2B];
  stmt_b: _39 = MEM[(uint8_t *)p1_122 + 3B];
(analyze_overlapping_iterations 
  (chrec_a = {2B, +, pretmp_298}_3)
  (chrec_b = {3B, +, pretmp_298}_3)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _34 = MEM[(uint8_t *)p1_122 + 2B];
  stmt_b: _41 = MEM[(uint8_t *)p2_123 + 3B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _34 = MEM[(uint8_t *)p1_122 + 2B];
  stmt_b: tmp[i_120][0] = _51;
) -> no dependence
(compute_affine_dependence
  stmt_a: _34 = MEM[(uint8_t *)p1_122 + 2B];
  stmt_b: tmp[i_120][2] = _55;
) -> no dependence
(compute_affine_dependence
  stmt_a: _34 = MEM[(uint8_t *)p1_122 + 2B];
  stmt_b: tmp[i_120][1] = _60;
) -> no dependence
(compute_affine_dependence
  stmt_a: _34 = MEM[(uint8_t *)p1_122 + 2B];
  stmt_b: tmp[i_120][3] = _65;
) -> no dependence
(compute_affine_dependence
  stmt_a: _36 = MEM[(uint8_t *)p2_123 + 2B];
  stmt_b: _39 = MEM[(uint8_t *)p1_122 + 3B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _36 = MEM[(uint8_t *)p2_123 + 2B];
  stmt_b: _41 = MEM[(uint8_t *)p2_123 + 3B];
(analyze_overlapping_iterations 
  (chrec_a = {2B, +, pretmp_299}_3)
  (chrec_b = {3B, +, pretmp_299}_3)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _36 = MEM[(uint8_t *)p2_123 + 2B];
  stmt_b: tmp[i_120][0] = _51;
) -> no dependence
(compute_affine_dependence
  stmt_a: _36 = MEM[(uint8_t *)p2_123 + 2B];
  stmt_b: tmp[i_120][2] = _55;
) -> no dependence
(compute_affine_dependence
  stmt_a: _36 = MEM[(uint8_t *)p2_123 + 2B];
  stmt_b: tmp[i_120][1] = _60;
) -> no dependence
(compute_affine_dependence
  stmt_a: _36 = MEM[(uint8_t *)p2_123 + 2B];
  stmt_b: tmp[i_120][3] = _65;
) -> no dependence
(compute_affine_dependence
  stmt_a: _39 = MEM[(uint8_t *)p1_122 + 3B];
  stmt_b: _41 = MEM[(uint8_t *)p2_123 + 3B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _39 = MEM[(uint8_t *)p1_122 + 3B];
  stmt_b: tmp[i_120][0] = _51;
) -> no dependence
(compute_affine_dependence
  stmt_a: _39 = MEM[(uint8_t *)p1_122 + 3B];
  stmt_b: tmp[i_120][2] = _55;
) -> no dependence
(compute_affine_dependence
  stmt_a: _39 = MEM[(uint8_t *)p1_122 + 3B];
  stmt_b: tmp[i_120][1] = _60;
) -> no dependence
(compute_affine_dependence
  stmt_a: _39 = MEM[(uint8_t *)p1_122 + 3B];
  stmt_b: tmp[i_120][3] = _65;
) -> no dependence
(compute_affine_dependence
  stmt_a: _41 = MEM[(uint8_t *)p2_123 + 3B];
  stmt_b: tmp[i_120][0] = _51;
) -> no dependence
(compute_affine_dependence
  stmt_a: _41 = MEM[(uint8_t *)p2_123 + 3B];
  stmt_b: tmp[i_120][2] = _55;
) -> no dependence
(compute_affine_dependence
  stmt_a: _41 = MEM[(uint8_t *)p2_123 + 3B];
  stmt_b: tmp[i_120][1] = _60;
) -> no dependence
(compute_affine_dependence
  stmt_a: _41 = MEM[(uint8_t *)p2_123 + 3B];
  stmt_b: tmp[i_120][3] = _65;
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[i_120][0] = _51;
  stmt_b: tmp[i_120][2] = _55;
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[i_120][0] = _51;
  stmt_b: tmp[i_120][1] = _60;
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 1)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[i_120][0] = _51;
  stmt_b: tmp[i_120][3] = _65;
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[i_120][2] = _55;
  stmt_b: tmp[i_120][1] = _60;
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 1)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[i_120][2] = _55;
  stmt_b: tmp[i_120][3] = _65;
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[i_120][1] = _60;
  stmt_b: tmp[i_120][3] = _65;
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _24 = *p1_122;
  stmt_b: _24 = *p1_122;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, pretmp_298}_3)
  (chrec_b = {0B, +, pretmp_298}_3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _26 = *p2_123;
  stmt_b: _26 = *p2_123;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, pretmp_299}_3)
  (chrec_b = {0B, +, pretmp_299}_3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _29 = MEM[(uint8_t *)p1_122 + 1B];
  stmt_b: _29 = MEM[(uint8_t *)p1_122 + 1B];
(analyze_overlapping_iterations 
  (chrec_a = {1B, +, pretmp_298}_3)
  (chrec_b = {1B, +, pretmp_298}_3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _31 = MEM[(uint8_t *)p2_123 + 1B];
  stmt_b: _31 = MEM[(uint8_t *)p2_123 + 1B];
(analyze_overlapping_iterations 
  (chrec_a = {1B, +, pretmp_299}_3)
  (chrec_b = {1B, +, pretmp_299}_3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _34 = MEM[(uint8_t *)p1_122 + 2B];
  stmt_b: _34 = MEM[(uint8_t *)p1_122 + 2B];
(analyze_overlapping_iterations 
  (chrec_a = {2B, +, pretmp_298}_3)
  (chrec_b = {2B, +, pretmp_298}_3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _36 = MEM[(uint8_t *)p2_123 + 2B];
  stmt_b: _36 = MEM[(uint8_t *)p2_123 + 2B];
(analyze_overlapping_iterations 
  (chrec_a = {2B, +, pretmp_299}_3)
  (chrec_b = {2B, +, pretmp_299}_3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _39 = MEM[(uint8_t *)p1_122 + 3B];
  stmt_b: _39 = MEM[(uint8_t *)p1_122 + 3B];
(analyze_overlapping_iterations 
  (chrec_a = {3B, +, pretmp_298}_3)
  (chrec_b = {3B, +, pretmp_298}_3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _41 = MEM[(uint8_t *)p2_123 + 3B];
  stmt_b: _41 = MEM[(uint8_t *)p2_123 + 3B];
(analyze_overlapping_iterations 
  (chrec_a = {3B, +, pretmp_299}_3)
  (chrec_b = {3B, +, pretmp_299}_3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: tmp[i_120][0] = _51;
  stmt_b: tmp[i_120][0] = _51;
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 0)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_3)
  (chrec_b = {0, +, 1}_3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: tmp[i_120][2] = _55;
  stmt_b: tmp[i_120][2] = _55;
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_3)
  (chrec_b = {0, +, 1}_3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: tmp[i_120][1] = _60;
  stmt_b: tmp[i_120][1] = _60;
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_3)
  (chrec_b = {0, +, 1}_3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: tmp[i_120][3] = _65;
  stmt_b: tmp[i_120][3] = _65;
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_3)
  (chrec_b = {0, +, 1}_3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/pixel.c:192:13: note: === vect_determine_vectorization_factor ===
common/pixel.c:192:13: note: ==> examining phi: i_120 = PHI <i_67(7), 0(5)>

common/pixel.c:192:13: note: ==> examining phi: p1_122 = PHI <p1_70(7), p1_21(5)>

common/pixel.c:192:13: note: ==> examining phi: p2_123 = PHI <p2_73(7), p2_23(5)>

common/pixel.c:192:13: note: ==> examining phi: .MEM_124 = PHI <.MEM_66(7), .MEM_125(5)>

common/pixel.c:192:13: note: ==> examining phi: ivtmp_288 = PHI <ivtmp_284(7), 4(5)>

common/pixel.c:192:13: note: ==> examining statement: # DEBUG p2 => p2_123

common/pixel.c:192:13: note: skip.
common/pixel.c:192:13: note: ==> examining statement: # DEBUG p1 => p1_122

common/pixel.c:192:13: note: skip.
common/pixel.c:192:13: note: ==> examining statement: # DEBUG i => i_120

common/pixel.c:192:13: note: skip.
common/pixel.c:192:13: note: ==> examining statement: _24 = *p1_122;

common/pixel.c:192:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:192:13: note: vectype: vector(16) unsigned char
common/pixel.c:192:13: note: nunits = 16
common/pixel.c:192:13: note: ==> examining statement: _25 = (int) _24;

common/pixel.c:192:13: note: get vectype for scalar type:  int
common/pixel.c:192:13: note: vectype: vector(4) int
common/pixel.c:192:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:192:13: note: vectype: vector(16) unsigned char
common/pixel.c:192:13: note: nunits = 16
common/pixel.c:192:13: note: ==> examining statement: _26 = *p2_123;

common/pixel.c:192:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:192:13: note: vectype: vector(16) unsigned char
common/pixel.c:192:13: note: nunits = 16
common/pixel.c:192:13: note: ==> examining statement: _27 = (int) _26;

common/pixel.c:192:13: note: get vectype for scalar type:  int
common/pixel.c:192:13: note: vectype: vector(4) int
common/pixel.c:192:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:192:13: note: vectype: vector(16) unsigned char
common/pixel.c:192:13: note: nunits = 16
common/pixel.c:192:13: note: ==> examining statement: a0_28 = _25 - _27;

common/pixel.c:192:13: note: get vectype for scalar type:  int
common/pixel.c:192:13: note: vectype: vector(4) int
common/pixel.c:192:13: note: get vectype for scalar type:  int
common/pixel.c:192:13: note: vectype: vector(4) int
common/pixel.c:192:13: note: nunits = 4
common/pixel.c:192:13: note: ==> examining statement: # DEBUG a0 => a0_28

common/pixel.c:192:13: note: skip.
common/pixel.c:192:13: note: ==> examining statement: _29 = MEM[(uint8_t *)p1_122 + 1B];

common/pixel.c:192:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:192:13: note: vectype: vector(16) unsigned char
common/pixel.c:192:13: note: nunits = 16
common/pixel.c:192:13: note: ==> examining statement: _30 = (int) _29;

common/pixel.c:192:13: note: get vectype for scalar type:  int
common/pixel.c:192:13: note: vectype: vector(4) int
common/pixel.c:192:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:192:13: note: vectype: vector(16) unsigned char
common/pixel.c:192:13: note: nunits = 16
common/pixel.c:192:13: note: ==> examining statement: _31 = MEM[(uint8_t *)p2_123 + 1B];

common/pixel.c:192:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:192:13: note: vectype: vector(16) unsigned char
common/pixel.c:192:13: note: nunits = 16
common/pixel.c:192:13: note: ==> examining statement: _32 = (int) _31;

common/pixel.c:192:13: note: get vectype for scalar type:  int
common/pixel.c:192:13: note: vectype: vector(4) int
common/pixel.c:192:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:192:13: note: vectype: vector(16) unsigned char
common/pixel.c:192:13: note: nunits = 16
common/pixel.c:192:13: note: ==> examining statement: a1_33 = _30 - _32;

common/pixel.c:192:13: note: get vectype for scalar type:  int
common/pixel.c:192:13: note: vectype: vector(4) int
common/pixel.c:192:13: note: get vectype for scalar type:  int
common/pixel.c:192:13: note: vectype: vector(4) int
common/pixel.c:192:13: note: nunits = 4
common/pixel.c:192:13: note: ==> examining statement: # DEBUG a1 => a1_33

common/pixel.c:192:13: note: skip.
common/pixel.c:192:13: note: ==> examining statement: _34 = MEM[(uint8_t *)p1_122 + 2B];

common/pixel.c:192:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:192:13: note: vectype: vector(16) unsigned char
common/pixel.c:192:13: note: nunits = 16
common/pixel.c:192:13: note: ==> examining statement: _35 = (int) _34;

common/pixel.c:192:13: note: get vectype for scalar type:  int
common/pixel.c:192:13: note: vectype: vector(4) int
common/pixel.c:192:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:192:13: note: vectype: vector(16) unsigned char
common/pixel.c:192:13: note: nunits = 16
common/pixel.c:192:13: note: ==> examining statement: _36 = MEM[(uint8_t *)p2_123 + 2B];

common/pixel.c:192:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:192:13: note: vectype: vector(16) unsigned char
common/pixel.c:192:13: note: nunits = 16
common/pixel.c:192:13: note: ==> examining statement: _37 = (int) _36;

common/pixel.c:192:13: note: get vectype for scalar type:  int
common/pixel.c:192:13: note: vectype: vector(4) int
common/pixel.c:192:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:192:13: note: vectype: vector(16) unsigned char
common/pixel.c:192:13: note: nunits = 16
common/pixel.c:192:13: note: ==> examining statement: a2_38 = _35 - _37;

common/pixel.c:192:13: note: get vectype for scalar type:  int
common/pixel.c:192:13: note: vectype: vector(4) int
common/pixel.c:192:13: note: get vectype for scalar type:  int
common/pixel.c:192:13: note: vectype: vector(4) int
common/pixel.c:192:13: note: nunits = 4
common/pixel.c:192:13: note: ==> examining statement: # DEBUG a2 => a2_38

common/pixel.c:192:13: note: skip.
common/pixel.c:192:13: note: ==> examining statement: _39 = MEM[(uint8_t *)p1_122 + 3B];

common/pixel.c:192:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:192:13: note: vectype: vector(16) unsigned char
common/pixel.c:192:13: note: nunits = 16
common/pixel.c:192:13: note: ==> examining statement: _40 = (int) _39;

common/pixel.c:192:13: note: get vectype for scalar type:  int
common/pixel.c:192:13: note: vectype: vector(4) int
common/pixel.c:192:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:192:13: note: vectype: vector(16) unsigned char
common/pixel.c:192:13: note: nunits = 16
common/pixel.c:192:13: note: ==> examining statement: _41 = MEM[(uint8_t *)p2_123 + 3B];

common/pixel.c:192:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:192:13: note: vectype: vector(16) unsigned char
common/pixel.c:192:13: note: nunits = 16
common/pixel.c:192:13: note: ==> examining statement: _42 = (int) _41;

common/pixel.c:192:13: note: get vectype for scalar type:  int
common/pixel.c:192:13: note: vectype: vector(4) int
common/pixel.c:192:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:192:13: note: vectype: vector(16) unsigned char
common/pixel.c:192:13: note: nunits = 16
common/pixel.c:192:13: note: ==> examining statement: a3_43 = _40 - _42;

common/pixel.c:192:13: note: get vectype for scalar type:  int
common/pixel.c:192:13: note: vectype: vector(4) int
common/pixel.c:192:13: note: get vectype for scalar type:  int
common/pixel.c:192:13: note: vectype: vector(4) int
common/pixel.c:192:13: note: nunits = 4
common/pixel.c:192:13: note: ==> examining statement: # DEBUG a3 => a3_43

common/pixel.c:192:13: note: skip.
common/pixel.c:192:13: note: ==> examining statement: t0_44 = a0_28 + a1_33;

common/pixel.c:192:13: note: get vectype for scalar type:  int
common/pixel.c:192:13: note: vectype: vector(4) int
common/pixel.c:192:13: note: get vectype for scalar type:  int
common/pixel.c:192:13: note: vectype: vector(4) int
common/pixel.c:192:13: note: nunits = 4
common/pixel.c:192:13: note: ==> examining statement: # DEBUG t0 => t0_44

common/pixel.c:192:13: note: skip.
common/pixel.c:192:13: note: ==> examining statement: t1_45 = a0_28 - a1_33;

common/pixel.c:192:13: note: get vectype for scalar type:  int
common/pixel.c:192:13: note: vectype: vector(4) int
common/pixel.c:192:13: note: get vectype for scalar type:  int
common/pixel.c:192:13: note: vectype: vector(4) int
common/pixel.c:192:13: note: nunits = 4
common/pixel.c:192:13: note: ==> examining statement: # DEBUG t1 => t1_45

common/pixel.c:192:13: note: skip.
common/pixel.c:192:13: note: ==> examining statement: t2_46 = a2_38 + a3_43;

common/pixel.c:192:13: note: get vectype for scalar type:  int
common/pixel.c:192:13: note: vectype: vector(4) int
common/pixel.c:192:13: note: get vectype for scalar type:  int
common/pixel.c:192:13: note: vectype: vector(4) int
common/pixel.c:192:13: note: nunits = 4
common/pixel.c:192:13: note: ==> examining statement: # DEBUG t2 => t2_46

common/pixel.c:192:13: note: skip.
common/pixel.c:192:13: note: ==> examining statement: t3_47 = a2_38 - a3_43;

common/pixel.c:192:13: note: get vectype for scalar type:  int
common/pixel.c:192:13: note: vectype: vector(4) int
common/pixel.c:192:13: note: get vectype for scalar type:  int
common/pixel.c:192:13: note: vectype: vector(4) int
common/pixel.c:192:13: note: nunits = 4
common/pixel.c:192:13: note: ==> examining statement: # DEBUG t3 => t3_47

common/pixel.c:192:13: note: skip.
common/pixel.c:192:13: note: ==> examining statement: _48 = (unsigned short) t0_44;

common/pixel.c:192:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:192:13: note: vectype: vector(8) unsigned short
common/pixel.c:192:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:192:13: note: vectype: vector(8) unsigned short
common/pixel.c:192:13: note: nunits = 8
common/pixel.c:192:13: note: ==> examining statement: _49 = (unsigned short) t2_46;

common/pixel.c:192:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:192:13: note: vectype: vector(8) unsigned short
common/pixel.c:192:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:192:13: note: vectype: vector(8) unsigned short
common/pixel.c:192:13: note: nunits = 8
common/pixel.c:192:13: note: ==> examining statement: _50 = _48 + _49;

common/pixel.c:192:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:192:13: note: vectype: vector(8) unsigned short
common/pixel.c:192:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:192:13: note: vectype: vector(8) unsigned short
common/pixel.c:192:13: note: nunits = 8
common/pixel.c:192:13: note: ==> examining statement: _51 = (short int) _50;

common/pixel.c:192:13: note: get vectype for scalar type:  short int
common/pixel.c:192:13: note: vectype: vector(8) short int
common/pixel.c:192:13: note: get vectype for scalar type:  short int
common/pixel.c:192:13: note: vectype: vector(8) short int
common/pixel.c:192:13: note: nunits = 8
common/pixel.c:192:13: note: ==> examining statement: tmp[i_120][0] = _51;

common/pixel.c:192:13: note: get vectype for scalar type:  int16_t
common/pixel.c:192:13: note: vectype: vector(8) short int
common/pixel.c:192:13: note: nunits = 8
common/pixel.c:192:13: note: ==> examining statement: _54 = _48 - _49;

common/pixel.c:192:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:192:13: note: vectype: vector(8) unsigned short
common/pixel.c:192:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:192:13: note: vectype: vector(8) unsigned short
common/pixel.c:192:13: note: nunits = 8
common/pixel.c:192:13: note: ==> examining statement: _55 = (short int) _54;

common/pixel.c:192:13: note: get vectype for scalar type:  short int
common/pixel.c:192:13: note: vectype: vector(8) short int
common/pixel.c:192:13: note: get vectype for scalar type:  short int
common/pixel.c:192:13: note: vectype: vector(8) short int
common/pixel.c:192:13: note: nunits = 8
common/pixel.c:192:13: note: ==> examining statement: tmp[i_120][2] = _55;

common/pixel.c:192:13: note: get vectype for scalar type:  int16_t
common/pixel.c:192:13: note: vectype: vector(8) short int
common/pixel.c:192:13: note: nunits = 8
common/pixel.c:192:13: note: ==> examining statement: _57 = (unsigned short) t1_45;

common/pixel.c:192:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:192:13: note: vectype: vector(8) unsigned short
common/pixel.c:192:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:192:13: note: vectype: vector(8) unsigned short
common/pixel.c:192:13: note: nunits = 8
common/pixel.c:192:13: note: ==> examining statement: _58 = (unsigned short) t3_47;

common/pixel.c:192:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:192:13: note: vectype: vector(8) unsigned short
common/pixel.c:192:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:192:13: note: vectype: vector(8) unsigned short
common/pixel.c:192:13: note: nunits = 8
common/pixel.c:192:13: note: ==> examining statement: _59 = _57 + _58;

common/pixel.c:192:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:192:13: note: vectype: vector(8) unsigned short
common/pixel.c:192:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:192:13: note: vectype: vector(8) unsigned short
common/pixel.c:192:13: note: nunits = 8
common/pixel.c:192:13: note: ==> examining statement: _60 = (short int) _59;

common/pixel.c:192:13: note: get vectype for scalar type:  short int
common/pixel.c:192:13: note: vectype: vector(8) short int
common/pixel.c:192:13: note: get vectype for scalar type:  short int
common/pixel.c:192:13: note: vectype: vector(8) short int
common/pixel.c:192:13: note: nunits = 8
common/pixel.c:192:13: note: ==> examining statement: tmp[i_120][1] = _60;

common/pixel.c:192:13: note: get vectype for scalar type:  int16_t
common/pixel.c:192:13: note: vectype: vector(8) short int
common/pixel.c:192:13: note: nunits = 8
common/pixel.c:192:13: note: ==> examining statement: _64 = _57 - _58;

common/pixel.c:192:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:192:13: note: vectype: vector(8) unsigned short
common/pixel.c:192:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:192:13: note: vectype: vector(8) unsigned short
common/pixel.c:192:13: note: nunits = 8
common/pixel.c:192:13: note: ==> examining statement: _65 = (short int) _64;

common/pixel.c:192:13: note: get vectype for scalar type:  short int
common/pixel.c:192:13: note: vectype: vector(8) short int
common/pixel.c:192:13: note: get vectype for scalar type:  short int
common/pixel.c:192:13: note: vectype: vector(8) short int
common/pixel.c:192:13: note: nunits = 8
common/pixel.c:192:13: note: ==> examining statement: tmp[i_120][3] = _65;

common/pixel.c:192:13: note: get vectype for scalar type:  int16_t
common/pixel.c:192:13: note: vectype: vector(8) short int
common/pixel.c:192:13: note: nunits = 8
common/pixel.c:192:13: note: ==> examining statement: i_67 = i_120 + 1;

common/pixel.c:192:13: note: skip.
common/pixel.c:192:13: note: ==> examining statement: # DEBUG i => i_67

common/pixel.c:192:13: note: skip.
common/pixel.c:192:13: note: ==> examining statement: p1_70 = p1_122 + pretmp_298;

common/pixel.c:192:13: note: skip.
common/pixel.c:192:13: note: ==> examining statement: # DEBUG p1 => p1_70

common/pixel.c:192:13: note: skip.
common/pixel.c:192:13: note: ==> examining statement: p2_73 = p2_123 + pretmp_299;

common/pixel.c:192:13: note: skip.
common/pixel.c:192:13: note: ==> examining statement: # DEBUG p2 => p2_73

common/pixel.c:192:13: note: skip.
common/pixel.c:192:13: note: ==> examining statement: # DEBUG p2 => p2_73

common/pixel.c:192:13: note: skip.
common/pixel.c:192:13: note: ==> examining statement: # DEBUG p1 => p1_70

common/pixel.c:192:13: note: skip.
common/pixel.c:192:13: note: ==> examining statement: # DEBUG i => i_67

common/pixel.c:192:13: note: skip.
common/pixel.c:192:13: note: ==> examining statement: ivtmp_284 = ivtmp_288 - 1;

common/pixel.c:192:13: note: skip.
common/pixel.c:192:13: note: ==> examining statement: if (ivtmp_284 != 0)

common/pixel.c:192:13: note: skip.
common/pixel.c:192:13: note: vectorization factor = 16
common/pixel.c:192:13: note: === vect_analyze_data_refs_alignment ===
common/pixel.c:192:13: note: vect_compute_data_ref_alignment:
common/pixel.c:192:13: note: vect_compute_data_ref_alignment:
common/pixel.c:192:13: note: vect_compute_data_ref_alignment:
common/pixel.c:192:13: note: vect_compute_data_ref_alignment:
common/pixel.c:192:13: note: vect_compute_data_ref_alignment:
common/pixel.c:192:13: note: vect_compute_data_ref_alignment:
common/pixel.c:192:13: note: vect_compute_data_ref_alignment:
common/pixel.c:192:13: note: vect_compute_data_ref_alignment:
common/pixel.c:192:13: note: vect_compute_data_ref_alignment:
common/pixel.c:192:13: note: misalign = 0 bytes of ref tmp[i_120][0]
common/pixel.c:192:13: note: vect_compute_data_ref_alignment:
common/pixel.c:192:13: note: misalign = 4 bytes of ref tmp[i_120][2]
common/pixel.c:192:13: note: vect_compute_data_ref_alignment:
common/pixel.c:192:13: note: misalign = 2 bytes of ref tmp[i_120][1]
common/pixel.c:192:13: note: vect_compute_data_ref_alignment:
common/pixel.c:192:13: note: misalign = 6 bytes of ref tmp[i_120][3]
common/pixel.c:192:13: note: === vect_prune_runtime_alias_test_list ===
common/pixel.c:192:13: note: === vect_enhance_data_refs_alignment ===
common/pixel.c:192:13: note: vect_can_advance_ivs_p:
common/pixel.c:192:13: note: Analyze phi: i_120 = PHI <i_67(7), 0(5)>

common/pixel.c:192:13: note: Analyze phi: p1_122 = PHI <p1_70(7), p1_21(5)>

common/pixel.c:192:13: note: Analyze phi: p2_123 = PHI <p2_73(7), p2_23(5)>

common/pixel.c:192:13: note: Analyze phi: .MEM_124 = PHI <.MEM_66(7), .MEM_125(5)>

common/pixel.c:192:13: note: virtual phi. skip.
common/pixel.c:192:13: note: Analyze phi: ivtmp_288 = PHI <ivtmp_284(7), 4(5)>

common/pixel.c:192:13: note: Setting misalignment to -1.
common/pixel.c:192:13: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:192:13: note: vect_get_data_access_cost: inside_cost = 2, outside_cost = 0.
common/pixel.c:192:13: note: Setting misalignment to -1.
common/pixel.c:192:13: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:192:13: note: vect_get_data_access_cost: inside_cost = 4, outside_cost = 0.
common/pixel.c:192:13: note: Setting misalignment to -1.
common/pixel.c:192:13: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:192:13: note: vect_get_data_access_cost: inside_cost = 6, outside_cost = 0.
common/pixel.c:192:13: note: Setting misalignment to -1.
common/pixel.c:192:13: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:192:13: note: vect_get_data_access_cost: inside_cost = 8, outside_cost = 0.
common/pixel.c:192:13: note: Setting misalignment to -1.
common/pixel.c:192:13: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:192:13: note: vect_get_data_access_cost: inside_cost = 10, outside_cost = 0.
common/pixel.c:192:13: note: Setting misalignment to -1.
common/pixel.c:192:13: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:192:13: note: vect_get_data_access_cost: inside_cost = 12, outside_cost = 0.
common/pixel.c:192:13: note: Setting misalignment to -1.
common/pixel.c:192:13: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:192:13: note: vect_get_data_access_cost: inside_cost = 14, outside_cost = 0.
common/pixel.c:192:13: note: Setting misalignment to -1.
common/pixel.c:192:13: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:192:13: note: vect_get_data_access_cost: inside_cost = 16, outside_cost = 0.
common/pixel.c:192:13: note: vect_model_store_cost: aligned.
common/pixel.c:192:13: note: vect_get_data_access_cost: inside_cost = 18, outside_cost = 0.
common/pixel.c:192:13: note: === vect_analyze_slp ===
common/pixel.c:192:13: note: Build SLP for tmp[i_120][0] = _51;

common/pixel.c:192:13: note: Build SLP for tmp[i_120][1] = _60;

common/pixel.c:192:13: note: Build SLP for tmp[i_120][2] = _55;

common/pixel.c:192:13: note: Build SLP for tmp[i_120][3] = _65;

common/pixel.c:192:13: note: vect_is_simple_use: operand _51
common/pixel.c:192:13: note: def_stmt: _51 = (short int) _50;
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: vect_is_simple_use: operand _60
common/pixel.c:192:13: note: def_stmt: _60 = (short int) _59;
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: vect_is_simple_use: operand _55
common/pixel.c:192:13: note: def_stmt: _55 = (short int) _54;
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: vect_is_simple_use: operand _65
common/pixel.c:192:13: note: def_stmt: _65 = (short int) _64;
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: Build SLP for _51 = (short int) _50;

common/pixel.c:192:13: note: Build SLP for _60 = (short int) _59;

common/pixel.c:192:13: note: Build SLP for _55 = (short int) _54;

common/pixel.c:192:13: note: Build SLP for _65 = (short int) _64;

common/pixel.c:192:13: note: vect_is_simple_use: operand _50
common/pixel.c:192:13: note: def_stmt: _50 = _48 + _49;
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: vect_is_simple_use: operand _59
common/pixel.c:192:13: note: def_stmt: _59 = _57 + _58;
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: vect_is_simple_use: operand _54
common/pixel.c:192:13: note: def_stmt: _54 = _48 - _49;
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: vect_is_simple_use: operand _64
common/pixel.c:192:13: note: def_stmt: _64 = _57 - _58;
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: Build SLP for _50 = _48 + _49;

common/pixel.c:192:13: note: Build SLP for _59 = _57 + _58;

common/pixel.c:192:13: note: Build SLP for _54 = _48 - _49;

common/pixel.c:192:13: note: Build SLP failed: different operation in stmt _54 = _48 - _49;

common/pixel.c:192:13: note: Build SLP for _64 = _57 - _58;

common/pixel.c:192:13: note: Build SLP failed: different operation in stmt _64 = _57 - _58;

common/pixel.c:192:13: note: === vect_make_slp_decision ===
common/pixel.c:192:13: note: === vect_detect_hybrid_slp ===
common/pixel.c:192:13: note: === vect_analyze_loop_operations ===
common/pixel.c:192:13: note: examining phi: i_120 = PHI <i_67(7), 0(5)>

common/pixel.c:192:13: note: examining phi: p1_122 = PHI <p1_70(7), p1_21(5)>

common/pixel.c:192:13: note: examining phi: p2_123 = PHI <p2_73(7), p2_23(5)>

common/pixel.c:192:13: note: examining phi: .MEM_124 = PHI <.MEM_66(7), .MEM_125(5)>

common/pixel.c:192:13: note: examining phi: ivtmp_288 = PHI <ivtmp_284(7), 4(5)>

common/pixel.c:192:13: note: ==> examining statement: # DEBUG p2 => p2_123
common/pixel.c:192:13: note: irrelevant.
common/pixel.c:192:13: note: ==> examining statement: # DEBUG p1 => p1_122
common/pixel.c:192:13: note: irrelevant.
common/pixel.c:192:13: note: ==> examining statement: # DEBUG i => i_120
common/pixel.c:192:13: note: irrelevant.
common/pixel.c:192:13: note: ==> examining statement: _24 = *p1_122;
common/pixel.c:192:13: note: vect_is_simple_use: operand *p1_122
common/pixel.c:192:13: note: not ssa-name.
common/pixel.c:192:13: note: use not simple.
common/pixel.c:192:13: note: vect_is_simple_use: operand *p1_122
common/pixel.c:192:13: note: not ssa-name.
common/pixel.c:192:13: note: use not simple.
common/pixel.c:192:13: note: vect_model_load_cost: inside_cost = 25, prologue_cost = 0 .
common/pixel.c:192:13: note: ==> examining statement: _25 = (int) _24;
common/pixel.c:192:13: note: vect_is_simple_use: operand _24
common/pixel.c:192:13: note: def_stmt: _24 = *p1_122;
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: === vectorizable_conversion ===
common/pixel.c:192:13: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:192:13: note: ==> examining statement: _26 = *p2_123;
common/pixel.c:192:13: note: vect_is_simple_use: operand *p2_123
common/pixel.c:192:13: note: not ssa-name.
common/pixel.c:192:13: note: use not simple.
common/pixel.c:192:13: note: vect_is_simple_use: operand *p2_123
common/pixel.c:192:13: note: not ssa-name.
common/pixel.c:192:13: note: use not simple.
common/pixel.c:192:13: note: vect_model_load_cost: inside_cost = 25, prologue_cost = 0 .
common/pixel.c:192:13: note: ==> examining statement: _27 = (int) _26;
common/pixel.c:192:13: note: vect_is_simple_use: operand _26
common/pixel.c:192:13: note: def_stmt: _26 = *p2_123;
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: === vectorizable_conversion ===
common/pixel.c:192:13: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:192:13: note: ==> examining statement: a0_28 = _25 - _27;
common/pixel.c:192:13: note: vect_is_simple_use: operand _25
common/pixel.c:192:13: note: def_stmt: _25 = (int) _24;
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: vect_is_simple_use: operand _27
common/pixel.c:192:13: note: def_stmt: _27 = (int) _26;
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: === vectorizable_operation ===
common/pixel.c:192:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:192:13: note: ==> examining statement: # DEBUG a0 => a0_28
common/pixel.c:192:13: note: irrelevant.
common/pixel.c:192:13: note: ==> examining statement: _29 = MEM[(uint8_t *)p1_122 + 1B];
common/pixel.c:192:13: note: vect_is_simple_use: operand MEM[(uint8_t *)p1_122 + 1B]
common/pixel.c:192:13: note: not ssa-name.
common/pixel.c:192:13: note: use not simple.
common/pixel.c:192:13: note: vect_is_simple_use: operand MEM[(uint8_t *)p1_122 + 1B]
common/pixel.c:192:13: note: not ssa-name.
common/pixel.c:192:13: note: use not simple.
common/pixel.c:192:13: note: vect_model_load_cost: inside_cost = 25, prologue_cost = 0 .
common/pixel.c:192:13: note: ==> examining statement: _30 = (int) _29;
common/pixel.c:192:13: note: vect_is_simple_use: operand _29
common/pixel.c:192:13: note: def_stmt: _29 = MEM[(uint8_t *)p1_122 + 1B];
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: === vectorizable_conversion ===
common/pixel.c:192:13: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:192:13: note: ==> examining statement: _31 = MEM[(uint8_t *)p2_123 + 1B];
common/pixel.c:192:13: note: vect_is_simple_use: operand MEM[(uint8_t *)p2_123 + 1B]
common/pixel.c:192:13: note: not ssa-name.
common/pixel.c:192:13: note: use not simple.
common/pixel.c:192:13: note: vect_is_simple_use: operand MEM[(uint8_t *)p2_123 + 1B]
common/pixel.c:192:13: note: not ssa-name.
common/pixel.c:192:13: note: use not simple.
common/pixel.c:192:13: note: vect_model_load_cost: inside_cost = 25, prologue_cost = 0 .
common/pixel.c:192:13: note: ==> examining statement: _32 = (int) _31;
common/pixel.c:192:13: note: vect_is_simple_use: operand _31
common/pixel.c:192:13: note: def_stmt: _31 = MEM[(uint8_t *)p2_123 + 1B];
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: === vectorizable_conversion ===
common/pixel.c:192:13: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:192:13: note: ==> examining statement: a1_33 = _30 - _32;
common/pixel.c:192:13: note: vect_is_simple_use: operand _30
common/pixel.c:192:13: note: def_stmt: _30 = (int) _29;
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: vect_is_simple_use: operand _32
common/pixel.c:192:13: note: def_stmt: _32 = (int) _31;
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: === vectorizable_operation ===
common/pixel.c:192:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:192:13: note: ==> examining statement: # DEBUG a1 => a1_33
common/pixel.c:192:13: note: irrelevant.
common/pixel.c:192:13: note: ==> examining statement: _34 = MEM[(uint8_t *)p1_122 + 2B];
common/pixel.c:192:13: note: vect_is_simple_use: operand MEM[(uint8_t *)p1_122 + 2B]
common/pixel.c:192:13: note: not ssa-name.
common/pixel.c:192:13: note: use not simple.
common/pixel.c:192:13: note: vect_is_simple_use: operand MEM[(uint8_t *)p1_122 + 2B]
common/pixel.c:192:13: note: not ssa-name.
common/pixel.c:192:13: note: use not simple.
common/pixel.c:192:13: note: vect_model_load_cost: inside_cost = 25, prologue_cost = 0 .
common/pixel.c:192:13: note: ==> examining statement: _35 = (int) _34;
common/pixel.c:192:13: note: vect_is_simple_use: operand _34
common/pixel.c:192:13: note: def_stmt: _34 = MEM[(uint8_t *)p1_122 + 2B];
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: === vectorizable_conversion ===
common/pixel.c:192:13: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:192:13: note: ==> examining statement: _36 = MEM[(uint8_t *)p2_123 + 2B];
common/pixel.c:192:13: note: vect_is_simple_use: operand MEM[(uint8_t *)p2_123 + 2B]
common/pixel.c:192:13: note: not ssa-name.
common/pixel.c:192:13: note: use not simple.
common/pixel.c:192:13: note: vect_is_simple_use: operand MEM[(uint8_t *)p2_123 + 2B]
common/pixel.c:192:13: note: not ssa-name.
common/pixel.c:192:13: note: use not simple.
common/pixel.c:192:13: note: vect_model_load_cost: inside_cost = 25, prologue_cost = 0 .
common/pixel.c:192:13: note: ==> examining statement: _37 = (int) _36;
common/pixel.c:192:13: note: vect_is_simple_use: operand _36
common/pixel.c:192:13: note: def_stmt: _36 = MEM[(uint8_t *)p2_123 + 2B];
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: === vectorizable_conversion ===
common/pixel.c:192:13: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:192:13: note: ==> examining statement: a2_38 = _35 - _37;
common/pixel.c:192:13: note: vect_is_simple_use: operand _35
common/pixel.c:192:13: note: def_stmt: _35 = (int) _34;
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: vect_is_simple_use: operand _37
common/pixel.c:192:13: note: def_stmt: _37 = (int) _36;
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: === vectorizable_operation ===
common/pixel.c:192:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:192:13: note: ==> examining statement: # DEBUG a2 => a2_38
common/pixel.c:192:13: note: irrelevant.
common/pixel.c:192:13: note: ==> examining statement: _39 = MEM[(uint8_t *)p1_122 + 3B];
common/pixel.c:192:13: note: vect_is_simple_use: operand MEM[(uint8_t *)p1_122 + 3B]
common/pixel.c:192:13: note: not ssa-name.
common/pixel.c:192:13: note: use not simple.
common/pixel.c:192:13: note: vect_is_simple_use: operand MEM[(uint8_t *)p1_122 + 3B]
common/pixel.c:192:13: note: not ssa-name.
common/pixel.c:192:13: note: use not simple.
common/pixel.c:192:13: note: vect_model_load_cost: inside_cost = 25, prologue_cost = 0 .
common/pixel.c:192:13: note: ==> examining statement: _40 = (int) _39;
common/pixel.c:192:13: note: vect_is_simple_use: operand _39
common/pixel.c:192:13: note: def_stmt: _39 = MEM[(uint8_t *)p1_122 + 3B];
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: === vectorizable_conversion ===
common/pixel.c:192:13: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:192:13: note: ==> examining statement: _41 = MEM[(uint8_t *)p2_123 + 3B];
common/pixel.c:192:13: note: vect_is_simple_use: operand MEM[(uint8_t *)p2_123 + 3B]
common/pixel.c:192:13: note: not ssa-name.
common/pixel.c:192:13: note: use not simple.
common/pixel.c:192:13: note: vect_is_simple_use: operand MEM[(uint8_t *)p2_123 + 3B]
common/pixel.c:192:13: note: not ssa-name.
common/pixel.c:192:13: note: use not simple.
common/pixel.c:192:13: note: vect_model_load_cost: inside_cost = 25, prologue_cost = 0 .
common/pixel.c:192:13: note: ==> examining statement: _42 = (int) _41;
common/pixel.c:192:13: note: vect_is_simple_use: operand _41
common/pixel.c:192:13: note: def_stmt: _41 = MEM[(uint8_t *)p2_123 + 3B];
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: === vectorizable_conversion ===
common/pixel.c:192:13: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:192:13: note: ==> examining statement: a3_43 = _40 - _42;
common/pixel.c:192:13: note: vect_is_simple_use: operand _40
common/pixel.c:192:13: note: def_stmt: _40 = (int) _39;
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: vect_is_simple_use: operand _42
common/pixel.c:192:13: note: def_stmt: _42 = (int) _41;
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: === vectorizable_operation ===
common/pixel.c:192:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:192:13: note: ==> examining statement: # DEBUG a3 => a3_43
common/pixel.c:192:13: note: irrelevant.
common/pixel.c:192:13: note: ==> examining statement: t0_44 = a0_28 + a1_33;
common/pixel.c:192:13: note: vect_is_simple_use: operand a0_28
common/pixel.c:192:13: note: def_stmt: a0_28 = _25 - _27;
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: vect_is_simple_use: operand a1_33
common/pixel.c:192:13: note: def_stmt: a1_33 = _30 - _32;
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: === vectorizable_operation ===
common/pixel.c:192:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:192:13: note: ==> examining statement: # DEBUG t0 => t0_44
common/pixel.c:192:13: note: irrelevant.
common/pixel.c:192:13: note: ==> examining statement: t1_45 = a0_28 - a1_33;
common/pixel.c:192:13: note: vect_is_simple_use: operand a0_28
common/pixel.c:192:13: note: def_stmt: a0_28 = _25 - _27;
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: vect_is_simple_use: operand a1_33
common/pixel.c:192:13: note: def_stmt: a1_33 = _30 - _32;
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: === vectorizable_operation ===
common/pixel.c:192:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:192:13: note: ==> examining statement: # DEBUG t1 => t1_45
common/pixel.c:192:13: note: irrelevant.
common/pixel.c:192:13: note: ==> examining statement: t2_46 = a2_38 + a3_43;
common/pixel.c:192:13: note: vect_is_simple_use: operand a2_38
common/pixel.c:192:13: note: def_stmt: a2_38 = _35 - _37;
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: vect_is_simple_use: operand a3_43
common/pixel.c:192:13: note: def_stmt: a3_43 = _40 - _42;
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: === vectorizable_operation ===
common/pixel.c:192:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:192:13: note: ==> examining statement: # DEBUG t2 => t2_46
common/pixel.c:192:13: note: irrelevant.
common/pixel.c:192:13: note: ==> examining statement: t3_47 = a2_38 - a3_43;
common/pixel.c:192:13: note: vect_is_simple_use: operand a2_38
common/pixel.c:192:13: note: def_stmt: a2_38 = _35 - _37;
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: vect_is_simple_use: operand a3_43
common/pixel.c:192:13: note: def_stmt: a3_43 = _40 - _42;
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: === vectorizable_operation ===
common/pixel.c:192:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:192:13: note: ==> examining statement: # DEBUG t3 => t3_47
common/pixel.c:192:13: note: irrelevant.
common/pixel.c:192:13: note: ==> examining statement: _48 = (unsigned short) t0_44;
common/pixel.c:192:13: note: vect_is_simple_use: operand t0_44
common/pixel.c:192:13: note: def_stmt: t0_44 = a0_28 + a1_33;
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: === vectorizable_conversion ===
common/pixel.c:192:13: note: vect_model_promotion_demotion_cost: inside_cost = 1, prologue_cost = 0 .
common/pixel.c:192:13: note: ==> examining statement: _49 = (unsigned short) t2_46;
common/pixel.c:192:13: note: vect_is_simple_use: operand t2_46
common/pixel.c:192:13: note: def_stmt: t2_46 = a2_38 + a3_43;
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: === vectorizable_conversion ===
common/pixel.c:192:13: note: vect_model_promotion_demotion_cost: inside_cost = 1, prologue_cost = 0 .
common/pixel.c:192:13: note: ==> examining statement: _50 = _48 + _49;
common/pixel.c:192:13: note: vect_is_simple_use: operand _48
common/pixel.c:192:13: note: def_stmt: _48 = (unsigned short) t0_44;
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: vect_is_simple_use: operand _49
common/pixel.c:192:13: note: def_stmt: _49 = (unsigned short) t2_46;
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: === vectorizable_operation ===
common/pixel.c:192:13: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:192:13: note: ==> examining statement: _51 = (short int) _50;
common/pixel.c:192:13: note: vect_is_simple_use: operand _50
common/pixel.c:192:13: note: def_stmt: _50 = _48 + _49;
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: vect_is_simple_use: operand _50
common/pixel.c:192:13: note: def_stmt: _50 = _48 + _49;
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: no optab.
common/pixel.c:192:13: note: vect_is_simple_use: operand _50
common/pixel.c:192:13: note: def_stmt: _50 = _48 + _49;
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: === vectorizable_assignment ===
common/pixel.c:192:13: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:192:13: note: ==> examining statement: tmp[i_120][0] = _51;
common/pixel.c:192:13: note: vect_is_simple_use: operand _51
common/pixel.c:192:13: note: def_stmt: _51 = (short int) _50;
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: no array mode for V8HI[4]
common/pixel.c:192:13: note: vect_is_simple_use: operand _60
common/pixel.c:192:13: note: def_stmt: _60 = (short int) _59;
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: vect_is_simple_use: operand _55
common/pixel.c:192:13: note: def_stmt: _55 = (short int) _54;
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: vect_is_simple_use: operand _65
common/pixel.c:192:13: note: def_stmt: _65 = (short int) _64;
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: vect_model_store_cost: strided group_size = 4 .
common/pixel.c:192:13: note: vect_model_store_cost: aligned.
common/pixel.c:192:13: note: vect_model_store_cost: inside_cost = 18, prologue_cost = 0 .
common/pixel.c:192:13: note: ==> examining statement: _54 = _48 - _49;
common/pixel.c:192:13: note: vect_is_simple_use: operand _48
common/pixel.c:192:13: note: def_stmt: _48 = (unsigned short) t0_44;
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: vect_is_simple_use: operand _49
common/pixel.c:192:13: note: def_stmt: _49 = (unsigned short) t2_46;
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: === vectorizable_operation ===
common/pixel.c:192:13: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:192:13: note: ==> examining statement: _55 = (short int) _54;
common/pixel.c:192:13: note: vect_is_simple_use: operand _54
common/pixel.c:192:13: note: def_stmt: _54 = _48 - _49;
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: vect_is_simple_use: operand _54
common/pixel.c:192:13: note: def_stmt: _54 = _48 - _49;
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: no optab.
common/pixel.c:192:13: note: vect_is_simple_use: operand _54
common/pixel.c:192:13: note: def_stmt: _54 = _48 - _49;
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: === vectorizable_assignment ===
common/pixel.c:192:13: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:192:13: note: ==> examining statement: tmp[i_120][2] = _55;
common/pixel.c:192:13: note: vect_is_simple_use: operand _55
common/pixel.c:192:13: note: def_stmt: _55 = (short int) _54;
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: no array mode for V8HI[4]
common/pixel.c:192:13: note: vect_model_store_cost: aligned.
common/pixel.c:192:13: note: vect_model_store_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:192:13: note: ==> examining statement: _57 = (unsigned short) t1_45;
common/pixel.c:192:13: note: vect_is_simple_use: operand t1_45
common/pixel.c:192:13: note: def_stmt: t1_45 = a0_28 - a1_33;
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: === vectorizable_conversion ===
common/pixel.c:192:13: note: vect_model_promotion_demotion_cost: inside_cost = 1, prologue_cost = 0 .
common/pixel.c:192:13: note: ==> examining statement: _58 = (unsigned short) t3_47;
common/pixel.c:192:13: note: vect_is_simple_use: operand t3_47
common/pixel.c:192:13: note: def_stmt: t3_47 = a2_38 - a3_43;
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: === vectorizable_conversion ===
common/pixel.c:192:13: note: vect_model_promotion_demotion_cost: inside_cost = 1, prologue_cost = 0 .
common/pixel.c:192:13: note: ==> examining statement: _59 = _57 + _58;
common/pixel.c:192:13: note: vect_is_simple_use: operand _57
common/pixel.c:192:13: note: def_stmt: _57 = (unsigned short) t1_45;
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: vect_is_simple_use: operand _58
common/pixel.c:192:13: note: def_stmt: _58 = (unsigned short) t3_47;
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: === vectorizable_operation ===
common/pixel.c:192:13: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:192:13: note: ==> examining statement: _60 = (short int) _59;
common/pixel.c:192:13: note: vect_is_simple_use: operand _59
common/pixel.c:192:13: note: def_stmt: _59 = _57 + _58;
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: vect_is_simple_use: operand _59
common/pixel.c:192:13: note: def_stmt: _59 = _57 + _58;
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: no optab.
common/pixel.c:192:13: note: vect_is_simple_use: operand _59
common/pixel.c:192:13: note: def_stmt: _59 = _57 + _58;
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: === vectorizable_assignment ===
common/pixel.c:192:13: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:192:13: note: ==> examining statement: tmp[i_120][1] = _60;
common/pixel.c:192:13: note: vect_is_simple_use: operand _60
common/pixel.c:192:13: note: def_stmt: _60 = (short int) _59;
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: no array mode for V8HI[4]
common/pixel.c:192:13: note: vect_model_store_cost: aligned.
common/pixel.c:192:13: note: vect_model_store_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:192:13: note: ==> examining statement: _64 = _57 - _58;
common/pixel.c:192:13: note: vect_is_simple_use: operand _57
common/pixel.c:192:13: note: def_stmt: _57 = (unsigned short) t1_45;
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: vect_is_simple_use: operand _58
common/pixel.c:192:13: note: def_stmt: _58 = (unsigned short) t3_47;
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: === vectorizable_operation ===
common/pixel.c:192:13: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:192:13: note: ==> examining statement: _65 = (short int) _64;
common/pixel.c:192:13: note: vect_is_simple_use: operand _64
common/pixel.c:192:13: note: def_stmt: _64 = _57 - _58;
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: vect_is_simple_use: operand _64
common/pixel.c:192:13: note: def_stmt: _64 = _57 - _58;
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: no optab.
common/pixel.c:192:13: note: vect_is_simple_use: operand _64
common/pixel.c:192:13: note: def_stmt: _64 = _57 - _58;
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: === vectorizable_assignment ===
common/pixel.c:192:13: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:192:13: note: ==> examining statement: tmp[i_120][3] = _65;
common/pixel.c:192:13: note: vect_is_simple_use: operand _65
common/pixel.c:192:13: note: def_stmt: _65 = (short int) _64;
common/pixel.c:192:13: note: type of def: 3.
common/pixel.c:192:13: note: no array mode for V8HI[4]
common/pixel.c:192:13: note: vect_model_store_cost: aligned.
common/pixel.c:192:13: note: vect_model_store_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:192:13: note: ==> examining statement: i_67 = i_120 + 1;
common/pixel.c:192:13: note: irrelevant.
common/pixel.c:192:13: note: ==> examining statement: # DEBUG i => i_67
common/pixel.c:192:13: note: irrelevant.
common/pixel.c:192:13: note: ==> examining statement: p1_70 = p1_122 + pretmp_298;
common/pixel.c:192:13: note: irrelevant.
common/pixel.c:192:13: note: ==> examining statement: # DEBUG p1 => p1_70
common/pixel.c:192:13: note: irrelevant.
common/pixel.c:192:13: note: ==> examining statement: p2_73 = p2_123 + pretmp_299;
common/pixel.c:192:13: note: irrelevant.
common/pixel.c:192:13: note: ==> examining statement: # DEBUG p2 => p2_73
common/pixel.c:192:13: note: irrelevant.
common/pixel.c:192:13: note: ==> examining statement: # DEBUG p2 => p2_73
common/pixel.c:192:13: note: irrelevant.
common/pixel.c:192:13: note: ==> examining statement: # DEBUG p1 => p1_70
common/pixel.c:192:13: note: irrelevant.
common/pixel.c:192:13: note: ==> examining statement: # DEBUG i => i_67
common/pixel.c:192:13: note: irrelevant.
common/pixel.c:192:13: note: ==> examining statement: ivtmp_284 = ivtmp_288 - 1;
common/pixel.c:192:13: note: irrelevant.
common/pixel.c:192:13: note: ==> examining statement: if (ivtmp_284 != 0)
common/pixel.c:192:13: note: irrelevant.
common/pixel.c:192:13: note: vectorization_factor = 16, niters = 4
common/pixel.c:192:13: note: not vectorized: iteration count too small.
common/pixel.c:192:13: note: not vectorized: iteration count smaller than vectorization factor.
common/pixel.c:192:13: note: bad operation or unsupported loop bound.
common/pixel.c:179:12: note: vectorized 0 loops in function.
pixel_satd_wxh (uint8_t * pix1, int i_pix1, uint8_t * pix2, int i_pix2, int i_width, int i_height)
{
  int t3;
  int t2;
  int t1;
  int t0;
  int a3;
  int a2;
  int a1;
  int a0;
  int t3;
  int t2;
  int t1;
  int t0;
  int a3;
  int a2;
  int a1;
  int a0;
  uint8_t * p2;
  uint8_t * p1;
  int i;
  int i_satd;
  int y;
  int x;
  int16_t tmp[4][4];
  unsigned int ivtmp_12;
  sizetype _20;
  unsigned char _24;
  int _25;
  unsigned char _26;
  int _27;
  unsigned char _29;
  int _30;
  unsigned char _31;
  int _32;
  unsigned char _34;
  int _35;
  unsigned char _36;
  int _37;
  unsigned char _39;
  int _40;
  unsigned char _41;
  int _42;
  unsigned short _48;
  unsigned short _49;
  unsigned short _50;
  short int _51;
  unsigned short _54;
  short int _55;
  unsigned short _57;
  unsigned short _58;
  unsigned short _59;
  short int _60;
  unsigned short _64;
  short int _65;
  short int _74;
  int _75;
  short int _76;
  int _77;
  short int _80;
  int _81;
  short int _82;
  int _83;
  int _90;
  int _91;
  int _92;
  int _93;
  int _94;
  int _95;
  int _96;
  unsigned int ivtmp_284;
  unsigned int ivtmp_288;
  unsigned int ivtmp_289;
  int pretmp_290;
  int prephitmp_291;
  int pretmp_292;
  sizetype pretmp_293;
  int pretmp_294;
  sizetype pretmp_295;
  sizetype pretmp_298;
  sizetype pretmp_299;

  <bb 2>:
  # DEBUG i_satd => 0
  # DEBUG y => 0
  # DEBUG i_satd => 0
  # DEBUG y => 0
  # DEBUG pix2 => pix2_16(D)
  # DEBUG pix1 => pix1_15(D)
  if (i_height_18(D) > 0)
    goto <bb 3>;
  else
    goto <bb 18>;

  <bb 3>:
  pretmp_292 = i_pix1_68(D) * 4;
  pretmp_293 = (sizetype) pretmp_292;
  pretmp_294 = i_pix2_71(D) * 4;
  pretmp_295 = (sizetype) pretmp_294;
  goto <bb 16>;

  <bb 4>:

  <bb 5>:
  # x_113 = PHI <0(17), x_99(4)>
  # i_satd_22 = PHI <i_satd_63(17), i_satd_287(4)>
  # DEBUG i_satd => i_satd_22
  # DEBUG x => x_113
  _20 = (sizetype) x_113;
  p1_21 = pix1_117 + _20;
  # DEBUG p1 => p1_21
  p2_23 = pix2_118 + _20;
  # DEBUG p2 => p2_23
  # DEBUG i => 0
  # DEBUG p2 => p2_23
  # DEBUG p1 => p1_21
  # DEBUG i => 0

  <bb 6>:
  # i_120 = PHI <i_67(7), 0(5)>
  # p1_122 = PHI <p1_70(7), p1_21(5)>
  # p2_123 = PHI <p2_73(7), p2_23(5)>
  # ivtmp_288 = PHI <ivtmp_284(7), 4(5)>
  # DEBUG p2 => p2_123
  # DEBUG p1 => p1_122
  # DEBUG i => i_120
  _24 = *p1_122;
  _25 = (int) _24;
  _26 = *p2_123;
  _27 = (int) _26;
  a0_28 = _25 - _27;
  # DEBUG a0 => a0_28
  _29 = MEM[(uint8_t *)p1_122 + 1B];
  _30 = (int) _29;
  _31 = MEM[(uint8_t *)p2_123 + 1B];
  _32 = (int) _31;
  a1_33 = _30 - _32;
  # DEBUG a1 => a1_33
  _34 = MEM[(uint8_t *)p1_122 + 2B];
  _35 = (int) _34;
  _36 = MEM[(uint8_t *)p2_123 + 2B];
  _37 = (int) _36;
  a2_38 = _35 - _37;
  # DEBUG a2 => a2_38
  _39 = MEM[(uint8_t *)p1_122 + 3B];
  _40 = (int) _39;
  _41 = MEM[(uint8_t *)p2_123 + 3B];
  _42 = (int) _41;
  a3_43 = _40 - _42;
  # DEBUG a3 => a3_43
  t0_44 = a0_28 + a1_33;
  # DEBUG t0 => t0_44
  t1_45 = a0_28 - a1_33;
  # DEBUG t1 => t1_45
  t2_46 = a2_38 + a3_43;
  # DEBUG t2 => t2_46
  t3_47 = a2_38 - a3_43;
  # DEBUG t3 => t3_47
  _48 = (unsigned short) t0_44;
  _49 = (unsigned short) t2_46;
  _50 = _48 + _49;
  _51 = (short int) _50;
  tmp[i_120][0] = _51;
  _54 = _48 - _49;
  _55 = (short int) _54;
  tmp[i_120][2] = _55;
  _57 = (unsigned short) t1_45;
  _58 = (unsigned short) t3_47;
  _59 = _57 + _58;
  _60 = (short int) _59;
  tmp[i_120][1] = _60;
  _64 = _57 - _58;
  _65 = (short int) _64;
  tmp[i_120][3] = _65;
  i_67 = i_120 + 1;
  # DEBUG i => i_67
  p1_70 = p1_122 + pretmp_298;
  # DEBUG p1 => p1_70
  p2_73 = p2_123 + pretmp_299;
  # DEBUG p2 => p2_73
  # DEBUG p2 => p2_73
  # DEBUG p1 => p1_70
  # DEBUG i => i_67
  ivtmp_284 = ivtmp_288 - 1;
  if (ivtmp_284 != 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  goto <bb 6>;

  <bb 8>:

  <bb 9>:
  # i_satd_119 = PHI <i_satd_22(8), i_satd_97(10)>
  # i_121 = PHI <0(8), i_98(10)>
  # ivtmp_12 = PHI <4(8), ivtmp_289(10)>
  # DEBUG i => i_121
  # DEBUG i_satd => i_satd_119
  _74 = tmp[0][i_121];
  _75 = (int) _74;
  _76 = tmp[1][i_121];
  _77 = (int) _76;
  t0_78 = _75 + _77;
  # DEBUG t0 => t0_78
  t1_79 = _75 - _77;
  # DEBUG t1 => t1_79
  _80 = tmp[2][i_121];
  _81 = (int) _80;
  _82 = tmp[3][i_121];
  _83 = (int) _82;
  t2_84 = _81 + _83;
  # DEBUG t2 => t2_84
  t3_85 = _81 - _83;
  # DEBUG t3 => t3_85
  a0_86 = t0_78 + t2_84;
  # DEBUG a0 => a0_86
  a2_87 = t0_78 - t2_84;
  # DEBUG a2 => a2_87
  a1_88 = t1_79 + t3_85;
  # DEBUG a1 => a1_88
  a3_89 = t1_79 - t3_85;
  # DEBUG a3 => a3_89
  _90 = ABS_EXPR <a0_86>;
  _91 = ABS_EXPR <a1_88>;
  _92 = _90 + _91;
  _93 = ABS_EXPR <a2_87>;
  _94 = _92 + _93;
  _95 = ABS_EXPR <a3_89>;
  _96 = _94 + _95;
  i_satd_97 = _96 + i_satd_119;
  # DEBUG i_satd => i_satd_97
  i_98 = i_121 + 1;
  # DEBUG i => i_98
  # DEBUG i => i_98
  # DEBUG i_satd => i_satd_97
  ivtmp_289 = ivtmp_12 - 1;
  if (ivtmp_289 != 0)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  goto <bb 9>;

  <bb 11>:
  # i_satd_287 = PHI <i_satd_97(9)>
  x_99 = x_113 + 4;
  # DEBUG x => x_99
  # DEBUG i_satd => i_satd_287
  # DEBUG x => x_99
  if (i_width_19(D) > x_99)
    goto <bb 4>;
  else
    goto <bb 12>;

  <bb 12>:
  # i_satd_286 = PHI <i_satd_287(11)>

  <bb 13>:
  # i_satd_109 = PHI <i_satd_286(12), i_satd_63(16)>
  pix1_102 = pix1_117 + pretmp_293;
  # DEBUG pix1 => pix1_102
  pix2_105 = pix2_118 + pretmp_295;
  # DEBUG pix2 => pix2_105
  y_106 = y_62 + 4;
  # DEBUG y => y_106
  # DEBUG i_satd => i_satd_109
  # DEBUG y => y_106
  # DEBUG pix2 => pix2_105
  # DEBUG pix1 => pix1_102
  if (i_height_18(D) > y_106)
    goto <bb 15>;
  else
    goto <bb 14>;

  <bb 14>:
  # i_satd_285 = PHI <i_satd_109(13)>
  pretmp_290 = i_satd_285 >> 1;
  goto <bb 18>;

  <bb 15>:

  <bb 16>:
  # i_satd_63 = PHI <0(3), i_satd_109(15)>
  # pix1_117 = PHI <pix1_15(D)(3), pix1_102(15)>
  # pix2_118 = PHI <pix2_16(D)(3), pix2_105(15)>
  # y_62 = PHI <0(3), y_106(15)>
  # DEBUG i_satd => 0
  # DEBUG y => y_62
  # DEBUG pix2 => pix2_118
  # DEBUG pix1 => pix1_117
  # DEBUG i_satd => i_satd_63
  # DEBUG x => 0
  if (i_width_19(D) > 0)
    goto <bb 17>;
  else
    goto <bb 13>;

  <bb 17>:
  pretmp_298 = (sizetype) i_pix1_68(D);
  pretmp_299 = (sizetype) i_pix2_71(D);
  goto <bb 5>;

  <bb 18>:
  # prephitmp_291 = PHI <pretmp_290(14), 0(2)>
  tmp ={v} {CLOBBER};
  return prephitmp_291;

}



;; Function x264_pixel_sa8d_8x8 (x264_pixel_sa8d_8x8, funcdef_no=144, decl_uid=7948, cgraph_uid=144, symbol_order=187)


Analyzing loop at common/pixel.c:279
common/pixel.c:279:13: note: ===== analyze_loop_nest =====
common/pixel.c:279:13: note: === vect_analyze_loop_form ===
common/pixel.c:279:13: note: === get_loop_niters ===
Analyzing # of iterations of loop 7
  exit condition [7, + , 4294967295] != 0
  bounds on difference of bases: -7 ... -7
  result:
    # of iterations 7, bounded by 7
common/pixel.c:279:13: note: === vect_analyze_data_refs ===
Creating dr for diff[0][i_194]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &diff
	offset from base address: 0
	constant offset from base address: 0
	step: 2
	aligned to: 128
	base_object: diff
	Access function 0: {0, +, 1}_7
	Access function 1: 0
Creating dr for diff[1][i_194]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &diff
	offset from base address: 0
	constant offset from base address: 16
	step: 2
	aligned to: 128
	base_object: diff
	Access function 0: {0, +, 1}_7
	Access function 1: 1
Creating dr for diff[2][i_194]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &diff
	offset from base address: 0
	constant offset from base address: 32
	step: 2
	aligned to: 128
	base_object: diff
	Access function 0: {0, +, 1}_7
	Access function 1: 2
Creating dr for diff[3][i_194]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &diff
	offset from base address: 0
	constant offset from base address: 48
	step: 2
	aligned to: 128
	base_object: diff
	Access function 0: {0, +, 1}_7
	Access function 1: 3
Creating dr for diff[4][i_194]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &diff
	offset from base address: 0
	constant offset from base address: 64
	step: 2
	aligned to: 128
	base_object: diff
	Access function 0: {0, +, 1}_7
	Access function 1: 4
Creating dr for diff[5][i_194]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &diff
	offset from base address: 0
	constant offset from base address: 80
	step: 2
	aligned to: 128
	base_object: diff
	Access function 0: {0, +, 1}_7
	Access function 1: 5
Creating dr for diff[6][i_194]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &diff
	offset from base address: 0
	constant offset from base address: 96
	step: 2
	aligned to: 128
	base_object: diff
	Access function 0: {0, +, 1}_7
	Access function 1: 6
Creating dr for diff[7][i_194]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &diff
	offset from base address: 0
	constant offset from base address: 112
	step: 2
	aligned to: 128
	base_object: diff
	Access function 0: {0, +, 1}_7
	Access function 1: 7
common/pixel.c:279:13: note: got vectype for stmt: _109 = diff[0][i_194];
vector(8) short int
common/pixel.c:279:13: note: got vectype for stmt: _111 = diff[1][i_194];
vector(8) short int
common/pixel.c:279:13: note: got vectype for stmt: _115 = diff[2][i_194];
vector(8) short int
common/pixel.c:279:13: note: got vectype for stmt: _117 = diff[3][i_194];
vector(8) short int
common/pixel.c:279:13: note: got vectype for stmt: _125 = diff[4][i_194];
vector(8) short int
common/pixel.c:279:13: note: got vectype for stmt: _127 = diff[5][i_194];
vector(8) short int
common/pixel.c:279:13: note: got vectype for stmt: _131 = diff[6][i_194];
vector(8) short int
common/pixel.c:279:13: note: got vectype for stmt: _133 = diff[7][i_194];
vector(8) short int
common/pixel.c:279:13: note: === vect_analyze_scalar_cycles ===
common/pixel.c:279:13: note: Analyze phi: i_satd_193 = PHI <0(5), i_satd_9(7)>

common/pixel.c:279:13: note: Access function of PHI: {0, +, ((((((_161 + _174) + _158) + _155) + _152) + _149) + _146) + _143}_7
common/pixel.c:279:13: note: step: ((((((_161 + _174) + _158) + _155) + _152) + _149) + _146) + _143,  init: 0
common/pixel.c:279:13: note: step unknown.
common/pixel.c:279:13: note: Analyze phi: i_194 = PHI <0(5), i_353(7)>

common/pixel.c:279:13: note: Access function of PHI: {0, +, 1}_7
common/pixel.c:279:13: note: step: 1,  init: 0
common/pixel.c:279:13: note: Detected induction.
common/pixel.c:279:13: note: Analyze phi: ivtmp_422 = PHI <8(5), ivtmp_421(7)>

common/pixel.c:279:13: note: Access function of PHI: {8, +, 4294967295}_7
common/pixel.c:279:13: note: step: 4294967295,  init: 8
common/pixel.c:279:13: note: Detected induction.
common/pixel.c:279:13: note: Analyze phi: i_satd_193 = PHI <0(5), i_satd_9(7)>

common/pixel.c:279:13: note: swapping oprnds: i_satd_147 = i_satd_144 + _146;

common/pixel.c:279:13: note: swapping oprnds: i_satd_150 = i_satd_147 + _149;

common/pixel.c:279:13: note: swapping oprnds: i_satd_153 = i_satd_150 + _152;

common/pixel.c:279:13: note: swapping oprnds: i_satd_156 = i_satd_153 + _155;

common/pixel.c:279:13: note: swapping oprnds: i_satd_159 = i_satd_156 + _158;

common/pixel.c:279:13: note: swapping oprnds: i_satd_162 = i_satd_159 + _161;

common/pixel.c:279:13: note: swapping oprnds: i_satd_9 = i_satd_162 + _174;

common/pixel.c:279:13: note: reduction: detected reduction chain: i_satd_9 = _174 + i_satd_162;

common/pixel.c:279:13: note: Detected reduction.
common/pixel.c:279:13: note: === vect_pattern_recog ===
common/pixel.c:279:13: note: vect_is_simple_use: operand _174
common/pixel.c:279:13: note: def_stmt: _174 = ABS_EXPR <_191>;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: vect_is_simple_use: operand _174
common/pixel.c:279:13: note: def_stmt: _174 = ABS_EXPR <_191>;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: vect_is_simple_use: operand _174
common/pixel.c:279:13: note: def_stmt: _174 = ABS_EXPR <_191>;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: vect_is_simple_use: operand b3_124
common/pixel.c:279:13: note: def_stmt: b3_124 = t1_114 - t3_120;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: === vect_analyze_data_ref_accesses ===
common/pixel.c:279:13: note: === vect_mark_stmts_to_be_vectorized ===
common/pixel.c:279:13: note: init: phi relevant? i_satd_193 = PHI <0(5), i_satd_9(7)>
common/pixel.c:279:13: note: init: phi relevant? i_194 = PHI <0(5), i_353(7)>
common/pixel.c:279:13: note: init: phi relevant? ivtmp_422 = PHI <8(5), ivtmp_421(7)>
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG i => i_194
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG i_satd => i_satd_193
common/pixel.c:279:13: note: init: stmt relevant? _109 = diff[0][i_194];
common/pixel.c:279:13: note: init: stmt relevant? _110 = (int) _109;
common/pixel.c:279:13: note: init: stmt relevant? _111 = diff[1][i_194];
common/pixel.c:279:13: note: init: stmt relevant? _112 = (int) _111;
common/pixel.c:279:13: note: init: stmt relevant? t0_113 = _110 + _112;
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG t0 => t0_113
common/pixel.c:279:13: note: init: stmt relevant? t1_114 = _110 - _112;
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG t1 => t1_114
common/pixel.c:279:13: note: init: stmt relevant? _115 = diff[2][i_194];
common/pixel.c:279:13: note: init: stmt relevant? _116 = (int) _115;
common/pixel.c:279:13: note: init: stmt relevant? _117 = diff[3][i_194];
common/pixel.c:279:13: note: init: stmt relevant? _118 = (int) _117;
common/pixel.c:279:13: note: init: stmt relevant? t2_119 = _116 + _118;
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG t2 => t2_119
common/pixel.c:279:13: note: init: stmt relevant? t3_120 = _116 - _118;
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG t3 => t3_120
common/pixel.c:279:13: note: init: stmt relevant? b0_121 = t0_113 + t2_119;
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG b0 => b0_121
common/pixel.c:279:13: note: init: stmt relevant? b2_122 = t0_113 - t2_119;
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG b2 => b2_122
common/pixel.c:279:13: note: init: stmt relevant? b1_123 = t1_114 + t3_120;
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG b1 => b1_123
common/pixel.c:279:13: note: init: stmt relevant? b3_124 = t1_114 - t3_120;
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG b3 => b3_124
common/pixel.c:279:13: note: init: stmt relevant? _125 = diff[4][i_194];
common/pixel.c:279:13: note: init: stmt relevant? _126 = (int) _125;
common/pixel.c:279:13: note: init: stmt relevant? _127 = diff[5][i_194];
common/pixel.c:279:13: note: init: stmt relevant? _128 = (int) _127;
common/pixel.c:279:13: note: init: stmt relevant? t0_129 = _126 + _128;
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG t0 => t0_129
common/pixel.c:279:13: note: init: stmt relevant? t1_130 = _126 - _128;
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG t1 => t1_130
common/pixel.c:279:13: note: init: stmt relevant? _131 = diff[6][i_194];
common/pixel.c:279:13: note: init: stmt relevant? _132 = (int) _131;
common/pixel.c:279:13: note: init: stmt relevant? _133 = diff[7][i_194];
common/pixel.c:279:13: note: init: stmt relevant? _134 = (int) _133;
common/pixel.c:279:13: note: init: stmt relevant? t2_135 = _132 + _134;
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG t2 => t2_135
common/pixel.c:279:13: note: init: stmt relevant? t3_136 = _132 - _134;
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG t3 => t3_136
common/pixel.c:279:13: note: init: stmt relevant? b4_137 = t0_129 + t2_135;
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG b4 => b4_137
common/pixel.c:279:13: note: init: stmt relevant? b6_139 = t0_129 - t2_135;
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG b6 => b6_139
common/pixel.c:279:13: note: init: stmt relevant? b5_140 = t1_130 + t3_136;
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG b5 => b5_140
common/pixel.c:279:13: note: init: stmt relevant? b7_141 = t1_130 - t3_136;
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG b7 => b7_141
common/pixel.c:279:13: note: init: stmt relevant? _142 = b0_121 + b4_137;
common/pixel.c:279:13: note: init: stmt relevant? _143 = ABS_EXPR <_142>;
common/pixel.c:279:13: note: init: stmt relevant? i_satd_144 = _143 + i_satd_193;
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG i_satd => i_satd_144
common/pixel.c:279:13: note: init: stmt relevant? _145 = b0_121 - b4_137;
common/pixel.c:279:13: note: init: stmt relevant? _146 = ABS_EXPR <_145>;
common/pixel.c:279:13: note: init: stmt relevant? i_satd_147 = _146 + i_satd_144;
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG i_satd => i_satd_147
common/pixel.c:279:13: note: init: stmt relevant? _148 = b1_123 + b5_140;
common/pixel.c:279:13: note: init: stmt relevant? _149 = ABS_EXPR <_148>;
common/pixel.c:279:13: note: init: stmt relevant? i_satd_150 = _149 + i_satd_147;
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG i_satd => i_satd_150
common/pixel.c:279:13: note: init: stmt relevant? _151 = b1_123 - b5_140;
common/pixel.c:279:13: note: init: stmt relevant? _152 = ABS_EXPR <_151>;
common/pixel.c:279:13: note: init: stmt relevant? i_satd_153 = _152 + i_satd_150;
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG i_satd => i_satd_153
common/pixel.c:279:13: note: init: stmt relevant? _154 = b2_122 + b6_139;
common/pixel.c:279:13: note: init: stmt relevant? _155 = ABS_EXPR <_154>;
common/pixel.c:279:13: note: init: stmt relevant? i_satd_156 = _155 + i_satd_153;
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG i_satd => i_satd_156
common/pixel.c:279:13: note: init: stmt relevant? _157 = b2_122 - b6_139;
common/pixel.c:279:13: note: init: stmt relevant? _158 = ABS_EXPR <_157>;
common/pixel.c:279:13: note: init: stmt relevant? i_satd_159 = _158 + i_satd_156;
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG i_satd => i_satd_159
common/pixel.c:279:13: note: init: stmt relevant? _160 = b3_124 + b7_141;
common/pixel.c:279:13: note: init: stmt relevant? _161 = ABS_EXPR <_160>;
common/pixel.c:279:13: note: init: stmt relevant? i_satd_162 = _161 + i_satd_159;
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG i_satd => i_satd_162
common/pixel.c:279:13: note: init: stmt relevant? _191 = b3_124 - b7_141;
common/pixel.c:279:13: note: init: stmt relevant? _174 = ABS_EXPR <_191>;
common/pixel.c:279:13: note: init: stmt relevant? i_satd_9 = _174 + i_satd_162;
common/pixel.c:279:13: note: vec_stmt_relevant_p: used out of loop.
common/pixel.c:279:13: note: mark relevant 0, live 1.
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG i_satd => i_satd_9
common/pixel.c:279:13: note: init: stmt relevant? i_353 = i_194 + 1;
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG i => i_353
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG i => i_353
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG i_satd => i_satd_9
common/pixel.c:279:13: note: init: stmt relevant? ivtmp_421 = ivtmp_422 - 1;
common/pixel.c:279:13: note: init: stmt relevant? if (ivtmp_421 != 0)
common/pixel.c:279:13: note: worklist: examine stmt: i_satd_9 = _174 + i_satd_162;
common/pixel.c:279:13: note: vect_is_simple_use: operand _174
common/pixel.c:279:13: note: def_stmt: _174 = ABS_EXPR <_191>;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: vect_is_simple_use: operand i_satd_162
common/pixel.c:279:13: note: def_stmt: i_satd_162 = _161 + i_satd_159;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: i_satd_162 = _161 + i_satd_159;
common/pixel.c:279:13: note: vect_is_simple_use: operand _161
common/pixel.c:279:13: note: def_stmt: _161 = ABS_EXPR <_160>;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: vect_is_simple_use: operand i_satd_159
common/pixel.c:279:13: note: def_stmt: i_satd_159 = _158 + i_satd_156;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: i_satd_159 = _158 + i_satd_156;
common/pixel.c:279:13: note: vect_is_simple_use: operand _158
common/pixel.c:279:13: note: def_stmt: _158 = ABS_EXPR <_157>;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: vect_is_simple_use: operand i_satd_156
common/pixel.c:279:13: note: def_stmt: i_satd_156 = _155 + i_satd_153;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: i_satd_156 = _155 + i_satd_153;
common/pixel.c:279:13: note: vect_is_simple_use: operand _155
common/pixel.c:279:13: note: def_stmt: _155 = ABS_EXPR <_154>;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: vect_is_simple_use: operand i_satd_153
common/pixel.c:279:13: note: def_stmt: i_satd_153 = _152 + i_satd_150;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: i_satd_153 = _152 + i_satd_150;
common/pixel.c:279:13: note: vect_is_simple_use: operand _152
common/pixel.c:279:13: note: def_stmt: _152 = ABS_EXPR <_151>;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: vect_is_simple_use: operand i_satd_150
common/pixel.c:279:13: note: def_stmt: i_satd_150 = _149 + i_satd_147;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: i_satd_150 = _149 + i_satd_147;
common/pixel.c:279:13: note: vect_is_simple_use: operand _149
common/pixel.c:279:13: note: def_stmt: _149 = ABS_EXPR <_148>;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: vect_is_simple_use: operand i_satd_147
common/pixel.c:279:13: note: def_stmt: i_satd_147 = _146 + i_satd_144;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: i_satd_147 = _146 + i_satd_144;
common/pixel.c:279:13: note: vect_is_simple_use: operand _146
common/pixel.c:279:13: note: def_stmt: _146 = ABS_EXPR <_145>;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: vect_is_simple_use: operand i_satd_144
common/pixel.c:279:13: note: def_stmt: i_satd_144 = _143 + i_satd_193;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: i_satd_144 = _143 + i_satd_193;
common/pixel.c:279:13: note: vect_is_simple_use: operand _143
common/pixel.c:279:13: note: def_stmt: _143 = ABS_EXPR <_142>;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: vect_is_simple_use: operand i_satd_193
common/pixel.c:279:13: note: def_stmt: i_satd_193 = PHI <0(5), i_satd_9(7)>
common/pixel.c:279:13: note: type of def: 5.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: i_satd_193 = PHI <0(5), i_satd_9(7)>
common/pixel.c:279:13: note: vect_is_simple_use: operand 0
common/pixel.c:279:13: note: vect_is_simple_use: operand i_satd_9
common/pixel.c:279:13: note: def_stmt: i_satd_9 = _174 + i_satd_162;
common/pixel.c:279:13: note: type of def: 5.
common/pixel.c:279:13: note: reduc-stmt defining reduc-phi in the same nest.
common/pixel.c:279:13: note: worklist: examine stmt: _143 = ABS_EXPR <_142>;
common/pixel.c:279:13: note: vect_is_simple_use: operand _142
common/pixel.c:279:13: note: def_stmt: _142 = b0_121 + b4_137;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: _142 = b0_121 + b4_137;
common/pixel.c:279:13: note: vect_is_simple_use: operand b0_121
common/pixel.c:279:13: note: def_stmt: b0_121 = t0_113 + t2_119;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: vect_is_simple_use: operand b4_137
common/pixel.c:279:13: note: def_stmt: b4_137 = t0_129 + t2_135;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: b4_137 = t0_129 + t2_135;
common/pixel.c:279:13: note: vect_is_simple_use: operand t0_129
common/pixel.c:279:13: note: def_stmt: t0_129 = _126 + _128;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: vect_is_simple_use: operand t2_135
common/pixel.c:279:13: note: def_stmt: t2_135 = _132 + _134;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: t2_135 = _132 + _134;
common/pixel.c:279:13: note: vect_is_simple_use: operand _132
common/pixel.c:279:13: note: def_stmt: _132 = (int) _131;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: vect_is_simple_use: operand _134
common/pixel.c:279:13: note: def_stmt: _134 = (int) _133;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: _134 = (int) _133;
common/pixel.c:279:13: note: vect_is_simple_use: operand _133
common/pixel.c:279:13: note: def_stmt: _133 = diff[7][i_194];
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: _133 = diff[7][i_194];
common/pixel.c:279:13: note: worklist: examine stmt: _132 = (int) _131;
common/pixel.c:279:13: note: vect_is_simple_use: operand _131
common/pixel.c:279:13: note: def_stmt: _131 = diff[6][i_194];
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: _131 = diff[6][i_194];
common/pixel.c:279:13: note: worklist: examine stmt: t0_129 = _126 + _128;
common/pixel.c:279:13: note: vect_is_simple_use: operand _126
common/pixel.c:279:13: note: def_stmt: _126 = (int) _125;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: vect_is_simple_use: operand _128
common/pixel.c:279:13: note: def_stmt: _128 = (int) _127;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: _128 = (int) _127;
common/pixel.c:279:13: note: vect_is_simple_use: operand _127
common/pixel.c:279:13: note: def_stmt: _127 = diff[5][i_194];
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: _127 = diff[5][i_194];
common/pixel.c:279:13: note: worklist: examine stmt: _126 = (int) _125;
common/pixel.c:279:13: note: vect_is_simple_use: operand _125
common/pixel.c:279:13: note: def_stmt: _125 = diff[4][i_194];
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: _125 = diff[4][i_194];
common/pixel.c:279:13: note: worklist: examine stmt: b0_121 = t0_113 + t2_119;
common/pixel.c:279:13: note: vect_is_simple_use: operand t0_113
common/pixel.c:279:13: note: def_stmt: t0_113 = _110 + _112;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: vect_is_simple_use: operand t2_119
common/pixel.c:279:13: note: def_stmt: t2_119 = _116 + _118;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: t2_119 = _116 + _118;
common/pixel.c:279:13: note: vect_is_simple_use: operand _116
common/pixel.c:279:13: note: def_stmt: _116 = (int) _115;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: vect_is_simple_use: operand _118
common/pixel.c:279:13: note: def_stmt: _118 = (int) _117;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: _118 = (int) _117;
common/pixel.c:279:13: note: vect_is_simple_use: operand _117
common/pixel.c:279:13: note: def_stmt: _117 = diff[3][i_194];
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: _117 = diff[3][i_194];
common/pixel.c:279:13: note: worklist: examine stmt: _116 = (int) _115;
common/pixel.c:279:13: note: vect_is_simple_use: operand _115
common/pixel.c:279:13: note: def_stmt: _115 = diff[2][i_194];
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: _115 = diff[2][i_194];
common/pixel.c:279:13: note: worklist: examine stmt: t0_113 = _110 + _112;
common/pixel.c:279:13: note: vect_is_simple_use: operand _110
common/pixel.c:279:13: note: def_stmt: _110 = (int) _109;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: vect_is_simple_use: operand _112
common/pixel.c:279:13: note: def_stmt: _112 = (int) _111;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: _112 = (int) _111;
common/pixel.c:279:13: note: vect_is_simple_use: operand _111
common/pixel.c:279:13: note: def_stmt: _111 = diff[1][i_194];
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: _111 = diff[1][i_194];
common/pixel.c:279:13: note: worklist: examine stmt: _110 = (int) _109;
common/pixel.c:279:13: note: vect_is_simple_use: operand _109
common/pixel.c:279:13: note: def_stmt: _109 = diff[0][i_194];
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: _109 = diff[0][i_194];
common/pixel.c:279:13: note: worklist: examine stmt: _146 = ABS_EXPR <_145>;
common/pixel.c:279:13: note: vect_is_simple_use: operand _145
common/pixel.c:279:13: note: def_stmt: _145 = b0_121 - b4_137;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: _145 = b0_121 - b4_137;
common/pixel.c:279:13: note: vect_is_simple_use: operand b0_121
common/pixel.c:279:13: note: def_stmt: b0_121 = t0_113 + t2_119;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: already marked relevant/live.
common/pixel.c:279:13: note: vect_is_simple_use: operand b4_137
common/pixel.c:279:13: note: def_stmt: b4_137 = t0_129 + t2_135;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: already marked relevant/live.
common/pixel.c:279:13: note: worklist: examine stmt: _149 = ABS_EXPR <_148>;
common/pixel.c:279:13: note: vect_is_simple_use: operand _148
common/pixel.c:279:13: note: def_stmt: _148 = b1_123 + b5_140;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: _148 = b1_123 + b5_140;
common/pixel.c:279:13: note: vect_is_simple_use: operand b1_123
common/pixel.c:279:13: note: def_stmt: b1_123 = t1_114 + t3_120;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: vect_is_simple_use: operand b5_140
common/pixel.c:279:13: note: def_stmt: b5_140 = t1_130 + t3_136;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: b5_140 = t1_130 + t3_136;
common/pixel.c:279:13: note: vect_is_simple_use: operand t1_130
common/pixel.c:279:13: note: def_stmt: t1_130 = _126 - _128;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: vect_is_simple_use: operand t3_136
common/pixel.c:279:13: note: def_stmt: t3_136 = _132 - _134;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: t3_136 = _132 - _134;
common/pixel.c:279:13: note: vect_is_simple_use: operand _132
common/pixel.c:279:13: note: def_stmt: _132 = (int) _131;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: already marked relevant/live.
common/pixel.c:279:13: note: vect_is_simple_use: operand _134
common/pixel.c:279:13: note: def_stmt: _134 = (int) _133;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: already marked relevant/live.
common/pixel.c:279:13: note: worklist: examine stmt: t1_130 = _126 - _128;
common/pixel.c:279:13: note: vect_is_simple_use: operand _126
common/pixel.c:279:13: note: def_stmt: _126 = (int) _125;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: already marked relevant/live.
common/pixel.c:279:13: note: vect_is_simple_use: operand _128
common/pixel.c:279:13: note: def_stmt: _128 = (int) _127;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: already marked relevant/live.
common/pixel.c:279:13: note: worklist: examine stmt: b1_123 = t1_114 + t3_120;
common/pixel.c:279:13: note: vect_is_simple_use: operand t1_114
common/pixel.c:279:13: note: def_stmt: t1_114 = _110 - _112;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: vect_is_simple_use: operand t3_120
common/pixel.c:279:13: note: def_stmt: t3_120 = _116 - _118;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: t3_120 = _116 - _118;
common/pixel.c:279:13: note: vect_is_simple_use: operand _116
common/pixel.c:279:13: note: def_stmt: _116 = (int) _115;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: already marked relevant/live.
common/pixel.c:279:13: note: vect_is_simple_use: operand _118
common/pixel.c:279:13: note: def_stmt: _118 = (int) _117;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: already marked relevant/live.
common/pixel.c:279:13: note: worklist: examine stmt: t1_114 = _110 - _112;
common/pixel.c:279:13: note: vect_is_simple_use: operand _110
common/pixel.c:279:13: note: def_stmt: _110 = (int) _109;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: already marked relevant/live.
common/pixel.c:279:13: note: vect_is_simple_use: operand _112
common/pixel.c:279:13: note: def_stmt: _112 = (int) _111;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: already marked relevant/live.
common/pixel.c:279:13: note: worklist: examine stmt: _152 = ABS_EXPR <_151>;
common/pixel.c:279:13: note: vect_is_simple_use: operand _151
common/pixel.c:279:13: note: def_stmt: _151 = b1_123 - b5_140;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: _151 = b1_123 - b5_140;
common/pixel.c:279:13: note: vect_is_simple_use: operand b1_123
common/pixel.c:279:13: note: def_stmt: b1_123 = t1_114 + t3_120;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: already marked relevant/live.
common/pixel.c:279:13: note: vect_is_simple_use: operand b5_140
common/pixel.c:279:13: note: def_stmt: b5_140 = t1_130 + t3_136;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: already marked relevant/live.
common/pixel.c:279:13: note: worklist: examine stmt: _155 = ABS_EXPR <_154>;
common/pixel.c:279:13: note: vect_is_simple_use: operand _154
common/pixel.c:279:13: note: def_stmt: _154 = b2_122 + b6_139;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: _154 = b2_122 + b6_139;
common/pixel.c:279:13: note: vect_is_simple_use: operand b2_122
common/pixel.c:279:13: note: def_stmt: b2_122 = t0_113 - t2_119;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: vect_is_simple_use: operand b6_139
common/pixel.c:279:13: note: def_stmt: b6_139 = t0_129 - t2_135;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: b6_139 = t0_129 - t2_135;
common/pixel.c:279:13: note: vect_is_simple_use: operand t0_129
common/pixel.c:279:13: note: def_stmt: t0_129 = _126 + _128;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: already marked relevant/live.
common/pixel.c:279:13: note: vect_is_simple_use: operand t2_135
common/pixel.c:279:13: note: def_stmt: t2_135 = _132 + _134;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: already marked relevant/live.
common/pixel.c:279:13: note: worklist: examine stmt: b2_122 = t0_113 - t2_119;
common/pixel.c:279:13: note: vect_is_simple_use: operand t0_113
common/pixel.c:279:13: note: def_stmt: t0_113 = _110 + _112;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: already marked relevant/live.
common/pixel.c:279:13: note: vect_is_simple_use: operand t2_119
common/pixel.c:279:13: note: def_stmt: t2_119 = _116 + _118;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: already marked relevant/live.
common/pixel.c:279:13: note: worklist: examine stmt: _158 = ABS_EXPR <_157>;
common/pixel.c:279:13: note: vect_is_simple_use: operand _157
common/pixel.c:279:13: note: def_stmt: _157 = b2_122 - b6_139;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: _157 = b2_122 - b6_139;
common/pixel.c:279:13: note: vect_is_simple_use: operand b2_122
common/pixel.c:279:13: note: def_stmt: b2_122 = t0_113 - t2_119;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: already marked relevant/live.
common/pixel.c:279:13: note: vect_is_simple_use: operand b6_139
common/pixel.c:279:13: note: def_stmt: b6_139 = t0_129 - t2_135;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: already marked relevant/live.
common/pixel.c:279:13: note: worklist: examine stmt: _161 = ABS_EXPR <_160>;
common/pixel.c:279:13: note: vect_is_simple_use: operand _160
common/pixel.c:279:13: note: def_stmt: _160 = b3_124 + b7_141;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: _160 = b3_124 + b7_141;
common/pixel.c:279:13: note: vect_is_simple_use: operand b3_124
common/pixel.c:279:13: note: def_stmt: b3_124 = t1_114 - t3_120;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: vect_is_simple_use: operand b7_141
common/pixel.c:279:13: note: def_stmt: b7_141 = t1_130 - t3_136;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: b7_141 = t1_130 - t3_136;
common/pixel.c:279:13: note: vect_is_simple_use: operand t1_130
common/pixel.c:279:13: note: def_stmt: t1_130 = _126 - _128;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: already marked relevant/live.
common/pixel.c:279:13: note: vect_is_simple_use: operand t3_136
common/pixel.c:279:13: note: def_stmt: t3_136 = _132 - _134;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: already marked relevant/live.
common/pixel.c:279:13: note: worklist: examine stmt: b3_124 = t1_114 - t3_120;
common/pixel.c:279:13: note: vect_is_simple_use: operand t1_114
common/pixel.c:279:13: note: def_stmt: t1_114 = _110 - _112;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: already marked relevant/live.
common/pixel.c:279:13: note: vect_is_simple_use: operand t3_120
common/pixel.c:279:13: note: def_stmt: t3_120 = _116 - _118;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: already marked relevant/live.
common/pixel.c:279:13: note: worklist: examine stmt: _174 = ABS_EXPR <_191>;
common/pixel.c:279:13: note: vect_is_simple_use: operand _191
common/pixel.c:279:13: note: def_stmt: _191 = b3_124 - b7_141;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: _191 = b3_124 - b7_141;
common/pixel.c:279:13: note: vect_is_simple_use: operand b3_124
common/pixel.c:279:13: note: def_stmt: b3_124 = t1_114 - t3_120;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: already marked relevant/live.
common/pixel.c:279:13: note: vect_is_simple_use: operand b7_141
common/pixel.c:279:13: note: def_stmt: b7_141 = t1_130 - t3_136;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: already marked relevant/live.
common/pixel.c:279:13: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _109 = diff[0][i_194];
  stmt_b: _111 = diff[1][i_194];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_7)
  (chrec_b = {0, +, 1}_7)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 1)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _109 = diff[0][i_194];
  stmt_b: _115 = diff[2][i_194];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_7)
  (chrec_b = {0, +, 1}_7)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _109 = diff[0][i_194];
  stmt_b: _117 = diff[3][i_194];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_7)
  (chrec_b = {0, +, 1}_7)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _109 = diff[0][i_194];
  stmt_b: _125 = diff[4][i_194];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_7)
  (chrec_b = {0, +, 1}_7)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 4)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _109 = diff[0][i_194];
  stmt_b: _127 = diff[5][i_194];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_7)
  (chrec_b = {0, +, 1}_7)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 5)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _109 = diff[0][i_194];
  stmt_b: _131 = diff[6][i_194];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_7)
  (chrec_b = {0, +, 1}_7)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 6)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _109 = diff[0][i_194];
  stmt_b: _133 = diff[7][i_194];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_7)
  (chrec_b = {0, +, 1}_7)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _111 = diff[1][i_194];
  stmt_b: _115 = diff[2][i_194];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_7)
  (chrec_b = {0, +, 1}_7)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _111 = diff[1][i_194];
  stmt_b: _117 = diff[3][i_194];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_7)
  (chrec_b = {0, +, 1}_7)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _111 = diff[1][i_194];
  stmt_b: _125 = diff[4][i_194];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_7)
  (chrec_b = {0, +, 1}_7)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 4)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _111 = diff[1][i_194];
  stmt_b: _127 = diff[5][i_194];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_7)
  (chrec_b = {0, +, 1}_7)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 5)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _111 = diff[1][i_194];
  stmt_b: _131 = diff[6][i_194];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_7)
  (chrec_b = {0, +, 1}_7)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 6)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _111 = diff[1][i_194];
  stmt_b: _133 = diff[7][i_194];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_7)
  (chrec_b = {0, +, 1}_7)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _115 = diff[2][i_194];
  stmt_b: _117 = diff[3][i_194];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_7)
  (chrec_b = {0, +, 1}_7)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _115 = diff[2][i_194];
  stmt_b: _125 = diff[4][i_194];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_7)
  (chrec_b = {0, +, 1}_7)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 4)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _115 = diff[2][i_194];
  stmt_b: _127 = diff[5][i_194];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_7)
  (chrec_b = {0, +, 1}_7)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 5)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _115 = diff[2][i_194];
  stmt_b: _131 = diff[6][i_194];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_7)
  (chrec_b = {0, +, 1}_7)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 6)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _115 = diff[2][i_194];
  stmt_b: _133 = diff[7][i_194];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_7)
  (chrec_b = {0, +, 1}_7)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _117 = diff[3][i_194];
  stmt_b: _125 = diff[4][i_194];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_7)
  (chrec_b = {0, +, 1}_7)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 4)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _117 = diff[3][i_194];
  stmt_b: _127 = diff[5][i_194];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_7)
  (chrec_b = {0, +, 1}_7)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 5)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _117 = diff[3][i_194];
  stmt_b: _131 = diff[6][i_194];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_7)
  (chrec_b = {0, +, 1}_7)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 6)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _117 = diff[3][i_194];
  stmt_b: _133 = diff[7][i_194];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_7)
  (chrec_b = {0, +, 1}_7)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _125 = diff[4][i_194];
  stmt_b: _127 = diff[5][i_194];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_7)
  (chrec_b = {0, +, 1}_7)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 4)
  (chrec_b = 5)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _125 = diff[4][i_194];
  stmt_b: _131 = diff[6][i_194];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_7)
  (chrec_b = {0, +, 1}_7)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 4)
  (chrec_b = 6)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _125 = diff[4][i_194];
  stmt_b: _133 = diff[7][i_194];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_7)
  (chrec_b = {0, +, 1}_7)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 4)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _127 = diff[5][i_194];
  stmt_b: _131 = diff[6][i_194];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_7)
  (chrec_b = {0, +, 1}_7)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 5)
  (chrec_b = 6)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _127 = diff[5][i_194];
  stmt_b: _133 = diff[7][i_194];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_7)
  (chrec_b = {0, +, 1}_7)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 5)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _131 = diff[6][i_194];
  stmt_b: _133 = diff[7][i_194];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_7)
  (chrec_b = {0, +, 1}_7)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 6)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _109 = diff[0][i_194];
  stmt_b: _109 = diff[0][i_194];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_7)
  (chrec_b = {0, +, 1}_7)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 0)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _111 = diff[1][i_194];
  stmt_b: _111 = diff[1][i_194];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_7)
  (chrec_b = {0, +, 1}_7)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _115 = diff[2][i_194];
  stmt_b: _115 = diff[2][i_194];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_7)
  (chrec_b = {0, +, 1}_7)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _117 = diff[3][i_194];
  stmt_b: _117 = diff[3][i_194];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_7)
  (chrec_b = {0, +, 1}_7)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _125 = diff[4][i_194];
  stmt_b: _125 = diff[4][i_194];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_7)
  (chrec_b = {0, +, 1}_7)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 4)
  (chrec_b = 4)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _127 = diff[5][i_194];
  stmt_b: _127 = diff[5][i_194];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_7)
  (chrec_b = {0, +, 1}_7)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 5)
  (chrec_b = 5)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _131 = diff[6][i_194];
  stmt_b: _131 = diff[6][i_194];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_7)
  (chrec_b = {0, +, 1}_7)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 6)
  (chrec_b = 6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _133 = diff[7][i_194];
  stmt_b: _133 = diff[7][i_194];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_7)
  (chrec_b = {0, +, 1}_7)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 7)
  (chrec_b = 7)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/pixel.c:279:13: note: === vect_determine_vectorization_factor ===
common/pixel.c:279:13: note: ==> examining phi: i_satd_193 = PHI <0(5), i_satd_9(7)>

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining phi: i_194 = PHI <0(5), i_353(7)>

common/pixel.c:279:13: note: ==> examining phi: ivtmp_422 = PHI <8(5), ivtmp_421(7)>

common/pixel.c:279:13: note: ==> examining statement: # DEBUG i => i_194

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: # DEBUG i_satd => i_satd_193

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: _109 = diff[0][i_194];

common/pixel.c:279:13: note: get vectype for scalar type:  short int
common/pixel.c:279:13: note: vectype: vector(8) short int
common/pixel.c:279:13: note: nunits = 8
common/pixel.c:279:13: note: ==> examining statement: _110 = (int) _109;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  short int
common/pixel.c:279:13: note: vectype: vector(8) short int
common/pixel.c:279:13: note: nunits = 8
common/pixel.c:279:13: note: ==> examining statement: _111 = diff[1][i_194];

common/pixel.c:279:13: note: get vectype for scalar type:  short int
common/pixel.c:279:13: note: vectype: vector(8) short int
common/pixel.c:279:13: note: nunits = 8
common/pixel.c:279:13: note: ==> examining statement: _112 = (int) _111;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  short int
common/pixel.c:279:13: note: vectype: vector(8) short int
common/pixel.c:279:13: note: nunits = 8
common/pixel.c:279:13: note: ==> examining statement: t0_113 = _110 + _112;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: # DEBUG t0 => t0_113

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: t1_114 = _110 - _112;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: # DEBUG t1 => t1_114

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: _115 = diff[2][i_194];

common/pixel.c:279:13: note: get vectype for scalar type:  short int
common/pixel.c:279:13: note: vectype: vector(8) short int
common/pixel.c:279:13: note: nunits = 8
common/pixel.c:279:13: note: ==> examining statement: _116 = (int) _115;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  short int
common/pixel.c:279:13: note: vectype: vector(8) short int
common/pixel.c:279:13: note: nunits = 8
common/pixel.c:279:13: note: ==> examining statement: _117 = diff[3][i_194];

common/pixel.c:279:13: note: get vectype for scalar type:  short int
common/pixel.c:279:13: note: vectype: vector(8) short int
common/pixel.c:279:13: note: nunits = 8
common/pixel.c:279:13: note: ==> examining statement: _118 = (int) _117;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  short int
common/pixel.c:279:13: note: vectype: vector(8) short int
common/pixel.c:279:13: note: nunits = 8
common/pixel.c:279:13: note: ==> examining statement: t2_119 = _116 + _118;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: # DEBUG t2 => t2_119

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: t3_120 = _116 - _118;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: # DEBUG t3 => t3_120

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: b0_121 = t0_113 + t2_119;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: # DEBUG b0 => b0_121

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: b2_122 = t0_113 - t2_119;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: # DEBUG b2 => b2_122

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: b1_123 = t1_114 + t3_120;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: # DEBUG b1 => b1_123

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: b3_124 = t1_114 - t3_120;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: # DEBUG b3 => b3_124

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: _125 = diff[4][i_194];

common/pixel.c:279:13: note: get vectype for scalar type:  short int
common/pixel.c:279:13: note: vectype: vector(8) short int
common/pixel.c:279:13: note: nunits = 8
common/pixel.c:279:13: note: ==> examining statement: _126 = (int) _125;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  short int
common/pixel.c:279:13: note: vectype: vector(8) short int
common/pixel.c:279:13: note: nunits = 8
common/pixel.c:279:13: note: ==> examining statement: _127 = diff[5][i_194];

common/pixel.c:279:13: note: get vectype for scalar type:  short int
common/pixel.c:279:13: note: vectype: vector(8) short int
common/pixel.c:279:13: note: nunits = 8
common/pixel.c:279:13: note: ==> examining statement: _128 = (int) _127;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  short int
common/pixel.c:279:13: note: vectype: vector(8) short int
common/pixel.c:279:13: note: nunits = 8
common/pixel.c:279:13: note: ==> examining statement: t0_129 = _126 + _128;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: # DEBUG t0 => t0_129

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: t1_130 = _126 - _128;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: # DEBUG t1 => t1_130

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: _131 = diff[6][i_194];

common/pixel.c:279:13: note: get vectype for scalar type:  short int
common/pixel.c:279:13: note: vectype: vector(8) short int
common/pixel.c:279:13: note: nunits = 8
common/pixel.c:279:13: note: ==> examining statement: _132 = (int) _131;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  short int
common/pixel.c:279:13: note: vectype: vector(8) short int
common/pixel.c:279:13: note: nunits = 8
common/pixel.c:279:13: note: ==> examining statement: _133 = diff[7][i_194];

common/pixel.c:279:13: note: get vectype for scalar type:  short int
common/pixel.c:279:13: note: vectype: vector(8) short int
common/pixel.c:279:13: note: nunits = 8
common/pixel.c:279:13: note: ==> examining statement: _134 = (int) _133;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  short int
common/pixel.c:279:13: note: vectype: vector(8) short int
common/pixel.c:279:13: note: nunits = 8
common/pixel.c:279:13: note: ==> examining statement: t2_135 = _132 + _134;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: # DEBUG t2 => t2_135

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: t3_136 = _132 - _134;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: # DEBUG t3 => t3_136

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: b4_137 = t0_129 + t2_135;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: # DEBUG b4 => b4_137

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: b6_139 = t0_129 - t2_135;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: # DEBUG b6 => b6_139

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: b5_140 = t1_130 + t3_136;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: # DEBUG b5 => b5_140

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: b7_141 = t1_130 - t3_136;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: # DEBUG b7 => b7_141

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: _142 = b0_121 + b4_137;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: _143 = ABS_EXPR <_142>;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: i_satd_144 = _143 + i_satd_193;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: # DEBUG i_satd => i_satd_144

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: _145 = b0_121 - b4_137;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: _146 = ABS_EXPR <_145>;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: i_satd_147 = _146 + i_satd_144;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: # DEBUG i_satd => i_satd_147

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: _148 = b1_123 + b5_140;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: _149 = ABS_EXPR <_148>;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: i_satd_150 = _149 + i_satd_147;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: # DEBUG i_satd => i_satd_150

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: _151 = b1_123 - b5_140;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: _152 = ABS_EXPR <_151>;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: i_satd_153 = _152 + i_satd_150;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: # DEBUG i_satd => i_satd_153

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: _154 = b2_122 + b6_139;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: _155 = ABS_EXPR <_154>;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: i_satd_156 = _155 + i_satd_153;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: # DEBUG i_satd => i_satd_156

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: _157 = b2_122 - b6_139;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: _158 = ABS_EXPR <_157>;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: i_satd_159 = _158 + i_satd_156;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: # DEBUG i_satd => i_satd_159

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: _160 = b3_124 + b7_141;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: _161 = ABS_EXPR <_160>;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: i_satd_162 = _161 + i_satd_159;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: # DEBUG i_satd => i_satd_162

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: _191 = b3_124 - b7_141;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: _174 = ABS_EXPR <_191>;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: i_satd_9 = _174 + i_satd_162;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: # DEBUG i_satd => i_satd_9

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: i_353 = i_194 + 1;

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: # DEBUG i => i_353

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: # DEBUG i => i_353

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: # DEBUG i_satd => i_satd_9

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: ivtmp_421 = ivtmp_422 - 1;

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: if (ivtmp_421 != 0)

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: vectorization factor = 8
common/pixel.c:279:13: note: === vect_analyze_data_refs_alignment ===
common/pixel.c:279:13: note: vect_compute_data_ref_alignment:
common/pixel.c:279:13: note: misalign = 0 bytes of ref diff[0][i_194]
common/pixel.c:279:13: note: vect_compute_data_ref_alignment:
common/pixel.c:279:13: note: misalign = 0 bytes of ref diff[1][i_194]
common/pixel.c:279:13: note: vect_compute_data_ref_alignment:
common/pixel.c:279:13: note: misalign = 0 bytes of ref diff[2][i_194]
common/pixel.c:279:13: note: vect_compute_data_ref_alignment:
common/pixel.c:279:13: note: misalign = 0 bytes of ref diff[3][i_194]
common/pixel.c:279:13: note: vect_compute_data_ref_alignment:
common/pixel.c:279:13: note: misalign = 0 bytes of ref diff[4][i_194]
common/pixel.c:279:13: note: vect_compute_data_ref_alignment:
common/pixel.c:279:13: note: misalign = 0 bytes of ref diff[5][i_194]
common/pixel.c:279:13: note: vect_compute_data_ref_alignment:
common/pixel.c:279:13: note: misalign = 0 bytes of ref diff[6][i_194]
common/pixel.c:279:13: note: vect_compute_data_ref_alignment:
common/pixel.c:279:13: note: misalign = 0 bytes of ref diff[7][i_194]
common/pixel.c:279:13: note: === vect_prune_runtime_alias_test_list ===
common/pixel.c:279:13: note: === vect_enhance_data_refs_alignment ===
common/pixel.c:279:13: note: vect_can_advance_ivs_p:
common/pixel.c:279:13: note: Analyze phi: i_satd_193 = PHI <0(5), i_satd_9(7)>

common/pixel.c:279:13: note: reduc phi. skip.
common/pixel.c:279:13: note: Analyze phi: i_194 = PHI <0(5), i_353(7)>

common/pixel.c:279:13: note: Analyze phi: ivtmp_422 = PHI <8(5), ivtmp_421(7)>

common/pixel.c:279:13: note: vect_model_load_cost: aligned.
common/pixel.c:279:13: note: vect_get_data_access_cost: inside_cost = 1, outside_cost = 0.
common/pixel.c:279:13: note: vect_model_load_cost: aligned.
common/pixel.c:279:13: note: vect_get_data_access_cost: inside_cost = 2, outside_cost = 0.
common/pixel.c:279:13: note: vect_model_load_cost: aligned.
common/pixel.c:279:13: note: vect_get_data_access_cost: inside_cost = 3, outside_cost = 0.
common/pixel.c:279:13: note: vect_model_load_cost: aligned.
common/pixel.c:279:13: note: vect_get_data_access_cost: inside_cost = 4, outside_cost = 0.
common/pixel.c:279:13: note: vect_model_load_cost: aligned.
common/pixel.c:279:13: note: vect_get_data_access_cost: inside_cost = 5, outside_cost = 0.
common/pixel.c:279:13: note: vect_model_load_cost: aligned.
common/pixel.c:279:13: note: vect_get_data_access_cost: inside_cost = 6, outside_cost = 0.
common/pixel.c:279:13: note: vect_model_load_cost: aligned.
common/pixel.c:279:13: note: vect_get_data_access_cost: inside_cost = 7, outside_cost = 0.
common/pixel.c:279:13: note: vect_model_load_cost: aligned.
common/pixel.c:279:13: note: vect_get_data_access_cost: inside_cost = 8, outside_cost = 0.
common/pixel.c:279:13: note: === vect_analyze_slp ===
common/pixel.c:279:13: note: Build SLP for i_satd_144 = _143 + i_satd_193;

common/pixel.c:279:13: note: Build SLP for i_satd_147 = _146 + i_satd_144;

common/pixel.c:279:13: note: Build SLP for i_satd_150 = _149 + i_satd_147;

common/pixel.c:279:13: note: Build SLP for i_satd_153 = _152 + i_satd_150;

common/pixel.c:279:13: note: Build SLP for i_satd_156 = _155 + i_satd_153;

common/pixel.c:279:13: note: Build SLP for i_satd_159 = _158 + i_satd_156;

common/pixel.c:279:13: note: Build SLP for i_satd_162 = _161 + i_satd_159;

common/pixel.c:279:13: note: Build SLP for i_satd_9 = _174 + i_satd_162;

common/pixel.c:279:13: note: vect_is_simple_use: operand _143
common/pixel.c:279:13: note: def_stmt: _143 = ABS_EXPR <_142>;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: vect_is_simple_use: operand i_satd_193
common/pixel.c:279:13: note: def_stmt: i_satd_193 = PHI <0(5), i_satd_9(7)>
common/pixel.c:279:13: note: type of def: 5.
common/pixel.c:279:13: note: vect_is_simple_use: operand _146
common/pixel.c:279:13: note: def_stmt: _146 = ABS_EXPR <_145>;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: vect_is_simple_use: operand i_satd_144
common/pixel.c:279:13: note: def_stmt: i_satd_144 = _143 + i_satd_193;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: vect_is_simple_use: operand _149
common/pixel.c:279:13: note: def_stmt: _149 = ABS_EXPR <_148>;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: vect_is_simple_use: operand i_satd_147
common/pixel.c:279:13: note: def_stmt: i_satd_147 = _146 + i_satd_144;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: vect_is_simple_use: operand _152
common/pixel.c:279:13: note: def_stmt: _152 = ABS_EXPR <_151>;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: vect_is_simple_use: operand i_satd_150
common/pixel.c:279:13: note: def_stmt: i_satd_150 = _149 + i_satd_147;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: vect_is_simple_use: operand _155
common/pixel.c:279:13: note: def_stmt: _155 = ABS_EXPR <_154>;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: vect_is_simple_use: operand i_satd_153
common/pixel.c:279:13: note: def_stmt: i_satd_153 = _152 + i_satd_150;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: vect_is_simple_use: operand _158
common/pixel.c:279:13: note: def_stmt: _158 = ABS_EXPR <_157>;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: vect_is_simple_use: operand i_satd_156
common/pixel.c:279:13: note: def_stmt: i_satd_156 = _155 + i_satd_153;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: vect_is_simple_use: operand _161
common/pixel.c:279:13: note: def_stmt: _161 = ABS_EXPR <_160>;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: vect_is_simple_use: operand i_satd_159
common/pixel.c:279:13: note: def_stmt: i_satd_159 = _158 + i_satd_156;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: vect_is_simple_use: operand _174
common/pixel.c:279:13: note: def_stmt: _174 = ABS_EXPR <_191>;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: vect_is_simple_use: operand i_satd_162
common/pixel.c:279:13: note: def_stmt: i_satd_162 = _161 + i_satd_159;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: Build SLP for _143 = ABS_EXPR <_142>;

common/pixel.c:279:13: note: Build SLP for _146 = ABS_EXPR <_145>;

common/pixel.c:279:13: note: Build SLP for _149 = ABS_EXPR <_148>;

common/pixel.c:279:13: note: Build SLP for _152 = ABS_EXPR <_151>;

common/pixel.c:279:13: note: Build SLP for _155 = ABS_EXPR <_154>;

common/pixel.c:279:13: note: Build SLP for _158 = ABS_EXPR <_157>;

common/pixel.c:279:13: note: Build SLP for _161 = ABS_EXPR <_160>;

common/pixel.c:279:13: note: Build SLP for _174 = ABS_EXPR <_191>;

common/pixel.c:279:13: note: vect_is_simple_use: operand _142
common/pixel.c:279:13: note: def_stmt: _142 = b0_121 + b4_137;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: vect_is_simple_use: operand _145
common/pixel.c:279:13: note: def_stmt: _145 = b0_121 - b4_137;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: vect_is_simple_use: operand _148
common/pixel.c:279:13: note: def_stmt: _148 = b1_123 + b5_140;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: vect_is_simple_use: operand _151
common/pixel.c:279:13: note: def_stmt: _151 = b1_123 - b5_140;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: vect_is_simple_use: operand _154
common/pixel.c:279:13: note: def_stmt: _154 = b2_122 + b6_139;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: vect_is_simple_use: operand _157
common/pixel.c:279:13: note: def_stmt: _157 = b2_122 - b6_139;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: vect_is_simple_use: operand _160
common/pixel.c:279:13: note: def_stmt: _160 = b3_124 + b7_141;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: vect_is_simple_use: operand _191
common/pixel.c:279:13: note: def_stmt: _191 = b3_124 - b7_141;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: Build SLP for _142 = b0_121 + b4_137;

common/pixel.c:279:13: note: Build SLP for _145 = b0_121 - b4_137;

common/pixel.c:279:13: note: Build SLP failed: different operation in stmt _145 = b0_121 - b4_137;

common/pixel.c:279:13: note: Build SLP for _148 = b1_123 + b5_140;

common/pixel.c:279:13: note: Build SLP for _151 = b1_123 - b5_140;

common/pixel.c:279:13: note: Build SLP failed: different operation in stmt _151 = b1_123 - b5_140;

common/pixel.c:279:13: note: Build SLP for _154 = b2_122 + b6_139;

common/pixel.c:279:13: note: Build SLP for _157 = b2_122 - b6_139;

common/pixel.c:279:13: note: Build SLP failed: different operation in stmt _157 = b2_122 - b6_139;

common/pixel.c:279:13: note: Build SLP for _160 = b3_124 + b7_141;

common/pixel.c:279:13: note: Build SLP for _191 = b3_124 - b7_141;

common/pixel.c:279:13: note: Build SLP failed: different operation in stmt _191 = b3_124 - b7_141;


Analyzing loop at common/pixel.c:262
common/pixel.c:262:13: note: ===== analyze_loop_nest =====
common/pixel.c:262:13: note: === vect_analyze_loop_form ===
common/pixel.c:262:13: note: === get_loop_niters ===
Analyzing # of iterations of loop 8
  exit condition [7, + , 4294967295] != 0
  bounds on difference of bases: -7 ... -7
  result:
    # of iterations 7, bounded by 7
common/pixel.c:262:13: note: === vect_analyze_data_refs ===
Creating dr for *pix1_11
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: pix1_2(D)
	offset from base address: 0
	constant offset from base address: 0
	step: (ssizetype) pretmp_424
	aligned to: 128
	base_object: *pix1_2(D)
	Access function 0: {0B, +, pretmp_424}_8
Creating dr for *pix2_189
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: pix2_4(D)
	offset from base address: 0
	constant offset from base address: 0
	step: (ssizetype) pretmp_425
	aligned to: 128
	base_object: *pix2_4(D)
	Access function 0: {0B, +, pretmp_425}_8
Creating dr for MEM[(uint8_t *)pix1_11 + 1B]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: pix1_2(D)
	offset from base address: 0
	constant offset from base address: 1
	step: (ssizetype) pretmp_424
	aligned to: 128
	base_object: *pix1_2(D)
	Access function 0: {1B, +, pretmp_424}_8
Creating dr for MEM[(uint8_t *)pix2_189 + 1B]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: pix2_4(D)
	offset from base address: 0
	constant offset from base address: 1
	step: (ssizetype) pretmp_425
	aligned to: 128
	base_object: *pix2_4(D)
	Access function 0: {1B, +, pretmp_425}_8
Creating dr for MEM[(uint8_t *)pix1_11 + 2B]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: pix1_2(D)
	offset from base address: 0
	constant offset from base address: 2
	step: (ssizetype) pretmp_424
	aligned to: 128
	base_object: *pix1_2(D)
	Access function 0: {2B, +, pretmp_424}_8
Creating dr for MEM[(uint8_t *)pix2_189 + 2B]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: pix2_4(D)
	offset from base address: 0
	constant offset from base address: 2
	step: (ssizetype) pretmp_425
	aligned to: 128
	base_object: *pix2_4(D)
	Access function 0: {2B, +, pretmp_425}_8
Creating dr for MEM[(uint8_t *)pix1_11 + 3B]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: pix1_2(D)
	offset from base address: 0
	constant offset from base address: 3
	step: (ssizetype) pretmp_424
	aligned to: 128
	base_object: *pix1_2(D)
	Access function 0: {3B, +, pretmp_424}_8
Creating dr for MEM[(uint8_t *)pix2_189 + 3B]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: pix2_4(D)
	offset from base address: 0
	constant offset from base address: 3
	step: (ssizetype) pretmp_425
	aligned to: 128
	base_object: *pix2_4(D)
	Access function 0: {3B, +, pretmp_425}_8
Creating dr for MEM[(uint8_t *)pix1_11 + 4B]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: pix1_2(D)
	offset from base address: 0
	constant offset from base address: 4
	step: (ssizetype) pretmp_424
	aligned to: 128
	base_object: *pix1_2(D)
	Access function 0: {4B, +, pretmp_424}_8
Creating dr for MEM[(uint8_t *)pix2_189 + 4B]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: pix2_4(D)
	offset from base address: 0
	constant offset from base address: 4
	step: (ssizetype) pretmp_425
	aligned to: 128
	base_object: *pix2_4(D)
	Access function 0: {4B, +, pretmp_425}_8
Creating dr for MEM[(uint8_t *)pix1_11 + 5B]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: pix1_2(D)
	offset from base address: 0
	constant offset from base address: 5
	step: (ssizetype) pretmp_424
	aligned to: 128
	base_object: *pix1_2(D)
	Access function 0: {5B, +, pretmp_424}_8
Creating dr for MEM[(uint8_t *)pix2_189 + 5B]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: pix2_4(D)
	offset from base address: 0
	constant offset from base address: 5
	step: (ssizetype) pretmp_425
	aligned to: 128
	base_object: *pix2_4(D)
	Access function 0: {5B, +, pretmp_425}_8
Creating dr for MEM[(uint8_t *)pix1_11 + 6B]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: pix1_2(D)
	offset from base address: 0
	constant offset from base address: 6
	step: (ssizetype) pretmp_424
	aligned to: 128
	base_object: *pix1_2(D)
	Access function 0: {6B, +, pretmp_424}_8
Creating dr for MEM[(uint8_t *)pix2_189 + 6B]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: pix2_4(D)
	offset from base address: 0
	constant offset from base address: 6
	step: (ssizetype) pretmp_425
	aligned to: 128
	base_object: *pix2_4(D)
	Access function 0: {6B, +, pretmp_425}_8
Creating dr for MEM[(uint8_t *)pix1_11 + 7B]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: pix1_2(D)
	offset from base address: 0
	constant offset from base address: 7
	step: (ssizetype) pretmp_424
	aligned to: 128
	base_object: *pix1_2(D)
	Access function 0: {7B, +, pretmp_424}_8
Creating dr for MEM[(uint8_t *)pix2_189 + 7B]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: pix2_4(D)
	offset from base address: 0
	constant offset from base address: 7
	step: (ssizetype) pretmp_425
	aligned to: 128
	base_object: *pix2_4(D)
	Access function 0: {7B, +, pretmp_425}_8
Creating dr for diff[i_13][0]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &diff
	offset from base address: 0
	constant offset from base address: 0
	step: 16
	aligned to: 128
	base_object: diff
	Access function 0: 0
	Access function 1: {0, +, 1}_8
Creating dr for diff[i_13][4]
analyze_innermost: success.
	base_address: &diff
	offset from base address: 0
	constant offset from base address: 8
	step: 16
	aligned to: 128
	base_object: diff
	Access function 0: 4
	Access function 1: {0, +, 1}_8
Creating dr for diff[i_13][1]
analyze_innermost: success.
	base_address: &diff
	offset from base address: 0
	constant offset from base address: 2
	step: 16
	aligned to: 128
	base_object: diff
	Access function 0: 1
	Access function 1: {0, +, 1}_8
Creating dr for diff[i_13][5]
analyze_innermost: success.
	base_address: &diff
	offset from base address: 0
	constant offset from base address: 10
	step: 16
	aligned to: 128
	base_object: diff
	Access function 0: 5
	Access function 1: {0, +, 1}_8
Creating dr for diff[i_13][2]
analyze_innermost: success.
	base_address: &diff
	offset from base address: 0
	constant offset from base address: 4
	step: 16
	aligned to: 128
	base_object: diff
	Access function 0: 2
	Access function 1: {0, +, 1}_8
Creating dr for diff[i_13][6]
analyze_innermost: success.
	base_address: &diff
	offset from base address: 0
	constant offset from base address: 12
	step: 16
	aligned to: 128
	base_object: diff
	Access function 0: 6
	Access function 1: {0, +, 1}_8
Creating dr for diff[i_13][3]
analyze_innermost: success.
	base_address: &diff
	offset from base address: 0
	constant offset from base address: 6
	step: 16
	aligned to: 128
	base_object: diff
	Access function 0: 3
	Access function 1: {0, +, 1}_8
Creating dr for diff[i_13][7]
analyze_innermost: success.
	base_address: &diff
	offset from base address: 0
	constant offset from base address: 14
	step: 16
	aligned to: 128
	base_object: diff
	Access function 0: 7
	Access function 1: {0, +, 1}_8
common/pixel.c:262:13: note: got vectype for stmt: _21 = *pix1_11;
vector(16) unsigned char
common/pixel.c:262:13: note: got vectype for stmt: _23 = *pix2_189;
vector(16) unsigned char
common/pixel.c:262:13: note: got vectype for stmt: _26 = MEM[(uint8_t *)pix1_11 + 1B];
vector(16) unsigned char
common/pixel.c:262:13: note: got vectype for stmt: _28 = MEM[(uint8_t *)pix2_189 + 1B];
vector(16) unsigned char
common/pixel.c:262:13: note: got vectype for stmt: _31 = MEM[(uint8_t *)pix1_11 + 2B];
vector(16) unsigned char
common/pixel.c:262:13: note: got vectype for stmt: _33 = MEM[(uint8_t *)pix2_189 + 2B];
vector(16) unsigned char
common/pixel.c:262:13: note: got vectype for stmt: _36 = MEM[(uint8_t *)pix1_11 + 3B];
vector(16) unsigned char
common/pixel.c:262:13: note: got vectype for stmt: _38 = MEM[(uint8_t *)pix2_189 + 3B];
vector(16) unsigned char
common/pixel.c:262:13: note: got vectype for stmt: _41 = MEM[(uint8_t *)pix1_11 + 4B];
vector(16) unsigned char
common/pixel.c:262:13: note: got vectype for stmt: _43 = MEM[(uint8_t *)pix2_189 + 4B];
vector(16) unsigned char
common/pixel.c:262:13: note: got vectype for stmt: _46 = MEM[(uint8_t *)pix1_11 + 5B];
vector(16) unsigned char
common/pixel.c:262:13: note: got vectype for stmt: _48 = MEM[(uint8_t *)pix2_189 + 5B];
vector(16) unsigned char
common/pixel.c:262:13: note: got vectype for stmt: _51 = MEM[(uint8_t *)pix1_11 + 6B];
vector(16) unsigned char
common/pixel.c:262:13: note: got vectype for stmt: _53 = MEM[(uint8_t *)pix2_189 + 6B];
vector(16) unsigned char
common/pixel.c:262:13: note: got vectype for stmt: _56 = MEM[(uint8_t *)pix1_11 + 7B];
vector(16) unsigned char
common/pixel.c:262:13: note: got vectype for stmt: _58 = MEM[(uint8_t *)pix2_189 + 7B];
vector(16) unsigned char
common/pixel.c:262:13: note: got vectype for stmt: diff[i_13][0] = _181;
vector(8) short int
common/pixel.c:262:13: note: got vectype for stmt: diff[i_13][4] = _82;
vector(8) short int
common/pixel.c:262:13: note: got vectype for stmt: diff[i_13][1] = _183;
vector(8) short int
common/pixel.c:262:13: note: got vectype for stmt: diff[i_13][5] = _88;
vector(8) short int
common/pixel.c:262:13: note: got vectype for stmt: diff[i_13][2] = _185;
vector(8) short int
common/pixel.c:262:13: note: got vectype for stmt: diff[i_13][6] = _94;
vector(8) short int
common/pixel.c:262:13: note: got vectype for stmt: diff[i_13][3] = _187;
vector(8) short int
common/pixel.c:262:13: note: got vectype for stmt: diff[i_13][7] = _100;
vector(8) short int
common/pixel.c:262:13: note: === vect_analyze_scalar_cycles ===
common/pixel.c:262:13: note: Analyze phi: i_13 = PHI <i_102(4), 0(2)>

common/pixel.c:262:13: note: Access function of PHI: {0, +, 1}_8
common/pixel.c:262:13: note: step: 1,  init: 0
common/pixel.c:262:13: note: Detected induction.
common/pixel.c:262:13: note: Analyze phi: pix1_11 = PHI <pix1_138(4), pix1_2(D)(2)>

common/pixel.c:262:13: note: Access function of PHI: {pix1_2(D), +, pretmp_424}_8
common/pixel.c:262:13: note: step: pretmp_424,  init: pix1_2(D)
common/pixel.c:262:13: note: Detected induction.
common/pixel.c:262:13: note: Analyze phi: pix2_189 = PHI <pix2_105(4), pix2_4(D)(2)>

common/pixel.c:262:13: note: Access function of PHI: {pix2_4(D), +, pretmp_425}_8
common/pixel.c:262:13: note: step: pretmp_425,  init: pix2_4(D)
common/pixel.c:262:13: note: Detected induction.
common/pixel.c:262:13: note: Analyze phi: .MEM_175 = PHI <.MEM_101(4), .MEM_1(D)(2)>

common/pixel.c:262:13: note: Analyze phi: ivtmp_419 = PHI <ivtmp_418(4), 8(2)>

common/pixel.c:262:13: note: Access function of PHI: {8, +, 4294967295}_8
common/pixel.c:262:13: note: step: 4294967295,  init: 8
common/pixel.c:262:13: note: Detected induction.
common/pixel.c:262:13: note: === vect_pattern_recog ===
common/pixel.c:262:13: note: === vect_analyze_data_ref_accesses ===
common/pixel.c:262:13: note: Detected interleaving diff[i_13][0] and diff[i_13][1]
common/pixel.c:262:13: note: Detected interleaving diff[i_13][0] and diff[i_13][2]
common/pixel.c:262:13: note: Detected interleaving diff[i_13][0] and diff[i_13][3]
common/pixel.c:262:13: note: Detected interleaving diff[i_13][0] and diff[i_13][4]
common/pixel.c:262:13: note: Detected interleaving diff[i_13][0] and diff[i_13][5]
common/pixel.c:262:13: note: Detected interleaving diff[i_13][0] and diff[i_13][6]
common/pixel.c:262:13: note: Detected interleaving diff[i_13][0] and diff[i_13][7]
common/pixel.c:262:13: note: Detected interleaving of size 8
common/pixel.c:262:13: note: === vect_mark_stmts_to_be_vectorized ===
common/pixel.c:262:13: note: init: phi relevant? i_13 = PHI <i_102(4), 0(2)>
common/pixel.c:262:13: note: init: phi relevant? pix1_11 = PHI <pix1_138(4), pix1_2(D)(2)>
common/pixel.c:262:13: note: init: phi relevant? pix2_189 = PHI <pix2_105(4), pix2_4(D)(2)>
common/pixel.c:262:13: note: init: phi relevant? .MEM_175 = PHI <.MEM_101(4), .MEM_1(D)(2)>
common/pixel.c:262:13: note: init: phi relevant? ivtmp_419 = PHI <ivtmp_418(4), 8(2)>
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG p2 => pix2_189
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG p1 => pix1_11
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG i => i_13
common/pixel.c:262:13: note: init: stmt relevant? _21 = *pix1_11;
common/pixel.c:262:13: note: init: stmt relevant? _22 = (int) _21;
common/pixel.c:262:13: note: init: stmt relevant? _23 = *pix2_189;
common/pixel.c:262:13: note: init: stmt relevant? _24 = (int) _23;
common/pixel.c:262:13: note: init: stmt relevant? a0_25 = _22 - _24;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG a0 => a0_25
common/pixel.c:262:13: note: init: stmt relevant? _26 = MEM[(uint8_t *)pix1_11 + 1B];
common/pixel.c:262:13: note: init: stmt relevant? _27 = (int) _26;
common/pixel.c:262:13: note: init: stmt relevant? _28 = MEM[(uint8_t *)pix2_189 + 1B];
common/pixel.c:262:13: note: init: stmt relevant? _29 = (int) _28;
common/pixel.c:262:13: note: init: stmt relevant? a1_30 = _27 - _29;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG a1 => a1_30
common/pixel.c:262:13: note: init: stmt relevant? _31 = MEM[(uint8_t *)pix1_11 + 2B];
common/pixel.c:262:13: note: init: stmt relevant? _32 = (int) _31;
common/pixel.c:262:13: note: init: stmt relevant? _33 = MEM[(uint8_t *)pix2_189 + 2B];
common/pixel.c:262:13: note: init: stmt relevant? _34 = (int) _33;
common/pixel.c:262:13: note: init: stmt relevant? a2_35 = _32 - _34;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG a2 => a2_35
common/pixel.c:262:13: note: init: stmt relevant? _36 = MEM[(uint8_t *)pix1_11 + 3B];
common/pixel.c:262:13: note: init: stmt relevant? _37 = (int) _36;
common/pixel.c:262:13: note: init: stmt relevant? _38 = MEM[(uint8_t *)pix2_189 + 3B];
common/pixel.c:262:13: note: init: stmt relevant? _39 = (int) _38;
common/pixel.c:262:13: note: init: stmt relevant? a3_40 = _37 - _39;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG a3 => a3_40
common/pixel.c:262:13: note: init: stmt relevant? _41 = MEM[(uint8_t *)pix1_11 + 4B];
common/pixel.c:262:13: note: init: stmt relevant? _42 = (int) _41;
common/pixel.c:262:13: note: init: stmt relevant? _43 = MEM[(uint8_t *)pix2_189 + 4B];
common/pixel.c:262:13: note: init: stmt relevant? _44 = (int) _43;
common/pixel.c:262:13: note: init: stmt relevant? a4_45 = _42 - _44;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG a4 => a4_45
common/pixel.c:262:13: note: init: stmt relevant? _46 = MEM[(uint8_t *)pix1_11 + 5B];
common/pixel.c:262:13: note: init: stmt relevant? _47 = (int) _46;
common/pixel.c:262:13: note: init: stmt relevant? _48 = MEM[(uint8_t *)pix2_189 + 5B];
common/pixel.c:262:13: note: init: stmt relevant? _49 = (int) _48;
common/pixel.c:262:13: note: init: stmt relevant? a5_50 = _47 - _49;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG a5 => a5_50
common/pixel.c:262:13: note: init: stmt relevant? _51 = MEM[(uint8_t *)pix1_11 + 6B];
common/pixel.c:262:13: note: init: stmt relevant? _52 = (int) _51;
common/pixel.c:262:13: note: init: stmt relevant? _53 = MEM[(uint8_t *)pix2_189 + 6B];
common/pixel.c:262:13: note: init: stmt relevant? _54 = (int) _53;
common/pixel.c:262:13: note: init: stmt relevant? a6_55 = _52 - _54;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG a6 => a6_55
common/pixel.c:262:13: note: init: stmt relevant? _56 = MEM[(uint8_t *)pix1_11 + 7B];
common/pixel.c:262:13: note: init: stmt relevant? _57 = (int) _56;
common/pixel.c:262:13: note: init: stmt relevant? _58 = MEM[(uint8_t *)pix2_189 + 7B];
common/pixel.c:262:13: note: init: stmt relevant? _59 = (int) _58;
common/pixel.c:262:13: note: init: stmt relevant? a7_60 = _57 - _59;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG a7 => a7_60
common/pixel.c:262:13: note: init: stmt relevant? t0_61 = a0_25 + a1_30;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG t0 => t0_61
common/pixel.c:262:13: note: init: stmt relevant? t1_62 = a0_25 - a1_30;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG t1 => t1_62
common/pixel.c:262:13: note: init: stmt relevant? t2_63 = a2_35 + a3_40;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG t2 => t2_63
common/pixel.c:262:13: note: init: stmt relevant? t3_64 = a2_35 - a3_40;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG t3 => t3_64
common/pixel.c:262:13: note: init: stmt relevant? b0_65 = t0_61 + t2_63;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG b0 => b0_65
common/pixel.c:262:13: note: init: stmt relevant? b2_66 = t0_61 - t2_63;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG b2 => b2_66
common/pixel.c:262:13: note: init: stmt relevant? b1_67 = t1_62 + t3_64;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG b1 => b1_67
common/pixel.c:262:13: note: init: stmt relevant? b3_68 = t1_62 - t3_64;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG b3 => b3_68
common/pixel.c:262:13: note: init: stmt relevant? t0_69 = a4_45 + a5_50;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG t0 => t0_69
common/pixel.c:262:13: note: init: stmt relevant? t1_70 = a4_45 - a5_50;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG t1 => t1_70
common/pixel.c:262:13: note: init: stmt relevant? t2_71 = a6_55 + a7_60;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG t2 => t2_71
common/pixel.c:262:13: note: init: stmt relevant? t3_72 = a6_55 - a7_60;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG t3 => t3_72
common/pixel.c:262:13: note: init: stmt relevant? b4_73 = t0_69 + t2_71;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG b4 => b4_73
common/pixel.c:262:13: note: init: stmt relevant? b6_74 = t0_69 - t2_71;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG b6 => b6_74
common/pixel.c:262:13: note: init: stmt relevant? b5_75 = t1_70 + t3_72;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG b5 => b5_75
common/pixel.c:262:13: note: init: stmt relevant? b7_76 = t1_70 - t3_72;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG b7 => b7_76
common/pixel.c:262:13: note: init: stmt relevant? _180 = (unsigned short) b0_65;
common/pixel.c:262:13: note: init: stmt relevant? _78 = (unsigned short) b4_73;
common/pixel.c:262:13: note: init: stmt relevant? _79 = _78 + _180;
common/pixel.c:262:13: note: init: stmt relevant? _181 = (short int) _79;
common/pixel.c:262:13: note: init: stmt relevant? diff[i_13][0] = _181;
common/pixel.c:262:13: note: vec_stmt_relevant_p: stmt has vdefs.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: init: stmt relevant? _81 = _180 - _78;
common/pixel.c:262:13: note: init: stmt relevant? _82 = (short int) _81;
common/pixel.c:262:13: note: init: stmt relevant? diff[i_13][4] = _82;
common/pixel.c:262:13: note: vec_stmt_relevant_p: stmt has vdefs.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: init: stmt relevant? _182 = (unsigned short) b1_67;
common/pixel.c:262:13: note: init: stmt relevant? _84 = (unsigned short) b5_75;
common/pixel.c:262:13: note: init: stmt relevant? _85 = _84 + _182;
common/pixel.c:262:13: note: init: stmt relevant? _183 = (short int) _85;
common/pixel.c:262:13: note: init: stmt relevant? diff[i_13][1] = _183;
common/pixel.c:262:13: note: vec_stmt_relevant_p: stmt has vdefs.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: init: stmt relevant? _87 = _182 - _84;
common/pixel.c:262:13: note: init: stmt relevant? _88 = (short int) _87;
common/pixel.c:262:13: note: init: stmt relevant? diff[i_13][5] = _88;
common/pixel.c:262:13: note: vec_stmt_relevant_p: stmt has vdefs.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: init: stmt relevant? _184 = (unsigned short) b2_66;
common/pixel.c:262:13: note: init: stmt relevant? _90 = (unsigned short) b6_74;
common/pixel.c:262:13: note: init: stmt relevant? _91 = _90 + _184;
common/pixel.c:262:13: note: init: stmt relevant? _185 = (short int) _91;
common/pixel.c:262:13: note: init: stmt relevant? diff[i_13][2] = _185;
common/pixel.c:262:13: note: vec_stmt_relevant_p: stmt has vdefs.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: init: stmt relevant? _93 = _184 - _90;
common/pixel.c:262:13: note: init: stmt relevant? _94 = (short int) _93;
common/pixel.c:262:13: note: init: stmt relevant? diff[i_13][6] = _94;
common/pixel.c:262:13: note: vec_stmt_relevant_p: stmt has vdefs.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: init: stmt relevant? _186 = (unsigned short) b3_68;
common/pixel.c:262:13: note: init: stmt relevant? _96 = (unsigned short) b7_76;
common/pixel.c:262:13: note: init: stmt relevant? _97 = _96 + _186;
common/pixel.c:262:13: note: init: stmt relevant? _187 = (short int) _97;
common/pixel.c:262:13: note: init: stmt relevant? diff[i_13][3] = _187;
common/pixel.c:262:13: note: vec_stmt_relevant_p: stmt has vdefs.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: init: stmt relevant? _99 = _186 - _96;
common/pixel.c:262:13: note: init: stmt relevant? _100 = (short int) _99;
common/pixel.c:262:13: note: init: stmt relevant? diff[i_13][7] = _100;
common/pixel.c:262:13: note: vec_stmt_relevant_p: stmt has vdefs.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: init: stmt relevant? i_102 = i_13 + 1;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG i => i_102
common/pixel.c:262:13: note: init: stmt relevant? pix1_138 = pix1_11 + pretmp_424;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG p1 => pix1_138
common/pixel.c:262:13: note: init: stmt relevant? pix2_105 = pix2_189 + pretmp_425;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG p2 => pix2_105
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG p2 => pix2_105
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG p1 => pix1_138
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG i => i_102
common/pixel.c:262:13: note: init: stmt relevant? ivtmp_418 = ivtmp_419 - 1;
common/pixel.c:262:13: note: init: stmt relevant? if (ivtmp_418 != 0)
common/pixel.c:262:13: note: worklist: examine stmt: diff[i_13][7] = _100;
common/pixel.c:262:13: note: vect_is_simple_use: operand _100
common/pixel.c:262:13: note: def_stmt: _100 = (short int) _99;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _100 = (short int) _99;
common/pixel.c:262:13: note: vect_is_simple_use: operand _99
common/pixel.c:262:13: note: def_stmt: _99 = _186 - _96;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _99 = _186 - _96;
common/pixel.c:262:13: note: vect_is_simple_use: operand _186
common/pixel.c:262:13: note: def_stmt: _186 = (unsigned short) b3_68;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: vect_is_simple_use: operand _96
common/pixel.c:262:13: note: def_stmt: _96 = (unsigned short) b7_76;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _96 = (unsigned short) b7_76;
common/pixel.c:262:13: note: vect_is_simple_use: operand b7_76
common/pixel.c:262:13: note: def_stmt: b7_76 = t1_70 - t3_72;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: b7_76 = t1_70 - t3_72;
common/pixel.c:262:13: note: vect_is_simple_use: operand t1_70
common/pixel.c:262:13: note: def_stmt: t1_70 = a4_45 - a5_50;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: vect_is_simple_use: operand t3_72
common/pixel.c:262:13: note: def_stmt: t3_72 = a6_55 - a7_60;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: t3_72 = a6_55 - a7_60;
common/pixel.c:262:13: note: vect_is_simple_use: operand a6_55
common/pixel.c:262:13: note: def_stmt: a6_55 = _52 - _54;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: vect_is_simple_use: operand a7_60
common/pixel.c:262:13: note: def_stmt: a7_60 = _57 - _59;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: a7_60 = _57 - _59;
common/pixel.c:262:13: note: vect_is_simple_use: operand _57
common/pixel.c:262:13: note: def_stmt: _57 = (int) _56;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: vect_is_simple_use: operand _59
common/pixel.c:262:13: note: def_stmt: _59 = (int) _58;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _59 = (int) _58;
common/pixel.c:262:13: note: vect_is_simple_use: operand _58
common/pixel.c:262:13: note: def_stmt: _58 = MEM[(uint8_t *)pix2_189 + 7B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _58 = MEM[(uint8_t *)pix2_189 + 7B];
common/pixel.c:262:13: note: worklist: examine stmt: _57 = (int) _56;
common/pixel.c:262:13: note: vect_is_simple_use: operand _56
common/pixel.c:262:13: note: def_stmt: _56 = MEM[(uint8_t *)pix1_11 + 7B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _56 = MEM[(uint8_t *)pix1_11 + 7B];
common/pixel.c:262:13: note: worklist: examine stmt: a6_55 = _52 - _54;
common/pixel.c:262:13: note: vect_is_simple_use: operand _52
common/pixel.c:262:13: note: def_stmt: _52 = (int) _51;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: vect_is_simple_use: operand _54
common/pixel.c:262:13: note: def_stmt: _54 = (int) _53;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _54 = (int) _53;
common/pixel.c:262:13: note: vect_is_simple_use: operand _53
common/pixel.c:262:13: note: def_stmt: _53 = MEM[(uint8_t *)pix2_189 + 6B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _53 = MEM[(uint8_t *)pix2_189 + 6B];
common/pixel.c:262:13: note: worklist: examine stmt: _52 = (int) _51;
common/pixel.c:262:13: note: vect_is_simple_use: operand _51
common/pixel.c:262:13: note: def_stmt: _51 = MEM[(uint8_t *)pix1_11 + 6B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _51 = MEM[(uint8_t *)pix1_11 + 6B];
common/pixel.c:262:13: note: worklist: examine stmt: t1_70 = a4_45 - a5_50;
common/pixel.c:262:13: note: vect_is_simple_use: operand a4_45
common/pixel.c:262:13: note: def_stmt: a4_45 = _42 - _44;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: vect_is_simple_use: operand a5_50
common/pixel.c:262:13: note: def_stmt: a5_50 = _47 - _49;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: a5_50 = _47 - _49;
common/pixel.c:262:13: note: vect_is_simple_use: operand _47
common/pixel.c:262:13: note: def_stmt: _47 = (int) _46;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: vect_is_simple_use: operand _49
common/pixel.c:262:13: note: def_stmt: _49 = (int) _48;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _49 = (int) _48;
common/pixel.c:262:13: note: vect_is_simple_use: operand _48
common/pixel.c:262:13: note: def_stmt: _48 = MEM[(uint8_t *)pix2_189 + 5B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _48 = MEM[(uint8_t *)pix2_189 + 5B];
common/pixel.c:262:13: note: worklist: examine stmt: _47 = (int) _46;
common/pixel.c:262:13: note: vect_is_simple_use: operand _46
common/pixel.c:262:13: note: def_stmt: _46 = MEM[(uint8_t *)pix1_11 + 5B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _46 = MEM[(uint8_t *)pix1_11 + 5B];
common/pixel.c:262:13: note: worklist: examine stmt: a4_45 = _42 - _44;
common/pixel.c:262:13: note: vect_is_simple_use: operand _42
common/pixel.c:262:13: note: def_stmt: _42 = (int) _41;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: vect_is_simple_use: operand _44
common/pixel.c:262:13: note: def_stmt: _44 = (int) _43;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _44 = (int) _43;
common/pixel.c:262:13: note: vect_is_simple_use: operand _43
common/pixel.c:262:13: note: def_stmt: _43 = MEM[(uint8_t *)pix2_189 + 4B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _43 = MEM[(uint8_t *)pix2_189 + 4B];
common/pixel.c:262:13: note: worklist: examine stmt: _42 = (int) _41;
common/pixel.c:262:13: note: vect_is_simple_use: operand _41
common/pixel.c:262:13: note: def_stmt: _41 = MEM[(uint8_t *)pix1_11 + 4B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _41 = MEM[(uint8_t *)pix1_11 + 4B];
common/pixel.c:262:13: note: worklist: examine stmt: _186 = (unsigned short) b3_68;
common/pixel.c:262:13: note: vect_is_simple_use: operand b3_68
common/pixel.c:262:13: note: def_stmt: b3_68 = t1_62 - t3_64;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: b3_68 = t1_62 - t3_64;
common/pixel.c:262:13: note: vect_is_simple_use: operand t1_62
common/pixel.c:262:13: note: def_stmt: t1_62 = a0_25 - a1_30;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: vect_is_simple_use: operand t3_64
common/pixel.c:262:13: note: def_stmt: t3_64 = a2_35 - a3_40;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: t3_64 = a2_35 - a3_40;
common/pixel.c:262:13: note: vect_is_simple_use: operand a2_35
common/pixel.c:262:13: note: def_stmt: a2_35 = _32 - _34;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: vect_is_simple_use: operand a3_40
common/pixel.c:262:13: note: def_stmt: a3_40 = _37 - _39;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: a3_40 = _37 - _39;
common/pixel.c:262:13: note: vect_is_simple_use: operand _37
common/pixel.c:262:13: note: def_stmt: _37 = (int) _36;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: vect_is_simple_use: operand _39
common/pixel.c:262:13: note: def_stmt: _39 = (int) _38;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _39 = (int) _38;
common/pixel.c:262:13: note: vect_is_simple_use: operand _38
common/pixel.c:262:13: note: def_stmt: _38 = MEM[(uint8_t *)pix2_189 + 3B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _38 = MEM[(uint8_t *)pix2_189 + 3B];
common/pixel.c:262:13: note: worklist: examine stmt: _37 = (int) _36;
common/pixel.c:262:13: note: vect_is_simple_use: operand _36
common/pixel.c:262:13: note: def_stmt: _36 = MEM[(uint8_t *)pix1_11 + 3B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _36 = MEM[(uint8_t *)pix1_11 + 3B];
common/pixel.c:262:13: note: worklist: examine stmt: a2_35 = _32 - _34;
common/pixel.c:262:13: note: vect_is_simple_use: operand _32
common/pixel.c:262:13: note: def_stmt: _32 = (int) _31;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: vect_is_simple_use: operand _34
common/pixel.c:262:13: note: def_stmt: _34 = (int) _33;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _34 = (int) _33;
common/pixel.c:262:13: note: vect_is_simple_use: operand _33
common/pixel.c:262:13: note: def_stmt: _33 = MEM[(uint8_t *)pix2_189 + 2B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _33 = MEM[(uint8_t *)pix2_189 + 2B];
common/pixel.c:262:13: note: worklist: examine stmt: _32 = (int) _31;
common/pixel.c:262:13: note: vect_is_simple_use: operand _31
common/pixel.c:262:13: note: def_stmt: _31 = MEM[(uint8_t *)pix1_11 + 2B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _31 = MEM[(uint8_t *)pix1_11 + 2B];
common/pixel.c:262:13: note: worklist: examine stmt: t1_62 = a0_25 - a1_30;
common/pixel.c:262:13: note: vect_is_simple_use: operand a0_25
common/pixel.c:262:13: note: def_stmt: a0_25 = _22 - _24;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: vect_is_simple_use: operand a1_30
common/pixel.c:262:13: note: def_stmt: a1_30 = _27 - _29;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: a1_30 = _27 - _29;
common/pixel.c:262:13: note: vect_is_simple_use: operand _27
common/pixel.c:262:13: note: def_stmt: _27 = (int) _26;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: vect_is_simple_use: operand _29
common/pixel.c:262:13: note: def_stmt: _29 = (int) _28;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _29 = (int) _28;
common/pixel.c:262:13: note: vect_is_simple_use: operand _28
common/pixel.c:262:13: note: def_stmt: _28 = MEM[(uint8_t *)pix2_189 + 1B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _28 = MEM[(uint8_t *)pix2_189 + 1B];
common/pixel.c:262:13: note: worklist: examine stmt: _27 = (int) _26;
common/pixel.c:262:13: note: vect_is_simple_use: operand _26
common/pixel.c:262:13: note: def_stmt: _26 = MEM[(uint8_t *)pix1_11 + 1B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _26 = MEM[(uint8_t *)pix1_11 + 1B];
common/pixel.c:262:13: note: worklist: examine stmt: a0_25 = _22 - _24;
common/pixel.c:262:13: note: vect_is_simple_use: operand _22
common/pixel.c:262:13: note: def_stmt: _22 = (int) _21;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: vect_is_simple_use: operand _24
common/pixel.c:262:13: note: def_stmt: _24 = (int) _23;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _24 = (int) _23;
common/pixel.c:262:13: note: vect_is_simple_use: operand _23
common/pixel.c:262:13: note: def_stmt: _23 = *pix2_189;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _23 = *pix2_189;
common/pixel.c:262:13: note: worklist: examine stmt: _22 = (int) _21;
common/pixel.c:262:13: note: vect_is_simple_use: operand _21
common/pixel.c:262:13: note: def_stmt: _21 = *pix1_11;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _21 = *pix1_11;
common/pixel.c:262:13: note: worklist: examine stmt: diff[i_13][3] = _187;
common/pixel.c:262:13: note: vect_is_simple_use: operand _187
common/pixel.c:262:13: note: def_stmt: _187 = (short int) _97;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _187 = (short int) _97;
common/pixel.c:262:13: note: vect_is_simple_use: operand _97
common/pixel.c:262:13: note: def_stmt: _97 = _96 + _186;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _97 = _96 + _186;
common/pixel.c:262:13: note: vect_is_simple_use: operand _96
common/pixel.c:262:13: note: def_stmt: _96 = (unsigned short) b7_76;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: already marked relevant/live.
common/pixel.c:262:13: note: vect_is_simple_use: operand _186
common/pixel.c:262:13: note: def_stmt: _186 = (unsigned short) b3_68;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: already marked relevant/live.
common/pixel.c:262:13: note: worklist: examine stmt: diff[i_13][6] = _94;
common/pixel.c:262:13: note: vect_is_simple_use: operand _94
common/pixel.c:262:13: note: def_stmt: _94 = (short int) _93;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _94 = (short int) _93;
common/pixel.c:262:13: note: vect_is_simple_use: operand _93
common/pixel.c:262:13: note: def_stmt: _93 = _184 - _90;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _93 = _184 - _90;
common/pixel.c:262:13: note: vect_is_simple_use: operand _184
common/pixel.c:262:13: note: def_stmt: _184 = (unsigned short) b2_66;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: vect_is_simple_use: operand _90
common/pixel.c:262:13: note: def_stmt: _90 = (unsigned short) b6_74;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _90 = (unsigned short) b6_74;
common/pixel.c:262:13: note: vect_is_simple_use: operand b6_74
common/pixel.c:262:13: note: def_stmt: b6_74 = t0_69 - t2_71;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: b6_74 = t0_69 - t2_71;
common/pixel.c:262:13: note: vect_is_simple_use: operand t0_69
common/pixel.c:262:13: note: def_stmt: t0_69 = a4_45 + a5_50;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: vect_is_simple_use: operand t2_71
common/pixel.c:262:13: note: def_stmt: t2_71 = a6_55 + a7_60;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: t2_71 = a6_55 + a7_60;
common/pixel.c:262:13: note: vect_is_simple_use: operand a6_55
common/pixel.c:262:13: note: def_stmt: a6_55 = _52 - _54;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: already marked relevant/live.
common/pixel.c:262:13: note: vect_is_simple_use: operand a7_60
common/pixel.c:262:13: note: def_stmt: a7_60 = _57 - _59;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: already marked relevant/live.
common/pixel.c:262:13: note: worklist: examine stmt: t0_69 = a4_45 + a5_50;
common/pixel.c:262:13: note: vect_is_simple_use: operand a4_45
common/pixel.c:262:13: note: def_stmt: a4_45 = _42 - _44;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: already marked relevant/live.
common/pixel.c:262:13: note: vect_is_simple_use: operand a5_50
common/pixel.c:262:13: note: def_stmt: a5_50 = _47 - _49;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: already marked relevant/live.
common/pixel.c:262:13: note: worklist: examine stmt: _184 = (unsigned short) b2_66;
common/pixel.c:262:13: note: vect_is_simple_use: operand b2_66
common/pixel.c:262:13: note: def_stmt: b2_66 = t0_61 - t2_63;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: b2_66 = t0_61 - t2_63;
common/pixel.c:262:13: note: vect_is_simple_use: operand t0_61
common/pixel.c:262:13: note: def_stmt: t0_61 = a0_25 + a1_30;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: vect_is_simple_use: operand t2_63
common/pixel.c:262:13: note: def_stmt: t2_63 = a2_35 + a3_40;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: t2_63 = a2_35 + a3_40;
common/pixel.c:262:13: note: vect_is_simple_use: operand a2_35
common/pixel.c:262:13: note: def_stmt: a2_35 = _32 - _34;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: already marked relevant/live.
common/pixel.c:262:13: note: vect_is_simple_use: operand a3_40
common/pixel.c:262:13: note: def_stmt: a3_40 = _37 - _39;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: already marked relevant/live.
common/pixel.c:262:13: note: worklist: examine stmt: t0_61 = a0_25 + a1_30;
common/pixel.c:262:13: note: vect_is_simple_use: operand a0_25
common/pixel.c:262:13: note: def_stmt: a0_25 = _22 - _24;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: already marked relevant/live.
common/pixel.c:262:13: note: vect_is_simple_use: operand a1_30
common/pixel.c:262:13: note: def_stmt: a1_30 = _27 - _29;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: already marked relevant/live.
common/pixel.c:262:13: note: worklist: examine stmt: diff[i_13][2] = _185;
common/pixel.c:262:13: note: vect_is_simple_use: operand _185
common/pixel.c:262:13: note: def_stmt: _185 = (short int) _91;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _185 = (short int) _91;
common/pixel.c:262:13: note: vect_is_simple_use: operand _91
common/pixel.c:262:13: note: def_stmt: _91 = _90 + _184;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _91 = _90 + _184;
common/pixel.c:262:13: note: vect_is_simple_use: operand _90
common/pixel.c:262:13: note: def_stmt: _90 = (unsigned short) b6_74;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: already marked relevant/live.
common/pixel.c:262:13: note: vect_is_simple_use: operand _184
common/pixel.c:262:13: note: def_stmt: _184 = (unsigned short) b2_66;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: already marked relevant/live.
common/pixel.c:262:13: note: worklist: examine stmt: diff[i_13][5] = _88;
common/pixel.c:262:13: note: vect_is_simple_use: operand _88
common/pixel.c:262:13: note: def_stmt: _88 = (short int) _87;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _88 = (short int) _87;
common/pixel.c:262:13: note: vect_is_simple_use: operand _87
common/pixel.c:262:13: note: def_stmt: _87 = _182 - _84;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _87 = _182 - _84;
common/pixel.c:262:13: note: vect_is_simple_use: operand _182
common/pixel.c:262:13: note: def_stmt: _182 = (unsigned short) b1_67;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: vect_is_simple_use: operand _84
common/pixel.c:262:13: note: def_stmt: _84 = (unsigned short) b5_75;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _84 = (unsigned short) b5_75;
common/pixel.c:262:13: note: vect_is_simple_use: operand b5_75
common/pixel.c:262:13: note: def_stmt: b5_75 = t1_70 + t3_72;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: b5_75 = t1_70 + t3_72;
common/pixel.c:262:13: note: vect_is_simple_use: operand t1_70
common/pixel.c:262:13: note: def_stmt: t1_70 = a4_45 - a5_50;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: already marked relevant/live.
common/pixel.c:262:13: note: vect_is_simple_use: operand t3_72
common/pixel.c:262:13: note: def_stmt: t3_72 = a6_55 - a7_60;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: already marked relevant/live.
common/pixel.c:262:13: note: worklist: examine stmt: _182 = (unsigned short) b1_67;
common/pixel.c:262:13: note: vect_is_simple_use: operand b1_67
common/pixel.c:262:13: note: def_stmt: b1_67 = t1_62 + t3_64;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: b1_67 = t1_62 + t3_64;
common/pixel.c:262:13: note: vect_is_simple_use: operand t1_62
common/pixel.c:262:13: note: def_stmt: t1_62 = a0_25 - a1_30;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: already marked relevant/live.
common/pixel.c:262:13: note: vect_is_simple_use: operand t3_64
common/pixel.c:262:13: note: def_stmt: t3_64 = a2_35 - a3_40;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: already marked relevant/live.
common/pixel.c:262:13: note: worklist: examine stmt: diff[i_13][1] = _183;
common/pixel.c:262:13: note: vect_is_simple_use: operand _183
common/pixel.c:262:13: note: def_stmt: _183 = (short int) _85;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _183 = (short int) _85;
common/pixel.c:262:13: note: vect_is_simple_use: operand _85
common/pixel.c:262:13: note: def_stmt: _85 = _84 + _182;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _85 = _84 + _182;
common/pixel.c:262:13: note: vect_is_simple_use: operand _84
common/pixel.c:262:13: note: def_stmt: _84 = (unsigned short) b5_75;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: already marked relevant/live.
common/pixel.c:262:13: note: vect_is_simple_use: operand _182
common/pixel.c:262:13: note: def_stmt: _182 = (unsigned short) b1_67;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: already marked relevant/live.
common/pixel.c:262:13: note: worklist: examine stmt: diff[i_13][4] = _82;
common/pixel.c:262:13: note: vect_is_simple_use: operand _82
common/pixel.c:262:13: note: def_stmt: _82 = (short int) _81;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _82 = (short int) _81;
common/pixel.c:262:13: note: vect_is_simple_use: operand _81
common/pixel.c:262:13: note: def_stmt: _81 = _180 - _78;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _81 = _180 - _78;
common/pixel.c:262:13: note: vect_is_simple_use: operand _180
common/pixel.c:262:13: note: def_stmt: _180 = (unsigned short) b0_65;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: vect_is_simple_use: operand _78
common/pixel.c:262:13: note: def_stmt: _78 = (unsigned short) b4_73;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _78 = (unsigned short) b4_73;
common/pixel.c:262:13: note: vect_is_simple_use: operand b4_73
common/pixel.c:262:13: note: def_stmt: b4_73 = t0_69 + t2_71;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: b4_73 = t0_69 + t2_71;
common/pixel.c:262:13: note: vect_is_simple_use: operand t0_69
common/pixel.c:262:13: note: def_stmt: t0_69 = a4_45 + a5_50;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: already marked relevant/live.
common/pixel.c:262:13: note: vect_is_simple_use: operand t2_71
common/pixel.c:262:13: note: def_stmt: t2_71 = a6_55 + a7_60;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: already marked relevant/live.
common/pixel.c:262:13: note: worklist: examine stmt: _180 = (unsigned short) b0_65;
common/pixel.c:262:13: note: vect_is_simple_use: operand b0_65
common/pixel.c:262:13: note: def_stmt: b0_65 = t0_61 + t2_63;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: b0_65 = t0_61 + t2_63;
common/pixel.c:262:13: note: vect_is_simple_use: operand t0_61
common/pixel.c:262:13: note: def_stmt: t0_61 = a0_25 + a1_30;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: already marked relevant/live.
common/pixel.c:262:13: note: vect_is_simple_use: operand t2_63
common/pixel.c:262:13: note: def_stmt: t2_63 = a2_35 + a3_40;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: already marked relevant/live.
common/pixel.c:262:13: note: worklist: examine stmt: diff[i_13][0] = _181;
common/pixel.c:262:13: note: vect_is_simple_use: operand _181
common/pixel.c:262:13: note: def_stmt: _181 = (short int) _79;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _181 = (short int) _79;
common/pixel.c:262:13: note: vect_is_simple_use: operand _79
common/pixel.c:262:13: note: def_stmt: _79 = _78 + _180;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _79 = _78 + _180;
common/pixel.c:262:13: note: vect_is_simple_use: operand _78
common/pixel.c:262:13: note: def_stmt: _78 = (unsigned short) b4_73;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: already marked relevant/live.
common/pixel.c:262:13: note: vect_is_simple_use: operand _180
common/pixel.c:262:13: note: def_stmt: _180 = (unsigned short) b0_65;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: already marked relevant/live.
common/pixel.c:262:13: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _21 = *pix1_11;
  stmt_b: _23 = *pix2_189;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _21 = *pix1_11;
  stmt_b: _26 = MEM[(uint8_t *)pix1_11 + 1B];
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, pretmp_424}_8)
  (chrec_b = {1B, +, pretmp_424}_8)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _21 = *pix1_11;
  stmt_b: _28 = MEM[(uint8_t *)pix2_189 + 1B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _21 = *pix1_11;
  stmt_b: _31 = MEM[(uint8_t *)pix1_11 + 2B];
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, pretmp_424}_8)
  (chrec_b = {2B, +, pretmp_424}_8)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _21 = *pix1_11;
  stmt_b: _33 = MEM[(uint8_t *)pix2_189 + 2B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _21 = *pix1_11;
  stmt_b: _36 = MEM[(uint8_t *)pix1_11 + 3B];
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, pretmp_424}_8)
  (chrec_b = {3B, +, pretmp_424}_8)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _21 = *pix1_11;
  stmt_b: _38 = MEM[(uint8_t *)pix2_189 + 3B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _21 = *pix1_11;
  stmt_b: _41 = MEM[(uint8_t *)pix1_11 + 4B];
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, pretmp_424}_8)
  (chrec_b = {4B, +, pretmp_424}_8)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _21 = *pix1_11;
  stmt_b: _43 = MEM[(uint8_t *)pix2_189 + 4B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _21 = *pix1_11;
  stmt_b: _46 = MEM[(uint8_t *)pix1_11 + 5B];
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, pretmp_424}_8)
  (chrec_b = {5B, +, pretmp_424}_8)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _21 = *pix1_11;
  stmt_b: _48 = MEM[(uint8_t *)pix2_189 + 5B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _21 = *pix1_11;
  stmt_b: _51 = MEM[(uint8_t *)pix1_11 + 6B];
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, pretmp_424}_8)
  (chrec_b = {6B, +, pretmp_424}_8)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _21 = *pix1_11;
  stmt_b: _53 = MEM[(uint8_t *)pix2_189 + 6B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _21 = *pix1_11;
  stmt_b: _56 = MEM[(uint8_t *)pix1_11 + 7B];
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, pretmp_424}_8)
  (chrec_b = {7B, +, pretmp_424}_8)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _21 = *pix1_11;
  stmt_b: _58 = MEM[(uint8_t *)pix2_189 + 7B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _21 = *pix1_11;
  stmt_b: diff[i_13][0] = _181;
) -> no dependence
(compute_affine_dependence
  stmt_a: _21 = *pix1_11;
  stmt_b: diff[i_13][4] = _82;
) -> no dependence
(compute_affine_dependence
  stmt_a: _21 = *pix1_11;
  stmt_b: diff[i_13][1] = _183;
) -> no dependence
(compute_affine_dependence
  stmt_a: _21 = *pix1_11;
  stmt_b: diff[i_13][5] = _88;
) -> no dependence
(compute_affine_dependence
  stmt_a: _21 = *pix1_11;
  stmt_b: diff[i_13][2] = _185;
) -> no dependence
(compute_affine_dependence
  stmt_a: _21 = *pix1_11;
  stmt_b: diff[i_13][6] = _94;
) -> no dependence
(compute_affine_dependence
  stmt_a: _21 = *pix1_11;
  stmt_b: diff[i_13][3] = _187;
) -> no dependence
(compute_affine_dependence
  stmt_a: _21 = *pix1_11;
  stmt_b: diff[i_13][7] = _100;
) -> no dependence
(compute_affine_dependence
  stmt_a: _23 = *pix2_189;
  stmt_b: _26 = MEM[(uint8_t *)pix1_11 + 1B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _23 = *pix2_189;
  stmt_b: _28 = MEM[(uint8_t *)pix2_189 + 1B];
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, pretmp_425}_8)
  (chrec_b = {1B, +, pretmp_425}_8)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _23 = *pix2_189;
  stmt_b: _31 = MEM[(uint8_t *)pix1_11 + 2B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _23 = *pix2_189;
  stmt_b: _33 = MEM[(uint8_t *)pix2_189 + 2B];
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, pretmp_425}_8)
  (chrec_b = {2B, +, pretmp_425}_8)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _23 = *pix2_189;
  stmt_b: _36 = MEM[(uint8_t *)pix1_11 + 3B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _23 = *pix2_189;
  stmt_b: _38 = MEM[(uint8_t *)pix2_189 + 3B];
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, pretmp_425}_8)
  (chrec_b = {3B, +, pretmp_425}_8)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _23 = *pix2_189;
  stmt_b: _41 = MEM[(uint8_t *)pix1_11 + 4B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _23 = *pix2_189;
  stmt_b: _43 = MEM[(uint8_t *)pix2_189 + 4B];
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, pretmp_425}_8)
  (chrec_b = {4B, +, pretmp_425}_8)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _23 = *pix2_189;
  stmt_b: _46 = MEM[(uint8_t *)pix1_11 + 5B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _23 = *pix2_189;
  stmt_b: _48 = MEM[(uint8_t *)pix2_189 + 5B];
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, pretmp_425}_8)
  (chrec_b = {5B, +, pretmp_425}_8)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _23 = *pix2_189;
  stmt_b: _51 = MEM[(uint8_t *)pix1_11 + 6B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _23 = *pix2_189;
  stmt_b: _53 = MEM[(uint8_t *)pix2_189 + 6B];
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, pretmp_425}_8)
  (chrec_b = {6B, +, pretmp_425}_8)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _23 = *pix2_189;
  stmt_b: _56 = MEM[(uint8_t *)pix1_11 + 7B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _23 = *pix2_189;
  stmt_b: _58 = MEM[(uint8_t *)pix2_189 + 7B];
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, pretmp_425}_8)
  (chrec_b = {7B, +, pretmp_425}_8)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _23 = *pix2_189;
  stmt_b: diff[i_13][0] = _181;
) -> no dependence
(compute_affine_dependence
  stmt_a: _23 = *pix2_189;
  stmt_b: diff[i_13][4] = _82;
) -> no dependence
(compute_affine_dependence
  stmt_a: _23 = *pix2_189;
  stmt_b: diff[i_13][1] = _183;
) -> no dependence
(compute_affine_dependence
  stmt_a: _23 = *pix2_189;
  stmt_b: diff[i_13][5] = _88;
) -> no dependence
(compute_affine_dependence
  stmt_a: _23 = *pix2_189;
  stmt_b: diff[i_13][2] = _185;
) -> no dependence
(compute_affine_dependence
  stmt_a: _23 = *pix2_189;
  stmt_b: diff[i_13][6] = _94;
) -> no dependence
(compute_affine_dependence
  stmt_a: _23 = *pix2_189;
  stmt_b: diff[i_13][3] = _187;
) -> no dependence
(compute_affine_dependence
  stmt_a: _23 = *pix2_189;
  stmt_b: diff[i_13][7] = _100;
) -> no dependence
(compute_affine_dependence
  stmt_a: _26 = MEM[(uint8_t *)pix1_11 + 1B];
  stmt_b: _28 = MEM[(uint8_t *)pix2_189 + 1B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _26 = MEM[(uint8_t *)pix1_11 + 1B];
  stmt_b: _31 = MEM[(uint8_t *)pix1_11 + 2B];
(analyze_overlapping_iterations 
  (chrec_a = {1B, +, pretmp_424}_8)
  (chrec_b = {2B, +, pretmp_424}_8)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _26 = MEM[(uint8_t *)pix1_11 + 1B];
  stmt_b: _33 = MEM[(uint8_t *)pix2_189 + 2B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _26 = MEM[(uint8_t *)pix1_11 + 1B];
  stmt_b: _36 = MEM[(uint8_t *)pix1_11 + 3B];
(analyze_overlapping_iterations 
  (chrec_a = {1B, +, pretmp_424}_8)
  (chrec_b = {3B, +, pretmp_424}_8)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _26 = MEM[(uint8_t *)pix1_11 + 1B];
  stmt_b: _38 = MEM[(uint8_t *)pix2_189 + 3B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _26 = MEM[(uint8_t *)pix1_11 + 1B];
  stmt_b: _41 = MEM[(uint8_t *)pix1_11 + 4B];
(analyze_overlapping_iterations 
  (chrec_a = {1B, +, pretmp_424}_8)
  (chrec_b = {4B, +, pretmp_424}_8)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _26 = MEM[(uint8_t *)pix1_11 + 1B];
  stmt_b: _43 = MEM[(uint8_t *)pix2_189 + 4B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _26 = MEM[(uint8_t *)pix1_11 + 1B];
  stmt_b: _46 = MEM[(uint8_t *)pix1_11 + 5B];
(analyze_overlapping_iterations 
  (chrec_a = {1B, +, pretmp_424}_8)
  (chrec_b = {5B, +, pretmp_424}_8)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _26 = MEM[(uint8_t *)pix1_11 + 1B];
  stmt_b: _48 = MEM[(uint8_t *)pix2_189 + 5B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _26 = MEM[(uint8_t *)pix1_11 + 1B];
  stmt_b: _51 = MEM[(uint8_t *)pix1_11 + 6B];
(analyze_overlapping_iterations 
  (chrec_a = {1B, +, pretmp_424}_8)
  (chrec_b = {6B, +, pretmp_424}_8)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _26 = MEM[(uint8_t *)pix1_11 + 1B];
  stmt_b: _53 = MEM[(uint8_t *)pix2_189 + 6B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _26 = MEM[(uint8_t *)pix1_11 + 1B];
  stmt_b: _56 = MEM[(uint8_t *)pix1_11 + 7B];
(analyze_overlapping_iterations 
  (chrec_a = {1B, +, pretmp_424}_8)
  (chrec_b = {7B, +, pretmp_424}_8)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _26 = MEM[(uint8_t *)pix1_11 + 1B];
  stmt_b: _58 = MEM[(uint8_t *)pix2_189 + 7B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _26 = MEM[(uint8_t *)pix1_11 + 1B];
  stmt_b: diff[i_13][0] = _181;
) -> no dependence
(compute_affine_dependence
  stmt_a: _26 = MEM[(uint8_t *)pix1_11 + 1B];
  stmt_b: diff[i_13][4] = _82;
) -> no dependence
(compute_affine_dependence
  stmt_a: _26 = MEM[(uint8_t *)pix1_11 + 1B];
  stmt_b: diff[i_13][1] = _183;
) -> no dependence
(compute_affine_dependence
  stmt_a: _26 = MEM[(uint8_t *)pix1_11 + 1B];
  stmt_b: diff[i_13][5] = _88;
) -> no dependence
(compute_affine_dependence
  stmt_a: _26 = MEM[(uint8_t *)pix1_11 + 1B];
  stmt_b: diff[i_13][2] = _185;
) -> no dependence
(compute_affine_dependence
  stmt_a: _26 = MEM[(uint8_t *)pix1_11 + 1B];
  stmt_b: diff[i_13][6] = _94;
) -> no dependence
(compute_affine_dependence
  stmt_a: _26 = MEM[(uint8_t *)pix1_11 + 1B];
  stmt_b: diff[i_13][3] = _187;
) -> no dependence
(compute_affine_dependence
  stmt_a: _26 = MEM[(uint8_t *)pix1_11 + 1B];
  stmt_b: diff[i_13][7] = _100;
) -> no dependence
(compute_affine_dependence
  stmt_a: _28 = MEM[(uint8_t *)pix2_189 + 1B];
  stmt_b: _31 = MEM[(uint8_t *)pix1_11 + 2B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _28 = MEM[(uint8_t *)pix2_189 + 1B];
  stmt_b: _33 = MEM[(uint8_t *)pix2_189 + 2B];
(analyze_overlapping_iterations 
  (chrec_a = {1B, +, pretmp_425}_8)
  (chrec_b = {2B, +, pretmp_425}_8)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _28 = MEM[(uint8_t *)pix2_189 + 1B];
  stmt_b: _36 = MEM[(uint8_t *)pix1_11 + 3B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _28 = MEM[(uint8_t *)pix2_189 + 1B];
  stmt_b: _38 = MEM[(uint8_t *)pix2_189 + 3B];
(analyze_overlapping_iterations 
  (chrec_a = {1B, +, pretmp_425}_8)
  (chrec_b = {3B, +, pretmp_425}_8)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _28 = MEM[(uint8_t *)pix2_189 + 1B];
  stmt_b: _41 = MEM[(uint8_t *)pix1_11 + 4B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _28 = MEM[(uint8_t *)pix2_189 + 1B];
  stmt_b: _43 = MEM[(uint8_t *)pix2_189 + 4B];
(analyze_overlapping_iterations 
  (chrec_a = {1B, +, pretmp_425}_8)
  (chrec_b = {4B, +, pretmp_425}_8)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _28 = MEM[(uint8_t *)pix2_189 + 1B];
  stmt_b: _46 = MEM[(uint8_t *)pix1_11 + 5B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _28 = MEM[(uint8_t *)pix2_189 + 1B];
  stmt_b: _48 = MEM[(uint8_t *)pix2_189 + 5B];
(analyze_overlapping_iterations 
  (chrec_a = {1B, +, pretmp_425}_8)
  (chrec_b = {5B, +, pretmp_425}_8)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _28 = MEM[(uint8_t *)pix2_189 + 1B];
  stmt_b: _51 = MEM[(uint8_t *)pix1_11 + 6B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _28 = MEM[(uint8_t *)pix2_189 + 1B];
  stmt_b: _53 = MEM[(uint8_t *)pix2_189 + 6B];
(analyze_overlapping_iterations 
  (chrec_a = {1B, +, pretmp_425}_8)
  (chrec_b = {6B, +, pretmp_425}_8)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _28 = MEM[(uint8_t *)pix2_189 + 1B];
  stmt_b: _56 = MEM[(uint8_t *)pix1_11 + 7B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _28 = MEM[(uint8_t *)pix2_189 + 1B];
  stmt_b: _58 = MEM[(uint8_t *)pix2_189 + 7B];
(analyze_overlapping_iterations 
  (chrec_a = {1B, +, pretmp_425}_8)
  (chrec_b = {7B, +, pretmp_425}_8)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _28 = MEM[(uint8_t *)pix2_189 + 1B];
  stmt_b: diff[i_13][0] = _181;
) -> no dependence
(compute_affine_dependence
  stmt_a: _28 = MEM[(uint8_t *)pix2_189 + 1B];
  stmt_b: diff[i_13][4] = _82;
) -> no dependence
(compute_affine_dependence
  stmt_a: _28 = MEM[(uint8_t *)pix2_189 + 1B];
  stmt_b: diff[i_13][1] = _183;
) -> no dependence
(compute_affine_dependence
  stmt_a: _28 = MEM[(uint8_t *)pix2_189 + 1B];
  stmt_b: diff[i_13][5] = _88;
) -> no dependence
(compute_affine_dependence
  stmt_a: _28 = MEM[(uint8_t *)pix2_189 + 1B];
  stmt_b: diff[i_13][2] = _185;
) -> no dependence
(compute_affine_dependence
  stmt_a: _28 = MEM[(uint8_t *)pix2_189 + 1B];
  stmt_b: diff[i_13][6] = _94;
) -> no dependence
(compute_affine_dependence
  stmt_a: _28 = MEM[(uint8_t *)pix2_189 + 1B];
  stmt_b: diff[i_13][3] = _187;
) -> no dependence
(compute_affine_dependence
  stmt_a: _28 = MEM[(uint8_t *)pix2_189 + 1B];
  stmt_b: diff[i_13][7] = _100;
) -> no dependence
(compute_affine_dependence
  stmt_a: _31 = MEM[(uint8_t *)pix1_11 + 2B];
  stmt_b: _33 = MEM[(uint8_t *)pix2_189 + 2B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _31 = MEM[(uint8_t *)pix1_11 + 2B];
  stmt_b: _36 = MEM[(uint8_t *)pix1_11 + 3B];
(analyze_overlapping_iterations 
  (chrec_a = {2B, +, pretmp_424}_8)
  (chrec_b = {3B, +, pretmp_424}_8)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _31 = MEM[(uint8_t *)pix1_11 + 2B];
  stmt_b: _38 = MEM[(uint8_t *)pix2_189 + 3B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _31 = MEM[(uint8_t *)pix1_11 + 2B];
  stmt_b: _41 = MEM[(uint8_t *)pix1_11 + 4B];
(analyze_overlapping_iterations 
  (chrec_a = {2B, +, pretmp_424}_8)
  (chrec_b = {4B, +, pretmp_424}_8)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _31 = MEM[(uint8_t *)pix1_11 + 2B];
  stmt_b: _43 = MEM[(uint8_t *)pix2_189 + 4B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _31 = MEM[(uint8_t *)pix1_11 + 2B];
  stmt_b: _46 = MEM[(uint8_t *)pix1_11 + 5B];
(analyze_overlapping_iterations 
  (chrec_a = {2B, +, pretmp_424}_8)
  (chrec_b = {5B, +, pretmp_424}_8)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _31 = MEM[(uint8_t *)pix1_11 + 2B];
  stmt_b: _48 = MEM[(uint8_t *)pix2_189 + 5B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _31 = MEM[(uint8_t *)pix1_11 + 2B];
  stmt_b: _51 = MEM[(uint8_t *)pix1_11 + 6B];
(analyze_overlapping_iterations 
  (chrec_a = {2B, +, pretmp_424}_8)
  (chrec_b = {6B, +, pretmp_424}_8)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _31 = MEM[(uint8_t *)pix1_11 + 2B];
  stmt_b: _53 = MEM[(uint8_t *)pix2_189 + 6B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _31 = MEM[(uint8_t *)pix1_11 + 2B];
  stmt_b: _56 = MEM[(uint8_t *)pix1_11 + 7B];
(analyze_overlapping_iterations 
  (chrec_a = {2B, +, pretmp_424}_8)
  (chrec_b = {7B, +, pretmp_424}_8)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _31 = MEM[(uint8_t *)pix1_11 + 2B];
  stmt_b: _58 = MEM[(uint8_t *)pix2_189 + 7B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _31 = MEM[(uint8_t *)pix1_11 + 2B];
  stmt_b: diff[i_13][0] = _181;
) -> no dependence
(compute_affine_dependence
  stmt_a: _31 = MEM[(uint8_t *)pix1_11 + 2B];
  stmt_b: diff[i_13][4] = _82;
) -> no dependence
(compute_affine_dependence
  stmt_a: _31 = MEM[(uint8_t *)pix1_11 + 2B];
  stmt_b: diff[i_13][1] = _183;
) -> no dependence
(compute_affine_dependence
  stmt_a: _31 = MEM[(uint8_t *)pix1_11 + 2B];
  stmt_b: diff[i_13][5] = _88;
) -> no dependence
(compute_affine_dependence
  stmt_a: _31 = MEM[(uint8_t *)pix1_11 + 2B];
  stmt_b: diff[i_13][2] = _185;
) -> no dependence
(compute_affine_dependence
  stmt_a: _31 = MEM[(uint8_t *)pix1_11 + 2B];
  stmt_b: diff[i_13][6] = _94;
) -> no dependence
(compute_affine_dependence
  stmt_a: _31 = MEM[(uint8_t *)pix1_11 + 2B];
  stmt_b: diff[i_13][3] = _187;
) -> no dependence
(compute_affine_dependence
  stmt_a: _31 = MEM[(uint8_t *)pix1_11 + 2B];
  stmt_b: diff[i_13][7] = _100;
) -> no dependence
(compute_affine_dependence
  stmt_a: _33 = MEM[(uint8_t *)pix2_189 + 2B];
  stmt_b: _36 = MEM[(uint8_t *)pix1_11 + 3B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _33 = MEM[(uint8_t *)pix2_189 + 2B];
  stmt_b: _38 = MEM[(uint8_t *)pix2_189 + 3B];
(analyze_overlapping_iterations 
  (chrec_a = {2B, +, pretmp_425}_8)
  (chrec_b = {3B, +, pretmp_425}_8)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _33 = MEM[(uint8_t *)pix2_189 + 2B];
  stmt_b: _41 = MEM[(uint8_t *)pix1_11 + 4B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _33 = MEM[(uint8_t *)pix2_189 + 2B];
  stmt_b: _43 = MEM[(uint8_t *)pix2_189 + 4B];
(analyze_overlapping_iterations 
  (chrec_a = {2B, +, pretmp_425}_8)
  (chrec_b = {4B, +, pretmp_425}_8)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _33 = MEM[(uint8_t *)pix2_189 + 2B];
  stmt_b: _46 = MEM[(uint8_t *)pix1_11 + 5B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _33 = MEM[(uint8_t *)pix2_189 + 2B];
  stmt_b: _48 = MEM[(uint8_t *)pix2_189 + 5B];
(analyze_overlapping_iterations 
  (chrec_a = {2B, +, pretmp_425}_8)
  (chrec_b = {5B, +, pretmp_425}_8)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _33 = MEM[(uint8_t *)pix2_189 + 2B];
  stmt_b: _51 = MEM[(uint8_t *)pix1_11 + 6B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _33 = MEM[(uint8_t *)pix2_189 + 2B];
  stmt_b: _53 = MEM[(uint8_t *)pix2_189 + 6B];
(analyze_overlapping_iterations 
  (chrec_a = {2B, +, pretmp_425}_8)
  (chrec_b = {6B, +, pretmp_425}_8)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _33 = MEM[(uint8_t *)pix2_189 + 2B];
  stmt_b: _56 = MEM[(uint8_t *)pix1_11 + 7B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _33 = MEM[(uint8_t *)pix2_189 + 2B];
  stmt_b: _58 = MEM[(uint8_t *)pix2_189 + 7B];
(analyze_overlapping_iterations 
  (chrec_a = {2B, +, pretmp_425}_8)
  (chrec_b = {7B, +, pretmp_425}_8)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _33 = MEM[(uint8_t *)pix2_189 + 2B];
  stmt_b: diff[i_13][0] = _181;
) -> no dependence
(compute_affine_dependence
  stmt_a: _33 = MEM[(uint8_t *)pix2_189 + 2B];
  stmt_b: diff[i_13][4] = _82;
) -> no dependence
(compute_affine_dependence
  stmt_a: _33 = MEM[(uint8_t *)pix2_189 + 2B];
  stmt_b: diff[i_13][1] = _183;
) -> no dependence
(compute_affine_dependence
  stmt_a: _33 = MEM[(uint8_t *)pix2_189 + 2B];
  stmt_b: diff[i_13][5] = _88;
) -> no dependence
(compute_affine_dependence
  stmt_a: _33 = MEM[(uint8_t *)pix2_189 + 2B];
  stmt_b: diff[i_13][2] = _185;
) -> no dependence
(compute_affine_dependence
  stmt_a: _33 = MEM[(uint8_t *)pix2_189 + 2B];
  stmt_b: diff[i_13][6] = _94;
) -> no dependence
(compute_affine_dependence
  stmt_a: _33 = MEM[(uint8_t *)pix2_189 + 2B];
  stmt_b: diff[i_13][3] = _187;
) -> no dependence
(compute_affine_dependence
  stmt_a: _33 = MEM[(uint8_t *)pix2_189 + 2B];
  stmt_b: diff[i_13][7] = _100;
) -> no dependence
(compute_affine_dependence
  stmt_a: _36 = MEM[(uint8_t *)pix1_11 + 3B];
  stmt_b: _38 = MEM[(uint8_t *)pix2_189 + 3B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _36 = MEM[(uint8_t *)pix1_11 + 3B];
  stmt_b: _41 = MEM[(uint8_t *)pix1_11 + 4B];
(analyze_overlapping_iterations 
  (chrec_a = {3B, +, pretmp_424}_8)
  (chrec_b = {4B, +, pretmp_424}_8)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _36 = MEM[(uint8_t *)pix1_11 + 3B];
  stmt_b: _43 = MEM[(uint8_t *)pix2_189 + 4B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _36 = MEM[(uint8_t *)pix1_11 + 3B];
  stmt_b: _46 = MEM[(uint8_t *)pix1_11 + 5B];
(analyze_overlapping_iterations 
  (chrec_a = {3B, +, pretmp_424}_8)
  (chrec_b = {5B, +, pretmp_424}_8)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _36 = MEM[(uint8_t *)pix1_11 + 3B];
  stmt_b: _48 = MEM[(uint8_t *)pix2_189 + 5B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _36 = MEM[(uint8_t *)pix1_11 + 3B];
  stmt_b: _51 = MEM[(uint8_t *)pix1_11 + 6B];
(analyze_overlapping_iterations 
  (chrec_a = {3B, +, pretmp_424}_8)
  (chrec_b = {6B, +, pretmp_424}_8)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _36 = MEM[(uint8_t *)pix1_11 + 3B];
  stmt_b: _53 = MEM[(uint8_t *)pix2_189 + 6B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _36 = MEM[(uint8_t *)pix1_11 + 3B];
  stmt_b: _56 = MEM[(uint8_t *)pix1_11 + 7B];
(analyze_overlapping_iterations 
  (chrec_a = {3B, +, pretmp_424}_8)
  (chrec_b = {7B, +, pretmp_424}_8)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _36 = MEM[(uint8_t *)pix1_11 + 3B];
  stmt_b: _58 = MEM[(uint8_t *)pix2_189 + 7B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _36 = MEM[(uint8_t *)pix1_11 + 3B];
  stmt_b: diff[i_13][0] = _181;
) -> no dependence
(compute_affine_dependence
  stmt_a: _36 = MEM[(uint8_t *)pix1_11 + 3B];
  stmt_b: diff[i_13][4] = _82;
) -> no dependence
(compute_affine_dependence
  stmt_a: _36 = MEM[(uint8_t *)pix1_11 + 3B];
  stmt_b: diff[i_13][1] = _183;
) -> no dependence
(compute_affine_dependence
  stmt_a: _36 = MEM[(uint8_t *)pix1_11 + 3B];
  stmt_b: diff[i_13][5] = _88;
) -> no dependence
(compute_affine_dependence
  stmt_a: _36 = MEM[(uint8_t *)pix1_11 + 3B];
  stmt_b: diff[i_13][2] = _185;
) -> no dependence
(compute_affine_dependence
  stmt_a: _36 = MEM[(uint8_t *)pix1_11 + 3B];
  stmt_b: diff[i_13][6] = _94;
) -> no dependence
(compute_affine_dependence
  stmt_a: _36 = MEM[(uint8_t *)pix1_11 + 3B];
  stmt_b: diff[i_13][3] = _187;
) -> no dependence
(compute_affine_dependence
  stmt_a: _36 = MEM[(uint8_t *)pix1_11 + 3B];
  stmt_b: diff[i_13][7] = _100;
) -> no dependence
(compute_affine_dependence
  stmt_a: _38 = MEM[(uint8_t *)pix2_189 + 3B];
  stmt_b: _41 = MEM[(uint8_t *)pix1_11 + 4B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _38 = MEM[(uint8_t *)pix2_189 + 3B];
  stmt_b: _43 = MEM[(uint8_t *)pix2_189 + 4B];
(analyze_overlapping_iterations 
  (chrec_a = {3B, +, pretmp_425}_8)
  (chrec_b = {4B, +, pretmp_425}_8)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _38 = MEM[(uint8_t *)pix2_189 + 3B];
  stmt_b: _46 = MEM[(uint8_t *)pix1_11 + 5B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _38 = MEM[(uint8_t *)pix2_189 + 3B];
  stmt_b: _48 = MEM[(uint8_t *)pix2_189 + 5B];
(analyze_overlapping_iterations 
  (chrec_a = {3B, +, pretmp_425}_8)
  (chrec_b = {5B, +, pretmp_425}_8)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _38 = MEM[(uint8_t *)pix2_189 + 3B];
  stmt_b: _51 = MEM[(uint8_t *)pix1_11 + 6B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _38 = MEM[(uint8_t *)pix2_189 + 3B];
  stmt_b: _53 = MEM[(uint8_t *)pix2_189 + 6B];
(analyze_overlapping_iterations 
  (chrec_a = {3B, +, pretmp_425}_8)
  (chrec_b = {6B, +, pretmp_425}_8)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _38 = MEM[(uint8_t *)pix2_189 + 3B];
  stmt_b: _56 = MEM[(uint8_t *)pix1_11 + 7B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _38 = MEM[(uint8_t *)pix2_189 + 3B];
  stmt_b: _58 = MEM[(uint8_t *)pix2_189 + 7B];
(analyze_overlapping_iterations 
  (chrec_a = {3B, +, pretmp_425}_8)
  (chrec_b = {7B, +, pretmp_425}_8)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _38 = MEM[(uint8_t *)pix2_189 + 3B];
  stmt_b: diff[i_13][0] = _181;
) -> no dependence
(compute_affine_dependence
  stmt_a: _38 = MEM[(uint8_t *)pix2_189 + 3B];
  stmt_b: diff[i_13][4] = _82;
) -> no dependence
(compute_affine_dependence
  stmt_a: _38 = MEM[(uint8_t *)pix2_189 + 3B];
  stmt_b: diff[i_13][1] = _183;
) -> no dependence
(compute_affine_dependence
  stmt_a: _38 = MEM[(uint8_t *)pix2_189 + 3B];
  stmt_b: diff[i_13][5] = _88;
) -> no dependence
(compute_affine_dependence
  stmt_a: _38 = MEM[(uint8_t *)pix2_189 + 3B];
  stmt_b: diff[i_13][2] = _185;
) -> no dependence
(compute_affine_dependence
  stmt_a: _38 = MEM[(uint8_t *)pix2_189 + 3B];
  stmt_b: diff[i_13][6] = _94;
) -> no dependence
(compute_affine_dependence
  stmt_a: _38 = MEM[(uint8_t *)pix2_189 + 3B];
  stmt_b: diff[i_13][3] = _187;
) -> no dependence
(compute_affine_dependence
  stmt_a: _38 = MEM[(uint8_t *)pix2_189 + 3B];
  stmt_b: diff[i_13][7] = _100;
) -> no dependence
(compute_affine_dependence
  stmt_a: _41 = MEM[(uint8_t *)pix1_11 + 4B];
  stmt_b: _43 = MEM[(uint8_t *)pix2_189 + 4B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _41 = MEM[(uint8_t *)pix1_11 + 4B];
  stmt_b: _46 = MEM[(uint8_t *)pix1_11 + 5B];
(analyze_overlapping_iterations 
  (chrec_a = {4B, +, pretmp_424}_8)
  (chrec_b = {5B, +, pretmp_424}_8)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _41 = MEM[(uint8_t *)pix1_11 + 4B];
  stmt_b: _48 = MEM[(uint8_t *)pix2_189 + 5B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _41 = MEM[(uint8_t *)pix1_11 + 4B];
  stmt_b: _51 = MEM[(uint8_t *)pix1_11 + 6B];
(analyze_overlapping_iterations 
  (chrec_a = {4B, +, pretmp_424}_8)
  (chrec_b = {6B, +, pretmp_424}_8)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _41 = MEM[(uint8_t *)pix1_11 + 4B];
  stmt_b: _53 = MEM[(uint8_t *)pix2_189 + 6B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _41 = MEM[(uint8_t *)pix1_11 + 4B];
  stmt_b: _56 = MEM[(uint8_t *)pix1_11 + 7B];
(analyze_overlapping_iterations 
  (chrec_a = {4B, +, pretmp_424}_8)
  (chrec_b = {7B, +, pretmp_424}_8)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _41 = MEM[(uint8_t *)pix1_11 + 4B];
  stmt_b: _58 = MEM[(uint8_t *)pix2_189 + 7B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _41 = MEM[(uint8_t *)pix1_11 + 4B];
  stmt_b: diff[i_13][0] = _181;
) -> no dependence
(compute_affine_dependence
  stmt_a: _41 = MEM[(uint8_t *)pix1_11 + 4B];
  stmt_b: diff[i_13][4] = _82;
) -> no dependence
(compute_affine_dependence
  stmt_a: _41 = MEM[(uint8_t *)pix1_11 + 4B];
  stmt_b: diff[i_13][1] = _183;
) -> no dependence
(compute_affine_dependence
  stmt_a: _41 = MEM[(uint8_t *)pix1_11 + 4B];
  stmt_b: diff[i_13][5] = _88;
) -> no dependence
(compute_affine_dependence
  stmt_a: _41 = MEM[(uint8_t *)pix1_11 + 4B];
  stmt_b: diff[i_13][2] = _185;
) -> no dependence
(compute_affine_dependence
  stmt_a: _41 = MEM[(uint8_t *)pix1_11 + 4B];
  stmt_b: diff[i_13][6] = _94;
) -> no dependence
(compute_affine_dependence
  stmt_a: _41 = MEM[(uint8_t *)pix1_11 + 4B];
  stmt_b: diff[i_13][3] = _187;
) -> no dependence
(compute_affine_dependence
  stmt_a: _41 = MEM[(uint8_t *)pix1_11 + 4B];
  stmt_b: diff[i_13][7] = _100;
) -> no dependence
(compute_affine_dependence
  stmt_a: _43 = MEM[(uint8_t *)pix2_189 + 4B];
  stmt_b: _46 = MEM[(uint8_t *)pix1_11 + 5B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _43 = MEM[(uint8_t *)pix2_189 + 4B];
  stmt_b: _48 = MEM[(uint8_t *)pix2_189 + 5B];
(analyze_overlapping_iterations 
  (chrec_a = {4B, +, pretmp_425}_8)
  (chrec_b = {5B, +, pretmp_425}_8)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _43 = MEM[(uint8_t *)pix2_189 + 4B];
  stmt_b: _51 = MEM[(uint8_t *)pix1_11 + 6B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _43 = MEM[(uint8_t *)pix2_189 + 4B];
  stmt_b: _53 = MEM[(uint8_t *)pix2_189 + 6B];
(analyze_overlapping_iterations 
  (chrec_a = {4B, +, pretmp_425}_8)
  (chrec_b = {6B, +, pretmp_425}_8)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _43 = MEM[(uint8_t *)pix2_189 + 4B];
  stmt_b: _56 = MEM[(uint8_t *)pix1_11 + 7B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _43 = MEM[(uint8_t *)pix2_189 + 4B];
  stmt_b: _58 = MEM[(uint8_t *)pix2_189 + 7B];
(analyze_overlapping_iterations 
  (chrec_a = {4B, +, pretmp_425}_8)
  (chrec_b = {7B, +, pretmp_425}_8)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _43 = MEM[(uint8_t *)pix2_189 + 4B];
  stmt_b: diff[i_13][0] = _181;
) -> no dependence
(compute_affine_dependence
  stmt_a: _43 = MEM[(uint8_t *)pix2_189 + 4B];
  stmt_b: diff[i_13][4] = _82;
) -> no dependence
(compute_affine_dependence
  stmt_a: _43 = MEM[(uint8_t *)pix2_189 + 4B];
  stmt_b: diff[i_13][1] = _183;
) -> no dependence
(compute_affine_dependence
  stmt_a: _43 = MEM[(uint8_t *)pix2_189 + 4B];
  stmt_b: diff[i_13][5] = _88;
) -> no dependence
(compute_affine_dependence
  stmt_a: _43 = MEM[(uint8_t *)pix2_189 + 4B];
  stmt_b: diff[i_13][2] = _185;
) -> no dependence
(compute_affine_dependence
  stmt_a: _43 = MEM[(uint8_t *)pix2_189 + 4B];
  stmt_b: diff[i_13][6] = _94;
) -> no dependence
(compute_affine_dependence
  stmt_a: _43 = MEM[(uint8_t *)pix2_189 + 4B];
  stmt_b: diff[i_13][3] = _187;
) -> no dependence
(compute_affine_dependence
  stmt_a: _43 = MEM[(uint8_t *)pix2_189 + 4B];
  stmt_b: diff[i_13][7] = _100;
) -> no dependence
(compute_affine_dependence
  stmt_a: _46 = MEM[(uint8_t *)pix1_11 + 5B];
  stmt_b: _48 = MEM[(uint8_t *)pix2_189 + 5B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _46 = MEM[(uint8_t *)pix1_11 + 5B];
  stmt_b: _51 = MEM[(uint8_t *)pix1_11 + 6B];
(analyze_overlapping_iterations 
  (chrec_a = {5B, +, pretmp_424}_8)
  (chrec_b = {6B, +, pretmp_424}_8)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _46 = MEM[(uint8_t *)pix1_11 + 5B];
  stmt_b: _53 = MEM[(uint8_t *)pix2_189 + 6B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _46 = MEM[(uint8_t *)pix1_11 + 5B];
  stmt_b: _56 = MEM[(uint8_t *)pix1_11 + 7B];
(analyze_overlapping_iterations 
  (chrec_a = {5B, +, pretmp_424}_8)
  (chrec_b = {7B, +, pretmp_424}_8)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _46 = MEM[(uint8_t *)pix1_11 + 5B];
  stmt_b: _58 = MEM[(uint8_t *)pix2_189 + 7B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _46 = MEM[(uint8_t *)pix1_11 + 5B];
  stmt_b: diff[i_13][0] = _181;
) -> no dependence
(compute_affine_dependence
  stmt_a: _46 = MEM[(uint8_t *)pix1_11 + 5B];
  stmt_b: diff[i_13][4] = _82;
) -> no dependence
(compute_affine_dependence
  stmt_a: _46 = MEM[(uint8_t *)pix1_11 + 5B];
  stmt_b: diff[i_13][1] = _183;
) -> no dependence
(compute_affine_dependence
  stmt_a: _46 = MEM[(uint8_t *)pix1_11 + 5B];
  stmt_b: diff[i_13][5] = _88;
) -> no dependence
(compute_affine_dependence
  stmt_a: _46 = MEM[(uint8_t *)pix1_11 + 5B];
  stmt_b: diff[i_13][2] = _185;
) -> no dependence
(compute_affine_dependence
  stmt_a: _46 = MEM[(uint8_t *)pix1_11 + 5B];
  stmt_b: diff[i_13][6] = _94;
) -> no dependence
(compute_affine_dependence
  stmt_a: _46 = MEM[(uint8_t *)pix1_11 + 5B];
  stmt_b: diff[i_13][3] = _187;
) -> no dependence
(compute_affine_dependence
  stmt_a: _46 = MEM[(uint8_t *)pix1_11 + 5B];
  stmt_b: diff[i_13][7] = _100;
) -> no dependence
(compute_affine_dependence
  stmt_a: _48 = MEM[(uint8_t *)pix2_189 + 5B];
  stmt_b: _51 = MEM[(uint8_t *)pix1_11 + 6B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _48 = MEM[(uint8_t *)pix2_189 + 5B];
  stmt_b: _53 = MEM[(uint8_t *)pix2_189 + 6B];
(analyze_overlapping_iterations 
  (chrec_a = {5B, +, pretmp_425}_8)
  (chrec_b = {6B, +, pretmp_425}_8)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _48 = MEM[(uint8_t *)pix2_189 + 5B];
  stmt_b: _56 = MEM[(uint8_t *)pix1_11 + 7B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _48 = MEM[(uint8_t *)pix2_189 + 5B];
  stmt_b: _58 = MEM[(uint8_t *)pix2_189 + 7B];
(analyze_overlapping_iterations 
  (chrec_a = {5B, +, pretmp_425}_8)
  (chrec_b = {7B, +, pretmp_425}_8)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _48 = MEM[(uint8_t *)pix2_189 + 5B];
  stmt_b: diff[i_13][0] = _181;
) -> no dependence
(compute_affine_dependence
  stmt_a: _48 = MEM[(uint8_t *)pix2_189 + 5B];
  stmt_b: diff[i_13][4] = _82;
) -> no dependence
(compute_affine_dependence
  stmt_a: _48 = MEM[(uint8_t *)pix2_189 + 5B];
  stmt_b: diff[i_13][1] = _183;
) -> no dependence
(compute_affine_dependence
  stmt_a: _48 = MEM[(uint8_t *)pix2_189 + 5B];
  stmt_b: diff[i_13][5] = _88;
) -> no dependence
(compute_affine_dependence
  stmt_a: _48 = MEM[(uint8_t *)pix2_189 + 5B];
  stmt_b: diff[i_13][2] = _185;
) -> no dependence
(compute_affine_dependence
  stmt_a: _48 = MEM[(uint8_t *)pix2_189 + 5B];
  stmt_b: diff[i_13][6] = _94;
) -> no dependence
(compute_affine_dependence
  stmt_a: _48 = MEM[(uint8_t *)pix2_189 + 5B];
  stmt_b: diff[i_13][3] = _187;
) -> no dependence
(compute_affine_dependence
  stmt_a: _48 = MEM[(uint8_t *)pix2_189 + 5B];
  stmt_b: diff[i_13][7] = _100;
) -> no dependence
(compute_affine_dependence
  stmt_a: _51 = MEM[(uint8_t *)pix1_11 + 6B];
  stmt_b: _53 = MEM[(uint8_t *)pix2_189 + 6B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _51 = MEM[(uint8_t *)pix1_11 + 6B];
  stmt_b: _56 = MEM[(uint8_t *)pix1_11 + 7B];
(analyze_overlapping_iterations 
  (chrec_a = {6B, +, pretmp_424}_8)
  (chrec_b = {7B, +, pretmp_424}_8)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _51 = MEM[(uint8_t *)pix1_11 + 6B];
  stmt_b: _58 = MEM[(uint8_t *)pix2_189 + 7B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _51 = MEM[(uint8_t *)pix1_11 + 6B];
  stmt_b: diff[i_13][0] = _181;
) -> no dependence
(compute_affine_dependence
  stmt_a: _51 = MEM[(uint8_t *)pix1_11 + 6B];
  stmt_b: diff[i_13][4] = _82;
) -> no dependence
(compute_affine_dependence
  stmt_a: _51 = MEM[(uint8_t *)pix1_11 + 6B];
  stmt_b: diff[i_13][1] = _183;
) -> no dependence
(compute_affine_dependence
  stmt_a: _51 = MEM[(uint8_t *)pix1_11 + 6B];
  stmt_b: diff[i_13][5] = _88;
) -> no dependence
(compute_affine_dependence
  stmt_a: _51 = MEM[(uint8_t *)pix1_11 + 6B];
  stmt_b: diff[i_13][2] = _185;
) -> no dependence
(compute_affine_dependence
  stmt_a: _51 = MEM[(uint8_t *)pix1_11 + 6B];
  stmt_b: diff[i_13][6] = _94;
) -> no dependence
(compute_affine_dependence
  stmt_a: _51 = MEM[(uint8_t *)pix1_11 + 6B];
  stmt_b: diff[i_13][3] = _187;
) -> no dependence
(compute_affine_dependence
  stmt_a: _51 = MEM[(uint8_t *)pix1_11 + 6B];
  stmt_b: diff[i_13][7] = _100;
) -> no dependence
(compute_affine_dependence
  stmt_a: _53 = MEM[(uint8_t *)pix2_189 + 6B];
  stmt_b: _56 = MEM[(uint8_t *)pix1_11 + 7B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _53 = MEM[(uint8_t *)pix2_189 + 6B];
  stmt_b: _58 = MEM[(uint8_t *)pix2_189 + 7B];
(analyze_overlapping_iterations 
  (chrec_a = {6B, +, pretmp_425}_8)
  (chrec_b = {7B, +, pretmp_425}_8)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _53 = MEM[(uint8_t *)pix2_189 + 6B];
  stmt_b: diff[i_13][0] = _181;
) -> no dependence
(compute_affine_dependence
  stmt_a: _53 = MEM[(uint8_t *)pix2_189 + 6B];
  stmt_b: diff[i_13][4] = _82;
) -> no dependence
(compute_affine_dependence
  stmt_a: _53 = MEM[(uint8_t *)pix2_189 + 6B];
  stmt_b: diff[i_13][1] = _183;
) -> no dependence
(compute_affine_dependence
  stmt_a: _53 = MEM[(uint8_t *)pix2_189 + 6B];
  stmt_b: diff[i_13][5] = _88;
) -> no dependence
(compute_affine_dependence
  stmt_a: _53 = MEM[(uint8_t *)pix2_189 + 6B];
  stmt_b: diff[i_13][2] = _185;
) -> no dependence
(compute_affine_dependence
  stmt_a: _53 = MEM[(uint8_t *)pix2_189 + 6B];
  stmt_b: diff[i_13][6] = _94;
) -> no dependence
(compute_affine_dependence
  stmt_a: _53 = MEM[(uint8_t *)pix2_189 + 6B];
  stmt_b: diff[i_13][3] = _187;
) -> no dependence
(compute_affine_dependence
  stmt_a: _53 = MEM[(uint8_t *)pix2_189 + 6B];
  stmt_b: diff[i_13][7] = _100;
) -> no dependence
(compute_affine_dependence
  stmt_a: _56 = MEM[(uint8_t *)pix1_11 + 7B];
  stmt_b: _58 = MEM[(uint8_t *)pix2_189 + 7B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _56 = MEM[(uint8_t *)pix1_11 + 7B];
  stmt_b: diff[i_13][0] = _181;
) -> no dependence
(compute_affine_dependence
  stmt_a: _56 = MEM[(uint8_t *)pix1_11 + 7B];
  stmt_b: diff[i_13][4] = _82;
) -> no dependence
(compute_affine_dependence
  stmt_a: _56 = MEM[(uint8_t *)pix1_11 + 7B];
  stmt_b: diff[i_13][1] = _183;
) -> no dependence
(compute_affine_dependence
  stmt_a: _56 = MEM[(uint8_t *)pix1_11 + 7B];
  stmt_b: diff[i_13][5] = _88;
) -> no dependence
(compute_affine_dependence
  stmt_a: _56 = MEM[(uint8_t *)pix1_11 + 7B];
  stmt_b: diff[i_13][2] = _185;
) -> no dependence
(compute_affine_dependence
  stmt_a: _56 = MEM[(uint8_t *)pix1_11 + 7B];
  stmt_b: diff[i_13][6] = _94;
) -> no dependence
(compute_affine_dependence
  stmt_a: _56 = MEM[(uint8_t *)pix1_11 + 7B];
  stmt_b: diff[i_13][3] = _187;
) -> no dependence
(compute_affine_dependence
  stmt_a: _56 = MEM[(uint8_t *)pix1_11 + 7B];
  stmt_b: diff[i_13][7] = _100;
) -> no dependence
(compute_affine_dependence
  stmt_a: _58 = MEM[(uint8_t *)pix2_189 + 7B];
  stmt_b: diff[i_13][0] = _181;
) -> no dependence
(compute_affine_dependence
  stmt_a: _58 = MEM[(uint8_t *)pix2_189 + 7B];
  stmt_b: diff[i_13][4] = _82;
) -> no dependence
(compute_affine_dependence
  stmt_a: _58 = MEM[(uint8_t *)pix2_189 + 7B];
  stmt_b: diff[i_13][1] = _183;
) -> no dependence
(compute_affine_dependence
  stmt_a: _58 = MEM[(uint8_t *)pix2_189 + 7B];
  stmt_b: diff[i_13][5] = _88;
) -> no dependence
(compute_affine_dependence
  stmt_a: _58 = MEM[(uint8_t *)pix2_189 + 7B];
  stmt_b: diff[i_13][2] = _185;
) -> no dependence
(compute_affine_dependence
  stmt_a: _58 = MEM[(uint8_t *)pix2_189 + 7B];
  stmt_b: diff[i_13][6] = _94;
) -> no dependence
(compute_affine_dependence
  stmt_a: _58 = MEM[(uint8_t *)pix2_189 + 7B];
  stmt_b: diff[i_13][3] = _187;
) -> no dependence
(compute_affine_dependence
  stmt_a: _58 = MEM[(uint8_t *)pix2_189 + 7B];
  stmt_b: diff[i_13][7] = _100;
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_13][0] = _181;
  stmt_b: diff[i_13][4] = _82;
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 4)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_13][0] = _181;
  stmt_b: diff[i_13][1] = _183;
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 1)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_13][0] = _181;
  stmt_b: diff[i_13][5] = _88;
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 5)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_13][0] = _181;
  stmt_b: diff[i_13][2] = _185;
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_13][0] = _181;
  stmt_b: diff[i_13][6] = _94;
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 6)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_13][0] = _181;
  stmt_b: diff[i_13][3] = _187;
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_13][0] = _181;
  stmt_b: diff[i_13][7] = _100;
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_13][4] = _82;
  stmt_b: diff[i_13][1] = _183;
(analyze_overlapping_iterations 
  (chrec_a = 4)
  (chrec_b = 1)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_13][4] = _82;
  stmt_b: diff[i_13][5] = _88;
(analyze_overlapping_iterations 
  (chrec_a = 4)
  (chrec_b = 5)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_13][4] = _82;
  stmt_b: diff[i_13][2] = _185;
(analyze_overlapping_iterations 
  (chrec_a = 4)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_13][4] = _82;
  stmt_b: diff[i_13][6] = _94;
(analyze_overlapping_iterations 
  (chrec_a = 4)
  (chrec_b = 6)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_13][4] = _82;
  stmt_b: diff[i_13][3] = _187;
(analyze_overlapping_iterations 
  (chrec_a = 4)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_13][4] = _82;
  stmt_b: diff[i_13][7] = _100;
(analyze_overlapping_iterations 
  (chrec_a = 4)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_13][1] = _183;
  stmt_b: diff[i_13][5] = _88;
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 5)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_13][1] = _183;
  stmt_b: diff[i_13][2] = _185;
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_13][1] = _183;
  stmt_b: diff[i_13][6] = _94;
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 6)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_13][1] = _183;
  stmt_b: diff[i_13][3] = _187;
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_13][1] = _183;
  stmt_b: diff[i_13][7] = _100;
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_13][5] = _88;
  stmt_b: diff[i_13][2] = _185;
(analyze_overlapping_iterations 
  (chrec_a = 5)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_13][5] = _88;
  stmt_b: diff[i_13][6] = _94;
(analyze_overlapping_iterations 
  (chrec_a = 5)
  (chrec_b = 6)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_13][5] = _88;
  stmt_b: diff[i_13][3] = _187;
(analyze_overlapping_iterations 
  (chrec_a = 5)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_13][5] = _88;
  stmt_b: diff[i_13][7] = _100;
(analyze_overlapping_iterations 
  (chrec_a = 5)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_13][2] = _185;
  stmt_b: diff[i_13][6] = _94;
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 6)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_13][2] = _185;
  stmt_b: diff[i_13][3] = _187;
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_13][2] = _185;
  stmt_b: diff[i_13][7] = _100;
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_13][6] = _94;
  stmt_b: diff[i_13][3] = _187;
(analyze_overlapping_iterations 
  (chrec_a = 6)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_13][6] = _94;
  stmt_b: diff[i_13][7] = _100;
(analyze_overlapping_iterations 
  (chrec_a = 6)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_13][3] = _187;
  stmt_b: diff[i_13][7] = _100;
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _21 = *pix1_11;
  stmt_b: _21 = *pix1_11;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, pretmp_424}_8)
  (chrec_b = {0B, +, pretmp_424}_8)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _23 = *pix2_189;
  stmt_b: _23 = *pix2_189;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, pretmp_425}_8)
  (chrec_b = {0B, +, pretmp_425}_8)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _26 = MEM[(uint8_t *)pix1_11 + 1B];
  stmt_b: _26 = MEM[(uint8_t *)pix1_11 + 1B];
(analyze_overlapping_iterations 
  (chrec_a = {1B, +, pretmp_424}_8)
  (chrec_b = {1B, +, pretmp_424}_8)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _28 = MEM[(uint8_t *)pix2_189 + 1B];
  stmt_b: _28 = MEM[(uint8_t *)pix2_189 + 1B];
(analyze_overlapping_iterations 
  (chrec_a = {1B, +, pretmp_425}_8)
  (chrec_b = {1B, +, pretmp_425}_8)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _31 = MEM[(uint8_t *)pix1_11 + 2B];
  stmt_b: _31 = MEM[(uint8_t *)pix1_11 + 2B];
(analyze_overlapping_iterations 
  (chrec_a = {2B, +, pretmp_424}_8)
  (chrec_b = {2B, +, pretmp_424}_8)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _33 = MEM[(uint8_t *)pix2_189 + 2B];
  stmt_b: _33 = MEM[(uint8_t *)pix2_189 + 2B];
(analyze_overlapping_iterations 
  (chrec_a = {2B, +, pretmp_425}_8)
  (chrec_b = {2B, +, pretmp_425}_8)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _36 = MEM[(uint8_t *)pix1_11 + 3B];
  stmt_b: _36 = MEM[(uint8_t *)pix1_11 + 3B];
(analyze_overlapping_iterations 
  (chrec_a = {3B, +, pretmp_424}_8)
  (chrec_b = {3B, +, pretmp_424}_8)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _38 = MEM[(uint8_t *)pix2_189 + 3B];
  stmt_b: _38 = MEM[(uint8_t *)pix2_189 + 3B];
(analyze_overlapping_iterations 
  (chrec_a = {3B, +, pretmp_425}_8)
  (chrec_b = {3B, +, pretmp_425}_8)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _41 = MEM[(uint8_t *)pix1_11 + 4B];
  stmt_b: _41 = MEM[(uint8_t *)pix1_11 + 4B];
(analyze_overlapping_iterations 
  (chrec_a = {4B, +, pretmp_424}_8)
  (chrec_b = {4B, +, pretmp_424}_8)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _43 = MEM[(uint8_t *)pix2_189 + 4B];
  stmt_b: _43 = MEM[(uint8_t *)pix2_189 + 4B];
(analyze_overlapping_iterations 
  (chrec_a = {4B, +, pretmp_425}_8)
  (chrec_b = {4B, +, pretmp_425}_8)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _46 = MEM[(uint8_t *)pix1_11 + 5B];
  stmt_b: _46 = MEM[(uint8_t *)pix1_11 + 5B];
(analyze_overlapping_iterations 
  (chrec_a = {5B, +, pretmp_424}_8)
  (chrec_b = {5B, +, pretmp_424}_8)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _48 = MEM[(uint8_t *)pix2_189 + 5B];
  stmt_b: _48 = MEM[(uint8_t *)pix2_189 + 5B];
(analyze_overlapping_iterations 
  (chrec_a = {5B, +, pretmp_425}_8)
  (chrec_b = {5B, +, pretmp_425}_8)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _51 = MEM[(uint8_t *)pix1_11 + 6B];
  stmt_b: _51 = MEM[(uint8_t *)pix1_11 + 6B];
(analyze_overlapping_iterations 
  (chrec_a = {6B, +, pretmp_424}_8)
  (chrec_b = {6B, +, pretmp_424}_8)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _53 = MEM[(uint8_t *)pix2_189 + 6B];
  stmt_b: _53 = MEM[(uint8_t *)pix2_189 + 6B];
(analyze_overlapping_iterations 
  (chrec_a = {6B, +, pretmp_425}_8)
  (chrec_b = {6B, +, pretmp_425}_8)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _56 = MEM[(uint8_t *)pix1_11 + 7B];
  stmt_b: _56 = MEM[(uint8_t *)pix1_11 + 7B];
(analyze_overlapping_iterations 
  (chrec_a = {7B, +, pretmp_424}_8)
  (chrec_b = {7B, +, pretmp_424}_8)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _58 = MEM[(uint8_t *)pix2_189 + 7B];
  stmt_b: _58 = MEM[(uint8_t *)pix2_189 + 7B];
(analyze_overlapping_iterations 
  (chrec_a = {7B, +, pretmp_425}_8)
  (chrec_b = {7B, +, pretmp_425}_8)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: diff[i_13][0] = _181;
  stmt_b: diff[i_13][0] = _181;
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 0)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_8)
  (chrec_b = {0, +, 1}_8)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: diff[i_13][4] = _82;
  stmt_b: diff[i_13][4] = _82;
(analyze_overlapping_iterations 
  (chrec_a = 4)
  (chrec_b = 4)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_8)
  (chrec_b = {0, +, 1}_8)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: diff[i_13][1] = _183;
  stmt_b: diff[i_13][1] = _183;
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_8)
  (chrec_b = {0, +, 1}_8)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: diff[i_13][5] = _88;
  stmt_b: diff[i_13][5] = _88;
(analyze_overlapping_iterations 
  (chrec_a = 5)
  (chrec_b = 5)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_8)
  (chrec_b = {0, +, 1}_8)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: diff[i_13][2] = _185;
  stmt_b: diff[i_13][2] = _185;
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_8)
  (chrec_b = {0, +, 1}_8)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: diff[i_13][6] = _94;
  stmt_b: diff[i_13][6] = _94;
(analyze_overlapping_iterations 
  (chrec_a = 6)
  (chrec_b = 6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_8)
  (chrec_b = {0, +, 1}_8)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: diff[i_13][3] = _187;
  stmt_b: diff[i_13][3] = _187;
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_8)
  (chrec_b = {0, +, 1}_8)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: diff[i_13][7] = _100;
  stmt_b: diff[i_13][7] = _100;
(analyze_overlapping_iterations 
  (chrec_a = 7)
  (chrec_b = 7)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_8)
  (chrec_b = {0, +, 1}_8)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/pixel.c:262:13: note: === vect_determine_vectorization_factor ===
common/pixel.c:262:13: note: ==> examining phi: i_13 = PHI <i_102(4), 0(2)>

common/pixel.c:262:13: note: ==> examining phi: pix1_11 = PHI <pix1_138(4), pix1_2(D)(2)>

common/pixel.c:262:13: note: ==> examining phi: pix2_189 = PHI <pix2_105(4), pix2_4(D)(2)>

common/pixel.c:262:13: note: ==> examining phi: .MEM_175 = PHI <.MEM_101(4), .MEM_1(D)(2)>

common/pixel.c:262:13: note: ==> examining phi: ivtmp_419 = PHI <ivtmp_418(4), 8(2)>

common/pixel.c:262:13: note: ==> examining statement: # DEBUG p2 => pix2_189

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: # DEBUG p1 => pix1_11

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: # DEBUG i => i_13

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: _21 = *pix1_11;

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: _22 = (int) _21;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: _23 = *pix2_189;

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: _24 = (int) _23;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: a0_25 = _22 - _24;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: nunits = 4
common/pixel.c:262:13: note: ==> examining statement: # DEBUG a0 => a0_25

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: _26 = MEM[(uint8_t *)pix1_11 + 1B];

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: _27 = (int) _26;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: _28 = MEM[(uint8_t *)pix2_189 + 1B];

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: _29 = (int) _28;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: a1_30 = _27 - _29;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: nunits = 4
common/pixel.c:262:13: note: ==> examining statement: # DEBUG a1 => a1_30

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: _31 = MEM[(uint8_t *)pix1_11 + 2B];

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: _32 = (int) _31;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: _33 = MEM[(uint8_t *)pix2_189 + 2B];

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: _34 = (int) _33;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: a2_35 = _32 - _34;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: nunits = 4
common/pixel.c:262:13: note: ==> examining statement: # DEBUG a2 => a2_35

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: _36 = MEM[(uint8_t *)pix1_11 + 3B];

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: _37 = (int) _36;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: _38 = MEM[(uint8_t *)pix2_189 + 3B];

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: _39 = (int) _38;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: a3_40 = _37 - _39;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: nunits = 4
common/pixel.c:262:13: note: ==> examining statement: # DEBUG a3 => a3_40

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: _41 = MEM[(uint8_t *)pix1_11 + 4B];

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: _42 = (int) _41;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: _43 = MEM[(uint8_t *)pix2_189 + 4B];

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: _44 = (int) _43;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: a4_45 = _42 - _44;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: nunits = 4
common/pixel.c:262:13: note: ==> examining statement: # DEBUG a4 => a4_45

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: _46 = MEM[(uint8_t *)pix1_11 + 5B];

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: _47 = (int) _46;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: _48 = MEM[(uint8_t *)pix2_189 + 5B];

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: _49 = (int) _48;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: a5_50 = _47 - _49;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: nunits = 4
common/pixel.c:262:13: note: ==> examining statement: # DEBUG a5 => a5_50

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: _51 = MEM[(uint8_t *)pix1_11 + 6B];

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: _52 = (int) _51;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: _53 = MEM[(uint8_t *)pix2_189 + 6B];

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: _54 = (int) _53;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: a6_55 = _52 - _54;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: nunits = 4
common/pixel.c:262:13: note: ==> examining statement: # DEBUG a6 => a6_55

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: _56 = MEM[(uint8_t *)pix1_11 + 7B];

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: _57 = (int) _56;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: _58 = MEM[(uint8_t *)pix2_189 + 7B];

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: _59 = (int) _58;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: a7_60 = _57 - _59;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: nunits = 4
common/pixel.c:262:13: note: ==> examining statement: # DEBUG a7 => a7_60

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: t0_61 = a0_25 + a1_30;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: nunits = 4
common/pixel.c:262:13: note: ==> examining statement: # DEBUG t0 => t0_61

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: t1_62 = a0_25 - a1_30;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: nunits = 4
common/pixel.c:262:13: note: ==> examining statement: # DEBUG t1 => t1_62

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: t2_63 = a2_35 + a3_40;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: nunits = 4
common/pixel.c:262:13: note: ==> examining statement: # DEBUG t2 => t2_63

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: t3_64 = a2_35 - a3_40;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: nunits = 4
common/pixel.c:262:13: note: ==> examining statement: # DEBUG t3 => t3_64

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: b0_65 = t0_61 + t2_63;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: nunits = 4
common/pixel.c:262:13: note: ==> examining statement: # DEBUG b0 => b0_65

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: b2_66 = t0_61 - t2_63;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: nunits = 4
common/pixel.c:262:13: note: ==> examining statement: # DEBUG b2 => b2_66

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: b1_67 = t1_62 + t3_64;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: nunits = 4
common/pixel.c:262:13: note: ==> examining statement: # DEBUG b1 => b1_67

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: b3_68 = t1_62 - t3_64;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: nunits = 4
common/pixel.c:262:13: note: ==> examining statement: # DEBUG b3 => b3_68

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: t0_69 = a4_45 + a5_50;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: nunits = 4
common/pixel.c:262:13: note: ==> examining statement: # DEBUG t0 => t0_69

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: t1_70 = a4_45 - a5_50;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: nunits = 4
common/pixel.c:262:13: note: ==> examining statement: # DEBUG t1 => t1_70

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: t2_71 = a6_55 + a7_60;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: nunits = 4
common/pixel.c:262:13: note: ==> examining statement: # DEBUG t2 => t2_71

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: t3_72 = a6_55 - a7_60;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: nunits = 4
common/pixel.c:262:13: note: ==> examining statement: # DEBUG t3 => t3_72

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: b4_73 = t0_69 + t2_71;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: nunits = 4
common/pixel.c:262:13: note: ==> examining statement: # DEBUG b4 => b4_73

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: b6_74 = t0_69 - t2_71;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: nunits = 4
common/pixel.c:262:13: note: ==> examining statement: # DEBUG b6 => b6_74

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: b5_75 = t1_70 + t3_72;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: nunits = 4
common/pixel.c:262:13: note: ==> examining statement: # DEBUG b5 => b5_75

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: b7_76 = t1_70 - t3_72;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: nunits = 4
common/pixel.c:262:13: note: ==> examining statement: # DEBUG b7 => b7_76

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: _180 = (unsigned short) b0_65;

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: _78 = (unsigned short) b4_73;

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: _79 = _78 + _180;

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: _181 = (short int) _79;

common/pixel.c:262:13: note: get vectype for scalar type:  short int
common/pixel.c:262:13: note: vectype: vector(8) short int
common/pixel.c:262:13: note: get vectype for scalar type:  short int
common/pixel.c:262:13: note: vectype: vector(8) short int
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: diff[i_13][0] = _181;

common/pixel.c:262:13: note: get vectype for scalar type:  int16_t
common/pixel.c:262:13: note: vectype: vector(8) short int
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: _81 = _180 - _78;

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: _82 = (short int) _81;

common/pixel.c:262:13: note: get vectype for scalar type:  short int
common/pixel.c:262:13: note: vectype: vector(8) short int
common/pixel.c:262:13: note: get vectype for scalar type:  short int
common/pixel.c:262:13: note: vectype: vector(8) short int
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: diff[i_13][4] = _82;

common/pixel.c:262:13: note: get vectype for scalar type:  int16_t
common/pixel.c:262:13: note: vectype: vector(8) short int
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: _182 = (unsigned short) b1_67;

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: _84 = (unsigned short) b5_75;

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: _85 = _84 + _182;

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: _183 = (short int) _85;

common/pixel.c:262:13: note: get vectype for scalar type:  short int
common/pixel.c:262:13: note: vectype: vector(8) short int
common/pixel.c:262:13: note: get vectype for scalar type:  short int
common/pixel.c:262:13: note: vectype: vector(8) short int
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: diff[i_13][1] = _183;

common/pixel.c:262:13: note: get vectype for scalar type:  int16_t
common/pixel.c:262:13: note: vectype: vector(8) short int
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: _87 = _182 - _84;

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: _88 = (short int) _87;

common/pixel.c:262:13: note: get vectype for scalar type:  short int
common/pixel.c:262:13: note: vectype: vector(8) short int
common/pixel.c:262:13: note: get vectype for scalar type:  short int
common/pixel.c:262:13: note: vectype: vector(8) short int
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: diff[i_13][5] = _88;

common/pixel.c:262:13: note: get vectype for scalar type:  int16_t
common/pixel.c:262:13: note: vectype: vector(8) short int
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: _184 = (unsigned short) b2_66;

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: _90 = (unsigned short) b6_74;

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: _91 = _90 + _184;

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: _185 = (short int) _91;

common/pixel.c:262:13: note: get vectype for scalar type:  short int
common/pixel.c:262:13: note: vectype: vector(8) short int
common/pixel.c:262:13: note: get vectype for scalar type:  short int
common/pixel.c:262:13: note: vectype: vector(8) short int
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: diff[i_13][2] = _185;

common/pixel.c:262:13: note: get vectype for scalar type:  int16_t
common/pixel.c:262:13: note: vectype: vector(8) short int
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: _93 = _184 - _90;

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: _94 = (short int) _93;

common/pixel.c:262:13: note: get vectype for scalar type:  short int
common/pixel.c:262:13: note: vectype: vector(8) short int
common/pixel.c:262:13: note: get vectype for scalar type:  short int
common/pixel.c:262:13: note: vectype: vector(8) short int
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: diff[i_13][6] = _94;

common/pixel.c:262:13: note: get vectype for scalar type:  int16_t
common/pixel.c:262:13: note: vectype: vector(8) short int
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: _186 = (unsigned short) b3_68;

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: _96 = (unsigned short) b7_76;

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: _97 = _96 + _186;

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: _187 = (short int) _97;

common/pixel.c:262:13: note: get vectype for scalar type:  short int
common/pixel.c:262:13: note: vectype: vector(8) short int
common/pixel.c:262:13: note: get vectype for scalar type:  short int
common/pixel.c:262:13: note: vectype: vector(8) short int
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: diff[i_13][3] = _187;

common/pixel.c:262:13: note: get vectype for scalar type:  int16_t
common/pixel.c:262:13: note: vectype: vector(8) short int
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: _99 = _186 - _96;

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: _100 = (short int) _99;

common/pixel.c:262:13: note: get vectype for scalar type:  short int
common/pixel.c:262:13: note: vectype: vector(8) short int
common/pixel.c:262:13: note: get vectype for scalar type:  short int
common/pixel.c:262:13: note: vectype: vector(8) short int
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: diff[i_13][7] = _100;

common/pixel.c:262:13: note: get vectype for scalar type:  int16_t
common/pixel.c:262:13: note: vectype: vector(8) short int
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: i_102 = i_13 + 1;

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: # DEBUG i => i_102

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: pix1_138 = pix1_11 + pretmp_424;

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: # DEBUG p1 => pix1_138

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: pix2_105 = pix2_189 + pretmp_425;

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: # DEBUG p2 => pix2_105

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: # DEBUG p2 => pix2_105

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: # DEBUG p1 => pix1_138

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: # DEBUG i => i_102

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: ivtmp_418 = ivtmp_419 - 1;

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: if (ivtmp_418 != 0)

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: vectorization factor = 16
common/pixel.c:262:13: note: === vect_analyze_data_refs_alignment ===
common/pixel.c:262:13: note: vect_compute_data_ref_alignment:
common/pixel.c:262:13: note: vect_compute_data_ref_alignment:
common/pixel.c:262:13: note: vect_compute_data_ref_alignment:
common/pixel.c:262:13: note: vect_compute_data_ref_alignment:
common/pixel.c:262:13: note: vect_compute_data_ref_alignment:
common/pixel.c:262:13: note: vect_compute_data_ref_alignment:
common/pixel.c:262:13: note: vect_compute_data_ref_alignment:
common/pixel.c:262:13: note: vect_compute_data_ref_alignment:
common/pixel.c:262:13: note: vect_compute_data_ref_alignment:
common/pixel.c:262:13: note: vect_compute_data_ref_alignment:
common/pixel.c:262:13: note: vect_compute_data_ref_alignment:
common/pixel.c:262:13: note: vect_compute_data_ref_alignment:
common/pixel.c:262:13: note: vect_compute_data_ref_alignment:
common/pixel.c:262:13: note: vect_compute_data_ref_alignment:
common/pixel.c:262:13: note: vect_compute_data_ref_alignment:
common/pixel.c:262:13: note: vect_compute_data_ref_alignment:
common/pixel.c:262:13: note: vect_compute_data_ref_alignment:
common/pixel.c:262:13: note: misalign = 0 bytes of ref diff[i_13][0]
common/pixel.c:262:13: note: vect_compute_data_ref_alignment:
common/pixel.c:262:13: note: misalign = 8 bytes of ref diff[i_13][4]
common/pixel.c:262:13: note: vect_compute_data_ref_alignment:
common/pixel.c:262:13: note: misalign = 2 bytes of ref diff[i_13][1]
common/pixel.c:262:13: note: vect_compute_data_ref_alignment:
common/pixel.c:262:13: note: misalign = 10 bytes of ref diff[i_13][5]
common/pixel.c:262:13: note: vect_compute_data_ref_alignment:
common/pixel.c:262:13: note: misalign = 4 bytes of ref diff[i_13][2]
common/pixel.c:262:13: note: vect_compute_data_ref_alignment:
common/pixel.c:262:13: note: misalign = 12 bytes of ref diff[i_13][6]
common/pixel.c:262:13: note: vect_compute_data_ref_alignment:
common/pixel.c:262:13: note: misalign = 6 bytes of ref diff[i_13][3]
common/pixel.c:262:13: note: vect_compute_data_ref_alignment:
common/pixel.c:262:13: note: misalign = 14 bytes of ref diff[i_13][7]
common/pixel.c:262:13: note: === vect_prune_runtime_alias_test_list ===
common/pixel.c:262:13: note: === vect_enhance_data_refs_alignment ===
common/pixel.c:262:13: note: vect_can_advance_ivs_p:
common/pixel.c:262:13: note: Analyze phi: i_13 = PHI <i_102(4), 0(2)>

common/pixel.c:262:13: note: Analyze phi: pix1_11 = PHI <pix1_138(4), pix1_2(D)(2)>

common/pixel.c:262:13: note: Analyze phi: pix2_189 = PHI <pix2_105(4), pix2_4(D)(2)>

common/pixel.c:262:13: note: Analyze phi: .MEM_175 = PHI <.MEM_101(4), .MEM_1(D)(2)>

common/pixel.c:262:13: note: virtual phi. skip.
common/pixel.c:262:13: note: Analyze phi: ivtmp_419 = PHI <ivtmp_418(4), 8(2)>

common/pixel.c:262:13: note: Setting misalignment to -1.
common/pixel.c:262:13: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:262:13: note: vect_get_data_access_cost: inside_cost = 2, outside_cost = 0.
common/pixel.c:262:13: note: Setting misalignment to -1.
common/pixel.c:262:13: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:262:13: note: vect_get_data_access_cost: inside_cost = 4, outside_cost = 0.
common/pixel.c:262:13: note: Setting misalignment to -1.
common/pixel.c:262:13: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:262:13: note: vect_get_data_access_cost: inside_cost = 6, outside_cost = 0.
common/pixel.c:262:13: note: Setting misalignment to -1.
common/pixel.c:262:13: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:262:13: note: vect_get_data_access_cost: inside_cost = 8, outside_cost = 0.
common/pixel.c:262:13: note: Setting misalignment to -1.
common/pixel.c:262:13: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:262:13: note: vect_get_data_access_cost: inside_cost = 10, outside_cost = 0.
common/pixel.c:262:13: note: Setting misalignment to -1.
common/pixel.c:262:13: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:262:13: note: vect_get_data_access_cost: inside_cost = 12, outside_cost = 0.
common/pixel.c:262:13: note: Setting misalignment to -1.
common/pixel.c:262:13: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:262:13: note: vect_get_data_access_cost: inside_cost = 14, outside_cost = 0.
common/pixel.c:262:13: note: Setting misalignment to -1.
common/pixel.c:262:13: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:262:13: note: vect_get_data_access_cost: inside_cost = 16, outside_cost = 0.
common/pixel.c:262:13: note: Setting misalignment to -1.
common/pixel.c:262:13: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:262:13: note: vect_get_data_access_cost: inside_cost = 18, outside_cost = 0.
common/pixel.c:262:13: note: Setting misalignment to -1.
common/pixel.c:262:13: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:262:13: note: vect_get_data_access_cost: inside_cost = 20, outside_cost = 0.
common/pixel.c:262:13: note: Setting misalignment to -1.
common/pixel.c:262:13: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:262:13: note: vect_get_data_access_cost: inside_cost = 22, outside_cost = 0.
common/pixel.c:262:13: note: Setting misalignment to -1.
common/pixel.c:262:13: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:262:13: note: vect_get_data_access_cost: inside_cost = 24, outside_cost = 0.
common/pixel.c:262:13: note: Setting misalignment to -1.
common/pixel.c:262:13: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:262:13: note: vect_get_data_access_cost: inside_cost = 26, outside_cost = 0.
common/pixel.c:262:13: note: Setting misalignment to -1.
common/pixel.c:262:13: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:262:13: note: vect_get_data_access_cost: inside_cost = 28, outside_cost = 0.
common/pixel.c:262:13: note: Setting misalignment to -1.
common/pixel.c:262:13: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:262:13: note: vect_get_data_access_cost: inside_cost = 30, outside_cost = 0.
common/pixel.c:262:13: note: Setting misalignment to -1.
common/pixel.c:262:13: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:262:13: note: vect_get_data_access_cost: inside_cost = 32, outside_cost = 0.
common/pixel.c:262:13: note: vect_model_store_cost: aligned.
common/pixel.c:262:13: note: vect_get_data_access_cost: inside_cost = 34, outside_cost = 0.
common/pixel.c:262:13: note: === vect_analyze_slp ===
common/pixel.c:262:13: note: Build SLP for diff[i_13][0] = _181;

common/pixel.c:262:13: note: Build SLP for diff[i_13][1] = _183;

common/pixel.c:262:13: note: Build SLP for diff[i_13][2] = _185;

common/pixel.c:262:13: note: Build SLP for diff[i_13][3] = _187;

common/pixel.c:262:13: note: Build SLP for diff[i_13][4] = _82;

common/pixel.c:262:13: note: Build SLP for diff[i_13][5] = _88;

common/pixel.c:262:13: note: Build SLP for diff[i_13][6] = _94;

common/pixel.c:262:13: note: Build SLP for diff[i_13][7] = _100;

common/pixel.c:262:13: note: vect_is_simple_use: operand _181
common/pixel.c:262:13: note: def_stmt: _181 = (short int) _79;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _183
common/pixel.c:262:13: note: def_stmt: _183 = (short int) _85;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _185
common/pixel.c:262:13: note: def_stmt: _185 = (short int) _91;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _187
common/pixel.c:262:13: note: def_stmt: _187 = (short int) _97;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _82
common/pixel.c:262:13: note: def_stmt: _82 = (short int) _81;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _88
common/pixel.c:262:13: note: def_stmt: _88 = (short int) _87;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _94
common/pixel.c:262:13: note: def_stmt: _94 = (short int) _93;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _100
common/pixel.c:262:13: note: def_stmt: _100 = (short int) _99;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: Build SLP for _181 = (short int) _79;

common/pixel.c:262:13: note: Build SLP for _183 = (short int) _85;

common/pixel.c:262:13: note: Build SLP for _185 = (short int) _91;

common/pixel.c:262:13: note: Build SLP for _187 = (short int) _97;

common/pixel.c:262:13: note: Build SLP for _82 = (short int) _81;

common/pixel.c:262:13: note: Build SLP for _88 = (short int) _87;

common/pixel.c:262:13: note: Build SLP for _94 = (short int) _93;

common/pixel.c:262:13: note: Build SLP for _100 = (short int) _99;

common/pixel.c:262:13: note: vect_is_simple_use: operand _79
common/pixel.c:262:13: note: def_stmt: _79 = _78 + _180;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _85
common/pixel.c:262:13: note: def_stmt: _85 = _84 + _182;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _91
common/pixel.c:262:13: note: def_stmt: _91 = _90 + _184;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _97
common/pixel.c:262:13: note: def_stmt: _97 = _96 + _186;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _81
common/pixel.c:262:13: note: def_stmt: _81 = _180 - _78;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _87
common/pixel.c:262:13: note: def_stmt: _87 = _182 - _84;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _93
common/pixel.c:262:13: note: def_stmt: _93 = _184 - _90;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _99
common/pixel.c:262:13: note: def_stmt: _99 = _186 - _96;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: Build SLP for _79 = _78 + _180;

common/pixel.c:262:13: note: Build SLP for _85 = _84 + _182;

common/pixel.c:262:13: note: Build SLP for _91 = _90 + _184;

common/pixel.c:262:13: note: Build SLP for _97 = _96 + _186;

common/pixel.c:262:13: note: Build SLP for _81 = _180 - _78;

common/pixel.c:262:13: note: Build SLP failed: different operation in stmt _81 = _180 - _78;

common/pixel.c:262:13: note: Build SLP for _87 = _182 - _84;

common/pixel.c:262:13: note: Build SLP failed: different operation in stmt _87 = _182 - _84;

common/pixel.c:262:13: note: Build SLP for _93 = _184 - _90;

common/pixel.c:262:13: note: Build SLP failed: different operation in stmt _93 = _184 - _90;

common/pixel.c:262:13: note: Build SLP for _99 = _186 - _96;

common/pixel.c:262:13: note: Build SLP failed: different operation in stmt _99 = _186 - _96;

common/pixel.c:262:13: note: === vect_make_slp_decision ===
common/pixel.c:262:13: note: === vect_detect_hybrid_slp ===
common/pixel.c:262:13: note: === vect_analyze_loop_operations ===
common/pixel.c:262:13: note: examining phi: i_13 = PHI <i_102(4), 0(2)>

common/pixel.c:262:13: note: examining phi: pix1_11 = PHI <pix1_138(4), pix1_2(D)(2)>

common/pixel.c:262:13: note: examining phi: pix2_189 = PHI <pix2_105(4), pix2_4(D)(2)>

common/pixel.c:262:13: note: examining phi: .MEM_175 = PHI <.MEM_101(4), .MEM_1(D)(2)>

common/pixel.c:262:13: note: examining phi: ivtmp_419 = PHI <ivtmp_418(4), 8(2)>

common/pixel.c:262:13: note: ==> examining statement: # DEBUG p2 => pix2_189
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: # DEBUG p1 => pix1_11
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: # DEBUG i => i_13
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: _21 = *pix1_11;
common/pixel.c:262:13: note: vect_is_simple_use: operand *pix1_11
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_is_simple_use: operand *pix1_11
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_model_load_cost: inside_cost = 25, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _22 = (int) _21;
common/pixel.c:262:13: note: vect_is_simple_use: operand _21
common/pixel.c:262:13: note: def_stmt: _21 = *pix1_11;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_conversion ===
common/pixel.c:262:13: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _23 = *pix2_189;
common/pixel.c:262:13: note: vect_is_simple_use: operand *pix2_189
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_is_simple_use: operand *pix2_189
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_model_load_cost: inside_cost = 25, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _24 = (int) _23;
common/pixel.c:262:13: note: vect_is_simple_use: operand _23
common/pixel.c:262:13: note: def_stmt: _23 = *pix2_189;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_conversion ===
common/pixel.c:262:13: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: a0_25 = _22 - _24;
common/pixel.c:262:13: note: vect_is_simple_use: operand _22
common/pixel.c:262:13: note: def_stmt: _22 = (int) _21;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _24
common/pixel.c:262:13: note: def_stmt: _24 = (int) _23;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: # DEBUG a0 => a0_25
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: _26 = MEM[(uint8_t *)pix1_11 + 1B];
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)pix1_11 + 1B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)pix1_11 + 1B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_model_load_cost: inside_cost = 25, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _27 = (int) _26;
common/pixel.c:262:13: note: vect_is_simple_use: operand _26
common/pixel.c:262:13: note: def_stmt: _26 = MEM[(uint8_t *)pix1_11 + 1B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_conversion ===
common/pixel.c:262:13: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _28 = MEM[(uint8_t *)pix2_189 + 1B];
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)pix2_189 + 1B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)pix2_189 + 1B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_model_load_cost: inside_cost = 25, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _29 = (int) _28;
common/pixel.c:262:13: note: vect_is_simple_use: operand _28
common/pixel.c:262:13: note: def_stmt: _28 = MEM[(uint8_t *)pix2_189 + 1B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_conversion ===
common/pixel.c:262:13: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: a1_30 = _27 - _29;
common/pixel.c:262:13: note: vect_is_simple_use: operand _27
common/pixel.c:262:13: note: def_stmt: _27 = (int) _26;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _29
common/pixel.c:262:13: note: def_stmt: _29 = (int) _28;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: # DEBUG a1 => a1_30
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: _31 = MEM[(uint8_t *)pix1_11 + 2B];
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)pix1_11 + 2B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)pix1_11 + 2B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_model_load_cost: inside_cost = 25, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _32 = (int) _31;
common/pixel.c:262:13: note: vect_is_simple_use: operand _31
common/pixel.c:262:13: note: def_stmt: _31 = MEM[(uint8_t *)pix1_11 + 2B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_conversion ===
common/pixel.c:262:13: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _33 = MEM[(uint8_t *)pix2_189 + 2B];
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)pix2_189 + 2B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)pix2_189 + 2B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_model_load_cost: inside_cost = 25, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _34 = (int) _33;
common/pixel.c:262:13: note: vect_is_simple_use: operand _33
common/pixel.c:262:13: note: def_stmt: _33 = MEM[(uint8_t *)pix2_189 + 2B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_conversion ===
common/pixel.c:262:13: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: a2_35 = _32 - _34;
common/pixel.c:262:13: note: vect_is_simple_use: operand _32
common/pixel.c:262:13: note: def_stmt: _32 = (int) _31;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _34
common/pixel.c:262:13: note: def_stmt: _34 = (int) _33;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: # DEBUG a2 => a2_35
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: _36 = MEM[(uint8_t *)pix1_11 + 3B];
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)pix1_11 + 3B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)pix1_11 + 3B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_model_load_cost: inside_cost = 25, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _37 = (int) _36;
common/pixel.c:262:13: note: vect_is_simple_use: operand _36
common/pixel.c:262:13: note: def_stmt: _36 = MEM[(uint8_t *)pix1_11 + 3B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_conversion ===
common/pixel.c:262:13: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _38 = MEM[(uint8_t *)pix2_189 + 3B];
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)pix2_189 + 3B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)pix2_189 + 3B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_model_load_cost: inside_cost = 25, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _39 = (int) _38;
common/pixel.c:262:13: note: vect_is_simple_use: operand _38
common/pixel.c:262:13: note: def_stmt: _38 = MEM[(uint8_t *)pix2_189 + 3B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_conversion ===
common/pixel.c:262:13: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: a3_40 = _37 - _39;
common/pixel.c:262:13: note: vect_is_simple_use: operand _37
common/pixel.c:262:13: note: def_stmt: _37 = (int) _36;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _39
common/pixel.c:262:13: note: def_stmt: _39 = (int) _38;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: # DEBUG a3 => a3_40
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: _41 = MEM[(uint8_t *)pix1_11 + 4B];
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)pix1_11 + 4B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)pix1_11 + 4B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_model_load_cost: inside_cost = 25, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _42 = (int) _41;
common/pixel.c:262:13: note: vect_is_simple_use: operand _41
common/pixel.c:262:13: note: def_stmt: _41 = MEM[(uint8_t *)pix1_11 + 4B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_conversion ===
common/pixel.c:262:13: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _43 = MEM[(uint8_t *)pix2_189 + 4B];
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)pix2_189 + 4B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)pix2_189 + 4B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_model_load_cost: inside_cost = 25, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _44 = (int) _43;
common/pixel.c:262:13: note: vect_is_simple_use: operand _43
common/pixel.c:262:13: note: def_stmt: _43 = MEM[(uint8_t *)pix2_189 + 4B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_conversion ===
common/pixel.c:262:13: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: a4_45 = _42 - _44;
common/pixel.c:262:13: note: vect_is_simple_use: operand _42
common/pixel.c:262:13: note: def_stmt: _42 = (int) _41;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _44
common/pixel.c:262:13: note: def_stmt: _44 = (int) _43;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: # DEBUG a4 => a4_45
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: _46 = MEM[(uint8_t *)pix1_11 + 5B];
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)pix1_11 + 5B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)pix1_11 + 5B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_model_load_cost: inside_cost = 25, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _47 = (int) _46;
common/pixel.c:262:13: note: vect_is_simple_use: operand _46
common/pixel.c:262:13: note: def_stmt: _46 = MEM[(uint8_t *)pix1_11 + 5B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_conversion ===
common/pixel.c:262:13: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _48 = MEM[(uint8_t *)pix2_189 + 5B];
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)pix2_189 + 5B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)pix2_189 + 5B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_model_load_cost: inside_cost = 25, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _49 = (int) _48;
common/pixel.c:262:13: note: vect_is_simple_use: operand _48
common/pixel.c:262:13: note: def_stmt: _48 = MEM[(uint8_t *)pix2_189 + 5B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_conversion ===
common/pixel.c:262:13: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: a5_50 = _47 - _49;
common/pixel.c:262:13: note: vect_is_simple_use: operand _47
common/pixel.c:262:13: note: def_stmt: _47 = (int) _46;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _49
common/pixel.c:262:13: note: def_stmt: _49 = (int) _48;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: # DEBUG a5 => a5_50
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: _51 = MEM[(uint8_t *)pix1_11 + 6B];
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)pix1_11 + 6B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)pix1_11 + 6B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_model_load_cost: inside_cost = 25, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _52 = (int) _51;
common/pixel.c:262:13: note: vect_is_simple_use: operand _51
common/pixel.c:262:13: note: def_stmt: _51 = MEM[(uint8_t *)pix1_11 + 6B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_conversion ===
common/pixel.c:262:13: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _53 = MEM[(uint8_t *)pix2_189 + 6B];
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)pix2_189 + 6B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)pix2_189 + 6B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_model_load_cost: inside_cost = 25, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _54 = (int) _53;
common/pixel.c:262:13: note: vect_is_simple_use: operand _53
common/pixel.c:262:13: note: def_stmt: _53 = MEM[(uint8_t *)pix2_189 + 6B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_conversion ===
common/pixel.c:262:13: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: a6_55 = _52 - _54;
common/pixel.c:262:13: note: vect_is_simple_use: operand _52
common/pixel.c:262:13: note: def_stmt: _52 = (int) _51;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _54
common/pixel.c:262:13: note: def_stmt: _54 = (int) _53;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: # DEBUG a6 => a6_55
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: _56 = MEM[(uint8_t *)pix1_11 + 7B];
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)pix1_11 + 7B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)pix1_11 + 7B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_model_load_cost: inside_cost = 25, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _57 = (int) _56;
common/pixel.c:262:13: note: vect_is_simple_use: operand _56
common/pixel.c:262:13: note: def_stmt: _56 = MEM[(uint8_t *)pix1_11 + 7B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_conversion ===
common/pixel.c:262:13: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _58 = MEM[(uint8_t *)pix2_189 + 7B];
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)pix2_189 + 7B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)pix2_189 + 7B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_model_load_cost: inside_cost = 25, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _59 = (int) _58;
common/pixel.c:262:13: note: vect_is_simple_use: operand _58
common/pixel.c:262:13: note: def_stmt: _58 = MEM[(uint8_t *)pix2_189 + 7B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_conversion ===
common/pixel.c:262:13: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: a7_60 = _57 - _59;
common/pixel.c:262:13: note: vect_is_simple_use: operand _57
common/pixel.c:262:13: note: def_stmt: _57 = (int) _56;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _59
common/pixel.c:262:13: note: def_stmt: _59 = (int) _58;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: # DEBUG a7 => a7_60
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: t0_61 = a0_25 + a1_30;
common/pixel.c:262:13: note: vect_is_simple_use: operand a0_25
common/pixel.c:262:13: note: def_stmt: a0_25 = _22 - _24;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand a1_30
common/pixel.c:262:13: note: def_stmt: a1_30 = _27 - _29;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: # DEBUG t0 => t0_61
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: t1_62 = a0_25 - a1_30;
common/pixel.c:262:13: note: vect_is_simple_use: operand a0_25
common/pixel.c:262:13: note: def_stmt: a0_25 = _22 - _24;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand a1_30
common/pixel.c:262:13: note: def_stmt: a1_30 = _27 - _29;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: # DEBUG t1 => t1_62
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: t2_63 = a2_35 + a3_40;
common/pixel.c:262:13: note: vect_is_simple_use: operand a2_35
common/pixel.c:262:13: note: def_stmt: a2_35 = _32 - _34;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand a3_40
common/pixel.c:262:13: note: def_stmt: a3_40 = _37 - _39;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: # DEBUG t2 => t2_63
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: t3_64 = a2_35 - a3_40;
common/pixel.c:262:13: note: vect_is_simple_use: operand a2_35
common/pixel.c:262:13: note: def_stmt: a2_35 = _32 - _34;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand a3_40
common/pixel.c:262:13: note: def_stmt: a3_40 = _37 - _39;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: # DEBUG t3 => t3_64
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: b0_65 = t0_61 + t2_63;
common/pixel.c:262:13: note: vect_is_simple_use: operand t0_61
common/pixel.c:262:13: note: def_stmt: t0_61 = a0_25 + a1_30;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand t2_63
common/pixel.c:262:13: note: def_stmt: t2_63 = a2_35 + a3_40;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: # DEBUG b0 => b0_65
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: b2_66 = t0_61 - t2_63;
common/pixel.c:262:13: note: vect_is_simple_use: operand t0_61
common/pixel.c:262:13: note: def_stmt: t0_61 = a0_25 + a1_30;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand t2_63
common/pixel.c:262:13: note: def_stmt: t2_63 = a2_35 + a3_40;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: # DEBUG b2 => b2_66
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: b1_67 = t1_62 + t3_64;
common/pixel.c:262:13: note: vect_is_simple_use: operand t1_62
common/pixel.c:262:13: note: def_stmt: t1_62 = a0_25 - a1_30;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand t3_64
common/pixel.c:262:13: note: def_stmt: t3_64 = a2_35 - a3_40;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: # DEBUG b1 => b1_67
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: b3_68 = t1_62 - t3_64;
common/pixel.c:262:13: note: vect_is_simple_use: operand t1_62
common/pixel.c:262:13: note: def_stmt: t1_62 = a0_25 - a1_30;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand t3_64
common/pixel.c:262:13: note: def_stmt: t3_64 = a2_35 - a3_40;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: # DEBUG b3 => b3_68
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: t0_69 = a4_45 + a5_50;
common/pixel.c:262:13: note: vect_is_simple_use: operand a4_45
common/pixel.c:262:13: note: def_stmt: a4_45 = _42 - _44;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand a5_50
common/pixel.c:262:13: note: def_stmt: a5_50 = _47 - _49;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: # DEBUG t0 => t0_69
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: t1_70 = a4_45 - a5_50;
common/pixel.c:262:13: note: vect_is_simple_use: operand a4_45
common/pixel.c:262:13: note: def_stmt: a4_45 = _42 - _44;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand a5_50
common/pixel.c:262:13: note: def_stmt: a5_50 = _47 - _49;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: # DEBUG t1 => t1_70
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: t2_71 = a6_55 + a7_60;
common/pixel.c:262:13: note: vect_is_simple_use: operand a6_55
common/pixel.c:262:13: note: def_stmt: a6_55 = _52 - _54;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand a7_60
common/pixel.c:262:13: note: def_stmt: a7_60 = _57 - _59;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: # DEBUG t2 => t2_71
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: t3_72 = a6_55 - a7_60;
common/pixel.c:262:13: note: vect_is_simple_use: operand a6_55
common/pixel.c:262:13: note: def_stmt: a6_55 = _52 - _54;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand a7_60
common/pixel.c:262:13: note: def_stmt: a7_60 = _57 - _59;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: # DEBUG t3 => t3_72
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: b4_73 = t0_69 + t2_71;
common/pixel.c:262:13: note: vect_is_simple_use: operand t0_69
common/pixel.c:262:13: note: def_stmt: t0_69 = a4_45 + a5_50;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand t2_71
common/pixel.c:262:13: note: def_stmt: t2_71 = a6_55 + a7_60;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: # DEBUG b4 => b4_73
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: b6_74 = t0_69 - t2_71;
common/pixel.c:262:13: note: vect_is_simple_use: operand t0_69
common/pixel.c:262:13: note: def_stmt: t0_69 = a4_45 + a5_50;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand t2_71
common/pixel.c:262:13: note: def_stmt: t2_71 = a6_55 + a7_60;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: # DEBUG b6 => b6_74
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: b5_75 = t1_70 + t3_72;
common/pixel.c:262:13: note: vect_is_simple_use: operand t1_70
common/pixel.c:262:13: note: def_stmt: t1_70 = a4_45 - a5_50;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand t3_72
common/pixel.c:262:13: note: def_stmt: t3_72 = a6_55 - a7_60;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: # DEBUG b5 => b5_75
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: b7_76 = t1_70 - t3_72;
common/pixel.c:262:13: note: vect_is_simple_use: operand t1_70
common/pixel.c:262:13: note: def_stmt: t1_70 = a4_45 - a5_50;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand t3_72
common/pixel.c:262:13: note: def_stmt: t3_72 = a6_55 - a7_60;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: # DEBUG b7 => b7_76
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: _180 = (unsigned short) b0_65;
common/pixel.c:262:13: note: vect_is_simple_use: operand b0_65
common/pixel.c:262:13: note: def_stmt: b0_65 = t0_61 + t2_63;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_conversion ===
common/pixel.c:262:13: note: vect_model_promotion_demotion_cost: inside_cost = 1, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _78 = (unsigned short) b4_73;
common/pixel.c:262:13: note: vect_is_simple_use: operand b4_73
common/pixel.c:262:13: note: def_stmt: b4_73 = t0_69 + t2_71;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_conversion ===
common/pixel.c:262:13: note: vect_model_promotion_demotion_cost: inside_cost = 1, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _79 = _78 + _180;
common/pixel.c:262:13: note: vect_is_simple_use: operand _78
common/pixel.c:262:13: note: def_stmt: _78 = (unsigned short) b4_73;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _180
common/pixel.c:262:13: note: def_stmt: _180 = (unsigned short) b0_65;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _181 = (short int) _79;
common/pixel.c:262:13: note: vect_is_simple_use: operand _79
common/pixel.c:262:13: note: def_stmt: _79 = _78 + _180;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _79
common/pixel.c:262:13: note: def_stmt: _79 = _78 + _180;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: no optab.
common/pixel.c:262:13: note: vect_is_simple_use: operand _79
common/pixel.c:262:13: note: def_stmt: _79 = _78 + _180;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_assignment ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: diff[i_13][0] = _181;
common/pixel.c:262:13: note: vect_is_simple_use: operand _181
common/pixel.c:262:13: note: def_stmt: _181 = (short int) _79;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: no array mode for V8HI[8]
common/pixel.c:262:13: note: vect_is_simple_use: operand _183
common/pixel.c:262:13: note: def_stmt: _183 = (short int) _85;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _185
common/pixel.c:262:13: note: def_stmt: _185 = (short int) _91;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _187
common/pixel.c:262:13: note: def_stmt: _187 = (short int) _97;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _82
common/pixel.c:262:13: note: def_stmt: _82 = (short int) _81;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _88
common/pixel.c:262:13: note: def_stmt: _88 = (short int) _87;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _94
common/pixel.c:262:13: note: def_stmt: _94 = (short int) _93;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _100
common/pixel.c:262:13: note: def_stmt: _100 = (short int) _99;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_model_store_cost: strided group_size = 8 .
common/pixel.c:262:13: note: vect_model_store_cost: aligned.
common/pixel.c:262:13: note: vect_model_store_cost: inside_cost = 50, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _81 = _180 - _78;
common/pixel.c:262:13: note: vect_is_simple_use: operand _180
common/pixel.c:262:13: note: def_stmt: _180 = (unsigned short) b0_65;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _78
common/pixel.c:262:13: note: def_stmt: _78 = (unsigned short) b4_73;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _82 = (short int) _81;
common/pixel.c:262:13: note: vect_is_simple_use: operand _81
common/pixel.c:262:13: note: def_stmt: _81 = _180 - _78;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _81
common/pixel.c:262:13: note: def_stmt: _81 = _180 - _78;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: no optab.
common/pixel.c:262:13: note: vect_is_simple_use: operand _81
common/pixel.c:262:13: note: def_stmt: _81 = _180 - _78;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_assignment ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: diff[i_13][4] = _82;
common/pixel.c:262:13: note: vect_is_simple_use: operand _82
common/pixel.c:262:13: note: def_stmt: _82 = (short int) _81;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: no array mode for V8HI[8]
common/pixel.c:262:13: note: vect_model_store_cost: aligned.
common/pixel.c:262:13: note: vect_model_store_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _182 = (unsigned short) b1_67;
common/pixel.c:262:13: note: vect_is_simple_use: operand b1_67
common/pixel.c:262:13: note: def_stmt: b1_67 = t1_62 + t3_64;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_conversion ===
common/pixel.c:262:13: note: vect_model_promotion_demotion_cost: inside_cost = 1, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _84 = (unsigned short) b5_75;
common/pixel.c:262:13: note: vect_is_simple_use: operand b5_75
common/pixel.c:262:13: note: def_stmt: b5_75 = t1_70 + t3_72;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_conversion ===
common/pixel.c:262:13: note: vect_model_promotion_demotion_cost: inside_cost = 1, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _85 = _84 + _182;
common/pixel.c:262:13: note: vect_is_simple_use: operand _84
common/pixel.c:262:13: note: def_stmt: _84 = (unsigned short) b5_75;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _182
common/pixel.c:262:13: note: def_stmt: _182 = (unsigned short) b1_67;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _183 = (short int) _85;
common/pixel.c:262:13: note: vect_is_simple_use: operand _85
common/pixel.c:262:13: note: def_stmt: _85 = _84 + _182;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _85
common/pixel.c:262:13: note: def_stmt: _85 = _84 + _182;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: no optab.
common/pixel.c:262:13: note: vect_is_simple_use: operand _85
common/pixel.c:262:13: note: def_stmt: _85 = _84 + _182;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_assignment ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: diff[i_13][1] = _183;
common/pixel.c:262:13: note: vect_is_simple_use: operand _183
common/pixel.c:262:13: note: def_stmt: _183 = (short int) _85;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: no array mode for V8HI[8]
common/pixel.c:262:13: note: vect_model_store_cost: aligned.
common/pixel.c:262:13: note: vect_model_store_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _87 = _182 - _84;
common/pixel.c:262:13: note: vect_is_simple_use: operand _182
common/pixel.c:262:13: note: def_stmt: _182 = (unsigned short) b1_67;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _84
common/pixel.c:262:13: note: def_stmt: _84 = (unsigned short) b5_75;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _88 = (short int) _87;
common/pixel.c:262:13: note: vect_is_simple_use: operand _87
common/pixel.c:262:13: note: def_stmt: _87 = _182 - _84;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _87
common/pixel.c:262:13: note: def_stmt: _87 = _182 - _84;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: no optab.
common/pixel.c:262:13: note: vect_is_simple_use: operand _87
common/pixel.c:262:13: note: def_stmt: _87 = _182 - _84;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_assignment ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: diff[i_13][5] = _88;
common/pixel.c:262:13: note: vect_is_simple_use: operand _88
common/pixel.c:262:13: note: def_stmt: _88 = (short int) _87;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: no array mode for V8HI[8]
common/pixel.c:262:13: note: vect_model_store_cost: aligned.
common/pixel.c:262:13: note: vect_model_store_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _184 = (unsigned short) b2_66;
common/pixel.c:262:13: note: vect_is_simple_use: operand b2_66
common/pixel.c:262:13: note: def_stmt: b2_66 = t0_61 - t2_63;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_conversion ===
common/pixel.c:262:13: note: vect_model_promotion_demotion_cost: inside_cost = 1, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _90 = (unsigned short) b6_74;
common/pixel.c:262:13: note: vect_is_simple_use: operand b6_74
common/pixel.c:262:13: note: def_stmt: b6_74 = t0_69 - t2_71;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_conversion ===
common/pixel.c:262:13: note: vect_model_promotion_demotion_cost: inside_cost = 1, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _91 = _90 + _184;
common/pixel.c:262:13: note: vect_is_simple_use: operand _90
common/pixel.c:262:13: note: def_stmt: _90 = (unsigned short) b6_74;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _184
common/pixel.c:262:13: note: def_stmt: _184 = (unsigned short) b2_66;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _185 = (short int) _91;
common/pixel.c:262:13: note: vect_is_simple_use: operand _91
common/pixel.c:262:13: note: def_stmt: _91 = _90 + _184;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _91
common/pixel.c:262:13: note: def_stmt: _91 = _90 + _184;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: no optab.
common/pixel.c:262:13: note: vect_is_simple_use: operand _91
common/pixel.c:262:13: note: def_stmt: _91 = _90 + _184;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_assignment ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: diff[i_13][2] = _185;
common/pixel.c:262:13: note: vect_is_simple_use: operand _185
common/pixel.c:262:13: note: def_stmt: _185 = (short int) _91;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: no array mode for V8HI[8]
common/pixel.c:262:13: note: vect_model_store_cost: aligned.
common/pixel.c:262:13: note: vect_model_store_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _93 = _184 - _90;
common/pixel.c:262:13: note: vect_is_simple_use: operand _184
common/pixel.c:262:13: note: def_stmt: _184 = (unsigned short) b2_66;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _90
common/pixel.c:262:13: note: def_stmt: _90 = (unsigned short) b6_74;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _94 = (short int) _93;
common/pixel.c:262:13: note: vect_is_simple_use: operand _93
common/pixel.c:262:13: note: def_stmt: _93 = _184 - _90;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _93
common/pixel.c:262:13: note: def_stmt: _93 = _184 - _90;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: no optab.
common/pixel.c:262:13: note: vect_is_simple_use: operand _93
common/pixel.c:262:13: note: def_stmt: _93 = _184 - _90;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_assignment ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: diff[i_13][6] = _94;
common/pixel.c:262:13: note: vect_is_simple_use: operand _94
common/pixel.c:262:13: note: def_stmt: _94 = (short int) _93;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: no array mode for V8HI[8]
common/pixel.c:262:13: note: vect_model_store_cost: aligned.
common/pixel.c:262:13: note: vect_model_store_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _186 = (unsigned short) b3_68;
common/pixel.c:262:13: note: vect_is_simple_use: operand b3_68
common/pixel.c:262:13: note: def_stmt: b3_68 = t1_62 - t3_64;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_conversion ===
common/pixel.c:262:13: note: vect_model_promotion_demotion_cost: inside_cost = 1, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _96 = (unsigned short) b7_76;
common/pixel.c:262:13: note: vect_is_simple_use: operand b7_76
common/pixel.c:262:13: note: def_stmt: b7_76 = t1_70 - t3_72;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_conversion ===
common/pixel.c:262:13: note: vect_model_promotion_demotion_cost: inside_cost = 1, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _97 = _96 + _186;
common/pixel.c:262:13: note: vect_is_simple_use: operand _96
common/pixel.c:262:13: note: def_stmt: _96 = (unsigned short) b7_76;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _186
common/pixel.c:262:13: note: def_stmt: _186 = (unsigned short) b3_68;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _187 = (short int) _97;
common/pixel.c:262:13: note: vect_is_simple_use: operand _97
common/pixel.c:262:13: note: def_stmt: _97 = _96 + _186;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _97
common/pixel.c:262:13: note: def_stmt: _97 = _96 + _186;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: no optab.
common/pixel.c:262:13: note: vect_is_simple_use: operand _97
common/pixel.c:262:13: note: def_stmt: _97 = _96 + _186;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_assignment ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: diff[i_13][3] = _187;
common/pixel.c:262:13: note: vect_is_simple_use: operand _187
common/pixel.c:262:13: note: def_stmt: _187 = (short int) _97;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: no array mode for V8HI[8]
common/pixel.c:262:13: note: vect_model_store_cost: aligned.
common/pixel.c:262:13: note: vect_model_store_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _99 = _186 - _96;
common/pixel.c:262:13: note: vect_is_simple_use: operand _186
common/pixel.c:262:13: note: def_stmt: _186 = (unsigned short) b3_68;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _96
common/pixel.c:262:13: note: def_stmt: _96 = (unsigned short) b7_76;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _100 = (short int) _99;
common/pixel.c:262:13: note: vect_is_simple_use: operand _99
common/pixel.c:262:13: note: def_stmt: _99 = _186 - _96;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _99
common/pixel.c:262:13: note: def_stmt: _99 = _186 - _96;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: no optab.
common/pixel.c:262:13: note: vect_is_simple_use: operand _99
common/pixel.c:262:13: note: def_stmt: _99 = _186 - _96;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_assignment ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: diff[i_13][7] = _100;
common/pixel.c:262:13: note: vect_is_simple_use: operand _100
common/pixel.c:262:13: note: def_stmt: _100 = (short int) _99;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: no array mode for V8HI[8]
common/pixel.c:262:13: note: vect_model_store_cost: aligned.
common/pixel.c:262:13: note: vect_model_store_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: i_102 = i_13 + 1;
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: # DEBUG i => i_102
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: pix1_138 = pix1_11 + pretmp_424;
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: # DEBUG p1 => pix1_138
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: pix2_105 = pix2_189 + pretmp_425;
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: # DEBUG p2 => pix2_105
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: # DEBUG p2 => pix2_105
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: # DEBUG p1 => pix1_138
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: # DEBUG i => i_102
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: ivtmp_418 = ivtmp_419 - 1;
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: if (ivtmp_418 != 0)
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: vectorization_factor = 16, niters = 8
common/pixel.c:262:13: note: not vectorized: iteration count too small.
common/pixel.c:262:13: note: not vectorized: iteration count smaller than vectorization factor.
common/pixel.c:262:13: note: bad operation or unsupported loop bound.
common/pixel.c:300:1: note: vectorized 0 loops in function.
x264_pixel_sa8d_8x8 (uint8_t * pix1, int i_stride_pix1, uint8_t * pix2, int i_stride_pix2)
{
  int16_t diff[8][8];
  int i_satd;
  int x;
  int y;
  int i;
  uint8_t * p1;
  uint8_t * p2;
  int a0;
  int a1;
  int a2;
  int a3;
  int a4;
  int a5;
  int a6;
  int a7;
  int b0;
  int b1;
  int b2;
  int b3;
  int b4;
  int b5;
  int b6;
  int b7;
  int t0;
  int t1;
  int t2;
  int t3;
  int t0;
  int t1;
  int t2;
  int t3;
  int b0;
  int b1;
  int b2;
  int b3;
  int b4;
  int b5;
  int b6;
  int b7;
  int t0;
  int t1;
  int t2;
  int t3;
  int t0;
  int t1;
  int t2;
  int t3;
  int D.11606;
  uint8_t * pix1;
  uint8_t * pix2;
  int _7;
  int _8;
  unsigned char _21;
  int _22;
  unsigned char _23;
  int _24;
  unsigned char _26;
  int _27;
  unsigned char _28;
  int _29;
  unsigned char _31;
  int _32;
  unsigned char _33;
  int _34;
  unsigned char _36;
  int _37;
  unsigned char _38;
  int _39;
  unsigned char _41;
  int _42;
  unsigned char _43;
  int _44;
  unsigned char _46;
  int _47;
  unsigned char _48;
  int _49;
  unsigned char _51;
  int _52;
  unsigned char _53;
  int _54;
  unsigned char _56;
  int _57;
  unsigned char _58;
  int _59;
  unsigned short _78;
  unsigned short _79;
  unsigned short _81;
  short int _82;
  unsigned short _84;
  unsigned short _85;
  unsigned short _87;
  short int _88;
  unsigned short _90;
  unsigned short _91;
  unsigned short _93;
  short int _94;
  unsigned short _96;
  unsigned short _97;
  unsigned short _99;
  short int _100;
  short int _109;
  int _110;
  short int _111;
  int _112;
  short int _115;
  int _116;
  short int _117;
  int _118;
  short int _125;
  int _126;
  short int _127;
  int _128;
  short int _131;
  int _132;
  short int _133;
  int _134;
  int _142;
  int _143;
  int _145;
  int _146;
  int _148;
  int _149;
  int _151;
  int _152;
  int _154;
  int _155;
  int _157;
  int _158;
  int _160;
  int _161;
  int _174;
  unsigned short _180;
  short int _181;
  unsigned short _182;
  short int _183;
  unsigned short _184;
  short int _185;
  unsigned short _186;
  short int _187;
  int _191;
  unsigned int ivtmp_418;
  unsigned int ivtmp_419;
  unsigned int ivtmp_421;
  unsigned int ivtmp_422;
  sizetype pretmp_424;
  sizetype pretmp_425;

  <bb 2>:
  # DEBUG pix1 => pix1_2(D)
  # DEBUG i_pix1 => i_stride_pix1_3(D)
  # DEBUG pix2 => pix2_4(D)
  # DEBUG i_pix2 => i_stride_pix2_5(D)
  # DEBUG i_width => 8
  # DEBUG i_height => 8
  # DEBUG i_satd => 0
  # DEBUG y => 0
  # DEBUG y => 0
  # DEBUG i_satd => 0
  # DEBUG pix2 => pix2_4(D)
  # DEBUG pix1 => pix1_2(D)
  # DEBUG x => 0
  # DEBUG i_satd => 0
  # DEBUG p1 => pix1_2(D)
  # DEBUG p2 => pix2_4(D)
  # DEBUG i => 0
  # DEBUG p2 => pix2_4(D)
  # DEBUG p1 => pix1_2(D)
  # DEBUG i => 0
  pretmp_424 = (sizetype) i_stride_pix1_3(D);
  pretmp_425 = (sizetype) i_stride_pix2_5(D);

  <bb 3>:
  # i_13 = PHI <i_102(4), 0(2)>
  # pix1_11 = PHI <pix1_138(4), pix1_2(D)(2)>
  # pix2_189 = PHI <pix2_105(4), pix2_4(D)(2)>
  # ivtmp_419 = PHI <ivtmp_418(4), 8(2)>
  # DEBUG p2 => pix2_189
  # DEBUG p1 => pix1_11
  # DEBUG i => i_13
  _21 = *pix1_11;
  _22 = (int) _21;
  _23 = *pix2_189;
  _24 = (int) _23;
  a0_25 = _22 - _24;
  # DEBUG a0 => a0_25
  _26 = MEM[(uint8_t *)pix1_11 + 1B];
  _27 = (int) _26;
  _28 = MEM[(uint8_t *)pix2_189 + 1B];
  _29 = (int) _28;
  a1_30 = _27 - _29;
  # DEBUG a1 => a1_30
  _31 = MEM[(uint8_t *)pix1_11 + 2B];
  _32 = (int) _31;
  _33 = MEM[(uint8_t *)pix2_189 + 2B];
  _34 = (int) _33;
  a2_35 = _32 - _34;
  # DEBUG a2 => a2_35
  _36 = MEM[(uint8_t *)pix1_11 + 3B];
  _37 = (int) _36;
  _38 = MEM[(uint8_t *)pix2_189 + 3B];
  _39 = (int) _38;
  a3_40 = _37 - _39;
  # DEBUG a3 => a3_40
  _41 = MEM[(uint8_t *)pix1_11 + 4B];
  _42 = (int) _41;
  _43 = MEM[(uint8_t *)pix2_189 + 4B];
  _44 = (int) _43;
  a4_45 = _42 - _44;
  # DEBUG a4 => a4_45
  _46 = MEM[(uint8_t *)pix1_11 + 5B];
  _47 = (int) _46;
  _48 = MEM[(uint8_t *)pix2_189 + 5B];
  _49 = (int) _48;
  a5_50 = _47 - _49;
  # DEBUG a5 => a5_50
  _51 = MEM[(uint8_t *)pix1_11 + 6B];
  _52 = (int) _51;
  _53 = MEM[(uint8_t *)pix2_189 + 6B];
  _54 = (int) _53;
  a6_55 = _52 - _54;
  # DEBUG a6 => a6_55
  _56 = MEM[(uint8_t *)pix1_11 + 7B];
  _57 = (int) _56;
  _58 = MEM[(uint8_t *)pix2_189 + 7B];
  _59 = (int) _58;
  a7_60 = _57 - _59;
  # DEBUG a7 => a7_60
  t0_61 = a0_25 + a1_30;
  # DEBUG t0 => t0_61
  t1_62 = a0_25 - a1_30;
  # DEBUG t1 => t1_62
  t2_63 = a2_35 + a3_40;
  # DEBUG t2 => t2_63
  t3_64 = a2_35 - a3_40;
  # DEBUG t3 => t3_64
  b0_65 = t0_61 + t2_63;
  # DEBUG b0 => b0_65
  b2_66 = t0_61 - t2_63;
  # DEBUG b2 => b2_66
  b1_67 = t1_62 + t3_64;
  # DEBUG b1 => b1_67
  b3_68 = t1_62 - t3_64;
  # DEBUG b3 => b3_68
  t0_69 = a4_45 + a5_50;
  # DEBUG t0 => t0_69
  t1_70 = a4_45 - a5_50;
  # DEBUG t1 => t1_70
  t2_71 = a6_55 + a7_60;
  # DEBUG t2 => t2_71
  t3_72 = a6_55 - a7_60;
  # DEBUG t3 => t3_72
  b4_73 = t0_69 + t2_71;
  # DEBUG b4 => b4_73
  b6_74 = t0_69 - t2_71;
  # DEBUG b6 => b6_74
  b5_75 = t1_70 + t3_72;
  # DEBUG b5 => b5_75
  b7_76 = t1_70 - t3_72;
  # DEBUG b7 => b7_76
  _180 = (unsigned short) b0_65;
  _78 = (unsigned short) b4_73;
  _79 = _78 + _180;
  _181 = (short int) _79;
  diff[i_13][0] = _181;
  _81 = _180 - _78;
  _82 = (short int) _81;
  diff[i_13][4] = _82;
  _182 = (unsigned short) b1_67;
  _84 = (unsigned short) b5_75;
  _85 = _84 + _182;
  _183 = (short int) _85;
  diff[i_13][1] = _183;
  _87 = _182 - _84;
  _88 = (short int) _87;
  diff[i_13][5] = _88;
  _184 = (unsigned short) b2_66;
  _90 = (unsigned short) b6_74;
  _91 = _90 + _184;
  _185 = (short int) _91;
  diff[i_13][2] = _185;
  _93 = _184 - _90;
  _94 = (short int) _93;
  diff[i_13][6] = _94;
  _186 = (unsigned short) b3_68;
  _96 = (unsigned short) b7_76;
  _97 = _96 + _186;
  _187 = (short int) _97;
  diff[i_13][3] = _187;
  _99 = _186 - _96;
  _100 = (short int) _99;
  diff[i_13][7] = _100;
  i_102 = i_13 + 1;
  # DEBUG i => i_102
  pix1_138 = pix1_11 + pretmp_424;
  # DEBUG p1 => pix1_138
  pix2_105 = pix2_189 + pretmp_425;
  # DEBUG p2 => pix2_105
  # DEBUG p2 => pix2_105
  # DEBUG p1 => pix1_138
  # DEBUG i => i_102
  ivtmp_418 = ivtmp_419 - 1;
  if (ivtmp_418 != 0)
    goto <bb 4>;
  else
    goto <bb 5>;

  <bb 4>:
  goto <bb 3>;

  <bb 5>:

  <bb 6>:
  # i_satd_193 = PHI <0(5), i_satd_9(7)>
  # i_194 = PHI <0(5), i_353(7)>
  # ivtmp_422 = PHI <8(5), ivtmp_421(7)>
  # DEBUG i => i_194
  # DEBUG i_satd => i_satd_193
  _109 = diff[0][i_194];
  _110 = (int) _109;
  _111 = diff[1][i_194];
  _112 = (int) _111;
  t0_113 = _110 + _112;
  # DEBUG t0 => t0_113
  t1_114 = _110 - _112;
  # DEBUG t1 => t1_114
  _115 = diff[2][i_194];
  _116 = (int) _115;
  _117 = diff[3][i_194];
  _118 = (int) _117;
  t2_119 = _116 + _118;
  # DEBUG t2 => t2_119
  t3_120 = _116 - _118;
  # DEBUG t3 => t3_120
  b0_121 = t0_113 + t2_119;
  # DEBUG b0 => b0_121
  b2_122 = t0_113 - t2_119;
  # DEBUG b2 => b2_122
  b1_123 = t1_114 + t3_120;
  # DEBUG b1 => b1_123
  b3_124 = t1_114 - t3_120;
  # DEBUG b3 => b3_124
  _125 = diff[4][i_194];
  _126 = (int) _125;
  _127 = diff[5][i_194];
  _128 = (int) _127;
  t0_129 = _126 + _128;
  # DEBUG t0 => t0_129
  t1_130 = _126 - _128;
  # DEBUG t1 => t1_130
  _131 = diff[6][i_194];
  _132 = (int) _131;
  _133 = diff[7][i_194];
  _134 = (int) _133;
  t2_135 = _132 + _134;
  # DEBUG t2 => t2_135
  t3_136 = _132 - _134;
  # DEBUG t3 => t3_136
  b4_137 = t0_129 + t2_135;
  # DEBUG b4 => b4_137
  b6_139 = t0_129 - t2_135;
  # DEBUG b6 => b6_139
  b5_140 = t1_130 + t3_136;
  # DEBUG b5 => b5_140
  b7_141 = t1_130 - t3_136;
  # DEBUG b7 => b7_141
  _142 = b0_121 + b4_137;
  _143 = ABS_EXPR <_142>;
  i_satd_144 = _143 + i_satd_193;
  # DEBUG i_satd => i_satd_144
  _145 = b0_121 - b4_137;
  _146 = ABS_EXPR <_145>;
  i_satd_147 = _146 + i_satd_144;
  # DEBUG i_satd => i_satd_147
  _148 = b1_123 + b5_140;
  _149 = ABS_EXPR <_148>;
  i_satd_150 = _149 + i_satd_147;
  # DEBUG i_satd => i_satd_150
  _151 = b1_123 - b5_140;
  _152 = ABS_EXPR <_151>;
  i_satd_153 = _152 + i_satd_150;
  # DEBUG i_satd => i_satd_153
  _154 = b2_122 + b6_139;
  _155 = ABS_EXPR <_154>;
  i_satd_156 = _155 + i_satd_153;
  # DEBUG i_satd => i_satd_156
  _157 = b2_122 - b6_139;
  _158 = ABS_EXPR <_157>;
  i_satd_159 = _158 + i_satd_156;
  # DEBUG i_satd => i_satd_159
  _160 = b3_124 + b7_141;
  _161 = ABS_EXPR <_160>;
  i_satd_162 = _161 + i_satd_159;
  # DEBUG i_satd => i_satd_162
  _191 = b3_124 - b7_141;
  _174 = ABS_EXPR <_191>;
  i_satd_9 = _174 + i_satd_162;
  # DEBUG i_satd => i_satd_9
  i_353 = i_194 + 1;
  # DEBUG i => i_353
  # DEBUG i => i_353
  # DEBUG i_satd => i_satd_9
  ivtmp_421 = ivtmp_422 - 1;
  if (ivtmp_421 != 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  goto <bb 6>;

  <bb 8>:
  # i_satd_420 = PHI <i_satd_9(6)>
  # DEBUG x => 8
  # DEBUG x => 8
  # DEBUG i_satd => i_satd_420
  # DEBUG D#187 => i_stride_pix1_3(D) * 8
  # DEBUG D#186 => (sizetype) D#187
  # DEBUG D#185 => pix1_2(D) + D#186
  # DEBUG pix1 => D#185
  # DEBUG D#184 => i_stride_pix2_5(D) * 8
  # DEBUG D#183 => (sizetype) D#184
  # DEBUG D#182 => pix2_4(D) + D#183
  # DEBUG pix2 => D#182
  # DEBUG y => 8
  # DEBUG y => 8
  # DEBUG i_satd => i_satd_420
  # DEBUG pix2 => D#182
  # DEBUG pix1 => D#185
  diff ={v} {CLOBBER};
  # DEBUG pix1 => NULL
  # DEBUG i_pix1 => NULL
  # DEBUG pix2 => NULL
  # DEBUG i_pix2 => NULL
  # DEBUG i_width => NULL
  # DEBUG i_height => NULL
  # DEBUG t3 => NULL
  # DEBUG t2 => NULL
  # DEBUG t1 => NULL
  # DEBUG t0 => NULL
  # DEBUG t3 => NULL
  # DEBUG t2 => NULL
  # DEBUG t1 => NULL
  # DEBUG t0 => NULL
  # DEBUG b7 => NULL
  # DEBUG b6 => NULL
  # DEBUG b5 => NULL
  # DEBUG b4 => NULL
  # DEBUG b3 => NULL
  # DEBUG b2 => NULL
  # DEBUG b1 => NULL
  # DEBUG b0 => NULL
  # DEBUG t3 => NULL
  # DEBUG t2 => NULL
  # DEBUG t1 => NULL
  # DEBUG t0 => NULL
  # DEBUG t3 => NULL
  # DEBUG t2 => NULL
  # DEBUG t1 => NULL
  # DEBUG t0 => NULL
  # DEBUG b7 => NULL
  # DEBUG b6 => NULL
  # DEBUG b5 => NULL
  # DEBUG b4 => NULL
  # DEBUG b3 => NULL
  # DEBUG b2 => NULL
  # DEBUG b1 => NULL
  # DEBUG b0 => NULL
  # DEBUG a7 => NULL
  # DEBUG a6 => NULL
  # DEBUG a5 => NULL
  # DEBUG a4 => NULL
  # DEBUG a3 => NULL
  # DEBUG a2 => NULL
  # DEBUG a1 => NULL
  # DEBUG a0 => NULL
  # DEBUG p2 => NULL
  # DEBUG p1 => NULL
  # DEBUG i => NULL
  # DEBUG y => NULL
  # DEBUG x => NULL
  # DEBUG i_satd => NULL
  _7 = i_satd_420 + 2;
  _8 = _7 >> 2;
  return _8;

}



;; Function pixel_hadamard_ac (pixel_hadamard_ac, funcdef_no=145, decl_uid=7952, cgraph_uid=145, symbol_order=188)


Analyzing loop at common/pixel.c:331
common/pixel.c:331:5: note: ===== analyze_loop_nest =====
common/pixel.c:331:5: note: === vect_analyze_loop_form ===
common/pixel.c:331:5: note: === get_loop_niters ===
Analyzing # of iterations of loop 3
  exit condition [7, + , 4294967295] != 0
  bounds on difference of bases: -7 ... -7
  result:
    # of iterations 7, bounded by 7
common/pixel.c:331:5: note: === vect_analyze_data_refs ===
Creating dr for tmp[0][i_225]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &tmp
	offset from base address: 0
	constant offset from base address: 0
	step: 2
	aligned to: 128
	base_object: tmp
	Access function 0: {0, +, 1}_3
	Access function 1: 0
Creating dr for tmp[4][i_225]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &tmp
	offset from base address: 0
	constant offset from base address: 64
	step: 2
	aligned to: 128
	base_object: tmp
	Access function 0: {0, +, 1}_3
	Access function 1: 4
Creating dr for tmp[1][i_225]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &tmp
	offset from base address: 0
	constant offset from base address: 16
	step: 2
	aligned to: 128
	base_object: tmp
	Access function 0: {0, +, 1}_3
	Access function 1: 1
Creating dr for tmp[5][i_225]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &tmp
	offset from base address: 0
	constant offset from base address: 80
	step: 2
	aligned to: 128
	base_object: tmp
	Access function 0: {0, +, 1}_3
	Access function 1: 5
Creating dr for tmp[2][i_225]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &tmp
	offset from base address: 0
	constant offset from base address: 32
	step: 2
	aligned to: 128
	base_object: tmp
	Access function 0: {0, +, 1}_3
	Access function 1: 2
Creating dr for tmp[6][i_225]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &tmp
	offset from base address: 0
	constant offset from base address: 96
	step: 2
	aligned to: 128
	base_object: tmp
	Access function 0: {0, +, 1}_3
	Access function 1: 6
Creating dr for tmp[3][i_225]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &tmp
	offset from base address: 0
	constant offset from base address: 48
	step: 2
	aligned to: 128
	base_object: tmp
	Access function 0: {0, +, 1}_3
	Access function 1: 3
Creating dr for tmp[7][i_225]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &tmp
	offset from base address: 0
	constant offset from base address: 112
	step: 2
	aligned to: 128
	base_object: tmp
	Access function 0: {0, +, 1}_3
	Access function 1: 7
common/pixel.c:331:5: note: got vectype for stmt: _156 = tmp[0][i_225];
vector(8) short int
common/pixel.c:331:5: note: got vectype for stmt: _158 = tmp[4][i_225];
vector(8) short int
common/pixel.c:331:5: note: got vectype for stmt: _165 = tmp[1][i_225];
vector(8) short int
common/pixel.c:331:5: note: got vectype for stmt: _167 = tmp[5][i_225];
vector(8) short int
common/pixel.c:331:5: note: got vectype for stmt: _175 = tmp[2][i_225];
vector(8) short int
common/pixel.c:331:5: note: got vectype for stmt: _177 = tmp[6][i_225];
vector(8) short int
common/pixel.c:331:5: note: got vectype for stmt: _185 = tmp[3][i_225];
vector(8) short int
common/pixel.c:331:5: note: got vectype for stmt: _187 = tmp[7][i_225];
vector(8) short int
common/pixel.c:331:5: note: === vect_analyze_scalar_cycles ===
common/pixel.c:331:5: note: Analyze phi: sum8_222 = PHI <0(8), sum8_195(10)>

common/pixel.c:331:5: note: Access function of PHI: {0, +, _194}_3
common/pixel.c:331:5: note: step: _194,  init: 0
common/pixel.c:331:5: note: step unknown.
common/pixel.c:331:5: note: Analyze phi: i_225 = PHI <0(8), i_196(10)>

common/pixel.c:331:5: note: Access function of PHI: {0, +, 1}_3
common/pixel.c:331:5: note: step: 1,  init: 0
common/pixel.c:331:5: note: Detected induction.
common/pixel.c:331:5: note: Analyze phi: ivtmp_487 = PHI <8(8), ivtmp_489(10)>

common/pixel.c:331:5: note: Access function of PHI: {8, +, 4294967295}_3
common/pixel.c:331:5: note: step: 4294967295,  init: 8
common/pixel.c:331:5: note: Detected induction.
common/pixel.c:331:5: note: Analyze phi: sum8_222 = PHI <0(8), sum8_195(10)>

common/pixel.c:331:5: note: detected reduction: sum8_195 = _194 + sum8_222;

common/pixel.c:331:5: note: Detected reduction.
common/pixel.c:331:5: note: === vect_pattern_recog ===
common/pixel.c:331:5: note: vect_is_simple_use: operand _194
common/pixel.c:331:5: note: def_stmt: _194 = _191 + _193;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: vect_is_simple_use: operand _194
common/pixel.c:331:5: note: def_stmt: _194 = _191 + _193;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: vect_is_simple_use: operand _194
common/pixel.c:331:5: note: def_stmt: _194 = _191 + _193;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: === vect_analyze_data_ref_accesses ===
common/pixel.c:331:5: note: === vect_mark_stmts_to_be_vectorized ===
common/pixel.c:331:5: note: init: phi relevant? sum8_222 = PHI <0(8), sum8_195(10)>
common/pixel.c:331:5: note: init: phi relevant? i_225 = PHI <0(8), i_196(10)>
common/pixel.c:331:5: note: init: phi relevant? ivtmp_487 = PHI <8(8), ivtmp_489(10)>
common/pixel.c:331:5: note: init: stmt relevant? # DEBUG i => i_225
common/pixel.c:331:5: note: init: stmt relevant? # DEBUG sum8 => sum8_222
common/pixel.c:331:5: note: init: stmt relevant? _156 = tmp[0][i_225];
common/pixel.c:331:5: note: init: stmt relevant? _157 = (int) _156;
common/pixel.c:331:5: note: init: stmt relevant? _158 = tmp[4][i_225];
common/pixel.c:331:5: note: init: stmt relevant? _159 = (int) _158;
common/pixel.c:331:5: note: init: stmt relevant? _160 = _157 + _159;
common/pixel.c:331:5: note: init: stmt relevant? _161 = ABS_EXPR <_160>;
common/pixel.c:331:5: note: init: stmt relevant? _162 = _157 - _159;
common/pixel.c:331:5: note: init: stmt relevant? _163 = ABS_EXPR <_162>;
common/pixel.c:331:5: note: init: stmt relevant? _164 = _161 + _163;
common/pixel.c:331:5: note: init: stmt relevant? _165 = tmp[1][i_225];
common/pixel.c:331:5: note: init: stmt relevant? _166 = (int) _165;
common/pixel.c:331:5: note: init: stmt relevant? _167 = tmp[5][i_225];
common/pixel.c:331:5: note: init: stmt relevant? _168 = (int) _167;
common/pixel.c:331:5: note: init: stmt relevant? _169 = _166 + _168;
common/pixel.c:331:5: note: init: stmt relevant? _170 = ABS_EXPR <_169>;
common/pixel.c:331:5: note: init: stmt relevant? _171 = _164 + _170;
common/pixel.c:331:5: note: init: stmt relevant? _172 = _166 - _168;
common/pixel.c:331:5: note: init: stmt relevant? _173 = ABS_EXPR <_172>;
common/pixel.c:331:5: note: init: stmt relevant? _174 = _171 + _173;
common/pixel.c:331:5: note: init: stmt relevant? _175 = tmp[2][i_225];
common/pixel.c:331:5: note: init: stmt relevant? _176 = (int) _175;
common/pixel.c:331:5: note: init: stmt relevant? _177 = tmp[6][i_225];
common/pixel.c:331:5: note: init: stmt relevant? _178 = (int) _177;
common/pixel.c:331:5: note: init: stmt relevant? _179 = _176 + _178;
common/pixel.c:331:5: note: init: stmt relevant? _180 = ABS_EXPR <_179>;
common/pixel.c:331:5: note: init: stmt relevant? _181 = _174 + _180;
common/pixel.c:331:5: note: init: stmt relevant? _182 = _176 - _178;
common/pixel.c:331:5: note: init: stmt relevant? _183 = ABS_EXPR <_182>;
common/pixel.c:331:5: note: init: stmt relevant? _184 = _181 + _183;
common/pixel.c:331:5: note: init: stmt relevant? _185 = tmp[3][i_225];
common/pixel.c:331:5: note: init: stmt relevant? _186 = (int) _185;
common/pixel.c:331:5: note: init: stmt relevant? _187 = tmp[7][i_225];
common/pixel.c:331:5: note: init: stmt relevant? _188 = (int) _187;
common/pixel.c:331:5: note: init: stmt relevant? _189 = _186 + _188;
common/pixel.c:331:5: note: init: stmt relevant? _190 = ABS_EXPR <_189>;
common/pixel.c:331:5: note: init: stmt relevant? _191 = _184 + _190;
common/pixel.c:331:5: note: init: stmt relevant? _192 = _186 - _188;
common/pixel.c:331:5: note: init: stmt relevant? _193 = ABS_EXPR <_192>;
common/pixel.c:331:5: note: init: stmt relevant? _194 = _191 + _193;
common/pixel.c:331:5: note: init: stmt relevant? sum8_195 = _194 + sum8_222;
common/pixel.c:331:5: note: vec_stmt_relevant_p: used out of loop.
common/pixel.c:331:5: note: mark relevant 0, live 1.
common/pixel.c:331:5: note: init: stmt relevant? # DEBUG sum8 => sum8_195
common/pixel.c:331:5: note: init: stmt relevant? i_196 = i_225 + 1;
common/pixel.c:331:5: note: init: stmt relevant? # DEBUG i => i_196
common/pixel.c:331:5: note: init: stmt relevant? # DEBUG i => i_196
common/pixel.c:331:5: note: init: stmt relevant? # DEBUG sum8 => sum8_195
common/pixel.c:331:5: note: init: stmt relevant? ivtmp_489 = ivtmp_487 - 1;
common/pixel.c:331:5: note: init: stmt relevant? if (ivtmp_489 != 0)
common/pixel.c:331:5: note: worklist: examine stmt: sum8_195 = _194 + sum8_222;
common/pixel.c:331:5: note: vect_is_simple_use: operand _194
common/pixel.c:331:5: note: def_stmt: _194 = _191 + _193;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: mark relevant 3, live 0.
common/pixel.c:331:5: note: vect_is_simple_use: operand sum8_222
common/pixel.c:331:5: note: def_stmt: sum8_222 = PHI <0(8), sum8_195(10)>
common/pixel.c:331:5: note: type of def: 5.
common/pixel.c:331:5: note: mark relevant 3, live 0.
common/pixel.c:331:5: note: worklist: examine stmt: sum8_222 = PHI <0(8), sum8_195(10)>
common/pixel.c:331:5: note: vect_is_simple_use: operand 0
common/pixel.c:331:5: note: vect_is_simple_use: operand sum8_195
common/pixel.c:331:5: note: def_stmt: sum8_195 = _194 + sum8_222;
common/pixel.c:331:5: note: type of def: 5.
common/pixel.c:331:5: note: reduc-stmt defining reduc-phi in the same nest.
common/pixel.c:331:5: note: worklist: examine stmt: _194 = _191 + _193;
common/pixel.c:331:5: note: vect_is_simple_use: operand _191
common/pixel.c:331:5: note: def_stmt: _191 = _184 + _190;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: mark relevant 3, live 0.
common/pixel.c:331:5: note: vect_is_simple_use: operand _193
common/pixel.c:331:5: note: def_stmt: _193 = ABS_EXPR <_192>;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: mark relevant 3, live 0.
common/pixel.c:331:5: note: worklist: examine stmt: _193 = ABS_EXPR <_192>;
common/pixel.c:331:5: note: vect_is_simple_use: operand _192
common/pixel.c:331:5: note: def_stmt: _192 = _186 - _188;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: mark relevant 3, live 0.
common/pixel.c:331:5: note: worklist: examine stmt: _192 = _186 - _188;
common/pixel.c:331:5: note: vect_is_simple_use: operand _186
common/pixel.c:331:5: note: def_stmt: _186 = (int) _185;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: mark relevant 3, live 0.
common/pixel.c:331:5: note: vect_is_simple_use: operand _188
common/pixel.c:331:5: note: def_stmt: _188 = (int) _187;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: mark relevant 3, live 0.
common/pixel.c:331:5: note: worklist: examine stmt: _188 = (int) _187;
common/pixel.c:331:5: note: vect_is_simple_use: operand _187
common/pixel.c:331:5: note: def_stmt: _187 = tmp[7][i_225];
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: mark relevant 3, live 0.
common/pixel.c:331:5: note: worklist: examine stmt: _187 = tmp[7][i_225];
common/pixel.c:331:5: note: worklist: examine stmt: _186 = (int) _185;
common/pixel.c:331:5: note: vect_is_simple_use: operand _185
common/pixel.c:331:5: note: def_stmt: _185 = tmp[3][i_225];
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: mark relevant 3, live 0.
common/pixel.c:331:5: note: worklist: examine stmt: _185 = tmp[3][i_225];
common/pixel.c:331:5: note: worklist: examine stmt: _191 = _184 + _190;
common/pixel.c:331:5: note: vect_is_simple_use: operand _184
common/pixel.c:331:5: note: def_stmt: _184 = _181 + _183;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: mark relevant 3, live 0.
common/pixel.c:331:5: note: vect_is_simple_use: operand _190
common/pixel.c:331:5: note: def_stmt: _190 = ABS_EXPR <_189>;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: mark relevant 3, live 0.
common/pixel.c:331:5: note: worklist: examine stmt: _190 = ABS_EXPR <_189>;
common/pixel.c:331:5: note: vect_is_simple_use: operand _189
common/pixel.c:331:5: note: def_stmt: _189 = _186 + _188;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: mark relevant 3, live 0.
common/pixel.c:331:5: note: worklist: examine stmt: _189 = _186 + _188;
common/pixel.c:331:5: note: vect_is_simple_use: operand _186
common/pixel.c:331:5: note: def_stmt: _186 = (int) _185;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: mark relevant 3, live 0.
common/pixel.c:331:5: note: already marked relevant/live.
common/pixel.c:331:5: note: vect_is_simple_use: operand _188
common/pixel.c:331:5: note: def_stmt: _188 = (int) _187;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: mark relevant 3, live 0.
common/pixel.c:331:5: note: already marked relevant/live.
common/pixel.c:331:5: note: worklist: examine stmt: _184 = _181 + _183;
common/pixel.c:331:5: note: vect_is_simple_use: operand _181
common/pixel.c:331:5: note: def_stmt: _181 = _174 + _180;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: mark relevant 3, live 0.
common/pixel.c:331:5: note: vect_is_simple_use: operand _183
common/pixel.c:331:5: note: def_stmt: _183 = ABS_EXPR <_182>;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: mark relevant 3, live 0.
common/pixel.c:331:5: note: worklist: examine stmt: _183 = ABS_EXPR <_182>;
common/pixel.c:331:5: note: vect_is_simple_use: operand _182
common/pixel.c:331:5: note: def_stmt: _182 = _176 - _178;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: mark relevant 3, live 0.
common/pixel.c:331:5: note: worklist: examine stmt: _182 = _176 - _178;
common/pixel.c:331:5: note: vect_is_simple_use: operand _176
common/pixel.c:331:5: note: def_stmt: _176 = (int) _175;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: mark relevant 3, live 0.
common/pixel.c:331:5: note: vect_is_simple_use: operand _178
common/pixel.c:331:5: note: def_stmt: _178 = (int) _177;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: mark relevant 3, live 0.
common/pixel.c:331:5: note: worklist: examine stmt: _178 = (int) _177;
common/pixel.c:331:5: note: vect_is_simple_use: operand _177
common/pixel.c:331:5: note: def_stmt: _177 = tmp[6][i_225];
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: mark relevant 3, live 0.
common/pixel.c:331:5: note: worklist: examine stmt: _177 = tmp[6][i_225];
common/pixel.c:331:5: note: worklist: examine stmt: _176 = (int) _175;
common/pixel.c:331:5: note: vect_is_simple_use: operand _175
common/pixel.c:331:5: note: def_stmt: _175 = tmp[2][i_225];
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: mark relevant 3, live 0.
common/pixel.c:331:5: note: worklist: examine stmt: _175 = tmp[2][i_225];
common/pixel.c:331:5: note: worklist: examine stmt: _181 = _174 + _180;
common/pixel.c:331:5: note: vect_is_simple_use: operand _174
common/pixel.c:331:5: note: def_stmt: _174 = _171 + _173;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: mark relevant 3, live 0.
common/pixel.c:331:5: note: vect_is_simple_use: operand _180
common/pixel.c:331:5: note: def_stmt: _180 = ABS_EXPR <_179>;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: mark relevant 3, live 0.
common/pixel.c:331:5: note: worklist: examine stmt: _180 = ABS_EXPR <_179>;
common/pixel.c:331:5: note: vect_is_simple_use: operand _179
common/pixel.c:331:5: note: def_stmt: _179 = _176 + _178;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: mark relevant 3, live 0.
common/pixel.c:331:5: note: worklist: examine stmt: _179 = _176 + _178;
common/pixel.c:331:5: note: vect_is_simple_use: operand _176
common/pixel.c:331:5: note: def_stmt: _176 = (int) _175;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: mark relevant 3, live 0.
common/pixel.c:331:5: note: already marked relevant/live.
common/pixel.c:331:5: note: vect_is_simple_use: operand _178
common/pixel.c:331:5: note: def_stmt: _178 = (int) _177;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: mark relevant 3, live 0.
common/pixel.c:331:5: note: already marked relevant/live.
common/pixel.c:331:5: note: worklist: examine stmt: _174 = _171 + _173;
common/pixel.c:331:5: note: vect_is_simple_use: operand _171
common/pixel.c:331:5: note: def_stmt: _171 = _164 + _170;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: mark relevant 3, live 0.
common/pixel.c:331:5: note: vect_is_simple_use: operand _173
common/pixel.c:331:5: note: def_stmt: _173 = ABS_EXPR <_172>;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: mark relevant 3, live 0.
common/pixel.c:331:5: note: worklist: examine stmt: _173 = ABS_EXPR <_172>;
common/pixel.c:331:5: note: vect_is_simple_use: operand _172
common/pixel.c:331:5: note: def_stmt: _172 = _166 - _168;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: mark relevant 3, live 0.
common/pixel.c:331:5: note: worklist: examine stmt: _172 = _166 - _168;
common/pixel.c:331:5: note: vect_is_simple_use: operand _166
common/pixel.c:331:5: note: def_stmt: _166 = (int) _165;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: mark relevant 3, live 0.
common/pixel.c:331:5: note: vect_is_simple_use: operand _168
common/pixel.c:331:5: note: def_stmt: _168 = (int) _167;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: mark relevant 3, live 0.
common/pixel.c:331:5: note: worklist: examine stmt: _168 = (int) _167;
common/pixel.c:331:5: note: vect_is_simple_use: operand _167
common/pixel.c:331:5: note: def_stmt: _167 = tmp[5][i_225];
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: mark relevant 3, live 0.
common/pixel.c:331:5: note: worklist: examine stmt: _167 = tmp[5][i_225];
common/pixel.c:331:5: note: worklist: examine stmt: _166 = (int) _165;
common/pixel.c:331:5: note: vect_is_simple_use: operand _165
common/pixel.c:331:5: note: def_stmt: _165 = tmp[1][i_225];
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: mark relevant 3, live 0.
common/pixel.c:331:5: note: worklist: examine stmt: _165 = tmp[1][i_225];
common/pixel.c:331:5: note: worklist: examine stmt: _171 = _164 + _170;
common/pixel.c:331:5: note: vect_is_simple_use: operand _164
common/pixel.c:331:5: note: def_stmt: _164 = _161 + _163;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: mark relevant 3, live 0.
common/pixel.c:331:5: note: vect_is_simple_use: operand _170
common/pixel.c:331:5: note: def_stmt: _170 = ABS_EXPR <_169>;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: mark relevant 3, live 0.
common/pixel.c:331:5: note: worklist: examine stmt: _170 = ABS_EXPR <_169>;
common/pixel.c:331:5: note: vect_is_simple_use: operand _169
common/pixel.c:331:5: note: def_stmt: _169 = _166 + _168;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: mark relevant 3, live 0.
common/pixel.c:331:5: note: worklist: examine stmt: _169 = _166 + _168;
common/pixel.c:331:5: note: vect_is_simple_use: operand _166
common/pixel.c:331:5: note: def_stmt: _166 = (int) _165;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: mark relevant 3, live 0.
common/pixel.c:331:5: note: already marked relevant/live.
common/pixel.c:331:5: note: vect_is_simple_use: operand _168
common/pixel.c:331:5: note: def_stmt: _168 = (int) _167;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: mark relevant 3, live 0.
common/pixel.c:331:5: note: already marked relevant/live.
common/pixel.c:331:5: note: worklist: examine stmt: _164 = _161 + _163;
common/pixel.c:331:5: note: vect_is_simple_use: operand _161
common/pixel.c:331:5: note: def_stmt: _161 = ABS_EXPR <_160>;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: mark relevant 3, live 0.
common/pixel.c:331:5: note: vect_is_simple_use: operand _163
common/pixel.c:331:5: note: def_stmt: _163 = ABS_EXPR <_162>;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: mark relevant 3, live 0.
common/pixel.c:331:5: note: worklist: examine stmt: _163 = ABS_EXPR <_162>;
common/pixel.c:331:5: note: vect_is_simple_use: operand _162
common/pixel.c:331:5: note: def_stmt: _162 = _157 - _159;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: mark relevant 3, live 0.
common/pixel.c:331:5: note: worklist: examine stmt: _162 = _157 - _159;
common/pixel.c:331:5: note: vect_is_simple_use: operand _157
common/pixel.c:331:5: note: def_stmt: _157 = (int) _156;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: mark relevant 3, live 0.
common/pixel.c:331:5: note: vect_is_simple_use: operand _159
common/pixel.c:331:5: note: def_stmt: _159 = (int) _158;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: mark relevant 3, live 0.
common/pixel.c:331:5: note: worklist: examine stmt: _159 = (int) _158;
common/pixel.c:331:5: note: vect_is_simple_use: operand _158
common/pixel.c:331:5: note: def_stmt: _158 = tmp[4][i_225];
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: mark relevant 3, live 0.
common/pixel.c:331:5: note: worklist: examine stmt: _158 = tmp[4][i_225];
common/pixel.c:331:5: note: worklist: examine stmt: _157 = (int) _156;
common/pixel.c:331:5: note: vect_is_simple_use: operand _156
common/pixel.c:331:5: note: def_stmt: _156 = tmp[0][i_225];
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: mark relevant 3, live 0.
common/pixel.c:331:5: note: worklist: examine stmt: _156 = tmp[0][i_225];
common/pixel.c:331:5: note: worklist: examine stmt: _161 = ABS_EXPR <_160>;
common/pixel.c:331:5: note: vect_is_simple_use: operand _160
common/pixel.c:331:5: note: def_stmt: _160 = _157 + _159;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: mark relevant 3, live 0.
common/pixel.c:331:5: note: worklist: examine stmt: _160 = _157 + _159;
common/pixel.c:331:5: note: vect_is_simple_use: operand _157
common/pixel.c:331:5: note: def_stmt: _157 = (int) _156;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: mark relevant 3, live 0.
common/pixel.c:331:5: note: already marked relevant/live.
common/pixel.c:331:5: note: vect_is_simple_use: operand _159
common/pixel.c:331:5: note: def_stmt: _159 = (int) _158;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: mark relevant 3, live 0.
common/pixel.c:331:5: note: already marked relevant/live.
common/pixel.c:331:5: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _156 = tmp[0][i_225];
  stmt_b: _158 = tmp[4][i_225];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_3)
  (chrec_b = {0, +, 1}_3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 4)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _156 = tmp[0][i_225];
  stmt_b: _165 = tmp[1][i_225];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_3)
  (chrec_b = {0, +, 1}_3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 1)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _156 = tmp[0][i_225];
  stmt_b: _167 = tmp[5][i_225];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_3)
  (chrec_b = {0, +, 1}_3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 5)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _156 = tmp[0][i_225];
  stmt_b: _175 = tmp[2][i_225];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_3)
  (chrec_b = {0, +, 1}_3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _156 = tmp[0][i_225];
  stmt_b: _177 = tmp[6][i_225];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_3)
  (chrec_b = {0, +, 1}_3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 6)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _156 = tmp[0][i_225];
  stmt_b: _185 = tmp[3][i_225];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_3)
  (chrec_b = {0, +, 1}_3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _156 = tmp[0][i_225];
  stmt_b: _187 = tmp[7][i_225];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_3)
  (chrec_b = {0, +, 1}_3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _158 = tmp[4][i_225];
  stmt_b: _165 = tmp[1][i_225];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_3)
  (chrec_b = {0, +, 1}_3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 4)
  (chrec_b = 1)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _158 = tmp[4][i_225];
  stmt_b: _167 = tmp[5][i_225];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_3)
  (chrec_b = {0, +, 1}_3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 4)
  (chrec_b = 5)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _158 = tmp[4][i_225];
  stmt_b: _175 = tmp[2][i_225];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_3)
  (chrec_b = {0, +, 1}_3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 4)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _158 = tmp[4][i_225];
  stmt_b: _177 = tmp[6][i_225];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_3)
  (chrec_b = {0, +, 1}_3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 4)
  (chrec_b = 6)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _158 = tmp[4][i_225];
  stmt_b: _185 = tmp[3][i_225];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_3)
  (chrec_b = {0, +, 1}_3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 4)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _158 = tmp[4][i_225];
  stmt_b: _187 = tmp[7][i_225];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_3)
  (chrec_b = {0, +, 1}_3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 4)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _165 = tmp[1][i_225];
  stmt_b: _167 = tmp[5][i_225];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_3)
  (chrec_b = {0, +, 1}_3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 5)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _165 = tmp[1][i_225];
  stmt_b: _175 = tmp[2][i_225];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_3)
  (chrec_b = {0, +, 1}_3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _165 = tmp[1][i_225];
  stmt_b: _177 = tmp[6][i_225];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_3)
  (chrec_b = {0, +, 1}_3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 6)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _165 = tmp[1][i_225];
  stmt_b: _185 = tmp[3][i_225];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_3)
  (chrec_b = {0, +, 1}_3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _165 = tmp[1][i_225];
  stmt_b: _187 = tmp[7][i_225];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_3)
  (chrec_b = {0, +, 1}_3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _167 = tmp[5][i_225];
  stmt_b: _175 = tmp[2][i_225];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_3)
  (chrec_b = {0, +, 1}_3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 5)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _167 = tmp[5][i_225];
  stmt_b: _177 = tmp[6][i_225];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_3)
  (chrec_b = {0, +, 1}_3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 5)
  (chrec_b = 6)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _167 = tmp[5][i_225];
  stmt_b: _185 = tmp[3][i_225];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_3)
  (chrec_b = {0, +, 1}_3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 5)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _167 = tmp[5][i_225];
  stmt_b: _187 = tmp[7][i_225];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_3)
  (chrec_b = {0, +, 1}_3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 5)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _175 = tmp[2][i_225];
  stmt_b: _177 = tmp[6][i_225];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_3)
  (chrec_b = {0, +, 1}_3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 6)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _175 = tmp[2][i_225];
  stmt_b: _185 = tmp[3][i_225];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_3)
  (chrec_b = {0, +, 1}_3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _175 = tmp[2][i_225];
  stmt_b: _187 = tmp[7][i_225];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_3)
  (chrec_b = {0, +, 1}_3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _177 = tmp[6][i_225];
  stmt_b: _185 = tmp[3][i_225];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_3)
  (chrec_b = {0, +, 1}_3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 6)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _177 = tmp[6][i_225];
  stmt_b: _187 = tmp[7][i_225];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_3)
  (chrec_b = {0, +, 1}_3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 6)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _185 = tmp[3][i_225];
  stmt_b: _187 = tmp[7][i_225];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_3)
  (chrec_b = {0, +, 1}_3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _156 = tmp[0][i_225];
  stmt_b: _156 = tmp[0][i_225];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_3)
  (chrec_b = {0, +, 1}_3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 0)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _158 = tmp[4][i_225];
  stmt_b: _158 = tmp[4][i_225];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_3)
  (chrec_b = {0, +, 1}_3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 4)
  (chrec_b = 4)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _165 = tmp[1][i_225];
  stmt_b: _165 = tmp[1][i_225];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_3)
  (chrec_b = {0, +, 1}_3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _167 = tmp[5][i_225];
  stmt_b: _167 = tmp[5][i_225];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_3)
  (chrec_b = {0, +, 1}_3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 5)
  (chrec_b = 5)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _175 = tmp[2][i_225];
  stmt_b: _175 = tmp[2][i_225];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_3)
  (chrec_b = {0, +, 1}_3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _177 = tmp[6][i_225];
  stmt_b: _177 = tmp[6][i_225];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_3)
  (chrec_b = {0, +, 1}_3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 6)
  (chrec_b = 6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _185 = tmp[3][i_225];
  stmt_b: _185 = tmp[3][i_225];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_3)
  (chrec_b = {0, +, 1}_3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _187 = tmp[7][i_225];
  stmt_b: _187 = tmp[7][i_225];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_3)
  (chrec_b = {0, +, 1}_3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 7)
  (chrec_b = 7)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/pixel.c:331:5: note: === vect_determine_vectorization_factor ===
common/pixel.c:331:5: note: ==> examining phi: sum8_222 = PHI <0(8), sum8_195(10)>

common/pixel.c:331:5: note: get vectype for scalar type:  int
common/pixel.c:331:5: note: vectype: vector(4) int
common/pixel.c:331:5: note: nunits = 4
common/pixel.c:331:5: note: ==> examining phi: i_225 = PHI <0(8), i_196(10)>

common/pixel.c:331:5: note: ==> examining phi: ivtmp_487 = PHI <8(8), ivtmp_489(10)>

common/pixel.c:331:5: note: ==> examining statement: # DEBUG i => i_225

common/pixel.c:331:5: note: skip.
common/pixel.c:331:5: note: ==> examining statement: # DEBUG sum8 => sum8_222

common/pixel.c:331:5: note: skip.
common/pixel.c:331:5: note: ==> examining statement: _156 = tmp[0][i_225];

common/pixel.c:331:5: note: get vectype for scalar type:  short int
common/pixel.c:331:5: note: vectype: vector(8) short int
common/pixel.c:331:5: note: nunits = 8
common/pixel.c:331:5: note: ==> examining statement: _157 = (int) _156;

common/pixel.c:331:5: note: get vectype for scalar type:  int
common/pixel.c:331:5: note: vectype: vector(4) int
common/pixel.c:331:5: note: get vectype for scalar type:  short int
common/pixel.c:331:5: note: vectype: vector(8) short int
common/pixel.c:331:5: note: nunits = 8
common/pixel.c:331:5: note: ==> examining statement: _158 = tmp[4][i_225];

common/pixel.c:331:5: note: get vectype for scalar type:  short int
common/pixel.c:331:5: note: vectype: vector(8) short int
common/pixel.c:331:5: note: nunits = 8
common/pixel.c:331:5: note: ==> examining statement: _159 = (int) _158;

common/pixel.c:331:5: note: get vectype for scalar type:  int
common/pixel.c:331:5: note: vectype: vector(4) int
common/pixel.c:331:5: note: get vectype for scalar type:  short int
common/pixel.c:331:5: note: vectype: vector(8) short int
common/pixel.c:331:5: note: nunits = 8
common/pixel.c:331:5: note: ==> examining statement: _160 = _157 + _159;

common/pixel.c:331:5: note: get vectype for scalar type:  int
common/pixel.c:331:5: note: vectype: vector(4) int
common/pixel.c:331:5: note: get vectype for scalar type:  int
common/pixel.c:331:5: note: vectype: vector(4) int
common/pixel.c:331:5: note: nunits = 4
common/pixel.c:331:5: note: ==> examining statement: _161 = ABS_EXPR <_160>;

common/pixel.c:331:5: note: get vectype for scalar type:  int
common/pixel.c:331:5: note: vectype: vector(4) int
common/pixel.c:331:5: note: get vectype for scalar type:  int
common/pixel.c:331:5: note: vectype: vector(4) int
common/pixel.c:331:5: note: nunits = 4
common/pixel.c:331:5: note: ==> examining statement: _162 = _157 - _159;

common/pixel.c:331:5: note: get vectype for scalar type:  int
common/pixel.c:331:5: note: vectype: vector(4) int
common/pixel.c:331:5: note: get vectype for scalar type:  int
common/pixel.c:331:5: note: vectype: vector(4) int
common/pixel.c:331:5: note: nunits = 4
common/pixel.c:331:5: note: ==> examining statement: _163 = ABS_EXPR <_162>;

common/pixel.c:331:5: note: get vectype for scalar type:  int
common/pixel.c:331:5: note: vectype: vector(4) int
common/pixel.c:331:5: note: get vectype for scalar type:  int
common/pixel.c:331:5: note: vectype: vector(4) int
common/pixel.c:331:5: note: nunits = 4
common/pixel.c:331:5: note: ==> examining statement: _164 = _161 + _163;

common/pixel.c:331:5: note: get vectype for scalar type:  int
common/pixel.c:331:5: note: vectype: vector(4) int
common/pixel.c:331:5: note: get vectype for scalar type:  int
common/pixel.c:331:5: note: vectype: vector(4) int
common/pixel.c:331:5: note: nunits = 4
common/pixel.c:331:5: note: ==> examining statement: _165 = tmp[1][i_225];

common/pixel.c:331:5: note: get vectype for scalar type:  short int
common/pixel.c:331:5: note: vectype: vector(8) short int
common/pixel.c:331:5: note: nunits = 8
common/pixel.c:331:5: note: ==> examining statement: _166 = (int) _165;

common/pixel.c:331:5: note: get vectype for scalar type:  int
common/pixel.c:331:5: note: vectype: vector(4) int
common/pixel.c:331:5: note: get vectype for scalar type:  short int
common/pixel.c:331:5: note: vectype: vector(8) short int
common/pixel.c:331:5: note: nunits = 8
common/pixel.c:331:5: note: ==> examining statement: _167 = tmp[5][i_225];

common/pixel.c:331:5: note: get vectype for scalar type:  short int
common/pixel.c:331:5: note: vectype: vector(8) short int
common/pixel.c:331:5: note: nunits = 8
common/pixel.c:331:5: note: ==> examining statement: _168 = (int) _167;

common/pixel.c:331:5: note: get vectype for scalar type:  int
common/pixel.c:331:5: note: vectype: vector(4) int
common/pixel.c:331:5: note: get vectype for scalar type:  short int
common/pixel.c:331:5: note: vectype: vector(8) short int
common/pixel.c:331:5: note: nunits = 8
common/pixel.c:331:5: note: ==> examining statement: _169 = _166 + _168;

common/pixel.c:331:5: note: get vectype for scalar type:  int
common/pixel.c:331:5: note: vectype: vector(4) int
common/pixel.c:331:5: note: get vectype for scalar type:  int
common/pixel.c:331:5: note: vectype: vector(4) int
common/pixel.c:331:5: note: nunits = 4
common/pixel.c:331:5: note: ==> examining statement: _170 = ABS_EXPR <_169>;

common/pixel.c:331:5: note: get vectype for scalar type:  int
common/pixel.c:331:5: note: vectype: vector(4) int
common/pixel.c:331:5: note: get vectype for scalar type:  int
common/pixel.c:331:5: note: vectype: vector(4) int
common/pixel.c:331:5: note: nunits = 4
common/pixel.c:331:5: note: ==> examining statement: _171 = _164 + _170;

common/pixel.c:331:5: note: get vectype for scalar type:  int
common/pixel.c:331:5: note: vectype: vector(4) int
common/pixel.c:331:5: note: get vectype for scalar type:  int
common/pixel.c:331:5: note: vectype: vector(4) int
common/pixel.c:331:5: note: nunits = 4
common/pixel.c:331:5: note: ==> examining statement: _172 = _166 - _168;

common/pixel.c:331:5: note: get vectype for scalar type:  int
common/pixel.c:331:5: note: vectype: vector(4) int
common/pixel.c:331:5: note: get vectype for scalar type:  int
common/pixel.c:331:5: note: vectype: vector(4) int
common/pixel.c:331:5: note: nunits = 4
common/pixel.c:331:5: note: ==> examining statement: _173 = ABS_EXPR <_172>;

common/pixel.c:331:5: note: get vectype for scalar type:  int
common/pixel.c:331:5: note: vectype: vector(4) int
common/pixel.c:331:5: note: get vectype for scalar type:  int
common/pixel.c:331:5: note: vectype: vector(4) int
common/pixel.c:331:5: note: nunits = 4
common/pixel.c:331:5: note: ==> examining statement: _174 = _171 + _173;

common/pixel.c:331:5: note: get vectype for scalar type:  int
common/pixel.c:331:5: note: vectype: vector(4) int
common/pixel.c:331:5: note: get vectype for scalar type:  int
common/pixel.c:331:5: note: vectype: vector(4) int
common/pixel.c:331:5: note: nunits = 4
common/pixel.c:331:5: note: ==> examining statement: _175 = tmp[2][i_225];

common/pixel.c:331:5: note: get vectype for scalar type:  short int
common/pixel.c:331:5: note: vectype: vector(8) short int
common/pixel.c:331:5: note: nunits = 8
common/pixel.c:331:5: note: ==> examining statement: _176 = (int) _175;

common/pixel.c:331:5: note: get vectype for scalar type:  int
common/pixel.c:331:5: note: vectype: vector(4) int
common/pixel.c:331:5: note: get vectype for scalar type:  short int
common/pixel.c:331:5: note: vectype: vector(8) short int
common/pixel.c:331:5: note: nunits = 8
common/pixel.c:331:5: note: ==> examining statement: _177 = tmp[6][i_225];

common/pixel.c:331:5: note: get vectype for scalar type:  short int
common/pixel.c:331:5: note: vectype: vector(8) short int
common/pixel.c:331:5: note: nunits = 8
common/pixel.c:331:5: note: ==> examining statement: _178 = (int) _177;

common/pixel.c:331:5: note: get vectype for scalar type:  int
common/pixel.c:331:5: note: vectype: vector(4) int
common/pixel.c:331:5: note: get vectype for scalar type:  short int
common/pixel.c:331:5: note: vectype: vector(8) short int
common/pixel.c:331:5: note: nunits = 8
common/pixel.c:331:5: note: ==> examining statement: _179 = _176 + _178;

common/pixel.c:331:5: note: get vectype for scalar type:  int
common/pixel.c:331:5: note: vectype: vector(4) int
common/pixel.c:331:5: note: get vectype for scalar type:  int
common/pixel.c:331:5: note: vectype: vector(4) int
common/pixel.c:331:5: note: nunits = 4
common/pixel.c:331:5: note: ==> examining statement: _180 = ABS_EXPR <_179>;

common/pixel.c:331:5: note: get vectype for scalar type:  int
common/pixel.c:331:5: note: vectype: vector(4) int
common/pixel.c:331:5: note: get vectype for scalar type:  int
common/pixel.c:331:5: note: vectype: vector(4) int
common/pixel.c:331:5: note: nunits = 4
common/pixel.c:331:5: note: ==> examining statement: _181 = _174 + _180;

common/pixel.c:331:5: note: get vectype for scalar type:  int
common/pixel.c:331:5: note: vectype: vector(4) int
common/pixel.c:331:5: note: get vectype for scalar type:  int
common/pixel.c:331:5: note: vectype: vector(4) int
common/pixel.c:331:5: note: nunits = 4
common/pixel.c:331:5: note: ==> examining statement: _182 = _176 - _178;

common/pixel.c:331:5: note: get vectype for scalar type:  int
common/pixel.c:331:5: note: vectype: vector(4) int
common/pixel.c:331:5: note: get vectype for scalar type:  int
common/pixel.c:331:5: note: vectype: vector(4) int
common/pixel.c:331:5: note: nunits = 4
common/pixel.c:331:5: note: ==> examining statement: _183 = ABS_EXPR <_182>;

common/pixel.c:331:5: note: get vectype for scalar type:  int
common/pixel.c:331:5: note: vectype: vector(4) int
common/pixel.c:331:5: note: get vectype for scalar type:  int
common/pixel.c:331:5: note: vectype: vector(4) int
common/pixel.c:331:5: note: nunits = 4
common/pixel.c:331:5: note: ==> examining statement: _184 = _181 + _183;

common/pixel.c:331:5: note: get vectype for scalar type:  int
common/pixel.c:331:5: note: vectype: vector(4) int
common/pixel.c:331:5: note: get vectype for scalar type:  int
common/pixel.c:331:5: note: vectype: vector(4) int
common/pixel.c:331:5: note: nunits = 4
common/pixel.c:331:5: note: ==> examining statement: _185 = tmp[3][i_225];

common/pixel.c:331:5: note: get vectype for scalar type:  short int
common/pixel.c:331:5: note: vectype: vector(8) short int
common/pixel.c:331:5: note: nunits = 8
common/pixel.c:331:5: note: ==> examining statement: _186 = (int) _185;

common/pixel.c:331:5: note: get vectype for scalar type:  int
common/pixel.c:331:5: note: vectype: vector(4) int
common/pixel.c:331:5: note: get vectype for scalar type:  short int
common/pixel.c:331:5: note: vectype: vector(8) short int
common/pixel.c:331:5: note: nunits = 8
common/pixel.c:331:5: note: ==> examining statement: _187 = tmp[7][i_225];

common/pixel.c:331:5: note: get vectype for scalar type:  short int
common/pixel.c:331:5: note: vectype: vector(8) short int
common/pixel.c:331:5: note: nunits = 8
common/pixel.c:331:5: note: ==> examining statement: _188 = (int) _187;

common/pixel.c:331:5: note: get vectype for scalar type:  int
common/pixel.c:331:5: note: vectype: vector(4) int
common/pixel.c:331:5: note: get vectype for scalar type:  short int
common/pixel.c:331:5: note: vectype: vector(8) short int
common/pixel.c:331:5: note: nunits = 8
common/pixel.c:331:5: note: ==> examining statement: _189 = _186 + _188;

common/pixel.c:331:5: note: get vectype for scalar type:  int
common/pixel.c:331:5: note: vectype: vector(4) int
common/pixel.c:331:5: note: get vectype for scalar type:  int
common/pixel.c:331:5: note: vectype: vector(4) int
common/pixel.c:331:5: note: nunits = 4
common/pixel.c:331:5: note: ==> examining statement: _190 = ABS_EXPR <_189>;

common/pixel.c:331:5: note: get vectype for scalar type:  int
common/pixel.c:331:5: note: vectype: vector(4) int
common/pixel.c:331:5: note: get vectype for scalar type:  int
common/pixel.c:331:5: note: vectype: vector(4) int
common/pixel.c:331:5: note: nunits = 4
common/pixel.c:331:5: note: ==> examining statement: _191 = _184 + _190;

common/pixel.c:331:5: note: get vectype for scalar type:  int
common/pixel.c:331:5: note: vectype: vector(4) int
common/pixel.c:331:5: note: get vectype for scalar type:  int
common/pixel.c:331:5: note: vectype: vector(4) int
common/pixel.c:331:5: note: nunits = 4
common/pixel.c:331:5: note: ==> examining statement: _192 = _186 - _188;

common/pixel.c:331:5: note: get vectype for scalar type:  int
common/pixel.c:331:5: note: vectype: vector(4) int
common/pixel.c:331:5: note: get vectype for scalar type:  int
common/pixel.c:331:5: note: vectype: vector(4) int
common/pixel.c:331:5: note: nunits = 4
common/pixel.c:331:5: note: ==> examining statement: _193 = ABS_EXPR <_192>;

common/pixel.c:331:5: note: get vectype for scalar type:  int
common/pixel.c:331:5: note: vectype: vector(4) int
common/pixel.c:331:5: note: get vectype for scalar type:  int
common/pixel.c:331:5: note: vectype: vector(4) int
common/pixel.c:331:5: note: nunits = 4
common/pixel.c:331:5: note: ==> examining statement: _194 = _191 + _193;

common/pixel.c:331:5: note: get vectype for scalar type:  int
common/pixel.c:331:5: note: vectype: vector(4) int
common/pixel.c:331:5: note: get vectype for scalar type:  int
common/pixel.c:331:5: note: vectype: vector(4) int
common/pixel.c:331:5: note: nunits = 4
common/pixel.c:331:5: note: ==> examining statement: sum8_195 = _194 + sum8_222;

common/pixel.c:331:5: note: get vectype for scalar type:  int
common/pixel.c:331:5: note: vectype: vector(4) int
common/pixel.c:331:5: note: get vectype for scalar type:  int
common/pixel.c:331:5: note: vectype: vector(4) int
common/pixel.c:331:5: note: nunits = 4
common/pixel.c:331:5: note: ==> examining statement: # DEBUG sum8 => sum8_195

common/pixel.c:331:5: note: skip.
common/pixel.c:331:5: note: ==> examining statement: i_196 = i_225 + 1;

common/pixel.c:331:5: note: skip.
common/pixel.c:331:5: note: ==> examining statement: # DEBUG i => i_196

common/pixel.c:331:5: note: skip.
common/pixel.c:331:5: note: ==> examining statement: # DEBUG i => i_196

common/pixel.c:331:5: note: skip.
common/pixel.c:331:5: note: ==> examining statement: # DEBUG sum8 => sum8_195

common/pixel.c:331:5: note: skip.
common/pixel.c:331:5: note: ==> examining statement: ivtmp_489 = ivtmp_487 - 1;

common/pixel.c:331:5: note: skip.
common/pixel.c:331:5: note: ==> examining statement: if (ivtmp_489 != 0)

common/pixel.c:331:5: note: skip.
common/pixel.c:331:5: note: vectorization factor = 8
common/pixel.c:331:5: note: === vect_analyze_data_refs_alignment ===
common/pixel.c:331:5: note: vect_compute_data_ref_alignment:
common/pixel.c:331:5: note: misalign = 0 bytes of ref tmp[0][i_225]
common/pixel.c:331:5: note: vect_compute_data_ref_alignment:
common/pixel.c:331:5: note: misalign = 0 bytes of ref tmp[4][i_225]
common/pixel.c:331:5: note: vect_compute_data_ref_alignment:
common/pixel.c:331:5: note: misalign = 0 bytes of ref tmp[1][i_225]
common/pixel.c:331:5: note: vect_compute_data_ref_alignment:
common/pixel.c:331:5: note: misalign = 0 bytes of ref tmp[5][i_225]
common/pixel.c:331:5: note: vect_compute_data_ref_alignment:
common/pixel.c:331:5: note: misalign = 0 bytes of ref tmp[2][i_225]
common/pixel.c:331:5: note: vect_compute_data_ref_alignment:
common/pixel.c:331:5: note: misalign = 0 bytes of ref tmp[6][i_225]
common/pixel.c:331:5: note: vect_compute_data_ref_alignment:
common/pixel.c:331:5: note: misalign = 0 bytes of ref tmp[3][i_225]
common/pixel.c:331:5: note: vect_compute_data_ref_alignment:
common/pixel.c:331:5: note: misalign = 0 bytes of ref tmp[7][i_225]
common/pixel.c:331:5: note: === vect_prune_runtime_alias_test_list ===
common/pixel.c:331:5: note: === vect_enhance_data_refs_alignment ===
common/pixel.c:331:5: note: vect_can_advance_ivs_p:
common/pixel.c:331:5: note: Analyze phi: sum8_222 = PHI <0(8), sum8_195(10)>

common/pixel.c:331:5: note: reduc phi. skip.
common/pixel.c:331:5: note: Analyze phi: i_225 = PHI <0(8), i_196(10)>

common/pixel.c:331:5: note: Analyze phi: ivtmp_487 = PHI <8(8), ivtmp_489(10)>

common/pixel.c:331:5: note: vect_model_load_cost: aligned.
common/pixel.c:331:5: note: vect_get_data_access_cost: inside_cost = 1, outside_cost = 0.
common/pixel.c:331:5: note: vect_model_load_cost: aligned.
common/pixel.c:331:5: note: vect_get_data_access_cost: inside_cost = 2, outside_cost = 0.
common/pixel.c:331:5: note: vect_model_load_cost: aligned.
common/pixel.c:331:5: note: vect_get_data_access_cost: inside_cost = 3, outside_cost = 0.
common/pixel.c:331:5: note: vect_model_load_cost: aligned.
common/pixel.c:331:5: note: vect_get_data_access_cost: inside_cost = 4, outside_cost = 0.
common/pixel.c:331:5: note: vect_model_load_cost: aligned.
common/pixel.c:331:5: note: vect_get_data_access_cost: inside_cost = 5, outside_cost = 0.
common/pixel.c:331:5: note: vect_model_load_cost: aligned.
common/pixel.c:331:5: note: vect_get_data_access_cost: inside_cost = 6, outside_cost = 0.
common/pixel.c:331:5: note: vect_model_load_cost: aligned.
common/pixel.c:331:5: note: vect_get_data_access_cost: inside_cost = 7, outside_cost = 0.
common/pixel.c:331:5: note: vect_model_load_cost: aligned.
common/pixel.c:331:5: note: vect_get_data_access_cost: inside_cost = 8, outside_cost = 0.
common/pixel.c:331:5: note: === vect_analyze_slp ===
common/pixel.c:331:5: note: === vect_make_slp_decision ===
common/pixel.c:331:5: note: === vect_detect_hybrid_slp ===
common/pixel.c:331:5: note: === vect_analyze_loop_operations ===
common/pixel.c:331:5: note: examining phi: sum8_222 = PHI <0(8), sum8_195(10)>

common/pixel.c:331:5: note: examining phi: i_225 = PHI <0(8), i_196(10)>

common/pixel.c:331:5: note: examining phi: ivtmp_487 = PHI <8(8), ivtmp_489(10)>

common/pixel.c:331:5: note: ==> examining statement: # DEBUG i => i_225
common/pixel.c:331:5: note: irrelevant.
common/pixel.c:331:5: note: ==> examining statement: # DEBUG sum8 => sum8_222
common/pixel.c:331:5: note: irrelevant.
common/pixel.c:331:5: note: ==> examining statement: _156 = tmp[0][i_225];
common/pixel.c:331:5: note: num. args = 4 (not unary/binary/ternary op).
common/pixel.c:331:5: note: vect_is_simple_use: operand tmp[0][i_225]
common/pixel.c:331:5: note: not ssa-name.
common/pixel.c:331:5: note: use not simple.
common/pixel.c:331:5: note: vect_model_load_cost: aligned.
common/pixel.c:331:5: note: vect_model_load_cost: inside_cost = 1, prologue_cost = 0 .
common/pixel.c:331:5: note: ==> examining statement: _157 = (int) _156;
common/pixel.c:331:5: note: vect_is_simple_use: operand _156
common/pixel.c:331:5: note: def_stmt: _156 = tmp[0][i_225];
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: === vectorizable_conversion ===
common/pixel.c:331:5: note: vect_model_promotion_demotion_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:331:5: note: ==> examining statement: _158 = tmp[4][i_225];
common/pixel.c:331:5: note: num. args = 4 (not unary/binary/ternary op).
common/pixel.c:331:5: note: vect_is_simple_use: operand tmp[4][i_225]
common/pixel.c:331:5: note: not ssa-name.
common/pixel.c:331:5: note: use not simple.
common/pixel.c:331:5: note: vect_model_load_cost: aligned.
common/pixel.c:331:5: note: vect_model_load_cost: inside_cost = 1, prologue_cost = 0 .
common/pixel.c:331:5: note: ==> examining statement: _159 = (int) _158;
common/pixel.c:331:5: note: vect_is_simple_use: operand _158
common/pixel.c:331:5: note: def_stmt: _158 = tmp[4][i_225];
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: === vectorizable_conversion ===
common/pixel.c:331:5: note: vect_model_promotion_demotion_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:331:5: note: ==> examining statement: _160 = _157 + _159;
common/pixel.c:331:5: note: vect_is_simple_use: operand _157
common/pixel.c:331:5: note: def_stmt: _157 = (int) _156;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: vect_is_simple_use: operand _159
common/pixel.c:331:5: note: def_stmt: _159 = (int) _158;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: === vectorizable_operation ===
common/pixel.c:331:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:331:5: note: ==> examining statement: _161 = ABS_EXPR <_160>;
common/pixel.c:331:5: note: vect_is_simple_use: operand _160
common/pixel.c:331:5: note: def_stmt: _160 = _157 + _159;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: === vectorizable_operation ===
common/pixel.c:331:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:331:5: note: ==> examining statement: _162 = _157 - _159;
common/pixel.c:331:5: note: vect_is_simple_use: operand _157
common/pixel.c:331:5: note: def_stmt: _157 = (int) _156;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: vect_is_simple_use: operand _159
common/pixel.c:331:5: note: def_stmt: _159 = (int) _158;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: === vectorizable_operation ===
common/pixel.c:331:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:331:5: note: ==> examining statement: _163 = ABS_EXPR <_162>;
common/pixel.c:331:5: note: vect_is_simple_use: operand _162
common/pixel.c:331:5: note: def_stmt: _162 = _157 - _159;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: === vectorizable_operation ===
common/pixel.c:331:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:331:5: note: ==> examining statement: _164 = _161 + _163;
common/pixel.c:331:5: note: vect_is_simple_use: operand _161
common/pixel.c:331:5: note: def_stmt: _161 = ABS_EXPR <_160>;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: vect_is_simple_use: operand _163
common/pixel.c:331:5: note: def_stmt: _163 = ABS_EXPR <_162>;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: === vectorizable_operation ===
common/pixel.c:331:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:331:5: note: ==> examining statement: _165 = tmp[1][i_225];
common/pixel.c:331:5: note: num. args = 4 (not unary/binary/ternary op).
common/pixel.c:331:5: note: vect_is_simple_use: operand tmp[1][i_225]
common/pixel.c:331:5: note: not ssa-name.
common/pixel.c:331:5: note: use not simple.
common/pixel.c:331:5: note: vect_model_load_cost: aligned.
common/pixel.c:331:5: note: vect_model_load_cost: inside_cost = 1, prologue_cost = 0 .
common/pixel.c:331:5: note: ==> examining statement: _166 = (int) _165;
common/pixel.c:331:5: note: vect_is_simple_use: operand _165
common/pixel.c:331:5: note: def_stmt: _165 = tmp[1][i_225];
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: === vectorizable_conversion ===
common/pixel.c:331:5: note: vect_model_promotion_demotion_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:331:5: note: ==> examining statement: _167 = tmp[5][i_225];
common/pixel.c:331:5: note: num. args = 4 (not unary/binary/ternary op).
common/pixel.c:331:5: note: vect_is_simple_use: operand tmp[5][i_225]
common/pixel.c:331:5: note: not ssa-name.
common/pixel.c:331:5: note: use not simple.
common/pixel.c:331:5: note: vect_model_load_cost: aligned.
common/pixel.c:331:5: note: vect_model_load_cost: inside_cost = 1, prologue_cost = 0 .
common/pixel.c:331:5: note: ==> examining statement: _168 = (int) _167;
common/pixel.c:331:5: note: vect_is_simple_use: operand _167
common/pixel.c:331:5: note: def_stmt: _167 = tmp[5][i_225];
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: === vectorizable_conversion ===
common/pixel.c:331:5: note: vect_model_promotion_demotion_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:331:5: note: ==> examining statement: _169 = _166 + _168;
common/pixel.c:331:5: note: vect_is_simple_use: operand _166
common/pixel.c:331:5: note: def_stmt: _166 = (int) _165;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: vect_is_simple_use: operand _168
common/pixel.c:331:5: note: def_stmt: _168 = (int) _167;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: === vectorizable_operation ===
common/pixel.c:331:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:331:5: note: ==> examining statement: _170 = ABS_EXPR <_169>;
common/pixel.c:331:5: note: vect_is_simple_use: operand _169
common/pixel.c:331:5: note: def_stmt: _169 = _166 + _168;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: === vectorizable_operation ===
common/pixel.c:331:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:331:5: note: ==> examining statement: _171 = _164 + _170;
common/pixel.c:331:5: note: vect_is_simple_use: operand _164
common/pixel.c:331:5: note: def_stmt: _164 = _161 + _163;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: vect_is_simple_use: operand _170
common/pixel.c:331:5: note: def_stmt: _170 = ABS_EXPR <_169>;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: === vectorizable_operation ===
common/pixel.c:331:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:331:5: note: ==> examining statement: _172 = _166 - _168;
common/pixel.c:331:5: note: vect_is_simple_use: operand _166
common/pixel.c:331:5: note: def_stmt: _166 = (int) _165;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: vect_is_simple_use: operand _168
common/pixel.c:331:5: note: def_stmt: _168 = (int) _167;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: === vectorizable_operation ===
common/pixel.c:331:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:331:5: note: ==> examining statement: _173 = ABS_EXPR <_172>;
common/pixel.c:331:5: note: vect_is_simple_use: operand _172
common/pixel.c:331:5: note: def_stmt: _172 = _166 - _168;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: === vectorizable_operation ===
common/pixel.c:331:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:331:5: note: ==> examining statement: _174 = _171 + _173;
common/pixel.c:331:5: note: vect_is_simple_use: operand _171
common/pixel.c:331:5: note: def_stmt: _171 = _164 + _170;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: vect_is_simple_use: operand _173
common/pixel.c:331:5: note: def_stmt: _173 = ABS_EXPR <_172>;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: === vectorizable_operation ===
common/pixel.c:331:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:331:5: note: ==> examining statement: _175 = tmp[2][i_225];
common/pixel.c:331:5: note: num. args = 4 (not unary/binary/ternary op).
common/pixel.c:331:5: note: vect_is_simple_use: operand tmp[2][i_225]
common/pixel.c:331:5: note: not ssa-name.
common/pixel.c:331:5: note: use not simple.
common/pixel.c:331:5: note: vect_model_load_cost: aligned.
common/pixel.c:331:5: note: vect_model_load_cost: inside_cost = 1, prologue_cost = 0 .
common/pixel.c:331:5: note: ==> examining statement: _176 = (int) _175;
common/pixel.c:331:5: note: vect_is_simple_use: operand _175
common/pixel.c:331:5: note: def_stmt: _175 = tmp[2][i_225];
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: === vectorizable_conversion ===
common/pixel.c:331:5: note: vect_model_promotion_demotion_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:331:5: note: ==> examining statement: _177 = tmp[6][i_225];
common/pixel.c:331:5: note: num. args = 4 (not unary/binary/ternary op).
common/pixel.c:331:5: note: vect_is_simple_use: operand tmp[6][i_225]
common/pixel.c:331:5: note: not ssa-name.
common/pixel.c:331:5: note: use not simple.
common/pixel.c:331:5: note: vect_model_load_cost: aligned.
common/pixel.c:331:5: note: vect_model_load_cost: inside_cost = 1, prologue_cost = 0 .
common/pixel.c:331:5: note: ==> examining statement: _178 = (int) _177;
common/pixel.c:331:5: note: vect_is_simple_use: operand _177
common/pixel.c:331:5: note: def_stmt: _177 = tmp[6][i_225];
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: === vectorizable_conversion ===
common/pixel.c:331:5: note: vect_model_promotion_demotion_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:331:5: note: ==> examining statement: _179 = _176 + _178;
common/pixel.c:331:5: note: vect_is_simple_use: operand _176
common/pixel.c:331:5: note: def_stmt: _176 = (int) _175;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: vect_is_simple_use: operand _178
common/pixel.c:331:5: note: def_stmt: _178 = (int) _177;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: === vectorizable_operation ===
common/pixel.c:331:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:331:5: note: ==> examining statement: _180 = ABS_EXPR <_179>;
common/pixel.c:331:5: note: vect_is_simple_use: operand _179
common/pixel.c:331:5: note: def_stmt: _179 = _176 + _178;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: === vectorizable_operation ===
common/pixel.c:331:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:331:5: note: ==> examining statement: _181 = _174 + _180;
common/pixel.c:331:5: note: vect_is_simple_use: operand _174
common/pixel.c:331:5: note: def_stmt: _174 = _171 + _173;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: vect_is_simple_use: operand _180
common/pixel.c:331:5: note: def_stmt: _180 = ABS_EXPR <_179>;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: === vectorizable_operation ===
common/pixel.c:331:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:331:5: note: ==> examining statement: _182 = _176 - _178;
common/pixel.c:331:5: note: vect_is_simple_use: operand _176
common/pixel.c:331:5: note: def_stmt: _176 = (int) _175;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: vect_is_simple_use: operand _178
common/pixel.c:331:5: note: def_stmt: _178 = (int) _177;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: === vectorizable_operation ===
common/pixel.c:331:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:331:5: note: ==> examining statement: _183 = ABS_EXPR <_182>;
common/pixel.c:331:5: note: vect_is_simple_use: operand _182
common/pixel.c:331:5: note: def_stmt: _182 = _176 - _178;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: === vectorizable_operation ===
common/pixel.c:331:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:331:5: note: ==> examining statement: _184 = _181 + _183;
common/pixel.c:331:5: note: vect_is_simple_use: operand _181
common/pixel.c:331:5: note: def_stmt: _181 = _174 + _180;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: vect_is_simple_use: operand _183
common/pixel.c:331:5: note: def_stmt: _183 = ABS_EXPR <_182>;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: === vectorizable_operation ===
common/pixel.c:331:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:331:5: note: ==> examining statement: _185 = tmp[3][i_225];
common/pixel.c:331:5: note: num. args = 4 (not unary/binary/ternary op).
common/pixel.c:331:5: note: vect_is_simple_use: operand tmp[3][i_225]
common/pixel.c:331:5: note: not ssa-name.
common/pixel.c:331:5: note: use not simple.
common/pixel.c:331:5: note: vect_model_load_cost: aligned.
common/pixel.c:331:5: note: vect_model_load_cost: inside_cost = 1, prologue_cost = 0 .
common/pixel.c:331:5: note: ==> examining statement: _186 = (int) _185;
common/pixel.c:331:5: note: vect_is_simple_use: operand _185
common/pixel.c:331:5: note: def_stmt: _185 = tmp[3][i_225];
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: === vectorizable_conversion ===
common/pixel.c:331:5: note: vect_model_promotion_demotion_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:331:5: note: ==> examining statement: _187 = tmp[7][i_225];
common/pixel.c:331:5: note: num. args = 4 (not unary/binary/ternary op).
common/pixel.c:331:5: note: vect_is_simple_use: operand tmp[7][i_225]
common/pixel.c:331:5: note: not ssa-name.
common/pixel.c:331:5: note: use not simple.
common/pixel.c:331:5: note: vect_model_load_cost: aligned.
common/pixel.c:331:5: note: vect_model_load_cost: inside_cost = 1, prologue_cost = 0 .
common/pixel.c:331:5: note: ==> examining statement: _188 = (int) _187;
common/pixel.c:331:5: note: vect_is_simple_use: operand _187
common/pixel.c:331:5: note: def_stmt: _187 = tmp[7][i_225];
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: === vectorizable_conversion ===
common/pixel.c:331:5: note: vect_model_promotion_demotion_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:331:5: note: ==> examining statement: _189 = _186 + _188;
common/pixel.c:331:5: note: vect_is_simple_use: operand _186
common/pixel.c:331:5: note: def_stmt: _186 = (int) _185;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: vect_is_simple_use: operand _188
common/pixel.c:331:5: note: def_stmt: _188 = (int) _187;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: === vectorizable_operation ===
common/pixel.c:331:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:331:5: note: ==> examining statement: _190 = ABS_EXPR <_189>;
common/pixel.c:331:5: note: vect_is_simple_use: operand _189
common/pixel.c:331:5: note: def_stmt: _189 = _186 + _188;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: === vectorizable_operation ===
common/pixel.c:331:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:331:5: note: ==> examining statement: _191 = _184 + _190;
common/pixel.c:331:5: note: vect_is_simple_use: operand _184
common/pixel.c:331:5: note: def_stmt: _184 = _181 + _183;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: vect_is_simple_use: operand _190
common/pixel.c:331:5: note: def_stmt: _190 = ABS_EXPR <_189>;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: === vectorizable_operation ===
common/pixel.c:331:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:331:5: note: ==> examining statement: _192 = _186 - _188;
common/pixel.c:331:5: note: vect_is_simple_use: operand _186
common/pixel.c:331:5: note: def_stmt: _186 = (int) _185;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: vect_is_simple_use: operand _188
common/pixel.c:331:5: note: def_stmt: _188 = (int) _187;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: === vectorizable_operation ===
common/pixel.c:331:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:331:5: note: ==> examining statement: _193 = ABS_EXPR <_192>;
common/pixel.c:331:5: note: vect_is_simple_use: operand _192
common/pixel.c:331:5: note: def_stmt: _192 = _186 - _188;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: === vectorizable_operation ===
common/pixel.c:331:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:331:5: note: ==> examining statement: _194 = _191 + _193;
common/pixel.c:331:5: note: vect_is_simple_use: operand _191
common/pixel.c:331:5: note: def_stmt: _191 = _184 + _190;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: vect_is_simple_use: operand _193
common/pixel.c:331:5: note: def_stmt: _193 = ABS_EXPR <_192>;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: === vectorizable_operation ===
common/pixel.c:331:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:331:5: note: ==> examining statement: sum8_195 = _194 + sum8_222;
common/pixel.c:331:5: note: vect_is_simple_use: operand _194
common/pixel.c:331:5: note: def_stmt: _194 = _191 + _193;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: vect_is_simple_use: operand sum8_222
common/pixel.c:331:5: note: def_stmt: sum8_222 = PHI <0(8), sum8_195(10)>
common/pixel.c:331:5: note: type of def: 5.
common/pixel.c:331:5: note: detected reduction: sum8_195 = _194 + sum8_222;

common/pixel.c:331:5: note: reduc op not supported by target.
vect_model_reduction_cost: inside_cost = 2, prologue_cost = 1, epilogue_cost = 5 .
common/pixel.c:331:5: note: ==> examining statement: # DEBUG sum8 => sum8_195
common/pixel.c:331:5: note: irrelevant.
common/pixel.c:331:5: note: ==> examining statement: i_196 = i_225 + 1;
common/pixel.c:331:5: note: irrelevant.
common/pixel.c:331:5: note: ==> examining statement: # DEBUG i => i_196
common/pixel.c:331:5: note: irrelevant.
common/pixel.c:331:5: note: ==> examining statement: # DEBUG i => i_196
common/pixel.c:331:5: note: irrelevant.
common/pixel.c:331:5: note: ==> examining statement: # DEBUG sum8 => sum8_195
common/pixel.c:331:5: note: irrelevant.
common/pixel.c:331:5: note: ==> examining statement: ivtmp_489 = ivtmp_487 - 1;
common/pixel.c:331:5: note: irrelevant.
common/pixel.c:331:5: note: ==> examining statement: if (ivtmp_489 != 0)
common/pixel.c:331:5: note: irrelevant.
common/pixel.c:331:5: note: vectorization_factor = 8, niters = 8
common/pixel.c:331:5: note: === vect_update_slp_costs_according_to_vf ===
common/pixel.c:331:5: note: Cost model analysis: 
  Vector inside of loop cost: 72
  Vector prologue cost: 1
  Vector epilogue cost: 5
  Scalar iteration cost: 40
  Scalar outside cost: 0
  Vector outside cost: 6
  prologue iterations: 0
  epilogue iterations: 0
  Calculated minimum iters for profitability: 1
common/pixel.c:331:5: note:   Runtime profitability threshold = 7
common/pixel.c:331:5: note:   Static estimate profitability threshold = 7
common/pixel.c:331:5: note: loop vectorized
common/pixel.c:331:5: note: === vec_transform_loop ===
common/pixel.c:331:5: note: ------>vectorizing phi: sum8_222 = PHI <0(12), sum8_195(10)>

common/pixel.c:331:5: note: multiple-types.
common/pixel.c:331:5: note: ------>vectorizing phi: i_225 = PHI <0(12), i_196(10)>

common/pixel.c:331:5: note: ------>vectorizing phi: ivtmp_487 = PHI <8(12), ivtmp_489(10)>

common/pixel.c:331:5: note: ------>vectorizing statement: # DEBUG i => i_225

common/pixel.c:331:5: note: ------>vectorizing statement: # DEBUG sum8 => sum8_222

common/pixel.c:331:5: note: ------>vectorizing statement: _156 = tmp[0][i_225];

common/pixel.c:331:5: note: transform statement.
common/pixel.c:331:5: note: transform load. ncopies = 1
common/pixel.c:331:5: note: create vector_type-pointer variable to type: vector(8) short int  vectorizing an array ref: tmp
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:331:5: note: created vectp_tmp.533_483
common/pixel.c:331:5: note: add new stmt: vect__156.534_480 = MEM[(short int *)vectp_tmp.532_482];
common/pixel.c:331:5: note: ------>vectorizing statement: _157 = (int) _156;

common/pixel.c:331:5: note: multiple-types.
common/pixel.c:331:5: note: transform statement.
common/pixel.c:331:5: note: vect_is_simple_use: operand _156
common/pixel.c:331:5: note: def_stmt: _156 = tmp[0][i_225];
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: transform conversion. ncopies = 1.
common/pixel.c:331:5: note: vect_get_vec_def_for_operand: _156
common/pixel.c:331:5: note: vect_is_simple_use: operand _156
common/pixel.c:331:5: note: def_stmt: _156 = tmp[0][i_225];
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: def =  _156
  def_stmt =  _156 = tmp[0][i_225];
common/pixel.c:331:5: note: add new stmt: vect__157.535_479 = [vec_unpack_lo_expr] vect__156.534_480;
common/pixel.c:331:5: note: add new stmt: vect__157.535_478 = [vec_unpack_hi_expr] vect__156.534_480;
common/pixel.c:331:5: note: ------>vectorizing statement: _158 = tmp[4][i_225];

common/pixel.c:331:5: note: transform statement.
common/pixel.c:331:5: note: transform load. ncopies = 1
common/pixel.c:331:5: note: create vector_type-pointer variable to type: vector(8) short int  vectorizing an array ref: tmp
common/pixel.c:331:5: note: created vectp_tmp.537_477
common/pixel.c:331:5: note: add new stmt: vect__158.538_474 = MEM[(short int *)vectp_tmp.536_476];
common/pixel.c:331:5: note: ------>vectorizing statement: _159 = (int) _158;

common/pixel.c:331:5: note: multiple-types.
common/pixel.c:331:5: note: transform statement.
common/pixel.c:331:5: note: vect_is_simple_use: operand _158
common/pixel.c:331:5: note: def_stmt: _158 = tmp[4][i_225];
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: transform conversion. ncopies = 1.
common/pixel.c:331:5: note: vect_get_vec_def_for_operand: _158
common/pixel.c:331:5: note: vect_is_simple_use: operand _158
common/pixel.c:331:5: note: def_stmt: _158 = tmp[4][i_225];
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: def =  _158
  def_stmt =  _158 = tmp[4][i_225];
common/pixel.c:331:5: note: add new stmt: vect__159.539_473 = [vec_unpack_lo_expr] vect__158.538_474;
common/pixel.c:331:5: note: add new stmt: vect__159.539_472 = [vec_unpack_hi_expr] vect__158.538_474;
common/pixel.c:331:5: note: ------>vectorizing statement: _160 = _157 + _159;

common/pixel.c:331:5: note: multiple-types.
common/pixel.c:331:5: note: transform statement.
common/pixel.c:331:5: note: vect_is_simple_use: operand _157
common/pixel.c:331:5: note: def_stmt: _157 = (int) _156;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: vect_is_simple_use: operand _159
common/pixel.c:331:5: note: def_stmt: _159 = (int) _158;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: transform binary/unary operation.
common/pixel.c:331:5: note: vect_get_vec_def_for_operand: _157
common/pixel.c:331:5: note: vect_is_simple_use: operand _157
common/pixel.c:331:5: note: def_stmt: _157 = (int) _156;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: def =  _157
  def_stmt =  _157 = (int) _156;
common/pixel.c:331:5: note: vect_get_vec_def_for_operand: _159
common/pixel.c:331:5: note: vect_is_simple_use: operand _159
common/pixel.c:331:5: note: def_stmt: _159 = (int) _158;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: def =  _159
  def_stmt =  _159 = (int) _158;
common/pixel.c:331:5: note: add new stmt: vect__160.540_471 = vect__157.535_479 + vect__159.539_473;
common/pixel.c:331:5: note: add new stmt: vect__160.540_470 = vect__157.535_478 + vect__159.539_472;
common/pixel.c:331:5: note: ------>vectorizing statement: _161 = ABS_EXPR <_160>;

common/pixel.c:331:5: note: multiple-types.
common/pixel.c:331:5: note: transform statement.
common/pixel.c:331:5: note: vect_is_simple_use: operand _160
common/pixel.c:331:5: note: def_stmt: _160 = _157 + _159;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: transform binary/unary operation.
common/pixel.c:331:5: note: vect_get_vec_def_for_operand: _160
common/pixel.c:331:5: note: vect_is_simple_use: operand _160
common/pixel.c:331:5: note: def_stmt: _160 = _157 + _159;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: def =  _160
  def_stmt =  _160 = _157 + _159;
common/pixel.c:331:5: note: add new stmt: vect__161.541_469 = ABS_EXPR <vect__160.540_471>;
common/pixel.c:331:5: note: add new stmt: vect__161.541_468 = ABS_EXPR <vect__160.540_470>;
common/pixel.c:331:5: note: ------>vectorizing statement: _162 = _157 - _159;

common/pixel.c:331:5: note: multiple-types.
common/pixel.c:331:5: note: transform statement.
common/pixel.c:331:5: note: vect_is_simple_use: operand _157
common/pixel.c:331:5: note: def_stmt: _157 = (int) _156;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: vect_is_simple_use: operand _159
common/pixel.c:331:5: note: def_stmt: _159 = (int) _158;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: transform binary/unary operation.
common/pixel.c:331:5: note: vect_get_vec_def_for_operand: _157
common/pixel.c:331:5: note: vect_is_simple_use: operand _157
common/pixel.c:331:5: note: def_stmt: _157 = (int) _156;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: def =  _157
  def_stmt =  _157 = (int) _156;
common/pixel.c:331:5: note: vect_get_vec_def_for_operand: _159
common/pixel.c:331:5: note: vect_is_simple_use: operand _159
common/pixel.c:331:5: note: def_stmt: _159 = (int) _158;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: def =  _159
  def_stmt =  _159 = (int) _158;
common/pixel.c:331:5: note: add new stmt: vect__162.542_467 = vect__157.535_479 - vect__159.539_473;
common/pixel.c:331:5: note: add new stmt: vect__162.542_466 = vect__157.535_478 - vect__159.539_472;
common/pixel.c:331:5: note: ------>vectorizing statement: _163 = ABS_EXPR <_162>;

common/pixel.c:331:5: note: multiple-types.
common/pixel.c:331:5: note: transform statement.
common/pixel.c:331:5: note: vect_is_simple_use: operand _162
common/pixel.c:331:5: note: def_stmt: _162 = _157 - _159;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: transform binary/unary operation.
common/pixel.c:331:5: note: vect_get_vec_def_for_operand: _162
common/pixel.c:331:5: note: vect_is_simple_use: operand _162
common/pixel.c:331:5: note: def_stmt: _162 = _157 - _159;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: def =  _162
  def_stmt =  _162 = _157 - _159;
common/pixel.c:331:5: note: add new stmt: vect__163.543_465 = ABS_EXPR <vect__162.542_467>;
common/pixel.c:331:5: note: add new stmt: vect__163.543_464 = ABS_EXPR <vect__162.542_466>;
common/pixel.c:331:5: note: ------>vectorizing statement: _164 = _161 + _163;

common/pixel.c:331:5: note: multiple-types.
common/pixel.c:331:5: note: transform statement.
common/pixel.c:331:5: note: vect_is_simple_use: operand _161
common/pixel.c:331:5: note: def_stmt: _161 = ABS_EXPR <_160>;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: vect_is_simple_use: operand _163
common/pixel.c:331:5: note: def_stmt: _163 = ABS_EXPR <_162>;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: transform binary/unary operation.
common/pixel.c:331:5: note: vect_get_vec_def_for_operand: _161
common/pixel.c:331:5: note: vect_is_simple_use: operand _161
common/pixel.c:331:5: note: def_stmt: _161 = ABS_EXPR <_160>;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: def =  _161
  def_stmt =  _161 = ABS_EXPR <_160>;
common/pixel.c:331:5: note: vect_get_vec_def_for_operand: _163
common/pixel.c:331:5: note: vect_is_simple_use: operand _163
common/pixel.c:331:5: note: def_stmt: _163 = ABS_EXPR <_162>;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: def =  _163
  def_stmt =  _163 = ABS_EXPR <_162>;
common/pixel.c:331:5: note: add new stmt: vect__164.544_463 = vect__161.541_469 + vect__163.543_465;
common/pixel.c:331:5: note: add new stmt: vect__164.544_462 = vect__161.541_468 + vect__163.543_464;
common/pixel.c:331:5: note: ------>vectorizing statement: _165 = tmp[1][i_225];

common/pixel.c:331:5: note: transform statement.
common/pixel.c:331:5: note: transform load. ncopies = 1
common/pixel.c:331:5: note: create vector_type-pointer variable to type: vector(8) short int  vectorizing an array ref: tmp
common/pixel.c:331:5: note: created vectp_tmp.546_461
common/pixel.c:331:5: note: add new stmt: vect__165.547_458 = MEM[(short int *)vectp_tmp.545_460];
common/pixel.c:331:5: note: ------>vectorizing statement: _166 = (int) _165;

common/pixel.c:331:5: note: multiple-types.
common/pixel.c:331:5: note: transform statement.
common/pixel.c:331:5: note: vect_is_simple_use: operand _165
common/pixel.c:331:5: note: def_stmt: _165 = tmp[1][i_225];
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: transform conversion. ncopies = 1.
common/pixel.c:331:5: note: vect_get_vec_def_for_operand: _165
common/pixel.c:331:5: note: vect_is_simple_use: operand _165
common/pixel.c:331:5: note: def_stmt: _165 = tmp[1][i_225];
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: def =  _165
  def_stmt =  _165 = tmp[1][i_225];
common/pixel.c:331:5: note: add new stmt: vect__166.548_457 = [vec_unpack_lo_expr] vect__165.547_458;
common/pixel.c:331:5: note: add new stmt: vect__166.548_456 = [vec_unpack_hi_expr] vect__165.547_458;
common/pixel.c:331:5: note: ------>vectorizing statement: _167 = tmp[5][i_225];

common/pixel.c:331:5: note: transform statement.
common/pixel.c:331:5: note: transform load. ncopies = 1
common/pixel.c:331:5: note: create vector_type-pointer variable to type: vector(8) short int  vectorizing an array ref: tmp
common/pixel.c:331:5: note: created vectp_tmp.550_455
common/pixel.c:331:5: note: add new stmt: vect__167.551_452 = MEM[(short int *)vectp_tmp.549_454];
common/pixel.c:331:5: note: ------>vectorizing statement: _168 = (int) _167;

common/pixel.c:331:5: note: multiple-types.
common/pixel.c:331:5: note: transform statement.
common/pixel.c:331:5: note: vect_is_simple_use: operand _167
common/pixel.c:331:5: note: def_stmt: _167 = tmp[5][i_225];
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: transform conversion. ncopies = 1.
common/pixel.c:331:5: note: vect_get_vec_def_for_operand: _167
common/pixel.c:331:5: note: vect_is_simple_use: operand _167
common/pixel.c:331:5: note: def_stmt: _167 = tmp[5][i_225];
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: def =  _167
  def_stmt =  _167 = tmp[5][i_225];
common/pixel.c:331:5: note: add new stmt: vect__168.552_451 = [vec_unpack_lo_expr] vect__167.551_452;
common/pixel.c:331:5: note: add new stmt: vect__168.552_450 = [vec_unpack_hi_expr] vect__167.551_452;
common/pixel.c:331:5: note: ------>vectorizing statement: _169 = _166 + _168;

common/pixel.c:331:5: note: multiple-types.
common/pixel.c:331:5: note: transform statement.
common/pixel.c:331:5: note: vect_is_simple_use: operand _166
common/pixel.c:331:5: note: def_stmt: _166 = (int) _165;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: vect_is_simple_use: operand _168
common/pixel.c:331:5: note: def_stmt: _168 = (int) _167;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: transform binary/unary operation.
common/pixel.c:331:5: note: vect_get_vec_def_for_operand: _166
common/pixel.c:331:5: note: vect_is_simple_use: operand _166
common/pixel.c:331:5: note: def_stmt: _166 = (int) _165;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: def =  _166
  def_stmt =  _166 = (int) _165;
common/pixel.c:331:5: note: vect_get_vec_def_for_operand: _168
common/pixel.c:331:5: note: vect_is_simple_use: operand _168
common/pixel.c:331:5: note: def_stmt: _168 = (int) _167;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: def =  _168
  def_stmt =  _168 = (int) _167;
common/pixel.c:331:5: note: add new stmt: vect__169.553_449 = vect__166.548_457 + vect__168.552_451;
common/pixel.c:331:5: note: add new stmt: vect__169.553_448 = vect__166.548_456 + vect__168.552_450;
common/pixel.c:331:5: note: ------>vectorizing statement: _170 = ABS_EXPR <_169>;

common/pixel.c:331:5: note: multiple-types.
common/pixel.c:331:5: note: transform statement.
common/pixel.c:331:5: note: vect_is_simple_use: operand _169
common/pixel.c:331:5: note: def_stmt: _169 = _166 + _168;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: transform binary/unary operation.
common/pixel.c:331:5: note: vect_get_vec_def_for_operand: _169
common/pixel.c:331:5: note: vect_is_simple_use: operand _169
common/pixel.c:331:5: note: def_stmt: _169 = _166 + _168;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: def =  _169
  def_stmt =  _169 = _166 + _168;
common/pixel.c:331:5: note: add new stmt: vect__170.554_447 = ABS_EXPR <vect__169.553_449>;
common/pixel.c:331:5: note: add new stmt: vect__170.554_446 = ABS_EXPR <vect__169.553_448>;
common/pixel.c:331:5: note: ------>vectorizing statement: _171 = _164 + _170;

common/pixel.c:331:5: note: multiple-types.
common/pixel.c:331:5: note: transform statement.
common/pixel.c:331:5: note: vect_is_simple_use: operand _164
common/pixel.c:331:5: note: def_stmt: _164 = _161 + _163;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: vect_is_simple_use: operand _170
common/pixel.c:331:5: note: def_stmt: _170 = ABS_EXPR <_169>;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: transform binary/unary operation.
common/pixel.c:331:5: note: vect_get_vec_def_for_operand: _164
common/pixel.c:331:5: note: vect_is_simple_use: operand _164
common/pixel.c:331:5: note: def_stmt: _164 = _161 + _163;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: def =  _164
  def_stmt =  _164 = _161 + _163;
common/pixel.c:331:5: note: vect_get_vec_def_for_operand: _170
common/pixel.c:331:5: note: vect_is_simple_use: operand _170
common/pixel.c:331:5: note: def_stmt: _170 = ABS_EXPR <_169>;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: def =  _170
  def_stmt =  _170 = ABS_EXPR <_169>;
common/pixel.c:331:5: note: add new stmt: vect__171.555_445 = vect__164.544_463 + vect__170.554_447;
common/pixel.c:331:5: note: add new stmt: vect__171.555_444 = vect__164.544_462 + vect__170.554_446;
common/pixel.c:331:5: note: ------>vectorizing statement: _172 = _166 - _168;

common/pixel.c:331:5: note: multiple-types.
common/pixel.c:331:5: note: transform statement.
common/pixel.c:331:5: note: vect_is_simple_use: operand _166
common/pixel.c:331:5: note: def_stmt: _166 = (int) _165;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: vect_is_simple_use: operand _168
common/pixel.c:331:5: note: def_stmt: _168 = (int) _167;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: transform binary/unary operation.
common/pixel.c:331:5: note: vect_get_vec_def_for_operand: _166
common/pixel.c:331:5: note: vect_is_simple_use: operand _166
common/pixel.c:331:5: note: def_stmt: _166 = (int) _165;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: def =  _166
  def_stmt =  _166 = (int) _165;
common/pixel.c:331:5: note: vect_get_vec_def_for_operand: _168
common/pixel.c:331:5: note: vect_is_simple_use: operand _168
common/pixel.c:331:5: note: def_stmt: _168 = (int) _167;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: def =  _168
  def_stmt =  _168 = (int) _167;
common/pixel.c:331:5: note: add new stmt: vect__172.556_443 = vect__166.548_457 - vect__168.552_451;
common/pixel.c:331:5: note: add new stmt: vect__172.556_442 = vect__166.548_456 - vect__168.552_450;
common/pixel.c:331:5: note: ------>vectorizing statement: _173 = ABS_EXPR <_172>;

common/pixel.c:331:5: note: multiple-types.
common/pixel.c:331:5: note: transform statement.
common/pixel.c:331:5: note: vect_is_simple_use: operand _172
common/pixel.c:331:5: note: def_stmt: _172 = _166 - _168;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: transform binary/unary operation.
common/pixel.c:331:5: note: vect_get_vec_def_for_operand: _172
common/pixel.c:331:5: note: vect_is_simple_use: operand _172
common/pixel.c:331:5: note: def_stmt: _172 = _166 - _168;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: def =  _172
  def_stmt =  _172 = _166 - _168;
common/pixel.c:331:5: note: add new stmt: vect__173.557_441 = ABS_EXPR <vect__172.556_443>;
common/pixel.c:331:5: note: add new stmt: vect__173.557_440 = ABS_EXPR <vect__172.556_442>;
common/pixel.c:331:5: note: ------>vectorizing statement: _174 = _171 + _173;

common/pixel.c:331:5: note: multiple-types.
common/pixel.c:331:5: note: transform statement.
common/pixel.c:331:5: note: vect_is_simple_use: operand _171
common/pixel.c:331:5: note: def_stmt: _171 = _164 + _170;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: vect_is_simple_use: operand _173
common/pixel.c:331:5: note: def_stmt: _173 = ABS_EXPR <_172>;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: transform binary/unary operation.
common/pixel.c:331:5: note: vect_get_vec_def_for_operand: _171
common/pixel.c:331:5: note: vect_is_simple_use: operand _171
common/pixel.c:331:5: note: def_stmt: _171 = _164 + _170;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: def =  _171
  def_stmt =  _171 = _164 + _170;
common/pixel.c:331:5: note: vect_get_vec_def_for_operand: _173
common/pixel.c:331:5: note: vect_is_simple_use: operand _173
common/pixel.c:331:5: note: def_stmt: _173 = ABS_EXPR <_172>;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: def =  _173
  def_stmt =  _173 = ABS_EXPR <_172>;
common/pixel.c:331:5: note: add new stmt: vect__174.558_439 = vect__171.555_445 + vect__173.557_441;
common/pixel.c:331:5: note: add new stmt: vect__174.558_438 = vect__171.555_444 + vect__173.557_440;
common/pixel.c:331:5: note: ------>vectorizing statement: _175 = tmp[2][i_225];

common/pixel.c:331:5: note: transform statement.
common/pixel.c:331:5: note: transform load. ncopies = 1
common/pixel.c:331:5: note: create vector_type-pointer variable to type: vector(8) short int  vectorizing an array ref: tmp
common/pixel.c:331:5: note: created vectp_tmp.560_437
common/pixel.c:331:5: note: add new stmt: vect__175.561_434 = MEM[(short int *)vectp_tmp.559_436];
common/pixel.c:331:5: note: ------>vectorizing statement: _176 = (int) _175;

common/pixel.c:331:5: note: multiple-types.
common/pixel.c:331:5: note: transform statement.
common/pixel.c:331:5: note: vect_is_simple_use: operand _175
common/pixel.c:331:5: note: def_stmt: _175 = tmp[2][i_225];
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: transform conversion. ncopies = 1.
common/pixel.c:331:5: note: vect_get_vec_def_for_operand: _175
common/pixel.c:331:5: note: vect_is_simple_use: operand _175
common/pixel.c:331:5: note: def_stmt: _175 = tmp[2][i_225];
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: def =  _175
  def_stmt =  _175 = tmp[2][i_225];
common/pixel.c:331:5: note: add new stmt: vect__176.562_433 = [vec_unpack_lo_expr] vect__175.561_434;
common/pixel.c:331:5: note: add new stmt: vect__176.562_432 = [vec_unpack_hi_expr] vect__175.561_434;
common/pixel.c:331:5: note: ------>vectorizing statement: _177 = tmp[6][i_225];

common/pixel.c:331:5: note: transform statement.
common/pixel.c:331:5: note: transform load. ncopies = 1
common/pixel.c:331:5: note: create vector_type-pointer variable to type: vector(8) short int  vectorizing an array ref: tmp
common/pixel.c:331:5: note: created vectp_tmp.564_431
common/pixel.c:331:5: note: add new stmt: vect__177.565_428 = MEM[(short int *)vectp_tmp.563_430];
common/pixel.c:331:5: note: ------>vectorizing statement: _178 = (int) _177;

common/pixel.c:331:5: note: multiple-types.
common/pixel.c:331:5: note: transform statement.
common/pixel.c:331:5: note: vect_is_simple_use: operand _177
common/pixel.c:331:5: note: def_stmt: _177 = tmp[6][i_225];
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: transform conversion. ncopies = 1.
common/pixel.c:331:5: note: vect_get_vec_def_for_operand: _177
common/pixel.c:331:5: note: vect_is_simple_use: operand _177
common/pixel.c:331:5: note: def_stmt: _177 = tmp[6][i_225];
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: def =  _177
  def_stmt =  _177 = tmp[6][i_225];
common/pixel.c:331:5: note: add new stmt: vect__178.566_427 = [vec_unpack_lo_expr] vect__177.565_428;
common/pixel.c:331:5: note: add new stmt: vect__178.566_426 = [vec_unpack_hi_expr] vect__177.565_428;
common/pixel.c:331:5: note: ------>vectorizing statement: _179 = _176 + _178;

common/pixel.c:331:5: note: multiple-types.
common/pixel.c:331:5: note: transform statement.
common/pixel.c:331:5: note: vect_is_simple_use: operand _176
common/pixel.c:331:5: note: def_stmt: _176 = (int) _175;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: vect_is_simple_use: operand _178
common/pixel.c:331:5: note: def_stmt: _178 = (int) _177;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: transform binary/unary operation.
common/pixel.c:331:5: note: vect_get_vec_def_for_operand: _176
common/pixel.c:331:5: note: vect_is_simple_use: operand _176
common/pixel.c:331:5: note: def_stmt: _176 = (int) _175;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: def =  _176
  def_stmt =  _176 = (int) _175;
common/pixel.c:331:5: note: vect_get_vec_def_for_operand: _178
common/pixel.c:331:5: note: vect_is_simple_use: operand _178
common/pixel.c:331:5: note: def_stmt: _178 = (int) _177;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: def =  _178
  def_stmt =  _178 = (int) _177;
common/pixel.c:331:5: note: add new stmt: vect__179.567_425 = vect__176.562_433 + vect__178.566_427;
common/pixel.c:331:5: note: add new stmt: vect__179.567_424 = vect__176.562_432 + vect__178.566_426;
common/pixel.c:331:5: note: ------>vectorizing statement: _180 = ABS_EXPR <_179>;

common/pixel.c:331:5: note: multiple-types.
common/pixel.c:331:5: note: transform statement.
common/pixel.c:331:5: note: vect_is_simple_use: operand _179
common/pixel.c:331:5: note: def_stmt: _179 = _176 + _178;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: transform binary/unary operation.
common/pixel.c:331:5: note: vect_get_vec_def_for_operand: _179
common/pixel.c:331:5: note: vect_is_simple_use: operand _179
common/pixel.c:331:5: note: def_stmt: _179 = _176 + _178;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: def =  _179
  def_stmt =  _179 = _176 + _178;
common/pixel.c:331:5: note: add new stmt: vect__180.568_423 = ABS_EXPR <vect__179.567_425>;
common/pixel.c:331:5: note: add new stmt: vect__180.568_422 = ABS_EXPR <vect__179.567_424>;
common/pixel.c:331:5: note: ------>vectorizing statement: _181 = _174 + _180;

common/pixel.c:331:5: note: multiple-types.
common/pixel.c:331:5: note: transform statement.
common/pixel.c:331:5: note: vect_is_simple_use: operand _174
common/pixel.c:331:5: note: def_stmt: _174 = _171 + _173;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: vect_is_simple_use: operand _180
common/pixel.c:331:5: note: def_stmt: _180 = ABS_EXPR <_179>;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: transform binary/unary operation.
common/pixel.c:331:5: note: vect_get_vec_def_for_operand: _174
common/pixel.c:331:5: note: vect_is_simple_use: operand _174
common/pixel.c:331:5: note: def_stmt: _174 = _171 + _173;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: def =  _174
  def_stmt =  _174 = _171 + _173;
common/pixel.c:331:5: note: vect_get_vec_def_for_operand: _180
common/pixel.c:331:5: note: vect_is_simple_use: operand _180
common/pixel.c:331:5: note: def_stmt: _180 = ABS_EXPR <_179>;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: def =  _180
  def_stmt =  _180 = ABS_EXPR <_179>;
common/pixel.c:331:5: note: add new stmt: vect__181.569_421 = vect__174.558_439 + vect__180.568_423;
common/pixel.c:331:5: note: add new stmt: vect__181.569_420 = vect__174.558_438 + vect__180.568_422;
common/pixel.c:331:5: note: ------>vectorizing statement: _182 = _176 - _178;

common/pixel.c:331:5: note: multiple-types.
common/pixel.c:331:5: note: transform statement.
common/pixel.c:331:5: note: vect_is_simple_use: operand _176
common/pixel.c:331:5: note: def_stmt: _176 = (int) _175;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: vect_is_simple_use: operand _178
common/pixel.c:331:5: note: def_stmt: _178 = (int) _177;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: transform binary/unary operation.
common/pixel.c:331:5: note: vect_get_vec_def_for_operand: _176
common/pixel.c:331:5: note: vect_is_simple_use: operand _176
common/pixel.c:331:5: note: def_stmt: _176 = (int) _175;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: def =  _176
  def_stmt =  _176 = (int) _175;
common/pixel.c:331:5: note: vect_get_vec_def_for_operand: _178
common/pixel.c:331:5: note: vect_is_simple_use: operand _178
common/pixel.c:331:5: note: def_stmt: _178 = (int) _177;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: def =  _178
  def_stmt =  _178 = (int) _177;
common/pixel.c:331:5: note: add new stmt: vect__182.570_419 = vect__176.562_433 - vect__178.566_427;
common/pixel.c:331:5: note: add new stmt: vect__182.570_418 = vect__176.562_432 - vect__178.566_426;
common/pixel.c:331:5: note: ------>vectorizing statement: _183 = ABS_EXPR <_182>;

common/pixel.c:331:5: note: multiple-types.
common/pixel.c:331:5: note: transform statement.
common/pixel.c:331:5: note: vect_is_simple_use: operand _182
common/pixel.c:331:5: note: def_stmt: _182 = _176 - _178;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: transform binary/unary operation.
common/pixel.c:331:5: note: vect_get_vec_def_for_operand: _182
common/pixel.c:331:5: note: vect_is_simple_use: operand _182
common/pixel.c:331:5: note: def_stmt: _182 = _176 - _178;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: def =  _182
  def_stmt =  _182 = _176 - _178;
common/pixel.c:331:5: note: add new stmt: vect__183.571_417 = ABS_EXPR <vect__182.570_419>;
common/pixel.c:331:5: note: add new stmt: vect__183.571_416 = ABS_EXPR <vect__182.570_418>;
common/pixel.c:331:5: note: ------>vectorizing statement: _184 = _181 + _183;

common/pixel.c:331:5: note: multiple-types.
common/pixel.c:331:5: note: transform statement.
common/pixel.c:331:5: note: vect_is_simple_use: operand _181
common/pixel.c:331:5: note: def_stmt: _181 = _174 + _180;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: vect_is_simple_use: operand _183
common/pixel.c:331:5: note: def_stmt: _183 = ABS_EXPR <_182>;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: transform binary/unary operation.
common/pixel.c:331:5: note: vect_get_vec_def_for_operand: _181
common/pixel.c:331:5: note: vect_is_simple_use: operand _181
common/pixel.c:331:5: note: def_stmt: _181 = _174 + _180;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: def =  _181
  def_stmt =  _181 = _174 + _180;
common/pixel.c:331:5: note: vect_get_vec_def_for_operand: _183
common/pixel.c:331:5: note: vect_is_simple_use: operand _183
common/pixel.c:331:5: note: def_stmt: _183 = ABS_EXPR <_182>;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: def =  _183
  def_stmt =  _183 = ABS_EXPR <_182>;
common/pixel.c:331:5: note: add new stmt: vect__184.572_415 = vect__181.569_421 + vect__183.571_417;
common/pixel.c:331:5: note: add new stmt: vect__184.572_414 = vect__181.569_420 + vect__183.571_416;
common/pixel.c:331:5: note: ------>vectorizing statement: _185 = tmp[3][i_225];

common/pixel.c:331:5: note: transform statement.
common/pixel.c:331:5: note: transform load. ncopies = 1
common/pixel.c:331:5: note: create vector_type-pointer variable to type: vector(8) short int  vectorizing an array ref: tmp
common/pixel.c:331:5: note: created vectp_tmp.574_413
common/pixel.c:331:5: note: add new stmt: vect__185.575_410 = MEM[(short int *)vectp_tmp.573_412];
common/pixel.c:331:5: note: ------>vectorizing statement: _186 = (int) _185;

common/pixel.c:331:5: note: multiple-types.
common/pixel.c:331:5: note: transform statement.
common/pixel.c:331:5: note: vect_is_simple_use: operand _185
common/pixel.c:331:5: note: def_stmt: _185 = tmp[3][i_225];
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: transform conversion. ncopies = 1.
common/pixel.c:331:5: note: vect_get_vec_def_for_operand: _185
common/pixel.c:331:5: note: vect_is_simple_use: operand _185
common/pixel.c:331:5: note: def_stmt: _185 = tmp[3][i_225];
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: def =  _185
  def_stmt =  _185 = tmp[3][i_225];
common/pixel.c:331:5: note: add new stmt: vect__186.576_409 = [vec_unpack_lo_expr] vect__185.575_410;
common/pixel.c:331:5: note: add new stmt: vect__186.576_408 = [vec_unpack_hi_expr] vect__185.575_410;
common/pixel.c:331:5: note: ------>vectorizing statement: _187 = tmp[7][i_225];

common/pixel.c:331:5: note: transform statement.
common/pixel.c:331:5: note: transform load. ncopies = 1
common/pixel.c:331:5: note: create vector_type-pointer variable to type: vector(8) short int  vectorizing an array ref: tmp
common/pixel.c:331:5: note: created vectp_tmp.578_407
common/pixel.c:331:5: note: add new stmt: vect__187.579_404 = MEM[(short int *)vectp_tmp.577_406];
common/pixel.c:331:5: note: ------>vectorizing statement: _188 = (int) _187;

common/pixel.c:331:5: note: multiple-types.
common/pixel.c:331:5: note: transform statement.
common/pixel.c:331:5: note: vect_is_simple_use: operand _187
common/pixel.c:331:5: note: def_stmt: _187 = tmp[7][i_225];
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: transform conversion. ncopies = 1.
common/pixel.c:331:5: note: vect_get_vec_def_for_operand: _187
common/pixel.c:331:5: note: vect_is_simple_use: operand _187
common/pixel.c:331:5: note: def_stmt: _187 = tmp[7][i_225];
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: def =  _187
  def_stmt =  _187 = tmp[7][i_225];
common/pixel.c:331:5: note: add new stmt: vect__188.580_403 = [vec_unpack_lo_expr] vect__187.579_404;
common/pixel.c:331:5: note: add new stmt: vect__188.580_402 = [vec_unpack_hi_expr] vect__187.579_404;
common/pixel.c:331:5: note: ------>vectorizing statement: _189 = _186 + _188;

common/pixel.c:331:5: note: multiple-types.
common/pixel.c:331:5: note: transform statement.
common/pixel.c:331:5: note: vect_is_simple_use: operand _186
common/pixel.c:331:5: note: def_stmt: _186 = (int) _185;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: vect_is_simple_use: operand _188
common/pixel.c:331:5: note: def_stmt: _188 = (int) _187;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: transform binary/unary operation.
common/pixel.c:331:5: note: vect_get_vec_def_for_operand: _186
common/pixel.c:331:5: note: vect_is_simple_use: operand _186
common/pixel.c:331:5: note: def_stmt: _186 = (int) _185;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: def =  _186
  def_stmt =  _186 = (int) _185;
common/pixel.c:331:5: note: vect_get_vec_def_for_operand: _188
common/pixel.c:331:5: note: vect_is_simple_use: operand _188
common/pixel.c:331:5: note: def_stmt: _188 = (int) _187;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: def =  _188
  def_stmt =  _188 = (int) _187;
common/pixel.c:331:5: note: add new stmt: vect__189.581_401 = vect__186.576_409 + vect__188.580_403;
common/pixel.c:331:5: note: add new stmt: vect__189.581_400 = vect__186.576_408 + vect__188.580_402;
common/pixel.c:331:5: note: ------>vectorizing statement: _190 = ABS_EXPR <_189>;

common/pixel.c:331:5: note: multiple-types.
common/pixel.c:331:5: note: transform statement.
common/pixel.c:331:5: note: vect_is_simple_use: operand _189
common/pixel.c:331:5: note: def_stmt: _189 = _186 + _188;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: transform binary/unary operation.
common/pixel.c:331:5: note: vect_get_vec_def_for_operand: _189
common/pixel.c:331:5: note: vect_is_simple_use: operand _189
common/pixel.c:331:5: note: def_stmt: _189 = _186 + _188;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: def =  _189
  def_stmt =  _189 = _186 + _188;
common/pixel.c:331:5: note: add new stmt: vect__190.582_399 = ABS_EXPR <vect__189.581_401>;
common/pixel.c:331:5: note: add new stmt: vect__190.582_398 = ABS_EXPR <vect__189.581_400>;
common/pixel.c:331:5: note: ------>vectorizing statement: _191 = _184 + _190;

common/pixel.c:331:5: note: multiple-types.
common/pixel.c:331:5: note: transform statement.
common/pixel.c:331:5: note: vect_is_simple_use: operand _184
common/pixel.c:331:5: note: def_stmt: _184 = _181 + _183;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: vect_is_simple_use: operand _190
common/pixel.c:331:5: note: def_stmt: _190 = ABS_EXPR <_189>;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: transform binary/unary operation.
common/pixel.c:331:5: note: vect_get_vec_def_for_operand: _184
common/pixel.c:331:5: note: vect_is_simple_use: operand _184
common/pixel.c:331:5: note: def_stmt: _184 = _181 + _183;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: def =  _184
  def_stmt =  _184 = _181 + _183;
common/pixel.c:331:5: note: vect_get_vec_def_for_operand: _190
common/pixel.c:331:5: note: vect_is_simple_use: operand _190
common/pixel.c:331:5: note: def_stmt: _190 = ABS_EXPR <_189>;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: def =  _190
  def_stmt =  _190 = ABS_EXPR <_189>;
common/pixel.c:331:5: note: add new stmt: vect__191.583_397 = vect__184.572_415 + vect__190.582_399;
common/pixel.c:331:5: note: add new stmt: vect__191.583_396 = vect__184.572_414 + vect__190.582_398;
common/pixel.c:331:5: note: ------>vectorizing statement: _192 = _186 - _188;

common/pixel.c:331:5: note: multiple-types.
common/pixel.c:331:5: note: transform statement.
common/pixel.c:331:5: note: vect_is_simple_use: operand _186
common/pixel.c:331:5: note: def_stmt: _186 = (int) _185;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: vect_is_simple_use: operand _188
common/pixel.c:331:5: note: def_stmt: _188 = (int) _187;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: transform binary/unary operation.
common/pixel.c:331:5: note: vect_get_vec_def_for_operand: _186
common/pixel.c:331:5: note: vect_is_simple_use: operand _186
common/pixel.c:331:5: note: def_stmt: _186 = (int) _185;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: def =  _186
  def_stmt =  _186 = (int) _185;
common/pixel.c:331:5: note: vect_get_vec_def_for_operand: _188
common/pixel.c:331:5: note: vect_is_simple_use: operand _188
common/pixel.c:331:5: note: def_stmt: _188 = (int) _187;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: def =  _188
  def_stmt =  _188 = (int) _187;
common/pixel.c:331:5: note: add new stmt: vect__192.584_395 = vect__186.576_409 - vect__188.580_403;
common/pixel.c:331:5: note: add new stmt: vect__192.584_394 = vect__186.576_408 - vect__188.580_402;
common/pixel.c:331:5: note: ------>vectorizing statement: _193 = ABS_EXPR <_192>;

common/pixel.c:331:5: note: multiple-types.
common/pixel.c:331:5: note: transform statement.
common/pixel.c:331:5: note: vect_is_simple_use: operand _192
common/pixel.c:331:5: note: def_stmt: _192 = _186 - _188;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: transform binary/unary operation.
common/pixel.c:331:5: note: vect_get_vec_def_for_operand: _192
common/pixel.c:331:5: note: vect_is_simple_use: operand _192
common/pixel.c:331:5: note: def_stmt: _192 = _186 - _188;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: def =  _192
  def_stmt =  _192 = _186 - _188;
common/pixel.c:331:5: note: add new stmt: vect__193.585_393 = ABS_EXPR <vect__192.584_395>;
common/pixel.c:331:5: note: add new stmt: vect__193.585_392 = ABS_EXPR <vect__192.584_394>;
common/pixel.c:331:5: note: ------>vectorizing statement: _194 = _191 + _193;

common/pixel.c:331:5: note: multiple-types.
common/pixel.c:331:5: note: transform statement.
common/pixel.c:331:5: note: vect_is_simple_use: operand _191
common/pixel.c:331:5: note: def_stmt: _191 = _184 + _190;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: vect_is_simple_use: operand _193
common/pixel.c:331:5: note: def_stmt: _193 = ABS_EXPR <_192>;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: transform binary/unary operation.
common/pixel.c:331:5: note: vect_get_vec_def_for_operand: _191
common/pixel.c:331:5: note: vect_is_simple_use: operand _191
common/pixel.c:331:5: note: def_stmt: _191 = _184 + _190;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: def =  _191
  def_stmt =  _191 = _184 + _190;
common/pixel.c:331:5: note: vect_get_vec_def_for_operand: _193
common/pixel.c:331:5: note: vect_is_simple_use: operand _193
common/pixel.c:331:5: note: def_stmt: _193 = ABS_EXPR <_192>;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: def =  _193
  def_stmt =  _193 = ABS_EXPR <_192>;
common/pixel.c:331:5: note: add new stmt: vect__194.586_391 = vect__191.583_397 + vect__193.585_393;
common/pixel.c:331:5: note: add new stmt: vect__194.586_390 = vect__191.583_396 + vect__193.585_392;
common/pixel.c:331:5: note: ------>vectorizing statement: sum8_195 = _194 + sum8_222;

common/pixel.c:331:5: note: multiple-types.
common/pixel.c:331:5: note: transform statement.
common/pixel.c:331:5: note: vect_is_simple_use: operand _194
common/pixel.c:331:5: note: def_stmt: _194 = _191 + _193;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: vect_is_simple_use: operand sum8_222
common/pixel.c:331:5: note: def_stmt: sum8_222 = PHI <0(12), sum8_195(10)>
common/pixel.c:331:5: note: type of def: 5.
common/pixel.c:331:5: note: detected reduction: sum8_195 = _194 + sum8_222;

common/pixel.c:331:5: note: reduc op not supported by target.
common/pixel.c:331:5: note: transform reduction.
common/pixel.c:331:5: note: vect_get_vec_def_for_operand: _194
common/pixel.c:331:5: note: vect_is_simple_use: operand _194
common/pixel.c:331:5: note: def_stmt: _194 = _191 + _193;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: def =  _194
  def_stmt =  _194 = _191 + _193;
common/pixel.c:331:5: note: add new stmt: vect_sum8_195.587_388 = vect__194.586_391 + vect_sum8_195.587_389;
common/pixel.c:331:5: note: vect_is_simple_use: operand _194
common/pixel.c:331:5: note: def_stmt: _194 = _191 + _193;
common/pixel.c:331:5: note: type of def: 3.
common/pixel.c:331:5: note: add new stmt: vect_sum8_195.587_387 = vect__194.586_390 + vect_sum8_195.587_388;
common/pixel.c:331:5: note: vect_is_simple_use: operand 0
common/pixel.c:331:5: note: vect_get_vec_def_for_operand: sum8_222
common/pixel.c:331:5: note: vect_is_simple_use: operand sum8_222
common/pixel.c:331:5: note: def_stmt: sum8_222 = PHI <0(12), sum8_195(10)>
common/pixel.c:331:5: note: type of def: 5.
common/pixel.c:331:5: note: def =  sum8_222
  def_stmt =  sum8_222 = PHI <0(12), sum8_195(10)>
common/pixel.c:331:5: note: transform reduction: created def-use cycle: vect_sum8_195.587_389 = PHI <{ 0, 0, 0, 0 }(12), vect_sum8_195.587_387(10)>

vect_sum8_195.587_387 = vect__194.586_390 + vect_sum8_195.587_388;

common/pixel.c:331:5: note: Reduce using vector shifts
common/pixel.c:331:5: note: extract scalar result
common/pixel.c:331:5: note: ------>vectorizing statement: # DEBUG sum8 => sum8_195

common/pixel.c:331:5: note: ------>vectorizing statement: i_196 = i_225 + 1;

common/pixel.c:331:5: note: ------>vectorizing statement: # DEBUG i => i_196

common/pixel.c:331:5: note: ------>vectorizing statement: # DEBUG i => i_196

common/pixel.c:331:5: note: ------>vectorizing statement: # DEBUG sum8 => sum8_195

common/pixel.c:331:5: note: ------>vectorizing statement: ivtmp_489 = ivtmp_487 - 1;

common/pixel.c:331:5: note: ------>vectorizing statement: vectp_tmp.532_481 = vectp_tmp.532_482 + 16;

common/pixel.c:331:5: note: ------>vectorizing statement: vectp_tmp.536_475 = vectp_tmp.536_476 + 16;

common/pixel.c:331:5: note: ------>vectorizing statement: vectp_tmp.545_459 = vectp_tmp.545_460 + 16;

common/pixel.c:331:5: note: ------>vectorizing statement: vectp_tmp.549_453 = vectp_tmp.549_454 + 16;

common/pixel.c:331:5: note: ------>vectorizing statement: vectp_tmp.559_435 = vectp_tmp.559_436 + 16;

common/pixel.c:331:5: note: ------>vectorizing statement: vectp_tmp.563_429 = vectp_tmp.563_430 + 16;

common/pixel.c:331:5: note: ------>vectorizing statement: vectp_tmp.573_411 = vectp_tmp.573_412 + 16;

common/pixel.c:331:5: note: ------>vectorizing statement: vectp_tmp.577_405 = vectp_tmp.577_406 + 16;

common/pixel.c:331:5: note: ------>vectorizing statement: if (ivtmp_489 != 0)


loop at common/pixel.c:333: if (ivtmp_378 < 1)

;; Scaling loop 3 with scale 0.125000, bounding iterations to 1 from guessed 8
;; guessed iterations are now 1
common/pixel.c:331:5: note: LOOP VECTORIZED


Analyzing loop at common/pixel.c:315
common/pixel.c:315:5: note: ===== analyze_loop_nest =====
common/pixel.c:315:5: note: === vect_analyze_loop_form ===
common/pixel.c:315:5: note: === get_loop_niters ===
Analyzing # of iterations of loop 2
  exit condition [7, + , 4294967295] != 0
  bounds on difference of bases: -7 ... -7
  result:
    # of iterations 7, bounded by 7
common/pixel.c:315:5: note: === vect_analyze_data_refs ===
Creating dr for tmp[i_224][0]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &tmp
	offset from base address: 0
	constant offset from base address: 0
	step: 16
	aligned to: 128
	base_object: tmp
	Access function 0: 0
	Access function 1: {0, +, 1}_2
Creating dr for tmp[i_224][1]
analyze_innermost: success.
	base_address: &tmp
	offset from base address: 0
	constant offset from base address: 2
	step: 16
	aligned to: 128
	base_object: tmp
	Access function 0: 1
	Access function 1: {0, +, 1}_2
Creating dr for tmp[i_224][2]
analyze_innermost: success.
	base_address: &tmp
	offset from base address: 0
	constant offset from base address: 4
	step: 16
	aligned to: 128
	base_object: tmp
	Access function 0: 2
	Access function 1: {0, +, 1}_2
Creating dr for tmp[i_224][3]
analyze_innermost: success.
	base_address: &tmp
	offset from base address: 0
	constant offset from base address: 6
	step: 16
	aligned to: 128
	base_object: tmp
	Access function 0: 3
	Access function 1: {0, +, 1}_2
Creating dr for tmp[i_224][4]
analyze_innermost: success.
	base_address: &tmp
	offset from base address: 0
	constant offset from base address: 8
	step: 16
	aligned to: 128
	base_object: tmp
	Access function 0: 4
	Access function 1: {0, +, 1}_2
Creating dr for tmp[i_224][5]
analyze_innermost: success.
	base_address: &tmp
	offset from base address: 0
	constant offset from base address: 10
	step: 16
	aligned to: 128
	base_object: tmp
	Access function 0: 5
	Access function 1: {0, +, 1}_2
Creating dr for tmp[i_224][6]
analyze_innermost: success.
	base_address: &tmp
	offset from base address: 0
	constant offset from base address: 12
	step: 16
	aligned to: 128
	base_object: tmp
	Access function 0: 6
	Access function 1: {0, +, 1}_2
Creating dr for tmp[i_224][7]
analyze_innermost: success.
	base_address: &tmp
	offset from base address: 0
	constant offset from base address: 14
	step: 16
	aligned to: 128
	base_object: tmp
	Access function 0: 7
	Access function 1: {0, +, 1}_2
Creating dr for tmp[i_224][0]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &tmp
	offset from base address: 0
	constant offset from base address: 0
	step: 16
	aligned to: 128
	base_object: tmp
	Access function 0: 0
	Access function 1: {0, +, 1}_2
Creating dr for tmp[i_224][4]
analyze_innermost: success.
	base_address: &tmp
	offset from base address: 0
	constant offset from base address: 8
	step: 16
	aligned to: 128
	base_object: tmp
	Access function 0: 4
	Access function 1: {0, +, 1}_2
Creating dr for tmp[i_224][1]
analyze_innermost: success.
	base_address: &tmp
	offset from base address: 0
	constant offset from base address: 2
	step: 16
	aligned to: 128
	base_object: tmp
	Access function 0: 1
	Access function 1: {0, +, 1}_2
Creating dr for tmp[i_224][5]
analyze_innermost: success.
	base_address: &tmp
	offset from base address: 0
	constant offset from base address: 10
	step: 16
	aligned to: 128
	base_object: tmp
	Access function 0: 5
	Access function 1: {0, +, 1}_2
Creating dr for tmp[i_224][2]
analyze_innermost: success.
	base_address: &tmp
	offset from base address: 0
	constant offset from base address: 4
	step: 16
	aligned to: 128
	base_object: tmp
	Access function 0: 2
	Access function 1: {0, +, 1}_2
Creating dr for tmp[i_224][6]
analyze_innermost: success.
	base_address: &tmp
	offset from base address: 0
	constant offset from base address: 12
	step: 16
	aligned to: 128
	base_object: tmp
	Access function 0: 6
	Access function 1: {0, +, 1}_2
Creating dr for tmp[i_224][3]
analyze_innermost: success.
	base_address: &tmp
	offset from base address: 0
	constant offset from base address: 6
	step: 16
	aligned to: 128
	base_object: tmp
	Access function 0: 3
	Access function 1: {0, +, 1}_2
Creating dr for tmp[i_224][7]
analyze_innermost: success.
	base_address: &tmp
	offset from base address: 0
	constant offset from base address: 14
	step: 16
	aligned to: 128
	base_object: tmp
	Access function 0: 7
	Access function 1: {0, +, 1}_2
common/pixel.c:315:5: note: got vectype for stmt: _75 = tmp[i_224][0];
vector(8) short int
common/pixel.c:315:5: note: got vectype for stmt: _77 = tmp[i_224][1];
vector(8) short int
common/pixel.c:315:5: note: got vectype for stmt: _81 = tmp[i_224][2];
vector(8) short int
common/pixel.c:315:5: note: got vectype for stmt: _83 = tmp[i_224][3];
vector(8) short int
common/pixel.c:315:5: note: got vectype for stmt: _99 = tmp[i_224][4];
vector(8) short int
common/pixel.c:315:5: note: got vectype for stmt: _101 = tmp[i_224][5];
vector(8) short int
common/pixel.c:315:5: note: got vectype for stmt: _105 = tmp[i_224][6];
vector(8) short int
common/pixel.c:315:5: note: got vectype for stmt: _107 = tmp[i_224][7];
vector(8) short int
common/pixel.c:315:5: note: got vectype for stmt: tmp[i_224][0] = _126;
vector(8) short int
common/pixel.c:315:5: note: got vectype for stmt: tmp[i_224][4] = _129;
vector(8) short int
common/pixel.c:315:5: note: got vectype for stmt: tmp[i_224][1] = _134;
vector(8) short int
common/pixel.c:315:5: note: got vectype for stmt: tmp[i_224][5] = _137;
vector(8) short int
common/pixel.c:315:5: note: got vectype for stmt: tmp[i_224][2] = _142;
vector(8) short int
common/pixel.c:315:5: note: got vectype for stmt: tmp[i_224][6] = _145;
vector(8) short int
common/pixel.c:315:5: note: got vectype for stmt: tmp[i_224][3] = _150;
vector(8) short int
common/pixel.c:315:5: note: got vectype for stmt: tmp[i_224][7] = _153;
vector(8) short int
common/pixel.c:315:5: note: === vect_analyze_scalar_cycles ===
common/pixel.c:315:5: note: Analyze phi: sum4_221 = PHI <0(5), sum4_122(7)>

common/pixel.c:315:5: note: Access function of PHI: {0, +, _97 + _121}_2
common/pixel.c:315:5: note: step: _97 + _121,  init: 0
common/pixel.c:315:5: note: step unknown.
common/pixel.c:315:5: note: Analyze phi: i_224 = PHI <0(5), i_155(7)>

common/pixel.c:315:5: note: Access function of PHI: {0, +, 1}_2
common/pixel.c:315:5: note: step: 1,  init: 0
common/pixel.c:315:5: note: Detected induction.
common/pixel.c:315:5: note: Analyze phi: .MEM_227 = PHI <.MEM_70(5), .MEM_154(7)>

common/pixel.c:315:5: note: Analyze phi: ivtmp_488 = PHI <8(5), ivtmp_491(7)>

common/pixel.c:315:5: note: Access function of PHI: {8, +, 4294967295}_2
common/pixel.c:315:5: note: step: 4294967295,  init: 8
common/pixel.c:315:5: note: Detected induction.
common/pixel.c:315:5: note: Analyze phi: sum4_221 = PHI <0(5), sum4_122(7)>

common/pixel.c:315:5: note: swapping oprnds: sum4_122 = sum4_98 + _121;

common/pixel.c:315:5: note: reduction: detected reduction chain: sum4_122 = _121 + sum4_98;

common/pixel.c:315:5: note: Detected reduction.
common/pixel.c:315:5: note: === vect_pattern_recog ===
common/pixel.c:315:5: note: vect_is_simple_use: operand _121
common/pixel.c:315:5: note: def_stmt: _121 = _119 + _120;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: vect_is_simple_use: operand _121
common/pixel.c:315:5: note: def_stmt: _121 = _119 + _120;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: vect_is_simple_use: operand _121
common/pixel.c:315:5: note: def_stmt: _121 = _119 + _120;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: === vect_analyze_data_ref_accesses ===
common/pixel.c:315:5: note: Detected interleaving tmp[i_224][0] and tmp[i_224][1]
common/pixel.c:315:5: note: Detected interleaving tmp[i_224][0] and tmp[i_224][2]
common/pixel.c:315:5: note: Detected interleaving tmp[i_224][0] and tmp[i_224][3]
common/pixel.c:315:5: note: Detected interleaving tmp[i_224][0] and tmp[i_224][4]
common/pixel.c:315:5: note: Detected interleaving tmp[i_224][0] and tmp[i_224][5]
common/pixel.c:315:5: note: Detected interleaving tmp[i_224][0] and tmp[i_224][6]
common/pixel.c:315:5: note: Detected interleaving tmp[i_224][0] and tmp[i_224][7]
common/pixel.c:315:5: note: Detected interleaving tmp[i_224][0] and tmp[i_224][1]
common/pixel.c:315:5: note: Detected interleaving tmp[i_224][0] and tmp[i_224][2]
common/pixel.c:315:5: note: Detected interleaving tmp[i_224][0] and tmp[i_224][3]
common/pixel.c:315:5: note: Detected interleaving tmp[i_224][0] and tmp[i_224][4]
common/pixel.c:315:5: note: Detected interleaving tmp[i_224][0] and tmp[i_224][5]
common/pixel.c:315:5: note: Detected interleaving tmp[i_224][0] and tmp[i_224][6]
common/pixel.c:315:5: note: Detected interleaving tmp[i_224][0] and tmp[i_224][7]
common/pixel.c:315:5: note: Detected interleaving of size 8
common/pixel.c:315:5: note: Detected interleaving of size 8
common/pixel.c:315:5: note: === vect_mark_stmts_to_be_vectorized ===
common/pixel.c:315:5: note: init: phi relevant? sum4_221 = PHI <0(5), sum4_122(7)>
common/pixel.c:315:5: note: init: phi relevant? i_224 = PHI <0(5), i_155(7)>
common/pixel.c:315:5: note: init: phi relevant? .MEM_227 = PHI <.MEM_70(5), .MEM_154(7)>
common/pixel.c:315:5: note: init: phi relevant? ivtmp_488 = PHI <8(5), ivtmp_491(7)>
common/pixel.c:315:5: note: init: stmt relevant? # DEBUG i => i_224
common/pixel.c:315:5: note: init: stmt relevant? # DEBUG sum4 => sum4_221
common/pixel.c:315:5: note: init: stmt relevant? _75 = tmp[i_224][0];
common/pixel.c:315:5: note: init: stmt relevant? _76 = (int) _75;
common/pixel.c:315:5: note: init: stmt relevant? _77 = tmp[i_224][1];
common/pixel.c:315:5: note: init: stmt relevant? _78 = (int) _77;
common/pixel.c:315:5: note: init: stmt relevant? t0_79 = _76 + _78;
common/pixel.c:315:5: note: init: stmt relevant? # DEBUG t0 => t0_79
common/pixel.c:315:5: note: init: stmt relevant? t1_80 = _76 - _78;
common/pixel.c:315:5: note: init: stmt relevant? # DEBUG t1 => t1_80
common/pixel.c:315:5: note: init: stmt relevant? _81 = tmp[i_224][2];
common/pixel.c:315:5: note: init: stmt relevant? _82 = (int) _81;
common/pixel.c:315:5: note: init: stmt relevant? _83 = tmp[i_224][3];
common/pixel.c:315:5: note: init: stmt relevant? _84 = (int) _83;
common/pixel.c:315:5: note: init: stmt relevant? t2_85 = _82 + _84;
common/pixel.c:315:5: note: init: stmt relevant? # DEBUG t2 => t2_85
common/pixel.c:315:5: note: init: stmt relevant? t3_86 = _82 - _84;
common/pixel.c:315:5: note: init: stmt relevant? # DEBUG t3 => t3_86
common/pixel.c:315:5: note: init: stmt relevant? a0_87 = t0_79 + t2_85;
common/pixel.c:315:5: note: init: stmt relevant? # DEBUG a0 => a0_87
common/pixel.c:315:5: note: init: stmt relevant? a2_88 = t0_79 - t2_85;
common/pixel.c:315:5: note: init: stmt relevant? # DEBUG a2 => a2_88
common/pixel.c:315:5: note: init: stmt relevant? a1_89 = t1_80 + t3_86;
common/pixel.c:315:5: note: init: stmt relevant? # DEBUG a1 => a1_89
common/pixel.c:315:5: note: init: stmt relevant? a3_90 = t1_80 - t3_86;
common/pixel.c:315:5: note: init: stmt relevant? # DEBUG a3 => a3_90
common/pixel.c:315:5: note: init: stmt relevant? _91 = ABS_EXPR <a0_87>;
common/pixel.c:315:5: note: init: stmt relevant? _92 = ABS_EXPR <a1_89>;
common/pixel.c:315:5: note: init: stmt relevant? _93 = _91 + _92;
common/pixel.c:315:5: note: init: stmt relevant? _94 = ABS_EXPR <a2_88>;
common/pixel.c:315:5: note: init: stmt relevant? _95 = _93 + _94;
common/pixel.c:315:5: note: init: stmt relevant? _96 = ABS_EXPR <a3_90>;
common/pixel.c:315:5: note: init: stmt relevant? _97 = _95 + _96;
common/pixel.c:315:5: note: init: stmt relevant? sum4_98 = _97 + sum4_221;
common/pixel.c:315:5: note: init: stmt relevant? # DEBUG sum4 => sum4_98
common/pixel.c:315:5: note: init: stmt relevant? _99 = tmp[i_224][4];
common/pixel.c:315:5: note: init: stmt relevant? _100 = (int) _99;
common/pixel.c:315:5: note: init: stmt relevant? _101 = tmp[i_224][5];
common/pixel.c:315:5: note: init: stmt relevant? _102 = (int) _101;
common/pixel.c:315:5: note: init: stmt relevant? t0_103 = _100 + _102;
common/pixel.c:315:5: note: init: stmt relevant? # DEBUG t0 => t0_103
common/pixel.c:315:5: note: init: stmt relevant? t1_104 = _100 - _102;
common/pixel.c:315:5: note: init: stmt relevant? # DEBUG t1 => t1_104
common/pixel.c:315:5: note: init: stmt relevant? _105 = tmp[i_224][6];
common/pixel.c:315:5: note: init: stmt relevant? _106 = (int) _105;
common/pixel.c:315:5: note: init: stmt relevant? _107 = tmp[i_224][7];
common/pixel.c:315:5: note: init: stmt relevant? _108 = (int) _107;
common/pixel.c:315:5: note: init: stmt relevant? t2_109 = _106 + _108;
common/pixel.c:315:5: note: init: stmt relevant? # DEBUG t2 => t2_109
common/pixel.c:315:5: note: init: stmt relevant? t3_110 = _106 - _108;
common/pixel.c:315:5: note: init: stmt relevant? # DEBUG t3 => t3_110
common/pixel.c:315:5: note: init: stmt relevant? a4_111 = t0_103 + t2_109;
common/pixel.c:315:5: note: init: stmt relevant? # DEBUG a4 => a4_111
common/pixel.c:315:5: note: init: stmt relevant? a6_112 = t0_103 - t2_109;
common/pixel.c:315:5: note: init: stmt relevant? # DEBUG a6 => a6_112
common/pixel.c:315:5: note: init: stmt relevant? a5_113 = t1_104 + t3_110;
common/pixel.c:315:5: note: init: stmt relevant? # DEBUG a5 => a5_113
common/pixel.c:315:5: note: init: stmt relevant? a7_114 = t1_104 - t3_110;
common/pixel.c:315:5: note: init: stmt relevant? # DEBUG a7 => a7_114
common/pixel.c:315:5: note: init: stmt relevant? _115 = ABS_EXPR <a4_111>;
common/pixel.c:315:5: note: init: stmt relevant? _116 = ABS_EXPR <a5_113>;
common/pixel.c:315:5: note: init: stmt relevant? _117 = _115 + _116;
common/pixel.c:315:5: note: init: stmt relevant? _118 = ABS_EXPR <a6_112>;
common/pixel.c:315:5: note: init: stmt relevant? _119 = _117 + _118;
common/pixel.c:315:5: note: init: stmt relevant? _120 = ABS_EXPR <a7_114>;
common/pixel.c:315:5: note: init: stmt relevant? _121 = _119 + _120;
common/pixel.c:315:5: note: init: stmt relevant? sum4_122 = _121 + sum4_98;
common/pixel.c:315:5: note: vec_stmt_relevant_p: used out of loop.
common/pixel.c:315:5: note: mark relevant 0, live 1.
common/pixel.c:315:5: note: init: stmt relevant? # DEBUG sum4 => sum4_122
common/pixel.c:315:5: note: init: stmt relevant? _123 = (unsigned short) a0_87;
common/pixel.c:315:5: note: init: stmt relevant? _124 = (unsigned short) a4_111;
common/pixel.c:315:5: note: init: stmt relevant? _125 = _123 + _124;
common/pixel.c:315:5: note: init: stmt relevant? _126 = (short int) _125;
common/pixel.c:315:5: note: init: stmt relevant? tmp[i_224][0] = _126;
common/pixel.c:315:5: note: vec_stmt_relevant_p: stmt has vdefs.
common/pixel.c:315:5: note: mark relevant 4, live 0.
common/pixel.c:315:5: note: init: stmt relevant? _128 = _123 - _124;
common/pixel.c:315:5: note: init: stmt relevant? _129 = (short int) _128;
common/pixel.c:315:5: note: init: stmt relevant? tmp[i_224][4] = _129;
common/pixel.c:315:5: note: vec_stmt_relevant_p: stmt has vdefs.
common/pixel.c:315:5: note: mark relevant 4, live 0.
common/pixel.c:315:5: note: init: stmt relevant? _131 = (unsigned short) a1_89;
common/pixel.c:315:5: note: init: stmt relevant? _132 = (unsigned short) a5_113;
common/pixel.c:315:5: note: init: stmt relevant? _133 = _131 + _132;
common/pixel.c:315:5: note: init: stmt relevant? _134 = (short int) _133;
common/pixel.c:315:5: note: init: stmt relevant? tmp[i_224][1] = _134;
common/pixel.c:315:5: note: vec_stmt_relevant_p: stmt has vdefs.
common/pixel.c:315:5: note: mark relevant 4, live 0.
common/pixel.c:315:5: note: init: stmt relevant? _136 = _131 - _132;
common/pixel.c:315:5: note: init: stmt relevant? _137 = (short int) _136;
common/pixel.c:315:5: note: init: stmt relevant? tmp[i_224][5] = _137;
common/pixel.c:315:5: note: vec_stmt_relevant_p: stmt has vdefs.
common/pixel.c:315:5: note: mark relevant 4, live 0.
common/pixel.c:315:5: note: init: stmt relevant? _139 = (unsigned short) a2_88;
common/pixel.c:315:5: note: init: stmt relevant? _140 = (unsigned short) a6_112;
common/pixel.c:315:5: note: init: stmt relevant? _141 = _139 + _140;
common/pixel.c:315:5: note: init: stmt relevant? _142 = (short int) _141;
common/pixel.c:315:5: note: init: stmt relevant? tmp[i_224][2] = _142;
common/pixel.c:315:5: note: vec_stmt_relevant_p: stmt has vdefs.
common/pixel.c:315:5: note: mark relevant 4, live 0.
common/pixel.c:315:5: note: init: stmt relevant? _144 = _139 - _140;
common/pixel.c:315:5: note: init: stmt relevant? _145 = (short int) _144;
common/pixel.c:315:5: note: init: stmt relevant? tmp[i_224][6] = _145;
common/pixel.c:315:5: note: vec_stmt_relevant_p: stmt has vdefs.
common/pixel.c:315:5: note: mark relevant 4, live 0.
common/pixel.c:315:5: note: init: stmt relevant? _147 = (unsigned short) a3_90;
common/pixel.c:315:5: note: init: stmt relevant? _148 = (unsigned short) a7_114;
common/pixel.c:315:5: note: init: stmt relevant? _149 = _147 + _148;
common/pixel.c:315:5: note: init: stmt relevant? _150 = (short int) _149;
common/pixel.c:315:5: note: init: stmt relevant? tmp[i_224][3] = _150;
common/pixel.c:315:5: note: vec_stmt_relevant_p: stmt has vdefs.
common/pixel.c:315:5: note: mark relevant 4, live 0.
common/pixel.c:315:5: note: init: stmt relevant? _152 = _147 - _148;
common/pixel.c:315:5: note: init: stmt relevant? _153 = (short int) _152;
common/pixel.c:315:5: note: init: stmt relevant? tmp[i_224][7] = _153;
common/pixel.c:315:5: note: vec_stmt_relevant_p: stmt has vdefs.
common/pixel.c:315:5: note: mark relevant 4, live 0.
common/pixel.c:315:5: note: init: stmt relevant? i_155 = i_224 + 1;
common/pixel.c:315:5: note: init: stmt relevant? # DEBUG i => i_155
common/pixel.c:315:5: note: init: stmt relevant? # DEBUG i => i_155
common/pixel.c:315:5: note: init: stmt relevant? # DEBUG sum4 => sum4_122
common/pixel.c:315:5: note: init: stmt relevant? ivtmp_491 = ivtmp_488 - 1;
common/pixel.c:315:5: note: init: stmt relevant? if (ivtmp_491 != 0)
common/pixel.c:315:5: note: worklist: examine stmt: tmp[i_224][7] = _153;
common/pixel.c:315:5: note: vect_is_simple_use: operand _153
common/pixel.c:315:5: note: def_stmt: _153 = (short int) _152;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 4, live 0.
common/pixel.c:315:5: note: worklist: examine stmt: _153 = (short int) _152;
common/pixel.c:315:5: note: vect_is_simple_use: operand _152
common/pixel.c:315:5: note: def_stmt: _152 = _147 - _148;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 4, live 0.
common/pixel.c:315:5: note: worklist: examine stmt: _152 = _147 - _148;
common/pixel.c:315:5: note: vect_is_simple_use: operand _147
common/pixel.c:315:5: note: def_stmt: _147 = (unsigned short) a3_90;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 4, live 0.
common/pixel.c:315:5: note: vect_is_simple_use: operand _148
common/pixel.c:315:5: note: def_stmt: _148 = (unsigned short) a7_114;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 4, live 0.
common/pixel.c:315:5: note: worklist: examine stmt: _148 = (unsigned short) a7_114;
common/pixel.c:315:5: note: vect_is_simple_use: operand a7_114
common/pixel.c:315:5: note: def_stmt: a7_114 = t1_104 - t3_110;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 4, live 0.
common/pixel.c:315:5: note: worklist: examine stmt: a7_114 = t1_104 - t3_110;
common/pixel.c:315:5: note: vect_is_simple_use: operand t1_104
common/pixel.c:315:5: note: def_stmt: t1_104 = _100 - _102;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 4, live 0.
common/pixel.c:315:5: note: vect_is_simple_use: operand t3_110
common/pixel.c:315:5: note: def_stmt: t3_110 = _106 - _108;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 4, live 0.
common/pixel.c:315:5: note: worklist: examine stmt: t3_110 = _106 - _108;
common/pixel.c:315:5: note: vect_is_simple_use: operand _106
common/pixel.c:315:5: note: def_stmt: _106 = (int) _105;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 4, live 0.
common/pixel.c:315:5: note: vect_is_simple_use: operand _108
common/pixel.c:315:5: note: def_stmt: _108 = (int) _107;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 4, live 0.
common/pixel.c:315:5: note: worklist: examine stmt: _108 = (int) _107;
common/pixel.c:315:5: note: vect_is_simple_use: operand _107
common/pixel.c:315:5: note: def_stmt: _107 = tmp[i_224][7];
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 4, live 0.
common/pixel.c:315:5: note: worklist: examine stmt: _107 = tmp[i_224][7];
common/pixel.c:315:5: note: worklist: examine stmt: _106 = (int) _105;
common/pixel.c:315:5: note: vect_is_simple_use: operand _105
common/pixel.c:315:5: note: def_stmt: _105 = tmp[i_224][6];
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 4, live 0.
common/pixel.c:315:5: note: worklist: examine stmt: _105 = tmp[i_224][6];
common/pixel.c:315:5: note: worklist: examine stmt: t1_104 = _100 - _102;
common/pixel.c:315:5: note: vect_is_simple_use: operand _100
common/pixel.c:315:5: note: def_stmt: _100 = (int) _99;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 4, live 0.
common/pixel.c:315:5: note: vect_is_simple_use: operand _102
common/pixel.c:315:5: note: def_stmt: _102 = (int) _101;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 4, live 0.
common/pixel.c:315:5: note: worklist: examine stmt: _102 = (int) _101;
common/pixel.c:315:5: note: vect_is_simple_use: operand _101
common/pixel.c:315:5: note: def_stmt: _101 = tmp[i_224][5];
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 4, live 0.
common/pixel.c:315:5: note: worklist: examine stmt: _101 = tmp[i_224][5];
common/pixel.c:315:5: note: worklist: examine stmt: _100 = (int) _99;
common/pixel.c:315:5: note: vect_is_simple_use: operand _99
common/pixel.c:315:5: note: def_stmt: _99 = tmp[i_224][4];
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 4, live 0.
common/pixel.c:315:5: note: worklist: examine stmt: _99 = tmp[i_224][4];
common/pixel.c:315:5: note: worklist: examine stmt: _147 = (unsigned short) a3_90;
common/pixel.c:315:5: note: vect_is_simple_use: operand a3_90
common/pixel.c:315:5: note: def_stmt: a3_90 = t1_80 - t3_86;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 4, live 0.
common/pixel.c:315:5: note: worklist: examine stmt: a3_90 = t1_80 - t3_86;
common/pixel.c:315:5: note: vect_is_simple_use: operand t1_80
common/pixel.c:315:5: note: def_stmt: t1_80 = _76 - _78;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 4, live 0.
common/pixel.c:315:5: note: vect_is_simple_use: operand t3_86
common/pixel.c:315:5: note: def_stmt: t3_86 = _82 - _84;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 4, live 0.
common/pixel.c:315:5: note: worklist: examine stmt: t3_86 = _82 - _84;
common/pixel.c:315:5: note: vect_is_simple_use: operand _82
common/pixel.c:315:5: note: def_stmt: _82 = (int) _81;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 4, live 0.
common/pixel.c:315:5: note: vect_is_simple_use: operand _84
common/pixel.c:315:5: note: def_stmt: _84 = (int) _83;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 4, live 0.
common/pixel.c:315:5: note: worklist: examine stmt: _84 = (int) _83;
common/pixel.c:315:5: note: vect_is_simple_use: operand _83
common/pixel.c:315:5: note: def_stmt: _83 = tmp[i_224][3];
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 4, live 0.
common/pixel.c:315:5: note: worklist: examine stmt: _83 = tmp[i_224][3];
common/pixel.c:315:5: note: worklist: examine stmt: _82 = (int) _81;
common/pixel.c:315:5: note: vect_is_simple_use: operand _81
common/pixel.c:315:5: note: def_stmt: _81 = tmp[i_224][2];
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 4, live 0.
common/pixel.c:315:5: note: worklist: examine stmt: _81 = tmp[i_224][2];
common/pixel.c:315:5: note: worklist: examine stmt: t1_80 = _76 - _78;
common/pixel.c:315:5: note: vect_is_simple_use: operand _76
common/pixel.c:315:5: note: def_stmt: _76 = (int) _75;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 4, live 0.
common/pixel.c:315:5: note: vect_is_simple_use: operand _78
common/pixel.c:315:5: note: def_stmt: _78 = (int) _77;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 4, live 0.
common/pixel.c:315:5: note: worklist: examine stmt: _78 = (int) _77;
common/pixel.c:315:5: note: vect_is_simple_use: operand _77
common/pixel.c:315:5: note: def_stmt: _77 = tmp[i_224][1];
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 4, live 0.
common/pixel.c:315:5: note: worklist: examine stmt: _77 = tmp[i_224][1];
common/pixel.c:315:5: note: worklist: examine stmt: _76 = (int) _75;
common/pixel.c:315:5: note: vect_is_simple_use: operand _75
common/pixel.c:315:5: note: def_stmt: _75 = tmp[i_224][0];
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 4, live 0.
common/pixel.c:315:5: note: worklist: examine stmt: _75 = tmp[i_224][0];
common/pixel.c:315:5: note: worklist: examine stmt: tmp[i_224][3] = _150;
common/pixel.c:315:5: note: vect_is_simple_use: operand _150
common/pixel.c:315:5: note: def_stmt: _150 = (short int) _149;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 4, live 0.
common/pixel.c:315:5: note: worklist: examine stmt: _150 = (short int) _149;
common/pixel.c:315:5: note: vect_is_simple_use: operand _149
common/pixel.c:315:5: note: def_stmt: _149 = _147 + _148;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 4, live 0.
common/pixel.c:315:5: note: worklist: examine stmt: _149 = _147 + _148;
common/pixel.c:315:5: note: vect_is_simple_use: operand _147
common/pixel.c:315:5: note: def_stmt: _147 = (unsigned short) a3_90;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 4, live 0.
common/pixel.c:315:5: note: already marked relevant/live.
common/pixel.c:315:5: note: vect_is_simple_use: operand _148
common/pixel.c:315:5: note: def_stmt: _148 = (unsigned short) a7_114;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 4, live 0.
common/pixel.c:315:5: note: already marked relevant/live.
common/pixel.c:315:5: note: worklist: examine stmt: tmp[i_224][6] = _145;
common/pixel.c:315:5: note: vect_is_simple_use: operand _145
common/pixel.c:315:5: note: def_stmt: _145 = (short int) _144;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 4, live 0.
common/pixel.c:315:5: note: worklist: examine stmt: _145 = (short int) _144;
common/pixel.c:315:5: note: vect_is_simple_use: operand _144
common/pixel.c:315:5: note: def_stmt: _144 = _139 - _140;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 4, live 0.
common/pixel.c:315:5: note: worklist: examine stmt: _144 = _139 - _140;
common/pixel.c:315:5: note: vect_is_simple_use: operand _139
common/pixel.c:315:5: note: def_stmt: _139 = (unsigned short) a2_88;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 4, live 0.
common/pixel.c:315:5: note: vect_is_simple_use: operand _140
common/pixel.c:315:5: note: def_stmt: _140 = (unsigned short) a6_112;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 4, live 0.
common/pixel.c:315:5: note: worklist: examine stmt: _140 = (unsigned short) a6_112;
common/pixel.c:315:5: note: vect_is_simple_use: operand a6_112
common/pixel.c:315:5: note: def_stmt: a6_112 = t0_103 - t2_109;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 4, live 0.
common/pixel.c:315:5: note: worklist: examine stmt: a6_112 = t0_103 - t2_109;
common/pixel.c:315:5: note: vect_is_simple_use: operand t0_103
common/pixel.c:315:5: note: def_stmt: t0_103 = _100 + _102;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 4, live 0.
common/pixel.c:315:5: note: vect_is_simple_use: operand t2_109
common/pixel.c:315:5: note: def_stmt: t2_109 = _106 + _108;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 4, live 0.
common/pixel.c:315:5: note: worklist: examine stmt: t2_109 = _106 + _108;
common/pixel.c:315:5: note: vect_is_simple_use: operand _106
common/pixel.c:315:5: note: def_stmt: _106 = (int) _105;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 4, live 0.
common/pixel.c:315:5: note: already marked relevant/live.
common/pixel.c:315:5: note: vect_is_simple_use: operand _108
common/pixel.c:315:5: note: def_stmt: _108 = (int) _107;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 4, live 0.
common/pixel.c:315:5: note: already marked relevant/live.
common/pixel.c:315:5: note: worklist: examine stmt: t0_103 = _100 + _102;
common/pixel.c:315:5: note: vect_is_simple_use: operand _100
common/pixel.c:315:5: note: def_stmt: _100 = (int) _99;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 4, live 0.
common/pixel.c:315:5: note: already marked relevant/live.
common/pixel.c:315:5: note: vect_is_simple_use: operand _102
common/pixel.c:315:5: note: def_stmt: _102 = (int) _101;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 4, live 0.
common/pixel.c:315:5: note: already marked relevant/live.
common/pixel.c:315:5: note: worklist: examine stmt: _139 = (unsigned short) a2_88;
common/pixel.c:315:5: note: vect_is_simple_use: operand a2_88
common/pixel.c:315:5: note: def_stmt: a2_88 = t0_79 - t2_85;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 4, live 0.
common/pixel.c:315:5: note: worklist: examine stmt: a2_88 = t0_79 - t2_85;
common/pixel.c:315:5: note: vect_is_simple_use: operand t0_79
common/pixel.c:315:5: note: def_stmt: t0_79 = _76 + _78;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 4, live 0.
common/pixel.c:315:5: note: vect_is_simple_use: operand t2_85
common/pixel.c:315:5: note: def_stmt: t2_85 = _82 + _84;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 4, live 0.
common/pixel.c:315:5: note: worklist: examine stmt: t2_85 = _82 + _84;
common/pixel.c:315:5: note: vect_is_simple_use: operand _82
common/pixel.c:315:5: note: def_stmt: _82 = (int) _81;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 4, live 0.
common/pixel.c:315:5: note: already marked relevant/live.
common/pixel.c:315:5: note: vect_is_simple_use: operand _84
common/pixel.c:315:5: note: def_stmt: _84 = (int) _83;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 4, live 0.
common/pixel.c:315:5: note: already marked relevant/live.
common/pixel.c:315:5: note: worklist: examine stmt: t0_79 = _76 + _78;
common/pixel.c:315:5: note: vect_is_simple_use: operand _76
common/pixel.c:315:5: note: def_stmt: _76 = (int) _75;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 4, live 0.
common/pixel.c:315:5: note: already marked relevant/live.
common/pixel.c:315:5: note: vect_is_simple_use: operand _78
common/pixel.c:315:5: note: def_stmt: _78 = (int) _77;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 4, live 0.
common/pixel.c:315:5: note: already marked relevant/live.
common/pixel.c:315:5: note: worklist: examine stmt: tmp[i_224][2] = _142;
common/pixel.c:315:5: note: vect_is_simple_use: operand _142
common/pixel.c:315:5: note: def_stmt: _142 = (short int) _141;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 4, live 0.
common/pixel.c:315:5: note: worklist: examine stmt: _142 = (short int) _141;
common/pixel.c:315:5: note: vect_is_simple_use: operand _141
common/pixel.c:315:5: note: def_stmt: _141 = _139 + _140;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 4, live 0.
common/pixel.c:315:5: note: worklist: examine stmt: _141 = _139 + _140;
common/pixel.c:315:5: note: vect_is_simple_use: operand _139
common/pixel.c:315:5: note: def_stmt: _139 = (unsigned short) a2_88;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 4, live 0.
common/pixel.c:315:5: note: already marked relevant/live.
common/pixel.c:315:5: note: vect_is_simple_use: operand _140
common/pixel.c:315:5: note: def_stmt: _140 = (unsigned short) a6_112;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 4, live 0.
common/pixel.c:315:5: note: already marked relevant/live.
common/pixel.c:315:5: note: worklist: examine stmt: tmp[i_224][5] = _137;
common/pixel.c:315:5: note: vect_is_simple_use: operand _137
common/pixel.c:315:5: note: def_stmt: _137 = (short int) _136;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 4, live 0.
common/pixel.c:315:5: note: worklist: examine stmt: _137 = (short int) _136;
common/pixel.c:315:5: note: vect_is_simple_use: operand _136
common/pixel.c:315:5: note: def_stmt: _136 = _131 - _132;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 4, live 0.
common/pixel.c:315:5: note: worklist: examine stmt: _136 = _131 - _132;
common/pixel.c:315:5: note: vect_is_simple_use: operand _131
common/pixel.c:315:5: note: def_stmt: _131 = (unsigned short) a1_89;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 4, live 0.
common/pixel.c:315:5: note: vect_is_simple_use: operand _132
common/pixel.c:315:5: note: def_stmt: _132 = (unsigned short) a5_113;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 4, live 0.
common/pixel.c:315:5: note: worklist: examine stmt: _132 = (unsigned short) a5_113;
common/pixel.c:315:5: note: vect_is_simple_use: operand a5_113
common/pixel.c:315:5: note: def_stmt: a5_113 = t1_104 + t3_110;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 4, live 0.
common/pixel.c:315:5: note: worklist: examine stmt: a5_113 = t1_104 + t3_110;
common/pixel.c:315:5: note: vect_is_simple_use: operand t1_104
common/pixel.c:315:5: note: def_stmt: t1_104 = _100 - _102;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 4, live 0.
common/pixel.c:315:5: note: already marked relevant/live.
common/pixel.c:315:5: note: vect_is_simple_use: operand t3_110
common/pixel.c:315:5: note: def_stmt: t3_110 = _106 - _108;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 4, live 0.
common/pixel.c:315:5: note: already marked relevant/live.
common/pixel.c:315:5: note: worklist: examine stmt: _131 = (unsigned short) a1_89;
common/pixel.c:315:5: note: vect_is_simple_use: operand a1_89
common/pixel.c:315:5: note: def_stmt: a1_89 = t1_80 + t3_86;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 4, live 0.
common/pixel.c:315:5: note: worklist: examine stmt: a1_89 = t1_80 + t3_86;
common/pixel.c:315:5: note: vect_is_simple_use: operand t1_80
common/pixel.c:315:5: note: def_stmt: t1_80 = _76 - _78;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 4, live 0.
common/pixel.c:315:5: note: already marked relevant/live.
common/pixel.c:315:5: note: vect_is_simple_use: operand t3_86
common/pixel.c:315:5: note: def_stmt: t3_86 = _82 - _84;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 4, live 0.
common/pixel.c:315:5: note: already marked relevant/live.
common/pixel.c:315:5: note: worklist: examine stmt: tmp[i_224][1] = _134;
common/pixel.c:315:5: note: vect_is_simple_use: operand _134
common/pixel.c:315:5: note: def_stmt: _134 = (short int) _133;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 4, live 0.
common/pixel.c:315:5: note: worklist: examine stmt: _134 = (short int) _133;
common/pixel.c:315:5: note: vect_is_simple_use: operand _133
common/pixel.c:315:5: note: def_stmt: _133 = _131 + _132;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 4, live 0.
common/pixel.c:315:5: note: worklist: examine stmt: _133 = _131 + _132;
common/pixel.c:315:5: note: vect_is_simple_use: operand _131
common/pixel.c:315:5: note: def_stmt: _131 = (unsigned short) a1_89;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 4, live 0.
common/pixel.c:315:5: note: already marked relevant/live.
common/pixel.c:315:5: note: vect_is_simple_use: operand _132
common/pixel.c:315:5: note: def_stmt: _132 = (unsigned short) a5_113;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 4, live 0.
common/pixel.c:315:5: note: already marked relevant/live.
common/pixel.c:315:5: note: worklist: examine stmt: tmp[i_224][4] = _129;
common/pixel.c:315:5: note: vect_is_simple_use: operand _129
common/pixel.c:315:5: note: def_stmt: _129 = (short int) _128;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 4, live 0.
common/pixel.c:315:5: note: worklist: examine stmt: _129 = (short int) _128;
common/pixel.c:315:5: note: vect_is_simple_use: operand _128
common/pixel.c:315:5: note: def_stmt: _128 = _123 - _124;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 4, live 0.
common/pixel.c:315:5: note: worklist: examine stmt: _128 = _123 - _124;
common/pixel.c:315:5: note: vect_is_simple_use: operand _123
common/pixel.c:315:5: note: def_stmt: _123 = (unsigned short) a0_87;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 4, live 0.
common/pixel.c:315:5: note: vect_is_simple_use: operand _124
common/pixel.c:315:5: note: def_stmt: _124 = (unsigned short) a4_111;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 4, live 0.
common/pixel.c:315:5: note: worklist: examine stmt: _124 = (unsigned short) a4_111;
common/pixel.c:315:5: note: vect_is_simple_use: operand a4_111
common/pixel.c:315:5: note: def_stmt: a4_111 = t0_103 + t2_109;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 4, live 0.
common/pixel.c:315:5: note: worklist: examine stmt: a4_111 = t0_103 + t2_109;
common/pixel.c:315:5: note: vect_is_simple_use: operand t0_103
common/pixel.c:315:5: note: def_stmt: t0_103 = _100 + _102;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 4, live 0.
common/pixel.c:315:5: note: already marked relevant/live.
common/pixel.c:315:5: note: vect_is_simple_use: operand t2_109
common/pixel.c:315:5: note: def_stmt: t2_109 = _106 + _108;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 4, live 0.
common/pixel.c:315:5: note: already marked relevant/live.
common/pixel.c:315:5: note: worklist: examine stmt: _123 = (unsigned short) a0_87;
common/pixel.c:315:5: note: vect_is_simple_use: operand a0_87
common/pixel.c:315:5: note: def_stmt: a0_87 = t0_79 + t2_85;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 4, live 0.
common/pixel.c:315:5: note: worklist: examine stmt: a0_87 = t0_79 + t2_85;
common/pixel.c:315:5: note: vect_is_simple_use: operand t0_79
common/pixel.c:315:5: note: def_stmt: t0_79 = _76 + _78;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 4, live 0.
common/pixel.c:315:5: note: already marked relevant/live.
common/pixel.c:315:5: note: vect_is_simple_use: operand t2_85
common/pixel.c:315:5: note: def_stmt: t2_85 = _82 + _84;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 4, live 0.
common/pixel.c:315:5: note: already marked relevant/live.
common/pixel.c:315:5: note: worklist: examine stmt: tmp[i_224][0] = _126;
common/pixel.c:315:5: note: vect_is_simple_use: operand _126
common/pixel.c:315:5: note: def_stmt: _126 = (short int) _125;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 4, live 0.
common/pixel.c:315:5: note: worklist: examine stmt: _126 = (short int) _125;
common/pixel.c:315:5: note: vect_is_simple_use: operand _125
common/pixel.c:315:5: note: def_stmt: _125 = _123 + _124;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 4, live 0.
common/pixel.c:315:5: note: worklist: examine stmt: _125 = _123 + _124;
common/pixel.c:315:5: note: vect_is_simple_use: operand _123
common/pixel.c:315:5: note: def_stmt: _123 = (unsigned short) a0_87;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 4, live 0.
common/pixel.c:315:5: note: already marked relevant/live.
common/pixel.c:315:5: note: vect_is_simple_use: operand _124
common/pixel.c:315:5: note: def_stmt: _124 = (unsigned short) a4_111;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 4, live 0.
common/pixel.c:315:5: note: already marked relevant/live.
common/pixel.c:315:5: note: worklist: examine stmt: sum4_122 = _121 + sum4_98;
common/pixel.c:315:5: note: vect_is_simple_use: operand _121
common/pixel.c:315:5: note: def_stmt: _121 = _119 + _120;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 3, live 0.
common/pixel.c:315:5: note: vect_is_simple_use: operand sum4_98
common/pixel.c:315:5: note: def_stmt: sum4_98 = _97 + sum4_221;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 3, live 0.
common/pixel.c:315:5: note: worklist: examine stmt: sum4_98 = _97 + sum4_221;
common/pixel.c:315:5: note: vect_is_simple_use: operand _97
common/pixel.c:315:5: note: def_stmt: _97 = _95 + _96;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 3, live 0.
common/pixel.c:315:5: note: vect_is_simple_use: operand sum4_221
common/pixel.c:315:5: note: def_stmt: sum4_221 = PHI <0(5), sum4_122(7)>
common/pixel.c:315:5: note: type of def: 5.
common/pixel.c:315:5: note: mark relevant 3, live 0.
common/pixel.c:315:5: note: worklist: examine stmt: sum4_221 = PHI <0(5), sum4_122(7)>
common/pixel.c:315:5: note: vect_is_simple_use: operand 0
common/pixel.c:315:5: note: vect_is_simple_use: operand sum4_122
common/pixel.c:315:5: note: def_stmt: sum4_122 = _121 + sum4_98;
common/pixel.c:315:5: note: type of def: 5.
common/pixel.c:315:5: note: reduc-stmt defining reduc-phi in the same nest.
common/pixel.c:315:5: note: worklist: examine stmt: _97 = _95 + _96;
common/pixel.c:315:5: note: vect_is_simple_use: operand _95
common/pixel.c:315:5: note: def_stmt: _95 = _93 + _94;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 3, live 0.
common/pixel.c:315:5: note: vect_is_simple_use: operand _96
common/pixel.c:315:5: note: def_stmt: _96 = ABS_EXPR <a3_90>;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 3, live 0.
common/pixel.c:315:5: note: worklist: examine stmt: _96 = ABS_EXPR <a3_90>;
common/pixel.c:315:5: note: vect_is_simple_use: operand a3_90
common/pixel.c:315:5: note: def_stmt: a3_90 = t1_80 - t3_86;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 3, live 0.
common/pixel.c:315:5: note: already marked relevant/live.
common/pixel.c:315:5: note: worklist: examine stmt: _95 = _93 + _94;
common/pixel.c:315:5: note: vect_is_simple_use: operand _93
common/pixel.c:315:5: note: def_stmt: _93 = _91 + _92;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 3, live 0.
common/pixel.c:315:5: note: vect_is_simple_use: operand _94
common/pixel.c:315:5: note: def_stmt: _94 = ABS_EXPR <a2_88>;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 3, live 0.
common/pixel.c:315:5: note: worklist: examine stmt: _94 = ABS_EXPR <a2_88>;
common/pixel.c:315:5: note: vect_is_simple_use: operand a2_88
common/pixel.c:315:5: note: def_stmt: a2_88 = t0_79 - t2_85;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 3, live 0.
common/pixel.c:315:5: note: already marked relevant/live.
common/pixel.c:315:5: note: worklist: examine stmt: _93 = _91 + _92;
common/pixel.c:315:5: note: vect_is_simple_use: operand _91
common/pixel.c:315:5: note: def_stmt: _91 = ABS_EXPR <a0_87>;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 3, live 0.
common/pixel.c:315:5: note: vect_is_simple_use: operand _92
common/pixel.c:315:5: note: def_stmt: _92 = ABS_EXPR <a1_89>;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 3, live 0.
common/pixel.c:315:5: note: worklist: examine stmt: _92 = ABS_EXPR <a1_89>;
common/pixel.c:315:5: note: vect_is_simple_use: operand a1_89
common/pixel.c:315:5: note: def_stmt: a1_89 = t1_80 + t3_86;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 3, live 0.
common/pixel.c:315:5: note: already marked relevant/live.
common/pixel.c:315:5: note: worklist: examine stmt: _91 = ABS_EXPR <a0_87>;
common/pixel.c:315:5: note: vect_is_simple_use: operand a0_87
common/pixel.c:315:5: note: def_stmt: a0_87 = t0_79 + t2_85;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 3, live 0.
common/pixel.c:315:5: note: already marked relevant/live.
common/pixel.c:315:5: note: worklist: examine stmt: _121 = _119 + _120;
common/pixel.c:315:5: note: vect_is_simple_use: operand _119
common/pixel.c:315:5: note: def_stmt: _119 = _117 + _118;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 3, live 0.
common/pixel.c:315:5: note: vect_is_simple_use: operand _120
common/pixel.c:315:5: note: def_stmt: _120 = ABS_EXPR <a7_114>;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 3, live 0.
common/pixel.c:315:5: note: worklist: examine stmt: _120 = ABS_EXPR <a7_114>;
common/pixel.c:315:5: note: vect_is_simple_use: operand a7_114
common/pixel.c:315:5: note: def_stmt: a7_114 = t1_104 - t3_110;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 3, live 0.
common/pixel.c:315:5: note: already marked relevant/live.
common/pixel.c:315:5: note: worklist: examine stmt: _119 = _117 + _118;
common/pixel.c:315:5: note: vect_is_simple_use: operand _117
common/pixel.c:315:5: note: def_stmt: _117 = _115 + _116;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 3, live 0.
common/pixel.c:315:5: note: vect_is_simple_use: operand _118
common/pixel.c:315:5: note: def_stmt: _118 = ABS_EXPR <a6_112>;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 3, live 0.
common/pixel.c:315:5: note: worklist: examine stmt: _118 = ABS_EXPR <a6_112>;
common/pixel.c:315:5: note: vect_is_simple_use: operand a6_112
common/pixel.c:315:5: note: def_stmt: a6_112 = t0_103 - t2_109;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 3, live 0.
common/pixel.c:315:5: note: already marked relevant/live.
common/pixel.c:315:5: note: worklist: examine stmt: _117 = _115 + _116;
common/pixel.c:315:5: note: vect_is_simple_use: operand _115
common/pixel.c:315:5: note: def_stmt: _115 = ABS_EXPR <a4_111>;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 3, live 0.
common/pixel.c:315:5: note: vect_is_simple_use: operand _116
common/pixel.c:315:5: note: def_stmt: _116 = ABS_EXPR <a5_113>;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 3, live 0.
common/pixel.c:315:5: note: worklist: examine stmt: _116 = ABS_EXPR <a5_113>;
common/pixel.c:315:5: note: vect_is_simple_use: operand a5_113
common/pixel.c:315:5: note: def_stmt: a5_113 = t1_104 + t3_110;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 3, live 0.
common/pixel.c:315:5: note: already marked relevant/live.
common/pixel.c:315:5: note: worklist: examine stmt: _115 = ABS_EXPR <a4_111>;
common/pixel.c:315:5: note: vect_is_simple_use: operand a4_111
common/pixel.c:315:5: note: def_stmt: a4_111 = t0_103 + t2_109;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: mark relevant 3, live 0.
common/pixel.c:315:5: note: already marked relevant/live.
common/pixel.c:315:5: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _75 = tmp[i_224][0];
  stmt_b: _77 = tmp[i_224][1];
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 1)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _75 = tmp[i_224][0];
  stmt_b: _81 = tmp[i_224][2];
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _75 = tmp[i_224][0];
  stmt_b: _83 = tmp[i_224][3];
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _75 = tmp[i_224][0];
  stmt_b: _99 = tmp[i_224][4];
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 4)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _75 = tmp[i_224][0];
  stmt_b: _101 = tmp[i_224][5];
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 5)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _75 = tmp[i_224][0];
  stmt_b: _105 = tmp[i_224][6];
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 6)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _75 = tmp[i_224][0];
  stmt_b: _107 = tmp[i_224][7];
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _75 = tmp[i_224][0];
  stmt_b: tmp[i_224][0] = _126;
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 0)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_2)
  (chrec_b = {0, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _75 = tmp[i_224][0];
  stmt_b: tmp[i_224][4] = _129;
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 4)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _75 = tmp[i_224][0];
  stmt_b: tmp[i_224][1] = _134;
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 1)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _75 = tmp[i_224][0];
  stmt_b: tmp[i_224][5] = _137;
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 5)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _75 = tmp[i_224][0];
  stmt_b: tmp[i_224][2] = _142;
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _75 = tmp[i_224][0];
  stmt_b: tmp[i_224][6] = _145;
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 6)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _75 = tmp[i_224][0];
  stmt_b: tmp[i_224][3] = _150;
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _75 = tmp[i_224][0];
  stmt_b: tmp[i_224][7] = _153;
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _77 = tmp[i_224][1];
  stmt_b: _81 = tmp[i_224][2];
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _77 = tmp[i_224][1];
  stmt_b: _83 = tmp[i_224][3];
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _77 = tmp[i_224][1];
  stmt_b: _99 = tmp[i_224][4];
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 4)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _77 = tmp[i_224][1];
  stmt_b: _101 = tmp[i_224][5];
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 5)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _77 = tmp[i_224][1];
  stmt_b: _105 = tmp[i_224][6];
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 6)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _77 = tmp[i_224][1];
  stmt_b: _107 = tmp[i_224][7];
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _77 = tmp[i_224][1];
  stmt_b: tmp[i_224][0] = _126;
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 0)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _77 = tmp[i_224][1];
  stmt_b: tmp[i_224][4] = _129;
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 4)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _77 = tmp[i_224][1];
  stmt_b: tmp[i_224][1] = _134;
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_2)
  (chrec_b = {0, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _77 = tmp[i_224][1];
  stmt_b: tmp[i_224][5] = _137;
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 5)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _77 = tmp[i_224][1];
  stmt_b: tmp[i_224][2] = _142;
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _77 = tmp[i_224][1];
  stmt_b: tmp[i_224][6] = _145;
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 6)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _77 = tmp[i_224][1];
  stmt_b: tmp[i_224][3] = _150;
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _77 = tmp[i_224][1];
  stmt_b: tmp[i_224][7] = _153;
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _81 = tmp[i_224][2];
  stmt_b: _83 = tmp[i_224][3];
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _81 = tmp[i_224][2];
  stmt_b: _99 = tmp[i_224][4];
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 4)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _81 = tmp[i_224][2];
  stmt_b: _101 = tmp[i_224][5];
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 5)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _81 = tmp[i_224][2];
  stmt_b: _105 = tmp[i_224][6];
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 6)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _81 = tmp[i_224][2];
  stmt_b: _107 = tmp[i_224][7];
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _81 = tmp[i_224][2];
  stmt_b: tmp[i_224][0] = _126;
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 0)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _81 = tmp[i_224][2];
  stmt_b: tmp[i_224][4] = _129;
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 4)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _81 = tmp[i_224][2];
  stmt_b: tmp[i_224][1] = _134;
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 1)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _81 = tmp[i_224][2];
  stmt_b: tmp[i_224][5] = _137;
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 5)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _81 = tmp[i_224][2];
  stmt_b: tmp[i_224][2] = _142;
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_2)
  (chrec_b = {0, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _81 = tmp[i_224][2];
  stmt_b: tmp[i_224][6] = _145;
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 6)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _81 = tmp[i_224][2];
  stmt_b: tmp[i_224][3] = _150;
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _81 = tmp[i_224][2];
  stmt_b: tmp[i_224][7] = _153;
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _83 = tmp[i_224][3];
  stmt_b: _99 = tmp[i_224][4];
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 4)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _83 = tmp[i_224][3];
  stmt_b: _101 = tmp[i_224][5];
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 5)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _83 = tmp[i_224][3];
  stmt_b: _105 = tmp[i_224][6];
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 6)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _83 = tmp[i_224][3];
  stmt_b: _107 = tmp[i_224][7];
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _83 = tmp[i_224][3];
  stmt_b: tmp[i_224][0] = _126;
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 0)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _83 = tmp[i_224][3];
  stmt_b: tmp[i_224][4] = _129;
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 4)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _83 = tmp[i_224][3];
  stmt_b: tmp[i_224][1] = _134;
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 1)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _83 = tmp[i_224][3];
  stmt_b: tmp[i_224][5] = _137;
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 5)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _83 = tmp[i_224][3];
  stmt_b: tmp[i_224][2] = _142;
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _83 = tmp[i_224][3];
  stmt_b: tmp[i_224][6] = _145;
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 6)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _83 = tmp[i_224][3];
  stmt_b: tmp[i_224][3] = _150;
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_2)
  (chrec_b = {0, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _83 = tmp[i_224][3];
  stmt_b: tmp[i_224][7] = _153;
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _99 = tmp[i_224][4];
  stmt_b: _101 = tmp[i_224][5];
(analyze_overlapping_iterations 
  (chrec_a = 4)
  (chrec_b = 5)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _99 = tmp[i_224][4];
  stmt_b: _105 = tmp[i_224][6];
(analyze_overlapping_iterations 
  (chrec_a = 4)
  (chrec_b = 6)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _99 = tmp[i_224][4];
  stmt_b: _107 = tmp[i_224][7];
(analyze_overlapping_iterations 
  (chrec_a = 4)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _99 = tmp[i_224][4];
  stmt_b: tmp[i_224][0] = _126;
(analyze_overlapping_iterations 
  (chrec_a = 4)
  (chrec_b = 0)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _99 = tmp[i_224][4];
  stmt_b: tmp[i_224][4] = _129;
(analyze_overlapping_iterations 
  (chrec_a = 4)
  (chrec_b = 4)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_2)
  (chrec_b = {0, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _99 = tmp[i_224][4];
  stmt_b: tmp[i_224][1] = _134;
(analyze_overlapping_iterations 
  (chrec_a = 4)
  (chrec_b = 1)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _99 = tmp[i_224][4];
  stmt_b: tmp[i_224][5] = _137;
(analyze_overlapping_iterations 
  (chrec_a = 4)
  (chrec_b = 5)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _99 = tmp[i_224][4];
  stmt_b: tmp[i_224][2] = _142;
(analyze_overlapping_iterations 
  (chrec_a = 4)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _99 = tmp[i_224][4];
  stmt_b: tmp[i_224][6] = _145;
(analyze_overlapping_iterations 
  (chrec_a = 4)
  (chrec_b = 6)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _99 = tmp[i_224][4];
  stmt_b: tmp[i_224][3] = _150;
(analyze_overlapping_iterations 
  (chrec_a = 4)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _99 = tmp[i_224][4];
  stmt_b: tmp[i_224][7] = _153;
(analyze_overlapping_iterations 
  (chrec_a = 4)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _101 = tmp[i_224][5];
  stmt_b: _105 = tmp[i_224][6];
(analyze_overlapping_iterations 
  (chrec_a = 5)
  (chrec_b = 6)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _101 = tmp[i_224][5];
  stmt_b: _107 = tmp[i_224][7];
(analyze_overlapping_iterations 
  (chrec_a = 5)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _101 = tmp[i_224][5];
  stmt_b: tmp[i_224][0] = _126;
(analyze_overlapping_iterations 
  (chrec_a = 5)
  (chrec_b = 0)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _101 = tmp[i_224][5];
  stmt_b: tmp[i_224][4] = _129;
(analyze_overlapping_iterations 
  (chrec_a = 5)
  (chrec_b = 4)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _101 = tmp[i_224][5];
  stmt_b: tmp[i_224][1] = _134;
(analyze_overlapping_iterations 
  (chrec_a = 5)
  (chrec_b = 1)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _101 = tmp[i_224][5];
  stmt_b: tmp[i_224][5] = _137;
(analyze_overlapping_iterations 
  (chrec_a = 5)
  (chrec_b = 5)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_2)
  (chrec_b = {0, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _101 = tmp[i_224][5];
  stmt_b: tmp[i_224][2] = _142;
(analyze_overlapping_iterations 
  (chrec_a = 5)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _101 = tmp[i_224][5];
  stmt_b: tmp[i_224][6] = _145;
(analyze_overlapping_iterations 
  (chrec_a = 5)
  (chrec_b = 6)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _101 = tmp[i_224][5];
  stmt_b: tmp[i_224][3] = _150;
(analyze_overlapping_iterations 
  (chrec_a = 5)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _101 = tmp[i_224][5];
  stmt_b: tmp[i_224][7] = _153;
(analyze_overlapping_iterations 
  (chrec_a = 5)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _105 = tmp[i_224][6];
  stmt_b: _107 = tmp[i_224][7];
(analyze_overlapping_iterations 
  (chrec_a = 6)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _105 = tmp[i_224][6];
  stmt_b: tmp[i_224][0] = _126;
(analyze_overlapping_iterations 
  (chrec_a = 6)
  (chrec_b = 0)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _105 = tmp[i_224][6];
  stmt_b: tmp[i_224][4] = _129;
(analyze_overlapping_iterations 
  (chrec_a = 6)
  (chrec_b = 4)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _105 = tmp[i_224][6];
  stmt_b: tmp[i_224][1] = _134;
(analyze_overlapping_iterations 
  (chrec_a = 6)
  (chrec_b = 1)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _105 = tmp[i_224][6];
  stmt_b: tmp[i_224][5] = _137;
(analyze_overlapping_iterations 
  (chrec_a = 6)
  (chrec_b = 5)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _105 = tmp[i_224][6];
  stmt_b: tmp[i_224][2] = _142;
(analyze_overlapping_iterations 
  (chrec_a = 6)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _105 = tmp[i_224][6];
  stmt_b: tmp[i_224][6] = _145;
(analyze_overlapping_iterations 
  (chrec_a = 6)
  (chrec_b = 6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_2)
  (chrec_b = {0, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _105 = tmp[i_224][6];
  stmt_b: tmp[i_224][3] = _150;
(analyze_overlapping_iterations 
  (chrec_a = 6)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _105 = tmp[i_224][6];
  stmt_b: tmp[i_224][7] = _153;
(analyze_overlapping_iterations 
  (chrec_a = 6)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _107 = tmp[i_224][7];
  stmt_b: tmp[i_224][0] = _126;
(analyze_overlapping_iterations 
  (chrec_a = 7)
  (chrec_b = 0)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _107 = tmp[i_224][7];
  stmt_b: tmp[i_224][4] = _129;
(analyze_overlapping_iterations 
  (chrec_a = 7)
  (chrec_b = 4)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _107 = tmp[i_224][7];
  stmt_b: tmp[i_224][1] = _134;
(analyze_overlapping_iterations 
  (chrec_a = 7)
  (chrec_b = 1)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _107 = tmp[i_224][7];
  stmt_b: tmp[i_224][5] = _137;
(analyze_overlapping_iterations 
  (chrec_a = 7)
  (chrec_b = 5)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _107 = tmp[i_224][7];
  stmt_b: tmp[i_224][2] = _142;
(analyze_overlapping_iterations 
  (chrec_a = 7)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _107 = tmp[i_224][7];
  stmt_b: tmp[i_224][6] = _145;
(analyze_overlapping_iterations 
  (chrec_a = 7)
  (chrec_b = 6)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _107 = tmp[i_224][7];
  stmt_b: tmp[i_224][3] = _150;
(analyze_overlapping_iterations 
  (chrec_a = 7)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _107 = tmp[i_224][7];
  stmt_b: tmp[i_224][7] = _153;
(analyze_overlapping_iterations 
  (chrec_a = 7)
  (chrec_b = 7)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_2)
  (chrec_b = {0, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: tmp[i_224][0] = _126;
  stmt_b: tmp[i_224][4] = _129;
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 4)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[i_224][0] = _126;
  stmt_b: tmp[i_224][1] = _134;
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 1)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[i_224][0] = _126;
  stmt_b: tmp[i_224][5] = _137;
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 5)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[i_224][0] = _126;
  stmt_b: tmp[i_224][2] = _142;
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[i_224][0] = _126;
  stmt_b: tmp[i_224][6] = _145;
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 6)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[i_224][0] = _126;
  stmt_b: tmp[i_224][3] = _150;
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[i_224][0] = _126;
  stmt_b: tmp[i_224][7] = _153;
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[i_224][4] = _129;
  stmt_b: tmp[i_224][1] = _134;
(analyze_overlapping_iterations 
  (chrec_a = 4)
  (chrec_b = 1)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[i_224][4] = _129;
  stmt_b: tmp[i_224][5] = _137;
(analyze_overlapping_iterations 
  (chrec_a = 4)
  (chrec_b = 5)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[i_224][4] = _129;
  stmt_b: tmp[i_224][2] = _142;
(analyze_overlapping_iterations 
  (chrec_a = 4)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[i_224][4] = _129;
  stmt_b: tmp[i_224][6] = _145;
(analyze_overlapping_iterations 
  (chrec_a = 4)
  (chrec_b = 6)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[i_224][4] = _129;
  stmt_b: tmp[i_224][3] = _150;
(analyze_overlapping_iterations 
  (chrec_a = 4)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[i_224][4] = _129;
  stmt_b: tmp[i_224][7] = _153;
(analyze_overlapping_iterations 
  (chrec_a = 4)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[i_224][1] = _134;
  stmt_b: tmp[i_224][5] = _137;
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 5)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[i_224][1] = _134;
  stmt_b: tmp[i_224][2] = _142;
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[i_224][1] = _134;
  stmt_b: tmp[i_224][6] = _145;
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 6)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[i_224][1] = _134;
  stmt_b: tmp[i_224][3] = _150;
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[i_224][1] = _134;
  stmt_b: tmp[i_224][7] = _153;
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[i_224][5] = _137;
  stmt_b: tmp[i_224][2] = _142;
(analyze_overlapping_iterations 
  (chrec_a = 5)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[i_224][5] = _137;
  stmt_b: tmp[i_224][6] = _145;
(analyze_overlapping_iterations 
  (chrec_a = 5)
  (chrec_b = 6)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[i_224][5] = _137;
  stmt_b: tmp[i_224][3] = _150;
(analyze_overlapping_iterations 
  (chrec_a = 5)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[i_224][5] = _137;
  stmt_b: tmp[i_224][7] = _153;
(analyze_overlapping_iterations 
  (chrec_a = 5)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[i_224][2] = _142;
  stmt_b: tmp[i_224][6] = _145;
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 6)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[i_224][2] = _142;
  stmt_b: tmp[i_224][3] = _150;
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[i_224][2] = _142;
  stmt_b: tmp[i_224][7] = _153;
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[i_224][6] = _145;
  stmt_b: tmp[i_224][3] = _150;
(analyze_overlapping_iterations 
  (chrec_a = 6)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[i_224][6] = _145;
  stmt_b: tmp[i_224][7] = _153;
(analyze_overlapping_iterations 
  (chrec_a = 6)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[i_224][3] = _150;
  stmt_b: tmp[i_224][7] = _153;
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _75 = tmp[i_224][0];
  stmt_b: _75 = tmp[i_224][0];
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 0)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_2)
  (chrec_b = {0, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _77 = tmp[i_224][1];
  stmt_b: _77 = tmp[i_224][1];
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_2)
  (chrec_b = {0, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _81 = tmp[i_224][2];
  stmt_b: _81 = tmp[i_224][2];
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_2)
  (chrec_b = {0, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _83 = tmp[i_224][3];
  stmt_b: _83 = tmp[i_224][3];
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_2)
  (chrec_b = {0, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _99 = tmp[i_224][4];
  stmt_b: _99 = tmp[i_224][4];
(analyze_overlapping_iterations 
  (chrec_a = 4)
  (chrec_b = 4)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_2)
  (chrec_b = {0, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _101 = tmp[i_224][5];
  stmt_b: _101 = tmp[i_224][5];
(analyze_overlapping_iterations 
  (chrec_a = 5)
  (chrec_b = 5)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_2)
  (chrec_b = {0, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _105 = tmp[i_224][6];
  stmt_b: _105 = tmp[i_224][6];
(analyze_overlapping_iterations 
  (chrec_a = 6)
  (chrec_b = 6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_2)
  (chrec_b = {0, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _107 = tmp[i_224][7];
  stmt_b: _107 = tmp[i_224][7];
(analyze_overlapping_iterations 
  (chrec_a = 7)
  (chrec_b = 7)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_2)
  (chrec_b = {0, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: tmp[i_224][0] = _126;
  stmt_b: tmp[i_224][0] = _126;
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 0)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_2)
  (chrec_b = {0, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: tmp[i_224][4] = _129;
  stmt_b: tmp[i_224][4] = _129;
(analyze_overlapping_iterations 
  (chrec_a = 4)
  (chrec_b = 4)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_2)
  (chrec_b = {0, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: tmp[i_224][1] = _134;
  stmt_b: tmp[i_224][1] = _134;
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_2)
  (chrec_b = {0, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: tmp[i_224][5] = _137;
  stmt_b: tmp[i_224][5] = _137;
(analyze_overlapping_iterations 
  (chrec_a = 5)
  (chrec_b = 5)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_2)
  (chrec_b = {0, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: tmp[i_224][2] = _142;
  stmt_b: tmp[i_224][2] = _142;
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_2)
  (chrec_b = {0, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: tmp[i_224][6] = _145;
  stmt_b: tmp[i_224][6] = _145;
(analyze_overlapping_iterations 
  (chrec_a = 6)
  (chrec_b = 6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_2)
  (chrec_b = {0, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: tmp[i_224][3] = _150;
  stmt_b: tmp[i_224][3] = _150;
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_2)
  (chrec_b = {0, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: tmp[i_224][7] = _153;
  stmt_b: tmp[i_224][7] = _153;
(analyze_overlapping_iterations 
  (chrec_a = 7)
  (chrec_b = 7)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_2)
  (chrec_b = {0, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/pixel.c:315:5: note: dependence distance  = 0.
common/pixel.c:315:5: note: dependence distance == 0 between tmp[i_224][0] and tmp[i_224][0]
common/pixel.c:315:5: note: dependence distance  = 0.
common/pixel.c:315:5: note: dependence distance == 0 between tmp[i_224][1] and tmp[i_224][1]
common/pixel.c:315:5: note: dependence distance  = 0.
common/pixel.c:315:5: note: dependence distance == 0 between tmp[i_224][2] and tmp[i_224][2]
common/pixel.c:315:5: note: dependence distance  = 0.
common/pixel.c:315:5: note: dependence distance == 0 between tmp[i_224][3] and tmp[i_224][3]
common/pixel.c:315:5: note: dependence distance  = 0.
common/pixel.c:315:5: note: dependence distance == 0 between tmp[i_224][4] and tmp[i_224][4]
common/pixel.c:315:5: note: dependence distance  = 0.
common/pixel.c:315:5: note: dependence distance == 0 between tmp[i_224][5] and tmp[i_224][5]
common/pixel.c:315:5: note: dependence distance  = 0.
common/pixel.c:315:5: note: dependence distance == 0 between tmp[i_224][6] and tmp[i_224][6]
common/pixel.c:315:5: note: dependence distance  = 0.
common/pixel.c:315:5: note: dependence distance == 0 between tmp[i_224][7] and tmp[i_224][7]
common/pixel.c:315:5: note: === vect_determine_vectorization_factor ===
common/pixel.c:315:5: note: ==> examining phi: sum4_221 = PHI <0(5), sum4_122(7)>

common/pixel.c:315:5: note: get vectype for scalar type:  int
common/pixel.c:315:5: note: vectype: vector(4) int
common/pixel.c:315:5: note: nunits = 4
common/pixel.c:315:5: note: ==> examining phi: i_224 = PHI <0(5), i_155(7)>

common/pixel.c:315:5: note: ==> examining phi: .MEM_227 = PHI <.MEM_70(5), .MEM_154(7)>

common/pixel.c:315:5: note: ==> examining phi: ivtmp_488 = PHI <8(5), ivtmp_491(7)>

common/pixel.c:315:5: note: ==> examining statement: # DEBUG i => i_224

common/pixel.c:315:5: note: skip.
common/pixel.c:315:5: note: ==> examining statement: # DEBUG sum4 => sum4_221

common/pixel.c:315:5: note: skip.
common/pixel.c:315:5: note: ==> examining statement: _75 = tmp[i_224][0];

common/pixel.c:315:5: note: get vectype for scalar type:  short int
common/pixel.c:315:5: note: vectype: vector(8) short int
common/pixel.c:315:5: note: nunits = 8
common/pixel.c:315:5: note: ==> examining statement: _76 = (int) _75;

common/pixel.c:315:5: note: get vectype for scalar type:  int
common/pixel.c:315:5: note: vectype: vector(4) int
common/pixel.c:315:5: note: get vectype for scalar type:  short int
common/pixel.c:315:5: note: vectype: vector(8) short int
common/pixel.c:315:5: note: nunits = 8
common/pixel.c:315:5: note: ==> examining statement: _77 = tmp[i_224][1];

common/pixel.c:315:5: note: get vectype for scalar type:  short int
common/pixel.c:315:5: note: vectype: vector(8) short int
common/pixel.c:315:5: note: nunits = 8
common/pixel.c:315:5: note: ==> examining statement: _78 = (int) _77;

common/pixel.c:315:5: note: get vectype for scalar type:  int
common/pixel.c:315:5: note: vectype: vector(4) int
common/pixel.c:315:5: note: get vectype for scalar type:  short int
common/pixel.c:315:5: note: vectype: vector(8) short int
common/pixel.c:315:5: note: nunits = 8
common/pixel.c:315:5: note: ==> examining statement: t0_79 = _76 + _78;

common/pixel.c:315:5: note: get vectype for scalar type:  int
common/pixel.c:315:5: note: vectype: vector(4) int
common/pixel.c:315:5: note: get vectype for scalar type:  int
common/pixel.c:315:5: note: vectype: vector(4) int
common/pixel.c:315:5: note: nunits = 4
common/pixel.c:315:5: note: ==> examining statement: # DEBUG t0 => t0_79

common/pixel.c:315:5: note: skip.
common/pixel.c:315:5: note: ==> examining statement: t1_80 = _76 - _78;

common/pixel.c:315:5: note: get vectype for scalar type:  int
common/pixel.c:315:5: note: vectype: vector(4) int
common/pixel.c:315:5: note: get vectype for scalar type:  int
common/pixel.c:315:5: note: vectype: vector(4) int
common/pixel.c:315:5: note: nunits = 4
common/pixel.c:315:5: note: ==> examining statement: # DEBUG t1 => t1_80

common/pixel.c:315:5: note: skip.
common/pixel.c:315:5: note: ==> examining statement: _81 = tmp[i_224][2];

common/pixel.c:315:5: note: get vectype for scalar type:  short int
common/pixel.c:315:5: note: vectype: vector(8) short int
common/pixel.c:315:5: note: nunits = 8
common/pixel.c:315:5: note: ==> examining statement: _82 = (int) _81;

common/pixel.c:315:5: note: get vectype for scalar type:  int
common/pixel.c:315:5: note: vectype: vector(4) int
common/pixel.c:315:5: note: get vectype for scalar type:  short int
common/pixel.c:315:5: note: vectype: vector(8) short int
common/pixel.c:315:5: note: nunits = 8
common/pixel.c:315:5: note: ==> examining statement: _83 = tmp[i_224][3];

common/pixel.c:315:5: note: get vectype for scalar type:  short int
common/pixel.c:315:5: note: vectype: vector(8) short int
common/pixel.c:315:5: note: nunits = 8
common/pixel.c:315:5: note: ==> examining statement: _84 = (int) _83;

common/pixel.c:315:5: note: get vectype for scalar type:  int
common/pixel.c:315:5: note: vectype: vector(4) int
common/pixel.c:315:5: note: get vectype for scalar type:  short int
common/pixel.c:315:5: note: vectype: vector(8) short int
common/pixel.c:315:5: note: nunits = 8
common/pixel.c:315:5: note: ==> examining statement: t2_85 = _82 + _84;

common/pixel.c:315:5: note: get vectype for scalar type:  int
common/pixel.c:315:5: note: vectype: vector(4) int
common/pixel.c:315:5: note: get vectype for scalar type:  int
common/pixel.c:315:5: note: vectype: vector(4) int
common/pixel.c:315:5: note: nunits = 4
common/pixel.c:315:5: note: ==> examining statement: # DEBUG t2 => t2_85

common/pixel.c:315:5: note: skip.
common/pixel.c:315:5: note: ==> examining statement: t3_86 = _82 - _84;

common/pixel.c:315:5: note: get vectype for scalar type:  int
common/pixel.c:315:5: note: vectype: vector(4) int
common/pixel.c:315:5: note: get vectype for scalar type:  int
common/pixel.c:315:5: note: vectype: vector(4) int
common/pixel.c:315:5: note: nunits = 4
common/pixel.c:315:5: note: ==> examining statement: # DEBUG t3 => t3_86

common/pixel.c:315:5: note: skip.
common/pixel.c:315:5: note: ==> examining statement: a0_87 = t0_79 + t2_85;

common/pixel.c:315:5: note: get vectype for scalar type:  int
common/pixel.c:315:5: note: vectype: vector(4) int
common/pixel.c:315:5: note: get vectype for scalar type:  int
common/pixel.c:315:5: note: vectype: vector(4) int
common/pixel.c:315:5: note: nunits = 4
common/pixel.c:315:5: note: ==> examining statement: # DEBUG a0 => a0_87

common/pixel.c:315:5: note: skip.
common/pixel.c:315:5: note: ==> examining statement: a2_88 = t0_79 - t2_85;

common/pixel.c:315:5: note: get vectype for scalar type:  int
common/pixel.c:315:5: note: vectype: vector(4) int
common/pixel.c:315:5: note: get vectype for scalar type:  int
common/pixel.c:315:5: note: vectype: vector(4) int
common/pixel.c:315:5: note: nunits = 4
common/pixel.c:315:5: note: ==> examining statement: # DEBUG a2 => a2_88

common/pixel.c:315:5: note: skip.
common/pixel.c:315:5: note: ==> examining statement: a1_89 = t1_80 + t3_86;

common/pixel.c:315:5: note: get vectype for scalar type:  int
common/pixel.c:315:5: note: vectype: vector(4) int
common/pixel.c:315:5: note: get vectype for scalar type:  int
common/pixel.c:315:5: note: vectype: vector(4) int
common/pixel.c:315:5: note: nunits = 4
common/pixel.c:315:5: note: ==> examining statement: # DEBUG a1 => a1_89

common/pixel.c:315:5: note: skip.
common/pixel.c:315:5: note: ==> examining statement: a3_90 = t1_80 - t3_86;

common/pixel.c:315:5: note: get vectype for scalar type:  int
common/pixel.c:315:5: note: vectype: vector(4) int
common/pixel.c:315:5: note: get vectype for scalar type:  int
common/pixel.c:315:5: note: vectype: vector(4) int
common/pixel.c:315:5: note: nunits = 4
common/pixel.c:315:5: note: ==> examining statement: # DEBUG a3 => a3_90

common/pixel.c:315:5: note: skip.
common/pixel.c:315:5: note: ==> examining statement: _91 = ABS_EXPR <a0_87>;

common/pixel.c:315:5: note: get vectype for scalar type:  int
common/pixel.c:315:5: note: vectype: vector(4) int
common/pixel.c:315:5: note: get vectype for scalar type:  int
common/pixel.c:315:5: note: vectype: vector(4) int
common/pixel.c:315:5: note: nunits = 4
common/pixel.c:315:5: note: ==> examining statement: _92 = ABS_EXPR <a1_89>;

common/pixel.c:315:5: note: get vectype for scalar type:  int
common/pixel.c:315:5: note: vectype: vector(4) int
common/pixel.c:315:5: note: get vectype for scalar type:  int
common/pixel.c:315:5: note: vectype: vector(4) int
common/pixel.c:315:5: note: nunits = 4
common/pixel.c:315:5: note: ==> examining statement: _93 = _91 + _92;

common/pixel.c:315:5: note: get vectype for scalar type:  int
common/pixel.c:315:5: note: vectype: vector(4) int
common/pixel.c:315:5: note: get vectype for scalar type:  int
common/pixel.c:315:5: note: vectype: vector(4) int
common/pixel.c:315:5: note: nunits = 4
common/pixel.c:315:5: note: ==> examining statement: _94 = ABS_EXPR <a2_88>;

common/pixel.c:315:5: note: get vectype for scalar type:  int
common/pixel.c:315:5: note: vectype: vector(4) int
common/pixel.c:315:5: note: get vectype for scalar type:  int
common/pixel.c:315:5: note: vectype: vector(4) int
common/pixel.c:315:5: note: nunits = 4
common/pixel.c:315:5: note: ==> examining statement: _95 = _93 + _94;

common/pixel.c:315:5: note: get vectype for scalar type:  int
common/pixel.c:315:5: note: vectype: vector(4) int
common/pixel.c:315:5: note: get vectype for scalar type:  int
common/pixel.c:315:5: note: vectype: vector(4) int
common/pixel.c:315:5: note: nunits = 4
common/pixel.c:315:5: note: ==> examining statement: _96 = ABS_EXPR <a3_90>;

common/pixel.c:315:5: note: get vectype for scalar type:  int
common/pixel.c:315:5: note: vectype: vector(4) int
common/pixel.c:315:5: note: get vectype for scalar type:  int
common/pixel.c:315:5: note: vectype: vector(4) int
common/pixel.c:315:5: note: nunits = 4
common/pixel.c:315:5: note: ==> examining statement: _97 = _95 + _96;

common/pixel.c:315:5: note: get vectype for scalar type:  int
common/pixel.c:315:5: note: vectype: vector(4) int
common/pixel.c:315:5: note: get vectype for scalar type:  int
common/pixel.c:315:5: note: vectype: vector(4) int
common/pixel.c:315:5: note: nunits = 4
common/pixel.c:315:5: note: ==> examining statement: sum4_98 = _97 + sum4_221;

common/pixel.c:315:5: note: get vectype for scalar type:  int
common/pixel.c:315:5: note: vectype: vector(4) int
common/pixel.c:315:5: note: get vectype for scalar type:  int
common/pixel.c:315:5: note: vectype: vector(4) int
common/pixel.c:315:5: note: nunits = 4
common/pixel.c:315:5: note: ==> examining statement: # DEBUG sum4 => sum4_98

common/pixel.c:315:5: note: skip.
common/pixel.c:315:5: note: ==> examining statement: _99 = tmp[i_224][4];

common/pixel.c:315:5: note: get vectype for scalar type:  short int
common/pixel.c:315:5: note: vectype: vector(8) short int
common/pixel.c:315:5: note: nunits = 8
common/pixel.c:315:5: note: ==> examining statement: _100 = (int) _99;

common/pixel.c:315:5: note: get vectype for scalar type:  int
common/pixel.c:315:5: note: vectype: vector(4) int
common/pixel.c:315:5: note: get vectype for scalar type:  short int
common/pixel.c:315:5: note: vectype: vector(8) short int
common/pixel.c:315:5: note: nunits = 8
common/pixel.c:315:5: note: ==> examining statement: _101 = tmp[i_224][5];

common/pixel.c:315:5: note: get vectype for scalar type:  short int
common/pixel.c:315:5: note: vectype: vector(8) short int
common/pixel.c:315:5: note: nunits = 8
common/pixel.c:315:5: note: ==> examining statement: _102 = (int) _101;

common/pixel.c:315:5: note: get vectype for scalar type:  int
common/pixel.c:315:5: note: vectype: vector(4) int
common/pixel.c:315:5: note: get vectype for scalar type:  short int
common/pixel.c:315:5: note: vectype: vector(8) short int
common/pixel.c:315:5: note: nunits = 8
common/pixel.c:315:5: note: ==> examining statement: t0_103 = _100 + _102;

common/pixel.c:315:5: note: get vectype for scalar type:  int
common/pixel.c:315:5: note: vectype: vector(4) int
common/pixel.c:315:5: note: get vectype for scalar type:  int
common/pixel.c:315:5: note: vectype: vector(4) int
common/pixel.c:315:5: note: nunits = 4
common/pixel.c:315:5: note: ==> examining statement: # DEBUG t0 => t0_103

common/pixel.c:315:5: note: skip.
common/pixel.c:315:5: note: ==> examining statement: t1_104 = _100 - _102;

common/pixel.c:315:5: note: get vectype for scalar type:  int
common/pixel.c:315:5: note: vectype: vector(4) int
common/pixel.c:315:5: note: get vectype for scalar type:  int
common/pixel.c:315:5: note: vectype: vector(4) int
common/pixel.c:315:5: note: nunits = 4
common/pixel.c:315:5: note: ==> examining statement: # DEBUG t1 => t1_104

common/pixel.c:315:5: note: skip.
common/pixel.c:315:5: note: ==> examining statement: _105 = tmp[i_224][6];

common/pixel.c:315:5: note: get vectype for scalar type:  short int
common/pixel.c:315:5: note: vectype: vector(8) short int
common/pixel.c:315:5: note: nunits = 8
common/pixel.c:315:5: note: ==> examining statement: _106 = (int) _105;

common/pixel.c:315:5: note: get vectype for scalar type:  int
common/pixel.c:315:5: note: vectype: vector(4) int
common/pixel.c:315:5: note: get vectype for scalar type:  short int
common/pixel.c:315:5: note: vectype: vector(8) short int
common/pixel.c:315:5: note: nunits = 8
common/pixel.c:315:5: note: ==> examining statement: _107 = tmp[i_224][7];

common/pixel.c:315:5: note: get vectype for scalar type:  short int
common/pixel.c:315:5: note: vectype: vector(8) short int
common/pixel.c:315:5: note: nunits = 8
common/pixel.c:315:5: note: ==> examining statement: _108 = (int) _107;

common/pixel.c:315:5: note: get vectype for scalar type:  int
common/pixel.c:315:5: note: vectype: vector(4) int
common/pixel.c:315:5: note: get vectype for scalar type:  short int
common/pixel.c:315:5: note: vectype: vector(8) short int
common/pixel.c:315:5: note: nunits = 8
common/pixel.c:315:5: note: ==> examining statement: t2_109 = _106 + _108;

common/pixel.c:315:5: note: get vectype for scalar type:  int
common/pixel.c:315:5: note: vectype: vector(4) int
common/pixel.c:315:5: note: get vectype for scalar type:  int
common/pixel.c:315:5: note: vectype: vector(4) int
common/pixel.c:315:5: note: nunits = 4
common/pixel.c:315:5: note: ==> examining statement: # DEBUG t2 => t2_109

common/pixel.c:315:5: note: skip.
common/pixel.c:315:5: note: ==> examining statement: t3_110 = _106 - _108;

common/pixel.c:315:5: note: get vectype for scalar type:  int
common/pixel.c:315:5: note: vectype: vector(4) int
common/pixel.c:315:5: note: get vectype for scalar type:  int
common/pixel.c:315:5: note: vectype: vector(4) int
common/pixel.c:315:5: note: nunits = 4
common/pixel.c:315:5: note: ==> examining statement: # DEBUG t3 => t3_110

common/pixel.c:315:5: note: skip.
common/pixel.c:315:5: note: ==> examining statement: a4_111 = t0_103 + t2_109;

common/pixel.c:315:5: note: get vectype for scalar type:  int
common/pixel.c:315:5: note: vectype: vector(4) int
common/pixel.c:315:5: note: get vectype for scalar type:  int
common/pixel.c:315:5: note: vectype: vector(4) int
common/pixel.c:315:5: note: nunits = 4
common/pixel.c:315:5: note: ==> examining statement: # DEBUG a4 => a4_111

common/pixel.c:315:5: note: skip.
common/pixel.c:315:5: note: ==> examining statement: a6_112 = t0_103 - t2_109;

common/pixel.c:315:5: note: get vectype for scalar type:  int
common/pixel.c:315:5: note: vectype: vector(4) int
common/pixel.c:315:5: note: get vectype for scalar type:  int
common/pixel.c:315:5: note: vectype: vector(4) int
common/pixel.c:315:5: note: nunits = 4
common/pixel.c:315:5: note: ==> examining statement: # DEBUG a6 => a6_112

common/pixel.c:315:5: note: skip.
common/pixel.c:315:5: note: ==> examining statement: a5_113 = t1_104 + t3_110;

common/pixel.c:315:5: note: get vectype for scalar type:  int
common/pixel.c:315:5: note: vectype: vector(4) int
common/pixel.c:315:5: note: get vectype for scalar type:  int
common/pixel.c:315:5: note: vectype: vector(4) int
common/pixel.c:315:5: note: nunits = 4
common/pixel.c:315:5: note: ==> examining statement: # DEBUG a5 => a5_113

common/pixel.c:315:5: note: skip.
common/pixel.c:315:5: note: ==> examining statement: a7_114 = t1_104 - t3_110;

common/pixel.c:315:5: note: get vectype for scalar type:  int
common/pixel.c:315:5: note: vectype: vector(4) int
common/pixel.c:315:5: note: get vectype for scalar type:  int
common/pixel.c:315:5: note: vectype: vector(4) int
common/pixel.c:315:5: note: nunits = 4
common/pixel.c:315:5: note: ==> examining statement: # DEBUG a7 => a7_114

common/pixel.c:315:5: note: skip.
common/pixel.c:315:5: note: ==> examining statement: _115 = ABS_EXPR <a4_111>;

common/pixel.c:315:5: note: get vectype for scalar type:  int
common/pixel.c:315:5: note: vectype: vector(4) int
common/pixel.c:315:5: note: get vectype for scalar type:  int
common/pixel.c:315:5: note: vectype: vector(4) int
common/pixel.c:315:5: note: nunits = 4
common/pixel.c:315:5: note: ==> examining statement: _116 = ABS_EXPR <a5_113>;

common/pixel.c:315:5: note: get vectype for scalar type:  int
common/pixel.c:315:5: note: vectype: vector(4) int
common/pixel.c:315:5: note: get vectype for scalar type:  int
common/pixel.c:315:5: note: vectype: vector(4) int
common/pixel.c:315:5: note: nunits = 4
common/pixel.c:315:5: note: ==> examining statement: _117 = _115 + _116;

common/pixel.c:315:5: note: get vectype for scalar type:  int
common/pixel.c:315:5: note: vectype: vector(4) int
common/pixel.c:315:5: note: get vectype for scalar type:  int
common/pixel.c:315:5: note: vectype: vector(4) int
common/pixel.c:315:5: note: nunits = 4
common/pixel.c:315:5: note: ==> examining statement: _118 = ABS_EXPR <a6_112>;

common/pixel.c:315:5: note: get vectype for scalar type:  int
common/pixel.c:315:5: note: vectype: vector(4) int
common/pixel.c:315:5: note: get vectype for scalar type:  int
common/pixel.c:315:5: note: vectype: vector(4) int
common/pixel.c:315:5: note: nunits = 4
common/pixel.c:315:5: note: ==> examining statement: _119 = _117 + _118;

common/pixel.c:315:5: note: get vectype for scalar type:  int
common/pixel.c:315:5: note: vectype: vector(4) int
common/pixel.c:315:5: note: get vectype for scalar type:  int
common/pixel.c:315:5: note: vectype: vector(4) int
common/pixel.c:315:5: note: nunits = 4
common/pixel.c:315:5: note: ==> examining statement: _120 = ABS_EXPR <a7_114>;

common/pixel.c:315:5: note: get vectype for scalar type:  int
common/pixel.c:315:5: note: vectype: vector(4) int
common/pixel.c:315:5: note: get vectype for scalar type:  int
common/pixel.c:315:5: note: vectype: vector(4) int
common/pixel.c:315:5: note: nunits = 4
common/pixel.c:315:5: note: ==> examining statement: _121 = _119 + _120;

common/pixel.c:315:5: note: get vectype for scalar type:  int
common/pixel.c:315:5: note: vectype: vector(4) int
common/pixel.c:315:5: note: get vectype for scalar type:  int
common/pixel.c:315:5: note: vectype: vector(4) int
common/pixel.c:315:5: note: nunits = 4
common/pixel.c:315:5: note: ==> examining statement: sum4_122 = _121 + sum4_98;

common/pixel.c:315:5: note: get vectype for scalar type:  int
common/pixel.c:315:5: note: vectype: vector(4) int
common/pixel.c:315:5: note: get vectype for scalar type:  int
common/pixel.c:315:5: note: vectype: vector(4) int
common/pixel.c:315:5: note: nunits = 4
common/pixel.c:315:5: note: ==> examining statement: # DEBUG sum4 => sum4_122

common/pixel.c:315:5: note: skip.
common/pixel.c:315:5: note: ==> examining statement: _123 = (unsigned short) a0_87;

common/pixel.c:315:5: note: get vectype for scalar type:  unsigned short
common/pixel.c:315:5: note: vectype: vector(8) unsigned short
common/pixel.c:315:5: note: get vectype for scalar type:  unsigned short
common/pixel.c:315:5: note: vectype: vector(8) unsigned short
common/pixel.c:315:5: note: nunits = 8
common/pixel.c:315:5: note: ==> examining statement: _124 = (unsigned short) a4_111;

common/pixel.c:315:5: note: get vectype for scalar type:  unsigned short
common/pixel.c:315:5: note: vectype: vector(8) unsigned short
common/pixel.c:315:5: note: get vectype for scalar type:  unsigned short
common/pixel.c:315:5: note: vectype: vector(8) unsigned short
common/pixel.c:315:5: note: nunits = 8
common/pixel.c:315:5: note: ==> examining statement: _125 = _123 + _124;

common/pixel.c:315:5: note: get vectype for scalar type:  unsigned short
common/pixel.c:315:5: note: vectype: vector(8) unsigned short
common/pixel.c:315:5: note: get vectype for scalar type:  unsigned short
common/pixel.c:315:5: note: vectype: vector(8) unsigned short
common/pixel.c:315:5: note: nunits = 8
common/pixel.c:315:5: note: ==> examining statement: _126 = (short int) _125;

common/pixel.c:315:5: note: get vectype for scalar type:  short int
common/pixel.c:315:5: note: vectype: vector(8) short int
common/pixel.c:315:5: note: get vectype for scalar type:  short int
common/pixel.c:315:5: note: vectype: vector(8) short int
common/pixel.c:315:5: note: nunits = 8
common/pixel.c:315:5: note: ==> examining statement: tmp[i_224][0] = _126;

common/pixel.c:315:5: note: get vectype for scalar type:  int16_t
common/pixel.c:315:5: note: vectype: vector(8) short int
common/pixel.c:315:5: note: nunits = 8
common/pixel.c:315:5: note: ==> examining statement: _128 = _123 - _124;

common/pixel.c:315:5: note: get vectype for scalar type:  unsigned short
common/pixel.c:315:5: note: vectype: vector(8) unsigned short
common/pixel.c:315:5: note: get vectype for scalar type:  unsigned short
common/pixel.c:315:5: note: vectype: vector(8) unsigned short
common/pixel.c:315:5: note: nunits = 8
common/pixel.c:315:5: note: ==> examining statement: _129 = (short int) _128;

common/pixel.c:315:5: note: get vectype for scalar type:  short int
common/pixel.c:315:5: note: vectype: vector(8) short int
common/pixel.c:315:5: note: get vectype for scalar type:  short int
common/pixel.c:315:5: note: vectype: vector(8) short int
common/pixel.c:315:5: note: nunits = 8
common/pixel.c:315:5: note: ==> examining statement: tmp[i_224][4] = _129;

common/pixel.c:315:5: note: get vectype for scalar type:  int16_t
common/pixel.c:315:5: note: vectype: vector(8) short int
common/pixel.c:315:5: note: nunits = 8
common/pixel.c:315:5: note: ==> examining statement: _131 = (unsigned short) a1_89;

common/pixel.c:315:5: note: get vectype for scalar type:  unsigned short
common/pixel.c:315:5: note: vectype: vector(8) unsigned short
common/pixel.c:315:5: note: get vectype for scalar type:  unsigned short
common/pixel.c:315:5: note: vectype: vector(8) unsigned short
common/pixel.c:315:5: note: nunits = 8
common/pixel.c:315:5: note: ==> examining statement: _132 = (unsigned short) a5_113;

common/pixel.c:315:5: note: get vectype for scalar type:  unsigned short
common/pixel.c:315:5: note: vectype: vector(8) unsigned short
common/pixel.c:315:5: note: get vectype for scalar type:  unsigned short
common/pixel.c:315:5: note: vectype: vector(8) unsigned short
common/pixel.c:315:5: note: nunits = 8
common/pixel.c:315:5: note: ==> examining statement: _133 = _131 + _132;

common/pixel.c:315:5: note: get vectype for scalar type:  unsigned short
common/pixel.c:315:5: note: vectype: vector(8) unsigned short
common/pixel.c:315:5: note: get vectype for scalar type:  unsigned short
common/pixel.c:315:5: note: vectype: vector(8) unsigned short
common/pixel.c:315:5: note: nunits = 8
common/pixel.c:315:5: note: ==> examining statement: _134 = (short int) _133;

common/pixel.c:315:5: note: get vectype for scalar type:  short int
common/pixel.c:315:5: note: vectype: vector(8) short int
common/pixel.c:315:5: note: get vectype for scalar type:  short int
common/pixel.c:315:5: note: vectype: vector(8) short int
common/pixel.c:315:5: note: nunits = 8
common/pixel.c:315:5: note: ==> examining statement: tmp[i_224][1] = _134;

common/pixel.c:315:5: note: get vectype for scalar type:  int16_t
common/pixel.c:315:5: note: vectype: vector(8) short int
common/pixel.c:315:5: note: nunits = 8
common/pixel.c:315:5: note: ==> examining statement: _136 = _131 - _132;

common/pixel.c:315:5: note: get vectype for scalar type:  unsigned short
common/pixel.c:315:5: note: vectype: vector(8) unsigned short
common/pixel.c:315:5: note: get vectype for scalar type:  unsigned short
common/pixel.c:315:5: note: vectype: vector(8) unsigned short
common/pixel.c:315:5: note: nunits = 8
common/pixel.c:315:5: note: ==> examining statement: _137 = (short int) _136;

common/pixel.c:315:5: note: get vectype for scalar type:  short int
common/pixel.c:315:5: note: vectype: vector(8) short int
common/pixel.c:315:5: note: get vectype for scalar type:  short int
common/pixel.c:315:5: note: vectype: vector(8) short int
common/pixel.c:315:5: note: nunits = 8
common/pixel.c:315:5: note: ==> examining statement: tmp[i_224][5] = _137;

common/pixel.c:315:5: note: get vectype for scalar type:  int16_t
common/pixel.c:315:5: note: vectype: vector(8) short int
common/pixel.c:315:5: note: nunits = 8
common/pixel.c:315:5: note: ==> examining statement: _139 = (unsigned short) a2_88;

common/pixel.c:315:5: note: get vectype for scalar type:  unsigned short
common/pixel.c:315:5: note: vectype: vector(8) unsigned short
common/pixel.c:315:5: note: get vectype for scalar type:  unsigned short
common/pixel.c:315:5: note: vectype: vector(8) unsigned short
common/pixel.c:315:5: note: nunits = 8
common/pixel.c:315:5: note: ==> examining statement: _140 = (unsigned short) a6_112;

common/pixel.c:315:5: note: get vectype for scalar type:  unsigned short
common/pixel.c:315:5: note: vectype: vector(8) unsigned short
common/pixel.c:315:5: note: get vectype for scalar type:  unsigned short
common/pixel.c:315:5: note: vectype: vector(8) unsigned short
common/pixel.c:315:5: note: nunits = 8
common/pixel.c:315:5: note: ==> examining statement: _141 = _139 + _140;

common/pixel.c:315:5: note: get vectype for scalar type:  unsigned short
common/pixel.c:315:5: note: vectype: vector(8) unsigned short
common/pixel.c:315:5: note: get vectype for scalar type:  unsigned short
common/pixel.c:315:5: note: vectype: vector(8) unsigned short
common/pixel.c:315:5: note: nunits = 8
common/pixel.c:315:5: note: ==> examining statement: _142 = (short int) _141;

common/pixel.c:315:5: note: get vectype for scalar type:  short int
common/pixel.c:315:5: note: vectype: vector(8) short int
common/pixel.c:315:5: note: get vectype for scalar type:  short int
common/pixel.c:315:5: note: vectype: vector(8) short int
common/pixel.c:315:5: note: nunits = 8
common/pixel.c:315:5: note: ==> examining statement: tmp[i_224][2] = _142;

common/pixel.c:315:5: note: get vectype for scalar type:  int16_t
common/pixel.c:315:5: note: vectype: vector(8) short int
common/pixel.c:315:5: note: nunits = 8
common/pixel.c:315:5: note: ==> examining statement: _144 = _139 - _140;

common/pixel.c:315:5: note: get vectype for scalar type:  unsigned short
common/pixel.c:315:5: note: vectype: vector(8) unsigned short
common/pixel.c:315:5: note: get vectype for scalar type:  unsigned short
common/pixel.c:315:5: note: vectype: vector(8) unsigned short
common/pixel.c:315:5: note: nunits = 8
common/pixel.c:315:5: note: ==> examining statement: _145 = (short int) _144;

common/pixel.c:315:5: note: get vectype for scalar type:  short int
common/pixel.c:315:5: note: vectype: vector(8) short int
common/pixel.c:315:5: note: get vectype for scalar type:  short int
common/pixel.c:315:5: note: vectype: vector(8) short int
common/pixel.c:315:5: note: nunits = 8
common/pixel.c:315:5: note: ==> examining statement: tmp[i_224][6] = _145;

common/pixel.c:315:5: note: get vectype for scalar type:  int16_t
common/pixel.c:315:5: note: vectype: vector(8) short int
common/pixel.c:315:5: note: nunits = 8
common/pixel.c:315:5: note: ==> examining statement: _147 = (unsigned short) a3_90;

common/pixel.c:315:5: note: get vectype for scalar type:  unsigned short
common/pixel.c:315:5: note: vectype: vector(8) unsigned short
common/pixel.c:315:5: note: get vectype for scalar type:  unsigned short
common/pixel.c:315:5: note: vectype: vector(8) unsigned short
common/pixel.c:315:5: note: nunits = 8
common/pixel.c:315:5: note: ==> examining statement: _148 = (unsigned short) a7_114;

common/pixel.c:315:5: note: get vectype for scalar type:  unsigned short
common/pixel.c:315:5: note: vectype: vector(8) unsigned short
common/pixel.c:315:5: note: get vectype for scalar type:  unsigned short
common/pixel.c:315:5: note: vectype: vector(8) unsigned short
common/pixel.c:315:5: note: nunits = 8
common/pixel.c:315:5: note: ==> examining statement: _149 = _147 + _148;

common/pixel.c:315:5: note: get vectype for scalar type:  unsigned short
common/pixel.c:315:5: note: vectype: vector(8) unsigned short
common/pixel.c:315:5: note: get vectype for scalar type:  unsigned short
common/pixel.c:315:5: note: vectype: vector(8) unsigned short
common/pixel.c:315:5: note: nunits = 8
common/pixel.c:315:5: note: ==> examining statement: _150 = (short int) _149;

common/pixel.c:315:5: note: get vectype for scalar type:  short int
common/pixel.c:315:5: note: vectype: vector(8) short int
common/pixel.c:315:5: note: get vectype for scalar type:  short int
common/pixel.c:315:5: note: vectype: vector(8) short int
common/pixel.c:315:5: note: nunits = 8
common/pixel.c:315:5: note: ==> examining statement: tmp[i_224][3] = _150;

common/pixel.c:315:5: note: get vectype for scalar type:  int16_t
common/pixel.c:315:5: note: vectype: vector(8) short int
common/pixel.c:315:5: note: nunits = 8
common/pixel.c:315:5: note: ==> examining statement: _152 = _147 - _148;

common/pixel.c:315:5: note: get vectype for scalar type:  unsigned short
common/pixel.c:315:5: note: vectype: vector(8) unsigned short
common/pixel.c:315:5: note: get vectype for scalar type:  unsigned short
common/pixel.c:315:5: note: vectype: vector(8) unsigned short
common/pixel.c:315:5: note: nunits = 8
common/pixel.c:315:5: note: ==> examining statement: _153 = (short int) _152;

common/pixel.c:315:5: note: get vectype for scalar type:  short int
common/pixel.c:315:5: note: vectype: vector(8) short int
common/pixel.c:315:5: note: get vectype for scalar type:  short int
common/pixel.c:315:5: note: vectype: vector(8) short int
common/pixel.c:315:5: note: nunits = 8
common/pixel.c:315:5: note: ==> examining statement: tmp[i_224][7] = _153;

common/pixel.c:315:5: note: get vectype for scalar type:  int16_t
common/pixel.c:315:5: note: vectype: vector(8) short int
common/pixel.c:315:5: note: nunits = 8
common/pixel.c:315:5: note: ==> examining statement: i_155 = i_224 + 1;

common/pixel.c:315:5: note: skip.
common/pixel.c:315:5: note: ==> examining statement: # DEBUG i => i_155

common/pixel.c:315:5: note: skip.
common/pixel.c:315:5: note: ==> examining statement: # DEBUG i => i_155

common/pixel.c:315:5: note: skip.
common/pixel.c:315:5: note: ==> examining statement: # DEBUG sum4 => sum4_122

common/pixel.c:315:5: note: skip.
common/pixel.c:315:5: note: ==> examining statement: ivtmp_491 = ivtmp_488 - 1;

common/pixel.c:315:5: note: skip.
common/pixel.c:315:5: note: ==> examining statement: if (ivtmp_491 != 0)

common/pixel.c:315:5: note: skip.
common/pixel.c:315:5: note: vectorization factor = 8
common/pixel.c:315:5: note: === vect_analyze_data_refs_alignment ===
common/pixel.c:315:5: note: dependence distance  = 0.
common/pixel.c:315:5: note: accesses have the same alignment.
dependence distance modulo vf == 0 between tmp[i_224][0] and tmp[i_224][0]
common/pixel.c:315:5: note: dependence distance  = 0.
common/pixel.c:315:5: note: accesses have the same alignment.
dependence distance modulo vf == 0 between tmp[i_224][1] and tmp[i_224][1]
common/pixel.c:315:5: note: dependence distance  = 0.
common/pixel.c:315:5: note: accesses have the same alignment.
dependence distance modulo vf == 0 between tmp[i_224][2] and tmp[i_224][2]
common/pixel.c:315:5: note: dependence distance  = 0.
common/pixel.c:315:5: note: accesses have the same alignment.
dependence distance modulo vf == 0 between tmp[i_224][3] and tmp[i_224][3]
common/pixel.c:315:5: note: dependence distance  = 0.
common/pixel.c:315:5: note: accesses have the same alignment.
dependence distance modulo vf == 0 between tmp[i_224][4] and tmp[i_224][4]
common/pixel.c:315:5: note: dependence distance  = 0.
common/pixel.c:315:5: note: accesses have the same alignment.
dependence distance modulo vf == 0 between tmp[i_224][5] and tmp[i_224][5]
common/pixel.c:315:5: note: dependence distance  = 0.
common/pixel.c:315:5: note: accesses have the same alignment.
dependence distance modulo vf == 0 between tmp[i_224][6] and tmp[i_224][6]
common/pixel.c:315:5: note: dependence distance  = 0.
common/pixel.c:315:5: note: accesses have the same alignment.
dependence distance modulo vf == 0 between tmp[i_224][7] and tmp[i_224][7]
common/pixel.c:315:5: note: vect_compute_data_ref_alignment:
common/pixel.c:315:5: note: misalign = 0 bytes of ref tmp[i_224][0]
common/pixel.c:315:5: note: vect_compute_data_ref_alignment:
common/pixel.c:315:5: note: misalign = 2 bytes of ref tmp[i_224][1]
common/pixel.c:315:5: note: vect_compute_data_ref_alignment:
common/pixel.c:315:5: note: misalign = 4 bytes of ref tmp[i_224][2]
common/pixel.c:315:5: note: vect_compute_data_ref_alignment:
common/pixel.c:315:5: note: misalign = 6 bytes of ref tmp[i_224][3]
common/pixel.c:315:5: note: vect_compute_data_ref_alignment:
common/pixel.c:315:5: note: misalign = 8 bytes of ref tmp[i_224][4]
common/pixel.c:315:5: note: vect_compute_data_ref_alignment:
common/pixel.c:315:5: note: misalign = 10 bytes of ref tmp[i_224][5]
common/pixel.c:315:5: note: vect_compute_data_ref_alignment:
common/pixel.c:315:5: note: misalign = 12 bytes of ref tmp[i_224][6]
common/pixel.c:315:5: note: vect_compute_data_ref_alignment:
common/pixel.c:315:5: note: misalign = 14 bytes of ref tmp[i_224][7]
common/pixel.c:315:5: note: vect_compute_data_ref_alignment:
common/pixel.c:315:5: note: misalign = 0 bytes of ref tmp[i_224][0]
common/pixel.c:315:5: note: vect_compute_data_ref_alignment:
common/pixel.c:315:5: note: misalign = 8 bytes of ref tmp[i_224][4]
common/pixel.c:315:5: note: vect_compute_data_ref_alignment:
common/pixel.c:315:5: note: misalign = 2 bytes of ref tmp[i_224][1]
common/pixel.c:315:5: note: vect_compute_data_ref_alignment:
common/pixel.c:315:5: note: misalign = 10 bytes of ref tmp[i_224][5]
common/pixel.c:315:5: note: vect_compute_data_ref_alignment:
common/pixel.c:315:5: note: misalign = 4 bytes of ref tmp[i_224][2]
common/pixel.c:315:5: note: vect_compute_data_ref_alignment:
common/pixel.c:315:5: note: misalign = 12 bytes of ref tmp[i_224][6]
common/pixel.c:315:5: note: vect_compute_data_ref_alignment:
common/pixel.c:315:5: note: misalign = 6 bytes of ref tmp[i_224][3]
common/pixel.c:315:5: note: vect_compute_data_ref_alignment:
common/pixel.c:315:5: note: misalign = 14 bytes of ref tmp[i_224][7]
common/pixel.c:315:5: note: === vect_prune_runtime_alias_test_list ===
common/pixel.c:315:5: note: === vect_enhance_data_refs_alignment ===
common/pixel.c:315:5: note: vect_can_advance_ivs_p:
common/pixel.c:315:5: note: Analyze phi: sum4_221 = PHI <0(5), sum4_122(7)>

common/pixel.c:315:5: note: reduc phi. skip.
common/pixel.c:315:5: note: Analyze phi: i_224 = PHI <0(5), i_155(7)>

common/pixel.c:315:5: note: Analyze phi: .MEM_227 = PHI <.MEM_70(5), .MEM_154(7)>

common/pixel.c:315:5: note: virtual phi. skip.
common/pixel.c:315:5: note: Analyze phi: ivtmp_488 = PHI <8(5), ivtmp_491(7)>

common/pixel.c:315:5: note: vect_model_load_cost: aligned.
common/pixel.c:315:5: note: vect_get_data_access_cost: inside_cost = 1, outside_cost = 0.
common/pixel.c:315:5: note: vect_model_store_cost: aligned.
common/pixel.c:315:5: note: vect_get_data_access_cost: inside_cost = 2, outside_cost = 0.
common/pixel.c:315:5: note: === vect_analyze_slp ===
common/pixel.c:315:5: note: Build SLP for tmp[i_224][0] = _126;

common/pixel.c:315:5: note: Build SLP for tmp[i_224][1] = _134;

common/pixel.c:315:5: note: Build SLP for tmp[i_224][2] = _142;

common/pixel.c:315:5: note: Build SLP for tmp[i_224][3] = _150;

common/pixel.c:315:5: note: Build SLP for tmp[i_224][4] = _129;

common/pixel.c:315:5: note: Build SLP for tmp[i_224][5] = _137;

common/pixel.c:315:5: note: Build SLP for tmp[i_224][6] = _145;

common/pixel.c:315:5: note: Build SLP for tmp[i_224][7] = _153;

common/pixel.c:315:5: note: vect_is_simple_use: operand _126
common/pixel.c:315:5: note: def_stmt: _126 = (short int) _125;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: vect_is_simple_use: operand _134
common/pixel.c:315:5: note: def_stmt: _134 = (short int) _133;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: vect_is_simple_use: operand _142
common/pixel.c:315:5: note: def_stmt: _142 = (short int) _141;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: vect_is_simple_use: operand _150
common/pixel.c:315:5: note: def_stmt: _150 = (short int) _149;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: vect_is_simple_use: operand _129
common/pixel.c:315:5: note: def_stmt: _129 = (short int) _128;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: vect_is_simple_use: operand _137
common/pixel.c:315:5: note: def_stmt: _137 = (short int) _136;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: vect_is_simple_use: operand _145
common/pixel.c:315:5: note: def_stmt: _145 = (short int) _144;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: vect_is_simple_use: operand _153
common/pixel.c:315:5: note: def_stmt: _153 = (short int) _152;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: Build SLP for _126 = (short int) _125;

common/pixel.c:315:5: note: Build SLP for _134 = (short int) _133;

common/pixel.c:315:5: note: Build SLP for _142 = (short int) _141;

common/pixel.c:315:5: note: Build SLP for _150 = (short int) _149;

common/pixel.c:315:5: note: Build SLP for _129 = (short int) _128;

common/pixel.c:315:5: note: Build SLP for _137 = (short int) _136;

common/pixel.c:315:5: note: Build SLP for _145 = (short int) _144;

common/pixel.c:315:5: note: Build SLP for _153 = (short int) _152;

common/pixel.c:315:5: note: vect_is_simple_use: operand _125
common/pixel.c:315:5: note: def_stmt: _125 = _123 + _124;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: vect_is_simple_use: operand _133
common/pixel.c:315:5: note: def_stmt: _133 = _131 + _132;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: vect_is_simple_use: operand _141
common/pixel.c:315:5: note: def_stmt: _141 = _139 + _140;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: vect_is_simple_use: operand _149
common/pixel.c:315:5: note: def_stmt: _149 = _147 + _148;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: vect_is_simple_use: operand _128
common/pixel.c:315:5: note: def_stmt: _128 = _123 - _124;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: vect_is_simple_use: operand _136
common/pixel.c:315:5: note: def_stmt: _136 = _131 - _132;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: vect_is_simple_use: operand _144
common/pixel.c:315:5: note: def_stmt: _144 = _139 - _140;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: vect_is_simple_use: operand _152
common/pixel.c:315:5: note: def_stmt: _152 = _147 - _148;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: Build SLP for _125 = _123 + _124;

common/pixel.c:315:5: note: Build SLP for _133 = _131 + _132;

common/pixel.c:315:5: note: Build SLP for _141 = _139 + _140;

common/pixel.c:315:5: note: Build SLP for _149 = _147 + _148;

common/pixel.c:315:5: note: Build SLP for _128 = _123 - _124;

common/pixel.c:315:5: note: Build SLP failed: different operation in stmt _128 = _123 - _124;

common/pixel.c:315:5: note: Build SLP for _136 = _131 - _132;

common/pixel.c:315:5: note: Build SLP failed: different operation in stmt _136 = _131 - _132;

common/pixel.c:315:5: note: Build SLP for _144 = _139 - _140;

common/pixel.c:315:5: note: Build SLP failed: different operation in stmt _144 = _139 - _140;

common/pixel.c:315:5: note: Build SLP for _152 = _147 - _148;

common/pixel.c:315:5: note: Build SLP failed: different operation in stmt _152 = _147 - _148;

common/pixel.c:315:5: note: Build SLP for sum4_98 = _97 + sum4_221;

common/pixel.c:315:5: note: Build SLP for sum4_122 = _121 + sum4_98;

common/pixel.c:315:5: note: vect_is_simple_use: operand _97
common/pixel.c:315:5: note: def_stmt: _97 = _95 + _96;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: vect_is_simple_use: operand sum4_221
common/pixel.c:315:5: note: def_stmt: sum4_221 = PHI <0(5), sum4_122(7)>
common/pixel.c:315:5: note: type of def: 5.
common/pixel.c:315:5: note: vect_is_simple_use: operand _121
common/pixel.c:315:5: note: def_stmt: _121 = _119 + _120;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: vect_is_simple_use: operand sum4_98
common/pixel.c:315:5: note: def_stmt: sum4_98 = _97 + sum4_221;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: Build SLP for _97 = _95 + _96;

common/pixel.c:315:5: note: Build SLP for _121 = _119 + _120;

common/pixel.c:315:5: note: vect_is_simple_use: operand _95
common/pixel.c:315:5: note: def_stmt: _95 = _93 + _94;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: vect_is_simple_use: operand _96
common/pixel.c:315:5: note: def_stmt: _96 = ABS_EXPR <a3_90>;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: vect_is_simple_use: operand _119
common/pixel.c:315:5: note: def_stmt: _119 = _117 + _118;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: vect_is_simple_use: operand _120
common/pixel.c:315:5: note: def_stmt: _120 = ABS_EXPR <a7_114>;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: Build SLP for _95 = _93 + _94;

common/pixel.c:315:5: note: Build SLP for _119 = _117 + _118;

common/pixel.c:315:5: note: vect_is_simple_use: operand _93
common/pixel.c:315:5: note: def_stmt: _93 = _91 + _92;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: vect_is_simple_use: operand _94
common/pixel.c:315:5: note: def_stmt: _94 = ABS_EXPR <a2_88>;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: vect_is_simple_use: operand _117
common/pixel.c:315:5: note: def_stmt: _117 = _115 + _116;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: vect_is_simple_use: operand _118
common/pixel.c:315:5: note: def_stmt: _118 = ABS_EXPR <a6_112>;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: Build SLP for _93 = _91 + _92;

common/pixel.c:315:5: note: Build SLP for _117 = _115 + _116;

common/pixel.c:315:5: note: vect_is_simple_use: operand _91
common/pixel.c:315:5: note: def_stmt: _91 = ABS_EXPR <a0_87>;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: vect_is_simple_use: operand _92
common/pixel.c:315:5: note: def_stmt: _92 = ABS_EXPR <a1_89>;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: vect_is_simple_use: operand _115
common/pixel.c:315:5: note: def_stmt: _115 = ABS_EXPR <a4_111>;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: vect_is_simple_use: operand _116
common/pixel.c:315:5: note: def_stmt: _116 = ABS_EXPR <a5_113>;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: Build SLP for _91 = ABS_EXPR <a0_87>;

common/pixel.c:315:5: note: Build SLP for _115 = ABS_EXPR <a4_111>;

common/pixel.c:315:5: note: vect_is_simple_use: operand a0_87
common/pixel.c:315:5: note: def_stmt: a0_87 = t0_79 + t2_85;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: vect_is_simple_use: operand a4_111
common/pixel.c:315:5: note: def_stmt: a4_111 = t0_103 + t2_109;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: Build SLP for a0_87 = t0_79 + t2_85;

common/pixel.c:315:5: note: Build SLP for a4_111 = t0_103 + t2_109;

common/pixel.c:315:5: note: vect_is_simple_use: operand t0_79
common/pixel.c:315:5: note: def_stmt: t0_79 = _76 + _78;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: vect_is_simple_use: operand t2_85
common/pixel.c:315:5: note: def_stmt: t2_85 = _82 + _84;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: vect_is_simple_use: operand t0_103
common/pixel.c:315:5: note: def_stmt: t0_103 = _100 + _102;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: vect_is_simple_use: operand t2_109
common/pixel.c:315:5: note: def_stmt: t2_109 = _106 + _108;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: Build SLP for t0_79 = _76 + _78;

common/pixel.c:315:5: note: Build SLP for t0_103 = _100 + _102;

common/pixel.c:315:5: note: vect_is_simple_use: operand _76
common/pixel.c:315:5: note: def_stmt: _76 = (int) _75;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: vect_is_simple_use: operand _78
common/pixel.c:315:5: note: def_stmt: _78 = (int) _77;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: vect_is_simple_use: operand _100
common/pixel.c:315:5: note: def_stmt: _100 = (int) _99;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: vect_is_simple_use: operand _102
common/pixel.c:315:5: note: def_stmt: _102 = (int) _101;
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: Build SLP for _76 = (int) _75;

common/pixel.c:315:5: note: Build SLP for _100 = (int) _99;

common/pixel.c:315:5: note: vect_is_simple_use: operand _75
common/pixel.c:315:5: note: def_stmt: _75 = tmp[i_224][0];
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: vect_is_simple_use: operand _99
common/pixel.c:315:5: note: def_stmt: _99 = tmp[i_224][4];
common/pixel.c:315:5: note: type of def: 3.
common/pixel.c:315:5: note: Build SLP for _75 = tmp[i_224][0];

common/pixel.c:315:5: note: Build SLP failed: grouped loads have gaps _75 = tmp[i_224][0];


Analyzing loop at common/pixel.c:308
common/pixel.c:308:5: note: ===== analyze_loop_nest =====
common/pixel.c:308:5: note: === vect_analyze_loop_form ===
common/pixel.c:308:5: note: === get_loop_niters ===
Analyzing # of iterations of loop 1
  exit condition [7, + , 4294967295] != 0
  bounds on difference of bases: -7 ... -7
  result:
    # of iterations 7, bounded by 7
common/pixel.c:308:5: note: === vect_analyze_data_refs ===
Creating dr for *pix_220
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: pix_9(D)
	offset from base address: 0
	constant offset from base address: 0
	step: (ssizetype) pretmp_493
	aligned to: 128
	base_object: *pix_9(D)
	Access function 0: {0B, +, pretmp_493}_1
Creating dr for MEM[(uint8_t *)pix_220 + 1B]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: pix_9(D)
	offset from base address: 0
	constant offset from base address: 1
	step: (ssizetype) pretmp_493
	aligned to: 128
	base_object: *pix_9(D)
	Access function 0: {1B, +, pretmp_493}_1
Creating dr for MEM[(uint8_t *)pix_220 + 2B]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: pix_9(D)
	offset from base address: 0
	constant offset from base address: 2
	step: (ssizetype) pretmp_493
	aligned to: 128
	base_object: *pix_9(D)
	Access function 0: {2B, +, pretmp_493}_1
Creating dr for MEM[(uint8_t *)pix_220 + 3B]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: pix_9(D)
	offset from base address: 0
	constant offset from base address: 3
	step: (ssizetype) pretmp_493
	aligned to: 128
	base_object: *pix_9(D)
	Access function 0: {3B, +, pretmp_493}_1
Creating dr for tmp[0][i_223]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &tmp
	offset from base address: 0
	constant offset from base address: 0
	step: 2
	aligned to: 128
	base_object: tmp
	Access function 0: {0, +, 1}_1
	Access function 1: 0
Creating dr for tmp[2][i_223]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &tmp
	offset from base address: 0
	constant offset from base address: 32
	step: 2
	aligned to: 128
	base_object: tmp
	Access function 0: {0, +, 1}_1
	Access function 1: 2
Creating dr for tmp[1][i_223]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &tmp
	offset from base address: 0
	constant offset from base address: 16
	step: 2
	aligned to: 128
	base_object: tmp
	Access function 0: {0, +, 1}_1
	Access function 1: 1
Creating dr for tmp[3][i_223]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &tmp
	offset from base address: 0
	constant offset from base address: 48
	step: 2
	aligned to: 128
	base_object: tmp
	Access function 0: {0, +, 1}_1
	Access function 1: 3
Creating dr for MEM[(uint8_t *)pix_220 + 4B]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: pix_9(D)
	offset from base address: 0
	constant offset from base address: 4
	step: (ssizetype) pretmp_493
	aligned to: 128
	base_object: *pix_9(D)
	Access function 0: {4B, +, pretmp_493}_1
Creating dr for MEM[(uint8_t *)pix_220 + 5B]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: pix_9(D)
	offset from base address: 0
	constant offset from base address: 5
	step: (ssizetype) pretmp_493
	aligned to: 128
	base_object: *pix_9(D)
	Access function 0: {5B, +, pretmp_493}_1
Creating dr for MEM[(uint8_t *)pix_220 + 6B]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: pix_9(D)
	offset from base address: 0
	constant offset from base address: 6
	step: (ssizetype) pretmp_493
	aligned to: 128
	base_object: *pix_9(D)
	Access function 0: {6B, +, pretmp_493}_1
Creating dr for MEM[(uint8_t *)pix_220 + 7B]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: pix_9(D)
	offset from base address: 0
	constant offset from base address: 7
	step: (ssizetype) pretmp_493
	aligned to: 128
	base_object: *pix_9(D)
	Access function 0: {7B, +, pretmp_493}_1
Creating dr for tmp[4][i_223]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &tmp
	offset from base address: 0
	constant offset from base address: 64
	step: 2
	aligned to: 128
	base_object: tmp
	Access function 0: {0, +, 1}_1
	Access function 1: 4
Creating dr for tmp[6][i_223]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &tmp
	offset from base address: 0
	constant offset from base address: 96
	step: 2
	aligned to: 128
	base_object: tmp
	Access function 0: {0, +, 1}_1
	Access function 1: 6
Creating dr for tmp[5][i_223]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &tmp
	offset from base address: 0
	constant offset from base address: 80
	step: 2
	aligned to: 128
	base_object: tmp
	Access function 0: {0, +, 1}_1
	Access function 1: 5
Creating dr for tmp[7][i_223]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &tmp
	offset from base address: 0
	constant offset from base address: 112
	step: 2
	aligned to: 128
	base_object: tmp
	Access function 0: {0, +, 1}_1
	Access function 1: 7
common/pixel.c:308:5: note: got vectype for stmt: _11 = *pix_220;
vector(16) unsigned char
common/pixel.c:308:5: note: got vectype for stmt: _13 = MEM[(uint8_t *)pix_220 + 1B];
vector(16) unsigned char
common/pixel.c:308:5: note: got vectype for stmt: _21 = MEM[(uint8_t *)pix_220 + 2B];
vector(16) unsigned char
common/pixel.c:308:5: note: got vectype for stmt: _23 = MEM[(uint8_t *)pix_220 + 3B];
vector(16) unsigned char
common/pixel.c:308:5: note: got vectype for stmt: tmp[0][i_223] = _30;
vector(8) short int
common/pixel.c:308:5: note: got vectype for stmt: tmp[2][i_223] = _33;
vector(8) short int
common/pixel.c:308:5: note: got vectype for stmt: tmp[1][i_223] = _38;
vector(8) short int
common/pixel.c:308:5: note: got vectype for stmt: tmp[3][i_223] = _41;
vector(8) short int
common/pixel.c:308:5: note: got vectype for stmt: _43 = MEM[(uint8_t *)pix_220 + 4B];
vector(16) unsigned char
common/pixel.c:308:5: note: got vectype for stmt: _45 = MEM[(uint8_t *)pix_220 + 5B];
vector(16) unsigned char
common/pixel.c:308:5: note: got vectype for stmt: _49 = MEM[(uint8_t *)pix_220 + 6B];
vector(16) unsigned char
common/pixel.c:308:5: note: got vectype for stmt: _51 = MEM[(uint8_t *)pix_220 + 7B];
vector(16) unsigned char
common/pixel.c:308:5: note: got vectype for stmt: tmp[4][i_223] = _58;
vector(8) short int
common/pixel.c:308:5: note: got vectype for stmt: tmp[6][i_223] = _61;
vector(8) short int
common/pixel.c:308:5: note: got vectype for stmt: tmp[5][i_223] = _66;
vector(8) short int
common/pixel.c:308:5: note: got vectype for stmt: tmp[7][i_223] = _69;
vector(8) short int
common/pixel.c:308:5: note: === vect_analyze_scalar_cycles ===
common/pixel.c:308:5: note: Analyze phi: pix_220 = PHI <pix_74(4), pix_9(D)(2)>

common/pixel.c:308:5: note: Access function of PHI: {pix_9(D), +, pretmp_493}_1
common/pixel.c:308:5: note: step: pretmp_493,  init: pix_9(D)
common/pixel.c:308:5: note: Detected induction.
common/pixel.c:308:5: note: Analyze phi: i_223 = PHI <i_71(4), 0(2)>

common/pixel.c:308:5: note: Access function of PHI: {0, +, 1}_1
common/pixel.c:308:5: note: step: 1,  init: 0
common/pixel.c:308:5: note: Detected induction.
common/pixel.c:308:5: note: Analyze phi: .MEM_226 = PHI <.MEM_70(4), .MEM_10(D)(2)>

common/pixel.c:308:5: note: Analyze phi: ivtmp_490 = PHI <ivtmp_484(4), 8(2)>

common/pixel.c:308:5: note: Access function of PHI: {8, +, 4294967295}_1
common/pixel.c:308:5: note: step: 4294967295,  init: 8
common/pixel.c:308:5: note: Detected induction.
common/pixel.c:308:5: note: === vect_pattern_recog ===
common/pixel.c:308:5: note: === vect_analyze_data_ref_accesses ===
common/pixel.c:308:5: note: === vect_mark_stmts_to_be_vectorized ===
common/pixel.c:308:5: note: init: phi relevant? pix_220 = PHI <pix_74(4), pix_9(D)(2)>
common/pixel.c:308:5: note: init: phi relevant? i_223 = PHI <i_71(4), 0(2)>
common/pixel.c:308:5: note: init: phi relevant? .MEM_226 = PHI <.MEM_70(4), .MEM_10(D)(2)>
common/pixel.c:308:5: note: init: phi relevant? ivtmp_490 = PHI <ivtmp_484(4), 8(2)>
common/pixel.c:308:5: note: init: stmt relevant? # DEBUG i => i_223
common/pixel.c:308:5: note: init: stmt relevant? # DEBUG pix => pix_220
common/pixel.c:308:5: note: init: stmt relevant? _11 = *pix_220;
common/pixel.c:308:5: note: init: stmt relevant? _12 = (int) _11;
common/pixel.c:308:5: note: init: stmt relevant? _13 = MEM[(uint8_t *)pix_220 + 1B];
common/pixel.c:308:5: note: init: stmt relevant? _14 = (int) _13;
common/pixel.c:308:5: note: init: stmt relevant? t0_15 = _12 + _14;
common/pixel.c:308:5: note: init: stmt relevant? # DEBUG t0 => t0_15
common/pixel.c:308:5: note: init: stmt relevant? t1_20 = _12 - _14;
common/pixel.c:308:5: note: init: stmt relevant? # DEBUG t1 => t1_20
common/pixel.c:308:5: note: init: stmt relevant? _21 = MEM[(uint8_t *)pix_220 + 2B];
common/pixel.c:308:5: note: init: stmt relevant? _22 = (int) _21;
common/pixel.c:308:5: note: init: stmt relevant? _23 = MEM[(uint8_t *)pix_220 + 3B];
common/pixel.c:308:5: note: init: stmt relevant? _24 = (int) _23;
common/pixel.c:308:5: note: init: stmt relevant? t2_25 = _22 + _24;
common/pixel.c:308:5: note: init: stmt relevant? # DEBUG t2 => t2_25
common/pixel.c:308:5: note: init: stmt relevant? t3_26 = _22 - _24;
common/pixel.c:308:5: note: init: stmt relevant? # DEBUG t3 => t3_26
common/pixel.c:308:5: note: init: stmt relevant? _27 = (unsigned short) t0_15;
common/pixel.c:308:5: note: init: stmt relevant? _28 = (unsigned short) t2_25;
common/pixel.c:308:5: note: init: stmt relevant? _29 = _27 + _28;
common/pixel.c:308:5: note: init: stmt relevant? _30 = (short int) _29;
common/pixel.c:308:5: note: init: stmt relevant? tmp[0][i_223] = _30;
common/pixel.c:308:5: note: vec_stmt_relevant_p: stmt has vdefs.
common/pixel.c:308:5: note: mark relevant 4, live 0.
common/pixel.c:308:5: note: init: stmt relevant? _32 = _27 - _28;
common/pixel.c:308:5: note: init: stmt relevant? _33 = (short int) _32;
common/pixel.c:308:5: note: init: stmt relevant? tmp[2][i_223] = _33;
common/pixel.c:308:5: note: vec_stmt_relevant_p: stmt has vdefs.
common/pixel.c:308:5: note: mark relevant 4, live 0.
common/pixel.c:308:5: note: init: stmt relevant? _35 = (unsigned short) t1_20;
common/pixel.c:308:5: note: init: stmt relevant? _36 = (unsigned short) t3_26;
common/pixel.c:308:5: note: init: stmt relevant? _37 = _35 + _36;
common/pixel.c:308:5: note: init: stmt relevant? _38 = (short int) _37;
common/pixel.c:308:5: note: init: stmt relevant? tmp[1][i_223] = _38;
common/pixel.c:308:5: note: vec_stmt_relevant_p: stmt has vdefs.
common/pixel.c:308:5: note: mark relevant 4, live 0.
common/pixel.c:308:5: note: init: stmt relevant? _40 = _35 - _36;
common/pixel.c:308:5: note: init: stmt relevant? _41 = (short int) _40;
common/pixel.c:308:5: note: init: stmt relevant? tmp[3][i_223] = _41;
common/pixel.c:308:5: note: vec_stmt_relevant_p: stmt has vdefs.
common/pixel.c:308:5: note: mark relevant 4, live 0.
common/pixel.c:308:5: note: init: stmt relevant? _43 = MEM[(uint8_t *)pix_220 + 4B];
common/pixel.c:308:5: note: init: stmt relevant? _44 = (int) _43;
common/pixel.c:308:5: note: init: stmt relevant? _45 = MEM[(uint8_t *)pix_220 + 5B];
common/pixel.c:308:5: note: init: stmt relevant? _46 = (int) _45;
common/pixel.c:308:5: note: init: stmt relevant? t0_47 = _44 + _46;
common/pixel.c:308:5: note: init: stmt relevant? # DEBUG t0 => t0_47
common/pixel.c:308:5: note: init: stmt relevant? t1_48 = _44 - _46;
common/pixel.c:308:5: note: init: stmt relevant? # DEBUG t1 => t1_48
common/pixel.c:308:5: note: init: stmt relevant? _49 = MEM[(uint8_t *)pix_220 + 6B];
common/pixel.c:308:5: note: init: stmt relevant? _50 = (int) _49;
common/pixel.c:308:5: note: init: stmt relevant? _51 = MEM[(uint8_t *)pix_220 + 7B];
common/pixel.c:308:5: note: init: stmt relevant? _52 = (int) _51;
common/pixel.c:308:5: note: init: stmt relevant? t2_53 = _50 + _52;
common/pixel.c:308:5: note: init: stmt relevant? # DEBUG t2 => t2_53
common/pixel.c:308:5: note: init: stmt relevant? t3_54 = _50 - _52;
common/pixel.c:308:5: note: init: stmt relevant? # DEBUG t3 => t3_54
common/pixel.c:308:5: note: init: stmt relevant? _55 = (unsigned short) t0_47;
common/pixel.c:308:5: note: init: stmt relevant? _56 = (unsigned short) t2_53;
common/pixel.c:308:5: note: init: stmt relevant? _57 = _55 + _56;
common/pixel.c:308:5: note: init: stmt relevant? _58 = (short int) _57;
common/pixel.c:308:5: note: init: stmt relevant? tmp[4][i_223] = _58;
common/pixel.c:308:5: note: vec_stmt_relevant_p: stmt has vdefs.
common/pixel.c:308:5: note: mark relevant 4, live 0.
common/pixel.c:308:5: note: init: stmt relevant? _60 = _55 - _56;
common/pixel.c:308:5: note: init: stmt relevant? _61 = (short int) _60;
common/pixel.c:308:5: note: init: stmt relevant? tmp[6][i_223] = _61;
common/pixel.c:308:5: note: vec_stmt_relevant_p: stmt has vdefs.
common/pixel.c:308:5: note: mark relevant 4, live 0.
common/pixel.c:308:5: note: init: stmt relevant? _63 = (unsigned short) t1_48;
common/pixel.c:308:5: note: init: stmt relevant? _64 = (unsigned short) t3_54;
common/pixel.c:308:5: note: init: stmt relevant? _65 = _63 + _64;
common/pixel.c:308:5: note: init: stmt relevant? _66 = (short int) _65;
common/pixel.c:308:5: note: init: stmt relevant? tmp[5][i_223] = _66;
common/pixel.c:308:5: note: vec_stmt_relevant_p: stmt has vdefs.
common/pixel.c:308:5: note: mark relevant 4, live 0.
common/pixel.c:308:5: note: init: stmt relevant? _68 = _63 - _64;
common/pixel.c:308:5: note: init: stmt relevant? _69 = (short int) _68;
common/pixel.c:308:5: note: init: stmt relevant? tmp[7][i_223] = _69;
common/pixel.c:308:5: note: vec_stmt_relevant_p: stmt has vdefs.
common/pixel.c:308:5: note: mark relevant 4, live 0.
common/pixel.c:308:5: note: init: stmt relevant? i_71 = i_223 + 1;
common/pixel.c:308:5: note: init: stmt relevant? # DEBUG i => i_71
common/pixel.c:308:5: note: init: stmt relevant? pix_74 = pix_220 + pretmp_493;
common/pixel.c:308:5: note: init: stmt relevant? # DEBUG pix => pix_74
common/pixel.c:308:5: note: init: stmt relevant? # DEBUG i => i_71
common/pixel.c:308:5: note: init: stmt relevant? # DEBUG pix => pix_74
common/pixel.c:308:5: note: init: stmt relevant? ivtmp_484 = ivtmp_490 - 1;
common/pixel.c:308:5: note: init: stmt relevant? if (ivtmp_484 != 0)
common/pixel.c:308:5: note: worklist: examine stmt: tmp[7][i_223] = _69;
common/pixel.c:308:5: note: vect_is_simple_use: operand _69
common/pixel.c:308:5: note: def_stmt: _69 = (short int) _68;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: mark relevant 4, live 0.
common/pixel.c:308:5: note: worklist: examine stmt: _69 = (short int) _68;
common/pixel.c:308:5: note: vect_is_simple_use: operand _68
common/pixel.c:308:5: note: def_stmt: _68 = _63 - _64;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: mark relevant 4, live 0.
common/pixel.c:308:5: note: worklist: examine stmt: _68 = _63 - _64;
common/pixel.c:308:5: note: vect_is_simple_use: operand _63
common/pixel.c:308:5: note: def_stmt: _63 = (unsigned short) t1_48;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: mark relevant 4, live 0.
common/pixel.c:308:5: note: vect_is_simple_use: operand _64
common/pixel.c:308:5: note: def_stmt: _64 = (unsigned short) t3_54;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: mark relevant 4, live 0.
common/pixel.c:308:5: note: worklist: examine stmt: _64 = (unsigned short) t3_54;
common/pixel.c:308:5: note: vect_is_simple_use: operand t3_54
common/pixel.c:308:5: note: def_stmt: t3_54 = _50 - _52;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: mark relevant 4, live 0.
common/pixel.c:308:5: note: worklist: examine stmt: t3_54 = _50 - _52;
common/pixel.c:308:5: note: vect_is_simple_use: operand _50
common/pixel.c:308:5: note: def_stmt: _50 = (int) _49;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: mark relevant 4, live 0.
common/pixel.c:308:5: note: vect_is_simple_use: operand _52
common/pixel.c:308:5: note: def_stmt: _52 = (int) _51;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: mark relevant 4, live 0.
common/pixel.c:308:5: note: worklist: examine stmt: _52 = (int) _51;
common/pixel.c:308:5: note: vect_is_simple_use: operand _51
common/pixel.c:308:5: note: def_stmt: _51 = MEM[(uint8_t *)pix_220 + 7B];
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: mark relevant 4, live 0.
common/pixel.c:308:5: note: worklist: examine stmt: _51 = MEM[(uint8_t *)pix_220 + 7B];
common/pixel.c:308:5: note: worklist: examine stmt: _50 = (int) _49;
common/pixel.c:308:5: note: vect_is_simple_use: operand _49
common/pixel.c:308:5: note: def_stmt: _49 = MEM[(uint8_t *)pix_220 + 6B];
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: mark relevant 4, live 0.
common/pixel.c:308:5: note: worklist: examine stmt: _49 = MEM[(uint8_t *)pix_220 + 6B];
common/pixel.c:308:5: note: worklist: examine stmt: _63 = (unsigned short) t1_48;
common/pixel.c:308:5: note: vect_is_simple_use: operand t1_48
common/pixel.c:308:5: note: def_stmt: t1_48 = _44 - _46;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: mark relevant 4, live 0.
common/pixel.c:308:5: note: worklist: examine stmt: t1_48 = _44 - _46;
common/pixel.c:308:5: note: vect_is_simple_use: operand _44
common/pixel.c:308:5: note: def_stmt: _44 = (int) _43;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: mark relevant 4, live 0.
common/pixel.c:308:5: note: vect_is_simple_use: operand _46
common/pixel.c:308:5: note: def_stmt: _46 = (int) _45;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: mark relevant 4, live 0.
common/pixel.c:308:5: note: worklist: examine stmt: _46 = (int) _45;
common/pixel.c:308:5: note: vect_is_simple_use: operand _45
common/pixel.c:308:5: note: def_stmt: _45 = MEM[(uint8_t *)pix_220 + 5B];
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: mark relevant 4, live 0.
common/pixel.c:308:5: note: worklist: examine stmt: _45 = MEM[(uint8_t *)pix_220 + 5B];
common/pixel.c:308:5: note: worklist: examine stmt: _44 = (int) _43;
common/pixel.c:308:5: note: vect_is_simple_use: operand _43
common/pixel.c:308:5: note: def_stmt: _43 = MEM[(uint8_t *)pix_220 + 4B];
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: mark relevant 4, live 0.
common/pixel.c:308:5: note: worklist: examine stmt: _43 = MEM[(uint8_t *)pix_220 + 4B];
common/pixel.c:308:5: note: worklist: examine stmt: tmp[5][i_223] = _66;
common/pixel.c:308:5: note: vect_is_simple_use: operand _66
common/pixel.c:308:5: note: def_stmt: _66 = (short int) _65;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: mark relevant 4, live 0.
common/pixel.c:308:5: note: worklist: examine stmt: _66 = (short int) _65;
common/pixel.c:308:5: note: vect_is_simple_use: operand _65
common/pixel.c:308:5: note: def_stmt: _65 = _63 + _64;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: mark relevant 4, live 0.
common/pixel.c:308:5: note: worklist: examine stmt: _65 = _63 + _64;
common/pixel.c:308:5: note: vect_is_simple_use: operand _63
common/pixel.c:308:5: note: def_stmt: _63 = (unsigned short) t1_48;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: mark relevant 4, live 0.
common/pixel.c:308:5: note: already marked relevant/live.
common/pixel.c:308:5: note: vect_is_simple_use: operand _64
common/pixel.c:308:5: note: def_stmt: _64 = (unsigned short) t3_54;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: mark relevant 4, live 0.
common/pixel.c:308:5: note: already marked relevant/live.
common/pixel.c:308:5: note: worklist: examine stmt: tmp[6][i_223] = _61;
common/pixel.c:308:5: note: vect_is_simple_use: operand _61
common/pixel.c:308:5: note: def_stmt: _61 = (short int) _60;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: mark relevant 4, live 0.
common/pixel.c:308:5: note: worklist: examine stmt: _61 = (short int) _60;
common/pixel.c:308:5: note: vect_is_simple_use: operand _60
common/pixel.c:308:5: note: def_stmt: _60 = _55 - _56;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: mark relevant 4, live 0.
common/pixel.c:308:5: note: worklist: examine stmt: _60 = _55 - _56;
common/pixel.c:308:5: note: vect_is_simple_use: operand _55
common/pixel.c:308:5: note: def_stmt: _55 = (unsigned short) t0_47;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: mark relevant 4, live 0.
common/pixel.c:308:5: note: vect_is_simple_use: operand _56
common/pixel.c:308:5: note: def_stmt: _56 = (unsigned short) t2_53;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: mark relevant 4, live 0.
common/pixel.c:308:5: note: worklist: examine stmt: _56 = (unsigned short) t2_53;
common/pixel.c:308:5: note: vect_is_simple_use: operand t2_53
common/pixel.c:308:5: note: def_stmt: t2_53 = _50 + _52;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: mark relevant 4, live 0.
common/pixel.c:308:5: note: worklist: examine stmt: t2_53 = _50 + _52;
common/pixel.c:308:5: note: vect_is_simple_use: operand _50
common/pixel.c:308:5: note: def_stmt: _50 = (int) _49;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: mark relevant 4, live 0.
common/pixel.c:308:5: note: already marked relevant/live.
common/pixel.c:308:5: note: vect_is_simple_use: operand _52
common/pixel.c:308:5: note: def_stmt: _52 = (int) _51;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: mark relevant 4, live 0.
common/pixel.c:308:5: note: already marked relevant/live.
common/pixel.c:308:5: note: worklist: examine stmt: _55 = (unsigned short) t0_47;
common/pixel.c:308:5: note: vect_is_simple_use: operand t0_47
common/pixel.c:308:5: note: def_stmt: t0_47 = _44 + _46;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: mark relevant 4, live 0.
common/pixel.c:308:5: note: worklist: examine stmt: t0_47 = _44 + _46;
common/pixel.c:308:5: note: vect_is_simple_use: operand _44
common/pixel.c:308:5: note: def_stmt: _44 = (int) _43;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: mark relevant 4, live 0.
common/pixel.c:308:5: note: already marked relevant/live.
common/pixel.c:308:5: note: vect_is_simple_use: operand _46
common/pixel.c:308:5: note: def_stmt: _46 = (int) _45;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: mark relevant 4, live 0.
common/pixel.c:308:5: note: already marked relevant/live.
common/pixel.c:308:5: note: worklist: examine stmt: tmp[4][i_223] = _58;
common/pixel.c:308:5: note: vect_is_simple_use: operand _58
common/pixel.c:308:5: note: def_stmt: _58 = (short int) _57;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: mark relevant 4, live 0.
common/pixel.c:308:5: note: worklist: examine stmt: _58 = (short int) _57;
common/pixel.c:308:5: note: vect_is_simple_use: operand _57
common/pixel.c:308:5: note: def_stmt: _57 = _55 + _56;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: mark relevant 4, live 0.
common/pixel.c:308:5: note: worklist: examine stmt: _57 = _55 + _56;
common/pixel.c:308:5: note: vect_is_simple_use: operand _55
common/pixel.c:308:5: note: def_stmt: _55 = (unsigned short) t0_47;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: mark relevant 4, live 0.
common/pixel.c:308:5: note: already marked relevant/live.
common/pixel.c:308:5: note: vect_is_simple_use: operand _56
common/pixel.c:308:5: note: def_stmt: _56 = (unsigned short) t2_53;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: mark relevant 4, live 0.
common/pixel.c:308:5: note: already marked relevant/live.
common/pixel.c:308:5: note: worklist: examine stmt: tmp[3][i_223] = _41;
common/pixel.c:308:5: note: vect_is_simple_use: operand _41
common/pixel.c:308:5: note: def_stmt: _41 = (short int) _40;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: mark relevant 4, live 0.
common/pixel.c:308:5: note: worklist: examine stmt: _41 = (short int) _40;
common/pixel.c:308:5: note: vect_is_simple_use: operand _40
common/pixel.c:308:5: note: def_stmt: _40 = _35 - _36;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: mark relevant 4, live 0.
common/pixel.c:308:5: note: worklist: examine stmt: _40 = _35 - _36;
common/pixel.c:308:5: note: vect_is_simple_use: operand _35
common/pixel.c:308:5: note: def_stmt: _35 = (unsigned short) t1_20;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: mark relevant 4, live 0.
common/pixel.c:308:5: note: vect_is_simple_use: operand _36
common/pixel.c:308:5: note: def_stmt: _36 = (unsigned short) t3_26;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: mark relevant 4, live 0.
common/pixel.c:308:5: note: worklist: examine stmt: _36 = (unsigned short) t3_26;
common/pixel.c:308:5: note: vect_is_simple_use: operand t3_26
common/pixel.c:308:5: note: def_stmt: t3_26 = _22 - _24;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: mark relevant 4, live 0.
common/pixel.c:308:5: note: worklist: examine stmt: t3_26 = _22 - _24;
common/pixel.c:308:5: note: vect_is_simple_use: operand _22
common/pixel.c:308:5: note: def_stmt: _22 = (int) _21;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: mark relevant 4, live 0.
common/pixel.c:308:5: note: vect_is_simple_use: operand _24
common/pixel.c:308:5: note: def_stmt: _24 = (int) _23;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: mark relevant 4, live 0.
common/pixel.c:308:5: note: worklist: examine stmt: _24 = (int) _23;
common/pixel.c:308:5: note: vect_is_simple_use: operand _23
common/pixel.c:308:5: note: def_stmt: _23 = MEM[(uint8_t *)pix_220 + 3B];
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: mark relevant 4, live 0.
common/pixel.c:308:5: note: worklist: examine stmt: _23 = MEM[(uint8_t *)pix_220 + 3B];
common/pixel.c:308:5: note: worklist: examine stmt: _22 = (int) _21;
common/pixel.c:308:5: note: vect_is_simple_use: operand _21
common/pixel.c:308:5: note: def_stmt: _21 = MEM[(uint8_t *)pix_220 + 2B];
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: mark relevant 4, live 0.
common/pixel.c:308:5: note: worklist: examine stmt: _21 = MEM[(uint8_t *)pix_220 + 2B];
common/pixel.c:308:5: note: worklist: examine stmt: _35 = (unsigned short) t1_20;
common/pixel.c:308:5: note: vect_is_simple_use: operand t1_20
common/pixel.c:308:5: note: def_stmt: t1_20 = _12 - _14;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: mark relevant 4, live 0.
common/pixel.c:308:5: note: worklist: examine stmt: t1_20 = _12 - _14;
common/pixel.c:308:5: note: vect_is_simple_use: operand _12
common/pixel.c:308:5: note: def_stmt: _12 = (int) _11;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: mark relevant 4, live 0.
common/pixel.c:308:5: note: vect_is_simple_use: operand _14
common/pixel.c:308:5: note: def_stmt: _14 = (int) _13;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: mark relevant 4, live 0.
common/pixel.c:308:5: note: worklist: examine stmt: _14 = (int) _13;
common/pixel.c:308:5: note: vect_is_simple_use: operand _13
common/pixel.c:308:5: note: def_stmt: _13 = MEM[(uint8_t *)pix_220 + 1B];
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: mark relevant 4, live 0.
common/pixel.c:308:5: note: worklist: examine stmt: _13 = MEM[(uint8_t *)pix_220 + 1B];
common/pixel.c:308:5: note: worklist: examine stmt: _12 = (int) _11;
common/pixel.c:308:5: note: vect_is_simple_use: operand _11
common/pixel.c:308:5: note: def_stmt: _11 = *pix_220;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: mark relevant 4, live 0.
common/pixel.c:308:5: note: worklist: examine stmt: _11 = *pix_220;
common/pixel.c:308:5: note: worklist: examine stmt: tmp[1][i_223] = _38;
common/pixel.c:308:5: note: vect_is_simple_use: operand _38
common/pixel.c:308:5: note: def_stmt: _38 = (short int) _37;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: mark relevant 4, live 0.
common/pixel.c:308:5: note: worklist: examine stmt: _38 = (short int) _37;
common/pixel.c:308:5: note: vect_is_simple_use: operand _37
common/pixel.c:308:5: note: def_stmt: _37 = _35 + _36;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: mark relevant 4, live 0.
common/pixel.c:308:5: note: worklist: examine stmt: _37 = _35 + _36;
common/pixel.c:308:5: note: vect_is_simple_use: operand _35
common/pixel.c:308:5: note: def_stmt: _35 = (unsigned short) t1_20;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: mark relevant 4, live 0.
common/pixel.c:308:5: note: already marked relevant/live.
common/pixel.c:308:5: note: vect_is_simple_use: operand _36
common/pixel.c:308:5: note: def_stmt: _36 = (unsigned short) t3_26;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: mark relevant 4, live 0.
common/pixel.c:308:5: note: already marked relevant/live.
common/pixel.c:308:5: note: worklist: examine stmt: tmp[2][i_223] = _33;
common/pixel.c:308:5: note: vect_is_simple_use: operand _33
common/pixel.c:308:5: note: def_stmt: _33 = (short int) _32;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: mark relevant 4, live 0.
common/pixel.c:308:5: note: worklist: examine stmt: _33 = (short int) _32;
common/pixel.c:308:5: note: vect_is_simple_use: operand _32
common/pixel.c:308:5: note: def_stmt: _32 = _27 - _28;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: mark relevant 4, live 0.
common/pixel.c:308:5: note: worklist: examine stmt: _32 = _27 - _28;
common/pixel.c:308:5: note: vect_is_simple_use: operand _27
common/pixel.c:308:5: note: def_stmt: _27 = (unsigned short) t0_15;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: mark relevant 4, live 0.
common/pixel.c:308:5: note: vect_is_simple_use: operand _28
common/pixel.c:308:5: note: def_stmt: _28 = (unsigned short) t2_25;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: mark relevant 4, live 0.
common/pixel.c:308:5: note: worklist: examine stmt: _28 = (unsigned short) t2_25;
common/pixel.c:308:5: note: vect_is_simple_use: operand t2_25
common/pixel.c:308:5: note: def_stmt: t2_25 = _22 + _24;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: mark relevant 4, live 0.
common/pixel.c:308:5: note: worklist: examine stmt: t2_25 = _22 + _24;
common/pixel.c:308:5: note: vect_is_simple_use: operand _22
common/pixel.c:308:5: note: def_stmt: _22 = (int) _21;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: mark relevant 4, live 0.
common/pixel.c:308:5: note: already marked relevant/live.
common/pixel.c:308:5: note: vect_is_simple_use: operand _24
common/pixel.c:308:5: note: def_stmt: _24 = (int) _23;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: mark relevant 4, live 0.
common/pixel.c:308:5: note: already marked relevant/live.
common/pixel.c:308:5: note: worklist: examine stmt: _27 = (unsigned short) t0_15;
common/pixel.c:308:5: note: vect_is_simple_use: operand t0_15
common/pixel.c:308:5: note: def_stmt: t0_15 = _12 + _14;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: mark relevant 4, live 0.
common/pixel.c:308:5: note: worklist: examine stmt: t0_15 = _12 + _14;
common/pixel.c:308:5: note: vect_is_simple_use: operand _12
common/pixel.c:308:5: note: def_stmt: _12 = (int) _11;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: mark relevant 4, live 0.
common/pixel.c:308:5: note: already marked relevant/live.
common/pixel.c:308:5: note: vect_is_simple_use: operand _14
common/pixel.c:308:5: note: def_stmt: _14 = (int) _13;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: mark relevant 4, live 0.
common/pixel.c:308:5: note: already marked relevant/live.
common/pixel.c:308:5: note: worklist: examine stmt: tmp[0][i_223] = _30;
common/pixel.c:308:5: note: vect_is_simple_use: operand _30
common/pixel.c:308:5: note: def_stmt: _30 = (short int) _29;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: mark relevant 4, live 0.
common/pixel.c:308:5: note: worklist: examine stmt: _30 = (short int) _29;
common/pixel.c:308:5: note: vect_is_simple_use: operand _29
common/pixel.c:308:5: note: def_stmt: _29 = _27 + _28;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: mark relevant 4, live 0.
common/pixel.c:308:5: note: worklist: examine stmt: _29 = _27 + _28;
common/pixel.c:308:5: note: vect_is_simple_use: operand _27
common/pixel.c:308:5: note: def_stmt: _27 = (unsigned short) t0_15;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: mark relevant 4, live 0.
common/pixel.c:308:5: note: already marked relevant/live.
common/pixel.c:308:5: note: vect_is_simple_use: operand _28
common/pixel.c:308:5: note: def_stmt: _28 = (unsigned short) t2_25;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: mark relevant 4, live 0.
common/pixel.c:308:5: note: already marked relevant/live.
common/pixel.c:308:5: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _11 = *pix_220;
  stmt_b: _13 = MEM[(uint8_t *)pix_220 + 1B];
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, pretmp_493}_1)
  (chrec_b = {1B, +, pretmp_493}_1)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _11 = *pix_220;
  stmt_b: _21 = MEM[(uint8_t *)pix_220 + 2B];
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, pretmp_493}_1)
  (chrec_b = {2B, +, pretmp_493}_1)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _11 = *pix_220;
  stmt_b: _23 = MEM[(uint8_t *)pix_220 + 3B];
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, pretmp_493}_1)
  (chrec_b = {3B, +, pretmp_493}_1)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _11 = *pix_220;
  stmt_b: tmp[0][i_223] = _30;
) -> no dependence
(compute_affine_dependence
  stmt_a: _11 = *pix_220;
  stmt_b: tmp[2][i_223] = _33;
) -> no dependence
(compute_affine_dependence
  stmt_a: _11 = *pix_220;
  stmt_b: tmp[1][i_223] = _38;
) -> no dependence
(compute_affine_dependence
  stmt_a: _11 = *pix_220;
  stmt_b: tmp[3][i_223] = _41;
) -> no dependence
(compute_affine_dependence
  stmt_a: _11 = *pix_220;
  stmt_b: _43 = MEM[(uint8_t *)pix_220 + 4B];
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, pretmp_493}_1)
  (chrec_b = {4B, +, pretmp_493}_1)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _11 = *pix_220;
  stmt_b: _45 = MEM[(uint8_t *)pix_220 + 5B];
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, pretmp_493}_1)
  (chrec_b = {5B, +, pretmp_493}_1)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _11 = *pix_220;
  stmt_b: _49 = MEM[(uint8_t *)pix_220 + 6B];
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, pretmp_493}_1)
  (chrec_b = {6B, +, pretmp_493}_1)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _11 = *pix_220;
  stmt_b: _51 = MEM[(uint8_t *)pix_220 + 7B];
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, pretmp_493}_1)
  (chrec_b = {7B, +, pretmp_493}_1)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _11 = *pix_220;
  stmt_b: tmp[4][i_223] = _58;
) -> no dependence
(compute_affine_dependence
  stmt_a: _11 = *pix_220;
  stmt_b: tmp[6][i_223] = _61;
) -> no dependence
(compute_affine_dependence
  stmt_a: _11 = *pix_220;
  stmt_b: tmp[5][i_223] = _66;
) -> no dependence
(compute_affine_dependence
  stmt_a: _11 = *pix_220;
  stmt_b: tmp[7][i_223] = _69;
) -> no dependence
(compute_affine_dependence
  stmt_a: _13 = MEM[(uint8_t *)pix_220 + 1B];
  stmt_b: _21 = MEM[(uint8_t *)pix_220 + 2B];
(analyze_overlapping_iterations 
  (chrec_a = {1B, +, pretmp_493}_1)
  (chrec_b = {2B, +, pretmp_493}_1)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _13 = MEM[(uint8_t *)pix_220 + 1B];
  stmt_b: _23 = MEM[(uint8_t *)pix_220 + 3B];
(analyze_overlapping_iterations 
  (chrec_a = {1B, +, pretmp_493}_1)
  (chrec_b = {3B, +, pretmp_493}_1)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _13 = MEM[(uint8_t *)pix_220 + 1B];
  stmt_b: tmp[0][i_223] = _30;
) -> no dependence
(compute_affine_dependence
  stmt_a: _13 = MEM[(uint8_t *)pix_220 + 1B];
  stmt_b: tmp[2][i_223] = _33;
) -> no dependence
(compute_affine_dependence
  stmt_a: _13 = MEM[(uint8_t *)pix_220 + 1B];
  stmt_b: tmp[1][i_223] = _38;
) -> no dependence
(compute_affine_dependence
  stmt_a: _13 = MEM[(uint8_t *)pix_220 + 1B];
  stmt_b: tmp[3][i_223] = _41;
) -> no dependence
(compute_affine_dependence
  stmt_a: _13 = MEM[(uint8_t *)pix_220 + 1B];
  stmt_b: _43 = MEM[(uint8_t *)pix_220 + 4B];
(analyze_overlapping_iterations 
  (chrec_a = {1B, +, pretmp_493}_1)
  (chrec_b = {4B, +, pretmp_493}_1)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _13 = MEM[(uint8_t *)pix_220 + 1B];
  stmt_b: _45 = MEM[(uint8_t *)pix_220 + 5B];
(analyze_overlapping_iterations 
  (chrec_a = {1B, +, pretmp_493}_1)
  (chrec_b = {5B, +, pretmp_493}_1)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _13 = MEM[(uint8_t *)pix_220 + 1B];
  stmt_b: _49 = MEM[(uint8_t *)pix_220 + 6B];
(analyze_overlapping_iterations 
  (chrec_a = {1B, +, pretmp_493}_1)
  (chrec_b = {6B, +, pretmp_493}_1)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _13 = MEM[(uint8_t *)pix_220 + 1B];
  stmt_b: _51 = MEM[(uint8_t *)pix_220 + 7B];
(analyze_overlapping_iterations 
  (chrec_a = {1B, +, pretmp_493}_1)
  (chrec_b = {7B, +, pretmp_493}_1)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _13 = MEM[(uint8_t *)pix_220 + 1B];
  stmt_b: tmp[4][i_223] = _58;
) -> no dependence
(compute_affine_dependence
  stmt_a: _13 = MEM[(uint8_t *)pix_220 + 1B];
  stmt_b: tmp[6][i_223] = _61;
) -> no dependence
(compute_affine_dependence
  stmt_a: _13 = MEM[(uint8_t *)pix_220 + 1B];
  stmt_b: tmp[5][i_223] = _66;
) -> no dependence
(compute_affine_dependence
  stmt_a: _13 = MEM[(uint8_t *)pix_220 + 1B];
  stmt_b: tmp[7][i_223] = _69;
) -> no dependence
(compute_affine_dependence
  stmt_a: _21 = MEM[(uint8_t *)pix_220 + 2B];
  stmt_b: _23 = MEM[(uint8_t *)pix_220 + 3B];
(analyze_overlapping_iterations 
  (chrec_a = {2B, +, pretmp_493}_1)
  (chrec_b = {3B, +, pretmp_493}_1)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _21 = MEM[(uint8_t *)pix_220 + 2B];
  stmt_b: tmp[0][i_223] = _30;
) -> no dependence
(compute_affine_dependence
  stmt_a: _21 = MEM[(uint8_t *)pix_220 + 2B];
  stmt_b: tmp[2][i_223] = _33;
) -> no dependence
(compute_affine_dependence
  stmt_a: _21 = MEM[(uint8_t *)pix_220 + 2B];
  stmt_b: tmp[1][i_223] = _38;
) -> no dependence
(compute_affine_dependence
  stmt_a: _21 = MEM[(uint8_t *)pix_220 + 2B];
  stmt_b: tmp[3][i_223] = _41;
) -> no dependence
(compute_affine_dependence
  stmt_a: _21 = MEM[(uint8_t *)pix_220 + 2B];
  stmt_b: _43 = MEM[(uint8_t *)pix_220 + 4B];
(analyze_overlapping_iterations 
  (chrec_a = {2B, +, pretmp_493}_1)
  (chrec_b = {4B, +, pretmp_493}_1)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _21 = MEM[(uint8_t *)pix_220 + 2B];
  stmt_b: _45 = MEM[(uint8_t *)pix_220 + 5B];
(analyze_overlapping_iterations 
  (chrec_a = {2B, +, pretmp_493}_1)
  (chrec_b = {5B, +, pretmp_493}_1)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _21 = MEM[(uint8_t *)pix_220 + 2B];
  stmt_b: _49 = MEM[(uint8_t *)pix_220 + 6B];
(analyze_overlapping_iterations 
  (chrec_a = {2B, +, pretmp_493}_1)
  (chrec_b = {6B, +, pretmp_493}_1)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _21 = MEM[(uint8_t *)pix_220 + 2B];
  stmt_b: _51 = MEM[(uint8_t *)pix_220 + 7B];
(analyze_overlapping_iterations 
  (chrec_a = {2B, +, pretmp_493}_1)
  (chrec_b = {7B, +, pretmp_493}_1)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _21 = MEM[(uint8_t *)pix_220 + 2B];
  stmt_b: tmp[4][i_223] = _58;
) -> no dependence
(compute_affine_dependence
  stmt_a: _21 = MEM[(uint8_t *)pix_220 + 2B];
  stmt_b: tmp[6][i_223] = _61;
) -> no dependence
(compute_affine_dependence
  stmt_a: _21 = MEM[(uint8_t *)pix_220 + 2B];
  stmt_b: tmp[5][i_223] = _66;
) -> no dependence
(compute_affine_dependence
  stmt_a: _21 = MEM[(uint8_t *)pix_220 + 2B];
  stmt_b: tmp[7][i_223] = _69;
) -> no dependence
(compute_affine_dependence
  stmt_a: _23 = MEM[(uint8_t *)pix_220 + 3B];
  stmt_b: tmp[0][i_223] = _30;
) -> no dependence
(compute_affine_dependence
  stmt_a: _23 = MEM[(uint8_t *)pix_220 + 3B];
  stmt_b: tmp[2][i_223] = _33;
) -> no dependence
(compute_affine_dependence
  stmt_a: _23 = MEM[(uint8_t *)pix_220 + 3B];
  stmt_b: tmp[1][i_223] = _38;
) -> no dependence
(compute_affine_dependence
  stmt_a: _23 = MEM[(uint8_t *)pix_220 + 3B];
  stmt_b: tmp[3][i_223] = _41;
) -> no dependence
(compute_affine_dependence
  stmt_a: _23 = MEM[(uint8_t *)pix_220 + 3B];
  stmt_b: _43 = MEM[(uint8_t *)pix_220 + 4B];
(analyze_overlapping_iterations 
  (chrec_a = {3B, +, pretmp_493}_1)
  (chrec_b = {4B, +, pretmp_493}_1)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _23 = MEM[(uint8_t *)pix_220 + 3B];
  stmt_b: _45 = MEM[(uint8_t *)pix_220 + 5B];
(analyze_overlapping_iterations 
  (chrec_a = {3B, +, pretmp_493}_1)
  (chrec_b = {5B, +, pretmp_493}_1)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _23 = MEM[(uint8_t *)pix_220 + 3B];
  stmt_b: _49 = MEM[(uint8_t *)pix_220 + 6B];
(analyze_overlapping_iterations 
  (chrec_a = {3B, +, pretmp_493}_1)
  (chrec_b = {6B, +, pretmp_493}_1)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _23 = MEM[(uint8_t *)pix_220 + 3B];
  stmt_b: _51 = MEM[(uint8_t *)pix_220 + 7B];
(analyze_overlapping_iterations 
  (chrec_a = {3B, +, pretmp_493}_1)
  (chrec_b = {7B, +, pretmp_493}_1)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _23 = MEM[(uint8_t *)pix_220 + 3B];
  stmt_b: tmp[4][i_223] = _58;
) -> no dependence
(compute_affine_dependence
  stmt_a: _23 = MEM[(uint8_t *)pix_220 + 3B];
  stmt_b: tmp[6][i_223] = _61;
) -> no dependence
(compute_affine_dependence
  stmt_a: _23 = MEM[(uint8_t *)pix_220 + 3B];
  stmt_b: tmp[5][i_223] = _66;
) -> no dependence
(compute_affine_dependence
  stmt_a: _23 = MEM[(uint8_t *)pix_220 + 3B];
  stmt_b: tmp[7][i_223] = _69;
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[0][i_223] = _30;
  stmt_b: tmp[2][i_223] = _33;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[0][i_223] = _30;
  stmt_b: tmp[1][i_223] = _38;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 1)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[0][i_223] = _30;
  stmt_b: tmp[3][i_223] = _41;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[0][i_223] = _30;
  stmt_b: _43 = MEM[(uint8_t *)pix_220 + 4B];
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[0][i_223] = _30;
  stmt_b: _45 = MEM[(uint8_t *)pix_220 + 5B];
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[0][i_223] = _30;
  stmt_b: _49 = MEM[(uint8_t *)pix_220 + 6B];
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[0][i_223] = _30;
  stmt_b: _51 = MEM[(uint8_t *)pix_220 + 7B];
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[0][i_223] = _30;
  stmt_b: tmp[4][i_223] = _58;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 4)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[0][i_223] = _30;
  stmt_b: tmp[6][i_223] = _61;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 6)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[0][i_223] = _30;
  stmt_b: tmp[5][i_223] = _66;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 5)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[0][i_223] = _30;
  stmt_b: tmp[7][i_223] = _69;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[2][i_223] = _33;
  stmt_b: tmp[1][i_223] = _38;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 1)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[2][i_223] = _33;
  stmt_b: tmp[3][i_223] = _41;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[2][i_223] = _33;
  stmt_b: _43 = MEM[(uint8_t *)pix_220 + 4B];
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[2][i_223] = _33;
  stmt_b: _45 = MEM[(uint8_t *)pix_220 + 5B];
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[2][i_223] = _33;
  stmt_b: _49 = MEM[(uint8_t *)pix_220 + 6B];
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[2][i_223] = _33;
  stmt_b: _51 = MEM[(uint8_t *)pix_220 + 7B];
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[2][i_223] = _33;
  stmt_b: tmp[4][i_223] = _58;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 4)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[2][i_223] = _33;
  stmt_b: tmp[6][i_223] = _61;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 6)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[2][i_223] = _33;
  stmt_b: tmp[5][i_223] = _66;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 5)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[2][i_223] = _33;
  stmt_b: tmp[7][i_223] = _69;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[1][i_223] = _38;
  stmt_b: tmp[3][i_223] = _41;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[1][i_223] = _38;
  stmt_b: _43 = MEM[(uint8_t *)pix_220 + 4B];
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[1][i_223] = _38;
  stmt_b: _45 = MEM[(uint8_t *)pix_220 + 5B];
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[1][i_223] = _38;
  stmt_b: _49 = MEM[(uint8_t *)pix_220 + 6B];
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[1][i_223] = _38;
  stmt_b: _51 = MEM[(uint8_t *)pix_220 + 7B];
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[1][i_223] = _38;
  stmt_b: tmp[4][i_223] = _58;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 4)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[1][i_223] = _38;
  stmt_b: tmp[6][i_223] = _61;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 6)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[1][i_223] = _38;
  stmt_b: tmp[5][i_223] = _66;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 5)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[1][i_223] = _38;
  stmt_b: tmp[7][i_223] = _69;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[3][i_223] = _41;
  stmt_b: _43 = MEM[(uint8_t *)pix_220 + 4B];
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[3][i_223] = _41;
  stmt_b: _45 = MEM[(uint8_t *)pix_220 + 5B];
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[3][i_223] = _41;
  stmt_b: _49 = MEM[(uint8_t *)pix_220 + 6B];
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[3][i_223] = _41;
  stmt_b: _51 = MEM[(uint8_t *)pix_220 + 7B];
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[3][i_223] = _41;
  stmt_b: tmp[4][i_223] = _58;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 4)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[3][i_223] = _41;
  stmt_b: tmp[6][i_223] = _61;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 6)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[3][i_223] = _41;
  stmt_b: tmp[5][i_223] = _66;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 5)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[3][i_223] = _41;
  stmt_b: tmp[7][i_223] = _69;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _43 = MEM[(uint8_t *)pix_220 + 4B];
  stmt_b: _45 = MEM[(uint8_t *)pix_220 + 5B];
(analyze_overlapping_iterations 
  (chrec_a = {4B, +, pretmp_493}_1)
  (chrec_b = {5B, +, pretmp_493}_1)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _43 = MEM[(uint8_t *)pix_220 + 4B];
  stmt_b: _49 = MEM[(uint8_t *)pix_220 + 6B];
(analyze_overlapping_iterations 
  (chrec_a = {4B, +, pretmp_493}_1)
  (chrec_b = {6B, +, pretmp_493}_1)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _43 = MEM[(uint8_t *)pix_220 + 4B];
  stmt_b: _51 = MEM[(uint8_t *)pix_220 + 7B];
(analyze_overlapping_iterations 
  (chrec_a = {4B, +, pretmp_493}_1)
  (chrec_b = {7B, +, pretmp_493}_1)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _43 = MEM[(uint8_t *)pix_220 + 4B];
  stmt_b: tmp[4][i_223] = _58;
) -> no dependence
(compute_affine_dependence
  stmt_a: _43 = MEM[(uint8_t *)pix_220 + 4B];
  stmt_b: tmp[6][i_223] = _61;
) -> no dependence
(compute_affine_dependence
  stmt_a: _43 = MEM[(uint8_t *)pix_220 + 4B];
  stmt_b: tmp[5][i_223] = _66;
) -> no dependence
(compute_affine_dependence
  stmt_a: _43 = MEM[(uint8_t *)pix_220 + 4B];
  stmt_b: tmp[7][i_223] = _69;
) -> no dependence
(compute_affine_dependence
  stmt_a: _45 = MEM[(uint8_t *)pix_220 + 5B];
  stmt_b: _49 = MEM[(uint8_t *)pix_220 + 6B];
(analyze_overlapping_iterations 
  (chrec_a = {5B, +, pretmp_493}_1)
  (chrec_b = {6B, +, pretmp_493}_1)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _45 = MEM[(uint8_t *)pix_220 + 5B];
  stmt_b: _51 = MEM[(uint8_t *)pix_220 + 7B];
(analyze_overlapping_iterations 
  (chrec_a = {5B, +, pretmp_493}_1)
  (chrec_b = {7B, +, pretmp_493}_1)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _45 = MEM[(uint8_t *)pix_220 + 5B];
  stmt_b: tmp[4][i_223] = _58;
) -> no dependence
(compute_affine_dependence
  stmt_a: _45 = MEM[(uint8_t *)pix_220 + 5B];
  stmt_b: tmp[6][i_223] = _61;
) -> no dependence
(compute_affine_dependence
  stmt_a: _45 = MEM[(uint8_t *)pix_220 + 5B];
  stmt_b: tmp[5][i_223] = _66;
) -> no dependence
(compute_affine_dependence
  stmt_a: _45 = MEM[(uint8_t *)pix_220 + 5B];
  stmt_b: tmp[7][i_223] = _69;
) -> no dependence
(compute_affine_dependence
  stmt_a: _49 = MEM[(uint8_t *)pix_220 + 6B];
  stmt_b: _51 = MEM[(uint8_t *)pix_220 + 7B];
(analyze_overlapping_iterations 
  (chrec_a = {6B, +, pretmp_493}_1)
  (chrec_b = {7B, +, pretmp_493}_1)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _49 = MEM[(uint8_t *)pix_220 + 6B];
  stmt_b: tmp[4][i_223] = _58;
) -> no dependence
(compute_affine_dependence
  stmt_a: _49 = MEM[(uint8_t *)pix_220 + 6B];
  stmt_b: tmp[6][i_223] = _61;
) -> no dependence
(compute_affine_dependence
  stmt_a: _49 = MEM[(uint8_t *)pix_220 + 6B];
  stmt_b: tmp[5][i_223] = _66;
) -> no dependence
(compute_affine_dependence
  stmt_a: _49 = MEM[(uint8_t *)pix_220 + 6B];
  stmt_b: tmp[7][i_223] = _69;
) -> no dependence
(compute_affine_dependence
  stmt_a: _51 = MEM[(uint8_t *)pix_220 + 7B];
  stmt_b: tmp[4][i_223] = _58;
) -> no dependence
(compute_affine_dependence
  stmt_a: _51 = MEM[(uint8_t *)pix_220 + 7B];
  stmt_b: tmp[6][i_223] = _61;
) -> no dependence
(compute_affine_dependence
  stmt_a: _51 = MEM[(uint8_t *)pix_220 + 7B];
  stmt_b: tmp[5][i_223] = _66;
) -> no dependence
(compute_affine_dependence
  stmt_a: _51 = MEM[(uint8_t *)pix_220 + 7B];
  stmt_b: tmp[7][i_223] = _69;
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[4][i_223] = _58;
  stmt_b: tmp[6][i_223] = _61;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 4)
  (chrec_b = 6)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[4][i_223] = _58;
  stmt_b: tmp[5][i_223] = _66;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 4)
  (chrec_b = 5)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[4][i_223] = _58;
  stmt_b: tmp[7][i_223] = _69;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 4)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[6][i_223] = _61;
  stmt_b: tmp[5][i_223] = _66;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 6)
  (chrec_b = 5)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[6][i_223] = _61;
  stmt_b: tmp[7][i_223] = _69;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 6)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: tmp[5][i_223] = _66;
  stmt_b: tmp[7][i_223] = _69;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 5)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _11 = *pix_220;
  stmt_b: _11 = *pix_220;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, pretmp_493}_1)
  (chrec_b = {0B, +, pretmp_493}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _13 = MEM[(uint8_t *)pix_220 + 1B];
  stmt_b: _13 = MEM[(uint8_t *)pix_220 + 1B];
(analyze_overlapping_iterations 
  (chrec_a = {1B, +, pretmp_493}_1)
  (chrec_b = {1B, +, pretmp_493}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _21 = MEM[(uint8_t *)pix_220 + 2B];
  stmt_b: _21 = MEM[(uint8_t *)pix_220 + 2B];
(analyze_overlapping_iterations 
  (chrec_a = {2B, +, pretmp_493}_1)
  (chrec_b = {2B, +, pretmp_493}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _23 = MEM[(uint8_t *)pix_220 + 3B];
  stmt_b: _23 = MEM[(uint8_t *)pix_220 + 3B];
(analyze_overlapping_iterations 
  (chrec_a = {3B, +, pretmp_493}_1)
  (chrec_b = {3B, +, pretmp_493}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: tmp[0][i_223] = _30;
  stmt_b: tmp[0][i_223] = _30;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 0)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: tmp[2][i_223] = _33;
  stmt_b: tmp[2][i_223] = _33;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: tmp[1][i_223] = _38;
  stmt_b: tmp[1][i_223] = _38;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: tmp[3][i_223] = _41;
  stmt_b: tmp[3][i_223] = _41;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _43 = MEM[(uint8_t *)pix_220 + 4B];
  stmt_b: _43 = MEM[(uint8_t *)pix_220 + 4B];
(analyze_overlapping_iterations 
  (chrec_a = {4B, +, pretmp_493}_1)
  (chrec_b = {4B, +, pretmp_493}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _45 = MEM[(uint8_t *)pix_220 + 5B];
  stmt_b: _45 = MEM[(uint8_t *)pix_220 + 5B];
(analyze_overlapping_iterations 
  (chrec_a = {5B, +, pretmp_493}_1)
  (chrec_b = {5B, +, pretmp_493}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _49 = MEM[(uint8_t *)pix_220 + 6B];
  stmt_b: _49 = MEM[(uint8_t *)pix_220 + 6B];
(analyze_overlapping_iterations 
  (chrec_a = {6B, +, pretmp_493}_1)
  (chrec_b = {6B, +, pretmp_493}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _51 = MEM[(uint8_t *)pix_220 + 7B];
  stmt_b: _51 = MEM[(uint8_t *)pix_220 + 7B];
(analyze_overlapping_iterations 
  (chrec_a = {7B, +, pretmp_493}_1)
  (chrec_b = {7B, +, pretmp_493}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: tmp[4][i_223] = _58;
  stmt_b: tmp[4][i_223] = _58;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 4)
  (chrec_b = 4)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: tmp[6][i_223] = _61;
  stmt_b: tmp[6][i_223] = _61;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 6)
  (chrec_b = 6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: tmp[5][i_223] = _66;
  stmt_b: tmp[5][i_223] = _66;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 5)
  (chrec_b = 5)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: tmp[7][i_223] = _69;
  stmt_b: tmp[7][i_223] = _69;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_1)
  (chrec_b = {0, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 7)
  (chrec_b = 7)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/pixel.c:308:5: note: === vect_determine_vectorization_factor ===
common/pixel.c:308:5: note: ==> examining phi: pix_220 = PHI <pix_74(4), pix_9(D)(2)>

common/pixel.c:308:5: note: ==> examining phi: i_223 = PHI <i_71(4), 0(2)>

common/pixel.c:308:5: note: ==> examining phi: .MEM_226 = PHI <.MEM_70(4), .MEM_10(D)(2)>

common/pixel.c:308:5: note: ==> examining phi: ivtmp_490 = PHI <ivtmp_484(4), 8(2)>

common/pixel.c:308:5: note: ==> examining statement: # DEBUG i => i_223

common/pixel.c:308:5: note: skip.
common/pixel.c:308:5: note: ==> examining statement: # DEBUG pix => pix_220

common/pixel.c:308:5: note: skip.
common/pixel.c:308:5: note: ==> examining statement: _11 = *pix_220;

common/pixel.c:308:5: note: get vectype for scalar type:  unsigned char
common/pixel.c:308:5: note: vectype: vector(16) unsigned char
common/pixel.c:308:5: note: nunits = 16
common/pixel.c:308:5: note: ==> examining statement: _12 = (int) _11;

common/pixel.c:308:5: note: get vectype for scalar type:  int
common/pixel.c:308:5: note: vectype: vector(4) int
common/pixel.c:308:5: note: get vectype for scalar type:  unsigned char
common/pixel.c:308:5: note: vectype: vector(16) unsigned char
common/pixel.c:308:5: note: nunits = 16
common/pixel.c:308:5: note: ==> examining statement: _13 = MEM[(uint8_t *)pix_220 + 1B];

common/pixel.c:308:5: note: get vectype for scalar type:  unsigned char
common/pixel.c:308:5: note: vectype: vector(16) unsigned char
common/pixel.c:308:5: note: nunits = 16
common/pixel.c:308:5: note: ==> examining statement: _14 = (int) _13;

common/pixel.c:308:5: note: get vectype for scalar type:  int
common/pixel.c:308:5: note: vectype: vector(4) int
common/pixel.c:308:5: note: get vectype for scalar type:  unsigned char
common/pixel.c:308:5: note: vectype: vector(16) unsigned char
common/pixel.c:308:5: note: nunits = 16
common/pixel.c:308:5: note: ==> examining statement: t0_15 = _12 + _14;

common/pixel.c:308:5: note: get vectype for scalar type:  int
common/pixel.c:308:5: note: vectype: vector(4) int
common/pixel.c:308:5: note: get vectype for scalar type:  int
common/pixel.c:308:5: note: vectype: vector(4) int
common/pixel.c:308:5: note: nunits = 4
common/pixel.c:308:5: note: ==> examining statement: # DEBUG t0 => t0_15

common/pixel.c:308:5: note: skip.
common/pixel.c:308:5: note: ==> examining statement: t1_20 = _12 - _14;

common/pixel.c:308:5: note: get vectype for scalar type:  int
common/pixel.c:308:5: note: vectype: vector(4) int
common/pixel.c:308:5: note: get vectype for scalar type:  int
common/pixel.c:308:5: note: vectype: vector(4) int
common/pixel.c:308:5: note: nunits = 4
common/pixel.c:308:5: note: ==> examining statement: # DEBUG t1 => t1_20

common/pixel.c:308:5: note: skip.
common/pixel.c:308:5: note: ==> examining statement: _21 = MEM[(uint8_t *)pix_220 + 2B];

common/pixel.c:308:5: note: get vectype for scalar type:  unsigned char
common/pixel.c:308:5: note: vectype: vector(16) unsigned char
common/pixel.c:308:5: note: nunits = 16
common/pixel.c:308:5: note: ==> examining statement: _22 = (int) _21;

common/pixel.c:308:5: note: get vectype for scalar type:  int
common/pixel.c:308:5: note: vectype: vector(4) int
common/pixel.c:308:5: note: get vectype for scalar type:  unsigned char
common/pixel.c:308:5: note: vectype: vector(16) unsigned char
common/pixel.c:308:5: note: nunits = 16
common/pixel.c:308:5: note: ==> examining statement: _23 = MEM[(uint8_t *)pix_220 + 3B];

common/pixel.c:308:5: note: get vectype for scalar type:  unsigned char
common/pixel.c:308:5: note: vectype: vector(16) unsigned char
common/pixel.c:308:5: note: nunits = 16
common/pixel.c:308:5: note: ==> examining statement: _24 = (int) _23;

common/pixel.c:308:5: note: get vectype for scalar type:  int
common/pixel.c:308:5: note: vectype: vector(4) int
common/pixel.c:308:5: note: get vectype for scalar type:  unsigned char
common/pixel.c:308:5: note: vectype: vector(16) unsigned char
common/pixel.c:308:5: note: nunits = 16
common/pixel.c:308:5: note: ==> examining statement: t2_25 = _22 + _24;

common/pixel.c:308:5: note: get vectype for scalar type:  int
common/pixel.c:308:5: note: vectype: vector(4) int
common/pixel.c:308:5: note: get vectype for scalar type:  int
common/pixel.c:308:5: note: vectype: vector(4) int
common/pixel.c:308:5: note: nunits = 4
common/pixel.c:308:5: note: ==> examining statement: # DEBUG t2 => t2_25

common/pixel.c:308:5: note: skip.
common/pixel.c:308:5: note: ==> examining statement: t3_26 = _22 - _24;

common/pixel.c:308:5: note: get vectype for scalar type:  int
common/pixel.c:308:5: note: vectype: vector(4) int
common/pixel.c:308:5: note: get vectype for scalar type:  int
common/pixel.c:308:5: note: vectype: vector(4) int
common/pixel.c:308:5: note: nunits = 4
common/pixel.c:308:5: note: ==> examining statement: # DEBUG t3 => t3_26

common/pixel.c:308:5: note: skip.
common/pixel.c:308:5: note: ==> examining statement: _27 = (unsigned short) t0_15;

common/pixel.c:308:5: note: get vectype for scalar type:  unsigned short
common/pixel.c:308:5: note: vectype: vector(8) unsigned short
common/pixel.c:308:5: note: get vectype for scalar type:  unsigned short
common/pixel.c:308:5: note: vectype: vector(8) unsigned short
common/pixel.c:308:5: note: nunits = 8
common/pixel.c:308:5: note: ==> examining statement: _28 = (unsigned short) t2_25;

common/pixel.c:308:5: note: get vectype for scalar type:  unsigned short
common/pixel.c:308:5: note: vectype: vector(8) unsigned short
common/pixel.c:308:5: note: get vectype for scalar type:  unsigned short
common/pixel.c:308:5: note: vectype: vector(8) unsigned short
common/pixel.c:308:5: note: nunits = 8
common/pixel.c:308:5: note: ==> examining statement: _29 = _27 + _28;

common/pixel.c:308:5: note: get vectype for scalar type:  unsigned short
common/pixel.c:308:5: note: vectype: vector(8) unsigned short
common/pixel.c:308:5: note: get vectype for scalar type:  unsigned short
common/pixel.c:308:5: note: vectype: vector(8) unsigned short
common/pixel.c:308:5: note: nunits = 8
common/pixel.c:308:5: note: ==> examining statement: _30 = (short int) _29;

common/pixel.c:308:5: note: get vectype for scalar type:  short int
common/pixel.c:308:5: note: vectype: vector(8) short int
common/pixel.c:308:5: note: get vectype for scalar type:  short int
common/pixel.c:308:5: note: vectype: vector(8) short int
common/pixel.c:308:5: note: nunits = 8
common/pixel.c:308:5: note: ==> examining statement: tmp[0][i_223] = _30;

common/pixel.c:308:5: note: get vectype for scalar type:  int16_t
common/pixel.c:308:5: note: vectype: vector(8) short int
common/pixel.c:308:5: note: nunits = 8
common/pixel.c:308:5: note: ==> examining statement: _32 = _27 - _28;

common/pixel.c:308:5: note: get vectype for scalar type:  unsigned short
common/pixel.c:308:5: note: vectype: vector(8) unsigned short
common/pixel.c:308:5: note: get vectype for scalar type:  unsigned short
common/pixel.c:308:5: note: vectype: vector(8) unsigned short
common/pixel.c:308:5: note: nunits = 8
common/pixel.c:308:5: note: ==> examining statement: _33 = (short int) _32;

common/pixel.c:308:5: note: get vectype for scalar type:  short int
common/pixel.c:308:5: note: vectype: vector(8) short int
common/pixel.c:308:5: note: get vectype for scalar type:  short int
common/pixel.c:308:5: note: vectype: vector(8) short int
common/pixel.c:308:5: note: nunits = 8
common/pixel.c:308:5: note: ==> examining statement: tmp[2][i_223] = _33;

common/pixel.c:308:5: note: get vectype for scalar type:  int16_t
common/pixel.c:308:5: note: vectype: vector(8) short int
common/pixel.c:308:5: note: nunits = 8
common/pixel.c:308:5: note: ==> examining statement: _35 = (unsigned short) t1_20;

common/pixel.c:308:5: note: get vectype for scalar type:  unsigned short
common/pixel.c:308:5: note: vectype: vector(8) unsigned short
common/pixel.c:308:5: note: get vectype for scalar type:  unsigned short
common/pixel.c:308:5: note: vectype: vector(8) unsigned short
common/pixel.c:308:5: note: nunits = 8
common/pixel.c:308:5: note: ==> examining statement: _36 = (unsigned short) t3_26;

common/pixel.c:308:5: note: get vectype for scalar type:  unsigned short
common/pixel.c:308:5: note: vectype: vector(8) unsigned short
common/pixel.c:308:5: note: get vectype for scalar type:  unsigned short
common/pixel.c:308:5: note: vectype: vector(8) unsigned short
common/pixel.c:308:5: note: nunits = 8
common/pixel.c:308:5: note: ==> examining statement: _37 = _35 + _36;

common/pixel.c:308:5: note: get vectype for scalar type:  unsigned short
common/pixel.c:308:5: note: vectype: vector(8) unsigned short
common/pixel.c:308:5: note: get vectype for scalar type:  unsigned short
common/pixel.c:308:5: note: vectype: vector(8) unsigned short
common/pixel.c:308:5: note: nunits = 8
common/pixel.c:308:5: note: ==> examining statement: _38 = (short int) _37;

common/pixel.c:308:5: note: get vectype for scalar type:  short int
common/pixel.c:308:5: note: vectype: vector(8) short int
common/pixel.c:308:5: note: get vectype for scalar type:  short int
common/pixel.c:308:5: note: vectype: vector(8) short int
common/pixel.c:308:5: note: nunits = 8
common/pixel.c:308:5: note: ==> examining statement: tmp[1][i_223] = _38;

common/pixel.c:308:5: note: get vectype for scalar type:  int16_t
common/pixel.c:308:5: note: vectype: vector(8) short int
common/pixel.c:308:5: note: nunits = 8
common/pixel.c:308:5: note: ==> examining statement: _40 = _35 - _36;

common/pixel.c:308:5: note: get vectype for scalar type:  unsigned short
common/pixel.c:308:5: note: vectype: vector(8) unsigned short
common/pixel.c:308:5: note: get vectype for scalar type:  unsigned short
common/pixel.c:308:5: note: vectype: vector(8) unsigned short
common/pixel.c:308:5: note: nunits = 8
common/pixel.c:308:5: note: ==> examining statement: _41 = (short int) _40;

common/pixel.c:308:5: note: get vectype for scalar type:  short int
common/pixel.c:308:5: note: vectype: vector(8) short int
common/pixel.c:308:5: note: get vectype for scalar type:  short int
common/pixel.c:308:5: note: vectype: vector(8) short int
common/pixel.c:308:5: note: nunits = 8
common/pixel.c:308:5: note: ==> examining statement: tmp[3][i_223] = _41;

common/pixel.c:308:5: note: get vectype for scalar type:  int16_t
common/pixel.c:308:5: note: vectype: vector(8) short int
common/pixel.c:308:5: note: nunits = 8
common/pixel.c:308:5: note: ==> examining statement: _43 = MEM[(uint8_t *)pix_220 + 4B];

common/pixel.c:308:5: note: get vectype for scalar type:  unsigned char
common/pixel.c:308:5: note: vectype: vector(16) unsigned char
common/pixel.c:308:5: note: nunits = 16
common/pixel.c:308:5: note: ==> examining statement: _44 = (int) _43;

common/pixel.c:308:5: note: get vectype for scalar type:  int
common/pixel.c:308:5: note: vectype: vector(4) int
common/pixel.c:308:5: note: get vectype for scalar type:  unsigned char
common/pixel.c:308:5: note: vectype: vector(16) unsigned char
common/pixel.c:308:5: note: nunits = 16
common/pixel.c:308:5: note: ==> examining statement: _45 = MEM[(uint8_t *)pix_220 + 5B];

common/pixel.c:308:5: note: get vectype for scalar type:  unsigned char
common/pixel.c:308:5: note: vectype: vector(16) unsigned char
common/pixel.c:308:5: note: nunits = 16
common/pixel.c:308:5: note: ==> examining statement: _46 = (int) _45;

common/pixel.c:308:5: note: get vectype for scalar type:  int
common/pixel.c:308:5: note: vectype: vector(4) int
common/pixel.c:308:5: note: get vectype for scalar type:  unsigned char
common/pixel.c:308:5: note: vectype: vector(16) unsigned char
common/pixel.c:308:5: note: nunits = 16
common/pixel.c:308:5: note: ==> examining statement: t0_47 = _44 + _46;

common/pixel.c:308:5: note: get vectype for scalar type:  int
common/pixel.c:308:5: note: vectype: vector(4) int
common/pixel.c:308:5: note: get vectype for scalar type:  int
common/pixel.c:308:5: note: vectype: vector(4) int
common/pixel.c:308:5: note: nunits = 4
common/pixel.c:308:5: note: ==> examining statement: # DEBUG t0 => t0_47

common/pixel.c:308:5: note: skip.
common/pixel.c:308:5: note: ==> examining statement: t1_48 = _44 - _46;

common/pixel.c:308:5: note: get vectype for scalar type:  int
common/pixel.c:308:5: note: vectype: vector(4) int
common/pixel.c:308:5: note: get vectype for scalar type:  int
common/pixel.c:308:5: note: vectype: vector(4) int
common/pixel.c:308:5: note: nunits = 4
common/pixel.c:308:5: note: ==> examining statement: # DEBUG t1 => t1_48

common/pixel.c:308:5: note: skip.
common/pixel.c:308:5: note: ==> examining statement: _49 = MEM[(uint8_t *)pix_220 + 6B];

common/pixel.c:308:5: note: get vectype for scalar type:  unsigned char
common/pixel.c:308:5: note: vectype: vector(16) unsigned char
common/pixel.c:308:5: note: nunits = 16
common/pixel.c:308:5: note: ==> examining statement: _50 = (int) _49;

common/pixel.c:308:5: note: get vectype for scalar type:  int
common/pixel.c:308:5: note: vectype: vector(4) int
common/pixel.c:308:5: note: get vectype for scalar type:  unsigned char
common/pixel.c:308:5: note: vectype: vector(16) unsigned char
common/pixel.c:308:5: note: nunits = 16
common/pixel.c:308:5: note: ==> examining statement: _51 = MEM[(uint8_t *)pix_220 + 7B];

common/pixel.c:308:5: note: get vectype for scalar type:  unsigned char
common/pixel.c:308:5: note: vectype: vector(16) unsigned char
common/pixel.c:308:5: note: nunits = 16
common/pixel.c:308:5: note: ==> examining statement: _52 = (int) _51;

common/pixel.c:308:5: note: get vectype for scalar type:  int
common/pixel.c:308:5: note: vectype: vector(4) int
common/pixel.c:308:5: note: get vectype for scalar type:  unsigned char
common/pixel.c:308:5: note: vectype: vector(16) unsigned char
common/pixel.c:308:5: note: nunits = 16
common/pixel.c:308:5: note: ==> examining statement: t2_53 = _50 + _52;

common/pixel.c:308:5: note: get vectype for scalar type:  int
common/pixel.c:308:5: note: vectype: vector(4) int
common/pixel.c:308:5: note: get vectype for scalar type:  int
common/pixel.c:308:5: note: vectype: vector(4) int
common/pixel.c:308:5: note: nunits = 4
common/pixel.c:308:5: note: ==> examining statement: # DEBUG t2 => t2_53

common/pixel.c:308:5: note: skip.
common/pixel.c:308:5: note: ==> examining statement: t3_54 = _50 - _52;

common/pixel.c:308:5: note: get vectype for scalar type:  int
common/pixel.c:308:5: note: vectype: vector(4) int
common/pixel.c:308:5: note: get vectype for scalar type:  int
common/pixel.c:308:5: note: vectype: vector(4) int
common/pixel.c:308:5: note: nunits = 4
common/pixel.c:308:5: note: ==> examining statement: # DEBUG t3 => t3_54

common/pixel.c:308:5: note: skip.
common/pixel.c:308:5: note: ==> examining statement: _55 = (unsigned short) t0_47;

common/pixel.c:308:5: note: get vectype for scalar type:  unsigned short
common/pixel.c:308:5: note: vectype: vector(8) unsigned short
common/pixel.c:308:5: note: get vectype for scalar type:  unsigned short
common/pixel.c:308:5: note: vectype: vector(8) unsigned short
common/pixel.c:308:5: note: nunits = 8
common/pixel.c:308:5: note: ==> examining statement: _56 = (unsigned short) t2_53;

common/pixel.c:308:5: note: get vectype for scalar type:  unsigned short
common/pixel.c:308:5: note: vectype: vector(8) unsigned short
common/pixel.c:308:5: note: get vectype for scalar type:  unsigned short
common/pixel.c:308:5: note: vectype: vector(8) unsigned short
common/pixel.c:308:5: note: nunits = 8
common/pixel.c:308:5: note: ==> examining statement: _57 = _55 + _56;

common/pixel.c:308:5: note: get vectype for scalar type:  unsigned short
common/pixel.c:308:5: note: vectype: vector(8) unsigned short
common/pixel.c:308:5: note: get vectype for scalar type:  unsigned short
common/pixel.c:308:5: note: vectype: vector(8) unsigned short
common/pixel.c:308:5: note: nunits = 8
common/pixel.c:308:5: note: ==> examining statement: _58 = (short int) _57;

common/pixel.c:308:5: note: get vectype for scalar type:  short int
common/pixel.c:308:5: note: vectype: vector(8) short int
common/pixel.c:308:5: note: get vectype for scalar type:  short int
common/pixel.c:308:5: note: vectype: vector(8) short int
common/pixel.c:308:5: note: nunits = 8
common/pixel.c:308:5: note: ==> examining statement: tmp[4][i_223] = _58;

common/pixel.c:308:5: note: get vectype for scalar type:  int16_t
common/pixel.c:308:5: note: vectype: vector(8) short int
common/pixel.c:308:5: note: nunits = 8
common/pixel.c:308:5: note: ==> examining statement: _60 = _55 - _56;

common/pixel.c:308:5: note: get vectype for scalar type:  unsigned short
common/pixel.c:308:5: note: vectype: vector(8) unsigned short
common/pixel.c:308:5: note: get vectype for scalar type:  unsigned short
common/pixel.c:308:5: note: vectype: vector(8) unsigned short
common/pixel.c:308:5: note: nunits = 8
common/pixel.c:308:5: note: ==> examining statement: _61 = (short int) _60;

common/pixel.c:308:5: note: get vectype for scalar type:  short int
common/pixel.c:308:5: note: vectype: vector(8) short int
common/pixel.c:308:5: note: get vectype for scalar type:  short int
common/pixel.c:308:5: note: vectype: vector(8) short int
common/pixel.c:308:5: note: nunits = 8
common/pixel.c:308:5: note: ==> examining statement: tmp[6][i_223] = _61;

common/pixel.c:308:5: note: get vectype for scalar type:  int16_t
common/pixel.c:308:5: note: vectype: vector(8) short int
common/pixel.c:308:5: note: nunits = 8
common/pixel.c:308:5: note: ==> examining statement: _63 = (unsigned short) t1_48;

common/pixel.c:308:5: note: get vectype for scalar type:  unsigned short
common/pixel.c:308:5: note: vectype: vector(8) unsigned short
common/pixel.c:308:5: note: get vectype for scalar type:  unsigned short
common/pixel.c:308:5: note: vectype: vector(8) unsigned short
common/pixel.c:308:5: note: nunits = 8
common/pixel.c:308:5: note: ==> examining statement: _64 = (unsigned short) t3_54;

common/pixel.c:308:5: note: get vectype for scalar type:  unsigned short
common/pixel.c:308:5: note: vectype: vector(8) unsigned short
common/pixel.c:308:5: note: get vectype for scalar type:  unsigned short
common/pixel.c:308:5: note: vectype: vector(8) unsigned short
common/pixel.c:308:5: note: nunits = 8
common/pixel.c:308:5: note: ==> examining statement: _65 = _63 + _64;

common/pixel.c:308:5: note: get vectype for scalar type:  unsigned short
common/pixel.c:308:5: note: vectype: vector(8) unsigned short
common/pixel.c:308:5: note: get vectype for scalar type:  unsigned short
common/pixel.c:308:5: note: vectype: vector(8) unsigned short
common/pixel.c:308:5: note: nunits = 8
common/pixel.c:308:5: note: ==> examining statement: _66 = (short int) _65;

common/pixel.c:308:5: note: get vectype for scalar type:  short int
common/pixel.c:308:5: note: vectype: vector(8) short int
common/pixel.c:308:5: note: get vectype for scalar type:  short int
common/pixel.c:308:5: note: vectype: vector(8) short int
common/pixel.c:308:5: note: nunits = 8
common/pixel.c:308:5: note: ==> examining statement: tmp[5][i_223] = _66;

common/pixel.c:308:5: note: get vectype for scalar type:  int16_t
common/pixel.c:308:5: note: vectype: vector(8) short int
common/pixel.c:308:5: note: nunits = 8
common/pixel.c:308:5: note: ==> examining statement: _68 = _63 - _64;

common/pixel.c:308:5: note: get vectype for scalar type:  unsigned short
common/pixel.c:308:5: note: vectype: vector(8) unsigned short
common/pixel.c:308:5: note: get vectype for scalar type:  unsigned short
common/pixel.c:308:5: note: vectype: vector(8) unsigned short
common/pixel.c:308:5: note: nunits = 8
common/pixel.c:308:5: note: ==> examining statement: _69 = (short int) _68;

common/pixel.c:308:5: note: get vectype for scalar type:  short int
common/pixel.c:308:5: note: vectype: vector(8) short int
common/pixel.c:308:5: note: get vectype for scalar type:  short int
common/pixel.c:308:5: note: vectype: vector(8) short int
common/pixel.c:308:5: note: nunits = 8
common/pixel.c:308:5: note: ==> examining statement: tmp[7][i_223] = _69;

common/pixel.c:308:5: note: get vectype for scalar type:  int16_t
common/pixel.c:308:5: note: vectype: vector(8) short int
common/pixel.c:308:5: note: nunits = 8
common/pixel.c:308:5: note: ==> examining statement: i_71 = i_223 + 1;

common/pixel.c:308:5: note: skip.
common/pixel.c:308:5: note: ==> examining statement: # DEBUG i => i_71

common/pixel.c:308:5: note: skip.
common/pixel.c:308:5: note: ==> examining statement: pix_74 = pix_220 + pretmp_493;

common/pixel.c:308:5: note: skip.
common/pixel.c:308:5: note: ==> examining statement: # DEBUG pix => pix_74

common/pixel.c:308:5: note: skip.
common/pixel.c:308:5: note: ==> examining statement: # DEBUG i => i_71

common/pixel.c:308:5: note: skip.
common/pixel.c:308:5: note: ==> examining statement: # DEBUG pix => pix_74

common/pixel.c:308:5: note: skip.
common/pixel.c:308:5: note: ==> examining statement: ivtmp_484 = ivtmp_490 - 1;

common/pixel.c:308:5: note: skip.
common/pixel.c:308:5: note: ==> examining statement: if (ivtmp_484 != 0)

common/pixel.c:308:5: note: skip.
common/pixel.c:308:5: note: vectorization factor = 16
common/pixel.c:308:5: note: === vect_analyze_data_refs_alignment ===
common/pixel.c:308:5: note: vect_compute_data_ref_alignment:
common/pixel.c:308:5: note: vect_compute_data_ref_alignment:
common/pixel.c:308:5: note: vect_compute_data_ref_alignment:
common/pixel.c:308:5: note: vect_compute_data_ref_alignment:
common/pixel.c:308:5: note: vect_compute_data_ref_alignment:
common/pixel.c:308:5: note: misalign = 0 bytes of ref tmp[0][i_223]
common/pixel.c:308:5: note: vect_compute_data_ref_alignment:
common/pixel.c:308:5: note: misalign = 0 bytes of ref tmp[2][i_223]
common/pixel.c:308:5: note: vect_compute_data_ref_alignment:
common/pixel.c:308:5: note: misalign = 0 bytes of ref tmp[1][i_223]
common/pixel.c:308:5: note: vect_compute_data_ref_alignment:
common/pixel.c:308:5: note: misalign = 0 bytes of ref tmp[3][i_223]
common/pixel.c:308:5: note: vect_compute_data_ref_alignment:
common/pixel.c:308:5: note: vect_compute_data_ref_alignment:
common/pixel.c:308:5: note: vect_compute_data_ref_alignment:
common/pixel.c:308:5: note: vect_compute_data_ref_alignment:
common/pixel.c:308:5: note: vect_compute_data_ref_alignment:
common/pixel.c:308:5: note: misalign = 0 bytes of ref tmp[4][i_223]
common/pixel.c:308:5: note: vect_compute_data_ref_alignment:
common/pixel.c:308:5: note: misalign = 0 bytes of ref tmp[6][i_223]
common/pixel.c:308:5: note: vect_compute_data_ref_alignment:
common/pixel.c:308:5: note: misalign = 0 bytes of ref tmp[5][i_223]
common/pixel.c:308:5: note: vect_compute_data_ref_alignment:
common/pixel.c:308:5: note: misalign = 0 bytes of ref tmp[7][i_223]
common/pixel.c:308:5: note: === vect_prune_runtime_alias_test_list ===
common/pixel.c:308:5: note: === vect_enhance_data_refs_alignment ===
common/pixel.c:308:5: note: vect_can_advance_ivs_p:
common/pixel.c:308:5: note: Analyze phi: pix_220 = PHI <pix_74(4), pix_9(D)(2)>

common/pixel.c:308:5: note: Analyze phi: i_223 = PHI <i_71(4), 0(2)>

common/pixel.c:308:5: note: Analyze phi: .MEM_226 = PHI <.MEM_70(4), .MEM_10(D)(2)>

common/pixel.c:308:5: note: virtual phi. skip.
common/pixel.c:308:5: note: Analyze phi: ivtmp_490 = PHI <ivtmp_484(4), 8(2)>

common/pixel.c:308:5: note: Setting misalignment to -1.
common/pixel.c:308:5: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:308:5: note: vect_get_data_access_cost: inside_cost = 2, outside_cost = 0.
common/pixel.c:308:5: note: Setting misalignment to -1.
common/pixel.c:308:5: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:308:5: note: vect_get_data_access_cost: inside_cost = 4, outside_cost = 0.
common/pixel.c:308:5: note: Setting misalignment to -1.
common/pixel.c:308:5: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:308:5: note: vect_get_data_access_cost: inside_cost = 6, outside_cost = 0.
common/pixel.c:308:5: note: Setting misalignment to -1.
common/pixel.c:308:5: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:308:5: note: vect_get_data_access_cost: inside_cost = 8, outside_cost = 0.
common/pixel.c:308:5: note: vect_model_store_cost: aligned.
common/pixel.c:308:5: note: vect_get_data_access_cost: inside_cost = 10, outside_cost = 0.
common/pixel.c:308:5: note: vect_model_store_cost: aligned.
common/pixel.c:308:5: note: vect_get_data_access_cost: inside_cost = 12, outside_cost = 0.
common/pixel.c:308:5: note: vect_model_store_cost: aligned.
common/pixel.c:308:5: note: vect_get_data_access_cost: inside_cost = 14, outside_cost = 0.
common/pixel.c:308:5: note: vect_model_store_cost: aligned.
common/pixel.c:308:5: note: vect_get_data_access_cost: inside_cost = 16, outside_cost = 0.
common/pixel.c:308:5: note: Setting misalignment to -1.
common/pixel.c:308:5: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:308:5: note: vect_get_data_access_cost: inside_cost = 18, outside_cost = 0.
common/pixel.c:308:5: note: Setting misalignment to -1.
common/pixel.c:308:5: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:308:5: note: vect_get_data_access_cost: inside_cost = 20, outside_cost = 0.
common/pixel.c:308:5: note: Setting misalignment to -1.
common/pixel.c:308:5: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:308:5: note: vect_get_data_access_cost: inside_cost = 22, outside_cost = 0.
common/pixel.c:308:5: note: Setting misalignment to -1.
common/pixel.c:308:5: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:308:5: note: vect_get_data_access_cost: inside_cost = 24, outside_cost = 0.
common/pixel.c:308:5: note: vect_model_store_cost: aligned.
common/pixel.c:308:5: note: vect_get_data_access_cost: inside_cost = 26, outside_cost = 0.
common/pixel.c:308:5: note: vect_model_store_cost: aligned.
common/pixel.c:308:5: note: vect_get_data_access_cost: inside_cost = 28, outside_cost = 0.
common/pixel.c:308:5: note: vect_model_store_cost: aligned.
common/pixel.c:308:5: note: vect_get_data_access_cost: inside_cost = 30, outside_cost = 0.
common/pixel.c:308:5: note: vect_model_store_cost: aligned.
common/pixel.c:308:5: note: vect_get_data_access_cost: inside_cost = 32, outside_cost = 0.
common/pixel.c:308:5: note: === vect_analyze_slp ===
common/pixel.c:308:5: note: === vect_make_slp_decision ===
common/pixel.c:308:5: note: === vect_detect_hybrid_slp ===
common/pixel.c:308:5: note: === vect_analyze_loop_operations ===
common/pixel.c:308:5: note: examining phi: pix_220 = PHI <pix_74(4), pix_9(D)(2)>

common/pixel.c:308:5: note: examining phi: i_223 = PHI <i_71(4), 0(2)>

common/pixel.c:308:5: note: examining phi: .MEM_226 = PHI <.MEM_70(4), .MEM_10(D)(2)>

common/pixel.c:308:5: note: examining phi: ivtmp_490 = PHI <ivtmp_484(4), 8(2)>

common/pixel.c:308:5: note: ==> examining statement: # DEBUG i => i_223
common/pixel.c:308:5: note: irrelevant.
common/pixel.c:308:5: note: ==> examining statement: # DEBUG pix => pix_220
common/pixel.c:308:5: note: irrelevant.
common/pixel.c:308:5: note: ==> examining statement: _11 = *pix_220;
common/pixel.c:308:5: note: vect_is_simple_use: operand *pix_220
common/pixel.c:308:5: note: not ssa-name.
common/pixel.c:308:5: note: use not simple.
common/pixel.c:308:5: note: vect_is_simple_use: operand *pix_220
common/pixel.c:308:5: note: not ssa-name.
common/pixel.c:308:5: note: use not simple.
common/pixel.c:308:5: note: vect_model_load_cost: inside_cost = 25, prologue_cost = 0 .
common/pixel.c:308:5: note: ==> examining statement: _12 = (int) _11;
common/pixel.c:308:5: note: vect_is_simple_use: operand _11
common/pixel.c:308:5: note: def_stmt: _11 = *pix_220;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: === vectorizable_conversion ===
common/pixel.c:308:5: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:308:5: note: ==> examining statement: _13 = MEM[(uint8_t *)pix_220 + 1B];
common/pixel.c:308:5: note: vect_is_simple_use: operand MEM[(uint8_t *)pix_220 + 1B]
common/pixel.c:308:5: note: not ssa-name.
common/pixel.c:308:5: note: use not simple.
common/pixel.c:308:5: note: vect_is_simple_use: operand MEM[(uint8_t *)pix_220 + 1B]
common/pixel.c:308:5: note: not ssa-name.
common/pixel.c:308:5: note: use not simple.
common/pixel.c:308:5: note: vect_model_load_cost: inside_cost = 25, prologue_cost = 0 .
common/pixel.c:308:5: note: ==> examining statement: _14 = (int) _13;
common/pixel.c:308:5: note: vect_is_simple_use: operand _13
common/pixel.c:308:5: note: def_stmt: _13 = MEM[(uint8_t *)pix_220 + 1B];
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: === vectorizable_conversion ===
common/pixel.c:308:5: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:308:5: note: ==> examining statement: t0_15 = _12 + _14;
common/pixel.c:308:5: note: vect_is_simple_use: operand _12
common/pixel.c:308:5: note: def_stmt: _12 = (int) _11;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: vect_is_simple_use: operand _14
common/pixel.c:308:5: note: def_stmt: _14 = (int) _13;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: === vectorizable_operation ===
common/pixel.c:308:5: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:308:5: note: ==> examining statement: # DEBUG t0 => t0_15
common/pixel.c:308:5: note: irrelevant.
common/pixel.c:308:5: note: ==> examining statement: t1_20 = _12 - _14;
common/pixel.c:308:5: note: vect_is_simple_use: operand _12
common/pixel.c:308:5: note: def_stmt: _12 = (int) _11;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: vect_is_simple_use: operand _14
common/pixel.c:308:5: note: def_stmt: _14 = (int) _13;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: === vectorizable_operation ===
common/pixel.c:308:5: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:308:5: note: ==> examining statement: # DEBUG t1 => t1_20
common/pixel.c:308:5: note: irrelevant.
common/pixel.c:308:5: note: ==> examining statement: _21 = MEM[(uint8_t *)pix_220 + 2B];
common/pixel.c:308:5: note: vect_is_simple_use: operand MEM[(uint8_t *)pix_220 + 2B]
common/pixel.c:308:5: note: not ssa-name.
common/pixel.c:308:5: note: use not simple.
common/pixel.c:308:5: note: vect_is_simple_use: operand MEM[(uint8_t *)pix_220 + 2B]
common/pixel.c:308:5: note: not ssa-name.
common/pixel.c:308:5: note: use not simple.
common/pixel.c:308:5: note: vect_model_load_cost: inside_cost = 25, prologue_cost = 0 .
common/pixel.c:308:5: note: ==> examining statement: _22 = (int) _21;
common/pixel.c:308:5: note: vect_is_simple_use: operand _21
common/pixel.c:308:5: note: def_stmt: _21 = MEM[(uint8_t *)pix_220 + 2B];
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: === vectorizable_conversion ===
common/pixel.c:308:5: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:308:5: note: ==> examining statement: _23 = MEM[(uint8_t *)pix_220 + 3B];
common/pixel.c:308:5: note: vect_is_simple_use: operand MEM[(uint8_t *)pix_220 + 3B]
common/pixel.c:308:5: note: not ssa-name.
common/pixel.c:308:5: note: use not simple.
common/pixel.c:308:5: note: vect_is_simple_use: operand MEM[(uint8_t *)pix_220 + 3B]
common/pixel.c:308:5: note: not ssa-name.
common/pixel.c:308:5: note: use not simple.
common/pixel.c:308:5: note: vect_model_load_cost: inside_cost = 25, prologue_cost = 0 .
common/pixel.c:308:5: note: ==> examining statement: _24 = (int) _23;
common/pixel.c:308:5: note: vect_is_simple_use: operand _23
common/pixel.c:308:5: note: def_stmt: _23 = MEM[(uint8_t *)pix_220 + 3B];
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: === vectorizable_conversion ===
common/pixel.c:308:5: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:308:5: note: ==> examining statement: t2_25 = _22 + _24;
common/pixel.c:308:5: note: vect_is_simple_use: operand _22
common/pixel.c:308:5: note: def_stmt: _22 = (int) _21;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: vect_is_simple_use: operand _24
common/pixel.c:308:5: note: def_stmt: _24 = (int) _23;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: === vectorizable_operation ===
common/pixel.c:308:5: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:308:5: note: ==> examining statement: # DEBUG t2 => t2_25
common/pixel.c:308:5: note: irrelevant.
common/pixel.c:308:5: note: ==> examining statement: t3_26 = _22 - _24;
common/pixel.c:308:5: note: vect_is_simple_use: operand _22
common/pixel.c:308:5: note: def_stmt: _22 = (int) _21;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: vect_is_simple_use: operand _24
common/pixel.c:308:5: note: def_stmt: _24 = (int) _23;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: === vectorizable_operation ===
common/pixel.c:308:5: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:308:5: note: ==> examining statement: # DEBUG t3 => t3_26
common/pixel.c:308:5: note: irrelevant.
common/pixel.c:308:5: note: ==> examining statement: _27 = (unsigned short) t0_15;
common/pixel.c:308:5: note: vect_is_simple_use: operand t0_15
common/pixel.c:308:5: note: def_stmt: t0_15 = _12 + _14;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: === vectorizable_conversion ===
common/pixel.c:308:5: note: vect_model_promotion_demotion_cost: inside_cost = 1, prologue_cost = 0 .
common/pixel.c:308:5: note: ==> examining statement: _28 = (unsigned short) t2_25;
common/pixel.c:308:5: note: vect_is_simple_use: operand t2_25
common/pixel.c:308:5: note: def_stmt: t2_25 = _22 + _24;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: === vectorizable_conversion ===
common/pixel.c:308:5: note: vect_model_promotion_demotion_cost: inside_cost = 1, prologue_cost = 0 .
common/pixel.c:308:5: note: ==> examining statement: _29 = _27 + _28;
common/pixel.c:308:5: note: vect_is_simple_use: operand _27
common/pixel.c:308:5: note: def_stmt: _27 = (unsigned short) t0_15;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: vect_is_simple_use: operand _28
common/pixel.c:308:5: note: def_stmt: _28 = (unsigned short) t2_25;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: === vectorizable_operation ===
common/pixel.c:308:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:308:5: note: ==> examining statement: _30 = (short int) _29;
common/pixel.c:308:5: note: vect_is_simple_use: operand _29
common/pixel.c:308:5: note: def_stmt: _29 = _27 + _28;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: vect_is_simple_use: operand _29
common/pixel.c:308:5: note: def_stmt: _29 = _27 + _28;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: no optab.
common/pixel.c:308:5: note: vect_is_simple_use: operand _29
common/pixel.c:308:5: note: def_stmt: _29 = _27 + _28;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: === vectorizable_assignment ===
common/pixel.c:308:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:308:5: note: ==> examining statement: tmp[0][i_223] = _30;
common/pixel.c:308:5: note: vect_is_simple_use: operand _30
common/pixel.c:308:5: note: def_stmt: _30 = (short int) _29;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: vect_model_store_cost: aligned.
common/pixel.c:308:5: note: vect_model_store_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:308:5: note: ==> examining statement: _32 = _27 - _28;
common/pixel.c:308:5: note: vect_is_simple_use: operand _27
common/pixel.c:308:5: note: def_stmt: _27 = (unsigned short) t0_15;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: vect_is_simple_use: operand _28
common/pixel.c:308:5: note: def_stmt: _28 = (unsigned short) t2_25;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: === vectorizable_operation ===
common/pixel.c:308:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:308:5: note: ==> examining statement: _33 = (short int) _32;
common/pixel.c:308:5: note: vect_is_simple_use: operand _32
common/pixel.c:308:5: note: def_stmt: _32 = _27 - _28;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: vect_is_simple_use: operand _32
common/pixel.c:308:5: note: def_stmt: _32 = _27 - _28;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: no optab.
common/pixel.c:308:5: note: vect_is_simple_use: operand _32
common/pixel.c:308:5: note: def_stmt: _32 = _27 - _28;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: === vectorizable_assignment ===
common/pixel.c:308:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:308:5: note: ==> examining statement: tmp[2][i_223] = _33;
common/pixel.c:308:5: note: vect_is_simple_use: operand _33
common/pixel.c:308:5: note: def_stmt: _33 = (short int) _32;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: vect_model_store_cost: aligned.
common/pixel.c:308:5: note: vect_model_store_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:308:5: note: ==> examining statement: _35 = (unsigned short) t1_20;
common/pixel.c:308:5: note: vect_is_simple_use: operand t1_20
common/pixel.c:308:5: note: def_stmt: t1_20 = _12 - _14;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: === vectorizable_conversion ===
common/pixel.c:308:5: note: vect_model_promotion_demotion_cost: inside_cost = 1, prologue_cost = 0 .
common/pixel.c:308:5: note: ==> examining statement: _36 = (unsigned short) t3_26;
common/pixel.c:308:5: note: vect_is_simple_use: operand t3_26
common/pixel.c:308:5: note: def_stmt: t3_26 = _22 - _24;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: === vectorizable_conversion ===
common/pixel.c:308:5: note: vect_model_promotion_demotion_cost: inside_cost = 1, prologue_cost = 0 .
common/pixel.c:308:5: note: ==> examining statement: _37 = _35 + _36;
common/pixel.c:308:5: note: vect_is_simple_use: operand _35
common/pixel.c:308:5: note: def_stmt: _35 = (unsigned short) t1_20;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: vect_is_simple_use: operand _36
common/pixel.c:308:5: note: def_stmt: _36 = (unsigned short) t3_26;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: === vectorizable_operation ===
common/pixel.c:308:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:308:5: note: ==> examining statement: _38 = (short int) _37;
common/pixel.c:308:5: note: vect_is_simple_use: operand _37
common/pixel.c:308:5: note: def_stmt: _37 = _35 + _36;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: vect_is_simple_use: operand _37
common/pixel.c:308:5: note: def_stmt: _37 = _35 + _36;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: no optab.
common/pixel.c:308:5: note: vect_is_simple_use: operand _37
common/pixel.c:308:5: note: def_stmt: _37 = _35 + _36;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: === vectorizable_assignment ===
common/pixel.c:308:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:308:5: note: ==> examining statement: tmp[1][i_223] = _38;
common/pixel.c:308:5: note: vect_is_simple_use: operand _38
common/pixel.c:308:5: note: def_stmt: _38 = (short int) _37;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: vect_model_store_cost: aligned.
common/pixel.c:308:5: note: vect_model_store_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:308:5: note: ==> examining statement: _40 = _35 - _36;
common/pixel.c:308:5: note: vect_is_simple_use: operand _35
common/pixel.c:308:5: note: def_stmt: _35 = (unsigned short) t1_20;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: vect_is_simple_use: operand _36
common/pixel.c:308:5: note: def_stmt: _36 = (unsigned short) t3_26;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: === vectorizable_operation ===
common/pixel.c:308:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:308:5: note: ==> examining statement: _41 = (short int) _40;
common/pixel.c:308:5: note: vect_is_simple_use: operand _40
common/pixel.c:308:5: note: def_stmt: _40 = _35 - _36;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: vect_is_simple_use: operand _40
common/pixel.c:308:5: note: def_stmt: _40 = _35 - _36;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: no optab.
common/pixel.c:308:5: note: vect_is_simple_use: operand _40
common/pixel.c:308:5: note: def_stmt: _40 = _35 - _36;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: === vectorizable_assignment ===
common/pixel.c:308:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:308:5: note: ==> examining statement: tmp[3][i_223] = _41;
common/pixel.c:308:5: note: vect_is_simple_use: operand _41
common/pixel.c:308:5: note: def_stmt: _41 = (short int) _40;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: vect_model_store_cost: aligned.
common/pixel.c:308:5: note: vect_model_store_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:308:5: note: ==> examining statement: _43 = MEM[(uint8_t *)pix_220 + 4B];
common/pixel.c:308:5: note: vect_is_simple_use: operand MEM[(uint8_t *)pix_220 + 4B]
common/pixel.c:308:5: note: not ssa-name.
common/pixel.c:308:5: note: use not simple.
common/pixel.c:308:5: note: vect_is_simple_use: operand MEM[(uint8_t *)pix_220 + 4B]
common/pixel.c:308:5: note: not ssa-name.
common/pixel.c:308:5: note: use not simple.
common/pixel.c:308:5: note: vect_model_load_cost: inside_cost = 25, prologue_cost = 0 .
common/pixel.c:308:5: note: ==> examining statement: _44 = (int) _43;
common/pixel.c:308:5: note: vect_is_simple_use: operand _43
common/pixel.c:308:5: note: def_stmt: _43 = MEM[(uint8_t *)pix_220 + 4B];
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: === vectorizable_conversion ===
common/pixel.c:308:5: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:308:5: note: ==> examining statement: _45 = MEM[(uint8_t *)pix_220 + 5B];
common/pixel.c:308:5: note: vect_is_simple_use: operand MEM[(uint8_t *)pix_220 + 5B]
common/pixel.c:308:5: note: not ssa-name.
common/pixel.c:308:5: note: use not simple.
common/pixel.c:308:5: note: vect_is_simple_use: operand MEM[(uint8_t *)pix_220 + 5B]
common/pixel.c:308:5: note: not ssa-name.
common/pixel.c:308:5: note: use not simple.
common/pixel.c:308:5: note: vect_model_load_cost: inside_cost = 25, prologue_cost = 0 .
common/pixel.c:308:5: note: ==> examining statement: _46 = (int) _45;
common/pixel.c:308:5: note: vect_is_simple_use: operand _45
common/pixel.c:308:5: note: def_stmt: _45 = MEM[(uint8_t *)pix_220 + 5B];
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: === vectorizable_conversion ===
common/pixel.c:308:5: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:308:5: note: ==> examining statement: t0_47 = _44 + _46;
common/pixel.c:308:5: note: vect_is_simple_use: operand _44
common/pixel.c:308:5: note: def_stmt: _44 = (int) _43;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: vect_is_simple_use: operand _46
common/pixel.c:308:5: note: def_stmt: _46 = (int) _45;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: === vectorizable_operation ===
common/pixel.c:308:5: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:308:5: note: ==> examining statement: # DEBUG t0 => t0_47
common/pixel.c:308:5: note: irrelevant.
common/pixel.c:308:5: note: ==> examining statement: t1_48 = _44 - _46;
common/pixel.c:308:5: note: vect_is_simple_use: operand _44
common/pixel.c:308:5: note: def_stmt: _44 = (int) _43;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: vect_is_simple_use: operand _46
common/pixel.c:308:5: note: def_stmt: _46 = (int) _45;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: === vectorizable_operation ===
common/pixel.c:308:5: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:308:5: note: ==> examining statement: # DEBUG t1 => t1_48
common/pixel.c:308:5: note: irrelevant.
common/pixel.c:308:5: note: ==> examining statement: _49 = MEM[(uint8_t *)pix_220 + 6B];
common/pixel.c:308:5: note: vect_is_simple_use: operand MEM[(uint8_t *)pix_220 + 6B]
common/pixel.c:308:5: note: not ssa-name.
common/pixel.c:308:5: note: use not simple.
common/pixel.c:308:5: note: vect_is_simple_use: operand MEM[(uint8_t *)pix_220 + 6B]
common/pixel.c:308:5: note: not ssa-name.
common/pixel.c:308:5: note: use not simple.
common/pixel.c:308:5: note: vect_model_load_cost: inside_cost = 25, prologue_cost = 0 .
common/pixel.c:308:5: note: ==> examining statement: _50 = (int) _49;
common/pixel.c:308:5: note: vect_is_simple_use: operand _49
common/pixel.c:308:5: note: def_stmt: _49 = MEM[(uint8_t *)pix_220 + 6B];
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: === vectorizable_conversion ===
common/pixel.c:308:5: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:308:5: note: ==> examining statement: _51 = MEM[(uint8_t *)pix_220 + 7B];
common/pixel.c:308:5: note: vect_is_simple_use: operand MEM[(uint8_t *)pix_220 + 7B]
common/pixel.c:308:5: note: not ssa-name.
common/pixel.c:308:5: note: use not simple.
common/pixel.c:308:5: note: vect_is_simple_use: operand MEM[(uint8_t *)pix_220 + 7B]
common/pixel.c:308:5: note: not ssa-name.
common/pixel.c:308:5: note: use not simple.
common/pixel.c:308:5: note: vect_model_load_cost: inside_cost = 25, prologue_cost = 0 .
common/pixel.c:308:5: note: ==> examining statement: _52 = (int) _51;
common/pixel.c:308:5: note: vect_is_simple_use: operand _51
common/pixel.c:308:5: note: def_stmt: _51 = MEM[(uint8_t *)pix_220 + 7B];
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: === vectorizable_conversion ===
common/pixel.c:308:5: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:308:5: note: ==> examining statement: t2_53 = _50 + _52;
common/pixel.c:308:5: note: vect_is_simple_use: operand _50
common/pixel.c:308:5: note: def_stmt: _50 = (int) _49;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: vect_is_simple_use: operand _52
common/pixel.c:308:5: note: def_stmt: _52 = (int) _51;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: === vectorizable_operation ===
common/pixel.c:308:5: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:308:5: note: ==> examining statement: # DEBUG t2 => t2_53
common/pixel.c:308:5: note: irrelevant.
common/pixel.c:308:5: note: ==> examining statement: t3_54 = _50 - _52;
common/pixel.c:308:5: note: vect_is_simple_use: operand _50
common/pixel.c:308:5: note: def_stmt: _50 = (int) _49;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: vect_is_simple_use: operand _52
common/pixel.c:308:5: note: def_stmt: _52 = (int) _51;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: === vectorizable_operation ===
common/pixel.c:308:5: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:308:5: note: ==> examining statement: # DEBUG t3 => t3_54
common/pixel.c:308:5: note: irrelevant.
common/pixel.c:308:5: note: ==> examining statement: _55 = (unsigned short) t0_47;
common/pixel.c:308:5: note: vect_is_simple_use: operand t0_47
common/pixel.c:308:5: note: def_stmt: t0_47 = _44 + _46;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: === vectorizable_conversion ===
common/pixel.c:308:5: note: vect_model_promotion_demotion_cost: inside_cost = 1, prologue_cost = 0 .
common/pixel.c:308:5: note: ==> examining statement: _56 = (unsigned short) t2_53;
common/pixel.c:308:5: note: vect_is_simple_use: operand t2_53
common/pixel.c:308:5: note: def_stmt: t2_53 = _50 + _52;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: === vectorizable_conversion ===
common/pixel.c:308:5: note: vect_model_promotion_demotion_cost: inside_cost = 1, prologue_cost = 0 .
common/pixel.c:308:5: note: ==> examining statement: _57 = _55 + _56;
common/pixel.c:308:5: note: vect_is_simple_use: operand _55
common/pixel.c:308:5: note: def_stmt: _55 = (unsigned short) t0_47;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: vect_is_simple_use: operand _56
common/pixel.c:308:5: note: def_stmt: _56 = (unsigned short) t2_53;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: === vectorizable_operation ===
common/pixel.c:308:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:308:5: note: ==> examining statement: _58 = (short int) _57;
common/pixel.c:308:5: note: vect_is_simple_use: operand _57
common/pixel.c:308:5: note: def_stmt: _57 = _55 + _56;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: vect_is_simple_use: operand _57
common/pixel.c:308:5: note: def_stmt: _57 = _55 + _56;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: no optab.
common/pixel.c:308:5: note: vect_is_simple_use: operand _57
common/pixel.c:308:5: note: def_stmt: _57 = _55 + _56;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: === vectorizable_assignment ===
common/pixel.c:308:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:308:5: note: ==> examining statement: tmp[4][i_223] = _58;
common/pixel.c:308:5: note: vect_is_simple_use: operand _58
common/pixel.c:308:5: note: def_stmt: _58 = (short int) _57;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: vect_model_store_cost: aligned.
common/pixel.c:308:5: note: vect_model_store_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:308:5: note: ==> examining statement: _60 = _55 - _56;
common/pixel.c:308:5: note: vect_is_simple_use: operand _55
common/pixel.c:308:5: note: def_stmt: _55 = (unsigned short) t0_47;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: vect_is_simple_use: operand _56
common/pixel.c:308:5: note: def_stmt: _56 = (unsigned short) t2_53;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: === vectorizable_operation ===
common/pixel.c:308:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:308:5: note: ==> examining statement: _61 = (short int) _60;
common/pixel.c:308:5: note: vect_is_simple_use: operand _60
common/pixel.c:308:5: note: def_stmt: _60 = _55 - _56;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: vect_is_simple_use: operand _60
common/pixel.c:308:5: note: def_stmt: _60 = _55 - _56;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: no optab.
common/pixel.c:308:5: note: vect_is_simple_use: operand _60
common/pixel.c:308:5: note: def_stmt: _60 = _55 - _56;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: === vectorizable_assignment ===
common/pixel.c:308:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:308:5: note: ==> examining statement: tmp[6][i_223] = _61;
common/pixel.c:308:5: note: vect_is_simple_use: operand _61
common/pixel.c:308:5: note: def_stmt: _61 = (short int) _60;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: vect_model_store_cost: aligned.
common/pixel.c:308:5: note: vect_model_store_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:308:5: note: ==> examining statement: _63 = (unsigned short) t1_48;
common/pixel.c:308:5: note: vect_is_simple_use: operand t1_48
common/pixel.c:308:5: note: def_stmt: t1_48 = _44 - _46;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: === vectorizable_conversion ===
common/pixel.c:308:5: note: vect_model_promotion_demotion_cost: inside_cost = 1, prologue_cost = 0 .
common/pixel.c:308:5: note: ==> examining statement: _64 = (unsigned short) t3_54;
common/pixel.c:308:5: note: vect_is_simple_use: operand t3_54
common/pixel.c:308:5: note: def_stmt: t3_54 = _50 - _52;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: === vectorizable_conversion ===
common/pixel.c:308:5: note: vect_model_promotion_demotion_cost: inside_cost = 1, prologue_cost = 0 .
common/pixel.c:308:5: note: ==> examining statement: _65 = _63 + _64;
common/pixel.c:308:5: note: vect_is_simple_use: operand _63
common/pixel.c:308:5: note: def_stmt: _63 = (unsigned short) t1_48;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: vect_is_simple_use: operand _64
common/pixel.c:308:5: note: def_stmt: _64 = (unsigned short) t3_54;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: === vectorizable_operation ===
common/pixel.c:308:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:308:5: note: ==> examining statement: _66 = (short int) _65;
common/pixel.c:308:5: note: vect_is_simple_use: operand _65
common/pixel.c:308:5: note: def_stmt: _65 = _63 + _64;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: vect_is_simple_use: operand _65
common/pixel.c:308:5: note: def_stmt: _65 = _63 + _64;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: no optab.
common/pixel.c:308:5: note: vect_is_simple_use: operand _65
common/pixel.c:308:5: note: def_stmt: _65 = _63 + _64;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: === vectorizable_assignment ===
common/pixel.c:308:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:308:5: note: ==> examining statement: tmp[5][i_223] = _66;
common/pixel.c:308:5: note: vect_is_simple_use: operand _66
common/pixel.c:308:5: note: def_stmt: _66 = (short int) _65;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: vect_model_store_cost: aligned.
common/pixel.c:308:5: note: vect_model_store_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:308:5: note: ==> examining statement: _68 = _63 - _64;
common/pixel.c:308:5: note: vect_is_simple_use: operand _63
common/pixel.c:308:5: note: def_stmt: _63 = (unsigned short) t1_48;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: vect_is_simple_use: operand _64
common/pixel.c:308:5: note: def_stmt: _64 = (unsigned short) t3_54;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: === vectorizable_operation ===
common/pixel.c:308:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:308:5: note: ==> examining statement: _69 = (short int) _68;
common/pixel.c:308:5: note: vect_is_simple_use: operand _68
common/pixel.c:308:5: note: def_stmt: _68 = _63 - _64;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: vect_is_simple_use: operand _68
common/pixel.c:308:5: note: def_stmt: _68 = _63 - _64;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: no optab.
common/pixel.c:308:5: note: vect_is_simple_use: operand _68
common/pixel.c:308:5: note: def_stmt: _68 = _63 - _64;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: === vectorizable_assignment ===
common/pixel.c:308:5: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:308:5: note: ==> examining statement: tmp[7][i_223] = _69;
common/pixel.c:308:5: note: vect_is_simple_use: operand _69
common/pixel.c:308:5: note: def_stmt: _69 = (short int) _68;
common/pixel.c:308:5: note: type of def: 3.
common/pixel.c:308:5: note: vect_model_store_cost: aligned.
common/pixel.c:308:5: note: vect_model_store_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:308:5: note: ==> examining statement: i_71 = i_223 + 1;
common/pixel.c:308:5: note: irrelevant.
common/pixel.c:308:5: note: ==> examining statement: # DEBUG i => i_71
common/pixel.c:308:5: note: irrelevant.
common/pixel.c:308:5: note: ==> examining statement: pix_74 = pix_220 + pretmp_493;
common/pixel.c:308:5: note: irrelevant.
common/pixel.c:308:5: note: ==> examining statement: # DEBUG pix => pix_74
common/pixel.c:308:5: note: irrelevant.
common/pixel.c:308:5: note: ==> examining statement: # DEBUG i => i_71
common/pixel.c:308:5: note: irrelevant.
common/pixel.c:308:5: note: ==> examining statement: # DEBUG pix => pix_74
common/pixel.c:308:5: note: irrelevant.
common/pixel.c:308:5: note: ==> examining statement: ivtmp_484 = ivtmp_490 - 1;
common/pixel.c:308:5: note: irrelevant.
common/pixel.c:308:5: note: ==> examining statement: if (ivtmp_484 != 0)
common/pixel.c:308:5: note: irrelevant.
common/pixel.c:308:5: note: vectorization_factor = 16, niters = 8
common/pixel.c:308:5: note: not vectorized: iteration count too small.
common/pixel.c:308:5: note: not vectorized: iteration count smaller than vectorization factor.
common/pixel.c:308:5: note: bad operation or unsupported loop bound.
common/pixel.c:303:17: note: vectorized 1 loops in function.
Merging blocks 8 and 12
pixel_hadamard_ac (uint8_t * pix, int stride)
{
  int vect_sum8_195.590;
  vector(4) int vect_sum8_195.589;
  int stmp_sum8_195.588;
  vector(4) int vect_sum8_195.587;
  vector(4) int vect__194.586;
  vector(4) int vect__193.585;
  vector(4) int vect__192.584;
  vector(4) int vect__191.583;
  vector(4) int vect__190.582;
  vector(4) int vect__189.581;
  vector(4) int vect__188.580;
  vector(8) short int vect__187.579;
  vector(8) short int * vectp_tmp.578;
  vector(8) short int * vectp_tmp.577;
  vector(4) int vect__186.576;
  vector(8) short int vect__185.575;
  vector(8) short int * vectp_tmp.574;
  vector(8) short int * vectp_tmp.573;
  vector(4) int vect__184.572;
  vector(4) int vect__183.571;
  vector(4) int vect__182.570;
  vector(4) int vect__181.569;
  vector(4) int vect__180.568;
  vector(4) int vect__179.567;
  vector(4) int vect__178.566;
  vector(8) short int vect__177.565;
  vector(8) short int * vectp_tmp.564;
  vector(8) short int * vectp_tmp.563;
  vector(4) int vect__176.562;
  vector(8) short int vect__175.561;
  vector(8) short int * vectp_tmp.560;
  vector(8) short int * vectp_tmp.559;
  vector(4) int vect__174.558;
  vector(4) int vect__173.557;
  vector(4) int vect__172.556;
  vector(4) int vect__171.555;
  vector(4) int vect__170.554;
  vector(4) int vect__169.553;
  vector(4) int vect__168.552;
  vector(8) short int vect__167.551;
  vector(8) short int * vectp_tmp.550;
  vector(8) short int * vectp_tmp.549;
  vector(4) int vect__166.548;
  vector(8) short int vect__165.547;
  vector(8) short int * vectp_tmp.546;
  vector(8) short int * vectp_tmp.545;
  vector(4) int vect__164.544;
  vector(4) int vect__163.543;
  vector(4) int vect__162.542;
  vector(4) int vect__161.541;
  vector(4) int vect__160.540;
  vector(4) int vect__159.539;
  vector(8) short int vect__158.538;
  vector(8) short int * vectp_tmp.537;
  vector(8) short int * vectp_tmp.536;
  vector(4) int vect__157.535;
  vector(8) short int vect__156.534;
  vector(8) short int * vectp_tmp.533;
  vector(8) short int * vectp_tmp.532;
  int t3;
  int t2;
  int t1;
  int t0;
  int t3;
  int t2;
  int t1;
  int t0;
  int a7;
  int a6;
  int a5;
  int a4;
  int a3;
  int a2;
  int a1;
  int a0;
  int t3;
  int t2;
  int t1;
  int t0;
  int t3;
  int t2;
  int t1;
  int t0;
  int i;
  int sum8;
  int sum4;
  int16_t tmp[8][8];
  unsigned char _11;
  int _12;
  unsigned char _13;
  int _14;
  unsigned char _21;
  int _22;
  unsigned char _23;
  int _24;
  unsigned short _27;
  unsigned short _28;
  unsigned short _29;
  short int _30;
  unsigned short _32;
  short int _33;
  unsigned short _35;
  unsigned short _36;
  unsigned short _37;
  short int _38;
  unsigned short _40;
  short int _41;
  unsigned char _43;
  int _44;
  unsigned char _45;
  int _46;
  unsigned char _49;
  int _50;
  unsigned char _51;
  int _52;
  unsigned short _55;
  unsigned short _56;
  unsigned short _57;
  short int _58;
  unsigned short _60;
  short int _61;
  unsigned short _63;
  unsigned short _64;
  unsigned short _65;
  short int _66;
  unsigned short _68;
  short int _69;
  short int _75;
  int _76;
  short int _77;
  int _78;
  short int _81;
  int _82;
  short int _83;
  int _84;
  int _91;
  int _92;
  int _93;
  int _94;
  int _95;
  int _96;
  int _97;
  short int _99;
  int _100;
  short int _101;
  int _102;
  short int _105;
  int _106;
  short int _107;
  int _108;
  int _115;
  int _116;
  int _117;
  int _118;
  int _119;
  int _120;
  int _121;
  unsigned short _123;
  unsigned short _124;
  unsigned short _125;
  short int _126;
  unsigned short _128;
  short int _129;
  unsigned short _131;
  unsigned short _132;
  unsigned short _133;
  short int _134;
  unsigned short _136;
  short int _137;
  unsigned short _139;
  unsigned short _140;
  unsigned short _141;
  short int _142;
  unsigned short _144;
  short int _145;
  unsigned short _147;
  unsigned short _148;
  unsigned short _149;
  short int _150;
  unsigned short _152;
  short int _153;
  short int _156;
  int _157;
  short int _158;
  int _159;
  int _160;
  int _161;
  int _162;
  int _163;
  int _164;
  short int _165;
  int _166;
  short int _167;
  int _168;
  int _169;
  int _170;
  int _171;
  int _172;
  int _173;
  int _174;
  short int _175;
  int _176;
  short int _177;
  int _178;
  int _179;
  int _180;
  int _181;
  int _182;
  int _183;
  int _184;
  short int _185;
  int _186;
  short int _187;
  int _188;
  int _189;
  int _190;
  int _191;
  int _192;
  int _193;
  int _194;
  short int _197;
  int _198;
  short int _199;
  int _200;
  int _201;
  long unsigned int _204;
  long unsigned int _205;
  long unsigned int _206;
  uint64_t _207;
  unsigned int ivtmp_378;
  unsigned int ivtmp_379;
  unsigned int ivtmp_484;
  unsigned int ivtmp_487;
  unsigned int ivtmp_488;
  unsigned int ivtmp_489;
  unsigned int ivtmp_490;
  unsigned int ivtmp_491;
  sizetype pretmp_493;

  <bb 2>:
  # DEBUG sum4 => 0
  # DEBUG sum8 => 0
  # DEBUG i => 0
  # DEBUG i => 0
  # DEBUG pix => pix_9(D)
  pretmp_493 = (sizetype) stride_72(D);

  <bb 3>:
  # pix_220 = PHI <pix_74(4), pix_9(D)(2)>
  # i_223 = PHI <i_71(4), 0(2)>
  # ivtmp_490 = PHI <ivtmp_484(4), 8(2)>
  # DEBUG i => i_223
  # DEBUG pix => pix_220
  _11 = *pix_220;
  _12 = (int) _11;
  _13 = MEM[(uint8_t *)pix_220 + 1B];
  _14 = (int) _13;
  t0_15 = _12 + _14;
  # DEBUG t0 => t0_15
  t1_20 = _12 - _14;
  # DEBUG t1 => t1_20
  _21 = MEM[(uint8_t *)pix_220 + 2B];
  _22 = (int) _21;
  _23 = MEM[(uint8_t *)pix_220 + 3B];
  _24 = (int) _23;
  t2_25 = _22 + _24;
  # DEBUG t2 => t2_25
  t3_26 = _22 - _24;
  # DEBUG t3 => t3_26
  _27 = (unsigned short) t0_15;
  _28 = (unsigned short) t2_25;
  _29 = _27 + _28;
  _30 = (short int) _29;
  tmp[0][i_223] = _30;
  _32 = _27 - _28;
  _33 = (short int) _32;
  tmp[2][i_223] = _33;
  _35 = (unsigned short) t1_20;
  _36 = (unsigned short) t3_26;
  _37 = _35 + _36;
  _38 = (short int) _37;
  tmp[1][i_223] = _38;
  _40 = _35 - _36;
  _41 = (short int) _40;
  tmp[3][i_223] = _41;
  _43 = MEM[(uint8_t *)pix_220 + 4B];
  _44 = (int) _43;
  _45 = MEM[(uint8_t *)pix_220 + 5B];
  _46 = (int) _45;
  t0_47 = _44 + _46;
  # DEBUG t0 => t0_47
  t1_48 = _44 - _46;
  # DEBUG t1 => t1_48
  _49 = MEM[(uint8_t *)pix_220 + 6B];
  _50 = (int) _49;
  _51 = MEM[(uint8_t *)pix_220 + 7B];
  _52 = (int) _51;
  t2_53 = _50 + _52;
  # DEBUG t2 => t2_53
  t3_54 = _50 - _52;
  # DEBUG t3 => t3_54
  _55 = (unsigned short) t0_47;
  _56 = (unsigned short) t2_53;
  _57 = _55 + _56;
  _58 = (short int) _57;
  tmp[4][i_223] = _58;
  _60 = _55 - _56;
  _61 = (short int) _60;
  tmp[6][i_223] = _61;
  _63 = (unsigned short) t1_48;
  _64 = (unsigned short) t3_54;
  _65 = _63 + _64;
  _66 = (short int) _65;
  tmp[5][i_223] = _66;
  _68 = _63 - _64;
  _69 = (short int) _68;
  tmp[7][i_223] = _69;
  i_71 = i_223 + 1;
  # DEBUG i => i_71
  pix_74 = pix_220 + pretmp_493;
  # DEBUG pix => pix_74
  # DEBUG i => i_71
  # DEBUG pix => pix_74
  ivtmp_484 = ivtmp_490 - 1;
  if (ivtmp_484 != 0)
    goto <bb 4>;
  else
    goto <bb 5>;

  <bb 4>:
  goto <bb 3>;

  <bb 5>:

  <bb 6>:
  # sum4_221 = PHI <0(5), sum4_122(7)>
  # i_224 = PHI <0(5), i_155(7)>
  # ivtmp_488 = PHI <8(5), ivtmp_491(7)>
  # DEBUG i => i_224
  # DEBUG sum4 => sum4_221
  _75 = tmp[i_224][0];
  _76 = (int) _75;
  _77 = tmp[i_224][1];
  _78 = (int) _77;
  t0_79 = _76 + _78;
  # DEBUG t0 => t0_79
  t1_80 = _76 - _78;
  # DEBUG t1 => t1_80
  _81 = tmp[i_224][2];
  _82 = (int) _81;
  _83 = tmp[i_224][3];
  _84 = (int) _83;
  t2_85 = _82 + _84;
  # DEBUG t2 => t2_85
  t3_86 = _82 - _84;
  # DEBUG t3 => t3_86
  a0_87 = t0_79 + t2_85;
  # DEBUG a0 => a0_87
  a2_88 = t0_79 - t2_85;
  # DEBUG a2 => a2_88
  a1_89 = t1_80 + t3_86;
  # DEBUG a1 => a1_89
  a3_90 = t1_80 - t3_86;
  # DEBUG a3 => a3_90
  _91 = ABS_EXPR <a0_87>;
  _92 = ABS_EXPR <a1_89>;
  _93 = _91 + _92;
  _94 = ABS_EXPR <a2_88>;
  _95 = _93 + _94;
  _96 = ABS_EXPR <a3_90>;
  _97 = _95 + _96;
  sum4_98 = _97 + sum4_221;
  # DEBUG sum4 => sum4_98
  _99 = tmp[i_224][4];
  _100 = (int) _99;
  _101 = tmp[i_224][5];
  _102 = (int) _101;
  t0_103 = _100 + _102;
  # DEBUG t0 => t0_103
  t1_104 = _100 - _102;
  # DEBUG t1 => t1_104
  _105 = tmp[i_224][6];
  _106 = (int) _105;
  _107 = tmp[i_224][7];
  _108 = (int) _107;
  t2_109 = _106 + _108;
  # DEBUG t2 => t2_109
  t3_110 = _106 - _108;
  # DEBUG t3 => t3_110
  a4_111 = t0_103 + t2_109;
  # DEBUG a4 => a4_111
  a6_112 = t0_103 - t2_109;
  # DEBUG a6 => a6_112
  a5_113 = t1_104 + t3_110;
  # DEBUG a5 => a5_113
  a7_114 = t1_104 - t3_110;
  # DEBUG a7 => a7_114
  _115 = ABS_EXPR <a4_111>;
  _116 = ABS_EXPR <a5_113>;
  _117 = _115 + _116;
  _118 = ABS_EXPR <a6_112>;
  _119 = _117 + _118;
  _120 = ABS_EXPR <a7_114>;
  _121 = _119 + _120;
  sum4_122 = _121 + sum4_98;
  # DEBUG sum4 => sum4_122
  _123 = (unsigned short) a0_87;
  _124 = (unsigned short) a4_111;
  _125 = _123 + _124;
  _126 = (short int) _125;
  tmp[i_224][0] = _126;
  _128 = _123 - _124;
  _129 = (short int) _128;
  tmp[i_224][4] = _129;
  _131 = (unsigned short) a1_89;
  _132 = (unsigned short) a5_113;
  _133 = _131 + _132;
  _134 = (short int) _133;
  tmp[i_224][1] = _134;
  _136 = _131 - _132;
  _137 = (short int) _136;
  tmp[i_224][5] = _137;
  _139 = (unsigned short) a2_88;
  _140 = (unsigned short) a6_112;
  _141 = _139 + _140;
  _142 = (short int) _141;
  tmp[i_224][2] = _142;
  _144 = _139 - _140;
  _145 = (short int) _144;
  tmp[i_224][6] = _145;
  _147 = (unsigned short) a3_90;
  _148 = (unsigned short) a7_114;
  _149 = _147 + _148;
  _150 = (short int) _149;
  tmp[i_224][3] = _150;
  _152 = _147 - _148;
  _153 = (short int) _152;
  tmp[i_224][7] = _153;
  i_155 = i_224 + 1;
  # DEBUG i => i_155
  # DEBUG i => i_155
  # DEBUG sum4 => sum4_122
  ivtmp_491 = ivtmp_488 - 1;
  if (ivtmp_491 != 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  goto <bb 6>;

  <bb 8>:
  # sum4_486 = PHI <sum4_122(6)>
  vectp_tmp.533_483 = &tmp;
  vectp_tmp.537_477 = &tmp + 64;
  vectp_tmp.546_461 = &tmp + 16;
  vectp_tmp.550_455 = &tmp + 80;
  vectp_tmp.560_437 = &tmp + 32;
  vectp_tmp.564_431 = &tmp + 96;
  vectp_tmp.574_413 = &tmp + 48;
  vectp_tmp.578_407 = &tmp + 112;

  <bb 9>:
  # sum8_222 = PHI <0(8), sum8_195(10)>
  # i_225 = PHI <0(8), i_196(10)>
  # ivtmp_487 = PHI <8(8), ivtmp_489(10)>
  # vectp_tmp.532_482 = PHI <vectp_tmp.533_483(8), vectp_tmp.532_481(10)>
  # vectp_tmp.536_476 = PHI <vectp_tmp.537_477(8), vectp_tmp.536_475(10)>
  # vectp_tmp.545_460 = PHI <vectp_tmp.546_461(8), vectp_tmp.545_459(10)>
  # vectp_tmp.549_454 = PHI <vectp_tmp.550_455(8), vectp_tmp.549_453(10)>
  # vectp_tmp.559_436 = PHI <vectp_tmp.560_437(8), vectp_tmp.559_435(10)>
  # vectp_tmp.563_430 = PHI <vectp_tmp.564_431(8), vectp_tmp.563_429(10)>
  # vectp_tmp.573_412 = PHI <vectp_tmp.574_413(8), vectp_tmp.573_411(10)>
  # vectp_tmp.577_406 = PHI <vectp_tmp.578_407(8), vectp_tmp.577_405(10)>
  # vect_sum8_195.587_389 = PHI <{ 0, 0, 0, 0 }(8), vect_sum8_195.587_387(10)>
  # ivtmp_379 = PHI <0(8), ivtmp_378(10)>
  # DEBUG i => i_225
  # DEBUG sum8 => sum8_222
  vect__156.534_480 = MEM[(short int *)vectp_tmp.532_482];
  _156 = tmp[0][i_225];
  vect__157.535_479 = [vec_unpack_lo_expr] vect__156.534_480;
  vect__157.535_478 = [vec_unpack_hi_expr] vect__156.534_480;
  _157 = (int) _156;
  vect__158.538_474 = MEM[(short int *)vectp_tmp.536_476];
  _158 = tmp[4][i_225];
  vect__159.539_473 = [vec_unpack_lo_expr] vect__158.538_474;
  vect__159.539_472 = [vec_unpack_hi_expr] vect__158.538_474;
  _159 = (int) _158;
  vect__160.540_471 = vect__157.535_479 + vect__159.539_473;
  vect__160.540_470 = vect__157.535_478 + vect__159.539_472;
  _160 = _157 + _159;
  vect__161.541_469 = ABS_EXPR <vect__160.540_471>;
  vect__161.541_468 = ABS_EXPR <vect__160.540_470>;
  _161 = ABS_EXPR <_160>;
  vect__162.542_467 = vect__157.535_479 - vect__159.539_473;
  vect__162.542_466 = vect__157.535_478 - vect__159.539_472;
  _162 = _157 - _159;
  vect__163.543_465 = ABS_EXPR <vect__162.542_467>;
  vect__163.543_464 = ABS_EXPR <vect__162.542_466>;
  _163 = ABS_EXPR <_162>;
  vect__164.544_463 = vect__161.541_469 + vect__163.543_465;
  vect__164.544_462 = vect__161.541_468 + vect__163.543_464;
  _164 = _161 + _163;
  vect__165.547_458 = MEM[(short int *)vectp_tmp.545_460];
  _165 = tmp[1][i_225];
  vect__166.548_457 = [vec_unpack_lo_expr] vect__165.547_458;
  vect__166.548_456 = [vec_unpack_hi_expr] vect__165.547_458;
  _166 = (int) _165;
  vect__167.551_452 = MEM[(short int *)vectp_tmp.549_454];
  _167 = tmp[5][i_225];
  vect__168.552_451 = [vec_unpack_lo_expr] vect__167.551_452;
  vect__168.552_450 = [vec_unpack_hi_expr] vect__167.551_452;
  _168 = (int) _167;
  vect__169.553_449 = vect__166.548_457 + vect__168.552_451;
  vect__169.553_448 = vect__166.548_456 + vect__168.552_450;
  _169 = _166 + _168;
  vect__170.554_447 = ABS_EXPR <vect__169.553_449>;
  vect__170.554_446 = ABS_EXPR <vect__169.553_448>;
  _170 = ABS_EXPR <_169>;
  vect__171.555_445 = vect__164.544_463 + vect__170.554_447;
  vect__171.555_444 = vect__164.544_462 + vect__170.554_446;
  _171 = _164 + _170;
  vect__172.556_443 = vect__166.548_457 - vect__168.552_451;
  vect__172.556_442 = vect__166.548_456 - vect__168.552_450;
  _172 = _166 - _168;
  vect__173.557_441 = ABS_EXPR <vect__172.556_443>;
  vect__173.557_440 = ABS_EXPR <vect__172.556_442>;
  _173 = ABS_EXPR <_172>;
  vect__174.558_439 = vect__171.555_445 + vect__173.557_441;
  vect__174.558_438 = vect__171.555_444 + vect__173.557_440;
  _174 = _171 + _173;
  vect__175.561_434 = MEM[(short int *)vectp_tmp.559_436];
  _175 = tmp[2][i_225];
  vect__176.562_433 = [vec_unpack_lo_expr] vect__175.561_434;
  vect__176.562_432 = [vec_unpack_hi_expr] vect__175.561_434;
  _176 = (int) _175;
  vect__177.565_428 = MEM[(short int *)vectp_tmp.563_430];
  _177 = tmp[6][i_225];
  vect__178.566_427 = [vec_unpack_lo_expr] vect__177.565_428;
  vect__178.566_426 = [vec_unpack_hi_expr] vect__177.565_428;
  _178 = (int) _177;
  vect__179.567_425 = vect__176.562_433 + vect__178.566_427;
  vect__179.567_424 = vect__176.562_432 + vect__178.566_426;
  _179 = _176 + _178;
  vect__180.568_423 = ABS_EXPR <vect__179.567_425>;
  vect__180.568_422 = ABS_EXPR <vect__179.567_424>;
  _180 = ABS_EXPR <_179>;
  vect__181.569_421 = vect__174.558_439 + vect__180.568_423;
  vect__181.569_420 = vect__174.558_438 + vect__180.568_422;
  _181 = _174 + _180;
  vect__182.570_419 = vect__176.562_433 - vect__178.566_427;
  vect__182.570_418 = vect__176.562_432 - vect__178.566_426;
  _182 = _176 - _178;
  vect__183.571_417 = ABS_EXPR <vect__182.570_419>;
  vect__183.571_416 = ABS_EXPR <vect__182.570_418>;
  _183 = ABS_EXPR <_182>;
  vect__184.572_415 = vect__181.569_421 + vect__183.571_417;
  vect__184.572_414 = vect__181.569_420 + vect__183.571_416;
  _184 = _181 + _183;
  vect__185.575_410 = MEM[(short int *)vectp_tmp.573_412];
  _185 = tmp[3][i_225];
  vect__186.576_409 = [vec_unpack_lo_expr] vect__185.575_410;
  vect__186.576_408 = [vec_unpack_hi_expr] vect__185.575_410;
  _186 = (int) _185;
  vect__187.579_404 = MEM[(short int *)vectp_tmp.577_406];
  _187 = tmp[7][i_225];
  vect__188.580_403 = [vec_unpack_lo_expr] vect__187.579_404;
  vect__188.580_402 = [vec_unpack_hi_expr] vect__187.579_404;
  _188 = (int) _187;
  vect__189.581_401 = vect__186.576_409 + vect__188.580_403;
  vect__189.581_400 = vect__186.576_408 + vect__188.580_402;
  _189 = _186 + _188;
  vect__190.582_399 = ABS_EXPR <vect__189.581_401>;
  vect__190.582_398 = ABS_EXPR <vect__189.581_400>;
  _190 = ABS_EXPR <_189>;
  vect__191.583_397 = vect__184.572_415 + vect__190.582_399;
  vect__191.583_396 = vect__184.572_414 + vect__190.582_398;
  _191 = _184 + _190;
  vect__192.584_395 = vect__186.576_409 - vect__188.580_403;
  vect__192.584_394 = vect__186.576_408 - vect__188.580_402;
  _192 = _186 - _188;
  vect__193.585_393 = ABS_EXPR <vect__192.584_395>;
  vect__193.585_392 = ABS_EXPR <vect__192.584_394>;
  _193 = ABS_EXPR <_192>;
  vect__194.586_391 = vect__191.583_397 + vect__193.585_393;
  vect__194.586_390 = vect__191.583_396 + vect__193.585_392;
  _194 = _191 + _193;
  vect_sum8_195.587_388 = vect__194.586_391 + vect_sum8_195.587_389;
  vect_sum8_195.587_387 = vect__194.586_390 + vect_sum8_195.587_388;
  sum8_195 = _194 + sum8_222;
  # DEBUG sum8 => sum8_195
  i_196 = i_225 + 1;
  # DEBUG i => i_196
  # DEBUG i => i_196
  # DEBUG sum8 => sum8_195
  ivtmp_489 = ivtmp_487 - 1;
  vectp_tmp.532_481 = vectp_tmp.532_482 + 16;
  vectp_tmp.536_475 = vectp_tmp.536_476 + 16;
  vectp_tmp.545_459 = vectp_tmp.545_460 + 16;
  vectp_tmp.549_453 = vectp_tmp.549_454 + 16;
  vectp_tmp.559_435 = vectp_tmp.559_436 + 16;
  vectp_tmp.563_429 = vectp_tmp.563_430 + 16;
  vectp_tmp.573_411 = vectp_tmp.573_412 + 16;
  vectp_tmp.577_405 = vectp_tmp.577_406 + 16;
  ivtmp_378 = ivtmp_379 + 1;
  if (ivtmp_378 < 1)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  goto <bb 9>;

  <bb 11>:
  # sum8_485 = PHI <sum8_195(9)>
  # vect_sum8_195.587_386 = PHI <vect_sum8_195.587_387(9)>
  vect_sum8_195.589_385 = VEC_PERM_EXPR <vect_sum8_195.587_386, { 0, 0, 0, 0 }, { 2, 3, 4, 5 }>;
  vect_sum8_195.589_384 = vect_sum8_195.589_385 + vect_sum8_195.587_386;
  vect_sum8_195.589_383 = VEC_PERM_EXPR <vect_sum8_195.589_384, { 0, 0, 0, 0 }, { 1, 2, 3, 4 }>;
  vect_sum8_195.589_382 = vect_sum8_195.589_383 + vect_sum8_195.589_384;
  stmp_sum8_195.588_381 = BIT_FIELD_REF <vect_sum8_195.589_382, 32, 0>;
  vect_sum8_195.590_380 = stmp_sum8_195.588_381 + 0;
  _197 = tmp[0][0];
  _198 = (int) _197;
  _199 = tmp[4][0];
  _200 = (int) _199;
  _201 = _198 + _200;
  sum4_202 = sum4_486 - _201;
  # DEBUG sum4 => sum4_202
  sum8_203 = vect_sum8_195.590_380 - _201;
  # DEBUG sum8 => sum8_203
  _204 = (long unsigned int) sum8_203;
  _205 = _204 << 32;
  _206 = (long unsigned int) sum4_202;
  _207 = _205 + _206;
  tmp ={v} {CLOBBER};
  return _207;

}



;; Function x264_pixel_sad_x3_16x16 (x264_pixel_sad_x3_16x16, funcdef_no=150, decl_uid=8017, cgraph_uid=150, symbol_order=193)


Analyzing loop at common/pixel.c:59
common/pixel.c:59:1: note: ===== analyze_loop_nest =====
common/pixel.c:59:1: note: === vect_analyze_loop_form ===
common/pixel.c:59:1: note: ===== analyze_loop_nest_1 =====
common/pixel.c:59:1: note: === vect_analyze_loop_form ===
common/pixel.c:59:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 2
  exit condition [15, + , 4294967295] != 0
  bounds on difference of bases: -15 ... -15
  result:
    # of iterations 15, bounded by 15
common/pixel.c:59:1: note: Considering outer-loop vectorization.
common/pixel.c:59:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 1
  exit condition [15, + , 4294967295] != 0
  bounds on difference of bases: -15 ... -15
  result:
    # of iterations 15, bounded by 15
common/pixel.c:59:1: note: === vect_analyze_data_refs ===
Creating dr for *_16
analyze_innermost: success.
	base_address: fenc_34
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_2(D)
	Access function 0: {{0B, +, 16}_1, +, 1}_2
Creating dr for *_20
analyze_innermost: success.
	base_address: pix2_79
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix2_13(D)
	Access function 0: {{0B, +, pretmp_169}_1, +, 1}_2
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:59:1: note: analyze in outer-loop: *fenc_34
common/pixel.c:59:1: note: 	outer base_address: fenc_2(D)
	outer offset from base address: 0
	outer constant offset from base address: 0
	outer step: 16
	outer aligned to: 128
common/pixel.c:59:1: note: got vectype for stmt: _17 = *_16;
vector(16) unsigned char
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:59:1: note: analyze in outer-loop: *pix2_79
common/pixel.c:59:1: note: failed: evolution of base is not affine.
common/pixel.c:59:1: note: bad data references.

Analyzing loop at common/pixel.c:59
common/pixel.c:59:1: note: ===== analyze_loop_nest =====
common/pixel.c:59:1: note: === vect_analyze_loop_form ===
common/pixel.c:59:1: note: === get_loop_niters ===
common/pixel.c:59:1: note: === vect_analyze_data_refs ===
Creating dr for *_16
analyze_innermost: success.
	base_address: fenc_34
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_34
	Access function 0: {0B, +, 1}_2
Creating dr for *_20
analyze_innermost: success.
	base_address: pix2_79
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix2_79
	Access function 0: {0B, +, 1}_2
common/pixel.c:59:1: note: got vectype for stmt: _17 = *_16;
vector(16) unsigned char
common/pixel.c:59:1: note: got vectype for stmt: _21 = *_20;
vector(16) unsigned char
common/pixel.c:59:1: note: === vect_analyze_scalar_cycles ===
common/pixel.c:59:1: note: Analyze phi: x_8 = PHI <x_27(15), 0(19)>

common/pixel.c:59:1: note: Access function of PHI: {0, +, 1}_2
common/pixel.c:59:1: note: step: 1,  init: 0
common/pixel.c:59:1: note: Detected induction.
common/pixel.c:59:1: note: Analyze phi: i_sum_78 = PHI <i_sum_26(15), i_sum_12(19)>

common/pixel.c:59:1: note: Access function of PHI: {i_sum_12, +, _24}_2
common/pixel.c:59:1: note: step: _24,  init: i_sum_12
common/pixel.c:59:1: note: step unknown.
common/pixel.c:59:1: note: Analyze phi: ivtmp_162 = PHI <ivtmp_161(15), 16(19)>

common/pixel.c:59:1: note: Access function of PHI: {16, +, 4294967295}_2
common/pixel.c:59:1: note: step: 4294967295,  init: 16
common/pixel.c:59:1: note: Detected induction.
common/pixel.c:59:1: note: Analyze phi: i_sum_78 = PHI <i_sum_26(15), i_sum_12(19)>

common/pixel.c:59:1: note: detected reduction: i_sum_26 = _24 + i_sum_78;

common/pixel.c:59:1: note: Detected reduction.
common/pixel.c:59:1: note: === vect_pattern_recog ===
common/pixel.c:59:1: note: vect_is_simple_use: operand _24
common/pixel.c:59:1: note: def_stmt: _24 = ABS_EXPR <_23>;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: vect_is_simple_use: operand _24
common/pixel.c:59:1: note: def_stmt: _24 = ABS_EXPR <_23>;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: vect_is_simple_use: operand _24
common/pixel.c:59:1: note: def_stmt: _24 = ABS_EXPR <_23>;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: vect_is_simple_use: operand _18
common/pixel.c:59:1: note: def_stmt: _18 = (int) _17;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: vect_is_simple_use: operand _17
common/pixel.c:59:1: note: def_stmt: _17 = *_16;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: vect_is_simple_use: operand _22
common/pixel.c:59:1: note: def_stmt: _22 = (int) _21;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: vect_is_simple_use: operand _21
common/pixel.c:59:1: note: def_stmt: _21 = *_20;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: vect_recog_sad_pattern: detected: patt_150 = SAD_EXPR <_17, _21, i_sum_78>;

common/pixel.c:59:1: note: pattern recognized: patt_150 = SAD_EXPR <_17, _21, i_sum_78>;
common/pixel.c:59:1: note: === vect_analyze_data_ref_accesses ===
common/pixel.c:59:1: note: === vect_mark_stmts_to_be_vectorized ===
common/pixel.c:59:1: note: init: phi relevant? x_8 = PHI <x_27(15), 0(19)>
common/pixel.c:59:1: note: init: phi relevant? i_sum_78 = PHI <i_sum_26(15), i_sum_12(19)>
common/pixel.c:59:1: note: init: phi relevant? ivtmp_162 = PHI <ivtmp_161(15), 16(19)>
common/pixel.c:59:1: note: init: stmt relevant? # DEBUG x => x_8
common/pixel.c:59:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_78
common/pixel.c:59:1: note: init: stmt relevant? _10 = (sizetype) x_8;
common/pixel.c:59:1: note: init: stmt relevant? _16 = fenc_34 + _10;
common/pixel.c:59:1: note: init: stmt relevant? _17 = *_16;
common/pixel.c:59:1: note: init: stmt relevant? _18 = (int) _17;
common/pixel.c:59:1: note: init: stmt relevant? _20 = pix2_79 + _10;
common/pixel.c:59:1: note: init: stmt relevant? _21 = *_20;
common/pixel.c:59:1: note: init: stmt relevant? _22 = (int) _21;
common/pixel.c:59:1: note: init: stmt relevant? _23 = _18 - _22;
common/pixel.c:59:1: note: init: stmt relevant? _24 = ABS_EXPR <_23>;
common/pixel.c:59:1: note: init: stmt relevant? i_sum_26 = _24 + i_sum_78;
common/pixel.c:59:1: note: vec_stmt_relevant_p: used out of loop.
common/pixel.c:59:1: note: mark relevant 0, live 1.
common/pixel.c:59:1: note: last stmt in pattern. don't mark relevant/live.
common/pixel.c:59:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_26
common/pixel.c:59:1: note: init: stmt relevant? x_27 = x_8 + 1;
common/pixel.c:59:1: note: init: stmt relevant? # DEBUG x => x_27
common/pixel.c:59:1: note: init: stmt relevant? # DEBUG x => x_27
common/pixel.c:59:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_26
common/pixel.c:59:1: note: init: stmt relevant? ivtmp_161 = ivtmp_162 - 1;
common/pixel.c:59:1: note: init: stmt relevant? if (ivtmp_161 != 0)
common/pixel.c:59:1: note: worklist: examine stmt: patt_150 = SAD_EXPR <_17, _21, i_sum_78>;
common/pixel.c:59:1: note: vect_is_simple_use: operand _17
common/pixel.c:59:1: note: def_stmt: _17 = *_16;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: mark relevant 3, live 0.
common/pixel.c:59:1: note: vect_is_simple_use: operand _21
common/pixel.c:59:1: note: def_stmt: _21 = *_20;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: mark relevant 3, live 0.
common/pixel.c:59:1: note: vect_is_simple_use: operand i_sum_78
common/pixel.c:59:1: note: def_stmt: i_sum_78 = PHI <i_sum_26(15), i_sum_12(19)>
common/pixel.c:59:1: note: type of def: 5.
common/pixel.c:59:1: note: mark relevant 3, live 0.
common/pixel.c:59:1: note: worklist: examine stmt: i_sum_78 = PHI <i_sum_26(15), i_sum_12(19)>
common/pixel.c:59:1: note: vect_is_simple_use: operand i_sum_26
common/pixel.c:59:1: note: def_stmt: i_sum_26 = _24 + i_sum_78;
common/pixel.c:59:1: note: type of def: 5.
common/pixel.c:59:1: note: reduc-stmt defining reduc-phi in the same nest.
common/pixel.c:59:1: note: vect_is_simple_use: operand i_sum_12
common/pixel.c:59:1: note: def_stmt: i_sum_12 = PHI <i_sum_168(18), 0(14)>
common/pixel.c:59:1: note: type of def: 2.
common/pixel.c:59:1: note: def_stmt is out of loop.
common/pixel.c:59:1: note: worklist: examine stmt: _21 = *_20;
common/pixel.c:59:1: note: worklist: examine stmt: _17 = *_16;
common/pixel.c:59:1: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _17 = *_16;
  stmt_b: _21 = *_20;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _17 = *_16;
  stmt_b: _17 = *_16;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_2)
  (chrec_b = {0B, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _21 = *_20;
  stmt_b: _21 = *_20;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_2)
  (chrec_b = {0B, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/pixel.c:59:1: note: === vect_determine_vectorization_factor ===
common/pixel.c:59:1: note: ==> examining phi: x_8 = PHI <x_27(15), 0(19)>

common/pixel.c:59:1: note: ==> examining phi: i_sum_78 = PHI <i_sum_26(15), i_sum_12(19)>

common/pixel.c:59:1: note: get vectype for scalar type:  int
common/pixel.c:59:1: note: vectype: vector(4) int
common/pixel.c:59:1: note: nunits = 4
common/pixel.c:59:1: note: ==> examining phi: ivtmp_162 = PHI <ivtmp_161(15), 16(19)>

common/pixel.c:59:1: note: ==> examining statement: # DEBUG x => x_8

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: # DEBUG i_sum => i_sum_78

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: _10 = (sizetype) x_8;

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: _16 = fenc_34 + _10;

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: _17 = *_16;

common/pixel.c:59:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:59:1: note: vectype: vector(16) unsigned char
common/pixel.c:59:1: note: nunits = 16
common/pixel.c:59:1: note: ==> examining statement: _18 = (int) _17;

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: _20 = pix2_79 + _10;

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: _21 = *_20;

common/pixel.c:59:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:59:1: note: vectype: vector(16) unsigned char
common/pixel.c:59:1: note: nunits = 16
common/pixel.c:59:1: note: ==> examining statement: _22 = (int) _21;

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: _23 = _18 - _22;

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: _24 = ABS_EXPR <_23>;

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: i_sum_26 = _24 + i_sum_78;

common/pixel.c:59:1: note: ==> examining pattern statement: patt_150 = SAD_EXPR <_17, _21, i_sum_78>;

common/pixel.c:59:1: note: get vectype for scalar type:  int
common/pixel.c:59:1: note: vectype: vector(4) int
common/pixel.c:59:1: note: nunits = 4
common/pixel.c:59:1: note: ==> examining statement: # DEBUG i_sum => i_sum_26

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: x_27 = x_8 + 1;

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: # DEBUG x => x_27

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: # DEBUG x => x_27

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: # DEBUG i_sum => i_sum_26

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: ivtmp_161 = ivtmp_162 - 1;

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: if (ivtmp_161 != 0)

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: vectorization factor = 16
common/pixel.c:59:1: note: === vect_analyze_data_refs_alignment ===
common/pixel.c:59:1: note: vect_compute_data_ref_alignment:
common/pixel.c:59:1: note: can't force alignment of ref: *_16
common/pixel.c:59:1: note: vect_compute_data_ref_alignment:
common/pixel.c:59:1: note: can't force alignment of ref: *_20
common/pixel.c:59:1: note: === vect_prune_runtime_alias_test_list ===
common/pixel.c:59:1: note: === vect_enhance_data_refs_alignment ===
common/pixel.c:59:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:59:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:59:1: note: vect_can_advance_ivs_p:
common/pixel.c:59:1: note: Analyze phi: x_8 = PHI <x_27(15), 0(19)>

common/pixel.c:59:1: note: Analyze phi: i_sum_78 = PHI <i_sum_26(15), i_sum_12(19)>

common/pixel.c:59:1: note: reduc phi. skip.
common/pixel.c:59:1: note: Analyze phi: ivtmp_162 = PHI <ivtmp_161(15), 16(19)>

common/pixel.c:59:1: note: Vectorizing an unaligned access.
common/pixel.c:59:1: note: Vectorizing an unaligned access.
common/pixel.c:59:1: note: === vect_analyze_slp ===
common/pixel.c:59:1: note: === vect_make_slp_decision ===
common/pixel.c:59:1: note: === vect_detect_hybrid_slp ===
common/pixel.c:59:1: note: === vect_analyze_loop_operations ===
common/pixel.c:59:1: note: examining phi: x_8 = PHI <x_27(15), 0(19)>

common/pixel.c:59:1: note: examining phi: i_sum_78 = PHI <i_sum_26(15), i_sum_12(19)>

common/pixel.c:59:1: note: examining phi: ivtmp_162 = PHI <ivtmp_161(15), 16(19)>

common/pixel.c:59:1: note: ==> examining statement: # DEBUG x => x_8
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: # DEBUG i_sum => i_sum_78
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: _10 = (sizetype) x_8;
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: _16 = fenc_34 + _10;
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: _17 = *_16;
common/pixel.c:59:1: note: vect_is_simple_use: operand *_16
common/pixel.c:59:1: note: not ssa-name.
common/pixel.c:59:1: note: use not simple.
common/pixel.c:59:1: note: vect_is_simple_use: operand *_16
common/pixel.c:59:1: note: not ssa-name.
common/pixel.c:59:1: note: use not simple.
common/pixel.c:59:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:59:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:59:1: note: ==> examining statement: _18 = (int) _17;
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: _20 = pix2_79 + _10;
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: _21 = *_20;
common/pixel.c:59:1: note: vect_is_simple_use: operand *_20
common/pixel.c:59:1: note: not ssa-name.
common/pixel.c:59:1: note: use not simple.
common/pixel.c:59:1: note: vect_is_simple_use: operand *_20
common/pixel.c:59:1: note: not ssa-name.
common/pixel.c:59:1: note: use not simple.
common/pixel.c:59:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:59:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:59:1: note: ==> examining statement: _22 = (int) _21;
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: _23 = _18 - _22;
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: _24 = ABS_EXPR <_23>;
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: i_sum_26 = _24 + i_sum_78;
common/pixel.c:59:1: note: ==> examining pattern statement: patt_150 = SAD_EXPR <_17, _21, i_sum_78>;
common/pixel.c:59:1: note: vect_is_simple_use: operand _17
common/pixel.c:59:1: note: def_stmt: _17 = *_16;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: vect_is_simple_use: operand _21
common/pixel.c:59:1: note: def_stmt: _21 = *_20;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: vect_is_simple_use: operand i_sum_78
common/pixel.c:59:1: note: def_stmt: i_sum_78 = PHI <i_sum_26(15), i_sum_12(19)>
common/pixel.c:59:1: note: type of def: 5.
common/pixel.c:59:1: note: detected reduction: i_sum_26 = _24 + i_sum_78;

common/pixel.c:59:1: note: reduc op not supported by target.
vect_model_reduction_cost: inside_cost = 1, prologue_cost = 1, epilogue_cost = 5 .
common/pixel.c:59:1: note: ==> examining statement: # DEBUG i_sum => i_sum_26
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: x_27 = x_8 + 1;
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: # DEBUG x => x_27
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: # DEBUG x => x_27
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: # DEBUG i_sum => i_sum_26
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: ivtmp_161 = ivtmp_162 - 1;
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: if (ivtmp_161 != 0)
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: vectorization_factor = 16, niters = 16
common/pixel.c:59:1: note: === vect_update_slp_costs_according_to_vf ===
common/pixel.c:59:1: note: Cost model analysis: 
  Vector inside of loop cost: 5
  Vector prologue cost: 1
  Vector epilogue cost: 5
  Scalar iteration cost: 3
  Scalar outside cost: 0
  Vector outside cost: 6
  prologue iterations: 0
  epilogue iterations: 0
  Calculated minimum iters for profitability: 3
common/pixel.c:59:1: note:   Runtime profitability threshold = 15
common/pixel.c:59:1: note:   Static estimate profitability threshold = 15
common/pixel.c:59:1: note: loop vectorized
common/pixel.c:59:1: note: === vec_transform_loop ===
common/pixel.c:59:1: note: ------>vectorizing phi: x_8 = PHI <x_27(15), 0(21)>

common/pixel.c:59:1: note: ------>vectorizing phi: i_sum_78 = PHI <i_sum_26(15), i_sum_12(21)>

common/pixel.c:59:1: note: multiple-types.
common/pixel.c:59:1: note: ------>vectorizing phi: ivtmp_162 = PHI <ivtmp_161(15), 16(21)>

common/pixel.c:59:1: note: ------>vectorizing statement: # DEBUG x => x_8

common/pixel.c:59:1: note: ------>vectorizing statement: # DEBUG i_sum => i_sum_78

common/pixel.c:59:1: note: ------>vectorizing statement: _10 = (sizetype) x_8;

common/pixel.c:59:1: note: ------>vectorizing statement: _16 = fenc_34 + _10;

common/pixel.c:59:1: note: ------>vectorizing statement: _17 = *_16;

common/pixel.c:59:1: note: transform statement.
common/pixel.c:59:1: note: transform load. ncopies = 1
common/pixel.c:59:1: note: create vector_type-pointer variable to type: vector(16) unsigned char  vectorizing a pointer ref: *fenc_34
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:59:1: note: created vectp_fenc.617_149
common/pixel.c:59:1: note: add new stmt: vect__17.618_146 = MEM[(uint8_t *)vectp_fenc.616_148];
common/pixel.c:59:1: note: ------>vectorizing statement: _18 = (int) _17;

common/pixel.c:59:1: note: ------>vectorizing statement: _20 = pix2_79 + _10;

common/pixel.c:59:1: note: ------>vectorizing statement: _21 = *_20;

common/pixel.c:59:1: note: transform statement.
common/pixel.c:59:1: note: transform load. ncopies = 1
common/pixel.c:59:1: note: create vector_type-pointer variable to type: vector(16) unsigned char  vectorizing a pointer ref: *pix2_79
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:59:1: note: created vectp_pix2.620_145
common/pixel.c:59:1: note: add new stmt: vect__21.621_142 = MEM[(uint8_t *)vectp_pix2.619_144];
common/pixel.c:59:1: note: ------>vectorizing statement: _22 = (int) _21;

common/pixel.c:59:1: note: ------>vectorizing statement: _23 = _18 - _22;

common/pixel.c:59:1: note: ------>vectorizing statement: _24 = ABS_EXPR <_23>;

common/pixel.c:59:1: note: ------>vectorizing statement: i_sum_26 = _24 + i_sum_78;

common/pixel.c:59:1: note: multiple-types.
common/pixel.c:59:1: note: transform statement.
common/pixel.c:59:1: note: vect_is_simple_use: operand _17
common/pixel.c:59:1: note: def_stmt: _17 = *_16;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: vect_is_simple_use: operand _21
common/pixel.c:59:1: note: def_stmt: _21 = *_20;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: vect_is_simple_use: operand i_sum_78
common/pixel.c:59:1: note: def_stmt: i_sum_78 = PHI <i_sum_26(15), i_sum_12(21)>
common/pixel.c:59:1: note: type of def: 5.
common/pixel.c:59:1: note: detected reduction: i_sum_26 = _24 + i_sum_78;

common/pixel.c:59:1: note: reduc op not supported by target.
common/pixel.c:59:1: note: transform reduction.
common/pixel.c:59:1: note: vect_get_vec_def_for_operand: _17
common/pixel.c:59:1: note: vect_is_simple_use: operand _17
common/pixel.c:59:1: note: def_stmt: _17 = *_16;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: def =  _17
  def_stmt =  _17 = *_16;
common/pixel.c:59:1: note: vect_get_vec_def_for_operand: _21
common/pixel.c:59:1: note: vect_is_simple_use: operand _21
common/pixel.c:59:1: note: def_stmt: _21 = *_20;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: def =  _21
  def_stmt =  _21 = *_20;
common/pixel.c:59:1: note: add new stmt: vect_patt_150.622_140 = SAD_EXPR <vect__17.618_146, vect__21.621_142, vect_patt_150.622_141>;
common/pixel.c:59:1: note: vect_is_simple_use: operand i_sum_12
common/pixel.c:59:1: note: def_stmt: i_sum_12 = PHI <i_sum_168(18), 0(14)>
common/pixel.c:59:1: note: type of def: 2.
common/pixel.c:59:1: note: vect_get_vec_def_for_operand: i_sum_78
common/pixel.c:59:1: note: vect_is_simple_use: operand i_sum_78
common/pixel.c:59:1: note: def_stmt: i_sum_78 = PHI <i_sum_26(15), i_sum_12(21)>
common/pixel.c:59:1: note: type of def: 5.
common/pixel.c:59:1: note: def =  i_sum_78
  def_stmt =  i_sum_78 = PHI <i_sum_26(15), i_sum_12(21)>
common/pixel.c:59:1: note: transform reduction: created def-use cycle: vect_patt_150.622_141 = PHI <vect_patt_150.622_140(15), { 0, 0, 0, 0 }(21)>

vect_patt_150.622_140 = SAD_EXPR <vect__17.618_146, vect__21.621_142, vect_patt_150.622_141>;

common/pixel.c:59:1: note: Reduce using vector shifts
common/pixel.c:59:1: note: extract scalar result
common/pixel.c:59:1: note: ------>vectorizing statement: # DEBUG i_sum => i_sum_26

common/pixel.c:59:1: note: ------>vectorizing statement: x_27 = x_8 + 1;

common/pixel.c:59:1: note: ------>vectorizing statement: # DEBUG x => x_27

common/pixel.c:59:1: note: ------>vectorizing statement: # DEBUG x => x_27

common/pixel.c:59:1: note: ------>vectorizing statement: # DEBUG i_sum => i_sum_26

common/pixel.c:59:1: note: ------>vectorizing statement: ivtmp_161 = ivtmp_162 - 1;

common/pixel.c:59:1: note: ------>vectorizing statement: vectp_fenc.616_147 = vectp_fenc.616_148 + 16;

common/pixel.c:59:1: note: ------>vectorizing statement: vectp_pix2.619_143 = vectp_pix2.619_144 + 16;

common/pixel.c:59:1: note: ------>vectorizing statement: if (ivtmp_161 != 0)


loop at common/pixel.c:59: if (ivtmp_131 < 1)

;; Scaling loop 2 with scale 0.062500, bounding iterations to 1 from guessed 16
;; guessed iterations are now 1
common/pixel.c:59:1: note: LOOP VECTORIZED


Analyzing loop at common/pixel.c:59
common/pixel.c:59:1: note: ===== analyze_loop_nest =====
common/pixel.c:59:1: note: === vect_analyze_loop_form ===
common/pixel.c:59:1: note: ===== analyze_loop_nest_1 =====
common/pixel.c:59:1: note: === vect_analyze_loop_form ===
common/pixel.c:59:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 4
  exit condition [15, + , 4294967295] != 0
  bounds on difference of bases: -15 ... -15
  result:
    # of iterations 15, bounded by 15
common/pixel.c:59:1: note: Considering outer-loop vectorization.
common/pixel.c:59:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 3
  exit condition [15, + , 4294967295] != 0
  bounds on difference of bases: -15 ... -15
  result:
    # of iterations 15, bounded by 15
common/pixel.c:59:1: note: === vect_analyze_data_refs ===
Creating dr for *_38
analyze_innermost: success.
	base_address: fenc_105
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_2(D)
	Access function 0: {{0B, +, 16}_3, +, 1}_4
Creating dr for *_42
analyze_innermost: success.
	base_address: pix1_106
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix1_9(D)
	Access function 0: {{0B, +, pretmp_169}_3, +, 1}_4
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:59:1: note: analyze in outer-loop: *fenc_105
common/pixel.c:59:1: note: 	outer base_address: fenc_2(D)
	outer offset from base address: 0
	outer constant offset from base address: 0
	outer step: 16
	outer aligned to: 128
common/pixel.c:59:1: note: got vectype for stmt: _39 = *_38;
vector(16) unsigned char
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:59:1: note: analyze in outer-loop: *pix1_106
common/pixel.c:59:1: note: failed: evolution of base is not affine.
common/pixel.c:59:1: note: bad data references.

Analyzing loop at common/pixel.c:59
common/pixel.c:59:1: note: ===== analyze_loop_nest =====
common/pixel.c:59:1: note: === vect_analyze_loop_form ===
common/pixel.c:59:1: note: === get_loop_niters ===
common/pixel.c:59:1: note: === vect_analyze_data_refs ===
Creating dr for *_38
analyze_innermost: success.
	base_address: fenc_105
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_105
	Access function 0: {0B, +, 1}_4
Creating dr for *_42
analyze_innermost: success.
	base_address: pix1_106
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix1_106
	Access function 0: {0B, +, 1}_4
common/pixel.c:59:1: note: got vectype for stmt: _39 = *_38;
vector(16) unsigned char
common/pixel.c:59:1: note: got vectype for stmt: _43 = *_42;
vector(16) unsigned char
common/pixel.c:59:1: note: === vect_analyze_scalar_cycles ===
common/pixel.c:59:1: note: Analyze phi: x_104 = PHI <x_49(9), 0(13)>

common/pixel.c:59:1: note: Access function of PHI: {0, +, 1}_4
common/pixel.c:59:1: note: step: 1,  init: 0
common/pixel.c:59:1: note: Detected induction.
common/pixel.c:59:1: note: Analyze phi: i_sum_107 = PHI <i_sum_48(9), i_sum_109(13)>

common/pixel.c:59:1: note: Access function of PHI: {i_sum_109, +, _46}_4
common/pixel.c:59:1: note: step: _46,  init: i_sum_109
common/pixel.c:59:1: note: step unknown.
common/pixel.c:59:1: note: Analyze phi: ivtmp_158 = PHI <ivtmp_157(9), 16(13)>

common/pixel.c:59:1: note: Access function of PHI: {16, +, 4294967295}_4
common/pixel.c:59:1: note: step: 4294967295,  init: 16
common/pixel.c:59:1: note: Detected induction.
common/pixel.c:59:1: note: Analyze phi: i_sum_107 = PHI <i_sum_48(9), i_sum_109(13)>

common/pixel.c:59:1: note: detected reduction: i_sum_48 = _46 + i_sum_107;

common/pixel.c:59:1: note: Detected reduction.
common/pixel.c:59:1: note: === vect_pattern_recog ===
common/pixel.c:59:1: note: vect_is_simple_use: operand _46
common/pixel.c:59:1: note: def_stmt: _46 = ABS_EXPR <_45>;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: vect_is_simple_use: operand _46
common/pixel.c:59:1: note: def_stmt: _46 = ABS_EXPR <_45>;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: vect_is_simple_use: operand _46
common/pixel.c:59:1: note: def_stmt: _46 = ABS_EXPR <_45>;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: vect_is_simple_use: operand _40
common/pixel.c:59:1: note: def_stmt: _40 = (int) _39;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: vect_is_simple_use: operand _39
common/pixel.c:59:1: note: def_stmt: _39 = *_38;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: vect_is_simple_use: operand _44
common/pixel.c:59:1: note: def_stmt: _44 = (int) _43;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: vect_is_simple_use: operand _43
common/pixel.c:59:1: note: def_stmt: _43 = *_42;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: vect_recog_sad_pattern: detected: patt_130 = SAD_EXPR <_39, _43, i_sum_107>;

common/pixel.c:59:1: note: pattern recognized: patt_130 = SAD_EXPR <_39, _43, i_sum_107>;
common/pixel.c:59:1: note: === vect_analyze_data_ref_accesses ===
common/pixel.c:59:1: note: === vect_mark_stmts_to_be_vectorized ===
common/pixel.c:59:1: note: init: phi relevant? x_104 = PHI <x_49(9), 0(13)>
common/pixel.c:59:1: note: init: phi relevant? i_sum_107 = PHI <i_sum_48(9), i_sum_109(13)>
common/pixel.c:59:1: note: init: phi relevant? ivtmp_158 = PHI <ivtmp_157(9), 16(13)>
common/pixel.c:59:1: note: init: stmt relevant? # DEBUG x => x_104
common/pixel.c:59:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_107
common/pixel.c:59:1: note: init: stmt relevant? _36 = (sizetype) x_104;
common/pixel.c:59:1: note: init: stmt relevant? _38 = fenc_105 + _36;
common/pixel.c:59:1: note: init: stmt relevant? _39 = *_38;
common/pixel.c:59:1: note: init: stmt relevant? _40 = (int) _39;
common/pixel.c:59:1: note: init: stmt relevant? _42 = pix1_106 + _36;
common/pixel.c:59:1: note: init: stmt relevant? _43 = *_42;
common/pixel.c:59:1: note: init: stmt relevant? _44 = (int) _43;
common/pixel.c:59:1: note: init: stmt relevant? _45 = _40 - _44;
common/pixel.c:59:1: note: init: stmt relevant? _46 = ABS_EXPR <_45>;
common/pixel.c:59:1: note: init: stmt relevant? i_sum_48 = _46 + i_sum_107;
common/pixel.c:59:1: note: vec_stmt_relevant_p: used out of loop.
common/pixel.c:59:1: note: mark relevant 0, live 1.
common/pixel.c:59:1: note: last stmt in pattern. don't mark relevant/live.
common/pixel.c:59:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_48
common/pixel.c:59:1: note: init: stmt relevant? x_49 = x_104 + 1;
common/pixel.c:59:1: note: init: stmt relevant? # DEBUG x => x_49
common/pixel.c:59:1: note: init: stmt relevant? # DEBUG x => x_49
common/pixel.c:59:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_48
common/pixel.c:59:1: note: init: stmt relevant? ivtmp_157 = ivtmp_158 - 1;
common/pixel.c:59:1: note: init: stmt relevant? if (ivtmp_157 != 0)
common/pixel.c:59:1: note: worklist: examine stmt: patt_130 = SAD_EXPR <_39, _43, i_sum_107>;
common/pixel.c:59:1: note: vect_is_simple_use: operand _39
common/pixel.c:59:1: note: def_stmt: _39 = *_38;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: mark relevant 3, live 0.
common/pixel.c:59:1: note: vect_is_simple_use: operand _43
common/pixel.c:59:1: note: def_stmt: _43 = *_42;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: mark relevant 3, live 0.
common/pixel.c:59:1: note: vect_is_simple_use: operand i_sum_107
common/pixel.c:59:1: note: def_stmt: i_sum_107 = PHI <i_sum_48(9), i_sum_109(13)>
common/pixel.c:59:1: note: type of def: 5.
common/pixel.c:59:1: note: mark relevant 3, live 0.
common/pixel.c:59:1: note: worklist: examine stmt: i_sum_107 = PHI <i_sum_48(9), i_sum_109(13)>
common/pixel.c:59:1: note: vect_is_simple_use: operand i_sum_48
common/pixel.c:59:1: note: def_stmt: i_sum_48 = _46 + i_sum_107;
common/pixel.c:59:1: note: type of def: 5.
common/pixel.c:59:1: note: reduc-stmt defining reduc-phi in the same nest.
common/pixel.c:59:1: note: vect_is_simple_use: operand i_sum_109
common/pixel.c:59:1: note: def_stmt: i_sum_109 = PHI <i_sum_166(12), 0(8)>
common/pixel.c:59:1: note: type of def: 2.
common/pixel.c:59:1: note: def_stmt is out of loop.
common/pixel.c:59:1: note: worklist: examine stmt: _43 = *_42;
common/pixel.c:59:1: note: worklist: examine stmt: _39 = *_38;
common/pixel.c:59:1: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _39 = *_38;
  stmt_b: _43 = *_42;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _39 = *_38;
  stmt_b: _39 = *_38;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_4)
  (chrec_b = {0B, +, 1}_4)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _43 = *_42;
  stmt_b: _43 = *_42;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_4)
  (chrec_b = {0B, +, 1}_4)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/pixel.c:59:1: note: === vect_determine_vectorization_factor ===
common/pixel.c:59:1: note: ==> examining phi: x_104 = PHI <x_49(9), 0(13)>

common/pixel.c:59:1: note: ==> examining phi: i_sum_107 = PHI <i_sum_48(9), i_sum_109(13)>

common/pixel.c:59:1: note: get vectype for scalar type:  int
common/pixel.c:59:1: note: vectype: vector(4) int
common/pixel.c:59:1: note: nunits = 4
common/pixel.c:59:1: note: ==> examining phi: ivtmp_158 = PHI <ivtmp_157(9), 16(13)>

common/pixel.c:59:1: note: ==> examining statement: # DEBUG x => x_104

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: # DEBUG i_sum => i_sum_107

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: _36 = (sizetype) x_104;

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: _38 = fenc_105 + _36;

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: _39 = *_38;

common/pixel.c:59:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:59:1: note: vectype: vector(16) unsigned char
common/pixel.c:59:1: note: nunits = 16
common/pixel.c:59:1: note: ==> examining statement: _40 = (int) _39;

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: _42 = pix1_106 + _36;

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: _43 = *_42;

common/pixel.c:59:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:59:1: note: vectype: vector(16) unsigned char
common/pixel.c:59:1: note: nunits = 16
common/pixel.c:59:1: note: ==> examining statement: _44 = (int) _43;

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: _45 = _40 - _44;

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: _46 = ABS_EXPR <_45>;

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: i_sum_48 = _46 + i_sum_107;

common/pixel.c:59:1: note: ==> examining pattern statement: patt_130 = SAD_EXPR <_39, _43, i_sum_107>;

common/pixel.c:59:1: note: get vectype for scalar type:  int
common/pixel.c:59:1: note: vectype: vector(4) int
common/pixel.c:59:1: note: nunits = 4
common/pixel.c:59:1: note: ==> examining statement: # DEBUG i_sum => i_sum_48

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: x_49 = x_104 + 1;

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: # DEBUG x => x_49

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: # DEBUG x => x_49

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: # DEBUG i_sum => i_sum_48

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: ivtmp_157 = ivtmp_158 - 1;

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: if (ivtmp_157 != 0)

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: vectorization factor = 16
common/pixel.c:59:1: note: === vect_analyze_data_refs_alignment ===
common/pixel.c:59:1: note: vect_compute_data_ref_alignment:
common/pixel.c:59:1: note: can't force alignment of ref: *_38
common/pixel.c:59:1: note: vect_compute_data_ref_alignment:
common/pixel.c:59:1: note: can't force alignment of ref: *_42
common/pixel.c:59:1: note: === vect_prune_runtime_alias_test_list ===
common/pixel.c:59:1: note: === vect_enhance_data_refs_alignment ===
common/pixel.c:59:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:59:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:59:1: note: vect_can_advance_ivs_p:
common/pixel.c:59:1: note: Analyze phi: x_104 = PHI <x_49(9), 0(13)>

common/pixel.c:59:1: note: Analyze phi: i_sum_107 = PHI <i_sum_48(9), i_sum_109(13)>

common/pixel.c:59:1: note: reduc phi. skip.
common/pixel.c:59:1: note: Analyze phi: ivtmp_158 = PHI <ivtmp_157(9), 16(13)>

common/pixel.c:59:1: note: Vectorizing an unaligned access.
common/pixel.c:59:1: note: Vectorizing an unaligned access.
common/pixel.c:59:1: note: === vect_analyze_slp ===
common/pixel.c:59:1: note: === vect_make_slp_decision ===
common/pixel.c:59:1: note: === vect_detect_hybrid_slp ===
common/pixel.c:59:1: note: === vect_analyze_loop_operations ===
common/pixel.c:59:1: note: examining phi: x_104 = PHI <x_49(9), 0(13)>

common/pixel.c:59:1: note: examining phi: i_sum_107 = PHI <i_sum_48(9), i_sum_109(13)>

common/pixel.c:59:1: note: examining phi: ivtmp_158 = PHI <ivtmp_157(9), 16(13)>

common/pixel.c:59:1: note: ==> examining statement: # DEBUG x => x_104
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: # DEBUG i_sum => i_sum_107
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: _36 = (sizetype) x_104;
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: _38 = fenc_105 + _36;
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: _39 = *_38;
common/pixel.c:59:1: note: vect_is_simple_use: operand *_38
common/pixel.c:59:1: note: not ssa-name.
common/pixel.c:59:1: note: use not simple.
common/pixel.c:59:1: note: vect_is_simple_use: operand *_38
common/pixel.c:59:1: note: not ssa-name.
common/pixel.c:59:1: note: use not simple.
common/pixel.c:59:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:59:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:59:1: note: ==> examining statement: _40 = (int) _39;
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: _42 = pix1_106 + _36;
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: _43 = *_42;
common/pixel.c:59:1: note: vect_is_simple_use: operand *_42
common/pixel.c:59:1: note: not ssa-name.
common/pixel.c:59:1: note: use not simple.
common/pixel.c:59:1: note: vect_is_simple_use: operand *_42
common/pixel.c:59:1: note: not ssa-name.
common/pixel.c:59:1: note: use not simple.
common/pixel.c:59:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:59:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:59:1: note: ==> examining statement: _44 = (int) _43;
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: _45 = _40 - _44;
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: _46 = ABS_EXPR <_45>;
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: i_sum_48 = _46 + i_sum_107;
common/pixel.c:59:1: note: ==> examining pattern statement: patt_130 = SAD_EXPR <_39, _43, i_sum_107>;
common/pixel.c:59:1: note: vect_is_simple_use: operand _39
common/pixel.c:59:1: note: def_stmt: _39 = *_38;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: vect_is_simple_use: operand _43
common/pixel.c:59:1: note: def_stmt: _43 = *_42;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: vect_is_simple_use: operand i_sum_107
common/pixel.c:59:1: note: def_stmt: i_sum_107 = PHI <i_sum_48(9), i_sum_109(13)>
common/pixel.c:59:1: note: type of def: 5.
common/pixel.c:59:1: note: detected reduction: i_sum_48 = _46 + i_sum_107;

common/pixel.c:59:1: note: reduc op not supported by target.
vect_model_reduction_cost: inside_cost = 1, prologue_cost = 1, epilogue_cost = 5 .
common/pixel.c:59:1: note: ==> examining statement: # DEBUG i_sum => i_sum_48
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: x_49 = x_104 + 1;
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: # DEBUG x => x_49
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: # DEBUG x => x_49
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: # DEBUG i_sum => i_sum_48
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: ivtmp_157 = ivtmp_158 - 1;
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: if (ivtmp_157 != 0)
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: vectorization_factor = 16, niters = 16
common/pixel.c:59:1: note: === vect_update_slp_costs_according_to_vf ===
common/pixel.c:59:1: note: Cost model analysis: 
  Vector inside of loop cost: 5
  Vector prologue cost: 1
  Vector epilogue cost: 5
  Scalar iteration cost: 3
  Scalar outside cost: 0
  Vector outside cost: 6
  prologue iterations: 0
  epilogue iterations: 0
  Calculated minimum iters for profitability: 3
common/pixel.c:59:1: note:   Runtime profitability threshold = 15
common/pixel.c:59:1: note:   Static estimate profitability threshold = 15
common/pixel.c:59:1: note: loop vectorized
common/pixel.c:59:1: note: === vec_transform_loop ===
common/pixel.c:59:1: note: ------>vectorizing phi: x_104 = PHI <x_49(9), 0(22)>

common/pixel.c:59:1: note: ------>vectorizing phi: i_sum_107 = PHI <i_sum_48(9), i_sum_109(22)>

common/pixel.c:59:1: note: multiple-types.
common/pixel.c:59:1: note: ------>vectorizing phi: ivtmp_158 = PHI <ivtmp_157(9), 16(22)>

common/pixel.c:59:1: note: ------>vectorizing statement: # DEBUG x => x_104

common/pixel.c:59:1: note: ------>vectorizing statement: # DEBUG i_sum => i_sum_107

common/pixel.c:59:1: note: ------>vectorizing statement: _36 = (sizetype) x_104;

common/pixel.c:59:1: note: ------>vectorizing statement: _38 = fenc_105 + _36;

common/pixel.c:59:1: note: ------>vectorizing statement: _39 = *_38;

common/pixel.c:59:1: note: transform statement.
common/pixel.c:59:1: note: transform load. ncopies = 1
common/pixel.c:59:1: note: create vector_type-pointer variable to type: vector(16) unsigned char  vectorizing a pointer ref: *fenc_105
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:59:1: note: created vectp_fenc.627_129
common/pixel.c:59:1: note: add new stmt: vect__39.628_126 = MEM[(uint8_t *)vectp_fenc.626_128];
common/pixel.c:59:1: note: ------>vectorizing statement: _40 = (int) _39;

common/pixel.c:59:1: note: ------>vectorizing statement: _42 = pix1_106 + _36;

common/pixel.c:59:1: note: ------>vectorizing statement: _43 = *_42;

common/pixel.c:59:1: note: transform statement.
common/pixel.c:59:1: note: transform load. ncopies = 1
common/pixel.c:59:1: note: create vector_type-pointer variable to type: vector(16) unsigned char  vectorizing a pointer ref: *pix1_106
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:59:1: note: created vectp_pix1.630_125
common/pixel.c:59:1: note: add new stmt: vect__43.631_122 = MEM[(uint8_t *)vectp_pix1.629_124];
common/pixel.c:59:1: note: ------>vectorizing statement: _44 = (int) _43;

common/pixel.c:59:1: note: ------>vectorizing statement: _45 = _40 - _44;

common/pixel.c:59:1: note: ------>vectorizing statement: _46 = ABS_EXPR <_45>;

common/pixel.c:59:1: note: ------>vectorizing statement: i_sum_48 = _46 + i_sum_107;

common/pixel.c:59:1: note: multiple-types.
common/pixel.c:59:1: note: transform statement.
common/pixel.c:59:1: note: vect_is_simple_use: operand _39
common/pixel.c:59:1: note: def_stmt: _39 = *_38;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: vect_is_simple_use: operand _43
common/pixel.c:59:1: note: def_stmt: _43 = *_42;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: vect_is_simple_use: operand i_sum_107
common/pixel.c:59:1: note: def_stmt: i_sum_107 = PHI <i_sum_48(9), i_sum_109(22)>
common/pixel.c:59:1: note: type of def: 5.
common/pixel.c:59:1: note: detected reduction: i_sum_48 = _46 + i_sum_107;

common/pixel.c:59:1: note: reduc op not supported by target.
common/pixel.c:59:1: note: transform reduction.
common/pixel.c:59:1: note: vect_get_vec_def_for_operand: _39
common/pixel.c:59:1: note: vect_is_simple_use: operand _39
common/pixel.c:59:1: note: def_stmt: _39 = *_38;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: def =  _39
  def_stmt =  _39 = *_38;
common/pixel.c:59:1: note: vect_get_vec_def_for_operand: _43
common/pixel.c:59:1: note: vect_is_simple_use: operand _43
common/pixel.c:59:1: note: def_stmt: _43 = *_42;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: def =  _43
  def_stmt =  _43 = *_42;
common/pixel.c:59:1: note: add new stmt: vect_patt_130.632_120 = SAD_EXPR <vect__39.628_126, vect__43.631_122, vect_patt_130.632_121>;
common/pixel.c:59:1: note: vect_is_simple_use: operand i_sum_109
common/pixel.c:59:1: note: def_stmt: i_sum_109 = PHI <i_sum_166(12), 0(8)>
common/pixel.c:59:1: note: type of def: 2.
common/pixel.c:59:1: note: vect_get_vec_def_for_operand: i_sum_107
common/pixel.c:59:1: note: vect_is_simple_use: operand i_sum_107
common/pixel.c:59:1: note: def_stmt: i_sum_107 = PHI <i_sum_48(9), i_sum_109(22)>
common/pixel.c:59:1: note: type of def: 5.
common/pixel.c:59:1: note: def =  i_sum_107
  def_stmt =  i_sum_107 = PHI <i_sum_48(9), i_sum_109(22)>
common/pixel.c:59:1: note: transform reduction: created def-use cycle: vect_patt_130.632_121 = PHI <vect_patt_130.632_120(9), { 0, 0, 0, 0 }(22)>

vect_patt_130.632_120 = SAD_EXPR <vect__39.628_126, vect__43.631_122, vect_patt_130.632_121>;

common/pixel.c:59:1: note: Reduce using vector shifts
common/pixel.c:59:1: note: extract scalar result
common/pixel.c:59:1: note: ------>vectorizing statement: # DEBUG i_sum => i_sum_48

common/pixel.c:59:1: note: ------>vectorizing statement: x_49 = x_104 + 1;

common/pixel.c:59:1: note: ------>vectorizing statement: # DEBUG x => x_49

common/pixel.c:59:1: note: ------>vectorizing statement: # DEBUG x => x_49

common/pixel.c:59:1: note: ------>vectorizing statement: # DEBUG i_sum => i_sum_48

common/pixel.c:59:1: note: ------>vectorizing statement: ivtmp_157 = ivtmp_158 - 1;

common/pixel.c:59:1: note: ------>vectorizing statement: vectp_fenc.626_127 = vectp_fenc.626_128 + 16;

common/pixel.c:59:1: note: ------>vectorizing statement: vectp_pix1.629_123 = vectp_pix1.629_124 + 16;

common/pixel.c:59:1: note: ------>vectorizing statement: if (ivtmp_157 != 0)


loop at common/pixel.c:59: if (ivtmp_99 < 1)

;; Scaling loop 4 with scale 0.062500, bounding iterations to 1 from guessed 16
;; guessed iterations are now 1
common/pixel.c:59:1: note: LOOP VECTORIZED


Analyzing loop at common/pixel.c:59
common/pixel.c:59:1: note: ===== analyze_loop_nest =====
common/pixel.c:59:1: note: === vect_analyze_loop_form ===
common/pixel.c:59:1: note: ===== analyze_loop_nest_1 =====
common/pixel.c:59:1: note: === vect_analyze_loop_form ===
common/pixel.c:59:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 6
  exit condition [15, + , 4294967295] != 0
  bounds on difference of bases: -15 ... -15
  result:
    # of iterations 15, bounded by 15
common/pixel.c:59:1: note: Considering outer-loop vectorization.
common/pixel.c:59:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 5
  exit condition [15, + , 4294967295] != 0
  bounds on difference of bases: -15 ... -15
  result:
    # of iterations 15, bounded by 15
common/pixel.c:59:1: note: === vect_analyze_data_refs ===
Creating dr for *_60
analyze_innermost: success.
	base_address: fenc_111
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_2(D)
	Access function 0: {{0B, +, 16}_5, +, 1}_6
Creating dr for *_64
analyze_innermost: success.
	base_address: pix0_112
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix0_3(D)
	Access function 0: {{0B, +, pretmp_169}_5, +, 1}_6
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:59:1: note: analyze in outer-loop: *fenc_111
common/pixel.c:59:1: note: 	outer base_address: fenc_2(D)
	outer offset from base address: 0
	outer constant offset from base address: 0
	outer step: 16
	outer aligned to: 128
common/pixel.c:59:1: note: got vectype for stmt: _61 = *_60;
vector(16) unsigned char
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:59:1: note: analyze in outer-loop: *pix0_112
common/pixel.c:59:1: note: failed: evolution of base is not affine.
common/pixel.c:59:1: note: bad data references.

Analyzing loop at common/pixel.c:59
common/pixel.c:59:1: note: ===== analyze_loop_nest =====
common/pixel.c:59:1: note: === vect_analyze_loop_form ===
common/pixel.c:59:1: note: === get_loop_niters ===
common/pixel.c:59:1: note: === vect_analyze_data_refs ===
Creating dr for *_60
analyze_innermost: success.
	base_address: fenc_111
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_111
	Access function 0: {0B, +, 1}_6
Creating dr for *_64
analyze_innermost: success.
	base_address: pix0_112
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix0_112
	Access function 0: {0B, +, 1}_6
common/pixel.c:59:1: note: got vectype for stmt: _61 = *_60;
vector(16) unsigned char
common/pixel.c:59:1: note: got vectype for stmt: _65 = *_64;
vector(16) unsigned char
common/pixel.c:59:1: note: === vect_analyze_scalar_cycles ===
common/pixel.c:59:1: note: Analyze phi: x_110 = PHI <x_71(3), 0(7)>

common/pixel.c:59:1: note: Access function of PHI: {0, +, 1}_6
common/pixel.c:59:1: note: step: 1,  init: 0
common/pixel.c:59:1: note: Detected induction.
common/pixel.c:59:1: note: Analyze phi: i_sum_113 = PHI <i_sum_70(3), i_sum_115(7)>

common/pixel.c:59:1: note: Access function of PHI: {i_sum_115, +, _68}_6
common/pixel.c:59:1: note: step: _68,  init: i_sum_115
common/pixel.c:59:1: note: step unknown.
common/pixel.c:59:1: note: Analyze phi: ivtmp_154 = PHI <ivtmp_153(3), 16(7)>

common/pixel.c:59:1: note: Access function of PHI: {16, +, 4294967295}_6
common/pixel.c:59:1: note: step: 4294967295,  init: 16
common/pixel.c:59:1: note: Detected induction.
common/pixel.c:59:1: note: Analyze phi: i_sum_113 = PHI <i_sum_70(3), i_sum_115(7)>

common/pixel.c:59:1: note: detected reduction: i_sum_70 = _68 + i_sum_113;

common/pixel.c:59:1: note: Detected reduction.
common/pixel.c:59:1: note: === vect_pattern_recog ===
common/pixel.c:59:1: note: vect_is_simple_use: operand _68
common/pixel.c:59:1: note: def_stmt: _68 = ABS_EXPR <_67>;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: vect_is_simple_use: operand _68
common/pixel.c:59:1: note: def_stmt: _68 = ABS_EXPR <_67>;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: vect_is_simple_use: operand _68
common/pixel.c:59:1: note: def_stmt: _68 = ABS_EXPR <_67>;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: vect_is_simple_use: operand _62
common/pixel.c:59:1: note: def_stmt: _62 = (int) _61;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: vect_is_simple_use: operand _61
common/pixel.c:59:1: note: def_stmt: _61 = *_60;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: vect_is_simple_use: operand _66
common/pixel.c:59:1: note: def_stmt: _66 = (int) _65;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: vect_is_simple_use: operand _65
common/pixel.c:59:1: note: def_stmt: _65 = *_64;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: vect_recog_sad_pattern: detected: patt_98 = SAD_EXPR <_61, _65, i_sum_113>;

common/pixel.c:59:1: note: pattern recognized: patt_98 = SAD_EXPR <_61, _65, i_sum_113>;
common/pixel.c:59:1: note: === vect_analyze_data_ref_accesses ===
common/pixel.c:59:1: note: === vect_mark_stmts_to_be_vectorized ===
common/pixel.c:59:1: note: init: phi relevant? x_110 = PHI <x_71(3), 0(7)>
common/pixel.c:59:1: note: init: phi relevant? i_sum_113 = PHI <i_sum_70(3), i_sum_115(7)>
common/pixel.c:59:1: note: init: phi relevant? ivtmp_154 = PHI <ivtmp_153(3), 16(7)>
common/pixel.c:59:1: note: init: stmt relevant? # DEBUG x => x_110
common/pixel.c:59:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_113
common/pixel.c:59:1: note: init: stmt relevant? _58 = (sizetype) x_110;
common/pixel.c:59:1: note: init: stmt relevant? _60 = fenc_111 + _58;
common/pixel.c:59:1: note: init: stmt relevant? _61 = *_60;
common/pixel.c:59:1: note: init: stmt relevant? _62 = (int) _61;
common/pixel.c:59:1: note: init: stmt relevant? _64 = pix0_112 + _58;
common/pixel.c:59:1: note: init: stmt relevant? _65 = *_64;
common/pixel.c:59:1: note: init: stmt relevant? _66 = (int) _65;
common/pixel.c:59:1: note: init: stmt relevant? _67 = _62 - _66;
common/pixel.c:59:1: note: init: stmt relevant? _68 = ABS_EXPR <_67>;
common/pixel.c:59:1: note: init: stmt relevant? i_sum_70 = _68 + i_sum_113;
common/pixel.c:59:1: note: vec_stmt_relevant_p: used out of loop.
common/pixel.c:59:1: note: mark relevant 0, live 1.
common/pixel.c:59:1: note: last stmt in pattern. don't mark relevant/live.
common/pixel.c:59:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_70
common/pixel.c:59:1: note: init: stmt relevant? x_71 = x_110 + 1;
common/pixel.c:59:1: note: init: stmt relevant? # DEBUG x => x_71
common/pixel.c:59:1: note: init: stmt relevant? # DEBUG x => x_71
common/pixel.c:59:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_70
common/pixel.c:59:1: note: init: stmt relevant? ivtmp_153 = ivtmp_154 - 1;
common/pixel.c:59:1: note: init: stmt relevant? if (ivtmp_153 != 0)
common/pixel.c:59:1: note: worklist: examine stmt: patt_98 = SAD_EXPR <_61, _65, i_sum_113>;
common/pixel.c:59:1: note: vect_is_simple_use: operand _61
common/pixel.c:59:1: note: def_stmt: _61 = *_60;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: mark relevant 3, live 0.
common/pixel.c:59:1: note: vect_is_simple_use: operand _65
common/pixel.c:59:1: note: def_stmt: _65 = *_64;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: mark relevant 3, live 0.
common/pixel.c:59:1: note: vect_is_simple_use: operand i_sum_113
common/pixel.c:59:1: note: def_stmt: i_sum_113 = PHI <i_sum_70(3), i_sum_115(7)>
common/pixel.c:59:1: note: type of def: 5.
common/pixel.c:59:1: note: mark relevant 3, live 0.
common/pixel.c:59:1: note: worklist: examine stmt: i_sum_113 = PHI <i_sum_70(3), i_sum_115(7)>
common/pixel.c:59:1: note: vect_is_simple_use: operand i_sum_70
common/pixel.c:59:1: note: def_stmt: i_sum_70 = _68 + i_sum_113;
common/pixel.c:59:1: note: type of def: 5.
common/pixel.c:59:1: note: reduc-stmt defining reduc-phi in the same nest.
common/pixel.c:59:1: note: vect_is_simple_use: operand i_sum_115
common/pixel.c:59:1: note: def_stmt: i_sum_115 = PHI <i_sum_164(6), 0(2)>
common/pixel.c:59:1: note: type of def: 2.
common/pixel.c:59:1: note: def_stmt is out of loop.
common/pixel.c:59:1: note: worklist: examine stmt: _65 = *_64;
common/pixel.c:59:1: note: worklist: examine stmt: _61 = *_60;
common/pixel.c:59:1: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _61 = *_60;
  stmt_b: _65 = *_64;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _61 = *_60;
  stmt_b: _61 = *_60;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_6)
  (chrec_b = {0B, +, 1}_6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _65 = *_64;
  stmt_b: _65 = *_64;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_6)
  (chrec_b = {0B, +, 1}_6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/pixel.c:59:1: note: === vect_determine_vectorization_factor ===
common/pixel.c:59:1: note: ==> examining phi: x_110 = PHI <x_71(3), 0(7)>

common/pixel.c:59:1: note: ==> examining phi: i_sum_113 = PHI <i_sum_70(3), i_sum_115(7)>

common/pixel.c:59:1: note: get vectype for scalar type:  int
common/pixel.c:59:1: note: vectype: vector(4) int
common/pixel.c:59:1: note: nunits = 4
common/pixel.c:59:1: note: ==> examining phi: ivtmp_154 = PHI <ivtmp_153(3), 16(7)>

common/pixel.c:59:1: note: ==> examining statement: # DEBUG x => x_110

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: # DEBUG i_sum => i_sum_113

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: _58 = (sizetype) x_110;

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: _60 = fenc_111 + _58;

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: _61 = *_60;

common/pixel.c:59:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:59:1: note: vectype: vector(16) unsigned char
common/pixel.c:59:1: note: nunits = 16
common/pixel.c:59:1: note: ==> examining statement: _62 = (int) _61;

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: _64 = pix0_112 + _58;

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: _65 = *_64;

common/pixel.c:59:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:59:1: note: vectype: vector(16) unsigned char
common/pixel.c:59:1: note: nunits = 16
common/pixel.c:59:1: note: ==> examining statement: _66 = (int) _65;

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: _67 = _62 - _66;

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: _68 = ABS_EXPR <_67>;

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: i_sum_70 = _68 + i_sum_113;

common/pixel.c:59:1: note: ==> examining pattern statement: patt_98 = SAD_EXPR <_61, _65, i_sum_113>;

common/pixel.c:59:1: note: get vectype for scalar type:  int
common/pixel.c:59:1: note: vectype: vector(4) int
common/pixel.c:59:1: note: nunits = 4
common/pixel.c:59:1: note: ==> examining statement: # DEBUG i_sum => i_sum_70

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: x_71 = x_110 + 1;

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: # DEBUG x => x_71

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: # DEBUG x => x_71

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: # DEBUG i_sum => i_sum_70

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: ivtmp_153 = ivtmp_154 - 1;

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: if (ivtmp_153 != 0)

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: vectorization factor = 16
common/pixel.c:59:1: note: === vect_analyze_data_refs_alignment ===
common/pixel.c:59:1: note: vect_compute_data_ref_alignment:
common/pixel.c:59:1: note: can't force alignment of ref: *_60
common/pixel.c:59:1: note: vect_compute_data_ref_alignment:
common/pixel.c:59:1: note: can't force alignment of ref: *_64
common/pixel.c:59:1: note: === vect_prune_runtime_alias_test_list ===
common/pixel.c:59:1: note: === vect_enhance_data_refs_alignment ===
common/pixel.c:59:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:59:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:59:1: note: vect_can_advance_ivs_p:
common/pixel.c:59:1: note: Analyze phi: x_110 = PHI <x_71(3), 0(7)>

common/pixel.c:59:1: note: Analyze phi: i_sum_113 = PHI <i_sum_70(3), i_sum_115(7)>

common/pixel.c:59:1: note: reduc phi. skip.
common/pixel.c:59:1: note: Analyze phi: ivtmp_154 = PHI <ivtmp_153(3), 16(7)>

common/pixel.c:59:1: note: Vectorizing an unaligned access.
common/pixel.c:59:1: note: Vectorizing an unaligned access.
common/pixel.c:59:1: note: === vect_analyze_slp ===
common/pixel.c:59:1: note: === vect_make_slp_decision ===
common/pixel.c:59:1: note: === vect_detect_hybrid_slp ===
common/pixel.c:59:1: note: === vect_analyze_loop_operations ===
common/pixel.c:59:1: note: examining phi: x_110 = PHI <x_71(3), 0(7)>

common/pixel.c:59:1: note: examining phi: i_sum_113 = PHI <i_sum_70(3), i_sum_115(7)>

common/pixel.c:59:1: note: examining phi: ivtmp_154 = PHI <ivtmp_153(3), 16(7)>

common/pixel.c:59:1: note: ==> examining statement: # DEBUG x => x_110
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: # DEBUG i_sum => i_sum_113
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: _58 = (sizetype) x_110;
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: _60 = fenc_111 + _58;
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: _61 = *_60;
common/pixel.c:59:1: note: vect_is_simple_use: operand *_60
common/pixel.c:59:1: note: not ssa-name.
common/pixel.c:59:1: note: use not simple.
common/pixel.c:59:1: note: vect_is_simple_use: operand *_60
common/pixel.c:59:1: note: not ssa-name.
common/pixel.c:59:1: note: use not simple.
common/pixel.c:59:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:59:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:59:1: note: ==> examining statement: _62 = (int) _61;
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: _64 = pix0_112 + _58;
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: _65 = *_64;
common/pixel.c:59:1: note: vect_is_simple_use: operand *_64
common/pixel.c:59:1: note: not ssa-name.
common/pixel.c:59:1: note: use not simple.
common/pixel.c:59:1: note: vect_is_simple_use: operand *_64
common/pixel.c:59:1: note: not ssa-name.
common/pixel.c:59:1: note: use not simple.
common/pixel.c:59:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:59:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:59:1: note: ==> examining statement: _66 = (int) _65;
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: _67 = _62 - _66;
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: _68 = ABS_EXPR <_67>;
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: i_sum_70 = _68 + i_sum_113;
common/pixel.c:59:1: note: ==> examining pattern statement: patt_98 = SAD_EXPR <_61, _65, i_sum_113>;
common/pixel.c:59:1: note: vect_is_simple_use: operand _61
common/pixel.c:59:1: note: def_stmt: _61 = *_60;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: vect_is_simple_use: operand _65
common/pixel.c:59:1: note: def_stmt: _65 = *_64;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: vect_is_simple_use: operand i_sum_113
common/pixel.c:59:1: note: def_stmt: i_sum_113 = PHI <i_sum_70(3), i_sum_115(7)>
common/pixel.c:59:1: note: type of def: 5.
common/pixel.c:59:1: note: detected reduction: i_sum_70 = _68 + i_sum_113;

common/pixel.c:59:1: note: reduc op not supported by target.
vect_model_reduction_cost: inside_cost = 1, prologue_cost = 1, epilogue_cost = 5 .
common/pixel.c:59:1: note: ==> examining statement: # DEBUG i_sum => i_sum_70
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: x_71 = x_110 + 1;
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: # DEBUG x => x_71
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: # DEBUG x => x_71
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: # DEBUG i_sum => i_sum_70
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: ivtmp_153 = ivtmp_154 - 1;
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: if (ivtmp_153 != 0)
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: vectorization_factor = 16, niters = 16
common/pixel.c:59:1: note: === vect_update_slp_costs_according_to_vf ===
common/pixel.c:59:1: note: Cost model analysis: 
  Vector inside of loop cost: 5
  Vector prologue cost: 1
  Vector epilogue cost: 5
  Scalar iteration cost: 3
  Scalar outside cost: 0
  Vector outside cost: 6
  prologue iterations: 0
  epilogue iterations: 0
  Calculated minimum iters for profitability: 3
common/pixel.c:59:1: note:   Runtime profitability threshold = 15
common/pixel.c:59:1: note:   Static estimate profitability threshold = 15
common/pixel.c:59:1: note: loop vectorized
common/pixel.c:59:1: note: === vec_transform_loop ===
common/pixel.c:59:1: note: ------>vectorizing phi: x_110 = PHI <x_71(3), 0(23)>

common/pixel.c:59:1: note: ------>vectorizing phi: i_sum_113 = PHI <i_sum_70(3), i_sum_115(23)>

common/pixel.c:59:1: note: multiple-types.
common/pixel.c:59:1: note: ------>vectorizing phi: ivtmp_154 = PHI <ivtmp_153(3), 16(23)>

common/pixel.c:59:1: note: ------>vectorizing statement: # DEBUG x => x_110

common/pixel.c:59:1: note: ------>vectorizing statement: # DEBUG i_sum => i_sum_113

common/pixel.c:59:1: note: ------>vectorizing statement: _58 = (sizetype) x_110;

common/pixel.c:59:1: note: ------>vectorizing statement: _60 = fenc_111 + _58;

common/pixel.c:59:1: note: ------>vectorizing statement: _61 = *_60;

common/pixel.c:59:1: note: transform statement.
common/pixel.c:59:1: note: transform load. ncopies = 1
common/pixel.c:59:1: note: create vector_type-pointer variable to type: vector(16) unsigned char  vectorizing a pointer ref: *fenc_111
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:59:1: note: created vectp_fenc.637_97
common/pixel.c:59:1: note: add new stmt: vect__61.638_94 = MEM[(uint8_t *)vectp_fenc.636_96];
common/pixel.c:59:1: note: ------>vectorizing statement: _62 = (int) _61;

common/pixel.c:59:1: note: ------>vectorizing statement: _64 = pix0_112 + _58;

common/pixel.c:59:1: note: ------>vectorizing statement: _65 = *_64;

common/pixel.c:59:1: note: transform statement.
common/pixel.c:59:1: note: transform load. ncopies = 1
common/pixel.c:59:1: note: create vector_type-pointer variable to type: vector(16) unsigned char  vectorizing a pointer ref: *pix0_112
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:59:1: note: created vectp_pix0.640_93
common/pixel.c:59:1: note: add new stmt: vect__65.641_90 = MEM[(uint8_t *)vectp_pix0.639_92];
common/pixel.c:59:1: note: ------>vectorizing statement: _66 = (int) _65;

common/pixel.c:59:1: note: ------>vectorizing statement: _67 = _62 - _66;

common/pixel.c:59:1: note: ------>vectorizing statement: _68 = ABS_EXPR <_67>;

common/pixel.c:59:1: note: ------>vectorizing statement: i_sum_70 = _68 + i_sum_113;

common/pixel.c:59:1: note: multiple-types.
common/pixel.c:59:1: note: transform statement.
common/pixel.c:59:1: note: vect_is_simple_use: operand _61
common/pixel.c:59:1: note: def_stmt: _61 = *_60;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: vect_is_simple_use: operand _65
common/pixel.c:59:1: note: def_stmt: _65 = *_64;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: vect_is_simple_use: operand i_sum_113
common/pixel.c:59:1: note: def_stmt: i_sum_113 = PHI <i_sum_70(3), i_sum_115(23)>
common/pixel.c:59:1: note: type of def: 5.
common/pixel.c:59:1: note: detected reduction: i_sum_70 = _68 + i_sum_113;

common/pixel.c:59:1: note: reduc op not supported by target.
common/pixel.c:59:1: note: transform reduction.
common/pixel.c:59:1: note: vect_get_vec_def_for_operand: _61
common/pixel.c:59:1: note: vect_is_simple_use: operand _61
common/pixel.c:59:1: note: def_stmt: _61 = *_60;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: def =  _61
  def_stmt =  _61 = *_60;
common/pixel.c:59:1: note: vect_get_vec_def_for_operand: _65
common/pixel.c:59:1: note: vect_is_simple_use: operand _65
common/pixel.c:59:1: note: def_stmt: _65 = *_64;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: def =  _65
  def_stmt =  _65 = *_64;
common/pixel.c:59:1: note: add new stmt: vect_patt_98.642_88 = SAD_EXPR <vect__61.638_94, vect__65.641_90, vect_patt_98.642_89>;
common/pixel.c:59:1: note: vect_is_simple_use: operand i_sum_115
common/pixel.c:59:1: note: def_stmt: i_sum_115 = PHI <i_sum_164(6), 0(2)>
common/pixel.c:59:1: note: type of def: 2.
common/pixel.c:59:1: note: vect_get_vec_def_for_operand: i_sum_113
common/pixel.c:59:1: note: vect_is_simple_use: operand i_sum_113
common/pixel.c:59:1: note: def_stmt: i_sum_113 = PHI <i_sum_70(3), i_sum_115(23)>
common/pixel.c:59:1: note: type of def: 5.
common/pixel.c:59:1: note: def =  i_sum_113
  def_stmt =  i_sum_113 = PHI <i_sum_70(3), i_sum_115(23)>
common/pixel.c:59:1: note: transform reduction: created def-use cycle: vect_patt_98.642_89 = PHI <vect_patt_98.642_88(3), { 0, 0, 0, 0 }(23)>

vect_patt_98.642_88 = SAD_EXPR <vect__61.638_94, vect__65.641_90, vect_patt_98.642_89>;

common/pixel.c:59:1: note: Reduce using vector shifts
common/pixel.c:59:1: note: extract scalar result
common/pixel.c:59:1: note: ------>vectorizing statement: # DEBUG i_sum => i_sum_70

common/pixel.c:59:1: note: ------>vectorizing statement: x_71 = x_110 + 1;

common/pixel.c:59:1: note: ------>vectorizing statement: # DEBUG x => x_71

common/pixel.c:59:1: note: ------>vectorizing statement: # DEBUG x => x_71

common/pixel.c:59:1: note: ------>vectorizing statement: # DEBUG i_sum => i_sum_70

common/pixel.c:59:1: note: ------>vectorizing statement: ivtmp_153 = ivtmp_154 - 1;

common/pixel.c:59:1: note: ------>vectorizing statement: vectp_fenc.636_95 = vectp_fenc.636_96 + 16;

common/pixel.c:59:1: note: ------>vectorizing statement: vectp_pix0.639_91 = vectp_pix0.639_92 + 16;

common/pixel.c:59:1: note: ------>vectorizing statement: if (ivtmp_153 != 0)


loop at common/pixel.c:59: if (ivtmp_77 < 1)

;; Scaling loop 6 with scale 0.062500, bounding iterations to 1 from guessed 16
;; guessed iterations are now 1
common/pixel.c:59:1: note: LOOP VECTORIZED

common/pixel.c:383:1: note: vectorized 3 loops in function.
Merging blocks 7 and 23
Merging blocks 13 and 22
Merging blocks 19 and 21
x264_pixel_sad_x3_16x16 (uint8_t * fenc, uint8_t * pix0, uint8_t * pix1, uint8_t * pix2, int i_stride, int * scores)
{
  int vect_i_sum_70.645;
  vector(4) int vect_i_sum_70.644;
  int stmp_i_sum_70.643;
  vector(4) int vect_patt_98.642;
  vector(16) unsigned char vect__65.641;
  vector(16) unsigned char * vectp_pix0.640;
  vector(16) unsigned char * vectp_pix0.639;
  vector(16) unsigned char vect__61.638;
  vector(16) unsigned char * vectp_fenc.637;
  vector(16) unsigned char * vectp_fenc.636;
  int vect_i_sum_48.635;
  vector(4) int vect_i_sum_48.634;
  int stmp_i_sum_48.633;
  vector(4) int vect_patt_130.632;
  vector(16) unsigned char vect__43.631;
  vector(16) unsigned char * vectp_pix1.630;
  vector(16) unsigned char * vectp_pix1.629;
  vector(16) unsigned char vect__39.628;
  vector(16) unsigned char * vectp_fenc.627;
  vector(16) unsigned char * vectp_fenc.626;
  int vect_i_sum_26.625;
  vector(4) int vect_i_sum_26.624;
  int stmp_i_sum_26.623;
  vector(4) int vect_patt_150.622;
  vector(16) unsigned char vect__21.621;
  vector(16) unsigned char * vectp_pix2.620;
  vector(16) unsigned char * vectp_pix2.619;
  vector(16) unsigned char vect__17.618;
  vector(16) unsigned char * vectp_fenc.617;
  vector(16) unsigned char * vectp_fenc.616;
  int i_sum;
  int x;
  int y;
  int i_sum;
  int x;
  int y;
  int i_sum;
  int x;
  int y;
  sizetype _10;
  uint8_t * _16;
  unsigned char _17;
  int _18;
  uint8_t * _20;
  unsigned char _21;
  int _22;
  int _23;
  int _24;
  sizetype _36;
  uint8_t * _38;
  unsigned char _39;
  int _40;
  uint8_t * _42;
  unsigned char _43;
  int _44;
  int _45;
  int _46;
  sizetype _58;
  uint8_t * _60;
  unsigned char _61;
  int _62;
  uint8_t * _64;
  unsigned char _65;
  int _66;
  int _67;
  int _68;
  unsigned int ivtmp_77;
  unsigned int ivtmp_80;
  unsigned int ivtmp_99;
  unsigned int ivtmp_100;
  unsigned int ivtmp_131;
  unsigned int ivtmp_132;
  unsigned int ivtmp_151;
  unsigned int ivtmp_152;
  unsigned int ivtmp_153;
  unsigned int ivtmp_154;
  unsigned int ivtmp_155;
  unsigned int ivtmp_156;
  unsigned int ivtmp_157;
  unsigned int ivtmp_158;
  unsigned int ivtmp_159;
  unsigned int ivtmp_160;
  unsigned int ivtmp_161;
  unsigned int ivtmp_162;
  sizetype pretmp_169;

  <bb 2>:
  # DEBUG pix1 => fenc_2(D)
  # DEBUG i_stride_pix1 => 16
  # DEBUG pix2 => pix0_3(D)
  # DEBUG i_stride_pix2 => i_stride_4(D)
  # DEBUG i_sum => 0
  # DEBUG y => 0
  # DEBUG y => 0
  # DEBUG i_sum => 0
  # DEBUG pix2 => pix0_3(D)
  # DEBUG pix1 => fenc_2(D)
  pretmp_169 = (sizetype) i_stride_4(D);
  goto <bb 7>;

  <bb 3>:

  <bb 4>:
  # x_110 = PHI <x_71(3), 0(7)>
  # i_sum_113 = PHI <i_sum_70(3), i_sum_115(7)>
  # ivtmp_154 = PHI <ivtmp_153(3), 16(7)>
  # vectp_fenc.636_96 = PHI <vectp_fenc.636_95(3), vectp_fenc.637_97(7)>
  # vectp_pix0.639_92 = PHI <vectp_pix0.639_91(3), vectp_pix0.640_93(7)>
  # vect_patt_98.642_89 = PHI <vect_patt_98.642_88(3), { 0, 0, 0, 0 }(7)>
  # ivtmp_80 = PHI <ivtmp_77(3), 0(7)>
  # DEBUG x => x_110
  # DEBUG i_sum => i_sum_113
  _58 = (sizetype) x_110;
  _60 = fenc_111 + _58;
  vect__61.638_94 = MEM[(uint8_t *)vectp_fenc.636_96];
  _61 = *_60;
  _62 = (int) _61;
  _64 = pix0_112 + _58;
  vect__65.641_90 = MEM[(uint8_t *)vectp_pix0.639_92];
  _65 = *_64;
  _66 = (int) _65;
  _67 = _62 - _66;
  _68 = ABS_EXPR <_67>;
  vect_patt_98.642_88 = SAD_EXPR <vect__61.638_94, vect__65.641_90, vect_patt_98.642_89>;
  i_sum_70 = _68 + i_sum_113;
  # DEBUG i_sum => i_sum_70
  x_71 = x_110 + 1;
  # DEBUG x => x_71
  # DEBUG x => x_71
  # DEBUG i_sum => i_sum_70
  ivtmp_153 = ivtmp_154 - 1;
  vectp_fenc.636_95 = vectp_fenc.636_96 + 16;
  vectp_pix0.639_91 = vectp_pix0.639_92 + 16;
  ivtmp_77 = ivtmp_80 + 1;
  if (ivtmp_77 < 1)
    goto <bb 3>;
  else
    goto <bb 5>;

  <bb 5>:
  # i_sum_164 = PHI <i_sum_70(4)>
  # vect_patt_98.642_87 = PHI <vect_patt_98.642_88(4)>
  vect_i_sum_70.644_86 = VEC_PERM_EXPR <vect_patt_98.642_87, { 0, 0, 0, 0 }, { 2, 3, 4, 5 }>;
  vect_i_sum_70.644_85 = vect_i_sum_70.644_86 + vect_patt_98.642_87;
  vect_i_sum_70.644_84 = VEC_PERM_EXPR <vect_i_sum_70.644_85, { 0, 0, 0, 0 }, { 1, 2, 3, 4 }>;
  vect_i_sum_70.644_83 = vect_i_sum_70.644_84 + vect_i_sum_70.644_85;
  stmp_i_sum_70.643_82 = BIT_FIELD_REF <vect_i_sum_70.644_83, 32, 0>;
  vect_i_sum_70.645_81 = stmp_i_sum_70.643_82 + i_sum_115;
  fenc_72 = fenc_111 + 16;
  # DEBUG pix1 => fenc_72
  pix0_74 = pix0_112 + pretmp_169;
  # DEBUG pix2 => pix0_74
  y_76 = y_114 + 1;
  # DEBUG y => y_76
  # DEBUG y => y_76
  # DEBUG i_sum => vect_i_sum_70.645_81
  # DEBUG pix2 => pix0_74
  # DEBUG pix1 => fenc_72
  ivtmp_151 = ivtmp_152 - 1;
  if (ivtmp_151 != 0)
    goto <bb 6>;
  else
    goto <bb 8>;

  <bb 6>:

  <bb 7>:
  # fenc_111 = PHI <fenc_72(6), fenc_2(D)(2)>
  # pix0_112 = PHI <pix0_74(6), pix0_3(D)(2)>
  # y_114 = PHI <y_76(6), 0(2)>
  # i_sum_115 = PHI <vect_i_sum_70.645_81(6), 0(2)>
  # ivtmp_152 = PHI <ivtmp_151(6), 16(2)>
  # DEBUG y => y_114
  # DEBUG i_sum => i_sum_115
  # DEBUG pix2 => pix0_112
  # DEBUG pix1 => fenc_111
  # DEBUG x => 0
  # DEBUG i_sum => i_sum_115
  vectp_fenc.637_97 = fenc_111;
  vectp_pix0.640_93 = pix0_112;
  goto <bb 4>;

  <bb 8>:
  # i_sum_163 = PHI <vect_i_sum_70.645_81(5)>
  # DEBUG pix1 => NULL
  # DEBUG i_stride_pix1 => NULL
  # DEBUG pix2 => NULL
  # DEBUG i_stride_pix2 => NULL
  # DEBUG y => NULL
  # DEBUG x => NULL
  # DEBUG i_sum => NULL
  *scores_6(D) = i_sum_163;
  # DEBUG pix1 => fenc_2(D)
  # DEBUG i_stride_pix1 => 16
  # DEBUG pix2 => pix1_9(D)
  # DEBUG i_stride_pix2 => i_stride_4(D)
  # DEBUG y => 0
  # DEBUG i_sum => 0
  # DEBUG pix2 => pix1_9(D)
  # DEBUG pix1 => fenc_2(D)
  goto <bb 13>;

  <bb 9>:

  <bb 10>:
  # x_104 = PHI <x_49(9), 0(13)>
  # i_sum_107 = PHI <i_sum_48(9), i_sum_109(13)>
  # ivtmp_158 = PHI <ivtmp_157(9), 16(13)>
  # vectp_fenc.626_128 = PHI <vectp_fenc.626_127(9), vectp_fenc.627_129(13)>
  # vectp_pix1.629_124 = PHI <vectp_pix1.629_123(9), vectp_pix1.630_125(13)>
  # vect_patt_130.632_121 = PHI <vect_patt_130.632_120(9), { 0, 0, 0, 0 }(13)>
  # ivtmp_100 = PHI <ivtmp_99(9), 0(13)>
  # DEBUG x => x_104
  # DEBUG i_sum => i_sum_107
  _36 = (sizetype) x_104;
  _38 = fenc_105 + _36;
  vect__39.628_126 = MEM[(uint8_t *)vectp_fenc.626_128];
  _39 = *_38;
  _40 = (int) _39;
  _42 = pix1_106 + _36;
  vect__43.631_122 = MEM[(uint8_t *)vectp_pix1.629_124];
  _43 = *_42;
  _44 = (int) _43;
  _45 = _40 - _44;
  _46 = ABS_EXPR <_45>;
  vect_patt_130.632_120 = SAD_EXPR <vect__39.628_126, vect__43.631_122, vect_patt_130.632_121>;
  i_sum_48 = _46 + i_sum_107;
  # DEBUG i_sum => i_sum_48
  x_49 = x_104 + 1;
  # DEBUG x => x_49
  # DEBUG x => x_49
  # DEBUG i_sum => i_sum_48
  ivtmp_157 = ivtmp_158 - 1;
  vectp_fenc.626_127 = vectp_fenc.626_128 + 16;
  vectp_pix1.629_123 = vectp_pix1.629_124 + 16;
  ivtmp_99 = ivtmp_100 + 1;
  if (ivtmp_99 < 1)
    goto <bb 9>;
  else
    goto <bb 11>;

  <bb 11>:
  # i_sum_166 = PHI <i_sum_48(10)>
  # vect_patt_130.632_119 = PHI <vect_patt_130.632_120(10)>
  vect_i_sum_48.634_118 = VEC_PERM_EXPR <vect_patt_130.632_119, { 0, 0, 0, 0 }, { 2, 3, 4, 5 }>;
  vect_i_sum_48.634_117 = vect_i_sum_48.634_118 + vect_patt_130.632_119;
  vect_i_sum_48.634_116 = VEC_PERM_EXPR <vect_i_sum_48.634_117, { 0, 0, 0, 0 }, { 1, 2, 3, 4 }>;
  vect_i_sum_48.634_103 = vect_i_sum_48.634_116 + vect_i_sum_48.634_117;
  stmp_i_sum_48.633_102 = BIT_FIELD_REF <vect_i_sum_48.634_103, 32, 0>;
  vect_i_sum_48.635_101 = stmp_i_sum_48.633_102 + i_sum_109;
  fenc_50 = fenc_105 + 16;
  # DEBUG pix1 => fenc_50
  pix1_52 = pix1_106 + pretmp_169;
  # DEBUG pix2 => pix1_52
  y_54 = y_108 + 1;
  # DEBUG y => y_54
  # DEBUG y => y_54
  # DEBUG i_sum => vect_i_sum_48.635_101
  # DEBUG pix2 => pix1_52
  # DEBUG pix1 => fenc_50
  ivtmp_155 = ivtmp_156 - 1;
  if (ivtmp_155 != 0)
    goto <bb 12>;
  else
    goto <bb 14>;

  <bb 12>:

  <bb 13>:
  # fenc_105 = PHI <fenc_50(12), fenc_2(D)(8)>
  # pix1_106 = PHI <pix1_52(12), pix1_9(D)(8)>
  # y_108 = PHI <y_54(12), 0(8)>
  # i_sum_109 = PHI <vect_i_sum_48.635_101(12), 0(8)>
  # ivtmp_156 = PHI <ivtmp_155(12), 16(8)>
  # DEBUG y => y_108
  # DEBUG i_sum => i_sum_109
  # DEBUG pix2 => pix1_106
  # DEBUG pix1 => fenc_105
  # DEBUG x => 0
  # DEBUG i_sum => i_sum_109
  vectp_fenc.627_129 = fenc_105;
  vectp_pix1.630_125 = pix1_106;
  goto <bb 10>;

  <bb 14>:
  # i_sum_165 = PHI <vect_i_sum_48.635_101(11)>
  # DEBUG pix1 => NULL
  # DEBUG i_stride_pix1 => NULL
  # DEBUG pix2 => NULL
  # DEBUG i_stride_pix2 => NULL
  # DEBUG y => NULL
  # DEBUG x => NULL
  # DEBUG i_sum => NULL
  MEM[(int *)scores_6(D) + 4B] = i_sum_165;
  # DEBUG pix1 => fenc_2(D)
  # DEBUG i_stride_pix1 => 16
  # DEBUG pix2 => pix2_13(D)
  # DEBUG i_stride_pix2 => i_stride_4(D)
  # DEBUG y => 0
  # DEBUG i_sum => 0
  # DEBUG pix2 => pix2_13(D)
  # DEBUG pix1 => fenc_2(D)
  goto <bb 19>;

  <bb 15>:

  <bb 16>:
  # x_8 = PHI <x_27(15), 0(19)>
  # i_sum_78 = PHI <i_sum_26(15), i_sum_12(19)>
  # ivtmp_162 = PHI <ivtmp_161(15), 16(19)>
  # vectp_fenc.616_148 = PHI <vectp_fenc.616_147(15), vectp_fenc.617_149(19)>
  # vectp_pix2.619_144 = PHI <vectp_pix2.619_143(15), vectp_pix2.620_145(19)>
  # vect_patt_150.622_141 = PHI <vect_patt_150.622_140(15), { 0, 0, 0, 0 }(19)>
  # ivtmp_132 = PHI <ivtmp_131(15), 0(19)>
  # DEBUG x => x_8
  # DEBUG i_sum => i_sum_78
  _10 = (sizetype) x_8;
  _16 = fenc_34 + _10;
  vect__17.618_146 = MEM[(uint8_t *)vectp_fenc.616_148];
  _17 = *_16;
  _18 = (int) _17;
  _20 = pix2_79 + _10;
  vect__21.621_142 = MEM[(uint8_t *)vectp_pix2.619_144];
  _21 = *_20;
  _22 = (int) _21;
  _23 = _18 - _22;
  _24 = ABS_EXPR <_23>;
  vect_patt_150.622_140 = SAD_EXPR <vect__17.618_146, vect__21.621_142, vect_patt_150.622_141>;
  i_sum_26 = _24 + i_sum_78;
  # DEBUG i_sum => i_sum_26
  x_27 = x_8 + 1;
  # DEBUG x => x_27
  # DEBUG x => x_27
  # DEBUG i_sum => i_sum_26
  ivtmp_161 = ivtmp_162 - 1;
  vectp_fenc.616_147 = vectp_fenc.616_148 + 16;
  vectp_pix2.619_143 = vectp_pix2.619_144 + 16;
  ivtmp_131 = ivtmp_132 + 1;
  if (ivtmp_131 < 1)
    goto <bb 15>;
  else
    goto <bb 17>;

  <bb 17>:
  # i_sum_168 = PHI <i_sum_26(16)>
  # vect_patt_150.622_139 = PHI <vect_patt_150.622_140(16)>
  vect_i_sum_26.624_138 = VEC_PERM_EXPR <vect_patt_150.622_139, { 0, 0, 0, 0 }, { 2, 3, 4, 5 }>;
  vect_i_sum_26.624_137 = vect_i_sum_26.624_138 + vect_patt_150.622_139;
  vect_i_sum_26.624_136 = VEC_PERM_EXPR <vect_i_sum_26.624_137, { 0, 0, 0, 0 }, { 1, 2, 3, 4 }>;
  vect_i_sum_26.624_135 = vect_i_sum_26.624_136 + vect_i_sum_26.624_137;
  stmp_i_sum_26.623_134 = BIT_FIELD_REF <vect_i_sum_26.624_135, 32, 0>;
  vect_i_sum_26.625_133 = stmp_i_sum_26.623_134 + i_sum_12;
  fenc_28 = fenc_34 + 16;
  # DEBUG pix1 => fenc_28
  pix2_30 = pix2_79 + pretmp_169;
  # DEBUG pix2 => pix2_30
  y_32 = y_56 + 1;
  # DEBUG y => y_32
  # DEBUG y => y_32
  # DEBUG i_sum => vect_i_sum_26.625_133
  # DEBUG pix2 => pix2_30
  # DEBUG pix1 => fenc_28
  ivtmp_159 = ivtmp_160 - 1;
  if (ivtmp_159 != 0)
    goto <bb 18>;
  else
    goto <bb 20>;

  <bb 18>:

  <bb 19>:
  # fenc_34 = PHI <fenc_28(18), fenc_2(D)(14)>
  # pix2_79 = PHI <pix2_30(18), pix2_13(D)(14)>
  # y_56 = PHI <y_32(18), 0(14)>
  # i_sum_12 = PHI <vect_i_sum_26.625_133(18), 0(14)>
  # ivtmp_160 = PHI <ivtmp_159(18), 16(14)>
  # DEBUG y => y_56
  # DEBUG i_sum => i_sum_12
  # DEBUG pix2 => pix2_79
  # DEBUG pix1 => fenc_34
  # DEBUG x => 0
  # DEBUG i_sum => i_sum_12
  vectp_fenc.617_149 = fenc_34;
  vectp_pix2.620_145 = pix2_79;
  goto <bb 16>;

  <bb 20>:
  # i_sum_167 = PHI <vect_i_sum_26.625_133(17)>
  # DEBUG pix1 => NULL
  # DEBUG i_stride_pix1 => NULL
  # DEBUG pix2 => NULL
  # DEBUG i_stride_pix2 => NULL
  # DEBUG y => NULL
  # DEBUG x => NULL
  # DEBUG i_sum => NULL
  MEM[(int *)scores_6(D) + 8B] = i_sum_167;
  return;

}



;; Function x264_pixel_sad_x4_16x16 (x264_pixel_sad_x4_16x16, funcdef_no=151, decl_uid=8026, cgraph_uid=151, symbol_order=194)


Analyzing loop at common/pixel.c:59
common/pixel.c:59:1: note: ===== analyze_loop_nest =====
common/pixel.c:59:1: note: === vect_analyze_loop_form ===
common/pixel.c:59:1: note: ===== analyze_loop_nest_1 =====
common/pixel.c:59:1: note: === vect_analyze_loop_form ===
common/pixel.c:59:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 2
  exit condition [15, + , 4294967295] != 0
  bounds on difference of bases: -15 ... -15
  result:
    # of iterations 15, bounded by 15
common/pixel.c:59:1: note: Considering outer-loop vectorization.
common/pixel.c:59:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 1
  exit condition [15, + , 4294967295] != 0
  bounds on difference of bases: -15 ... -15
  result:
    # of iterations 15, bounded by 15
common/pixel.c:59:1: note: === vect_analyze_data_refs ===
Creating dr for *_5
analyze_innermost: success.
	base_address: fenc_16
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_2(D)
	Access function 0: {{0B, +, 16}_1, +, 1}_2
Creating dr for *_23
analyze_innermost: success.
	base_address: pix3_103
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix3_17(D)
	Access function 0: {{0B, +, pretmp_223}_1, +, 1}_2
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:59:1: note: analyze in outer-loop: *fenc_16
common/pixel.c:59:1: note: 	outer base_address: fenc_2(D)
	outer offset from base address: 0
	outer constant offset from base address: 0
	outer step: 16
	outer aligned to: 128
common/pixel.c:59:1: note: got vectype for stmt: _20 = *_5;
vector(16) unsigned char
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:59:1: note: analyze in outer-loop: *pix3_103
common/pixel.c:59:1: note: failed: evolution of base is not affine.
common/pixel.c:59:1: note: bad data references.

Analyzing loop at common/pixel.c:59
common/pixel.c:59:1: note: ===== analyze_loop_nest =====
common/pixel.c:59:1: note: === vect_analyze_loop_form ===
common/pixel.c:59:1: note: === get_loop_niters ===
common/pixel.c:59:1: note: === vect_analyze_data_refs ===
Creating dr for *_5
analyze_innermost: success.
	base_address: fenc_16
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_16
	Access function 0: {0B, +, 1}_2
Creating dr for *_23
analyze_innermost: success.
	base_address: pix3_103
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix3_103
	Access function 0: {0B, +, 1}_2
common/pixel.c:59:1: note: got vectype for stmt: _20 = *_5;
vector(16) unsigned char
common/pixel.c:59:1: note: got vectype for stmt: _24 = *_23;
vector(16) unsigned char
common/pixel.c:59:1: note: === vect_analyze_scalar_cycles ===
common/pixel.c:59:1: note: Analyze phi: x_8 = PHI <x_30(21), 0(25)>

common/pixel.c:59:1: note: Access function of PHI: {0, +, 1}_2
common/pixel.c:59:1: note: step: 1,  init: 0
common/pixel.c:59:1: note: Detected induction.
common/pixel.c:59:1: note: Analyze phi: i_sum_59 = PHI <i_sum_29(21), i_sum_104(25)>

common/pixel.c:59:1: note: Access function of PHI: {i_sum_104, +, _27}_2
common/pixel.c:59:1: note: step: _27,  init: i_sum_104
common/pixel.c:59:1: note: step unknown.
common/pixel.c:59:1: note: Analyze phi: ivtmp_214 = PHI <ivtmp_213(21), 16(25)>

common/pixel.c:59:1: note: Access function of PHI: {16, +, 4294967295}_2
common/pixel.c:59:1: note: step: 4294967295,  init: 16
common/pixel.c:59:1: note: Detected induction.
common/pixel.c:59:1: note: Analyze phi: i_sum_59 = PHI <i_sum_29(21), i_sum_104(25)>

common/pixel.c:59:1: note: detected reduction: i_sum_29 = _27 + i_sum_59;

common/pixel.c:59:1: note: Detected reduction.
common/pixel.c:59:1: note: === vect_pattern_recog ===
common/pixel.c:59:1: note: vect_is_simple_use: operand _27
common/pixel.c:59:1: note: def_stmt: _27 = ABS_EXPR <_26>;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: vect_is_simple_use: operand _27
common/pixel.c:59:1: note: def_stmt: _27 = ABS_EXPR <_26>;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: vect_is_simple_use: operand _27
common/pixel.c:59:1: note: def_stmt: _27 = ABS_EXPR <_26>;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: vect_is_simple_use: operand _21
common/pixel.c:59:1: note: def_stmt: _21 = (int) _20;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: vect_is_simple_use: operand _20
common/pixel.c:59:1: note: def_stmt: _20 = *_5;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: vect_is_simple_use: operand _25
common/pixel.c:59:1: note: def_stmt: _25 = (int) _24;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: vect_is_simple_use: operand _24
common/pixel.c:59:1: note: def_stmt: _24 = *_23;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: vect_recog_sad_pattern: detected: patt_198 = SAD_EXPR <_20, _24, i_sum_59>;

common/pixel.c:59:1: note: pattern recognized: patt_198 = SAD_EXPR <_20, _24, i_sum_59>;
common/pixel.c:59:1: note: === vect_analyze_data_ref_accesses ===
common/pixel.c:59:1: note: === vect_mark_stmts_to_be_vectorized ===
common/pixel.c:59:1: note: init: phi relevant? x_8 = PHI <x_30(21), 0(25)>
common/pixel.c:59:1: note: init: phi relevant? i_sum_59 = PHI <i_sum_29(21), i_sum_104(25)>
common/pixel.c:59:1: note: init: phi relevant? ivtmp_214 = PHI <ivtmp_213(21), 16(25)>
common/pixel.c:59:1: note: init: stmt relevant? # DEBUG x => x_8
common/pixel.c:59:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_59
common/pixel.c:59:1: note: init: stmt relevant? _14 = (sizetype) x_8;
common/pixel.c:59:1: note: init: stmt relevant? _5 = fenc_16 + _14;
common/pixel.c:59:1: note: init: stmt relevant? _20 = *_5;
common/pixel.c:59:1: note: init: stmt relevant? _21 = (int) _20;
common/pixel.c:59:1: note: init: stmt relevant? _23 = pix3_103 + _14;
common/pixel.c:59:1: note: init: stmt relevant? _24 = *_23;
common/pixel.c:59:1: note: init: stmt relevant? _25 = (int) _24;
common/pixel.c:59:1: note: init: stmt relevant? _26 = _21 - _25;
common/pixel.c:59:1: note: init: stmt relevant? _27 = ABS_EXPR <_26>;
common/pixel.c:59:1: note: init: stmt relevant? i_sum_29 = _27 + i_sum_59;
common/pixel.c:59:1: note: vec_stmt_relevant_p: used out of loop.
common/pixel.c:59:1: note: mark relevant 0, live 1.
common/pixel.c:59:1: note: last stmt in pattern. don't mark relevant/live.
common/pixel.c:59:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_29
common/pixel.c:59:1: note: init: stmt relevant? x_30 = x_8 + 1;
common/pixel.c:59:1: note: init: stmt relevant? # DEBUG x => x_30
common/pixel.c:59:1: note: init: stmt relevant? # DEBUG x => x_30
common/pixel.c:59:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_29
common/pixel.c:59:1: note: init: stmt relevant? ivtmp_213 = ivtmp_214 - 1;
common/pixel.c:59:1: note: init: stmt relevant? if (ivtmp_213 != 0)
common/pixel.c:59:1: note: worklist: examine stmt: patt_198 = SAD_EXPR <_20, _24, i_sum_59>;
common/pixel.c:59:1: note: vect_is_simple_use: operand _20
common/pixel.c:59:1: note: def_stmt: _20 = *_5;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: mark relevant 3, live 0.
common/pixel.c:59:1: note: vect_is_simple_use: operand _24
common/pixel.c:59:1: note: def_stmt: _24 = *_23;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: mark relevant 3, live 0.
common/pixel.c:59:1: note: vect_is_simple_use: operand i_sum_59
common/pixel.c:59:1: note: def_stmt: i_sum_59 = PHI <i_sum_29(21), i_sum_104(25)>
common/pixel.c:59:1: note: type of def: 5.
common/pixel.c:59:1: note: mark relevant 3, live 0.
common/pixel.c:59:1: note: worklist: examine stmt: i_sum_59 = PHI <i_sum_29(21), i_sum_104(25)>
common/pixel.c:59:1: note: vect_is_simple_use: operand i_sum_29
common/pixel.c:59:1: note: def_stmt: i_sum_29 = _27 + i_sum_59;
common/pixel.c:59:1: note: type of def: 5.
common/pixel.c:59:1: note: reduc-stmt defining reduc-phi in the same nest.
common/pixel.c:59:1: note: vect_is_simple_use: operand i_sum_104
common/pixel.c:59:1: note: def_stmt: i_sum_104 = PHI <i_sum_222(24), 0(20)>
common/pixel.c:59:1: note: type of def: 2.
common/pixel.c:59:1: note: def_stmt is out of loop.
common/pixel.c:59:1: note: worklist: examine stmt: _24 = *_23;
common/pixel.c:59:1: note: worklist: examine stmt: _20 = *_5;
common/pixel.c:59:1: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _20 = *_5;
  stmt_b: _24 = *_23;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _20 = *_5;
  stmt_b: _20 = *_5;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_2)
  (chrec_b = {0B, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _24 = *_23;
  stmt_b: _24 = *_23;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_2)
  (chrec_b = {0B, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/pixel.c:59:1: note: === vect_determine_vectorization_factor ===
common/pixel.c:59:1: note: ==> examining phi: x_8 = PHI <x_30(21), 0(25)>

common/pixel.c:59:1: note: ==> examining phi: i_sum_59 = PHI <i_sum_29(21), i_sum_104(25)>

common/pixel.c:59:1: note: get vectype for scalar type:  int
common/pixel.c:59:1: note: vectype: vector(4) int
common/pixel.c:59:1: note: nunits = 4
common/pixel.c:59:1: note: ==> examining phi: ivtmp_214 = PHI <ivtmp_213(21), 16(25)>

common/pixel.c:59:1: note: ==> examining statement: # DEBUG x => x_8

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: # DEBUG i_sum => i_sum_59

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: _14 = (sizetype) x_8;

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: _5 = fenc_16 + _14;

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: _20 = *_5;

common/pixel.c:59:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:59:1: note: vectype: vector(16) unsigned char
common/pixel.c:59:1: note: nunits = 16
common/pixel.c:59:1: note: ==> examining statement: _21 = (int) _20;

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: _23 = pix3_103 + _14;

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: _24 = *_23;

common/pixel.c:59:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:59:1: note: vectype: vector(16) unsigned char
common/pixel.c:59:1: note: nunits = 16
common/pixel.c:59:1: note: ==> examining statement: _25 = (int) _24;

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: _26 = _21 - _25;

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: _27 = ABS_EXPR <_26>;

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: i_sum_29 = _27 + i_sum_59;

common/pixel.c:59:1: note: ==> examining pattern statement: patt_198 = SAD_EXPR <_20, _24, i_sum_59>;

common/pixel.c:59:1: note: get vectype for scalar type:  int
common/pixel.c:59:1: note: vectype: vector(4) int
common/pixel.c:59:1: note: nunits = 4
common/pixel.c:59:1: note: ==> examining statement: # DEBUG i_sum => i_sum_29

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: x_30 = x_8 + 1;

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: # DEBUG x => x_30

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: # DEBUG x => x_30

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: # DEBUG i_sum => i_sum_29

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: ivtmp_213 = ivtmp_214 - 1;

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: if (ivtmp_213 != 0)

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: vectorization factor = 16
common/pixel.c:59:1: note: === vect_analyze_data_refs_alignment ===
common/pixel.c:59:1: note: vect_compute_data_ref_alignment:
common/pixel.c:59:1: note: can't force alignment of ref: *_5
common/pixel.c:59:1: note: vect_compute_data_ref_alignment:
common/pixel.c:59:1: note: can't force alignment of ref: *_23
common/pixel.c:59:1: note: === vect_prune_runtime_alias_test_list ===
common/pixel.c:59:1: note: === vect_enhance_data_refs_alignment ===
common/pixel.c:59:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:59:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:59:1: note: vect_can_advance_ivs_p:
common/pixel.c:59:1: note: Analyze phi: x_8 = PHI <x_30(21), 0(25)>

common/pixel.c:59:1: note: Analyze phi: i_sum_59 = PHI <i_sum_29(21), i_sum_104(25)>

common/pixel.c:59:1: note: reduc phi. skip.
common/pixel.c:59:1: note: Analyze phi: ivtmp_214 = PHI <ivtmp_213(21), 16(25)>

common/pixel.c:59:1: note: Vectorizing an unaligned access.
common/pixel.c:59:1: note: Vectorizing an unaligned access.
common/pixel.c:59:1: note: === vect_analyze_slp ===
common/pixel.c:59:1: note: === vect_make_slp_decision ===
common/pixel.c:59:1: note: === vect_detect_hybrid_slp ===
common/pixel.c:59:1: note: === vect_analyze_loop_operations ===
common/pixel.c:59:1: note: examining phi: x_8 = PHI <x_30(21), 0(25)>

common/pixel.c:59:1: note: examining phi: i_sum_59 = PHI <i_sum_29(21), i_sum_104(25)>

common/pixel.c:59:1: note: examining phi: ivtmp_214 = PHI <ivtmp_213(21), 16(25)>

common/pixel.c:59:1: note: ==> examining statement: # DEBUG x => x_8
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: # DEBUG i_sum => i_sum_59
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: _14 = (sizetype) x_8;
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: _5 = fenc_16 + _14;
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: _20 = *_5;
common/pixel.c:59:1: note: vect_is_simple_use: operand *_5
common/pixel.c:59:1: note: not ssa-name.
common/pixel.c:59:1: note: use not simple.
common/pixel.c:59:1: note: vect_is_simple_use: operand *_5
common/pixel.c:59:1: note: not ssa-name.
common/pixel.c:59:1: note: use not simple.
common/pixel.c:59:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:59:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:59:1: note: ==> examining statement: _21 = (int) _20;
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: _23 = pix3_103 + _14;
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: _24 = *_23;
common/pixel.c:59:1: note: vect_is_simple_use: operand *_23
common/pixel.c:59:1: note: not ssa-name.
common/pixel.c:59:1: note: use not simple.
common/pixel.c:59:1: note: vect_is_simple_use: operand *_23
common/pixel.c:59:1: note: not ssa-name.
common/pixel.c:59:1: note: use not simple.
common/pixel.c:59:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:59:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:59:1: note: ==> examining statement: _25 = (int) _24;
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: _26 = _21 - _25;
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: _27 = ABS_EXPR <_26>;
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: i_sum_29 = _27 + i_sum_59;
common/pixel.c:59:1: note: ==> examining pattern statement: patt_198 = SAD_EXPR <_20, _24, i_sum_59>;
common/pixel.c:59:1: note: vect_is_simple_use: operand _20
common/pixel.c:59:1: note: def_stmt: _20 = *_5;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: vect_is_simple_use: operand _24
common/pixel.c:59:1: note: def_stmt: _24 = *_23;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: vect_is_simple_use: operand i_sum_59
common/pixel.c:59:1: note: def_stmt: i_sum_59 = PHI <i_sum_29(21), i_sum_104(25)>
common/pixel.c:59:1: note: type of def: 5.
common/pixel.c:59:1: note: detected reduction: i_sum_29 = _27 + i_sum_59;

common/pixel.c:59:1: note: reduc op not supported by target.
vect_model_reduction_cost: inside_cost = 1, prologue_cost = 1, epilogue_cost = 5 .
common/pixel.c:59:1: note: ==> examining statement: # DEBUG i_sum => i_sum_29
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: x_30 = x_8 + 1;
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: # DEBUG x => x_30
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: # DEBUG x => x_30
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: # DEBUG i_sum => i_sum_29
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: ivtmp_213 = ivtmp_214 - 1;
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: if (ivtmp_213 != 0)
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: vectorization_factor = 16, niters = 16
common/pixel.c:59:1: note: === vect_update_slp_costs_according_to_vf ===
common/pixel.c:59:1: note: Cost model analysis: 
  Vector inside of loop cost: 5
  Vector prologue cost: 1
  Vector epilogue cost: 5
  Scalar iteration cost: 3
  Scalar outside cost: 0
  Vector outside cost: 6
  prologue iterations: 0
  epilogue iterations: 0
  Calculated minimum iters for profitability: 3
common/pixel.c:59:1: note:   Runtime profitability threshold = 15
common/pixel.c:59:1: note:   Static estimate profitability threshold = 15
common/pixel.c:59:1: note: loop vectorized
common/pixel.c:59:1: note: === vec_transform_loop ===
common/pixel.c:59:1: note: ------>vectorizing phi: x_8 = PHI <x_30(21), 0(27)>

common/pixel.c:59:1: note: ------>vectorizing phi: i_sum_59 = PHI <i_sum_29(21), i_sum_104(27)>

common/pixel.c:59:1: note: multiple-types.
common/pixel.c:59:1: note: ------>vectorizing phi: ivtmp_214 = PHI <ivtmp_213(21), 16(27)>

common/pixel.c:59:1: note: ------>vectorizing statement: # DEBUG x => x_8

common/pixel.c:59:1: note: ------>vectorizing statement: # DEBUG i_sum => i_sum_59

common/pixel.c:59:1: note: ------>vectorizing statement: _14 = (sizetype) x_8;

common/pixel.c:59:1: note: ------>vectorizing statement: _5 = fenc_16 + _14;

common/pixel.c:59:1: note: ------>vectorizing statement: _20 = *_5;

common/pixel.c:59:1: note: transform statement.
common/pixel.c:59:1: note: transform load. ncopies = 1
common/pixel.c:59:1: note: create vector_type-pointer variable to type: vector(16) unsigned char  vectorizing a pointer ref: *fenc_16
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:59:1: note: created vectp_fenc.649_197
common/pixel.c:59:1: note: add new stmt: vect__20.650_194 = MEM[(uint8_t *)vectp_fenc.648_196];
common/pixel.c:59:1: note: ------>vectorizing statement: _21 = (int) _20;

common/pixel.c:59:1: note: ------>vectorizing statement: _23 = pix3_103 + _14;

common/pixel.c:59:1: note: ------>vectorizing statement: _24 = *_23;

common/pixel.c:59:1: note: transform statement.
common/pixel.c:59:1: note: transform load. ncopies = 1
common/pixel.c:59:1: note: create vector_type-pointer variable to type: vector(16) unsigned char  vectorizing a pointer ref: *pix3_103
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:59:1: note: created vectp_pix3.652_193
common/pixel.c:59:1: note: add new stmt: vect__24.653_190 = MEM[(uint8_t *)vectp_pix3.651_192];
common/pixel.c:59:1: note: ------>vectorizing statement: _25 = (int) _24;

common/pixel.c:59:1: note: ------>vectorizing statement: _26 = _21 - _25;

common/pixel.c:59:1: note: ------>vectorizing statement: _27 = ABS_EXPR <_26>;

common/pixel.c:59:1: note: ------>vectorizing statement: i_sum_29 = _27 + i_sum_59;

common/pixel.c:59:1: note: multiple-types.
common/pixel.c:59:1: note: transform statement.
common/pixel.c:59:1: note: vect_is_simple_use: operand _20
common/pixel.c:59:1: note: def_stmt: _20 = *_5;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: vect_is_simple_use: operand _24
common/pixel.c:59:1: note: def_stmt: _24 = *_23;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: vect_is_simple_use: operand i_sum_59
common/pixel.c:59:1: note: def_stmt: i_sum_59 = PHI <i_sum_29(21), i_sum_104(27)>
common/pixel.c:59:1: note: type of def: 5.
common/pixel.c:59:1: note: detected reduction: i_sum_29 = _27 + i_sum_59;

common/pixel.c:59:1: note: reduc op not supported by target.
common/pixel.c:59:1: note: transform reduction.
common/pixel.c:59:1: note: vect_get_vec_def_for_operand: _20
common/pixel.c:59:1: note: vect_is_simple_use: operand _20
common/pixel.c:59:1: note: def_stmt: _20 = *_5;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: def =  _20
  def_stmt =  _20 = *_5;
common/pixel.c:59:1: note: vect_get_vec_def_for_operand: _24
common/pixel.c:59:1: note: vect_is_simple_use: operand _24
common/pixel.c:59:1: note: def_stmt: _24 = *_23;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: def =  _24
  def_stmt =  _24 = *_23;
common/pixel.c:59:1: note: add new stmt: vect_patt_198.654_188 = SAD_EXPR <vect__20.650_194, vect__24.653_190, vect_patt_198.654_189>;
common/pixel.c:59:1: note: vect_is_simple_use: operand i_sum_104
common/pixel.c:59:1: note: def_stmt: i_sum_104 = PHI <i_sum_222(24), 0(20)>
common/pixel.c:59:1: note: type of def: 2.
common/pixel.c:59:1: note: vect_get_vec_def_for_operand: i_sum_59
common/pixel.c:59:1: note: vect_is_simple_use: operand i_sum_59
common/pixel.c:59:1: note: def_stmt: i_sum_59 = PHI <i_sum_29(21), i_sum_104(27)>
common/pixel.c:59:1: note: type of def: 5.
common/pixel.c:59:1: note: def =  i_sum_59
  def_stmt =  i_sum_59 = PHI <i_sum_29(21), i_sum_104(27)>
common/pixel.c:59:1: note: transform reduction: created def-use cycle: vect_patt_198.654_189 = PHI <vect_patt_198.654_188(21), { 0, 0, 0, 0 }(27)>

vect_patt_198.654_188 = SAD_EXPR <vect__20.650_194, vect__24.653_190, vect_patt_198.654_189>;

common/pixel.c:59:1: note: Reduce using vector shifts
common/pixel.c:59:1: note: extract scalar result
common/pixel.c:59:1: note: ------>vectorizing statement: # DEBUG i_sum => i_sum_29

common/pixel.c:59:1: note: ------>vectorizing statement: x_30 = x_8 + 1;

common/pixel.c:59:1: note: ------>vectorizing statement: # DEBUG x => x_30

common/pixel.c:59:1: note: ------>vectorizing statement: # DEBUG x => x_30

common/pixel.c:59:1: note: ------>vectorizing statement: # DEBUG i_sum => i_sum_29

common/pixel.c:59:1: note: ------>vectorizing statement: ivtmp_213 = ivtmp_214 - 1;

common/pixel.c:59:1: note: ------>vectorizing statement: vectp_fenc.648_195 = vectp_fenc.648_196 + 16;

common/pixel.c:59:1: note: ------>vectorizing statement: vectp_pix3.651_191 = vectp_pix3.651_192 + 16;

common/pixel.c:59:1: note: ------>vectorizing statement: if (ivtmp_213 != 0)


loop at common/pixel.c:59: if (ivtmp_179 < 1)

;; Scaling loop 2 with scale 0.062500, bounding iterations to 1 from guessed 16
;; guessed iterations are now 1
common/pixel.c:59:1: note: LOOP VECTORIZED


Analyzing loop at common/pixel.c:59
common/pixel.c:59:1: note: ===== analyze_loop_nest =====
common/pixel.c:59:1: note: === vect_analyze_loop_form ===
common/pixel.c:59:1: note: ===== analyze_loop_nest_1 =====
common/pixel.c:59:1: note: === vect_analyze_loop_form ===
common/pixel.c:59:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 4
  exit condition [15, + , 4294967295] != 0
  bounds on difference of bases: -15 ... -15
  result:
    # of iterations 15, bounded by 15
common/pixel.c:59:1: note: Considering outer-loop vectorization.
common/pixel.c:59:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 3
  exit condition [15, + , 4294967295] != 0
  bounds on difference of bases: -15 ... -15
  result:
    # of iterations 15, bounded by 15
common/pixel.c:59:1: note: === vect_analyze_data_refs ===
Creating dr for *_41
analyze_innermost: success.
	base_address: fenc_37
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_2(D)
	Access function 0: {{0B, +, 16}_3, +, 1}_4
Creating dr for *_45
analyze_innermost: success.
	base_address: pix2_137
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix2_13(D)
	Access function 0: {{0B, +, pretmp_223}_3, +, 1}_4
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:59:1: note: analyze in outer-loop: *fenc_37
common/pixel.c:59:1: note: 	outer base_address: fenc_2(D)
	outer offset from base address: 0
	outer constant offset from base address: 0
	outer step: 16
	outer aligned to: 128
common/pixel.c:59:1: note: got vectype for stmt: _42 = *_41;
vector(16) unsigned char
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:59:1: note: analyze in outer-loop: *pix2_137
common/pixel.c:59:1: note: failed: evolution of base is not affine.
common/pixel.c:59:1: note: bad data references.

Analyzing loop at common/pixel.c:59
common/pixel.c:59:1: note: ===== analyze_loop_nest =====
common/pixel.c:59:1: note: === vect_analyze_loop_form ===
common/pixel.c:59:1: note: === get_loop_niters ===
common/pixel.c:59:1: note: === vect_analyze_data_refs ===
Creating dr for *_41
analyze_innermost: success.
	base_address: fenc_37
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_37
	Access function 0: {0B, +, 1}_4
Creating dr for *_45
analyze_innermost: success.
	base_address: pix2_137
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix2_137
	Access function 0: {0B, +, 1}_4
common/pixel.c:59:1: note: got vectype for stmt: _42 = *_41;
vector(16) unsigned char
common/pixel.c:59:1: note: got vectype for stmt: _46 = *_45;
vector(16) unsigned char
common/pixel.c:59:1: note: === vect_analyze_scalar_cycles ===
common/pixel.c:59:1: note: Analyze phi: x_81 = PHI <x_52(15), 0(19)>

common/pixel.c:59:1: note: Access function of PHI: {0, +, 1}_4
common/pixel.c:59:1: note: step: 1,  init: 0
common/pixel.c:59:1: note: Detected induction.
common/pixel.c:59:1: note: Analyze phi: i_sum_138 = PHI <i_sum_51(15), i_sum_140(19)>

common/pixel.c:59:1: note: Access function of PHI: {i_sum_140, +, _49}_4
common/pixel.c:59:1: note: step: _49,  init: i_sum_140
common/pixel.c:59:1: note: step unknown.
common/pixel.c:59:1: note: Analyze phi: ivtmp_210 = PHI <ivtmp_209(15), 16(19)>

common/pixel.c:59:1: note: Access function of PHI: {16, +, 4294967295}_4
common/pixel.c:59:1: note: step: 4294967295,  init: 16
common/pixel.c:59:1: note: Detected induction.
common/pixel.c:59:1: note: Analyze phi: i_sum_138 = PHI <i_sum_51(15), i_sum_140(19)>

common/pixel.c:59:1: note: detected reduction: i_sum_51 = _49 + i_sum_138;

common/pixel.c:59:1: note: Detected reduction.
common/pixel.c:59:1: note: === vect_pattern_recog ===
common/pixel.c:59:1: note: vect_is_simple_use: operand _49
common/pixel.c:59:1: note: def_stmt: _49 = ABS_EXPR <_48>;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: vect_is_simple_use: operand _49
common/pixel.c:59:1: note: def_stmt: _49 = ABS_EXPR <_48>;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: vect_is_simple_use: operand _49
common/pixel.c:59:1: note: def_stmt: _49 = ABS_EXPR <_48>;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: vect_is_simple_use: operand _43
common/pixel.c:59:1: note: def_stmt: _43 = (int) _42;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: vect_is_simple_use: operand _42
common/pixel.c:59:1: note: def_stmt: _42 = *_41;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: vect_is_simple_use: operand _47
common/pixel.c:59:1: note: def_stmt: _47 = (int) _46;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: vect_is_simple_use: operand _46
common/pixel.c:59:1: note: def_stmt: _46 = *_45;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: vect_recog_sad_pattern: detected: patt_178 = SAD_EXPR <_42, _46, i_sum_138>;

common/pixel.c:59:1: note: pattern recognized: patt_178 = SAD_EXPR <_42, _46, i_sum_138>;
common/pixel.c:59:1: note: === vect_analyze_data_ref_accesses ===
common/pixel.c:59:1: note: === vect_mark_stmts_to_be_vectorized ===
common/pixel.c:59:1: note: init: phi relevant? x_81 = PHI <x_52(15), 0(19)>
common/pixel.c:59:1: note: init: phi relevant? i_sum_138 = PHI <i_sum_51(15), i_sum_140(19)>
common/pixel.c:59:1: note: init: phi relevant? ivtmp_210 = PHI <ivtmp_209(15), 16(19)>
common/pixel.c:59:1: note: init: stmt relevant? # DEBUG x => x_81
common/pixel.c:59:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_138
common/pixel.c:59:1: note: init: stmt relevant? _39 = (sizetype) x_81;
common/pixel.c:59:1: note: init: stmt relevant? _41 = fenc_37 + _39;
common/pixel.c:59:1: note: init: stmt relevant? _42 = *_41;
common/pixel.c:59:1: note: init: stmt relevant? _43 = (int) _42;
common/pixel.c:59:1: note: init: stmt relevant? _45 = pix2_137 + _39;
common/pixel.c:59:1: note: init: stmt relevant? _46 = *_45;
common/pixel.c:59:1: note: init: stmt relevant? _47 = (int) _46;
common/pixel.c:59:1: note: init: stmt relevant? _48 = _43 - _47;
common/pixel.c:59:1: note: init: stmt relevant? _49 = ABS_EXPR <_48>;
common/pixel.c:59:1: note: init: stmt relevant? i_sum_51 = _49 + i_sum_138;
common/pixel.c:59:1: note: vec_stmt_relevant_p: used out of loop.
common/pixel.c:59:1: note: mark relevant 0, live 1.
common/pixel.c:59:1: note: last stmt in pattern. don't mark relevant/live.
common/pixel.c:59:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_51
common/pixel.c:59:1: note: init: stmt relevant? x_52 = x_81 + 1;
common/pixel.c:59:1: note: init: stmt relevant? # DEBUG x => x_52
common/pixel.c:59:1: note: init: stmt relevant? # DEBUG x => x_52
common/pixel.c:59:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_51
common/pixel.c:59:1: note: init: stmt relevant? ivtmp_209 = ivtmp_210 - 1;
common/pixel.c:59:1: note: init: stmt relevant? if (ivtmp_209 != 0)
common/pixel.c:59:1: note: worklist: examine stmt: patt_178 = SAD_EXPR <_42, _46, i_sum_138>;
common/pixel.c:59:1: note: vect_is_simple_use: operand _42
common/pixel.c:59:1: note: def_stmt: _42 = *_41;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: mark relevant 3, live 0.
common/pixel.c:59:1: note: vect_is_simple_use: operand _46
common/pixel.c:59:1: note: def_stmt: _46 = *_45;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: mark relevant 3, live 0.
common/pixel.c:59:1: note: vect_is_simple_use: operand i_sum_138
common/pixel.c:59:1: note: def_stmt: i_sum_138 = PHI <i_sum_51(15), i_sum_140(19)>
common/pixel.c:59:1: note: type of def: 5.
common/pixel.c:59:1: note: mark relevant 3, live 0.
common/pixel.c:59:1: note: worklist: examine stmt: i_sum_138 = PHI <i_sum_51(15), i_sum_140(19)>
common/pixel.c:59:1: note: vect_is_simple_use: operand i_sum_51
common/pixel.c:59:1: note: def_stmt: i_sum_51 = _49 + i_sum_138;
common/pixel.c:59:1: note: type of def: 5.
common/pixel.c:59:1: note: reduc-stmt defining reduc-phi in the same nest.
common/pixel.c:59:1: note: vect_is_simple_use: operand i_sum_140
common/pixel.c:59:1: note: def_stmt: i_sum_140 = PHI <i_sum_220(18), 0(14)>
common/pixel.c:59:1: note: type of def: 2.
common/pixel.c:59:1: note: def_stmt is out of loop.
common/pixel.c:59:1: note: worklist: examine stmt: _46 = *_45;
common/pixel.c:59:1: note: worklist: examine stmt: _42 = *_41;
common/pixel.c:59:1: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _42 = *_41;
  stmt_b: _46 = *_45;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _42 = *_41;
  stmt_b: _42 = *_41;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_4)
  (chrec_b = {0B, +, 1}_4)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _46 = *_45;
  stmt_b: _46 = *_45;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_4)
  (chrec_b = {0B, +, 1}_4)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/pixel.c:59:1: note: === vect_determine_vectorization_factor ===
common/pixel.c:59:1: note: ==> examining phi: x_81 = PHI <x_52(15), 0(19)>

common/pixel.c:59:1: note: ==> examining phi: i_sum_138 = PHI <i_sum_51(15), i_sum_140(19)>

common/pixel.c:59:1: note: get vectype for scalar type:  int
common/pixel.c:59:1: note: vectype: vector(4) int
common/pixel.c:59:1: note: nunits = 4
common/pixel.c:59:1: note: ==> examining phi: ivtmp_210 = PHI <ivtmp_209(15), 16(19)>

common/pixel.c:59:1: note: ==> examining statement: # DEBUG x => x_81

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: # DEBUG i_sum => i_sum_138

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: _39 = (sizetype) x_81;

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: _41 = fenc_37 + _39;

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: _42 = *_41;

common/pixel.c:59:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:59:1: note: vectype: vector(16) unsigned char
common/pixel.c:59:1: note: nunits = 16
common/pixel.c:59:1: note: ==> examining statement: _43 = (int) _42;

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: _45 = pix2_137 + _39;

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: _46 = *_45;

common/pixel.c:59:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:59:1: note: vectype: vector(16) unsigned char
common/pixel.c:59:1: note: nunits = 16
common/pixel.c:59:1: note: ==> examining statement: _47 = (int) _46;

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: _48 = _43 - _47;

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: _49 = ABS_EXPR <_48>;

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: i_sum_51 = _49 + i_sum_138;

common/pixel.c:59:1: note: ==> examining pattern statement: patt_178 = SAD_EXPR <_42, _46, i_sum_138>;

common/pixel.c:59:1: note: get vectype for scalar type:  int
common/pixel.c:59:1: note: vectype: vector(4) int
common/pixel.c:59:1: note: nunits = 4
common/pixel.c:59:1: note: ==> examining statement: # DEBUG i_sum => i_sum_51

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: x_52 = x_81 + 1;

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: # DEBUG x => x_52

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: # DEBUG x => x_52

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: # DEBUG i_sum => i_sum_51

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: ivtmp_209 = ivtmp_210 - 1;

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: if (ivtmp_209 != 0)

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: vectorization factor = 16
common/pixel.c:59:1: note: === vect_analyze_data_refs_alignment ===
common/pixel.c:59:1: note: vect_compute_data_ref_alignment:
common/pixel.c:59:1: note: can't force alignment of ref: *_41
common/pixel.c:59:1: note: vect_compute_data_ref_alignment:
common/pixel.c:59:1: note: can't force alignment of ref: *_45
common/pixel.c:59:1: note: === vect_prune_runtime_alias_test_list ===
common/pixel.c:59:1: note: === vect_enhance_data_refs_alignment ===
common/pixel.c:59:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:59:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:59:1: note: vect_can_advance_ivs_p:
common/pixel.c:59:1: note: Analyze phi: x_81 = PHI <x_52(15), 0(19)>

common/pixel.c:59:1: note: Analyze phi: i_sum_138 = PHI <i_sum_51(15), i_sum_140(19)>

common/pixel.c:59:1: note: reduc phi. skip.
common/pixel.c:59:1: note: Analyze phi: ivtmp_210 = PHI <ivtmp_209(15), 16(19)>

common/pixel.c:59:1: note: Vectorizing an unaligned access.
common/pixel.c:59:1: note: Vectorizing an unaligned access.
common/pixel.c:59:1: note: === vect_analyze_slp ===
common/pixel.c:59:1: note: === vect_make_slp_decision ===
common/pixel.c:59:1: note: === vect_detect_hybrid_slp ===
common/pixel.c:59:1: note: === vect_analyze_loop_operations ===
common/pixel.c:59:1: note: examining phi: x_81 = PHI <x_52(15), 0(19)>

common/pixel.c:59:1: note: examining phi: i_sum_138 = PHI <i_sum_51(15), i_sum_140(19)>

common/pixel.c:59:1: note: examining phi: ivtmp_210 = PHI <ivtmp_209(15), 16(19)>

common/pixel.c:59:1: note: ==> examining statement: # DEBUG x => x_81
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: # DEBUG i_sum => i_sum_138
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: _39 = (sizetype) x_81;
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: _41 = fenc_37 + _39;
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: _42 = *_41;
common/pixel.c:59:1: note: vect_is_simple_use: operand *_41
common/pixel.c:59:1: note: not ssa-name.
common/pixel.c:59:1: note: use not simple.
common/pixel.c:59:1: note: vect_is_simple_use: operand *_41
common/pixel.c:59:1: note: not ssa-name.
common/pixel.c:59:1: note: use not simple.
common/pixel.c:59:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:59:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:59:1: note: ==> examining statement: _43 = (int) _42;
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: _45 = pix2_137 + _39;
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: _46 = *_45;
common/pixel.c:59:1: note: vect_is_simple_use: operand *_45
common/pixel.c:59:1: note: not ssa-name.
common/pixel.c:59:1: note: use not simple.
common/pixel.c:59:1: note: vect_is_simple_use: operand *_45
common/pixel.c:59:1: note: not ssa-name.
common/pixel.c:59:1: note: use not simple.
common/pixel.c:59:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:59:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:59:1: note: ==> examining statement: _47 = (int) _46;
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: _48 = _43 - _47;
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: _49 = ABS_EXPR <_48>;
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: i_sum_51 = _49 + i_sum_138;
common/pixel.c:59:1: note: ==> examining pattern statement: patt_178 = SAD_EXPR <_42, _46, i_sum_138>;
common/pixel.c:59:1: note: vect_is_simple_use: operand _42
common/pixel.c:59:1: note: def_stmt: _42 = *_41;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: vect_is_simple_use: operand _46
common/pixel.c:59:1: note: def_stmt: _46 = *_45;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: vect_is_simple_use: operand i_sum_138
common/pixel.c:59:1: note: def_stmt: i_sum_138 = PHI <i_sum_51(15), i_sum_140(19)>
common/pixel.c:59:1: note: type of def: 5.
common/pixel.c:59:1: note: detected reduction: i_sum_51 = _49 + i_sum_138;

common/pixel.c:59:1: note: reduc op not supported by target.
vect_model_reduction_cost: inside_cost = 1, prologue_cost = 1, epilogue_cost = 5 .
common/pixel.c:59:1: note: ==> examining statement: # DEBUG i_sum => i_sum_51
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: x_52 = x_81 + 1;
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: # DEBUG x => x_52
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: # DEBUG x => x_52
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: # DEBUG i_sum => i_sum_51
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: ivtmp_209 = ivtmp_210 - 1;
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: if (ivtmp_209 != 0)
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: vectorization_factor = 16, niters = 16
common/pixel.c:59:1: note: === vect_update_slp_costs_according_to_vf ===
common/pixel.c:59:1: note: Cost model analysis: 
  Vector inside of loop cost: 5
  Vector prologue cost: 1
  Vector epilogue cost: 5
  Scalar iteration cost: 3
  Scalar outside cost: 0
  Vector outside cost: 6
  prologue iterations: 0
  epilogue iterations: 0
  Calculated minimum iters for profitability: 3
common/pixel.c:59:1: note:   Runtime profitability threshold = 15
common/pixel.c:59:1: note:   Static estimate profitability threshold = 15
common/pixel.c:59:1: note: loop vectorized
common/pixel.c:59:1: note: === vec_transform_loop ===
common/pixel.c:59:1: note: ------>vectorizing phi: x_81 = PHI <x_52(15), 0(28)>

common/pixel.c:59:1: note: ------>vectorizing phi: i_sum_138 = PHI <i_sum_51(15), i_sum_140(28)>

common/pixel.c:59:1: note: multiple-types.
common/pixel.c:59:1: note: ------>vectorizing phi: ivtmp_210 = PHI <ivtmp_209(15), 16(28)>

common/pixel.c:59:1: note: ------>vectorizing statement: # DEBUG x => x_81

common/pixel.c:59:1: note: ------>vectorizing statement: # DEBUG i_sum => i_sum_138

common/pixel.c:59:1: note: ------>vectorizing statement: _39 = (sizetype) x_81;

common/pixel.c:59:1: note: ------>vectorizing statement: _41 = fenc_37 + _39;

common/pixel.c:59:1: note: ------>vectorizing statement: _42 = *_41;

common/pixel.c:59:1: note: transform statement.
common/pixel.c:59:1: note: transform load. ncopies = 1
common/pixel.c:59:1: note: create vector_type-pointer variable to type: vector(16) unsigned char  vectorizing a pointer ref: *fenc_37
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:59:1: note: created vectp_fenc.659_177
common/pixel.c:59:1: note: add new stmt: vect__42.660_174 = MEM[(uint8_t *)vectp_fenc.658_176];
common/pixel.c:59:1: note: ------>vectorizing statement: _43 = (int) _42;

common/pixel.c:59:1: note: ------>vectorizing statement: _45 = pix2_137 + _39;

common/pixel.c:59:1: note: ------>vectorizing statement: _46 = *_45;

common/pixel.c:59:1: note: transform statement.
common/pixel.c:59:1: note: transform load. ncopies = 1
common/pixel.c:59:1: note: create vector_type-pointer variable to type: vector(16) unsigned char  vectorizing a pointer ref: *pix2_137
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:59:1: note: created vectp_pix2.662_173
common/pixel.c:59:1: note: add new stmt: vect__46.663_170 = MEM[(uint8_t *)vectp_pix2.661_172];
common/pixel.c:59:1: note: ------>vectorizing statement: _47 = (int) _46;

common/pixel.c:59:1: note: ------>vectorizing statement: _48 = _43 - _47;

common/pixel.c:59:1: note: ------>vectorizing statement: _49 = ABS_EXPR <_48>;

common/pixel.c:59:1: note: ------>vectorizing statement: i_sum_51 = _49 + i_sum_138;

common/pixel.c:59:1: note: multiple-types.
common/pixel.c:59:1: note: transform statement.
common/pixel.c:59:1: note: vect_is_simple_use: operand _42
common/pixel.c:59:1: note: def_stmt: _42 = *_41;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: vect_is_simple_use: operand _46
common/pixel.c:59:1: note: def_stmt: _46 = *_45;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: vect_is_simple_use: operand i_sum_138
common/pixel.c:59:1: note: def_stmt: i_sum_138 = PHI <i_sum_51(15), i_sum_140(28)>
common/pixel.c:59:1: note: type of def: 5.
common/pixel.c:59:1: note: detected reduction: i_sum_51 = _49 + i_sum_138;

common/pixel.c:59:1: note: reduc op not supported by target.
common/pixel.c:59:1: note: transform reduction.
common/pixel.c:59:1: note: vect_get_vec_def_for_operand: _42
common/pixel.c:59:1: note: vect_is_simple_use: operand _42
common/pixel.c:59:1: note: def_stmt: _42 = *_41;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: def =  _42
  def_stmt =  _42 = *_41;
common/pixel.c:59:1: note: vect_get_vec_def_for_operand: _46
common/pixel.c:59:1: note: vect_is_simple_use: operand _46
common/pixel.c:59:1: note: def_stmt: _46 = *_45;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: def =  _46
  def_stmt =  _46 = *_45;
common/pixel.c:59:1: note: add new stmt: vect_patt_178.664_168 = SAD_EXPR <vect__42.660_174, vect__46.663_170, vect_patt_178.664_169>;
common/pixel.c:59:1: note: vect_is_simple_use: operand i_sum_140
common/pixel.c:59:1: note: def_stmt: i_sum_140 = PHI <i_sum_220(18), 0(14)>
common/pixel.c:59:1: note: type of def: 2.
common/pixel.c:59:1: note: vect_get_vec_def_for_operand: i_sum_138
common/pixel.c:59:1: note: vect_is_simple_use: operand i_sum_138
common/pixel.c:59:1: note: def_stmt: i_sum_138 = PHI <i_sum_51(15), i_sum_140(28)>
common/pixel.c:59:1: note: type of def: 5.
common/pixel.c:59:1: note: def =  i_sum_138
  def_stmt =  i_sum_138 = PHI <i_sum_51(15), i_sum_140(28)>
common/pixel.c:59:1: note: transform reduction: created def-use cycle: vect_patt_178.664_169 = PHI <vect_patt_178.664_168(15), { 0, 0, 0, 0 }(28)>

vect_patt_178.664_168 = SAD_EXPR <vect__42.660_174, vect__46.663_170, vect_patt_178.664_169>;

common/pixel.c:59:1: note: Reduce using vector shifts
common/pixel.c:59:1: note: extract scalar result
common/pixel.c:59:1: note: ------>vectorizing statement: # DEBUG i_sum => i_sum_51

common/pixel.c:59:1: note: ------>vectorizing statement: x_52 = x_81 + 1;

common/pixel.c:59:1: note: ------>vectorizing statement: # DEBUG x => x_52

common/pixel.c:59:1: note: ------>vectorizing statement: # DEBUG x => x_52

common/pixel.c:59:1: note: ------>vectorizing statement: # DEBUG i_sum => i_sum_51

common/pixel.c:59:1: note: ------>vectorizing statement: ivtmp_209 = ivtmp_210 - 1;

common/pixel.c:59:1: note: ------>vectorizing statement: vectp_fenc.658_175 = vectp_fenc.658_176 + 16;

common/pixel.c:59:1: note: ------>vectorizing statement: vectp_pix2.661_171 = vectp_pix2.661_172 + 16;

common/pixel.c:59:1: note: ------>vectorizing statement: if (ivtmp_209 != 0)


loop at common/pixel.c:59: if (ivtmp_159 < 1)

;; Scaling loop 4 with scale 0.062500, bounding iterations to 1 from guessed 16
;; guessed iterations are now 1
common/pixel.c:59:1: note: LOOP VECTORIZED


Analyzing loop at common/pixel.c:59
common/pixel.c:59:1: note: ===== analyze_loop_nest =====
common/pixel.c:59:1: note: === vect_analyze_loop_form ===
common/pixel.c:59:1: note: ===== analyze_loop_nest_1 =====
common/pixel.c:59:1: note: === vect_analyze_loop_form ===
common/pixel.c:59:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 6
  exit condition [15, + , 4294967295] != 0
  bounds on difference of bases: -15 ... -15
  result:
    # of iterations 15, bounded by 15
common/pixel.c:59:1: note: Considering outer-loop vectorization.
common/pixel.c:59:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 5
  exit condition [15, + , 4294967295] != 0
  bounds on difference of bases: -15 ... -15
  result:
    # of iterations 15, bounded by 15
common/pixel.c:59:1: note: === vect_analyze_data_refs ===
Creating dr for *_63
analyze_innermost: success.
	base_address: fenc_142
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_2(D)
	Access function 0: {{0B, +, 16}_5, +, 1}_6
Creating dr for *_67
analyze_innermost: success.
	base_address: pix1_143
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix1_9(D)
	Access function 0: {{0B, +, pretmp_223}_5, +, 1}_6
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:59:1: note: analyze in outer-loop: *fenc_142
common/pixel.c:59:1: note: 	outer base_address: fenc_2(D)
	outer offset from base address: 0
	outer constant offset from base address: 0
	outer step: 16
	outer aligned to: 128
common/pixel.c:59:1: note: got vectype for stmt: _64 = *_63;
vector(16) unsigned char
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:59:1: note: analyze in outer-loop: *pix1_143
common/pixel.c:59:1: note: failed: evolution of base is not affine.
common/pixel.c:59:1: note: bad data references.

Analyzing loop at common/pixel.c:59
common/pixel.c:59:1: note: ===== analyze_loop_nest =====
common/pixel.c:59:1: note: === vect_analyze_loop_form ===
common/pixel.c:59:1: note: === get_loop_niters ===
common/pixel.c:59:1: note: === vect_analyze_data_refs ===
Creating dr for *_63
analyze_innermost: success.
	base_address: fenc_142
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_142
	Access function 0: {0B, +, 1}_6
Creating dr for *_67
analyze_innermost: success.
	base_address: pix1_143
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix1_143
	Access function 0: {0B, +, 1}_6
common/pixel.c:59:1: note: got vectype for stmt: _64 = *_63;
vector(16) unsigned char
common/pixel.c:59:1: note: got vectype for stmt: _68 = *_67;
vector(16) unsigned char
common/pixel.c:59:1: note: === vect_analyze_scalar_cycles ===
common/pixel.c:59:1: note: Analyze phi: x_141 = PHI <x_74(9), 0(13)>

common/pixel.c:59:1: note: Access function of PHI: {0, +, 1}_6
common/pixel.c:59:1: note: step: 1,  init: 0
common/pixel.c:59:1: note: Detected induction.
common/pixel.c:59:1: note: Analyze phi: i_sum_144 = PHI <i_sum_73(9), i_sum_146(13)>

common/pixel.c:59:1: note: Access function of PHI: {i_sum_146, +, _71}_6
common/pixel.c:59:1: note: step: _71,  init: i_sum_146
common/pixel.c:59:1: note: step unknown.
common/pixel.c:59:1: note: Analyze phi: ivtmp_206 = PHI <ivtmp_205(9), 16(13)>

common/pixel.c:59:1: note: Access function of PHI: {16, +, 4294967295}_6
common/pixel.c:59:1: note: step: 4294967295,  init: 16
common/pixel.c:59:1: note: Detected induction.
common/pixel.c:59:1: note: Analyze phi: i_sum_144 = PHI <i_sum_73(9), i_sum_146(13)>

common/pixel.c:59:1: note: detected reduction: i_sum_73 = _71 + i_sum_144;

common/pixel.c:59:1: note: Detected reduction.
common/pixel.c:59:1: note: === vect_pattern_recog ===
common/pixel.c:59:1: note: vect_is_simple_use: operand _71
common/pixel.c:59:1: note: def_stmt: _71 = ABS_EXPR <_70>;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: vect_is_simple_use: operand _71
common/pixel.c:59:1: note: def_stmt: _71 = ABS_EXPR <_70>;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: vect_is_simple_use: operand _71
common/pixel.c:59:1: note: def_stmt: _71 = ABS_EXPR <_70>;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: vect_is_simple_use: operand _65
common/pixel.c:59:1: note: def_stmt: _65 = (int) _64;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: vect_is_simple_use: operand _64
common/pixel.c:59:1: note: def_stmt: _64 = *_63;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: vect_is_simple_use: operand _69
common/pixel.c:59:1: note: def_stmt: _69 = (int) _68;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: vect_is_simple_use: operand _68
common/pixel.c:59:1: note: def_stmt: _68 = *_67;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: vect_recog_sad_pattern: detected: patt_158 = SAD_EXPR <_64, _68, i_sum_144>;

common/pixel.c:59:1: note: pattern recognized: patt_158 = SAD_EXPR <_64, _68, i_sum_144>;
common/pixel.c:59:1: note: === vect_analyze_data_ref_accesses ===
common/pixel.c:59:1: note: === vect_mark_stmts_to_be_vectorized ===
common/pixel.c:59:1: note: init: phi relevant? x_141 = PHI <x_74(9), 0(13)>
common/pixel.c:59:1: note: init: phi relevant? i_sum_144 = PHI <i_sum_73(9), i_sum_146(13)>
common/pixel.c:59:1: note: init: phi relevant? ivtmp_206 = PHI <ivtmp_205(9), 16(13)>
common/pixel.c:59:1: note: init: stmt relevant? # DEBUG x => x_141
common/pixel.c:59:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_144
common/pixel.c:59:1: note: init: stmt relevant? _61 = (sizetype) x_141;
common/pixel.c:59:1: note: init: stmt relevant? _63 = fenc_142 + _61;
common/pixel.c:59:1: note: init: stmt relevant? _64 = *_63;
common/pixel.c:59:1: note: init: stmt relevant? _65 = (int) _64;
common/pixel.c:59:1: note: init: stmt relevant? _67 = pix1_143 + _61;
common/pixel.c:59:1: note: init: stmt relevant? _68 = *_67;
common/pixel.c:59:1: note: init: stmt relevant? _69 = (int) _68;
common/pixel.c:59:1: note: init: stmt relevant? _70 = _65 - _69;
common/pixel.c:59:1: note: init: stmt relevant? _71 = ABS_EXPR <_70>;
common/pixel.c:59:1: note: init: stmt relevant? i_sum_73 = _71 + i_sum_144;
common/pixel.c:59:1: note: vec_stmt_relevant_p: used out of loop.
common/pixel.c:59:1: note: mark relevant 0, live 1.
common/pixel.c:59:1: note: last stmt in pattern. don't mark relevant/live.
common/pixel.c:59:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_73
common/pixel.c:59:1: note: init: stmt relevant? x_74 = x_141 + 1;
common/pixel.c:59:1: note: init: stmt relevant? # DEBUG x => x_74
common/pixel.c:59:1: note: init: stmt relevant? # DEBUG x => x_74
common/pixel.c:59:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_73
common/pixel.c:59:1: note: init: stmt relevant? ivtmp_205 = ivtmp_206 - 1;
common/pixel.c:59:1: note: init: stmt relevant? if (ivtmp_205 != 0)
common/pixel.c:59:1: note: worklist: examine stmt: patt_158 = SAD_EXPR <_64, _68, i_sum_144>;
common/pixel.c:59:1: note: vect_is_simple_use: operand _64
common/pixel.c:59:1: note: def_stmt: _64 = *_63;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: mark relevant 3, live 0.
common/pixel.c:59:1: note: vect_is_simple_use: operand _68
common/pixel.c:59:1: note: def_stmt: _68 = *_67;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: mark relevant 3, live 0.
common/pixel.c:59:1: note: vect_is_simple_use: operand i_sum_144
common/pixel.c:59:1: note: def_stmt: i_sum_144 = PHI <i_sum_73(9), i_sum_146(13)>
common/pixel.c:59:1: note: type of def: 5.
common/pixel.c:59:1: note: mark relevant 3, live 0.
common/pixel.c:59:1: note: worklist: examine stmt: i_sum_144 = PHI <i_sum_73(9), i_sum_146(13)>
common/pixel.c:59:1: note: vect_is_simple_use: operand i_sum_73
common/pixel.c:59:1: note: def_stmt: i_sum_73 = _71 + i_sum_144;
common/pixel.c:59:1: note: type of def: 5.
common/pixel.c:59:1: note: reduc-stmt defining reduc-phi in the same nest.
common/pixel.c:59:1: note: vect_is_simple_use: operand i_sum_146
common/pixel.c:59:1: note: def_stmt: i_sum_146 = PHI <i_sum_218(12), 0(8)>
common/pixel.c:59:1: note: type of def: 2.
common/pixel.c:59:1: note: def_stmt is out of loop.
common/pixel.c:59:1: note: worklist: examine stmt: _68 = *_67;
common/pixel.c:59:1: note: worklist: examine stmt: _64 = *_63;
common/pixel.c:59:1: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _64 = *_63;
  stmt_b: _68 = *_67;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _64 = *_63;
  stmt_b: _64 = *_63;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_6)
  (chrec_b = {0B, +, 1}_6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _68 = *_67;
  stmt_b: _68 = *_67;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_6)
  (chrec_b = {0B, +, 1}_6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/pixel.c:59:1: note: === vect_determine_vectorization_factor ===
common/pixel.c:59:1: note: ==> examining phi: x_141 = PHI <x_74(9), 0(13)>

common/pixel.c:59:1: note: ==> examining phi: i_sum_144 = PHI <i_sum_73(9), i_sum_146(13)>

common/pixel.c:59:1: note: get vectype for scalar type:  int
common/pixel.c:59:1: note: vectype: vector(4) int
common/pixel.c:59:1: note: nunits = 4
common/pixel.c:59:1: note: ==> examining phi: ivtmp_206 = PHI <ivtmp_205(9), 16(13)>

common/pixel.c:59:1: note: ==> examining statement: # DEBUG x => x_141

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: # DEBUG i_sum => i_sum_144

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: _61 = (sizetype) x_141;

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: _63 = fenc_142 + _61;

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: _64 = *_63;

common/pixel.c:59:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:59:1: note: vectype: vector(16) unsigned char
common/pixel.c:59:1: note: nunits = 16
common/pixel.c:59:1: note: ==> examining statement: _65 = (int) _64;

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: _67 = pix1_143 + _61;

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: _68 = *_67;

common/pixel.c:59:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:59:1: note: vectype: vector(16) unsigned char
common/pixel.c:59:1: note: nunits = 16
common/pixel.c:59:1: note: ==> examining statement: _69 = (int) _68;

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: _70 = _65 - _69;

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: _71 = ABS_EXPR <_70>;

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: i_sum_73 = _71 + i_sum_144;

common/pixel.c:59:1: note: ==> examining pattern statement: patt_158 = SAD_EXPR <_64, _68, i_sum_144>;

common/pixel.c:59:1: note: get vectype for scalar type:  int
common/pixel.c:59:1: note: vectype: vector(4) int
common/pixel.c:59:1: note: nunits = 4
common/pixel.c:59:1: note: ==> examining statement: # DEBUG i_sum => i_sum_73

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: x_74 = x_141 + 1;

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: # DEBUG x => x_74

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: # DEBUG x => x_74

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: # DEBUG i_sum => i_sum_73

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: ivtmp_205 = ivtmp_206 - 1;

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: if (ivtmp_205 != 0)

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: vectorization factor = 16
common/pixel.c:59:1: note: === vect_analyze_data_refs_alignment ===
common/pixel.c:59:1: note: vect_compute_data_ref_alignment:
common/pixel.c:59:1: note: can't force alignment of ref: *_63
common/pixel.c:59:1: note: vect_compute_data_ref_alignment:
common/pixel.c:59:1: note: can't force alignment of ref: *_67
common/pixel.c:59:1: note: === vect_prune_runtime_alias_test_list ===
common/pixel.c:59:1: note: === vect_enhance_data_refs_alignment ===
common/pixel.c:59:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:59:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:59:1: note: vect_can_advance_ivs_p:
common/pixel.c:59:1: note: Analyze phi: x_141 = PHI <x_74(9), 0(13)>

common/pixel.c:59:1: note: Analyze phi: i_sum_144 = PHI <i_sum_73(9), i_sum_146(13)>

common/pixel.c:59:1: note: reduc phi. skip.
common/pixel.c:59:1: note: Analyze phi: ivtmp_206 = PHI <ivtmp_205(9), 16(13)>

common/pixel.c:59:1: note: Vectorizing an unaligned access.
common/pixel.c:59:1: note: Vectorizing an unaligned access.
common/pixel.c:59:1: note: === vect_analyze_slp ===
common/pixel.c:59:1: note: === vect_make_slp_decision ===
common/pixel.c:59:1: note: === vect_detect_hybrid_slp ===
common/pixel.c:59:1: note: === vect_analyze_loop_operations ===
common/pixel.c:59:1: note: examining phi: x_141 = PHI <x_74(9), 0(13)>

common/pixel.c:59:1: note: examining phi: i_sum_144 = PHI <i_sum_73(9), i_sum_146(13)>

common/pixel.c:59:1: note: examining phi: ivtmp_206 = PHI <ivtmp_205(9), 16(13)>

common/pixel.c:59:1: note: ==> examining statement: # DEBUG x => x_141
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: # DEBUG i_sum => i_sum_144
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: _61 = (sizetype) x_141;
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: _63 = fenc_142 + _61;
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: _64 = *_63;
common/pixel.c:59:1: note: vect_is_simple_use: operand *_63
common/pixel.c:59:1: note: not ssa-name.
common/pixel.c:59:1: note: use not simple.
common/pixel.c:59:1: note: vect_is_simple_use: operand *_63
common/pixel.c:59:1: note: not ssa-name.
common/pixel.c:59:1: note: use not simple.
common/pixel.c:59:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:59:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:59:1: note: ==> examining statement: _65 = (int) _64;
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: _67 = pix1_143 + _61;
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: _68 = *_67;
common/pixel.c:59:1: note: vect_is_simple_use: operand *_67
common/pixel.c:59:1: note: not ssa-name.
common/pixel.c:59:1: note: use not simple.
common/pixel.c:59:1: note: vect_is_simple_use: operand *_67
common/pixel.c:59:1: note: not ssa-name.
common/pixel.c:59:1: note: use not simple.
common/pixel.c:59:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:59:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:59:1: note: ==> examining statement: _69 = (int) _68;
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: _70 = _65 - _69;
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: _71 = ABS_EXPR <_70>;
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: i_sum_73 = _71 + i_sum_144;
common/pixel.c:59:1: note: ==> examining pattern statement: patt_158 = SAD_EXPR <_64, _68, i_sum_144>;
common/pixel.c:59:1: note: vect_is_simple_use: operand _64
common/pixel.c:59:1: note: def_stmt: _64 = *_63;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: vect_is_simple_use: operand _68
common/pixel.c:59:1: note: def_stmt: _68 = *_67;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: vect_is_simple_use: operand i_sum_144
common/pixel.c:59:1: note: def_stmt: i_sum_144 = PHI <i_sum_73(9), i_sum_146(13)>
common/pixel.c:59:1: note: type of def: 5.
common/pixel.c:59:1: note: detected reduction: i_sum_73 = _71 + i_sum_144;

common/pixel.c:59:1: note: reduc op not supported by target.
vect_model_reduction_cost: inside_cost = 1, prologue_cost = 1, epilogue_cost = 5 .
common/pixel.c:59:1: note: ==> examining statement: # DEBUG i_sum => i_sum_73
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: x_74 = x_141 + 1;
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: # DEBUG x => x_74
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: # DEBUG x => x_74
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: # DEBUG i_sum => i_sum_73
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: ivtmp_205 = ivtmp_206 - 1;
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: if (ivtmp_205 != 0)
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: vectorization_factor = 16, niters = 16
common/pixel.c:59:1: note: === vect_update_slp_costs_according_to_vf ===
common/pixel.c:59:1: note: Cost model analysis: 
  Vector inside of loop cost: 5
  Vector prologue cost: 1
  Vector epilogue cost: 5
  Scalar iteration cost: 3
  Scalar outside cost: 0
  Vector outside cost: 6
  prologue iterations: 0
  epilogue iterations: 0
  Calculated minimum iters for profitability: 3
common/pixel.c:59:1: note:   Runtime profitability threshold = 15
common/pixel.c:59:1: note:   Static estimate profitability threshold = 15
common/pixel.c:59:1: note: loop vectorized
common/pixel.c:59:1: note: === vec_transform_loop ===
common/pixel.c:59:1: note: ------>vectorizing phi: x_141 = PHI <x_74(9), 0(29)>

common/pixel.c:59:1: note: ------>vectorizing phi: i_sum_144 = PHI <i_sum_73(9), i_sum_146(29)>

common/pixel.c:59:1: note: multiple-types.
common/pixel.c:59:1: note: ------>vectorizing phi: ivtmp_206 = PHI <ivtmp_205(9), 16(29)>

common/pixel.c:59:1: note: ------>vectorizing statement: # DEBUG x => x_141

common/pixel.c:59:1: note: ------>vectorizing statement: # DEBUG i_sum => i_sum_144

common/pixel.c:59:1: note: ------>vectorizing statement: _61 = (sizetype) x_141;

common/pixel.c:59:1: note: ------>vectorizing statement: _63 = fenc_142 + _61;

common/pixel.c:59:1: note: ------>vectorizing statement: _64 = *_63;

common/pixel.c:59:1: note: transform statement.
common/pixel.c:59:1: note: transform load. ncopies = 1
common/pixel.c:59:1: note: create vector_type-pointer variable to type: vector(16) unsigned char  vectorizing a pointer ref: *fenc_142
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:59:1: note: created vectp_fenc.669_157
common/pixel.c:59:1: note: add new stmt: vect__64.670_154 = MEM[(uint8_t *)vectp_fenc.668_156];
common/pixel.c:59:1: note: ------>vectorizing statement: _65 = (int) _64;

common/pixel.c:59:1: note: ------>vectorizing statement: _67 = pix1_143 + _61;

common/pixel.c:59:1: note: ------>vectorizing statement: _68 = *_67;

common/pixel.c:59:1: note: transform statement.
common/pixel.c:59:1: note: transform load. ncopies = 1
common/pixel.c:59:1: note: create vector_type-pointer variable to type: vector(16) unsigned char  vectorizing a pointer ref: *pix1_143
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:59:1: note: created vectp_pix1.672_153
common/pixel.c:59:1: note: add new stmt: vect__68.673_134 = MEM[(uint8_t *)vectp_pix1.671_136];
common/pixel.c:59:1: note: ------>vectorizing statement: _69 = (int) _68;

common/pixel.c:59:1: note: ------>vectorizing statement: _70 = _65 - _69;

common/pixel.c:59:1: note: ------>vectorizing statement: _71 = ABS_EXPR <_70>;

common/pixel.c:59:1: note: ------>vectorizing statement: i_sum_73 = _71 + i_sum_144;

common/pixel.c:59:1: note: multiple-types.
common/pixel.c:59:1: note: transform statement.
common/pixel.c:59:1: note: vect_is_simple_use: operand _64
common/pixel.c:59:1: note: def_stmt: _64 = *_63;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: vect_is_simple_use: operand _68
common/pixel.c:59:1: note: def_stmt: _68 = *_67;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: vect_is_simple_use: operand i_sum_144
common/pixel.c:59:1: note: def_stmt: i_sum_144 = PHI <i_sum_73(9), i_sum_146(29)>
common/pixel.c:59:1: note: type of def: 5.
common/pixel.c:59:1: note: detected reduction: i_sum_73 = _71 + i_sum_144;

common/pixel.c:59:1: note: reduc op not supported by target.
common/pixel.c:59:1: note: transform reduction.
common/pixel.c:59:1: note: vect_get_vec_def_for_operand: _64
common/pixel.c:59:1: note: vect_is_simple_use: operand _64
common/pixel.c:59:1: note: def_stmt: _64 = *_63;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: def =  _64
  def_stmt =  _64 = *_63;
common/pixel.c:59:1: note: vect_get_vec_def_for_operand: _68
common/pixel.c:59:1: note: vect_is_simple_use: operand _68
common/pixel.c:59:1: note: def_stmt: _68 = *_67;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: def =  _68
  def_stmt =  _68 = *_67;
common/pixel.c:59:1: note: add new stmt: vect_patt_158.674_132 = SAD_EXPR <vect__64.670_154, vect__68.673_134, vect_patt_158.674_133>;
common/pixel.c:59:1: note: vect_is_simple_use: operand i_sum_146
common/pixel.c:59:1: note: def_stmt: i_sum_146 = PHI <i_sum_218(12), 0(8)>
common/pixel.c:59:1: note: type of def: 2.
common/pixel.c:59:1: note: vect_get_vec_def_for_operand: i_sum_144
common/pixel.c:59:1: note: vect_is_simple_use: operand i_sum_144
common/pixel.c:59:1: note: def_stmt: i_sum_144 = PHI <i_sum_73(9), i_sum_146(29)>
common/pixel.c:59:1: note: type of def: 5.
common/pixel.c:59:1: note: def =  i_sum_144
  def_stmt =  i_sum_144 = PHI <i_sum_73(9), i_sum_146(29)>
common/pixel.c:59:1: note: transform reduction: created def-use cycle: vect_patt_158.674_133 = PHI <vect_patt_158.674_132(9), { 0, 0, 0, 0 }(29)>

vect_patt_158.674_132 = SAD_EXPR <vect__64.670_154, vect__68.673_134, vect_patt_158.674_133>;

common/pixel.c:59:1: note: Reduce using vector shifts
common/pixel.c:59:1: note: extract scalar result
common/pixel.c:59:1: note: ------>vectorizing statement: # DEBUG i_sum => i_sum_73

common/pixel.c:59:1: note: ------>vectorizing statement: x_74 = x_141 + 1;

common/pixel.c:59:1: note: ------>vectorizing statement: # DEBUG x => x_74

common/pixel.c:59:1: note: ------>vectorizing statement: # DEBUG x => x_74

common/pixel.c:59:1: note: ------>vectorizing statement: # DEBUG i_sum => i_sum_73

common/pixel.c:59:1: note: ------>vectorizing statement: ivtmp_205 = ivtmp_206 - 1;

common/pixel.c:59:1: note: ------>vectorizing statement: vectp_fenc.668_155 = vectp_fenc.668_156 + 16;

common/pixel.c:59:1: note: ------>vectorizing statement: vectp_pix1.671_135 = vectp_pix1.671_136 + 16;

common/pixel.c:59:1: note: ------>vectorizing statement: if (ivtmp_205 != 0)


loop at common/pixel.c:59: if (ivtmp_123 < 1)

;; Scaling loop 6 with scale 0.062500, bounding iterations to 1 from guessed 16
;; guessed iterations are now 1
common/pixel.c:59:1: note: LOOP VECTORIZED


Analyzing loop at common/pixel.c:59
common/pixel.c:59:1: note: ===== analyze_loop_nest =====
common/pixel.c:59:1: note: === vect_analyze_loop_form ===
common/pixel.c:59:1: note: ===== analyze_loop_nest_1 =====
common/pixel.c:59:1: note: === vect_analyze_loop_form ===
common/pixel.c:59:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 8
  exit condition [15, + , 4294967295] != 0
  bounds on difference of bases: -15 ... -15
  result:
    # of iterations 15, bounded by 15
common/pixel.c:59:1: note: Considering outer-loop vectorization.
common/pixel.c:59:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 7
  exit condition [15, + , 4294967295] != 0
  bounds on difference of bases: -15 ... -15
  result:
    # of iterations 15, bounded by 15
common/pixel.c:59:1: note: === vect_analyze_data_refs ===
Creating dr for *_85
analyze_innermost: success.
	base_address: fenc_148
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_2(D)
	Access function 0: {{0B, +, 16}_7, +, 1}_8
Creating dr for *_89
analyze_innermost: success.
	base_address: pix0_149
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix0_3(D)
	Access function 0: {{0B, +, pretmp_223}_7, +, 1}_8
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:59:1: note: analyze in outer-loop: *fenc_148
common/pixel.c:59:1: note: 	outer base_address: fenc_2(D)
	outer offset from base address: 0
	outer constant offset from base address: 0
	outer step: 16
	outer aligned to: 128
common/pixel.c:59:1: note: got vectype for stmt: _86 = *_85;
vector(16) unsigned char
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:59:1: note: analyze in outer-loop: *pix0_149
common/pixel.c:59:1: note: failed: evolution of base is not affine.
common/pixel.c:59:1: note: bad data references.

Analyzing loop at common/pixel.c:59
common/pixel.c:59:1: note: ===== analyze_loop_nest =====
common/pixel.c:59:1: note: === vect_analyze_loop_form ===
common/pixel.c:59:1: note: === get_loop_niters ===
common/pixel.c:59:1: note: === vect_analyze_data_refs ===
Creating dr for *_85
analyze_innermost: success.
	base_address: fenc_148
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_148
	Access function 0: {0B, +, 1}_8
Creating dr for *_89
analyze_innermost: success.
	base_address: pix0_149
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix0_149
	Access function 0: {0B, +, 1}_8
common/pixel.c:59:1: note: got vectype for stmt: _86 = *_85;
vector(16) unsigned char
common/pixel.c:59:1: note: got vectype for stmt: _90 = *_89;
vector(16) unsigned char
common/pixel.c:59:1: note: === vect_analyze_scalar_cycles ===
common/pixel.c:59:1: note: Analyze phi: x_147 = PHI <x_96(3), 0(7)>

common/pixel.c:59:1: note: Access function of PHI: {0, +, 1}_8
common/pixel.c:59:1: note: step: 1,  init: 0
common/pixel.c:59:1: note: Detected induction.
common/pixel.c:59:1: note: Analyze phi: i_sum_150 = PHI <i_sum_95(3), i_sum_152(7)>

common/pixel.c:59:1: note: Access function of PHI: {i_sum_152, +, _93}_8
common/pixel.c:59:1: note: step: _93,  init: i_sum_152
common/pixel.c:59:1: note: step unknown.
common/pixel.c:59:1: note: Analyze phi: ivtmp_202 = PHI <ivtmp_201(3), 16(7)>

common/pixel.c:59:1: note: Access function of PHI: {16, +, 4294967295}_8
common/pixel.c:59:1: note: step: 4294967295,  init: 16
common/pixel.c:59:1: note: Detected induction.
common/pixel.c:59:1: note: Analyze phi: i_sum_150 = PHI <i_sum_95(3), i_sum_152(7)>

common/pixel.c:59:1: note: detected reduction: i_sum_95 = _93 + i_sum_150;

common/pixel.c:59:1: note: Detected reduction.
common/pixel.c:59:1: note: === vect_pattern_recog ===
common/pixel.c:59:1: note: vect_is_simple_use: operand _93
common/pixel.c:59:1: note: def_stmt: _93 = ABS_EXPR <_92>;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: vect_is_simple_use: operand _93
common/pixel.c:59:1: note: def_stmt: _93 = ABS_EXPR <_92>;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: vect_is_simple_use: operand _93
common/pixel.c:59:1: note: def_stmt: _93 = ABS_EXPR <_92>;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: vect_is_simple_use: operand _87
common/pixel.c:59:1: note: def_stmt: _87 = (int) _86;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: vect_is_simple_use: operand _86
common/pixel.c:59:1: note: def_stmt: _86 = *_85;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: vect_is_simple_use: operand _91
common/pixel.c:59:1: note: def_stmt: _91 = (int) _90;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: vect_is_simple_use: operand _90
common/pixel.c:59:1: note: def_stmt: _90 = *_89;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: vect_recog_sad_pattern: detected: patt_122 = SAD_EXPR <_86, _90, i_sum_150>;

common/pixel.c:59:1: note: pattern recognized: patt_122 = SAD_EXPR <_86, _90, i_sum_150>;
common/pixel.c:59:1: note: === vect_analyze_data_ref_accesses ===
common/pixel.c:59:1: note: === vect_mark_stmts_to_be_vectorized ===
common/pixel.c:59:1: note: init: phi relevant? x_147 = PHI <x_96(3), 0(7)>
common/pixel.c:59:1: note: init: phi relevant? i_sum_150 = PHI <i_sum_95(3), i_sum_152(7)>
common/pixel.c:59:1: note: init: phi relevant? ivtmp_202 = PHI <ivtmp_201(3), 16(7)>
common/pixel.c:59:1: note: init: stmt relevant? # DEBUG x => x_147
common/pixel.c:59:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_150
common/pixel.c:59:1: note: init: stmt relevant? _83 = (sizetype) x_147;
common/pixel.c:59:1: note: init: stmt relevant? _85 = fenc_148 + _83;
common/pixel.c:59:1: note: init: stmt relevant? _86 = *_85;
common/pixel.c:59:1: note: init: stmt relevant? _87 = (int) _86;
common/pixel.c:59:1: note: init: stmt relevant? _89 = pix0_149 + _83;
common/pixel.c:59:1: note: init: stmt relevant? _90 = *_89;
common/pixel.c:59:1: note: init: stmt relevant? _91 = (int) _90;
common/pixel.c:59:1: note: init: stmt relevant? _92 = _87 - _91;
common/pixel.c:59:1: note: init: stmt relevant? _93 = ABS_EXPR <_92>;
common/pixel.c:59:1: note: init: stmt relevant? i_sum_95 = _93 + i_sum_150;
common/pixel.c:59:1: note: vec_stmt_relevant_p: used out of loop.
common/pixel.c:59:1: note: mark relevant 0, live 1.
common/pixel.c:59:1: note: last stmt in pattern. don't mark relevant/live.
common/pixel.c:59:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_95
common/pixel.c:59:1: note: init: stmt relevant? x_96 = x_147 + 1;
common/pixel.c:59:1: note: init: stmt relevant? # DEBUG x => x_96
common/pixel.c:59:1: note: init: stmt relevant? # DEBUG x => x_96
common/pixel.c:59:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_95
common/pixel.c:59:1: note: init: stmt relevant? ivtmp_201 = ivtmp_202 - 1;
common/pixel.c:59:1: note: init: stmt relevant? if (ivtmp_201 != 0)
common/pixel.c:59:1: note: worklist: examine stmt: patt_122 = SAD_EXPR <_86, _90, i_sum_150>;
common/pixel.c:59:1: note: vect_is_simple_use: operand _86
common/pixel.c:59:1: note: def_stmt: _86 = *_85;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: mark relevant 3, live 0.
common/pixel.c:59:1: note: vect_is_simple_use: operand _90
common/pixel.c:59:1: note: def_stmt: _90 = *_89;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: mark relevant 3, live 0.
common/pixel.c:59:1: note: vect_is_simple_use: operand i_sum_150
common/pixel.c:59:1: note: def_stmt: i_sum_150 = PHI <i_sum_95(3), i_sum_152(7)>
common/pixel.c:59:1: note: type of def: 5.
common/pixel.c:59:1: note: mark relevant 3, live 0.
common/pixel.c:59:1: note: worklist: examine stmt: i_sum_150 = PHI <i_sum_95(3), i_sum_152(7)>
common/pixel.c:59:1: note: vect_is_simple_use: operand i_sum_95
common/pixel.c:59:1: note: def_stmt: i_sum_95 = _93 + i_sum_150;
common/pixel.c:59:1: note: type of def: 5.
common/pixel.c:59:1: note: reduc-stmt defining reduc-phi in the same nest.
common/pixel.c:59:1: note: vect_is_simple_use: operand i_sum_152
common/pixel.c:59:1: note: def_stmt: i_sum_152 = PHI <i_sum_216(6), 0(2)>
common/pixel.c:59:1: note: type of def: 2.
common/pixel.c:59:1: note: def_stmt is out of loop.
common/pixel.c:59:1: note: worklist: examine stmt: _90 = *_89;
common/pixel.c:59:1: note: worklist: examine stmt: _86 = *_85;
common/pixel.c:59:1: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _86 = *_85;
  stmt_b: _90 = *_89;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _86 = *_85;
  stmt_b: _86 = *_85;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_8)
  (chrec_b = {0B, +, 1}_8)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _90 = *_89;
  stmt_b: _90 = *_89;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_8)
  (chrec_b = {0B, +, 1}_8)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/pixel.c:59:1: note: === vect_determine_vectorization_factor ===
common/pixel.c:59:1: note: ==> examining phi: x_147 = PHI <x_96(3), 0(7)>

common/pixel.c:59:1: note: ==> examining phi: i_sum_150 = PHI <i_sum_95(3), i_sum_152(7)>

common/pixel.c:59:1: note: get vectype for scalar type:  int
common/pixel.c:59:1: note: vectype: vector(4) int
common/pixel.c:59:1: note: nunits = 4
common/pixel.c:59:1: note: ==> examining phi: ivtmp_202 = PHI <ivtmp_201(3), 16(7)>

common/pixel.c:59:1: note: ==> examining statement: # DEBUG x => x_147

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: # DEBUG i_sum => i_sum_150

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: _83 = (sizetype) x_147;

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: _85 = fenc_148 + _83;

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: _86 = *_85;

common/pixel.c:59:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:59:1: note: vectype: vector(16) unsigned char
common/pixel.c:59:1: note: nunits = 16
common/pixel.c:59:1: note: ==> examining statement: _87 = (int) _86;

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: _89 = pix0_149 + _83;

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: _90 = *_89;

common/pixel.c:59:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:59:1: note: vectype: vector(16) unsigned char
common/pixel.c:59:1: note: nunits = 16
common/pixel.c:59:1: note: ==> examining statement: _91 = (int) _90;

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: _92 = _87 - _91;

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: _93 = ABS_EXPR <_92>;

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: i_sum_95 = _93 + i_sum_150;

common/pixel.c:59:1: note: ==> examining pattern statement: patt_122 = SAD_EXPR <_86, _90, i_sum_150>;

common/pixel.c:59:1: note: get vectype for scalar type:  int
common/pixel.c:59:1: note: vectype: vector(4) int
common/pixel.c:59:1: note: nunits = 4
common/pixel.c:59:1: note: ==> examining statement: # DEBUG i_sum => i_sum_95

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: x_96 = x_147 + 1;

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: # DEBUG x => x_96

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: # DEBUG x => x_96

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: # DEBUG i_sum => i_sum_95

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: ivtmp_201 = ivtmp_202 - 1;

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: ==> examining statement: if (ivtmp_201 != 0)

common/pixel.c:59:1: note: skip.
common/pixel.c:59:1: note: vectorization factor = 16
common/pixel.c:59:1: note: === vect_analyze_data_refs_alignment ===
common/pixel.c:59:1: note: vect_compute_data_ref_alignment:
common/pixel.c:59:1: note: can't force alignment of ref: *_85
common/pixel.c:59:1: note: vect_compute_data_ref_alignment:
common/pixel.c:59:1: note: can't force alignment of ref: *_89
common/pixel.c:59:1: note: === vect_prune_runtime_alias_test_list ===
common/pixel.c:59:1: note: === vect_enhance_data_refs_alignment ===
common/pixel.c:59:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:59:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:59:1: note: vect_can_advance_ivs_p:
common/pixel.c:59:1: note: Analyze phi: x_147 = PHI <x_96(3), 0(7)>

common/pixel.c:59:1: note: Analyze phi: i_sum_150 = PHI <i_sum_95(3), i_sum_152(7)>

common/pixel.c:59:1: note: reduc phi. skip.
common/pixel.c:59:1: note: Analyze phi: ivtmp_202 = PHI <ivtmp_201(3), 16(7)>

common/pixel.c:59:1: note: Vectorizing an unaligned access.
common/pixel.c:59:1: note: Vectorizing an unaligned access.
common/pixel.c:59:1: note: === vect_analyze_slp ===
common/pixel.c:59:1: note: === vect_make_slp_decision ===
common/pixel.c:59:1: note: === vect_detect_hybrid_slp ===
common/pixel.c:59:1: note: === vect_analyze_loop_operations ===
common/pixel.c:59:1: note: examining phi: x_147 = PHI <x_96(3), 0(7)>

common/pixel.c:59:1: note: examining phi: i_sum_150 = PHI <i_sum_95(3), i_sum_152(7)>

common/pixel.c:59:1: note: examining phi: ivtmp_202 = PHI <ivtmp_201(3), 16(7)>

common/pixel.c:59:1: note: ==> examining statement: # DEBUG x => x_147
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: # DEBUG i_sum => i_sum_150
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: _83 = (sizetype) x_147;
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: _85 = fenc_148 + _83;
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: _86 = *_85;
common/pixel.c:59:1: note: vect_is_simple_use: operand *_85
common/pixel.c:59:1: note: not ssa-name.
common/pixel.c:59:1: note: use not simple.
common/pixel.c:59:1: note: vect_is_simple_use: operand *_85
common/pixel.c:59:1: note: not ssa-name.
common/pixel.c:59:1: note: use not simple.
common/pixel.c:59:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:59:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:59:1: note: ==> examining statement: _87 = (int) _86;
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: _89 = pix0_149 + _83;
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: _90 = *_89;
common/pixel.c:59:1: note: vect_is_simple_use: operand *_89
common/pixel.c:59:1: note: not ssa-name.
common/pixel.c:59:1: note: use not simple.
common/pixel.c:59:1: note: vect_is_simple_use: operand *_89
common/pixel.c:59:1: note: not ssa-name.
common/pixel.c:59:1: note: use not simple.
common/pixel.c:59:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:59:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:59:1: note: ==> examining statement: _91 = (int) _90;
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: _92 = _87 - _91;
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: _93 = ABS_EXPR <_92>;
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: i_sum_95 = _93 + i_sum_150;
common/pixel.c:59:1: note: ==> examining pattern statement: patt_122 = SAD_EXPR <_86, _90, i_sum_150>;
common/pixel.c:59:1: note: vect_is_simple_use: operand _86
common/pixel.c:59:1: note: def_stmt: _86 = *_85;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: vect_is_simple_use: operand _90
common/pixel.c:59:1: note: def_stmt: _90 = *_89;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: vect_is_simple_use: operand i_sum_150
common/pixel.c:59:1: note: def_stmt: i_sum_150 = PHI <i_sum_95(3), i_sum_152(7)>
common/pixel.c:59:1: note: type of def: 5.
common/pixel.c:59:1: note: detected reduction: i_sum_95 = _93 + i_sum_150;

common/pixel.c:59:1: note: reduc op not supported by target.
vect_model_reduction_cost: inside_cost = 1, prologue_cost = 1, epilogue_cost = 5 .
common/pixel.c:59:1: note: ==> examining statement: # DEBUG i_sum => i_sum_95
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: x_96 = x_147 + 1;
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: # DEBUG x => x_96
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: # DEBUG x => x_96
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: # DEBUG i_sum => i_sum_95
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: ivtmp_201 = ivtmp_202 - 1;
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: ==> examining statement: if (ivtmp_201 != 0)
common/pixel.c:59:1: note: irrelevant.
common/pixel.c:59:1: note: vectorization_factor = 16, niters = 16
common/pixel.c:59:1: note: === vect_update_slp_costs_according_to_vf ===
common/pixel.c:59:1: note: Cost model analysis: 
  Vector inside of loop cost: 5
  Vector prologue cost: 1
  Vector epilogue cost: 5
  Scalar iteration cost: 3
  Scalar outside cost: 0
  Vector outside cost: 6
  prologue iterations: 0
  epilogue iterations: 0
  Calculated minimum iters for profitability: 3
common/pixel.c:59:1: note:   Runtime profitability threshold = 15
common/pixel.c:59:1: note:   Static estimate profitability threshold = 15
common/pixel.c:59:1: note: loop vectorized
common/pixel.c:59:1: note: === vec_transform_loop ===
common/pixel.c:59:1: note: ------>vectorizing phi: x_147 = PHI <x_96(3), 0(30)>

common/pixel.c:59:1: note: ------>vectorizing phi: i_sum_150 = PHI <i_sum_95(3), i_sum_152(30)>

common/pixel.c:59:1: note: multiple-types.
common/pixel.c:59:1: note: ------>vectorizing phi: ivtmp_202 = PHI <ivtmp_201(3), 16(30)>

common/pixel.c:59:1: note: ------>vectorizing statement: # DEBUG x => x_147

common/pixel.c:59:1: note: ------>vectorizing statement: # DEBUG i_sum => i_sum_150

common/pixel.c:59:1: note: ------>vectorizing statement: _83 = (sizetype) x_147;

common/pixel.c:59:1: note: ------>vectorizing statement: _85 = fenc_148 + _83;

common/pixel.c:59:1: note: ------>vectorizing statement: _86 = *_85;

common/pixel.c:59:1: note: transform statement.
common/pixel.c:59:1: note: transform load. ncopies = 1
common/pixel.c:59:1: note: create vector_type-pointer variable to type: vector(16) unsigned char  vectorizing a pointer ref: *fenc_148
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:59:1: note: created vectp_fenc.679_121
common/pixel.c:59:1: note: add new stmt: vect__86.680_118 = MEM[(uint8_t *)vectp_fenc.678_120];
common/pixel.c:59:1: note: ------>vectorizing statement: _87 = (int) _86;

common/pixel.c:59:1: note: ------>vectorizing statement: _89 = pix0_149 + _83;

common/pixel.c:59:1: note: ------>vectorizing statement: _90 = *_89;

common/pixel.c:59:1: note: transform statement.
common/pixel.c:59:1: note: transform load. ncopies = 1
common/pixel.c:59:1: note: create vector_type-pointer variable to type: vector(16) unsigned char  vectorizing a pointer ref: *pix0_149
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:59:1: note: created vectp_pix0.682_117
common/pixel.c:59:1: note: add new stmt: vect__90.683_114 = MEM[(uint8_t *)vectp_pix0.681_116];
common/pixel.c:59:1: note: ------>vectorizing statement: _91 = (int) _90;

common/pixel.c:59:1: note: ------>vectorizing statement: _92 = _87 - _91;

common/pixel.c:59:1: note: ------>vectorizing statement: _93 = ABS_EXPR <_92>;

common/pixel.c:59:1: note: ------>vectorizing statement: i_sum_95 = _93 + i_sum_150;

common/pixel.c:59:1: note: multiple-types.
common/pixel.c:59:1: note: transform statement.
common/pixel.c:59:1: note: vect_is_simple_use: operand _86
common/pixel.c:59:1: note: def_stmt: _86 = *_85;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: vect_is_simple_use: operand _90
common/pixel.c:59:1: note: def_stmt: _90 = *_89;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: vect_is_simple_use: operand i_sum_150
common/pixel.c:59:1: note: def_stmt: i_sum_150 = PHI <i_sum_95(3), i_sum_152(30)>
common/pixel.c:59:1: note: type of def: 5.
common/pixel.c:59:1: note: detected reduction: i_sum_95 = _93 + i_sum_150;

common/pixel.c:59:1: note: reduc op not supported by target.
common/pixel.c:59:1: note: transform reduction.
common/pixel.c:59:1: note: vect_get_vec_def_for_operand: _86
common/pixel.c:59:1: note: vect_is_simple_use: operand _86
common/pixel.c:59:1: note: def_stmt: _86 = *_85;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: def =  _86
  def_stmt =  _86 = *_85;
common/pixel.c:59:1: note: vect_get_vec_def_for_operand: _90
common/pixel.c:59:1: note: vect_is_simple_use: operand _90
common/pixel.c:59:1: note: def_stmt: _90 = *_89;
common/pixel.c:59:1: note: type of def: 3.
common/pixel.c:59:1: note: def =  _90
  def_stmt =  _90 = *_89;
common/pixel.c:59:1: note: add new stmt: vect_patt_122.684_112 = SAD_EXPR <vect__86.680_118, vect__90.683_114, vect_patt_122.684_113>;
common/pixel.c:59:1: note: vect_is_simple_use: operand i_sum_152
common/pixel.c:59:1: note: def_stmt: i_sum_152 = PHI <i_sum_216(6), 0(2)>
common/pixel.c:59:1: note: type of def: 2.
common/pixel.c:59:1: note: vect_get_vec_def_for_operand: i_sum_150
common/pixel.c:59:1: note: vect_is_simple_use: operand i_sum_150
common/pixel.c:59:1: note: def_stmt: i_sum_150 = PHI <i_sum_95(3), i_sum_152(30)>
common/pixel.c:59:1: note: type of def: 5.
common/pixel.c:59:1: note: def =  i_sum_150
  def_stmt =  i_sum_150 = PHI <i_sum_95(3), i_sum_152(30)>
common/pixel.c:59:1: note: transform reduction: created def-use cycle: vect_patt_122.684_113 = PHI <vect_patt_122.684_112(3), { 0, 0, 0, 0 }(30)>

vect_patt_122.684_112 = SAD_EXPR <vect__86.680_118, vect__90.683_114, vect_patt_122.684_113>;

common/pixel.c:59:1: note: Reduce using vector shifts
common/pixel.c:59:1: note: extract scalar result
common/pixel.c:59:1: note: ------>vectorizing statement: # DEBUG i_sum => i_sum_95

common/pixel.c:59:1: note: ------>vectorizing statement: x_96 = x_147 + 1;

common/pixel.c:59:1: note: ------>vectorizing statement: # DEBUG x => x_96

common/pixel.c:59:1: note: ------>vectorizing statement: # DEBUG x => x_96

common/pixel.c:59:1: note: ------>vectorizing statement: # DEBUG i_sum => i_sum_95

common/pixel.c:59:1: note: ------>vectorizing statement: ivtmp_201 = ivtmp_202 - 1;

common/pixel.c:59:1: note: ------>vectorizing statement: vectp_fenc.678_119 = vectp_fenc.678_120 + 16;

common/pixel.c:59:1: note: ------>vectorizing statement: vectp_pix0.681_115 = vectp_pix0.681_116 + 16;

common/pixel.c:59:1: note: ------>vectorizing statement: if (ivtmp_201 != 0)


loop at common/pixel.c:59: if (ivtmp_100 < 1)

;; Scaling loop 8 with scale 0.062500, bounding iterations to 1 from guessed 16
;; guessed iterations are now 1
common/pixel.c:59:1: note: LOOP VECTORIZED

common/pixel.c:383:1: note: vectorized 4 loops in function.
Merging blocks 7 and 30
Merging blocks 13 and 29
Merging blocks 19 and 28
Merging blocks 25 and 27
x264_pixel_sad_x4_16x16 (uint8_t * fenc, uint8_t * pix0, uint8_t * pix1, uint8_t * pix2, uint8_t * pix3, int i_stride, int * scores)
{
  int vect_i_sum_95.687;
  vector(4) int vect_i_sum_95.686;
  int stmp_i_sum_95.685;
  vector(4) int vect_patt_122.684;
  vector(16) unsigned char vect__90.683;
  vector(16) unsigned char * vectp_pix0.682;
  vector(16) unsigned char * vectp_pix0.681;
  vector(16) unsigned char vect__86.680;
  vector(16) unsigned char * vectp_fenc.679;
  vector(16) unsigned char * vectp_fenc.678;
  int vect_i_sum_73.677;
  vector(4) int vect_i_sum_73.676;
  int stmp_i_sum_73.675;
  vector(4) int vect_patt_158.674;
  vector(16) unsigned char vect__68.673;
  vector(16) unsigned char * vectp_pix1.672;
  vector(16) unsigned char * vectp_pix1.671;
  vector(16) unsigned char vect__64.670;
  vector(16) unsigned char * vectp_fenc.669;
  vector(16) unsigned char * vectp_fenc.668;
  int vect_i_sum_51.667;
  vector(4) int vect_i_sum_51.666;
  int stmp_i_sum_51.665;
  vector(4) int vect_patt_178.664;
  vector(16) unsigned char vect__46.663;
  vector(16) unsigned char * vectp_pix2.662;
  vector(16) unsigned char * vectp_pix2.661;
  vector(16) unsigned char vect__42.660;
  vector(16) unsigned char * vectp_fenc.659;
  vector(16) unsigned char * vectp_fenc.658;
  int vect_i_sum_29.657;
  vector(4) int vect_i_sum_29.656;
  int stmp_i_sum_29.655;
  vector(4) int vect_patt_198.654;
  vector(16) unsigned char vect__24.653;
  vector(16) unsigned char * vectp_pix3.652;
  vector(16) unsigned char * vectp_pix3.651;
  vector(16) unsigned char vect__20.650;
  vector(16) unsigned char * vectp_fenc.649;
  vector(16) unsigned char * vectp_fenc.648;
  int i_sum;
  int x;
  int y;
  int i_sum;
  int x;
  int y;
  int i_sum;
  int x;
  int y;
  int i_sum;
  int x;
  int y;
  uint8_t * _5;
  sizetype _14;
  unsigned char _20;
  int _21;
  uint8_t * _23;
  unsigned char _24;
  int _25;
  int _26;
  int _27;
  sizetype _39;
  uint8_t * _41;
  unsigned char _42;
  int _43;
  uint8_t * _45;
  unsigned char _46;
  int _47;
  int _48;
  int _49;
  sizetype _61;
  uint8_t * _63;
  unsigned char _64;
  int _65;
  uint8_t * _67;
  unsigned char _68;
  int _69;
  int _70;
  int _71;
  sizetype _83;
  uint8_t * _85;
  unsigned char _86;
  int _87;
  uint8_t * _89;
  unsigned char _90;
  int _91;
  int _92;
  int _93;
  unsigned int ivtmp_100;
  unsigned int ivtmp_102;
  unsigned int ivtmp_123;
  unsigned int ivtmp_124;
  unsigned int ivtmp_159;
  unsigned int ivtmp_160;
  unsigned int ivtmp_179;
  unsigned int ivtmp_180;
  unsigned int ivtmp_199;
  unsigned int ivtmp_200;
  unsigned int ivtmp_201;
  unsigned int ivtmp_202;
  unsigned int ivtmp_203;
  unsigned int ivtmp_204;
  unsigned int ivtmp_205;
  unsigned int ivtmp_206;
  unsigned int ivtmp_207;
  unsigned int ivtmp_208;
  unsigned int ivtmp_209;
  unsigned int ivtmp_210;
  unsigned int ivtmp_211;
  unsigned int ivtmp_212;
  unsigned int ivtmp_213;
  unsigned int ivtmp_214;
  sizetype pretmp_223;

  <bb 2>:
  # DEBUG pix1 => fenc_2(D)
  # DEBUG i_stride_pix1 => 16
  # DEBUG pix2 => pix0_3(D)
  # DEBUG i_stride_pix2 => i_stride_4(D)
  # DEBUG i_sum => 0
  # DEBUG y => 0
  # DEBUG y => 0
  # DEBUG i_sum => 0
  # DEBUG pix2 => pix0_3(D)
  # DEBUG pix1 => fenc_2(D)
  pretmp_223 = (sizetype) i_stride_4(D);
  goto <bb 7>;

  <bb 3>:

  <bb 4>:
  # x_147 = PHI <x_96(3), 0(7)>
  # i_sum_150 = PHI <i_sum_95(3), i_sum_152(7)>
  # ivtmp_202 = PHI <ivtmp_201(3), 16(7)>
  # vectp_fenc.678_120 = PHI <vectp_fenc.678_119(3), vectp_fenc.679_121(7)>
  # vectp_pix0.681_116 = PHI <vectp_pix0.681_115(3), vectp_pix0.682_117(7)>
  # vect_patt_122.684_113 = PHI <vect_patt_122.684_112(3), { 0, 0, 0, 0 }(7)>
  # ivtmp_102 = PHI <ivtmp_100(3), 0(7)>
  # DEBUG x => x_147
  # DEBUG i_sum => i_sum_150
  _83 = (sizetype) x_147;
  _85 = fenc_148 + _83;
  vect__86.680_118 = MEM[(uint8_t *)vectp_fenc.678_120];
  _86 = *_85;
  _87 = (int) _86;
  _89 = pix0_149 + _83;
  vect__90.683_114 = MEM[(uint8_t *)vectp_pix0.681_116];
  _90 = *_89;
  _91 = (int) _90;
  _92 = _87 - _91;
  _93 = ABS_EXPR <_92>;
  vect_patt_122.684_112 = SAD_EXPR <vect__86.680_118, vect__90.683_114, vect_patt_122.684_113>;
  i_sum_95 = _93 + i_sum_150;
  # DEBUG i_sum => i_sum_95
  x_96 = x_147 + 1;
  # DEBUG x => x_96
  # DEBUG x => x_96
  # DEBUG i_sum => i_sum_95
  ivtmp_201 = ivtmp_202 - 1;
  vectp_fenc.678_119 = vectp_fenc.678_120 + 16;
  vectp_pix0.681_115 = vectp_pix0.681_116 + 16;
  ivtmp_100 = ivtmp_102 + 1;
  if (ivtmp_100 < 1)
    goto <bb 3>;
  else
    goto <bb 5>;

  <bb 5>:
  # i_sum_216 = PHI <i_sum_95(4)>
  # vect_patt_122.684_111 = PHI <vect_patt_122.684_112(4)>
  vect_i_sum_95.686_110 = VEC_PERM_EXPR <vect_patt_122.684_111, { 0, 0, 0, 0 }, { 2, 3, 4, 5 }>;
  vect_i_sum_95.686_109 = vect_i_sum_95.686_110 + vect_patt_122.684_111;
  vect_i_sum_95.686_108 = VEC_PERM_EXPR <vect_i_sum_95.686_109, { 0, 0, 0, 0 }, { 1, 2, 3, 4 }>;
  vect_i_sum_95.686_107 = vect_i_sum_95.686_108 + vect_i_sum_95.686_109;
  stmp_i_sum_95.685_106 = BIT_FIELD_REF <vect_i_sum_95.686_107, 32, 0>;
  vect_i_sum_95.687_105 = stmp_i_sum_95.685_106 + i_sum_152;
  fenc_97 = fenc_148 + 16;
  # DEBUG pix1 => fenc_97
  pix0_99 = pix0_149 + pretmp_223;
  # DEBUG pix2 => pix0_99
  y_101 = y_151 + 1;
  # DEBUG y => y_101
  # DEBUG y => y_101
  # DEBUG i_sum => vect_i_sum_95.687_105
  # DEBUG pix2 => pix0_99
  # DEBUG pix1 => fenc_97
  ivtmp_199 = ivtmp_200 - 1;
  if (ivtmp_199 != 0)
    goto <bb 6>;
  else
    goto <bb 8>;

  <bb 6>:

  <bb 7>:
  # fenc_148 = PHI <fenc_97(6), fenc_2(D)(2)>
  # pix0_149 = PHI <pix0_99(6), pix0_3(D)(2)>
  # y_151 = PHI <y_101(6), 0(2)>
  # i_sum_152 = PHI <vect_i_sum_95.687_105(6), 0(2)>
  # ivtmp_200 = PHI <ivtmp_199(6), 16(2)>
  # DEBUG y => y_151
  # DEBUG i_sum => i_sum_152
  # DEBUG pix2 => pix0_149
  # DEBUG pix1 => fenc_148
  # DEBUG x => 0
  # DEBUG i_sum => i_sum_152
  vectp_fenc.679_121 = fenc_148;
  vectp_pix0.682_117 = pix0_149;
  goto <bb 4>;

  <bb 8>:
  # i_sum_215 = PHI <vect_i_sum_95.687_105(5)>
  # DEBUG pix1 => NULL
  # DEBUG i_stride_pix1 => NULL
  # DEBUG pix2 => NULL
  # DEBUG i_stride_pix2 => NULL
  # DEBUG y => NULL
  # DEBUG x => NULL
  # DEBUG i_sum => NULL
  *scores_6(D) = i_sum_215;
  # DEBUG pix1 => fenc_2(D)
  # DEBUG i_stride_pix1 => 16
  # DEBUG pix2 => pix1_9(D)
  # DEBUG i_stride_pix2 => i_stride_4(D)
  # DEBUG y => 0
  # DEBUG i_sum => 0
  # DEBUG pix2 => pix1_9(D)
  # DEBUG pix1 => fenc_2(D)
  goto <bb 13>;

  <bb 9>:

  <bb 10>:
  # x_141 = PHI <x_74(9), 0(13)>
  # i_sum_144 = PHI <i_sum_73(9), i_sum_146(13)>
  # ivtmp_206 = PHI <ivtmp_205(9), 16(13)>
  # vectp_fenc.668_156 = PHI <vectp_fenc.668_155(9), vectp_fenc.669_157(13)>
  # vectp_pix1.671_136 = PHI <vectp_pix1.671_135(9), vectp_pix1.672_153(13)>
  # vect_patt_158.674_133 = PHI <vect_patt_158.674_132(9), { 0, 0, 0, 0 }(13)>
  # ivtmp_124 = PHI <ivtmp_123(9), 0(13)>
  # DEBUG x => x_141
  # DEBUG i_sum => i_sum_144
  _61 = (sizetype) x_141;
  _63 = fenc_142 + _61;
  vect__64.670_154 = MEM[(uint8_t *)vectp_fenc.668_156];
  _64 = *_63;
  _65 = (int) _64;
  _67 = pix1_143 + _61;
  vect__68.673_134 = MEM[(uint8_t *)vectp_pix1.671_136];
  _68 = *_67;
  _69 = (int) _68;
  _70 = _65 - _69;
  _71 = ABS_EXPR <_70>;
  vect_patt_158.674_132 = SAD_EXPR <vect__64.670_154, vect__68.673_134, vect_patt_158.674_133>;
  i_sum_73 = _71 + i_sum_144;
  # DEBUG i_sum => i_sum_73
  x_74 = x_141 + 1;
  # DEBUG x => x_74
  # DEBUG x => x_74
  # DEBUG i_sum => i_sum_73
  ivtmp_205 = ivtmp_206 - 1;
  vectp_fenc.668_155 = vectp_fenc.668_156 + 16;
  vectp_pix1.671_135 = vectp_pix1.671_136 + 16;
  ivtmp_123 = ivtmp_124 + 1;
  if (ivtmp_123 < 1)
    goto <bb 9>;
  else
    goto <bb 11>;

  <bb 11>:
  # i_sum_218 = PHI <i_sum_73(10)>
  # vect_patt_158.674_131 = PHI <vect_patt_158.674_132(10)>
  vect_i_sum_73.676_130 = VEC_PERM_EXPR <vect_patt_158.674_131, { 0, 0, 0, 0 }, { 2, 3, 4, 5 }>;
  vect_i_sum_73.676_129 = vect_i_sum_73.676_130 + vect_patt_158.674_131;
  vect_i_sum_73.676_128 = VEC_PERM_EXPR <vect_i_sum_73.676_129, { 0, 0, 0, 0 }, { 1, 2, 3, 4 }>;
  vect_i_sum_73.676_127 = vect_i_sum_73.676_128 + vect_i_sum_73.676_129;
  stmp_i_sum_73.675_126 = BIT_FIELD_REF <vect_i_sum_73.676_127, 32, 0>;
  vect_i_sum_73.677_125 = stmp_i_sum_73.675_126 + i_sum_146;
  fenc_75 = fenc_142 + 16;
  # DEBUG pix1 => fenc_75
  pix1_77 = pix1_143 + pretmp_223;
  # DEBUG pix2 => pix1_77
  y_79 = y_145 + 1;
  # DEBUG y => y_79
  # DEBUG y => y_79
  # DEBUG i_sum => vect_i_sum_73.677_125
  # DEBUG pix2 => pix1_77
  # DEBUG pix1 => fenc_75
  ivtmp_203 = ivtmp_204 - 1;
  if (ivtmp_203 != 0)
    goto <bb 12>;
  else
    goto <bb 14>;

  <bb 12>:

  <bb 13>:
  # fenc_142 = PHI <fenc_75(12), fenc_2(D)(8)>
  # pix1_143 = PHI <pix1_77(12), pix1_9(D)(8)>
  # y_145 = PHI <y_79(12), 0(8)>
  # i_sum_146 = PHI <vect_i_sum_73.677_125(12), 0(8)>
  # ivtmp_204 = PHI <ivtmp_203(12), 16(8)>
  # DEBUG y => y_145
  # DEBUG i_sum => i_sum_146
  # DEBUG pix2 => pix1_143
  # DEBUG pix1 => fenc_142
  # DEBUG x => 0
  # DEBUG i_sum => i_sum_146
  vectp_fenc.669_157 = fenc_142;
  vectp_pix1.672_153 = pix1_143;
  goto <bb 10>;

  <bb 14>:
  # i_sum_217 = PHI <vect_i_sum_73.677_125(11)>
  # DEBUG pix1 => NULL
  # DEBUG i_stride_pix1 => NULL
  # DEBUG pix2 => NULL
  # DEBUG i_stride_pix2 => NULL
  # DEBUG y => NULL
  # DEBUG x => NULL
  # DEBUG i_sum => NULL
  MEM[(int *)scores_6(D) + 4B] = i_sum_217;
  # DEBUG pix1 => fenc_2(D)
  # DEBUG i_stride_pix1 => 16
  # DEBUG pix2 => pix2_13(D)
  # DEBUG i_stride_pix2 => i_stride_4(D)
  # DEBUG y => 0
  # DEBUG i_sum => 0
  # DEBUG pix2 => pix2_13(D)
  # DEBUG pix1 => fenc_2(D)
  goto <bb 19>;

  <bb 15>:

  <bb 16>:
  # x_81 = PHI <x_52(15), 0(19)>
  # i_sum_138 = PHI <i_sum_51(15), i_sum_140(19)>
  # ivtmp_210 = PHI <ivtmp_209(15), 16(19)>
  # vectp_fenc.658_176 = PHI <vectp_fenc.658_175(15), vectp_fenc.659_177(19)>
  # vectp_pix2.661_172 = PHI <vectp_pix2.661_171(15), vectp_pix2.662_173(19)>
  # vect_patt_178.664_169 = PHI <vect_patt_178.664_168(15), { 0, 0, 0, 0 }(19)>
  # ivtmp_160 = PHI <ivtmp_159(15), 0(19)>
  # DEBUG x => x_81
  # DEBUG i_sum => i_sum_138
  _39 = (sizetype) x_81;
  _41 = fenc_37 + _39;
  vect__42.660_174 = MEM[(uint8_t *)vectp_fenc.658_176];
  _42 = *_41;
  _43 = (int) _42;
  _45 = pix2_137 + _39;
  vect__46.663_170 = MEM[(uint8_t *)vectp_pix2.661_172];
  _46 = *_45;
  _47 = (int) _46;
  _48 = _43 - _47;
  _49 = ABS_EXPR <_48>;
  vect_patt_178.664_168 = SAD_EXPR <vect__42.660_174, vect__46.663_170, vect_patt_178.664_169>;
  i_sum_51 = _49 + i_sum_138;
  # DEBUG i_sum => i_sum_51
  x_52 = x_81 + 1;
  # DEBUG x => x_52
  # DEBUG x => x_52
  # DEBUG i_sum => i_sum_51
  ivtmp_209 = ivtmp_210 - 1;
  vectp_fenc.658_175 = vectp_fenc.658_176 + 16;
  vectp_pix2.661_171 = vectp_pix2.661_172 + 16;
  ivtmp_159 = ivtmp_160 + 1;
  if (ivtmp_159 < 1)
    goto <bb 15>;
  else
    goto <bb 17>;

  <bb 17>:
  # i_sum_220 = PHI <i_sum_51(16)>
  # vect_patt_178.664_167 = PHI <vect_patt_178.664_168(16)>
  vect_i_sum_51.666_166 = VEC_PERM_EXPR <vect_patt_178.664_167, { 0, 0, 0, 0 }, { 2, 3, 4, 5 }>;
  vect_i_sum_51.666_165 = vect_i_sum_51.666_166 + vect_patt_178.664_167;
  vect_i_sum_51.666_164 = VEC_PERM_EXPR <vect_i_sum_51.666_165, { 0, 0, 0, 0 }, { 1, 2, 3, 4 }>;
  vect_i_sum_51.666_163 = vect_i_sum_51.666_164 + vect_i_sum_51.666_165;
  stmp_i_sum_51.665_162 = BIT_FIELD_REF <vect_i_sum_51.666_163, 32, 0>;
  vect_i_sum_51.667_161 = stmp_i_sum_51.665_162 + i_sum_140;
  fenc_53 = fenc_37 + 16;
  # DEBUG pix1 => fenc_53
  pix2_55 = pix2_137 + pretmp_223;
  # DEBUG pix2 => pix2_55
  y_57 = y_139 + 1;
  # DEBUG y => y_57
  # DEBUG y => y_57
  # DEBUG i_sum => vect_i_sum_51.667_161
  # DEBUG pix2 => pix2_55
  # DEBUG pix1 => fenc_53
  ivtmp_207 = ivtmp_208 - 1;
  if (ivtmp_207 != 0)
    goto <bb 18>;
  else
    goto <bb 20>;

  <bb 18>:

  <bb 19>:
  # fenc_37 = PHI <fenc_53(18), fenc_2(D)(14)>
  # pix2_137 = PHI <pix2_55(18), pix2_13(D)(14)>
  # y_139 = PHI <y_57(18), 0(14)>
  # i_sum_140 = PHI <vect_i_sum_51.667_161(18), 0(14)>
  # ivtmp_208 = PHI <ivtmp_207(18), 16(14)>
  # DEBUG y => y_139
  # DEBUG i_sum => i_sum_140
  # DEBUG pix2 => pix2_137
  # DEBUG pix1 => fenc_37
  # DEBUG x => 0
  # DEBUG i_sum => i_sum_140
  vectp_fenc.659_177 = fenc_37;
  vectp_pix2.662_173 = pix2_137;
  goto <bb 16>;

  <bb 20>:
  # i_sum_219 = PHI <vect_i_sum_51.667_161(17)>
  # DEBUG pix1 => NULL
  # DEBUG i_stride_pix1 => NULL
  # DEBUG pix2 => NULL
  # DEBUG i_stride_pix2 => NULL
  # DEBUG y => NULL
  # DEBUG x => NULL
  # DEBUG i_sum => NULL
  MEM[(int *)scores_6(D) + 8B] = i_sum_219;
  # DEBUG pix1 => fenc_2(D)
  # DEBUG i_stride_pix1 => 16
  # DEBUG pix2 => pix3_17(D)
  # DEBUG i_stride_pix2 => i_stride_4(D)
  # DEBUG y => 0
  # DEBUG i_sum => 0
  # DEBUG pix2 => pix3_17(D)
  # DEBUG pix1 => fenc_2(D)
  goto <bb 25>;

  <bb 21>:

  <bb 22>:
  # x_8 = PHI <x_30(21), 0(25)>
  # i_sum_59 = PHI <i_sum_29(21), i_sum_104(25)>
  # ivtmp_214 = PHI <ivtmp_213(21), 16(25)>
  # vectp_fenc.648_196 = PHI <vectp_fenc.648_195(21), vectp_fenc.649_197(25)>
  # vectp_pix3.651_192 = PHI <vectp_pix3.651_191(21), vectp_pix3.652_193(25)>
  # vect_patt_198.654_189 = PHI <vect_patt_198.654_188(21), { 0, 0, 0, 0 }(25)>
  # ivtmp_180 = PHI <ivtmp_179(21), 0(25)>
  # DEBUG x => x_8
  # DEBUG i_sum => i_sum_59
  _14 = (sizetype) x_8;
  _5 = fenc_16 + _14;
  vect__20.650_194 = MEM[(uint8_t *)vectp_fenc.648_196];
  _20 = *_5;
  _21 = (int) _20;
  _23 = pix3_103 + _14;
  vect__24.653_190 = MEM[(uint8_t *)vectp_pix3.651_192];
  _24 = *_23;
  _25 = (int) _24;
  _26 = _21 - _25;
  _27 = ABS_EXPR <_26>;
  vect_patt_198.654_188 = SAD_EXPR <vect__20.650_194, vect__24.653_190, vect_patt_198.654_189>;
  i_sum_29 = _27 + i_sum_59;
  # DEBUG i_sum => i_sum_29
  x_30 = x_8 + 1;
  # DEBUG x => x_30
  # DEBUG x => x_30
  # DEBUG i_sum => i_sum_29
  ivtmp_213 = ivtmp_214 - 1;
  vectp_fenc.648_195 = vectp_fenc.648_196 + 16;
  vectp_pix3.651_191 = vectp_pix3.651_192 + 16;
  ivtmp_179 = ivtmp_180 + 1;
  if (ivtmp_179 < 1)
    goto <bb 21>;
  else
    goto <bb 23>;

  <bb 23>:
  # i_sum_222 = PHI <i_sum_29(22)>
  # vect_patt_198.654_187 = PHI <vect_patt_198.654_188(22)>
  vect_i_sum_29.656_186 = VEC_PERM_EXPR <vect_patt_198.654_187, { 0, 0, 0, 0 }, { 2, 3, 4, 5 }>;
  vect_i_sum_29.656_185 = vect_i_sum_29.656_186 + vect_patt_198.654_187;
  vect_i_sum_29.656_184 = VEC_PERM_EXPR <vect_i_sum_29.656_185, { 0, 0, 0, 0 }, { 1, 2, 3, 4 }>;
  vect_i_sum_29.656_183 = vect_i_sum_29.656_184 + vect_i_sum_29.656_185;
  stmp_i_sum_29.655_182 = BIT_FIELD_REF <vect_i_sum_29.656_183, 32, 0>;
  vect_i_sum_29.657_181 = stmp_i_sum_29.655_182 + i_sum_104;
  fenc_31 = fenc_16 + 16;
  # DEBUG pix1 => fenc_31
  pix3_33 = pix3_103 + pretmp_223;
  # DEBUG pix2 => pix3_33
  y_35 = y_12 + 1;
  # DEBUG y => y_35
  # DEBUG y => y_35
  # DEBUG i_sum => vect_i_sum_29.657_181
  # DEBUG pix2 => pix3_33
  # DEBUG pix1 => fenc_31
  ivtmp_211 = ivtmp_212 - 1;
  if (ivtmp_211 != 0)
    goto <bb 24>;
  else
    goto <bb 26>;

  <bb 24>:

  <bb 25>:
  # fenc_16 = PHI <fenc_31(24), fenc_2(D)(20)>
  # pix3_103 = PHI <pix3_33(24), pix3_17(D)(20)>
  # y_12 = PHI <y_35(24), 0(20)>
  # i_sum_104 = PHI <vect_i_sum_29.657_181(24), 0(20)>
  # ivtmp_212 = PHI <ivtmp_211(24), 16(20)>
  # DEBUG y => y_12
  # DEBUG i_sum => i_sum_104
  # DEBUG pix2 => pix3_103
  # DEBUG pix1 => fenc_16
  # DEBUG x => 0
  # DEBUG i_sum => i_sum_104
  vectp_fenc.649_197 = fenc_16;
  vectp_pix3.652_193 = pix3_103;
  goto <bb 22>;

  <bb 26>:
  # i_sum_221 = PHI <vect_i_sum_29.657_181(23)>
  # DEBUG pix1 => NULL
  # DEBUG i_stride_pix1 => NULL
  # DEBUG pix2 => NULL
  # DEBUG i_stride_pix2 => NULL
  # DEBUG y => NULL
  # DEBUG x => NULL
  # DEBUG i_sum => NULL
  MEM[(int *)scores_6(D) + 12B] = i_sum_221;
  return;

}



;; Function x264_pixel_sad_x3_16x8 (x264_pixel_sad_x3_16x8, funcdef_no=152, decl_uid=8034, cgraph_uid=152, symbol_order=195)


Analyzing loop at common/pixel.c:60
common/pixel.c:60:1: note: ===== analyze_loop_nest =====
common/pixel.c:60:1: note: === vect_analyze_loop_form ===
common/pixel.c:60:1: note: ===== analyze_loop_nest_1 =====
common/pixel.c:60:1: note: === vect_analyze_loop_form ===
common/pixel.c:60:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 2
  exit condition [15, + , 4294967295] != 0
  bounds on difference of bases: -15 ... -15
  result:
    # of iterations 15, bounded by 15
common/pixel.c:60:1: note: Considering outer-loop vectorization.
common/pixel.c:60:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 1
  exit condition [7, + , 4294967295] != 0
  bounds on difference of bases: -7 ... -7
  result:
    # of iterations 7, bounded by 7
common/pixel.c:60:1: note: === vect_analyze_data_refs ===
Creating dr for *_16
analyze_innermost: success.
	base_address: fenc_34
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_2(D)
	Access function 0: {{0B, +, 16}_1, +, 1}_2
Creating dr for *_20
analyze_innermost: success.
	base_address: pix2_79
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix2_13(D)
	Access function 0: {{0B, +, pretmp_169}_1, +, 1}_2
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:60:1: note: analyze in outer-loop: *fenc_34
common/pixel.c:60:1: note: 	outer base_address: fenc_2(D)
	outer offset from base address: 0
	outer constant offset from base address: 0
	outer step: 16
	outer aligned to: 128
common/pixel.c:60:1: note: got vectype for stmt: _17 = *_16;
vector(16) unsigned char
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:60:1: note: analyze in outer-loop: *pix2_79
common/pixel.c:60:1: note: failed: evolution of base is not affine.
common/pixel.c:60:1: note: bad data references.

Analyzing loop at common/pixel.c:60
common/pixel.c:60:1: note: ===== analyze_loop_nest =====
common/pixel.c:60:1: note: === vect_analyze_loop_form ===
common/pixel.c:60:1: note: === get_loop_niters ===
common/pixel.c:60:1: note: === vect_analyze_data_refs ===
Creating dr for *_16
analyze_innermost: success.
	base_address: fenc_34
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_34
	Access function 0: {0B, +, 1}_2
Creating dr for *_20
analyze_innermost: success.
	base_address: pix2_79
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix2_79
	Access function 0: {0B, +, 1}_2
common/pixel.c:60:1: note: got vectype for stmt: _17 = *_16;
vector(16) unsigned char
common/pixel.c:60:1: note: got vectype for stmt: _21 = *_20;
vector(16) unsigned char
common/pixel.c:60:1: note: === vect_analyze_scalar_cycles ===
common/pixel.c:60:1: note: Analyze phi: x_8 = PHI <x_27(15), 0(19)>

common/pixel.c:60:1: note: Access function of PHI: {0, +, 1}_2
common/pixel.c:60:1: note: step: 1,  init: 0
common/pixel.c:60:1: note: Detected induction.
common/pixel.c:60:1: note: Analyze phi: i_sum_78 = PHI <i_sum_26(15), i_sum_12(19)>

common/pixel.c:60:1: note: Access function of PHI: {i_sum_12, +, _24}_2
common/pixel.c:60:1: note: step: _24,  init: i_sum_12
common/pixel.c:60:1: note: step unknown.
common/pixel.c:60:1: note: Analyze phi: ivtmp_162 = PHI <ivtmp_161(15), 16(19)>

common/pixel.c:60:1: note: Access function of PHI: {16, +, 4294967295}_2
common/pixel.c:60:1: note: step: 4294967295,  init: 16
common/pixel.c:60:1: note: Detected induction.
common/pixel.c:60:1: note: Analyze phi: i_sum_78 = PHI <i_sum_26(15), i_sum_12(19)>

common/pixel.c:60:1: note: detected reduction: i_sum_26 = _24 + i_sum_78;

common/pixel.c:60:1: note: Detected reduction.
common/pixel.c:60:1: note: === vect_pattern_recog ===
common/pixel.c:60:1: note: vect_is_simple_use: operand _24
common/pixel.c:60:1: note: def_stmt: _24 = ABS_EXPR <_23>;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: vect_is_simple_use: operand _24
common/pixel.c:60:1: note: def_stmt: _24 = ABS_EXPR <_23>;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: vect_is_simple_use: operand _24
common/pixel.c:60:1: note: def_stmt: _24 = ABS_EXPR <_23>;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: vect_is_simple_use: operand _18
common/pixel.c:60:1: note: def_stmt: _18 = (int) _17;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: vect_is_simple_use: operand _17
common/pixel.c:60:1: note: def_stmt: _17 = *_16;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: vect_is_simple_use: operand _22
common/pixel.c:60:1: note: def_stmt: _22 = (int) _21;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: vect_is_simple_use: operand _21
common/pixel.c:60:1: note: def_stmt: _21 = *_20;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: vect_recog_sad_pattern: detected: patt_150 = SAD_EXPR <_17, _21, i_sum_78>;

common/pixel.c:60:1: note: pattern recognized: patt_150 = SAD_EXPR <_17, _21, i_sum_78>;
common/pixel.c:60:1: note: === vect_analyze_data_ref_accesses ===
common/pixel.c:60:1: note: === vect_mark_stmts_to_be_vectorized ===
common/pixel.c:60:1: note: init: phi relevant? x_8 = PHI <x_27(15), 0(19)>
common/pixel.c:60:1: note: init: phi relevant? i_sum_78 = PHI <i_sum_26(15), i_sum_12(19)>
common/pixel.c:60:1: note: init: phi relevant? ivtmp_162 = PHI <ivtmp_161(15), 16(19)>
common/pixel.c:60:1: note: init: stmt relevant? # DEBUG x => x_8
common/pixel.c:60:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_78
common/pixel.c:60:1: note: init: stmt relevant? _10 = (sizetype) x_8;
common/pixel.c:60:1: note: init: stmt relevant? _16 = fenc_34 + _10;
common/pixel.c:60:1: note: init: stmt relevant? _17 = *_16;
common/pixel.c:60:1: note: init: stmt relevant? _18 = (int) _17;
common/pixel.c:60:1: note: init: stmt relevant? _20 = pix2_79 + _10;
common/pixel.c:60:1: note: init: stmt relevant? _21 = *_20;
common/pixel.c:60:1: note: init: stmt relevant? _22 = (int) _21;
common/pixel.c:60:1: note: init: stmt relevant? _23 = _18 - _22;
common/pixel.c:60:1: note: init: stmt relevant? _24 = ABS_EXPR <_23>;
common/pixel.c:60:1: note: init: stmt relevant? i_sum_26 = _24 + i_sum_78;
common/pixel.c:60:1: note: vec_stmt_relevant_p: used out of loop.
common/pixel.c:60:1: note: mark relevant 0, live 1.
common/pixel.c:60:1: note: last stmt in pattern. don't mark relevant/live.
common/pixel.c:60:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_26
common/pixel.c:60:1: note: init: stmt relevant? x_27 = x_8 + 1;
common/pixel.c:60:1: note: init: stmt relevant? # DEBUG x => x_27
common/pixel.c:60:1: note: init: stmt relevant? # DEBUG x => x_27
common/pixel.c:60:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_26
common/pixel.c:60:1: note: init: stmt relevant? ivtmp_161 = ivtmp_162 - 1;
common/pixel.c:60:1: note: init: stmt relevant? if (ivtmp_161 != 0)
common/pixel.c:60:1: note: worklist: examine stmt: patt_150 = SAD_EXPR <_17, _21, i_sum_78>;
common/pixel.c:60:1: note: vect_is_simple_use: operand _17
common/pixel.c:60:1: note: def_stmt: _17 = *_16;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: mark relevant 3, live 0.
common/pixel.c:60:1: note: vect_is_simple_use: operand _21
common/pixel.c:60:1: note: def_stmt: _21 = *_20;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: mark relevant 3, live 0.
common/pixel.c:60:1: note: vect_is_simple_use: operand i_sum_78
common/pixel.c:60:1: note: def_stmt: i_sum_78 = PHI <i_sum_26(15), i_sum_12(19)>
common/pixel.c:60:1: note: type of def: 5.
common/pixel.c:60:1: note: mark relevant 3, live 0.
common/pixel.c:60:1: note: worklist: examine stmt: i_sum_78 = PHI <i_sum_26(15), i_sum_12(19)>
common/pixel.c:60:1: note: vect_is_simple_use: operand i_sum_26
common/pixel.c:60:1: note: def_stmt: i_sum_26 = _24 + i_sum_78;
common/pixel.c:60:1: note: type of def: 5.
common/pixel.c:60:1: note: reduc-stmt defining reduc-phi in the same nest.
common/pixel.c:60:1: note: vect_is_simple_use: operand i_sum_12
common/pixel.c:60:1: note: def_stmt: i_sum_12 = PHI <i_sum_168(18), 0(14)>
common/pixel.c:60:1: note: type of def: 2.
common/pixel.c:60:1: note: def_stmt is out of loop.
common/pixel.c:60:1: note: worklist: examine stmt: _21 = *_20;
common/pixel.c:60:1: note: worklist: examine stmt: _17 = *_16;
common/pixel.c:60:1: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _17 = *_16;
  stmt_b: _21 = *_20;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _17 = *_16;
  stmt_b: _17 = *_16;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_2)
  (chrec_b = {0B, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _21 = *_20;
  stmt_b: _21 = *_20;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_2)
  (chrec_b = {0B, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/pixel.c:60:1: note: === vect_determine_vectorization_factor ===
common/pixel.c:60:1: note: ==> examining phi: x_8 = PHI <x_27(15), 0(19)>

common/pixel.c:60:1: note: ==> examining phi: i_sum_78 = PHI <i_sum_26(15), i_sum_12(19)>

common/pixel.c:60:1: note: get vectype for scalar type:  int
common/pixel.c:60:1: note: vectype: vector(4) int
common/pixel.c:60:1: note: nunits = 4
common/pixel.c:60:1: note: ==> examining phi: ivtmp_162 = PHI <ivtmp_161(15), 16(19)>

common/pixel.c:60:1: note: ==> examining statement: # DEBUG x => x_8

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: # DEBUG i_sum => i_sum_78

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: _10 = (sizetype) x_8;

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: _16 = fenc_34 + _10;

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: _17 = *_16;

common/pixel.c:60:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:60:1: note: vectype: vector(16) unsigned char
common/pixel.c:60:1: note: nunits = 16
common/pixel.c:60:1: note: ==> examining statement: _18 = (int) _17;

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: _20 = pix2_79 + _10;

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: _21 = *_20;

common/pixel.c:60:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:60:1: note: vectype: vector(16) unsigned char
common/pixel.c:60:1: note: nunits = 16
common/pixel.c:60:1: note: ==> examining statement: _22 = (int) _21;

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: _23 = _18 - _22;

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: _24 = ABS_EXPR <_23>;

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: i_sum_26 = _24 + i_sum_78;

common/pixel.c:60:1: note: ==> examining pattern statement: patt_150 = SAD_EXPR <_17, _21, i_sum_78>;

common/pixel.c:60:1: note: get vectype for scalar type:  int
common/pixel.c:60:1: note: vectype: vector(4) int
common/pixel.c:60:1: note: nunits = 4
common/pixel.c:60:1: note: ==> examining statement: # DEBUG i_sum => i_sum_26

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: x_27 = x_8 + 1;

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: # DEBUG x => x_27

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: # DEBUG x => x_27

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: # DEBUG i_sum => i_sum_26

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: ivtmp_161 = ivtmp_162 - 1;

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: if (ivtmp_161 != 0)

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: vectorization factor = 16
common/pixel.c:60:1: note: === vect_analyze_data_refs_alignment ===
common/pixel.c:60:1: note: vect_compute_data_ref_alignment:
common/pixel.c:60:1: note: can't force alignment of ref: *_16
common/pixel.c:60:1: note: vect_compute_data_ref_alignment:
common/pixel.c:60:1: note: can't force alignment of ref: *_20
common/pixel.c:60:1: note: === vect_prune_runtime_alias_test_list ===
common/pixel.c:60:1: note: === vect_enhance_data_refs_alignment ===
common/pixel.c:60:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:60:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:60:1: note: vect_can_advance_ivs_p:
common/pixel.c:60:1: note: Analyze phi: x_8 = PHI <x_27(15), 0(19)>

common/pixel.c:60:1: note: Analyze phi: i_sum_78 = PHI <i_sum_26(15), i_sum_12(19)>

common/pixel.c:60:1: note: reduc phi. skip.
common/pixel.c:60:1: note: Analyze phi: ivtmp_162 = PHI <ivtmp_161(15), 16(19)>

common/pixel.c:60:1: note: Vectorizing an unaligned access.
common/pixel.c:60:1: note: Vectorizing an unaligned access.
common/pixel.c:60:1: note: === vect_analyze_slp ===
common/pixel.c:60:1: note: === vect_make_slp_decision ===
common/pixel.c:60:1: note: === vect_detect_hybrid_slp ===
common/pixel.c:60:1: note: === vect_analyze_loop_operations ===
common/pixel.c:60:1: note: examining phi: x_8 = PHI <x_27(15), 0(19)>

common/pixel.c:60:1: note: examining phi: i_sum_78 = PHI <i_sum_26(15), i_sum_12(19)>

common/pixel.c:60:1: note: examining phi: ivtmp_162 = PHI <ivtmp_161(15), 16(19)>

common/pixel.c:60:1: note: ==> examining statement: # DEBUG x => x_8
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: # DEBUG i_sum => i_sum_78
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: _10 = (sizetype) x_8;
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: _16 = fenc_34 + _10;
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: _17 = *_16;
common/pixel.c:60:1: note: vect_is_simple_use: operand *_16
common/pixel.c:60:1: note: not ssa-name.
common/pixel.c:60:1: note: use not simple.
common/pixel.c:60:1: note: vect_is_simple_use: operand *_16
common/pixel.c:60:1: note: not ssa-name.
common/pixel.c:60:1: note: use not simple.
common/pixel.c:60:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:60:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:60:1: note: ==> examining statement: _18 = (int) _17;
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: _20 = pix2_79 + _10;
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: _21 = *_20;
common/pixel.c:60:1: note: vect_is_simple_use: operand *_20
common/pixel.c:60:1: note: not ssa-name.
common/pixel.c:60:1: note: use not simple.
common/pixel.c:60:1: note: vect_is_simple_use: operand *_20
common/pixel.c:60:1: note: not ssa-name.
common/pixel.c:60:1: note: use not simple.
common/pixel.c:60:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:60:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:60:1: note: ==> examining statement: _22 = (int) _21;
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: _23 = _18 - _22;
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: _24 = ABS_EXPR <_23>;
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: i_sum_26 = _24 + i_sum_78;
common/pixel.c:60:1: note: ==> examining pattern statement: patt_150 = SAD_EXPR <_17, _21, i_sum_78>;
common/pixel.c:60:1: note: vect_is_simple_use: operand _17
common/pixel.c:60:1: note: def_stmt: _17 = *_16;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: vect_is_simple_use: operand _21
common/pixel.c:60:1: note: def_stmt: _21 = *_20;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: vect_is_simple_use: operand i_sum_78
common/pixel.c:60:1: note: def_stmt: i_sum_78 = PHI <i_sum_26(15), i_sum_12(19)>
common/pixel.c:60:1: note: type of def: 5.
common/pixel.c:60:1: note: detected reduction: i_sum_26 = _24 + i_sum_78;

common/pixel.c:60:1: note: reduc op not supported by target.
vect_model_reduction_cost: inside_cost = 1, prologue_cost = 1, epilogue_cost = 5 .
common/pixel.c:60:1: note: ==> examining statement: # DEBUG i_sum => i_sum_26
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: x_27 = x_8 + 1;
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: # DEBUG x => x_27
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: # DEBUG x => x_27
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: # DEBUG i_sum => i_sum_26
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: ivtmp_161 = ivtmp_162 - 1;
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: if (ivtmp_161 != 0)
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: vectorization_factor = 16, niters = 16
common/pixel.c:60:1: note: === vect_update_slp_costs_according_to_vf ===
common/pixel.c:60:1: note: Cost model analysis: 
  Vector inside of loop cost: 5
  Vector prologue cost: 1
  Vector epilogue cost: 5
  Scalar iteration cost: 3
  Scalar outside cost: 0
  Vector outside cost: 6
  prologue iterations: 0
  epilogue iterations: 0
  Calculated minimum iters for profitability: 3
common/pixel.c:60:1: note:   Runtime profitability threshold = 15
common/pixel.c:60:1: note:   Static estimate profitability threshold = 15
common/pixel.c:60:1: note: loop vectorized
common/pixel.c:60:1: note: === vec_transform_loop ===
common/pixel.c:60:1: note: ------>vectorizing phi: x_8 = PHI <x_27(15), 0(21)>

common/pixel.c:60:1: note: ------>vectorizing phi: i_sum_78 = PHI <i_sum_26(15), i_sum_12(21)>

common/pixel.c:60:1: note: multiple-types.
common/pixel.c:60:1: note: ------>vectorizing phi: ivtmp_162 = PHI <ivtmp_161(15), 16(21)>

common/pixel.c:60:1: note: ------>vectorizing statement: # DEBUG x => x_8

common/pixel.c:60:1: note: ------>vectorizing statement: # DEBUG i_sum => i_sum_78

common/pixel.c:60:1: note: ------>vectorizing statement: _10 = (sizetype) x_8;

common/pixel.c:60:1: note: ------>vectorizing statement: _16 = fenc_34 + _10;

common/pixel.c:60:1: note: ------>vectorizing statement: _17 = *_16;

common/pixel.c:60:1: note: transform statement.
common/pixel.c:60:1: note: transform load. ncopies = 1
common/pixel.c:60:1: note: create vector_type-pointer variable to type: vector(16) unsigned char  vectorizing a pointer ref: *fenc_34
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:60:1: note: created vectp_fenc.691_149
common/pixel.c:60:1: note: add new stmt: vect__17.692_146 = MEM[(uint8_t *)vectp_fenc.690_148];
common/pixel.c:60:1: note: ------>vectorizing statement: _18 = (int) _17;

common/pixel.c:60:1: note: ------>vectorizing statement: _20 = pix2_79 + _10;

common/pixel.c:60:1: note: ------>vectorizing statement: _21 = *_20;

common/pixel.c:60:1: note: transform statement.
common/pixel.c:60:1: note: transform load. ncopies = 1
common/pixel.c:60:1: note: create vector_type-pointer variable to type: vector(16) unsigned char  vectorizing a pointer ref: *pix2_79
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:60:1: note: created vectp_pix2.694_145
common/pixel.c:60:1: note: add new stmt: vect__21.695_142 = MEM[(uint8_t *)vectp_pix2.693_144];
common/pixel.c:60:1: note: ------>vectorizing statement: _22 = (int) _21;

common/pixel.c:60:1: note: ------>vectorizing statement: _23 = _18 - _22;

common/pixel.c:60:1: note: ------>vectorizing statement: _24 = ABS_EXPR <_23>;

common/pixel.c:60:1: note: ------>vectorizing statement: i_sum_26 = _24 + i_sum_78;

common/pixel.c:60:1: note: multiple-types.
common/pixel.c:60:1: note: transform statement.
common/pixel.c:60:1: note: vect_is_simple_use: operand _17
common/pixel.c:60:1: note: def_stmt: _17 = *_16;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: vect_is_simple_use: operand _21
common/pixel.c:60:1: note: def_stmt: _21 = *_20;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: vect_is_simple_use: operand i_sum_78
common/pixel.c:60:1: note: def_stmt: i_sum_78 = PHI <i_sum_26(15), i_sum_12(21)>
common/pixel.c:60:1: note: type of def: 5.
common/pixel.c:60:1: note: detected reduction: i_sum_26 = _24 + i_sum_78;

common/pixel.c:60:1: note: reduc op not supported by target.
common/pixel.c:60:1: note: transform reduction.
common/pixel.c:60:1: note: vect_get_vec_def_for_operand: _17
common/pixel.c:60:1: note: vect_is_simple_use: operand _17
common/pixel.c:60:1: note: def_stmt: _17 = *_16;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: def =  _17
  def_stmt =  _17 = *_16;
common/pixel.c:60:1: note: vect_get_vec_def_for_operand: _21
common/pixel.c:60:1: note: vect_is_simple_use: operand _21
common/pixel.c:60:1: note: def_stmt: _21 = *_20;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: def =  _21
  def_stmt =  _21 = *_20;
common/pixel.c:60:1: note: add new stmt: vect_patt_150.696_140 = SAD_EXPR <vect__17.692_146, vect__21.695_142, vect_patt_150.696_141>;
common/pixel.c:60:1: note: vect_is_simple_use: operand i_sum_12
common/pixel.c:60:1: note: def_stmt: i_sum_12 = PHI <i_sum_168(18), 0(14)>
common/pixel.c:60:1: note: type of def: 2.
common/pixel.c:60:1: note: vect_get_vec_def_for_operand: i_sum_78
common/pixel.c:60:1: note: vect_is_simple_use: operand i_sum_78
common/pixel.c:60:1: note: def_stmt: i_sum_78 = PHI <i_sum_26(15), i_sum_12(21)>
common/pixel.c:60:1: note: type of def: 5.
common/pixel.c:60:1: note: def =  i_sum_78
  def_stmt =  i_sum_78 = PHI <i_sum_26(15), i_sum_12(21)>
common/pixel.c:60:1: note: transform reduction: created def-use cycle: vect_patt_150.696_141 = PHI <vect_patt_150.696_140(15), { 0, 0, 0, 0 }(21)>

vect_patt_150.696_140 = SAD_EXPR <vect__17.692_146, vect__21.695_142, vect_patt_150.696_141>;

common/pixel.c:60:1: note: Reduce using vector shifts
common/pixel.c:60:1: note: extract scalar result
common/pixel.c:60:1: note: ------>vectorizing statement: # DEBUG i_sum => i_sum_26

common/pixel.c:60:1: note: ------>vectorizing statement: x_27 = x_8 + 1;

common/pixel.c:60:1: note: ------>vectorizing statement: # DEBUG x => x_27

common/pixel.c:60:1: note: ------>vectorizing statement: # DEBUG x => x_27

common/pixel.c:60:1: note: ------>vectorizing statement: # DEBUG i_sum => i_sum_26

common/pixel.c:60:1: note: ------>vectorizing statement: ivtmp_161 = ivtmp_162 - 1;

common/pixel.c:60:1: note: ------>vectorizing statement: vectp_fenc.690_147 = vectp_fenc.690_148 + 16;

common/pixel.c:60:1: note: ------>vectorizing statement: vectp_pix2.693_143 = vectp_pix2.693_144 + 16;

common/pixel.c:60:1: note: ------>vectorizing statement: if (ivtmp_161 != 0)


loop at common/pixel.c:60: if (ivtmp_131 < 1)

;; Scaling loop 2 with scale 0.062500, bounding iterations to 1 from guessed 16
;; guessed iterations are now 1
common/pixel.c:60:1: note: LOOP VECTORIZED


Analyzing loop at common/pixel.c:60
common/pixel.c:60:1: note: ===== analyze_loop_nest =====
common/pixel.c:60:1: note: === vect_analyze_loop_form ===
common/pixel.c:60:1: note: ===== analyze_loop_nest_1 =====
common/pixel.c:60:1: note: === vect_analyze_loop_form ===
common/pixel.c:60:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 4
  exit condition [15, + , 4294967295] != 0
  bounds on difference of bases: -15 ... -15
  result:
    # of iterations 15, bounded by 15
common/pixel.c:60:1: note: Considering outer-loop vectorization.
common/pixel.c:60:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 3
  exit condition [7, + , 4294967295] != 0
  bounds on difference of bases: -7 ... -7
  result:
    # of iterations 7, bounded by 7
common/pixel.c:60:1: note: === vect_analyze_data_refs ===
Creating dr for *_38
analyze_innermost: success.
	base_address: fenc_105
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_2(D)
	Access function 0: {{0B, +, 16}_3, +, 1}_4
Creating dr for *_42
analyze_innermost: success.
	base_address: pix1_106
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix1_9(D)
	Access function 0: {{0B, +, pretmp_169}_3, +, 1}_4
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:60:1: note: analyze in outer-loop: *fenc_105
common/pixel.c:60:1: note: 	outer base_address: fenc_2(D)
	outer offset from base address: 0
	outer constant offset from base address: 0
	outer step: 16
	outer aligned to: 128
common/pixel.c:60:1: note: got vectype for stmt: _39 = *_38;
vector(16) unsigned char
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:60:1: note: analyze in outer-loop: *pix1_106
common/pixel.c:60:1: note: failed: evolution of base is not affine.
common/pixel.c:60:1: note: bad data references.

Analyzing loop at common/pixel.c:60
common/pixel.c:60:1: note: ===== analyze_loop_nest =====
common/pixel.c:60:1: note: === vect_analyze_loop_form ===
common/pixel.c:60:1: note: === get_loop_niters ===
common/pixel.c:60:1: note: === vect_analyze_data_refs ===
Creating dr for *_38
analyze_innermost: success.
	base_address: fenc_105
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_105
	Access function 0: {0B, +, 1}_4
Creating dr for *_42
analyze_innermost: success.
	base_address: pix1_106
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix1_106
	Access function 0: {0B, +, 1}_4
common/pixel.c:60:1: note: got vectype for stmt: _39 = *_38;
vector(16) unsigned char
common/pixel.c:60:1: note: got vectype for stmt: _43 = *_42;
vector(16) unsigned char
common/pixel.c:60:1: note: === vect_analyze_scalar_cycles ===
common/pixel.c:60:1: note: Analyze phi: x_104 = PHI <x_49(9), 0(13)>

common/pixel.c:60:1: note: Access function of PHI: {0, +, 1}_4
common/pixel.c:60:1: note: step: 1,  init: 0
common/pixel.c:60:1: note: Detected induction.
common/pixel.c:60:1: note: Analyze phi: i_sum_107 = PHI <i_sum_48(9), i_sum_109(13)>

common/pixel.c:60:1: note: Access function of PHI: {i_sum_109, +, _46}_4
common/pixel.c:60:1: note: step: _46,  init: i_sum_109
common/pixel.c:60:1: note: step unknown.
common/pixel.c:60:1: note: Analyze phi: ivtmp_158 = PHI <ivtmp_157(9), 16(13)>

common/pixel.c:60:1: note: Access function of PHI: {16, +, 4294967295}_4
common/pixel.c:60:1: note: step: 4294967295,  init: 16
common/pixel.c:60:1: note: Detected induction.
common/pixel.c:60:1: note: Analyze phi: i_sum_107 = PHI <i_sum_48(9), i_sum_109(13)>

common/pixel.c:60:1: note: detected reduction: i_sum_48 = _46 + i_sum_107;

common/pixel.c:60:1: note: Detected reduction.
common/pixel.c:60:1: note: === vect_pattern_recog ===
common/pixel.c:60:1: note: vect_is_simple_use: operand _46
common/pixel.c:60:1: note: def_stmt: _46 = ABS_EXPR <_45>;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: vect_is_simple_use: operand _46
common/pixel.c:60:1: note: def_stmt: _46 = ABS_EXPR <_45>;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: vect_is_simple_use: operand _46
common/pixel.c:60:1: note: def_stmt: _46 = ABS_EXPR <_45>;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: vect_is_simple_use: operand _40
common/pixel.c:60:1: note: def_stmt: _40 = (int) _39;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: vect_is_simple_use: operand _39
common/pixel.c:60:1: note: def_stmt: _39 = *_38;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: vect_is_simple_use: operand _44
common/pixel.c:60:1: note: def_stmt: _44 = (int) _43;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: vect_is_simple_use: operand _43
common/pixel.c:60:1: note: def_stmt: _43 = *_42;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: vect_recog_sad_pattern: detected: patt_130 = SAD_EXPR <_39, _43, i_sum_107>;

common/pixel.c:60:1: note: pattern recognized: patt_130 = SAD_EXPR <_39, _43, i_sum_107>;
common/pixel.c:60:1: note: === vect_analyze_data_ref_accesses ===
common/pixel.c:60:1: note: === vect_mark_stmts_to_be_vectorized ===
common/pixel.c:60:1: note: init: phi relevant? x_104 = PHI <x_49(9), 0(13)>
common/pixel.c:60:1: note: init: phi relevant? i_sum_107 = PHI <i_sum_48(9), i_sum_109(13)>
common/pixel.c:60:1: note: init: phi relevant? ivtmp_158 = PHI <ivtmp_157(9), 16(13)>
common/pixel.c:60:1: note: init: stmt relevant? # DEBUG x => x_104
common/pixel.c:60:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_107
common/pixel.c:60:1: note: init: stmt relevant? _36 = (sizetype) x_104;
common/pixel.c:60:1: note: init: stmt relevant? _38 = fenc_105 + _36;
common/pixel.c:60:1: note: init: stmt relevant? _39 = *_38;
common/pixel.c:60:1: note: init: stmt relevant? _40 = (int) _39;
common/pixel.c:60:1: note: init: stmt relevant? _42 = pix1_106 + _36;
common/pixel.c:60:1: note: init: stmt relevant? _43 = *_42;
common/pixel.c:60:1: note: init: stmt relevant? _44 = (int) _43;
common/pixel.c:60:1: note: init: stmt relevant? _45 = _40 - _44;
common/pixel.c:60:1: note: init: stmt relevant? _46 = ABS_EXPR <_45>;
common/pixel.c:60:1: note: init: stmt relevant? i_sum_48 = _46 + i_sum_107;
common/pixel.c:60:1: note: vec_stmt_relevant_p: used out of loop.
common/pixel.c:60:1: note: mark relevant 0, live 1.
common/pixel.c:60:1: note: last stmt in pattern. don't mark relevant/live.
common/pixel.c:60:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_48
common/pixel.c:60:1: note: init: stmt relevant? x_49 = x_104 + 1;
common/pixel.c:60:1: note: init: stmt relevant? # DEBUG x => x_49
common/pixel.c:60:1: note: init: stmt relevant? # DEBUG x => x_49
common/pixel.c:60:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_48
common/pixel.c:60:1: note: init: stmt relevant? ivtmp_157 = ivtmp_158 - 1;
common/pixel.c:60:1: note: init: stmt relevant? if (ivtmp_157 != 0)
common/pixel.c:60:1: note: worklist: examine stmt: patt_130 = SAD_EXPR <_39, _43, i_sum_107>;
common/pixel.c:60:1: note: vect_is_simple_use: operand _39
common/pixel.c:60:1: note: def_stmt: _39 = *_38;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: mark relevant 3, live 0.
common/pixel.c:60:1: note: vect_is_simple_use: operand _43
common/pixel.c:60:1: note: def_stmt: _43 = *_42;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: mark relevant 3, live 0.
common/pixel.c:60:1: note: vect_is_simple_use: operand i_sum_107
common/pixel.c:60:1: note: def_stmt: i_sum_107 = PHI <i_sum_48(9), i_sum_109(13)>
common/pixel.c:60:1: note: type of def: 5.
common/pixel.c:60:1: note: mark relevant 3, live 0.
common/pixel.c:60:1: note: worklist: examine stmt: i_sum_107 = PHI <i_sum_48(9), i_sum_109(13)>
common/pixel.c:60:1: note: vect_is_simple_use: operand i_sum_48
common/pixel.c:60:1: note: def_stmt: i_sum_48 = _46 + i_sum_107;
common/pixel.c:60:1: note: type of def: 5.
common/pixel.c:60:1: note: reduc-stmt defining reduc-phi in the same nest.
common/pixel.c:60:1: note: vect_is_simple_use: operand i_sum_109
common/pixel.c:60:1: note: def_stmt: i_sum_109 = PHI <i_sum_166(12), 0(8)>
common/pixel.c:60:1: note: type of def: 2.
common/pixel.c:60:1: note: def_stmt is out of loop.
common/pixel.c:60:1: note: worklist: examine stmt: _43 = *_42;
common/pixel.c:60:1: note: worklist: examine stmt: _39 = *_38;
common/pixel.c:60:1: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _39 = *_38;
  stmt_b: _43 = *_42;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _39 = *_38;
  stmt_b: _39 = *_38;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_4)
  (chrec_b = {0B, +, 1}_4)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _43 = *_42;
  stmt_b: _43 = *_42;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_4)
  (chrec_b = {0B, +, 1}_4)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/pixel.c:60:1: note: === vect_determine_vectorization_factor ===
common/pixel.c:60:1: note: ==> examining phi: x_104 = PHI <x_49(9), 0(13)>

common/pixel.c:60:1: note: ==> examining phi: i_sum_107 = PHI <i_sum_48(9), i_sum_109(13)>

common/pixel.c:60:1: note: get vectype for scalar type:  int
common/pixel.c:60:1: note: vectype: vector(4) int
common/pixel.c:60:1: note: nunits = 4
common/pixel.c:60:1: note: ==> examining phi: ivtmp_158 = PHI <ivtmp_157(9), 16(13)>

common/pixel.c:60:1: note: ==> examining statement: # DEBUG x => x_104

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: # DEBUG i_sum => i_sum_107

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: _36 = (sizetype) x_104;

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: _38 = fenc_105 + _36;

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: _39 = *_38;

common/pixel.c:60:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:60:1: note: vectype: vector(16) unsigned char
common/pixel.c:60:1: note: nunits = 16
common/pixel.c:60:1: note: ==> examining statement: _40 = (int) _39;

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: _42 = pix1_106 + _36;

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: _43 = *_42;

common/pixel.c:60:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:60:1: note: vectype: vector(16) unsigned char
common/pixel.c:60:1: note: nunits = 16
common/pixel.c:60:1: note: ==> examining statement: _44 = (int) _43;

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: _45 = _40 - _44;

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: _46 = ABS_EXPR <_45>;

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: i_sum_48 = _46 + i_sum_107;

common/pixel.c:60:1: note: ==> examining pattern statement: patt_130 = SAD_EXPR <_39, _43, i_sum_107>;

common/pixel.c:60:1: note: get vectype for scalar type:  int
common/pixel.c:60:1: note: vectype: vector(4) int
common/pixel.c:60:1: note: nunits = 4
common/pixel.c:60:1: note: ==> examining statement: # DEBUG i_sum => i_sum_48

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: x_49 = x_104 + 1;

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: # DEBUG x => x_49

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: # DEBUG x => x_49

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: # DEBUG i_sum => i_sum_48

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: ivtmp_157 = ivtmp_158 - 1;

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: if (ivtmp_157 != 0)

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: vectorization factor = 16
common/pixel.c:60:1: note: === vect_analyze_data_refs_alignment ===
common/pixel.c:60:1: note: vect_compute_data_ref_alignment:
common/pixel.c:60:1: note: can't force alignment of ref: *_38
common/pixel.c:60:1: note: vect_compute_data_ref_alignment:
common/pixel.c:60:1: note: can't force alignment of ref: *_42
common/pixel.c:60:1: note: === vect_prune_runtime_alias_test_list ===
common/pixel.c:60:1: note: === vect_enhance_data_refs_alignment ===
common/pixel.c:60:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:60:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:60:1: note: vect_can_advance_ivs_p:
common/pixel.c:60:1: note: Analyze phi: x_104 = PHI <x_49(9), 0(13)>

common/pixel.c:60:1: note: Analyze phi: i_sum_107 = PHI <i_sum_48(9), i_sum_109(13)>

common/pixel.c:60:1: note: reduc phi. skip.
common/pixel.c:60:1: note: Analyze phi: ivtmp_158 = PHI <ivtmp_157(9), 16(13)>

common/pixel.c:60:1: note: Vectorizing an unaligned access.
common/pixel.c:60:1: note: Vectorizing an unaligned access.
common/pixel.c:60:1: note: === vect_analyze_slp ===
common/pixel.c:60:1: note: === vect_make_slp_decision ===
common/pixel.c:60:1: note: === vect_detect_hybrid_slp ===
common/pixel.c:60:1: note: === vect_analyze_loop_operations ===
common/pixel.c:60:1: note: examining phi: x_104 = PHI <x_49(9), 0(13)>

common/pixel.c:60:1: note: examining phi: i_sum_107 = PHI <i_sum_48(9), i_sum_109(13)>

common/pixel.c:60:1: note: examining phi: ivtmp_158 = PHI <ivtmp_157(9), 16(13)>

common/pixel.c:60:1: note: ==> examining statement: # DEBUG x => x_104
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: # DEBUG i_sum => i_sum_107
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: _36 = (sizetype) x_104;
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: _38 = fenc_105 + _36;
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: _39 = *_38;
common/pixel.c:60:1: note: vect_is_simple_use: operand *_38
common/pixel.c:60:1: note: not ssa-name.
common/pixel.c:60:1: note: use not simple.
common/pixel.c:60:1: note: vect_is_simple_use: operand *_38
common/pixel.c:60:1: note: not ssa-name.
common/pixel.c:60:1: note: use not simple.
common/pixel.c:60:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:60:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:60:1: note: ==> examining statement: _40 = (int) _39;
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: _42 = pix1_106 + _36;
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: _43 = *_42;
common/pixel.c:60:1: note: vect_is_simple_use: operand *_42
common/pixel.c:60:1: note: not ssa-name.
common/pixel.c:60:1: note: use not simple.
common/pixel.c:60:1: note: vect_is_simple_use: operand *_42
common/pixel.c:60:1: note: not ssa-name.
common/pixel.c:60:1: note: use not simple.
common/pixel.c:60:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:60:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:60:1: note: ==> examining statement: _44 = (int) _43;
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: _45 = _40 - _44;
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: _46 = ABS_EXPR <_45>;
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: i_sum_48 = _46 + i_sum_107;
common/pixel.c:60:1: note: ==> examining pattern statement: patt_130 = SAD_EXPR <_39, _43, i_sum_107>;
common/pixel.c:60:1: note: vect_is_simple_use: operand _39
common/pixel.c:60:1: note: def_stmt: _39 = *_38;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: vect_is_simple_use: operand _43
common/pixel.c:60:1: note: def_stmt: _43 = *_42;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: vect_is_simple_use: operand i_sum_107
common/pixel.c:60:1: note: def_stmt: i_sum_107 = PHI <i_sum_48(9), i_sum_109(13)>
common/pixel.c:60:1: note: type of def: 5.
common/pixel.c:60:1: note: detected reduction: i_sum_48 = _46 + i_sum_107;

common/pixel.c:60:1: note: reduc op not supported by target.
vect_model_reduction_cost: inside_cost = 1, prologue_cost = 1, epilogue_cost = 5 .
common/pixel.c:60:1: note: ==> examining statement: # DEBUG i_sum => i_sum_48
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: x_49 = x_104 + 1;
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: # DEBUG x => x_49
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: # DEBUG x => x_49
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: # DEBUG i_sum => i_sum_48
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: ivtmp_157 = ivtmp_158 - 1;
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: if (ivtmp_157 != 0)
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: vectorization_factor = 16, niters = 16
common/pixel.c:60:1: note: === vect_update_slp_costs_according_to_vf ===
common/pixel.c:60:1: note: Cost model analysis: 
  Vector inside of loop cost: 5
  Vector prologue cost: 1
  Vector epilogue cost: 5
  Scalar iteration cost: 3
  Scalar outside cost: 0
  Vector outside cost: 6
  prologue iterations: 0
  epilogue iterations: 0
  Calculated minimum iters for profitability: 3
common/pixel.c:60:1: note:   Runtime profitability threshold = 15
common/pixel.c:60:1: note:   Static estimate profitability threshold = 15
common/pixel.c:60:1: note: loop vectorized
common/pixel.c:60:1: note: === vec_transform_loop ===
common/pixel.c:60:1: note: ------>vectorizing phi: x_104 = PHI <x_49(9), 0(22)>

common/pixel.c:60:1: note: ------>vectorizing phi: i_sum_107 = PHI <i_sum_48(9), i_sum_109(22)>

common/pixel.c:60:1: note: multiple-types.
common/pixel.c:60:1: note: ------>vectorizing phi: ivtmp_158 = PHI <ivtmp_157(9), 16(22)>

common/pixel.c:60:1: note: ------>vectorizing statement: # DEBUG x => x_104

common/pixel.c:60:1: note: ------>vectorizing statement: # DEBUG i_sum => i_sum_107

common/pixel.c:60:1: note: ------>vectorizing statement: _36 = (sizetype) x_104;

common/pixel.c:60:1: note: ------>vectorizing statement: _38 = fenc_105 + _36;

common/pixel.c:60:1: note: ------>vectorizing statement: _39 = *_38;

common/pixel.c:60:1: note: transform statement.
common/pixel.c:60:1: note: transform load. ncopies = 1
common/pixel.c:60:1: note: create vector_type-pointer variable to type: vector(16) unsigned char  vectorizing a pointer ref: *fenc_105
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:60:1: note: created vectp_fenc.701_129
common/pixel.c:60:1: note: add new stmt: vect__39.702_126 = MEM[(uint8_t *)vectp_fenc.700_128];
common/pixel.c:60:1: note: ------>vectorizing statement: _40 = (int) _39;

common/pixel.c:60:1: note: ------>vectorizing statement: _42 = pix1_106 + _36;

common/pixel.c:60:1: note: ------>vectorizing statement: _43 = *_42;

common/pixel.c:60:1: note: transform statement.
common/pixel.c:60:1: note: transform load. ncopies = 1
common/pixel.c:60:1: note: create vector_type-pointer variable to type: vector(16) unsigned char  vectorizing a pointer ref: *pix1_106
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:60:1: note: created vectp_pix1.704_125
common/pixel.c:60:1: note: add new stmt: vect__43.705_122 = MEM[(uint8_t *)vectp_pix1.703_124];
common/pixel.c:60:1: note: ------>vectorizing statement: _44 = (int) _43;

common/pixel.c:60:1: note: ------>vectorizing statement: _45 = _40 - _44;

common/pixel.c:60:1: note: ------>vectorizing statement: _46 = ABS_EXPR <_45>;

common/pixel.c:60:1: note: ------>vectorizing statement: i_sum_48 = _46 + i_sum_107;

common/pixel.c:60:1: note: multiple-types.
common/pixel.c:60:1: note: transform statement.
common/pixel.c:60:1: note: vect_is_simple_use: operand _39
common/pixel.c:60:1: note: def_stmt: _39 = *_38;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: vect_is_simple_use: operand _43
common/pixel.c:60:1: note: def_stmt: _43 = *_42;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: vect_is_simple_use: operand i_sum_107
common/pixel.c:60:1: note: def_stmt: i_sum_107 = PHI <i_sum_48(9), i_sum_109(22)>
common/pixel.c:60:1: note: type of def: 5.
common/pixel.c:60:1: note: detected reduction: i_sum_48 = _46 + i_sum_107;

common/pixel.c:60:1: note: reduc op not supported by target.
common/pixel.c:60:1: note: transform reduction.
common/pixel.c:60:1: note: vect_get_vec_def_for_operand: _39
common/pixel.c:60:1: note: vect_is_simple_use: operand _39
common/pixel.c:60:1: note: def_stmt: _39 = *_38;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: def =  _39
  def_stmt =  _39 = *_38;
common/pixel.c:60:1: note: vect_get_vec_def_for_operand: _43
common/pixel.c:60:1: note: vect_is_simple_use: operand _43
common/pixel.c:60:1: note: def_stmt: _43 = *_42;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: def =  _43
  def_stmt =  _43 = *_42;
common/pixel.c:60:1: note: add new stmt: vect_patt_130.706_120 = SAD_EXPR <vect__39.702_126, vect__43.705_122, vect_patt_130.706_121>;
common/pixel.c:60:1: note: vect_is_simple_use: operand i_sum_109
common/pixel.c:60:1: note: def_stmt: i_sum_109 = PHI <i_sum_166(12), 0(8)>
common/pixel.c:60:1: note: type of def: 2.
common/pixel.c:60:1: note: vect_get_vec_def_for_operand: i_sum_107
common/pixel.c:60:1: note: vect_is_simple_use: operand i_sum_107
common/pixel.c:60:1: note: def_stmt: i_sum_107 = PHI <i_sum_48(9), i_sum_109(22)>
common/pixel.c:60:1: note: type of def: 5.
common/pixel.c:60:1: note: def =  i_sum_107
  def_stmt =  i_sum_107 = PHI <i_sum_48(9), i_sum_109(22)>
common/pixel.c:60:1: note: transform reduction: created def-use cycle: vect_patt_130.706_121 = PHI <vect_patt_130.706_120(9), { 0, 0, 0, 0 }(22)>

vect_patt_130.706_120 = SAD_EXPR <vect__39.702_126, vect__43.705_122, vect_patt_130.706_121>;

common/pixel.c:60:1: note: Reduce using vector shifts
common/pixel.c:60:1: note: extract scalar result
common/pixel.c:60:1: note: ------>vectorizing statement: # DEBUG i_sum => i_sum_48

common/pixel.c:60:1: note: ------>vectorizing statement: x_49 = x_104 + 1;

common/pixel.c:60:1: note: ------>vectorizing statement: # DEBUG x => x_49

common/pixel.c:60:1: note: ------>vectorizing statement: # DEBUG x => x_49

common/pixel.c:60:1: note: ------>vectorizing statement: # DEBUG i_sum => i_sum_48

common/pixel.c:60:1: note: ------>vectorizing statement: ivtmp_157 = ivtmp_158 - 1;

common/pixel.c:60:1: note: ------>vectorizing statement: vectp_fenc.700_127 = vectp_fenc.700_128 + 16;

common/pixel.c:60:1: note: ------>vectorizing statement: vectp_pix1.703_123 = vectp_pix1.703_124 + 16;

common/pixel.c:60:1: note: ------>vectorizing statement: if (ivtmp_157 != 0)


loop at common/pixel.c:60: if (ivtmp_99 < 1)

;; Scaling loop 4 with scale 0.062500, bounding iterations to 1 from guessed 16
;; guessed iterations are now 1
common/pixel.c:60:1: note: LOOP VECTORIZED


Analyzing loop at common/pixel.c:60
common/pixel.c:60:1: note: ===== analyze_loop_nest =====
common/pixel.c:60:1: note: === vect_analyze_loop_form ===
common/pixel.c:60:1: note: ===== analyze_loop_nest_1 =====
common/pixel.c:60:1: note: === vect_analyze_loop_form ===
common/pixel.c:60:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 6
  exit condition [15, + , 4294967295] != 0
  bounds on difference of bases: -15 ... -15
  result:
    # of iterations 15, bounded by 15
common/pixel.c:60:1: note: Considering outer-loop vectorization.
common/pixel.c:60:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 5
  exit condition [7, + , 4294967295] != 0
  bounds on difference of bases: -7 ... -7
  result:
    # of iterations 7, bounded by 7
common/pixel.c:60:1: note: === vect_analyze_data_refs ===
Creating dr for *_60
analyze_innermost: success.
	base_address: fenc_111
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_2(D)
	Access function 0: {{0B, +, 16}_5, +, 1}_6
Creating dr for *_64
analyze_innermost: success.
	base_address: pix0_112
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix0_3(D)
	Access function 0: {{0B, +, pretmp_169}_5, +, 1}_6
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:60:1: note: analyze in outer-loop: *fenc_111
common/pixel.c:60:1: note: 	outer base_address: fenc_2(D)
	outer offset from base address: 0
	outer constant offset from base address: 0
	outer step: 16
	outer aligned to: 128
common/pixel.c:60:1: note: got vectype for stmt: _61 = *_60;
vector(16) unsigned char
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:60:1: note: analyze in outer-loop: *pix0_112
common/pixel.c:60:1: note: failed: evolution of base is not affine.
common/pixel.c:60:1: note: bad data references.

Analyzing loop at common/pixel.c:60
common/pixel.c:60:1: note: ===== analyze_loop_nest =====
common/pixel.c:60:1: note: === vect_analyze_loop_form ===
common/pixel.c:60:1: note: === get_loop_niters ===
common/pixel.c:60:1: note: === vect_analyze_data_refs ===
Creating dr for *_60
analyze_innermost: success.
	base_address: fenc_111
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_111
	Access function 0: {0B, +, 1}_6
Creating dr for *_64
analyze_innermost: success.
	base_address: pix0_112
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix0_112
	Access function 0: {0B, +, 1}_6
common/pixel.c:60:1: note: got vectype for stmt: _61 = *_60;
vector(16) unsigned char
common/pixel.c:60:1: note: got vectype for stmt: _65 = *_64;
vector(16) unsigned char
common/pixel.c:60:1: note: === vect_analyze_scalar_cycles ===
common/pixel.c:60:1: note: Analyze phi: x_110 = PHI <x_71(3), 0(7)>

common/pixel.c:60:1: note: Access function of PHI: {0, +, 1}_6
common/pixel.c:60:1: note: step: 1,  init: 0
common/pixel.c:60:1: note: Detected induction.
common/pixel.c:60:1: note: Analyze phi: i_sum_113 = PHI <i_sum_70(3), i_sum_115(7)>

common/pixel.c:60:1: note: Access function of PHI: {i_sum_115, +, _68}_6
common/pixel.c:60:1: note: step: _68,  init: i_sum_115
common/pixel.c:60:1: note: step unknown.
common/pixel.c:60:1: note: Analyze phi: ivtmp_154 = PHI <ivtmp_153(3), 16(7)>

common/pixel.c:60:1: note: Access function of PHI: {16, +, 4294967295}_6
common/pixel.c:60:1: note: step: 4294967295,  init: 16
common/pixel.c:60:1: note: Detected induction.
common/pixel.c:60:1: note: Analyze phi: i_sum_113 = PHI <i_sum_70(3), i_sum_115(7)>

common/pixel.c:60:1: note: detected reduction: i_sum_70 = _68 + i_sum_113;

common/pixel.c:60:1: note: Detected reduction.
common/pixel.c:60:1: note: === vect_pattern_recog ===
common/pixel.c:60:1: note: vect_is_simple_use: operand _68
common/pixel.c:60:1: note: def_stmt: _68 = ABS_EXPR <_67>;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: vect_is_simple_use: operand _68
common/pixel.c:60:1: note: def_stmt: _68 = ABS_EXPR <_67>;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: vect_is_simple_use: operand _68
common/pixel.c:60:1: note: def_stmt: _68 = ABS_EXPR <_67>;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: vect_is_simple_use: operand _62
common/pixel.c:60:1: note: def_stmt: _62 = (int) _61;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: vect_is_simple_use: operand _61
common/pixel.c:60:1: note: def_stmt: _61 = *_60;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: vect_is_simple_use: operand _66
common/pixel.c:60:1: note: def_stmt: _66 = (int) _65;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: vect_is_simple_use: operand _65
common/pixel.c:60:1: note: def_stmt: _65 = *_64;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: vect_recog_sad_pattern: detected: patt_98 = SAD_EXPR <_61, _65, i_sum_113>;

common/pixel.c:60:1: note: pattern recognized: patt_98 = SAD_EXPR <_61, _65, i_sum_113>;
common/pixel.c:60:1: note: === vect_analyze_data_ref_accesses ===
common/pixel.c:60:1: note: === vect_mark_stmts_to_be_vectorized ===
common/pixel.c:60:1: note: init: phi relevant? x_110 = PHI <x_71(3), 0(7)>
common/pixel.c:60:1: note: init: phi relevant? i_sum_113 = PHI <i_sum_70(3), i_sum_115(7)>
common/pixel.c:60:1: note: init: phi relevant? ivtmp_154 = PHI <ivtmp_153(3), 16(7)>
common/pixel.c:60:1: note: init: stmt relevant? # DEBUG x => x_110
common/pixel.c:60:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_113
common/pixel.c:60:1: note: init: stmt relevant? _58 = (sizetype) x_110;
common/pixel.c:60:1: note: init: stmt relevant? _60 = fenc_111 + _58;
common/pixel.c:60:1: note: init: stmt relevant? _61 = *_60;
common/pixel.c:60:1: note: init: stmt relevant? _62 = (int) _61;
common/pixel.c:60:1: note: init: stmt relevant? _64 = pix0_112 + _58;
common/pixel.c:60:1: note: init: stmt relevant? _65 = *_64;
common/pixel.c:60:1: note: init: stmt relevant? _66 = (int) _65;
common/pixel.c:60:1: note: init: stmt relevant? _67 = _62 - _66;
common/pixel.c:60:1: note: init: stmt relevant? _68 = ABS_EXPR <_67>;
common/pixel.c:60:1: note: init: stmt relevant? i_sum_70 = _68 + i_sum_113;
common/pixel.c:60:1: note: vec_stmt_relevant_p: used out of loop.
common/pixel.c:60:1: note: mark relevant 0, live 1.
common/pixel.c:60:1: note: last stmt in pattern. don't mark relevant/live.
common/pixel.c:60:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_70
common/pixel.c:60:1: note: init: stmt relevant? x_71 = x_110 + 1;
common/pixel.c:60:1: note: init: stmt relevant? # DEBUG x => x_71
common/pixel.c:60:1: note: init: stmt relevant? # DEBUG x => x_71
common/pixel.c:60:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_70
common/pixel.c:60:1: note: init: stmt relevant? ivtmp_153 = ivtmp_154 - 1;
common/pixel.c:60:1: note: init: stmt relevant? if (ivtmp_153 != 0)
common/pixel.c:60:1: note: worklist: examine stmt: patt_98 = SAD_EXPR <_61, _65, i_sum_113>;
common/pixel.c:60:1: note: vect_is_simple_use: operand _61
common/pixel.c:60:1: note: def_stmt: _61 = *_60;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: mark relevant 3, live 0.
common/pixel.c:60:1: note: vect_is_simple_use: operand _65
common/pixel.c:60:1: note: def_stmt: _65 = *_64;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: mark relevant 3, live 0.
common/pixel.c:60:1: note: vect_is_simple_use: operand i_sum_113
common/pixel.c:60:1: note: def_stmt: i_sum_113 = PHI <i_sum_70(3), i_sum_115(7)>
common/pixel.c:60:1: note: type of def: 5.
common/pixel.c:60:1: note: mark relevant 3, live 0.
common/pixel.c:60:1: note: worklist: examine stmt: i_sum_113 = PHI <i_sum_70(3), i_sum_115(7)>
common/pixel.c:60:1: note: vect_is_simple_use: operand i_sum_70
common/pixel.c:60:1: note: def_stmt: i_sum_70 = _68 + i_sum_113;
common/pixel.c:60:1: note: type of def: 5.
common/pixel.c:60:1: note: reduc-stmt defining reduc-phi in the same nest.
common/pixel.c:60:1: note: vect_is_simple_use: operand i_sum_115
common/pixel.c:60:1: note: def_stmt: i_sum_115 = PHI <i_sum_164(6), 0(2)>
common/pixel.c:60:1: note: type of def: 2.
common/pixel.c:60:1: note: def_stmt is out of loop.
common/pixel.c:60:1: note: worklist: examine stmt: _65 = *_64;
common/pixel.c:60:1: note: worklist: examine stmt: _61 = *_60;
common/pixel.c:60:1: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _61 = *_60;
  stmt_b: _65 = *_64;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _61 = *_60;
  stmt_b: _61 = *_60;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_6)
  (chrec_b = {0B, +, 1}_6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _65 = *_64;
  stmt_b: _65 = *_64;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_6)
  (chrec_b = {0B, +, 1}_6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/pixel.c:60:1: note: === vect_determine_vectorization_factor ===
common/pixel.c:60:1: note: ==> examining phi: x_110 = PHI <x_71(3), 0(7)>

common/pixel.c:60:1: note: ==> examining phi: i_sum_113 = PHI <i_sum_70(3), i_sum_115(7)>

common/pixel.c:60:1: note: get vectype for scalar type:  int
common/pixel.c:60:1: note: vectype: vector(4) int
common/pixel.c:60:1: note: nunits = 4
common/pixel.c:60:1: note: ==> examining phi: ivtmp_154 = PHI <ivtmp_153(3), 16(7)>

common/pixel.c:60:1: note: ==> examining statement: # DEBUG x => x_110

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: # DEBUG i_sum => i_sum_113

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: _58 = (sizetype) x_110;

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: _60 = fenc_111 + _58;

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: _61 = *_60;

common/pixel.c:60:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:60:1: note: vectype: vector(16) unsigned char
common/pixel.c:60:1: note: nunits = 16
common/pixel.c:60:1: note: ==> examining statement: _62 = (int) _61;

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: _64 = pix0_112 + _58;

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: _65 = *_64;

common/pixel.c:60:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:60:1: note: vectype: vector(16) unsigned char
common/pixel.c:60:1: note: nunits = 16
common/pixel.c:60:1: note: ==> examining statement: _66 = (int) _65;

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: _67 = _62 - _66;

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: _68 = ABS_EXPR <_67>;

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: i_sum_70 = _68 + i_sum_113;

common/pixel.c:60:1: note: ==> examining pattern statement: patt_98 = SAD_EXPR <_61, _65, i_sum_113>;

common/pixel.c:60:1: note: get vectype for scalar type:  int
common/pixel.c:60:1: note: vectype: vector(4) int
common/pixel.c:60:1: note: nunits = 4
common/pixel.c:60:1: note: ==> examining statement: # DEBUG i_sum => i_sum_70

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: x_71 = x_110 + 1;

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: # DEBUG x => x_71

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: # DEBUG x => x_71

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: # DEBUG i_sum => i_sum_70

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: ivtmp_153 = ivtmp_154 - 1;

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: if (ivtmp_153 != 0)

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: vectorization factor = 16
common/pixel.c:60:1: note: === vect_analyze_data_refs_alignment ===
common/pixel.c:60:1: note: vect_compute_data_ref_alignment:
common/pixel.c:60:1: note: can't force alignment of ref: *_60
common/pixel.c:60:1: note: vect_compute_data_ref_alignment:
common/pixel.c:60:1: note: can't force alignment of ref: *_64
common/pixel.c:60:1: note: === vect_prune_runtime_alias_test_list ===
common/pixel.c:60:1: note: === vect_enhance_data_refs_alignment ===
common/pixel.c:60:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:60:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:60:1: note: vect_can_advance_ivs_p:
common/pixel.c:60:1: note: Analyze phi: x_110 = PHI <x_71(3), 0(7)>

common/pixel.c:60:1: note: Analyze phi: i_sum_113 = PHI <i_sum_70(3), i_sum_115(7)>

common/pixel.c:60:1: note: reduc phi. skip.
common/pixel.c:60:1: note: Analyze phi: ivtmp_154 = PHI <ivtmp_153(3), 16(7)>

common/pixel.c:60:1: note: Vectorizing an unaligned access.
common/pixel.c:60:1: note: Vectorizing an unaligned access.
common/pixel.c:60:1: note: === vect_analyze_slp ===
common/pixel.c:60:1: note: === vect_make_slp_decision ===
common/pixel.c:60:1: note: === vect_detect_hybrid_slp ===
common/pixel.c:60:1: note: === vect_analyze_loop_operations ===
common/pixel.c:60:1: note: examining phi: x_110 = PHI <x_71(3), 0(7)>

common/pixel.c:60:1: note: examining phi: i_sum_113 = PHI <i_sum_70(3), i_sum_115(7)>

common/pixel.c:60:1: note: examining phi: ivtmp_154 = PHI <ivtmp_153(3), 16(7)>

common/pixel.c:60:1: note: ==> examining statement: # DEBUG x => x_110
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: # DEBUG i_sum => i_sum_113
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: _58 = (sizetype) x_110;
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: _60 = fenc_111 + _58;
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: _61 = *_60;
common/pixel.c:60:1: note: vect_is_simple_use: operand *_60
common/pixel.c:60:1: note: not ssa-name.
common/pixel.c:60:1: note: use not simple.
common/pixel.c:60:1: note: vect_is_simple_use: operand *_60
common/pixel.c:60:1: note: not ssa-name.
common/pixel.c:60:1: note: use not simple.
common/pixel.c:60:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:60:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:60:1: note: ==> examining statement: _62 = (int) _61;
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: _64 = pix0_112 + _58;
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: _65 = *_64;
common/pixel.c:60:1: note: vect_is_simple_use: operand *_64
common/pixel.c:60:1: note: not ssa-name.
common/pixel.c:60:1: note: use not simple.
common/pixel.c:60:1: note: vect_is_simple_use: operand *_64
common/pixel.c:60:1: note: not ssa-name.
common/pixel.c:60:1: note: use not simple.
common/pixel.c:60:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:60:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:60:1: note: ==> examining statement: _66 = (int) _65;
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: _67 = _62 - _66;
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: _68 = ABS_EXPR <_67>;
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: i_sum_70 = _68 + i_sum_113;
common/pixel.c:60:1: note: ==> examining pattern statement: patt_98 = SAD_EXPR <_61, _65, i_sum_113>;
common/pixel.c:60:1: note: vect_is_simple_use: operand _61
common/pixel.c:60:1: note: def_stmt: _61 = *_60;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: vect_is_simple_use: operand _65
common/pixel.c:60:1: note: def_stmt: _65 = *_64;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: vect_is_simple_use: operand i_sum_113
common/pixel.c:60:1: note: def_stmt: i_sum_113 = PHI <i_sum_70(3), i_sum_115(7)>
common/pixel.c:60:1: note: type of def: 5.
common/pixel.c:60:1: note: detected reduction: i_sum_70 = _68 + i_sum_113;

common/pixel.c:60:1: note: reduc op not supported by target.
vect_model_reduction_cost: inside_cost = 1, prologue_cost = 1, epilogue_cost = 5 .
common/pixel.c:60:1: note: ==> examining statement: # DEBUG i_sum => i_sum_70
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: x_71 = x_110 + 1;
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: # DEBUG x => x_71
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: # DEBUG x => x_71
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: # DEBUG i_sum => i_sum_70
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: ivtmp_153 = ivtmp_154 - 1;
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: if (ivtmp_153 != 0)
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: vectorization_factor = 16, niters = 16
common/pixel.c:60:1: note: === vect_update_slp_costs_according_to_vf ===
common/pixel.c:60:1: note: Cost model analysis: 
  Vector inside of loop cost: 5
  Vector prologue cost: 1
  Vector epilogue cost: 5
  Scalar iteration cost: 3
  Scalar outside cost: 0
  Vector outside cost: 6
  prologue iterations: 0
  epilogue iterations: 0
  Calculated minimum iters for profitability: 3
common/pixel.c:60:1: note:   Runtime profitability threshold = 15
common/pixel.c:60:1: note:   Static estimate profitability threshold = 15
common/pixel.c:60:1: note: loop vectorized
common/pixel.c:60:1: note: === vec_transform_loop ===
common/pixel.c:60:1: note: ------>vectorizing phi: x_110 = PHI <x_71(3), 0(23)>

common/pixel.c:60:1: note: ------>vectorizing phi: i_sum_113 = PHI <i_sum_70(3), i_sum_115(23)>

common/pixel.c:60:1: note: multiple-types.
common/pixel.c:60:1: note: ------>vectorizing phi: ivtmp_154 = PHI <ivtmp_153(3), 16(23)>

common/pixel.c:60:1: note: ------>vectorizing statement: # DEBUG x => x_110

common/pixel.c:60:1: note: ------>vectorizing statement: # DEBUG i_sum => i_sum_113

common/pixel.c:60:1: note: ------>vectorizing statement: _58 = (sizetype) x_110;

common/pixel.c:60:1: note: ------>vectorizing statement: _60 = fenc_111 + _58;

common/pixel.c:60:1: note: ------>vectorizing statement: _61 = *_60;

common/pixel.c:60:1: note: transform statement.
common/pixel.c:60:1: note: transform load. ncopies = 1
common/pixel.c:60:1: note: create vector_type-pointer variable to type: vector(16) unsigned char  vectorizing a pointer ref: *fenc_111
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:60:1: note: created vectp_fenc.711_97
common/pixel.c:60:1: note: add new stmt: vect__61.712_94 = MEM[(uint8_t *)vectp_fenc.710_96];
common/pixel.c:60:1: note: ------>vectorizing statement: _62 = (int) _61;

common/pixel.c:60:1: note: ------>vectorizing statement: _64 = pix0_112 + _58;

common/pixel.c:60:1: note: ------>vectorizing statement: _65 = *_64;

common/pixel.c:60:1: note: transform statement.
common/pixel.c:60:1: note: transform load. ncopies = 1
common/pixel.c:60:1: note: create vector_type-pointer variable to type: vector(16) unsigned char  vectorizing a pointer ref: *pix0_112
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:60:1: note: created vectp_pix0.714_93
common/pixel.c:60:1: note: add new stmt: vect__65.715_90 = MEM[(uint8_t *)vectp_pix0.713_92];
common/pixel.c:60:1: note: ------>vectorizing statement: _66 = (int) _65;

common/pixel.c:60:1: note: ------>vectorizing statement: _67 = _62 - _66;

common/pixel.c:60:1: note: ------>vectorizing statement: _68 = ABS_EXPR <_67>;

common/pixel.c:60:1: note: ------>vectorizing statement: i_sum_70 = _68 + i_sum_113;

common/pixel.c:60:1: note: multiple-types.
common/pixel.c:60:1: note: transform statement.
common/pixel.c:60:1: note: vect_is_simple_use: operand _61
common/pixel.c:60:1: note: def_stmt: _61 = *_60;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: vect_is_simple_use: operand _65
common/pixel.c:60:1: note: def_stmt: _65 = *_64;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: vect_is_simple_use: operand i_sum_113
common/pixel.c:60:1: note: def_stmt: i_sum_113 = PHI <i_sum_70(3), i_sum_115(23)>
common/pixel.c:60:1: note: type of def: 5.
common/pixel.c:60:1: note: detected reduction: i_sum_70 = _68 + i_sum_113;

common/pixel.c:60:1: note: reduc op not supported by target.
common/pixel.c:60:1: note: transform reduction.
common/pixel.c:60:1: note: vect_get_vec_def_for_operand: _61
common/pixel.c:60:1: note: vect_is_simple_use: operand _61
common/pixel.c:60:1: note: def_stmt: _61 = *_60;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: def =  _61
  def_stmt =  _61 = *_60;
common/pixel.c:60:1: note: vect_get_vec_def_for_operand: _65
common/pixel.c:60:1: note: vect_is_simple_use: operand _65
common/pixel.c:60:1: note: def_stmt: _65 = *_64;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: def =  _65
  def_stmt =  _65 = *_64;
common/pixel.c:60:1: note: add new stmt: vect_patt_98.716_88 = SAD_EXPR <vect__61.712_94, vect__65.715_90, vect_patt_98.716_89>;
common/pixel.c:60:1: note: vect_is_simple_use: operand i_sum_115
common/pixel.c:60:1: note: def_stmt: i_sum_115 = PHI <i_sum_164(6), 0(2)>
common/pixel.c:60:1: note: type of def: 2.
common/pixel.c:60:1: note: vect_get_vec_def_for_operand: i_sum_113
common/pixel.c:60:1: note: vect_is_simple_use: operand i_sum_113
common/pixel.c:60:1: note: def_stmt: i_sum_113 = PHI <i_sum_70(3), i_sum_115(23)>
common/pixel.c:60:1: note: type of def: 5.
common/pixel.c:60:1: note: def =  i_sum_113
  def_stmt =  i_sum_113 = PHI <i_sum_70(3), i_sum_115(23)>
common/pixel.c:60:1: note: transform reduction: created def-use cycle: vect_patt_98.716_89 = PHI <vect_patt_98.716_88(3), { 0, 0, 0, 0 }(23)>

vect_patt_98.716_88 = SAD_EXPR <vect__61.712_94, vect__65.715_90, vect_patt_98.716_89>;

common/pixel.c:60:1: note: Reduce using vector shifts
common/pixel.c:60:1: note: extract scalar result
common/pixel.c:60:1: note: ------>vectorizing statement: # DEBUG i_sum => i_sum_70

common/pixel.c:60:1: note: ------>vectorizing statement: x_71 = x_110 + 1;

common/pixel.c:60:1: note: ------>vectorizing statement: # DEBUG x => x_71

common/pixel.c:60:1: note: ------>vectorizing statement: # DEBUG x => x_71

common/pixel.c:60:1: note: ------>vectorizing statement: # DEBUG i_sum => i_sum_70

common/pixel.c:60:1: note: ------>vectorizing statement: ivtmp_153 = ivtmp_154 - 1;

common/pixel.c:60:1: note: ------>vectorizing statement: vectp_fenc.710_95 = vectp_fenc.710_96 + 16;

common/pixel.c:60:1: note: ------>vectorizing statement: vectp_pix0.713_91 = vectp_pix0.713_92 + 16;

common/pixel.c:60:1: note: ------>vectorizing statement: if (ivtmp_153 != 0)


loop at common/pixel.c:60: if (ivtmp_77 < 1)

;; Scaling loop 6 with scale 0.062500, bounding iterations to 1 from guessed 16
;; guessed iterations are now 1
common/pixel.c:60:1: note: LOOP VECTORIZED

common/pixel.c:384:1: note: vectorized 3 loops in function.
Merging blocks 7 and 23
Merging blocks 13 and 22
Merging blocks 19 and 21
x264_pixel_sad_x3_16x8 (uint8_t * fenc, uint8_t * pix0, uint8_t * pix1, uint8_t * pix2, int i_stride, int * scores)
{
  int vect_i_sum_70.719;
  vector(4) int vect_i_sum_70.718;
  int stmp_i_sum_70.717;
  vector(4) int vect_patt_98.716;
  vector(16) unsigned char vect__65.715;
  vector(16) unsigned char * vectp_pix0.714;
  vector(16) unsigned char * vectp_pix0.713;
  vector(16) unsigned char vect__61.712;
  vector(16) unsigned char * vectp_fenc.711;
  vector(16) unsigned char * vectp_fenc.710;
  int vect_i_sum_48.709;
  vector(4) int vect_i_sum_48.708;
  int stmp_i_sum_48.707;
  vector(4) int vect_patt_130.706;
  vector(16) unsigned char vect__43.705;
  vector(16) unsigned char * vectp_pix1.704;
  vector(16) unsigned char * vectp_pix1.703;
  vector(16) unsigned char vect__39.702;
  vector(16) unsigned char * vectp_fenc.701;
  vector(16) unsigned char * vectp_fenc.700;
  int vect_i_sum_26.699;
  vector(4) int vect_i_sum_26.698;
  int stmp_i_sum_26.697;
  vector(4) int vect_patt_150.696;
  vector(16) unsigned char vect__21.695;
  vector(16) unsigned char * vectp_pix2.694;
  vector(16) unsigned char * vectp_pix2.693;
  vector(16) unsigned char vect__17.692;
  vector(16) unsigned char * vectp_fenc.691;
  vector(16) unsigned char * vectp_fenc.690;
  int i_sum;
  int x;
  int y;
  int i_sum;
  int x;
  int y;
  int i_sum;
  int x;
  int y;
  sizetype _10;
  uint8_t * _16;
  unsigned char _17;
  int _18;
  uint8_t * _20;
  unsigned char _21;
  int _22;
  int _23;
  int _24;
  sizetype _36;
  uint8_t * _38;
  unsigned char _39;
  int _40;
  uint8_t * _42;
  unsigned char _43;
  int _44;
  int _45;
  int _46;
  sizetype _58;
  uint8_t * _60;
  unsigned char _61;
  int _62;
  uint8_t * _64;
  unsigned char _65;
  int _66;
  int _67;
  int _68;
  unsigned int ivtmp_77;
  unsigned int ivtmp_80;
  unsigned int ivtmp_99;
  unsigned int ivtmp_100;
  unsigned int ivtmp_131;
  unsigned int ivtmp_132;
  unsigned int ivtmp_151;
  unsigned int ivtmp_152;
  unsigned int ivtmp_153;
  unsigned int ivtmp_154;
  unsigned int ivtmp_155;
  unsigned int ivtmp_156;
  unsigned int ivtmp_157;
  unsigned int ivtmp_158;
  unsigned int ivtmp_159;
  unsigned int ivtmp_160;
  unsigned int ivtmp_161;
  unsigned int ivtmp_162;
  sizetype pretmp_169;

  <bb 2>:
  # DEBUG pix1 => fenc_2(D)
  # DEBUG i_stride_pix1 => 16
  # DEBUG pix2 => pix0_3(D)
  # DEBUG i_stride_pix2 => i_stride_4(D)
  # DEBUG i_sum => 0
  # DEBUG y => 0
  # DEBUG y => 0
  # DEBUG i_sum => 0
  # DEBUG pix2 => pix0_3(D)
  # DEBUG pix1 => fenc_2(D)
  pretmp_169 = (sizetype) i_stride_4(D);
  goto <bb 7>;

  <bb 3>:

  <bb 4>:
  # x_110 = PHI <x_71(3), 0(7)>
  # i_sum_113 = PHI <i_sum_70(3), i_sum_115(7)>
  # ivtmp_154 = PHI <ivtmp_153(3), 16(7)>
  # vectp_fenc.710_96 = PHI <vectp_fenc.710_95(3), vectp_fenc.711_97(7)>
  # vectp_pix0.713_92 = PHI <vectp_pix0.713_91(3), vectp_pix0.714_93(7)>
  # vect_patt_98.716_89 = PHI <vect_patt_98.716_88(3), { 0, 0, 0, 0 }(7)>
  # ivtmp_80 = PHI <ivtmp_77(3), 0(7)>
  # DEBUG x => x_110
  # DEBUG i_sum => i_sum_113
  _58 = (sizetype) x_110;
  _60 = fenc_111 + _58;
  vect__61.712_94 = MEM[(uint8_t *)vectp_fenc.710_96];
  _61 = *_60;
  _62 = (int) _61;
  _64 = pix0_112 + _58;
  vect__65.715_90 = MEM[(uint8_t *)vectp_pix0.713_92];
  _65 = *_64;
  _66 = (int) _65;
  _67 = _62 - _66;
  _68 = ABS_EXPR <_67>;
  vect_patt_98.716_88 = SAD_EXPR <vect__61.712_94, vect__65.715_90, vect_patt_98.716_89>;
  i_sum_70 = _68 + i_sum_113;
  # DEBUG i_sum => i_sum_70
  x_71 = x_110 + 1;
  # DEBUG x => x_71
  # DEBUG x => x_71
  # DEBUG i_sum => i_sum_70
  ivtmp_153 = ivtmp_154 - 1;
  vectp_fenc.710_95 = vectp_fenc.710_96 + 16;
  vectp_pix0.713_91 = vectp_pix0.713_92 + 16;
  ivtmp_77 = ivtmp_80 + 1;
  if (ivtmp_77 < 1)
    goto <bb 3>;
  else
    goto <bb 5>;

  <bb 5>:
  # i_sum_164 = PHI <i_sum_70(4)>
  # vect_patt_98.716_87 = PHI <vect_patt_98.716_88(4)>
  vect_i_sum_70.718_86 = VEC_PERM_EXPR <vect_patt_98.716_87, { 0, 0, 0, 0 }, { 2, 3, 4, 5 }>;
  vect_i_sum_70.718_85 = vect_i_sum_70.718_86 + vect_patt_98.716_87;
  vect_i_sum_70.718_84 = VEC_PERM_EXPR <vect_i_sum_70.718_85, { 0, 0, 0, 0 }, { 1, 2, 3, 4 }>;
  vect_i_sum_70.718_83 = vect_i_sum_70.718_84 + vect_i_sum_70.718_85;
  stmp_i_sum_70.717_82 = BIT_FIELD_REF <vect_i_sum_70.718_83, 32, 0>;
  vect_i_sum_70.719_81 = stmp_i_sum_70.717_82 + i_sum_115;
  fenc_72 = fenc_111 + 16;
  # DEBUG pix1 => fenc_72
  pix0_74 = pix0_112 + pretmp_169;
  # DEBUG pix2 => pix0_74
  y_76 = y_114 + 1;
  # DEBUG y => y_76
  # DEBUG y => y_76
  # DEBUG i_sum => vect_i_sum_70.719_81
  # DEBUG pix2 => pix0_74
  # DEBUG pix1 => fenc_72
  ivtmp_151 = ivtmp_152 - 1;
  if (ivtmp_151 != 0)
    goto <bb 6>;
  else
    goto <bb 8>;

  <bb 6>:

  <bb 7>:
  # fenc_111 = PHI <fenc_72(6), fenc_2(D)(2)>
  # pix0_112 = PHI <pix0_74(6), pix0_3(D)(2)>
  # y_114 = PHI <y_76(6), 0(2)>
  # i_sum_115 = PHI <vect_i_sum_70.719_81(6), 0(2)>
  # ivtmp_152 = PHI <ivtmp_151(6), 8(2)>
  # DEBUG y => y_114
  # DEBUG i_sum => i_sum_115
  # DEBUG pix2 => pix0_112
  # DEBUG pix1 => fenc_111
  # DEBUG x => 0
  # DEBUG i_sum => i_sum_115
  vectp_fenc.711_97 = fenc_111;
  vectp_pix0.714_93 = pix0_112;
  goto <bb 4>;

  <bb 8>:
  # i_sum_163 = PHI <vect_i_sum_70.719_81(5)>
  # DEBUG pix1 => NULL
  # DEBUG i_stride_pix1 => NULL
  # DEBUG pix2 => NULL
  # DEBUG i_stride_pix2 => NULL
  # DEBUG y => NULL
  # DEBUG x => NULL
  # DEBUG i_sum => NULL
  *scores_6(D) = i_sum_163;
  # DEBUG pix1 => fenc_2(D)
  # DEBUG i_stride_pix1 => 16
  # DEBUG pix2 => pix1_9(D)
  # DEBUG i_stride_pix2 => i_stride_4(D)
  # DEBUG y => 0
  # DEBUG i_sum => 0
  # DEBUG pix2 => pix1_9(D)
  # DEBUG pix1 => fenc_2(D)
  goto <bb 13>;

  <bb 9>:

  <bb 10>:
  # x_104 = PHI <x_49(9), 0(13)>
  # i_sum_107 = PHI <i_sum_48(9), i_sum_109(13)>
  # ivtmp_158 = PHI <ivtmp_157(9), 16(13)>
  # vectp_fenc.700_128 = PHI <vectp_fenc.700_127(9), vectp_fenc.701_129(13)>
  # vectp_pix1.703_124 = PHI <vectp_pix1.703_123(9), vectp_pix1.704_125(13)>
  # vect_patt_130.706_121 = PHI <vect_patt_130.706_120(9), { 0, 0, 0, 0 }(13)>
  # ivtmp_100 = PHI <ivtmp_99(9), 0(13)>
  # DEBUG x => x_104
  # DEBUG i_sum => i_sum_107
  _36 = (sizetype) x_104;
  _38 = fenc_105 + _36;
  vect__39.702_126 = MEM[(uint8_t *)vectp_fenc.700_128];
  _39 = *_38;
  _40 = (int) _39;
  _42 = pix1_106 + _36;
  vect__43.705_122 = MEM[(uint8_t *)vectp_pix1.703_124];
  _43 = *_42;
  _44 = (int) _43;
  _45 = _40 - _44;
  _46 = ABS_EXPR <_45>;
  vect_patt_130.706_120 = SAD_EXPR <vect__39.702_126, vect__43.705_122, vect_patt_130.706_121>;
  i_sum_48 = _46 + i_sum_107;
  # DEBUG i_sum => i_sum_48
  x_49 = x_104 + 1;
  # DEBUG x => x_49
  # DEBUG x => x_49
  # DEBUG i_sum => i_sum_48
  ivtmp_157 = ivtmp_158 - 1;
  vectp_fenc.700_127 = vectp_fenc.700_128 + 16;
  vectp_pix1.703_123 = vectp_pix1.703_124 + 16;
  ivtmp_99 = ivtmp_100 + 1;
  if (ivtmp_99 < 1)
    goto <bb 9>;
  else
    goto <bb 11>;

  <bb 11>:
  # i_sum_166 = PHI <i_sum_48(10)>
  # vect_patt_130.706_119 = PHI <vect_patt_130.706_120(10)>
  vect_i_sum_48.708_118 = VEC_PERM_EXPR <vect_patt_130.706_119, { 0, 0, 0, 0 }, { 2, 3, 4, 5 }>;
  vect_i_sum_48.708_117 = vect_i_sum_48.708_118 + vect_patt_130.706_119;
  vect_i_sum_48.708_116 = VEC_PERM_EXPR <vect_i_sum_48.708_117, { 0, 0, 0, 0 }, { 1, 2, 3, 4 }>;
  vect_i_sum_48.708_103 = vect_i_sum_48.708_116 + vect_i_sum_48.708_117;
  stmp_i_sum_48.707_102 = BIT_FIELD_REF <vect_i_sum_48.708_103, 32, 0>;
  vect_i_sum_48.709_101 = stmp_i_sum_48.707_102 + i_sum_109;
  fenc_50 = fenc_105 + 16;
  # DEBUG pix1 => fenc_50
  pix1_52 = pix1_106 + pretmp_169;
  # DEBUG pix2 => pix1_52
  y_54 = y_108 + 1;
  # DEBUG y => y_54
  # DEBUG y => y_54
  # DEBUG i_sum => vect_i_sum_48.709_101
  # DEBUG pix2 => pix1_52
  # DEBUG pix1 => fenc_50
  ivtmp_155 = ivtmp_156 - 1;
  if (ivtmp_155 != 0)
    goto <bb 12>;
  else
    goto <bb 14>;

  <bb 12>:

  <bb 13>:
  # fenc_105 = PHI <fenc_50(12), fenc_2(D)(8)>
  # pix1_106 = PHI <pix1_52(12), pix1_9(D)(8)>
  # y_108 = PHI <y_54(12), 0(8)>
  # i_sum_109 = PHI <vect_i_sum_48.709_101(12), 0(8)>
  # ivtmp_156 = PHI <ivtmp_155(12), 8(8)>
  # DEBUG y => y_108
  # DEBUG i_sum => i_sum_109
  # DEBUG pix2 => pix1_106
  # DEBUG pix1 => fenc_105
  # DEBUG x => 0
  # DEBUG i_sum => i_sum_109
  vectp_fenc.701_129 = fenc_105;
  vectp_pix1.704_125 = pix1_106;
  goto <bb 10>;

  <bb 14>:
  # i_sum_165 = PHI <vect_i_sum_48.709_101(11)>
  # DEBUG pix1 => NULL
  # DEBUG i_stride_pix1 => NULL
  # DEBUG pix2 => NULL
  # DEBUG i_stride_pix2 => NULL
  # DEBUG y => NULL
  # DEBUG x => NULL
  # DEBUG i_sum => NULL
  MEM[(int *)scores_6(D) + 4B] = i_sum_165;
  # DEBUG pix1 => fenc_2(D)
  # DEBUG i_stride_pix1 => 16
  # DEBUG pix2 => pix2_13(D)
  # DEBUG i_stride_pix2 => i_stride_4(D)
  # DEBUG y => 0
  # DEBUG i_sum => 0
  # DEBUG pix2 => pix2_13(D)
  # DEBUG pix1 => fenc_2(D)
  goto <bb 19>;

  <bb 15>:

  <bb 16>:
  # x_8 = PHI <x_27(15), 0(19)>
  # i_sum_78 = PHI <i_sum_26(15), i_sum_12(19)>
  # ivtmp_162 = PHI <ivtmp_161(15), 16(19)>
  # vectp_fenc.690_148 = PHI <vectp_fenc.690_147(15), vectp_fenc.691_149(19)>
  # vectp_pix2.693_144 = PHI <vectp_pix2.693_143(15), vectp_pix2.694_145(19)>
  # vect_patt_150.696_141 = PHI <vect_patt_150.696_140(15), { 0, 0, 0, 0 }(19)>
  # ivtmp_132 = PHI <ivtmp_131(15), 0(19)>
  # DEBUG x => x_8
  # DEBUG i_sum => i_sum_78
  _10 = (sizetype) x_8;
  _16 = fenc_34 + _10;
  vect__17.692_146 = MEM[(uint8_t *)vectp_fenc.690_148];
  _17 = *_16;
  _18 = (int) _17;
  _20 = pix2_79 + _10;
  vect__21.695_142 = MEM[(uint8_t *)vectp_pix2.693_144];
  _21 = *_20;
  _22 = (int) _21;
  _23 = _18 - _22;
  _24 = ABS_EXPR <_23>;
  vect_patt_150.696_140 = SAD_EXPR <vect__17.692_146, vect__21.695_142, vect_patt_150.696_141>;
  i_sum_26 = _24 + i_sum_78;
  # DEBUG i_sum => i_sum_26
  x_27 = x_8 + 1;
  # DEBUG x => x_27
  # DEBUG x => x_27
  # DEBUG i_sum => i_sum_26
  ivtmp_161 = ivtmp_162 - 1;
  vectp_fenc.690_147 = vectp_fenc.690_148 + 16;
  vectp_pix2.693_143 = vectp_pix2.693_144 + 16;
  ivtmp_131 = ivtmp_132 + 1;
  if (ivtmp_131 < 1)
    goto <bb 15>;
  else
    goto <bb 17>;

  <bb 17>:
  # i_sum_168 = PHI <i_sum_26(16)>
  # vect_patt_150.696_139 = PHI <vect_patt_150.696_140(16)>
  vect_i_sum_26.698_138 = VEC_PERM_EXPR <vect_patt_150.696_139, { 0, 0, 0, 0 }, { 2, 3, 4, 5 }>;
  vect_i_sum_26.698_137 = vect_i_sum_26.698_138 + vect_patt_150.696_139;
  vect_i_sum_26.698_136 = VEC_PERM_EXPR <vect_i_sum_26.698_137, { 0, 0, 0, 0 }, { 1, 2, 3, 4 }>;
  vect_i_sum_26.698_135 = vect_i_sum_26.698_136 + vect_i_sum_26.698_137;
  stmp_i_sum_26.697_134 = BIT_FIELD_REF <vect_i_sum_26.698_135, 32, 0>;
  vect_i_sum_26.699_133 = stmp_i_sum_26.697_134 + i_sum_12;
  fenc_28 = fenc_34 + 16;
  # DEBUG pix1 => fenc_28
  pix2_30 = pix2_79 + pretmp_169;
  # DEBUG pix2 => pix2_30
  y_32 = y_56 + 1;
  # DEBUG y => y_32
  # DEBUG y => y_32
  # DEBUG i_sum => vect_i_sum_26.699_133
  # DEBUG pix2 => pix2_30
  # DEBUG pix1 => fenc_28
  ivtmp_159 = ivtmp_160 - 1;
  if (ivtmp_159 != 0)
    goto <bb 18>;
  else
    goto <bb 20>;

  <bb 18>:

  <bb 19>:
  # fenc_34 = PHI <fenc_28(18), fenc_2(D)(14)>
  # pix2_79 = PHI <pix2_30(18), pix2_13(D)(14)>
  # y_56 = PHI <y_32(18), 0(14)>
  # i_sum_12 = PHI <vect_i_sum_26.699_133(18), 0(14)>
  # ivtmp_160 = PHI <ivtmp_159(18), 8(14)>
  # DEBUG y => y_56
  # DEBUG i_sum => i_sum_12
  # DEBUG pix2 => pix2_79
  # DEBUG pix1 => fenc_34
  # DEBUG x => 0
  # DEBUG i_sum => i_sum_12
  vectp_fenc.691_149 = fenc_34;
  vectp_pix2.694_145 = pix2_79;
  goto <bb 16>;

  <bb 20>:
  # i_sum_167 = PHI <vect_i_sum_26.699_133(17)>
  # DEBUG pix1 => NULL
  # DEBUG i_stride_pix1 => NULL
  # DEBUG pix2 => NULL
  # DEBUG i_stride_pix2 => NULL
  # DEBUG y => NULL
  # DEBUG x => NULL
  # DEBUG i_sum => NULL
  MEM[(int *)scores_6(D) + 8B] = i_sum_167;
  return;

}



;; Function x264_pixel_sad_x4_16x8 (x264_pixel_sad_x4_16x8, funcdef_no=153, decl_uid=8043, cgraph_uid=153, symbol_order=196)


Analyzing loop at common/pixel.c:60
common/pixel.c:60:1: note: ===== analyze_loop_nest =====
common/pixel.c:60:1: note: === vect_analyze_loop_form ===
common/pixel.c:60:1: note: ===== analyze_loop_nest_1 =====
common/pixel.c:60:1: note: === vect_analyze_loop_form ===
common/pixel.c:60:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 2
  exit condition [15, + , 4294967295] != 0
  bounds on difference of bases: -15 ... -15
  result:
    # of iterations 15, bounded by 15
common/pixel.c:60:1: note: Considering outer-loop vectorization.
common/pixel.c:60:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 1
  exit condition [7, + , 4294967295] != 0
  bounds on difference of bases: -7 ... -7
  result:
    # of iterations 7, bounded by 7
common/pixel.c:60:1: note: === vect_analyze_data_refs ===
Creating dr for *_5
analyze_innermost: success.
	base_address: fenc_16
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_2(D)
	Access function 0: {{0B, +, 16}_1, +, 1}_2
Creating dr for *_23
analyze_innermost: success.
	base_address: pix3_103
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix3_17(D)
	Access function 0: {{0B, +, pretmp_223}_1, +, 1}_2
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:60:1: note: analyze in outer-loop: *fenc_16
common/pixel.c:60:1: note: 	outer base_address: fenc_2(D)
	outer offset from base address: 0
	outer constant offset from base address: 0
	outer step: 16
	outer aligned to: 128
common/pixel.c:60:1: note: got vectype for stmt: _20 = *_5;
vector(16) unsigned char
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:60:1: note: analyze in outer-loop: *pix3_103
common/pixel.c:60:1: note: failed: evolution of base is not affine.
common/pixel.c:60:1: note: bad data references.

Analyzing loop at common/pixel.c:60
common/pixel.c:60:1: note: ===== analyze_loop_nest =====
common/pixel.c:60:1: note: === vect_analyze_loop_form ===
common/pixel.c:60:1: note: === get_loop_niters ===
common/pixel.c:60:1: note: === vect_analyze_data_refs ===
Creating dr for *_5
analyze_innermost: success.
	base_address: fenc_16
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_16
	Access function 0: {0B, +, 1}_2
Creating dr for *_23
analyze_innermost: success.
	base_address: pix3_103
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix3_103
	Access function 0: {0B, +, 1}_2
common/pixel.c:60:1: note: got vectype for stmt: _20 = *_5;
vector(16) unsigned char
common/pixel.c:60:1: note: got vectype for stmt: _24 = *_23;
vector(16) unsigned char
common/pixel.c:60:1: note: === vect_analyze_scalar_cycles ===
common/pixel.c:60:1: note: Analyze phi: x_8 = PHI <x_30(21), 0(25)>

common/pixel.c:60:1: note: Access function of PHI: {0, +, 1}_2
common/pixel.c:60:1: note: step: 1,  init: 0
common/pixel.c:60:1: note: Detected induction.
common/pixel.c:60:1: note: Analyze phi: i_sum_59 = PHI <i_sum_29(21), i_sum_104(25)>

common/pixel.c:60:1: note: Access function of PHI: {i_sum_104, +, _27}_2
common/pixel.c:60:1: note: step: _27,  init: i_sum_104
common/pixel.c:60:1: note: step unknown.
common/pixel.c:60:1: note: Analyze phi: ivtmp_214 = PHI <ivtmp_213(21), 16(25)>

common/pixel.c:60:1: note: Access function of PHI: {16, +, 4294967295}_2
common/pixel.c:60:1: note: step: 4294967295,  init: 16
common/pixel.c:60:1: note: Detected induction.
common/pixel.c:60:1: note: Analyze phi: i_sum_59 = PHI <i_sum_29(21), i_sum_104(25)>

common/pixel.c:60:1: note: detected reduction: i_sum_29 = _27 + i_sum_59;

common/pixel.c:60:1: note: Detected reduction.
common/pixel.c:60:1: note: === vect_pattern_recog ===
common/pixel.c:60:1: note: vect_is_simple_use: operand _27
common/pixel.c:60:1: note: def_stmt: _27 = ABS_EXPR <_26>;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: vect_is_simple_use: operand _27
common/pixel.c:60:1: note: def_stmt: _27 = ABS_EXPR <_26>;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: vect_is_simple_use: operand _27
common/pixel.c:60:1: note: def_stmt: _27 = ABS_EXPR <_26>;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: vect_is_simple_use: operand _21
common/pixel.c:60:1: note: def_stmt: _21 = (int) _20;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: vect_is_simple_use: operand _20
common/pixel.c:60:1: note: def_stmt: _20 = *_5;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: vect_is_simple_use: operand _25
common/pixel.c:60:1: note: def_stmt: _25 = (int) _24;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: vect_is_simple_use: operand _24
common/pixel.c:60:1: note: def_stmt: _24 = *_23;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: vect_recog_sad_pattern: detected: patt_198 = SAD_EXPR <_20, _24, i_sum_59>;

common/pixel.c:60:1: note: pattern recognized: patt_198 = SAD_EXPR <_20, _24, i_sum_59>;
common/pixel.c:60:1: note: === vect_analyze_data_ref_accesses ===
common/pixel.c:60:1: note: === vect_mark_stmts_to_be_vectorized ===
common/pixel.c:60:1: note: init: phi relevant? x_8 = PHI <x_30(21), 0(25)>
common/pixel.c:60:1: note: init: phi relevant? i_sum_59 = PHI <i_sum_29(21), i_sum_104(25)>
common/pixel.c:60:1: note: init: phi relevant? ivtmp_214 = PHI <ivtmp_213(21), 16(25)>
common/pixel.c:60:1: note: init: stmt relevant? # DEBUG x => x_8
common/pixel.c:60:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_59
common/pixel.c:60:1: note: init: stmt relevant? _14 = (sizetype) x_8;
common/pixel.c:60:1: note: init: stmt relevant? _5 = fenc_16 + _14;
common/pixel.c:60:1: note: init: stmt relevant? _20 = *_5;
common/pixel.c:60:1: note: init: stmt relevant? _21 = (int) _20;
common/pixel.c:60:1: note: init: stmt relevant? _23 = pix3_103 + _14;
common/pixel.c:60:1: note: init: stmt relevant? _24 = *_23;
common/pixel.c:60:1: note: init: stmt relevant? _25 = (int) _24;
common/pixel.c:60:1: note: init: stmt relevant? _26 = _21 - _25;
common/pixel.c:60:1: note: init: stmt relevant? _27 = ABS_EXPR <_26>;
common/pixel.c:60:1: note: init: stmt relevant? i_sum_29 = _27 + i_sum_59;
common/pixel.c:60:1: note: vec_stmt_relevant_p: used out of loop.
common/pixel.c:60:1: note: mark relevant 0, live 1.
common/pixel.c:60:1: note: last stmt in pattern. don't mark relevant/live.
common/pixel.c:60:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_29
common/pixel.c:60:1: note: init: stmt relevant? x_30 = x_8 + 1;
common/pixel.c:60:1: note: init: stmt relevant? # DEBUG x => x_30
common/pixel.c:60:1: note: init: stmt relevant? # DEBUG x => x_30
common/pixel.c:60:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_29
common/pixel.c:60:1: note: init: stmt relevant? ivtmp_213 = ivtmp_214 - 1;
common/pixel.c:60:1: note: init: stmt relevant? if (ivtmp_213 != 0)
common/pixel.c:60:1: note: worklist: examine stmt: patt_198 = SAD_EXPR <_20, _24, i_sum_59>;
common/pixel.c:60:1: note: vect_is_simple_use: operand _20
common/pixel.c:60:1: note: def_stmt: _20 = *_5;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: mark relevant 3, live 0.
common/pixel.c:60:1: note: vect_is_simple_use: operand _24
common/pixel.c:60:1: note: def_stmt: _24 = *_23;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: mark relevant 3, live 0.
common/pixel.c:60:1: note: vect_is_simple_use: operand i_sum_59
common/pixel.c:60:1: note: def_stmt: i_sum_59 = PHI <i_sum_29(21), i_sum_104(25)>
common/pixel.c:60:1: note: type of def: 5.
common/pixel.c:60:1: note: mark relevant 3, live 0.
common/pixel.c:60:1: note: worklist: examine stmt: i_sum_59 = PHI <i_sum_29(21), i_sum_104(25)>
common/pixel.c:60:1: note: vect_is_simple_use: operand i_sum_29
common/pixel.c:60:1: note: def_stmt: i_sum_29 = _27 + i_sum_59;
common/pixel.c:60:1: note: type of def: 5.
common/pixel.c:60:1: note: reduc-stmt defining reduc-phi in the same nest.
common/pixel.c:60:1: note: vect_is_simple_use: operand i_sum_104
common/pixel.c:60:1: note: def_stmt: i_sum_104 = PHI <i_sum_222(24), 0(20)>
common/pixel.c:60:1: note: type of def: 2.
common/pixel.c:60:1: note: def_stmt is out of loop.
common/pixel.c:60:1: note: worklist: examine stmt: _24 = *_23;
common/pixel.c:60:1: note: worklist: examine stmt: _20 = *_5;
common/pixel.c:60:1: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _20 = *_5;
  stmt_b: _24 = *_23;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _20 = *_5;
  stmt_b: _20 = *_5;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_2)
  (chrec_b = {0B, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _24 = *_23;
  stmt_b: _24 = *_23;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_2)
  (chrec_b = {0B, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/pixel.c:60:1: note: === vect_determine_vectorization_factor ===
common/pixel.c:60:1: note: ==> examining phi: x_8 = PHI <x_30(21), 0(25)>

common/pixel.c:60:1: note: ==> examining phi: i_sum_59 = PHI <i_sum_29(21), i_sum_104(25)>

common/pixel.c:60:1: note: get vectype for scalar type:  int
common/pixel.c:60:1: note: vectype: vector(4) int
common/pixel.c:60:1: note: nunits = 4
common/pixel.c:60:1: note: ==> examining phi: ivtmp_214 = PHI <ivtmp_213(21), 16(25)>

common/pixel.c:60:1: note: ==> examining statement: # DEBUG x => x_8

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: # DEBUG i_sum => i_sum_59

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: _14 = (sizetype) x_8;

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: _5 = fenc_16 + _14;

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: _20 = *_5;

common/pixel.c:60:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:60:1: note: vectype: vector(16) unsigned char
common/pixel.c:60:1: note: nunits = 16
common/pixel.c:60:1: note: ==> examining statement: _21 = (int) _20;

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: _23 = pix3_103 + _14;

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: _24 = *_23;

common/pixel.c:60:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:60:1: note: vectype: vector(16) unsigned char
common/pixel.c:60:1: note: nunits = 16
common/pixel.c:60:1: note: ==> examining statement: _25 = (int) _24;

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: _26 = _21 - _25;

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: _27 = ABS_EXPR <_26>;

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: i_sum_29 = _27 + i_sum_59;

common/pixel.c:60:1: note: ==> examining pattern statement: patt_198 = SAD_EXPR <_20, _24, i_sum_59>;

common/pixel.c:60:1: note: get vectype for scalar type:  int
common/pixel.c:60:1: note: vectype: vector(4) int
common/pixel.c:60:1: note: nunits = 4
common/pixel.c:60:1: note: ==> examining statement: # DEBUG i_sum => i_sum_29

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: x_30 = x_8 + 1;

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: # DEBUG x => x_30

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: # DEBUG x => x_30

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: # DEBUG i_sum => i_sum_29

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: ivtmp_213 = ivtmp_214 - 1;

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: if (ivtmp_213 != 0)

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: vectorization factor = 16
common/pixel.c:60:1: note: === vect_analyze_data_refs_alignment ===
common/pixel.c:60:1: note: vect_compute_data_ref_alignment:
common/pixel.c:60:1: note: can't force alignment of ref: *_5
common/pixel.c:60:1: note: vect_compute_data_ref_alignment:
common/pixel.c:60:1: note: can't force alignment of ref: *_23
common/pixel.c:60:1: note: === vect_prune_runtime_alias_test_list ===
common/pixel.c:60:1: note: === vect_enhance_data_refs_alignment ===
common/pixel.c:60:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:60:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:60:1: note: vect_can_advance_ivs_p:
common/pixel.c:60:1: note: Analyze phi: x_8 = PHI <x_30(21), 0(25)>

common/pixel.c:60:1: note: Analyze phi: i_sum_59 = PHI <i_sum_29(21), i_sum_104(25)>

common/pixel.c:60:1: note: reduc phi. skip.
common/pixel.c:60:1: note: Analyze phi: ivtmp_214 = PHI <ivtmp_213(21), 16(25)>

common/pixel.c:60:1: note: Vectorizing an unaligned access.
common/pixel.c:60:1: note: Vectorizing an unaligned access.
common/pixel.c:60:1: note: === vect_analyze_slp ===
common/pixel.c:60:1: note: === vect_make_slp_decision ===
common/pixel.c:60:1: note: === vect_detect_hybrid_slp ===
common/pixel.c:60:1: note: === vect_analyze_loop_operations ===
common/pixel.c:60:1: note: examining phi: x_8 = PHI <x_30(21), 0(25)>

common/pixel.c:60:1: note: examining phi: i_sum_59 = PHI <i_sum_29(21), i_sum_104(25)>

common/pixel.c:60:1: note: examining phi: ivtmp_214 = PHI <ivtmp_213(21), 16(25)>

common/pixel.c:60:1: note: ==> examining statement: # DEBUG x => x_8
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: # DEBUG i_sum => i_sum_59
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: _14 = (sizetype) x_8;
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: _5 = fenc_16 + _14;
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: _20 = *_5;
common/pixel.c:60:1: note: vect_is_simple_use: operand *_5
common/pixel.c:60:1: note: not ssa-name.
common/pixel.c:60:1: note: use not simple.
common/pixel.c:60:1: note: vect_is_simple_use: operand *_5
common/pixel.c:60:1: note: not ssa-name.
common/pixel.c:60:1: note: use not simple.
common/pixel.c:60:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:60:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:60:1: note: ==> examining statement: _21 = (int) _20;
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: _23 = pix3_103 + _14;
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: _24 = *_23;
common/pixel.c:60:1: note: vect_is_simple_use: operand *_23
common/pixel.c:60:1: note: not ssa-name.
common/pixel.c:60:1: note: use not simple.
common/pixel.c:60:1: note: vect_is_simple_use: operand *_23
common/pixel.c:60:1: note: not ssa-name.
common/pixel.c:60:1: note: use not simple.
common/pixel.c:60:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:60:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:60:1: note: ==> examining statement: _25 = (int) _24;
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: _26 = _21 - _25;
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: _27 = ABS_EXPR <_26>;
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: i_sum_29 = _27 + i_sum_59;
common/pixel.c:60:1: note: ==> examining pattern statement: patt_198 = SAD_EXPR <_20, _24, i_sum_59>;
common/pixel.c:60:1: note: vect_is_simple_use: operand _20
common/pixel.c:60:1: note: def_stmt: _20 = *_5;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: vect_is_simple_use: operand _24
common/pixel.c:60:1: note: def_stmt: _24 = *_23;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: vect_is_simple_use: operand i_sum_59
common/pixel.c:60:1: note: def_stmt: i_sum_59 = PHI <i_sum_29(21), i_sum_104(25)>
common/pixel.c:60:1: note: type of def: 5.
common/pixel.c:60:1: note: detected reduction: i_sum_29 = _27 + i_sum_59;

common/pixel.c:60:1: note: reduc op not supported by target.
vect_model_reduction_cost: inside_cost = 1, prologue_cost = 1, epilogue_cost = 5 .
common/pixel.c:60:1: note: ==> examining statement: # DEBUG i_sum => i_sum_29
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: x_30 = x_8 + 1;
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: # DEBUG x => x_30
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: # DEBUG x => x_30
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: # DEBUG i_sum => i_sum_29
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: ivtmp_213 = ivtmp_214 - 1;
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: if (ivtmp_213 != 0)
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: vectorization_factor = 16, niters = 16
common/pixel.c:60:1: note: === vect_update_slp_costs_according_to_vf ===
common/pixel.c:60:1: note: Cost model analysis: 
  Vector inside of loop cost: 5
  Vector prologue cost: 1
  Vector epilogue cost: 5
  Scalar iteration cost: 3
  Scalar outside cost: 0
  Vector outside cost: 6
  prologue iterations: 0
  epilogue iterations: 0
  Calculated minimum iters for profitability: 3
common/pixel.c:60:1: note:   Runtime profitability threshold = 15
common/pixel.c:60:1: note:   Static estimate profitability threshold = 15
common/pixel.c:60:1: note: loop vectorized
common/pixel.c:60:1: note: === vec_transform_loop ===
common/pixel.c:60:1: note: ------>vectorizing phi: x_8 = PHI <x_30(21), 0(27)>

common/pixel.c:60:1: note: ------>vectorizing phi: i_sum_59 = PHI <i_sum_29(21), i_sum_104(27)>

common/pixel.c:60:1: note: multiple-types.
common/pixel.c:60:1: note: ------>vectorizing phi: ivtmp_214 = PHI <ivtmp_213(21), 16(27)>

common/pixel.c:60:1: note: ------>vectorizing statement: # DEBUG x => x_8

common/pixel.c:60:1: note: ------>vectorizing statement: # DEBUG i_sum => i_sum_59

common/pixel.c:60:1: note: ------>vectorizing statement: _14 = (sizetype) x_8;

common/pixel.c:60:1: note: ------>vectorizing statement: _5 = fenc_16 + _14;

common/pixel.c:60:1: note: ------>vectorizing statement: _20 = *_5;

common/pixel.c:60:1: note: transform statement.
common/pixel.c:60:1: note: transform load. ncopies = 1
common/pixel.c:60:1: note: create vector_type-pointer variable to type: vector(16) unsigned char  vectorizing a pointer ref: *fenc_16
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:60:1: note: created vectp_fenc.723_197
common/pixel.c:60:1: note: add new stmt: vect__20.724_194 = MEM[(uint8_t *)vectp_fenc.722_196];
common/pixel.c:60:1: note: ------>vectorizing statement: _21 = (int) _20;

common/pixel.c:60:1: note: ------>vectorizing statement: _23 = pix3_103 + _14;

common/pixel.c:60:1: note: ------>vectorizing statement: _24 = *_23;

common/pixel.c:60:1: note: transform statement.
common/pixel.c:60:1: note: transform load. ncopies = 1
common/pixel.c:60:1: note: create vector_type-pointer variable to type: vector(16) unsigned char  vectorizing a pointer ref: *pix3_103
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:60:1: note: created vectp_pix3.726_193
common/pixel.c:60:1: note: add new stmt: vect__24.727_190 = MEM[(uint8_t *)vectp_pix3.725_192];
common/pixel.c:60:1: note: ------>vectorizing statement: _25 = (int) _24;

common/pixel.c:60:1: note: ------>vectorizing statement: _26 = _21 - _25;

common/pixel.c:60:1: note: ------>vectorizing statement: _27 = ABS_EXPR <_26>;

common/pixel.c:60:1: note: ------>vectorizing statement: i_sum_29 = _27 + i_sum_59;

common/pixel.c:60:1: note: multiple-types.
common/pixel.c:60:1: note: transform statement.
common/pixel.c:60:1: note: vect_is_simple_use: operand _20
common/pixel.c:60:1: note: def_stmt: _20 = *_5;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: vect_is_simple_use: operand _24
common/pixel.c:60:1: note: def_stmt: _24 = *_23;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: vect_is_simple_use: operand i_sum_59
common/pixel.c:60:1: note: def_stmt: i_sum_59 = PHI <i_sum_29(21), i_sum_104(27)>
common/pixel.c:60:1: note: type of def: 5.
common/pixel.c:60:1: note: detected reduction: i_sum_29 = _27 + i_sum_59;

common/pixel.c:60:1: note: reduc op not supported by target.
common/pixel.c:60:1: note: transform reduction.
common/pixel.c:60:1: note: vect_get_vec_def_for_operand: _20
common/pixel.c:60:1: note: vect_is_simple_use: operand _20
common/pixel.c:60:1: note: def_stmt: _20 = *_5;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: def =  _20
  def_stmt =  _20 = *_5;
common/pixel.c:60:1: note: vect_get_vec_def_for_operand: _24
common/pixel.c:60:1: note: vect_is_simple_use: operand _24
common/pixel.c:60:1: note: def_stmt: _24 = *_23;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: def =  _24
  def_stmt =  _24 = *_23;
common/pixel.c:60:1: note: add new stmt: vect_patt_198.728_188 = SAD_EXPR <vect__20.724_194, vect__24.727_190, vect_patt_198.728_189>;
common/pixel.c:60:1: note: vect_is_simple_use: operand i_sum_104
common/pixel.c:60:1: note: def_stmt: i_sum_104 = PHI <i_sum_222(24), 0(20)>
common/pixel.c:60:1: note: type of def: 2.
common/pixel.c:60:1: note: vect_get_vec_def_for_operand: i_sum_59
common/pixel.c:60:1: note: vect_is_simple_use: operand i_sum_59
common/pixel.c:60:1: note: def_stmt: i_sum_59 = PHI <i_sum_29(21), i_sum_104(27)>
common/pixel.c:60:1: note: type of def: 5.
common/pixel.c:60:1: note: def =  i_sum_59
  def_stmt =  i_sum_59 = PHI <i_sum_29(21), i_sum_104(27)>
common/pixel.c:60:1: note: transform reduction: created def-use cycle: vect_patt_198.728_189 = PHI <vect_patt_198.728_188(21), { 0, 0, 0, 0 }(27)>

vect_patt_198.728_188 = SAD_EXPR <vect__20.724_194, vect__24.727_190, vect_patt_198.728_189>;

common/pixel.c:60:1: note: Reduce using vector shifts
common/pixel.c:60:1: note: extract scalar result
common/pixel.c:60:1: note: ------>vectorizing statement: # DEBUG i_sum => i_sum_29

common/pixel.c:60:1: note: ------>vectorizing statement: x_30 = x_8 + 1;

common/pixel.c:60:1: note: ------>vectorizing statement: # DEBUG x => x_30

common/pixel.c:60:1: note: ------>vectorizing statement: # DEBUG x => x_30

common/pixel.c:60:1: note: ------>vectorizing statement: # DEBUG i_sum => i_sum_29

common/pixel.c:60:1: note: ------>vectorizing statement: ivtmp_213 = ivtmp_214 - 1;

common/pixel.c:60:1: note: ------>vectorizing statement: vectp_fenc.722_195 = vectp_fenc.722_196 + 16;

common/pixel.c:60:1: note: ------>vectorizing statement: vectp_pix3.725_191 = vectp_pix3.725_192 + 16;

common/pixel.c:60:1: note: ------>vectorizing statement: if (ivtmp_213 != 0)


loop at common/pixel.c:60: if (ivtmp_179 < 1)

;; Scaling loop 2 with scale 0.062500, bounding iterations to 1 from guessed 16
;; guessed iterations are now 1
common/pixel.c:60:1: note: LOOP VECTORIZED


Analyzing loop at common/pixel.c:60
common/pixel.c:60:1: note: ===== analyze_loop_nest =====
common/pixel.c:60:1: note: === vect_analyze_loop_form ===
common/pixel.c:60:1: note: ===== analyze_loop_nest_1 =====
common/pixel.c:60:1: note: === vect_analyze_loop_form ===
common/pixel.c:60:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 4
  exit condition [15, + , 4294967295] != 0
  bounds on difference of bases: -15 ... -15
  result:
    # of iterations 15, bounded by 15
common/pixel.c:60:1: note: Considering outer-loop vectorization.
common/pixel.c:60:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 3
  exit condition [7, + , 4294967295] != 0
  bounds on difference of bases: -7 ... -7
  result:
    # of iterations 7, bounded by 7
common/pixel.c:60:1: note: === vect_analyze_data_refs ===
Creating dr for *_41
analyze_innermost: success.
	base_address: fenc_37
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_2(D)
	Access function 0: {{0B, +, 16}_3, +, 1}_4
Creating dr for *_45
analyze_innermost: success.
	base_address: pix2_137
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix2_13(D)
	Access function 0: {{0B, +, pretmp_223}_3, +, 1}_4
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:60:1: note: analyze in outer-loop: *fenc_37
common/pixel.c:60:1: note: 	outer base_address: fenc_2(D)
	outer offset from base address: 0
	outer constant offset from base address: 0
	outer step: 16
	outer aligned to: 128
common/pixel.c:60:1: note: got vectype for stmt: _42 = *_41;
vector(16) unsigned char
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:60:1: note: analyze in outer-loop: *pix2_137
common/pixel.c:60:1: note: failed: evolution of base is not affine.
common/pixel.c:60:1: note: bad data references.

Analyzing loop at common/pixel.c:60
common/pixel.c:60:1: note: ===== analyze_loop_nest =====
common/pixel.c:60:1: note: === vect_analyze_loop_form ===
common/pixel.c:60:1: note: === get_loop_niters ===
common/pixel.c:60:1: note: === vect_analyze_data_refs ===
Creating dr for *_41
analyze_innermost: success.
	base_address: fenc_37
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_37
	Access function 0: {0B, +, 1}_4
Creating dr for *_45
analyze_innermost: success.
	base_address: pix2_137
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix2_137
	Access function 0: {0B, +, 1}_4
common/pixel.c:60:1: note: got vectype for stmt: _42 = *_41;
vector(16) unsigned char
common/pixel.c:60:1: note: got vectype for stmt: _46 = *_45;
vector(16) unsigned char
common/pixel.c:60:1: note: === vect_analyze_scalar_cycles ===
common/pixel.c:60:1: note: Analyze phi: x_81 = PHI <x_52(15), 0(19)>

common/pixel.c:60:1: note: Access function of PHI: {0, +, 1}_4
common/pixel.c:60:1: note: step: 1,  init: 0
common/pixel.c:60:1: note: Detected induction.
common/pixel.c:60:1: note: Analyze phi: i_sum_138 = PHI <i_sum_51(15), i_sum_140(19)>

common/pixel.c:60:1: note: Access function of PHI: {i_sum_140, +, _49}_4
common/pixel.c:60:1: note: step: _49,  init: i_sum_140
common/pixel.c:60:1: note: step unknown.
common/pixel.c:60:1: note: Analyze phi: ivtmp_210 = PHI <ivtmp_209(15), 16(19)>

common/pixel.c:60:1: note: Access function of PHI: {16, +, 4294967295}_4
common/pixel.c:60:1: note: step: 4294967295,  init: 16
common/pixel.c:60:1: note: Detected induction.
common/pixel.c:60:1: note: Analyze phi: i_sum_138 = PHI <i_sum_51(15), i_sum_140(19)>

common/pixel.c:60:1: note: detected reduction: i_sum_51 = _49 + i_sum_138;

common/pixel.c:60:1: note: Detected reduction.
common/pixel.c:60:1: note: === vect_pattern_recog ===
common/pixel.c:60:1: note: vect_is_simple_use: operand _49
common/pixel.c:60:1: note: def_stmt: _49 = ABS_EXPR <_48>;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: vect_is_simple_use: operand _49
common/pixel.c:60:1: note: def_stmt: _49 = ABS_EXPR <_48>;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: vect_is_simple_use: operand _49
common/pixel.c:60:1: note: def_stmt: _49 = ABS_EXPR <_48>;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: vect_is_simple_use: operand _43
common/pixel.c:60:1: note: def_stmt: _43 = (int) _42;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: vect_is_simple_use: operand _42
common/pixel.c:60:1: note: def_stmt: _42 = *_41;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: vect_is_simple_use: operand _47
common/pixel.c:60:1: note: def_stmt: _47 = (int) _46;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: vect_is_simple_use: operand _46
common/pixel.c:60:1: note: def_stmt: _46 = *_45;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: vect_recog_sad_pattern: detected: patt_178 = SAD_EXPR <_42, _46, i_sum_138>;

common/pixel.c:60:1: note: pattern recognized: patt_178 = SAD_EXPR <_42, _46, i_sum_138>;
common/pixel.c:60:1: note: === vect_analyze_data_ref_accesses ===
common/pixel.c:60:1: note: === vect_mark_stmts_to_be_vectorized ===
common/pixel.c:60:1: note: init: phi relevant? x_81 = PHI <x_52(15), 0(19)>
common/pixel.c:60:1: note: init: phi relevant? i_sum_138 = PHI <i_sum_51(15), i_sum_140(19)>
common/pixel.c:60:1: note: init: phi relevant? ivtmp_210 = PHI <ivtmp_209(15), 16(19)>
common/pixel.c:60:1: note: init: stmt relevant? # DEBUG x => x_81
common/pixel.c:60:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_138
common/pixel.c:60:1: note: init: stmt relevant? _39 = (sizetype) x_81;
common/pixel.c:60:1: note: init: stmt relevant? _41 = fenc_37 + _39;
common/pixel.c:60:1: note: init: stmt relevant? _42 = *_41;
common/pixel.c:60:1: note: init: stmt relevant? _43 = (int) _42;
common/pixel.c:60:1: note: init: stmt relevant? _45 = pix2_137 + _39;
common/pixel.c:60:1: note: init: stmt relevant? _46 = *_45;
common/pixel.c:60:1: note: init: stmt relevant? _47 = (int) _46;
common/pixel.c:60:1: note: init: stmt relevant? _48 = _43 - _47;
common/pixel.c:60:1: note: init: stmt relevant? _49 = ABS_EXPR <_48>;
common/pixel.c:60:1: note: init: stmt relevant? i_sum_51 = _49 + i_sum_138;
common/pixel.c:60:1: note: vec_stmt_relevant_p: used out of loop.
common/pixel.c:60:1: note: mark relevant 0, live 1.
common/pixel.c:60:1: note: last stmt in pattern. don't mark relevant/live.
common/pixel.c:60:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_51
common/pixel.c:60:1: note: init: stmt relevant? x_52 = x_81 + 1;
common/pixel.c:60:1: note: init: stmt relevant? # DEBUG x => x_52
common/pixel.c:60:1: note: init: stmt relevant? # DEBUG x => x_52
common/pixel.c:60:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_51
common/pixel.c:60:1: note: init: stmt relevant? ivtmp_209 = ivtmp_210 - 1;
common/pixel.c:60:1: note: init: stmt relevant? if (ivtmp_209 != 0)
common/pixel.c:60:1: note: worklist: examine stmt: patt_178 = SAD_EXPR <_42, _46, i_sum_138>;
common/pixel.c:60:1: note: vect_is_simple_use: operand _42
common/pixel.c:60:1: note: def_stmt: _42 = *_41;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: mark relevant 3, live 0.
common/pixel.c:60:1: note: vect_is_simple_use: operand _46
common/pixel.c:60:1: note: def_stmt: _46 = *_45;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: mark relevant 3, live 0.
common/pixel.c:60:1: note: vect_is_simple_use: operand i_sum_138
common/pixel.c:60:1: note: def_stmt: i_sum_138 = PHI <i_sum_51(15), i_sum_140(19)>
common/pixel.c:60:1: note: type of def: 5.
common/pixel.c:60:1: note: mark relevant 3, live 0.
common/pixel.c:60:1: note: worklist: examine stmt: i_sum_138 = PHI <i_sum_51(15), i_sum_140(19)>
common/pixel.c:60:1: note: vect_is_simple_use: operand i_sum_51
common/pixel.c:60:1: note: def_stmt: i_sum_51 = _49 + i_sum_138;
common/pixel.c:60:1: note: type of def: 5.
common/pixel.c:60:1: note: reduc-stmt defining reduc-phi in the same nest.
common/pixel.c:60:1: note: vect_is_simple_use: operand i_sum_140
common/pixel.c:60:1: note: def_stmt: i_sum_140 = PHI <i_sum_220(18), 0(14)>
common/pixel.c:60:1: note: type of def: 2.
common/pixel.c:60:1: note: def_stmt is out of loop.
common/pixel.c:60:1: note: worklist: examine stmt: _46 = *_45;
common/pixel.c:60:1: note: worklist: examine stmt: _42 = *_41;
common/pixel.c:60:1: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _42 = *_41;
  stmt_b: _46 = *_45;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _42 = *_41;
  stmt_b: _42 = *_41;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_4)
  (chrec_b = {0B, +, 1}_4)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _46 = *_45;
  stmt_b: _46 = *_45;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_4)
  (chrec_b = {0B, +, 1}_4)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/pixel.c:60:1: note: === vect_determine_vectorization_factor ===
common/pixel.c:60:1: note: ==> examining phi: x_81 = PHI <x_52(15), 0(19)>

common/pixel.c:60:1: note: ==> examining phi: i_sum_138 = PHI <i_sum_51(15), i_sum_140(19)>

common/pixel.c:60:1: note: get vectype for scalar type:  int
common/pixel.c:60:1: note: vectype: vector(4) int
common/pixel.c:60:1: note: nunits = 4
common/pixel.c:60:1: note: ==> examining phi: ivtmp_210 = PHI <ivtmp_209(15), 16(19)>

common/pixel.c:60:1: note: ==> examining statement: # DEBUG x => x_81

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: # DEBUG i_sum => i_sum_138

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: _39 = (sizetype) x_81;

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: _41 = fenc_37 + _39;

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: _42 = *_41;

common/pixel.c:60:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:60:1: note: vectype: vector(16) unsigned char
common/pixel.c:60:1: note: nunits = 16
common/pixel.c:60:1: note: ==> examining statement: _43 = (int) _42;

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: _45 = pix2_137 + _39;

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: _46 = *_45;

common/pixel.c:60:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:60:1: note: vectype: vector(16) unsigned char
common/pixel.c:60:1: note: nunits = 16
common/pixel.c:60:1: note: ==> examining statement: _47 = (int) _46;

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: _48 = _43 - _47;

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: _49 = ABS_EXPR <_48>;

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: i_sum_51 = _49 + i_sum_138;

common/pixel.c:60:1: note: ==> examining pattern statement: patt_178 = SAD_EXPR <_42, _46, i_sum_138>;

common/pixel.c:60:1: note: get vectype for scalar type:  int
common/pixel.c:60:1: note: vectype: vector(4) int
common/pixel.c:60:1: note: nunits = 4
common/pixel.c:60:1: note: ==> examining statement: # DEBUG i_sum => i_sum_51

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: x_52 = x_81 + 1;

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: # DEBUG x => x_52

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: # DEBUG x => x_52

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: # DEBUG i_sum => i_sum_51

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: ivtmp_209 = ivtmp_210 - 1;

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: if (ivtmp_209 != 0)

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: vectorization factor = 16
common/pixel.c:60:1: note: === vect_analyze_data_refs_alignment ===
common/pixel.c:60:1: note: vect_compute_data_ref_alignment:
common/pixel.c:60:1: note: can't force alignment of ref: *_41
common/pixel.c:60:1: note: vect_compute_data_ref_alignment:
common/pixel.c:60:1: note: can't force alignment of ref: *_45
common/pixel.c:60:1: note: === vect_prune_runtime_alias_test_list ===
common/pixel.c:60:1: note: === vect_enhance_data_refs_alignment ===
common/pixel.c:60:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:60:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:60:1: note: vect_can_advance_ivs_p:
common/pixel.c:60:1: note: Analyze phi: x_81 = PHI <x_52(15), 0(19)>

common/pixel.c:60:1: note: Analyze phi: i_sum_138 = PHI <i_sum_51(15), i_sum_140(19)>

common/pixel.c:60:1: note: reduc phi. skip.
common/pixel.c:60:1: note: Analyze phi: ivtmp_210 = PHI <ivtmp_209(15), 16(19)>

common/pixel.c:60:1: note: Vectorizing an unaligned access.
common/pixel.c:60:1: note: Vectorizing an unaligned access.
common/pixel.c:60:1: note: === vect_analyze_slp ===
common/pixel.c:60:1: note: === vect_make_slp_decision ===
common/pixel.c:60:1: note: === vect_detect_hybrid_slp ===
common/pixel.c:60:1: note: === vect_analyze_loop_operations ===
common/pixel.c:60:1: note: examining phi: x_81 = PHI <x_52(15), 0(19)>

common/pixel.c:60:1: note: examining phi: i_sum_138 = PHI <i_sum_51(15), i_sum_140(19)>

common/pixel.c:60:1: note: examining phi: ivtmp_210 = PHI <ivtmp_209(15), 16(19)>

common/pixel.c:60:1: note: ==> examining statement: # DEBUG x => x_81
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: # DEBUG i_sum => i_sum_138
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: _39 = (sizetype) x_81;
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: _41 = fenc_37 + _39;
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: _42 = *_41;
common/pixel.c:60:1: note: vect_is_simple_use: operand *_41
common/pixel.c:60:1: note: not ssa-name.
common/pixel.c:60:1: note: use not simple.
common/pixel.c:60:1: note: vect_is_simple_use: operand *_41
common/pixel.c:60:1: note: not ssa-name.
common/pixel.c:60:1: note: use not simple.
common/pixel.c:60:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:60:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:60:1: note: ==> examining statement: _43 = (int) _42;
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: _45 = pix2_137 + _39;
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: _46 = *_45;
common/pixel.c:60:1: note: vect_is_simple_use: operand *_45
common/pixel.c:60:1: note: not ssa-name.
common/pixel.c:60:1: note: use not simple.
common/pixel.c:60:1: note: vect_is_simple_use: operand *_45
common/pixel.c:60:1: note: not ssa-name.
common/pixel.c:60:1: note: use not simple.
common/pixel.c:60:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:60:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:60:1: note: ==> examining statement: _47 = (int) _46;
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: _48 = _43 - _47;
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: _49 = ABS_EXPR <_48>;
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: i_sum_51 = _49 + i_sum_138;
common/pixel.c:60:1: note: ==> examining pattern statement: patt_178 = SAD_EXPR <_42, _46, i_sum_138>;
common/pixel.c:60:1: note: vect_is_simple_use: operand _42
common/pixel.c:60:1: note: def_stmt: _42 = *_41;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: vect_is_simple_use: operand _46
common/pixel.c:60:1: note: def_stmt: _46 = *_45;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: vect_is_simple_use: operand i_sum_138
common/pixel.c:60:1: note: def_stmt: i_sum_138 = PHI <i_sum_51(15), i_sum_140(19)>
common/pixel.c:60:1: note: type of def: 5.
common/pixel.c:60:1: note: detected reduction: i_sum_51 = _49 + i_sum_138;

common/pixel.c:60:1: note: reduc op not supported by target.
vect_model_reduction_cost: inside_cost = 1, prologue_cost = 1, epilogue_cost = 5 .
common/pixel.c:60:1: note: ==> examining statement: # DEBUG i_sum => i_sum_51
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: x_52 = x_81 + 1;
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: # DEBUG x => x_52
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: # DEBUG x => x_52
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: # DEBUG i_sum => i_sum_51
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: ivtmp_209 = ivtmp_210 - 1;
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: if (ivtmp_209 != 0)
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: vectorization_factor = 16, niters = 16
common/pixel.c:60:1: note: === vect_update_slp_costs_according_to_vf ===
common/pixel.c:60:1: note: Cost model analysis: 
  Vector inside of loop cost: 5
  Vector prologue cost: 1
  Vector epilogue cost: 5
  Scalar iteration cost: 3
  Scalar outside cost: 0
  Vector outside cost: 6
  prologue iterations: 0
  epilogue iterations: 0
  Calculated minimum iters for profitability: 3
common/pixel.c:60:1: note:   Runtime profitability threshold = 15
common/pixel.c:60:1: note:   Static estimate profitability threshold = 15
common/pixel.c:60:1: note: loop vectorized
common/pixel.c:60:1: note: === vec_transform_loop ===
common/pixel.c:60:1: note: ------>vectorizing phi: x_81 = PHI <x_52(15), 0(28)>

common/pixel.c:60:1: note: ------>vectorizing phi: i_sum_138 = PHI <i_sum_51(15), i_sum_140(28)>

common/pixel.c:60:1: note: multiple-types.
common/pixel.c:60:1: note: ------>vectorizing phi: ivtmp_210 = PHI <ivtmp_209(15), 16(28)>

common/pixel.c:60:1: note: ------>vectorizing statement: # DEBUG x => x_81

common/pixel.c:60:1: note: ------>vectorizing statement: # DEBUG i_sum => i_sum_138

common/pixel.c:60:1: note: ------>vectorizing statement: _39 = (sizetype) x_81;

common/pixel.c:60:1: note: ------>vectorizing statement: _41 = fenc_37 + _39;

common/pixel.c:60:1: note: ------>vectorizing statement: _42 = *_41;

common/pixel.c:60:1: note: transform statement.
common/pixel.c:60:1: note: transform load. ncopies = 1
common/pixel.c:60:1: note: create vector_type-pointer variable to type: vector(16) unsigned char  vectorizing a pointer ref: *fenc_37
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:60:1: note: created vectp_fenc.733_177
common/pixel.c:60:1: note: add new stmt: vect__42.734_174 = MEM[(uint8_t *)vectp_fenc.732_176];
common/pixel.c:60:1: note: ------>vectorizing statement: _43 = (int) _42;

common/pixel.c:60:1: note: ------>vectorizing statement: _45 = pix2_137 + _39;

common/pixel.c:60:1: note: ------>vectorizing statement: _46 = *_45;

common/pixel.c:60:1: note: transform statement.
common/pixel.c:60:1: note: transform load. ncopies = 1
common/pixel.c:60:1: note: create vector_type-pointer variable to type: vector(16) unsigned char  vectorizing a pointer ref: *pix2_137
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:60:1: note: created vectp_pix2.736_173
common/pixel.c:60:1: note: add new stmt: vect__46.737_170 = MEM[(uint8_t *)vectp_pix2.735_172];
common/pixel.c:60:1: note: ------>vectorizing statement: _47 = (int) _46;

common/pixel.c:60:1: note: ------>vectorizing statement: _48 = _43 - _47;

common/pixel.c:60:1: note: ------>vectorizing statement: _49 = ABS_EXPR <_48>;

common/pixel.c:60:1: note: ------>vectorizing statement: i_sum_51 = _49 + i_sum_138;

common/pixel.c:60:1: note: multiple-types.
common/pixel.c:60:1: note: transform statement.
common/pixel.c:60:1: note: vect_is_simple_use: operand _42
common/pixel.c:60:1: note: def_stmt: _42 = *_41;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: vect_is_simple_use: operand _46
common/pixel.c:60:1: note: def_stmt: _46 = *_45;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: vect_is_simple_use: operand i_sum_138
common/pixel.c:60:1: note: def_stmt: i_sum_138 = PHI <i_sum_51(15), i_sum_140(28)>
common/pixel.c:60:1: note: type of def: 5.
common/pixel.c:60:1: note: detected reduction: i_sum_51 = _49 + i_sum_138;

common/pixel.c:60:1: note: reduc op not supported by target.
common/pixel.c:60:1: note: transform reduction.
common/pixel.c:60:1: note: vect_get_vec_def_for_operand: _42
common/pixel.c:60:1: note: vect_is_simple_use: operand _42
common/pixel.c:60:1: note: def_stmt: _42 = *_41;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: def =  _42
  def_stmt =  _42 = *_41;
common/pixel.c:60:1: note: vect_get_vec_def_for_operand: _46
common/pixel.c:60:1: note: vect_is_simple_use: operand _46
common/pixel.c:60:1: note: def_stmt: _46 = *_45;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: def =  _46
  def_stmt =  _46 = *_45;
common/pixel.c:60:1: note: add new stmt: vect_patt_178.738_168 = SAD_EXPR <vect__42.734_174, vect__46.737_170, vect_patt_178.738_169>;
common/pixel.c:60:1: note: vect_is_simple_use: operand i_sum_140
common/pixel.c:60:1: note: def_stmt: i_sum_140 = PHI <i_sum_220(18), 0(14)>
common/pixel.c:60:1: note: type of def: 2.
common/pixel.c:60:1: note: vect_get_vec_def_for_operand: i_sum_138
common/pixel.c:60:1: note: vect_is_simple_use: operand i_sum_138
common/pixel.c:60:1: note: def_stmt: i_sum_138 = PHI <i_sum_51(15), i_sum_140(28)>
common/pixel.c:60:1: note: type of def: 5.
common/pixel.c:60:1: note: def =  i_sum_138
  def_stmt =  i_sum_138 = PHI <i_sum_51(15), i_sum_140(28)>
common/pixel.c:60:1: note: transform reduction: created def-use cycle: vect_patt_178.738_169 = PHI <vect_patt_178.738_168(15), { 0, 0, 0, 0 }(28)>

vect_patt_178.738_168 = SAD_EXPR <vect__42.734_174, vect__46.737_170, vect_patt_178.738_169>;

common/pixel.c:60:1: note: Reduce using vector shifts
common/pixel.c:60:1: note: extract scalar result
common/pixel.c:60:1: note: ------>vectorizing statement: # DEBUG i_sum => i_sum_51

common/pixel.c:60:1: note: ------>vectorizing statement: x_52 = x_81 + 1;

common/pixel.c:60:1: note: ------>vectorizing statement: # DEBUG x => x_52

common/pixel.c:60:1: note: ------>vectorizing statement: # DEBUG x => x_52

common/pixel.c:60:1: note: ------>vectorizing statement: # DEBUG i_sum => i_sum_51

common/pixel.c:60:1: note: ------>vectorizing statement: ivtmp_209 = ivtmp_210 - 1;

common/pixel.c:60:1: note: ------>vectorizing statement: vectp_fenc.732_175 = vectp_fenc.732_176 + 16;

common/pixel.c:60:1: note: ------>vectorizing statement: vectp_pix2.735_171 = vectp_pix2.735_172 + 16;

common/pixel.c:60:1: note: ------>vectorizing statement: if (ivtmp_209 != 0)


loop at common/pixel.c:60: if (ivtmp_159 < 1)

;; Scaling loop 4 with scale 0.062500, bounding iterations to 1 from guessed 16
;; guessed iterations are now 1
common/pixel.c:60:1: note: LOOP VECTORIZED


Analyzing loop at common/pixel.c:60
common/pixel.c:60:1: note: ===== analyze_loop_nest =====
common/pixel.c:60:1: note: === vect_analyze_loop_form ===
common/pixel.c:60:1: note: ===== analyze_loop_nest_1 =====
common/pixel.c:60:1: note: === vect_analyze_loop_form ===
common/pixel.c:60:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 6
  exit condition [15, + , 4294967295] != 0
  bounds on difference of bases: -15 ... -15
  result:
    # of iterations 15, bounded by 15
common/pixel.c:60:1: note: Considering outer-loop vectorization.
common/pixel.c:60:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 5
  exit condition [7, + , 4294967295] != 0
  bounds on difference of bases: -7 ... -7
  result:
    # of iterations 7, bounded by 7
common/pixel.c:60:1: note: === vect_analyze_data_refs ===
Creating dr for *_63
analyze_innermost: success.
	base_address: fenc_142
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_2(D)
	Access function 0: {{0B, +, 16}_5, +, 1}_6
Creating dr for *_67
analyze_innermost: success.
	base_address: pix1_143
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix1_9(D)
	Access function 0: {{0B, +, pretmp_223}_5, +, 1}_6
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:60:1: note: analyze in outer-loop: *fenc_142
common/pixel.c:60:1: note: 	outer base_address: fenc_2(D)
	outer offset from base address: 0
	outer constant offset from base address: 0
	outer step: 16
	outer aligned to: 128
common/pixel.c:60:1: note: got vectype for stmt: _64 = *_63;
vector(16) unsigned char
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:60:1: note: analyze in outer-loop: *pix1_143
common/pixel.c:60:1: note: failed: evolution of base is not affine.
common/pixel.c:60:1: note: bad data references.

Analyzing loop at common/pixel.c:60
common/pixel.c:60:1: note: ===== analyze_loop_nest =====
common/pixel.c:60:1: note: === vect_analyze_loop_form ===
common/pixel.c:60:1: note: === get_loop_niters ===
common/pixel.c:60:1: note: === vect_analyze_data_refs ===
Creating dr for *_63
analyze_innermost: success.
	base_address: fenc_142
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_142
	Access function 0: {0B, +, 1}_6
Creating dr for *_67
analyze_innermost: success.
	base_address: pix1_143
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix1_143
	Access function 0: {0B, +, 1}_6
common/pixel.c:60:1: note: got vectype for stmt: _64 = *_63;
vector(16) unsigned char
common/pixel.c:60:1: note: got vectype for stmt: _68 = *_67;
vector(16) unsigned char
common/pixel.c:60:1: note: === vect_analyze_scalar_cycles ===
common/pixel.c:60:1: note: Analyze phi: x_141 = PHI <x_74(9), 0(13)>

common/pixel.c:60:1: note: Access function of PHI: {0, +, 1}_6
common/pixel.c:60:1: note: step: 1,  init: 0
common/pixel.c:60:1: note: Detected induction.
common/pixel.c:60:1: note: Analyze phi: i_sum_144 = PHI <i_sum_73(9), i_sum_146(13)>

common/pixel.c:60:1: note: Access function of PHI: {i_sum_146, +, _71}_6
common/pixel.c:60:1: note: step: _71,  init: i_sum_146
common/pixel.c:60:1: note: step unknown.
common/pixel.c:60:1: note: Analyze phi: ivtmp_206 = PHI <ivtmp_205(9), 16(13)>

common/pixel.c:60:1: note: Access function of PHI: {16, +, 4294967295}_6
common/pixel.c:60:1: note: step: 4294967295,  init: 16
common/pixel.c:60:1: note: Detected induction.
common/pixel.c:60:1: note: Analyze phi: i_sum_144 = PHI <i_sum_73(9), i_sum_146(13)>

common/pixel.c:60:1: note: detected reduction: i_sum_73 = _71 + i_sum_144;

common/pixel.c:60:1: note: Detected reduction.
common/pixel.c:60:1: note: === vect_pattern_recog ===
common/pixel.c:60:1: note: vect_is_simple_use: operand _71
common/pixel.c:60:1: note: def_stmt: _71 = ABS_EXPR <_70>;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: vect_is_simple_use: operand _71
common/pixel.c:60:1: note: def_stmt: _71 = ABS_EXPR <_70>;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: vect_is_simple_use: operand _71
common/pixel.c:60:1: note: def_stmt: _71 = ABS_EXPR <_70>;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: vect_is_simple_use: operand _65
common/pixel.c:60:1: note: def_stmt: _65 = (int) _64;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: vect_is_simple_use: operand _64
common/pixel.c:60:1: note: def_stmt: _64 = *_63;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: vect_is_simple_use: operand _69
common/pixel.c:60:1: note: def_stmt: _69 = (int) _68;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: vect_is_simple_use: operand _68
common/pixel.c:60:1: note: def_stmt: _68 = *_67;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: vect_recog_sad_pattern: detected: patt_158 = SAD_EXPR <_64, _68, i_sum_144>;

common/pixel.c:60:1: note: pattern recognized: patt_158 = SAD_EXPR <_64, _68, i_sum_144>;
common/pixel.c:60:1: note: === vect_analyze_data_ref_accesses ===
common/pixel.c:60:1: note: === vect_mark_stmts_to_be_vectorized ===
common/pixel.c:60:1: note: init: phi relevant? x_141 = PHI <x_74(9), 0(13)>
common/pixel.c:60:1: note: init: phi relevant? i_sum_144 = PHI <i_sum_73(9), i_sum_146(13)>
common/pixel.c:60:1: note: init: phi relevant? ivtmp_206 = PHI <ivtmp_205(9), 16(13)>
common/pixel.c:60:1: note: init: stmt relevant? # DEBUG x => x_141
common/pixel.c:60:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_144
common/pixel.c:60:1: note: init: stmt relevant? _61 = (sizetype) x_141;
common/pixel.c:60:1: note: init: stmt relevant? _63 = fenc_142 + _61;
common/pixel.c:60:1: note: init: stmt relevant? _64 = *_63;
common/pixel.c:60:1: note: init: stmt relevant? _65 = (int) _64;
common/pixel.c:60:1: note: init: stmt relevant? _67 = pix1_143 + _61;
common/pixel.c:60:1: note: init: stmt relevant? _68 = *_67;
common/pixel.c:60:1: note: init: stmt relevant? _69 = (int) _68;
common/pixel.c:60:1: note: init: stmt relevant? _70 = _65 - _69;
common/pixel.c:60:1: note: init: stmt relevant? _71 = ABS_EXPR <_70>;
common/pixel.c:60:1: note: init: stmt relevant? i_sum_73 = _71 + i_sum_144;
common/pixel.c:60:1: note: vec_stmt_relevant_p: used out of loop.
common/pixel.c:60:1: note: mark relevant 0, live 1.
common/pixel.c:60:1: note: last stmt in pattern. don't mark relevant/live.
common/pixel.c:60:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_73
common/pixel.c:60:1: note: init: stmt relevant? x_74 = x_141 + 1;
common/pixel.c:60:1: note: init: stmt relevant? # DEBUG x => x_74
common/pixel.c:60:1: note: init: stmt relevant? # DEBUG x => x_74
common/pixel.c:60:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_73
common/pixel.c:60:1: note: init: stmt relevant? ivtmp_205 = ivtmp_206 - 1;
common/pixel.c:60:1: note: init: stmt relevant? if (ivtmp_205 != 0)
common/pixel.c:60:1: note: worklist: examine stmt: patt_158 = SAD_EXPR <_64, _68, i_sum_144>;
common/pixel.c:60:1: note: vect_is_simple_use: operand _64
common/pixel.c:60:1: note: def_stmt: _64 = *_63;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: mark relevant 3, live 0.
common/pixel.c:60:1: note: vect_is_simple_use: operand _68
common/pixel.c:60:1: note: def_stmt: _68 = *_67;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: mark relevant 3, live 0.
common/pixel.c:60:1: note: vect_is_simple_use: operand i_sum_144
common/pixel.c:60:1: note: def_stmt: i_sum_144 = PHI <i_sum_73(9), i_sum_146(13)>
common/pixel.c:60:1: note: type of def: 5.
common/pixel.c:60:1: note: mark relevant 3, live 0.
common/pixel.c:60:1: note: worklist: examine stmt: i_sum_144 = PHI <i_sum_73(9), i_sum_146(13)>
common/pixel.c:60:1: note: vect_is_simple_use: operand i_sum_73
common/pixel.c:60:1: note: def_stmt: i_sum_73 = _71 + i_sum_144;
common/pixel.c:60:1: note: type of def: 5.
common/pixel.c:60:1: note: reduc-stmt defining reduc-phi in the same nest.
common/pixel.c:60:1: note: vect_is_simple_use: operand i_sum_146
common/pixel.c:60:1: note: def_stmt: i_sum_146 = PHI <i_sum_218(12), 0(8)>
common/pixel.c:60:1: note: type of def: 2.
common/pixel.c:60:1: note: def_stmt is out of loop.
common/pixel.c:60:1: note: worklist: examine stmt: _68 = *_67;
common/pixel.c:60:1: note: worklist: examine stmt: _64 = *_63;
common/pixel.c:60:1: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _64 = *_63;
  stmt_b: _68 = *_67;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _64 = *_63;
  stmt_b: _64 = *_63;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_6)
  (chrec_b = {0B, +, 1}_6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _68 = *_67;
  stmt_b: _68 = *_67;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_6)
  (chrec_b = {0B, +, 1}_6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/pixel.c:60:1: note: === vect_determine_vectorization_factor ===
common/pixel.c:60:1: note: ==> examining phi: x_141 = PHI <x_74(9), 0(13)>

common/pixel.c:60:1: note: ==> examining phi: i_sum_144 = PHI <i_sum_73(9), i_sum_146(13)>

common/pixel.c:60:1: note: get vectype for scalar type:  int
common/pixel.c:60:1: note: vectype: vector(4) int
common/pixel.c:60:1: note: nunits = 4
common/pixel.c:60:1: note: ==> examining phi: ivtmp_206 = PHI <ivtmp_205(9), 16(13)>

common/pixel.c:60:1: note: ==> examining statement: # DEBUG x => x_141

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: # DEBUG i_sum => i_sum_144

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: _61 = (sizetype) x_141;

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: _63 = fenc_142 + _61;

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: _64 = *_63;

common/pixel.c:60:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:60:1: note: vectype: vector(16) unsigned char
common/pixel.c:60:1: note: nunits = 16
common/pixel.c:60:1: note: ==> examining statement: _65 = (int) _64;

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: _67 = pix1_143 + _61;

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: _68 = *_67;

common/pixel.c:60:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:60:1: note: vectype: vector(16) unsigned char
common/pixel.c:60:1: note: nunits = 16
common/pixel.c:60:1: note: ==> examining statement: _69 = (int) _68;

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: _70 = _65 - _69;

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: _71 = ABS_EXPR <_70>;

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: i_sum_73 = _71 + i_sum_144;

common/pixel.c:60:1: note: ==> examining pattern statement: patt_158 = SAD_EXPR <_64, _68, i_sum_144>;

common/pixel.c:60:1: note: get vectype for scalar type:  int
common/pixel.c:60:1: note: vectype: vector(4) int
common/pixel.c:60:1: note: nunits = 4
common/pixel.c:60:1: note: ==> examining statement: # DEBUG i_sum => i_sum_73

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: x_74 = x_141 + 1;

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: # DEBUG x => x_74

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: # DEBUG x => x_74

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: # DEBUG i_sum => i_sum_73

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: ivtmp_205 = ivtmp_206 - 1;

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: if (ivtmp_205 != 0)

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: vectorization factor = 16
common/pixel.c:60:1: note: === vect_analyze_data_refs_alignment ===
common/pixel.c:60:1: note: vect_compute_data_ref_alignment:
common/pixel.c:60:1: note: can't force alignment of ref: *_63
common/pixel.c:60:1: note: vect_compute_data_ref_alignment:
common/pixel.c:60:1: note: can't force alignment of ref: *_67
common/pixel.c:60:1: note: === vect_prune_runtime_alias_test_list ===
common/pixel.c:60:1: note: === vect_enhance_data_refs_alignment ===
common/pixel.c:60:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:60:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:60:1: note: vect_can_advance_ivs_p:
common/pixel.c:60:1: note: Analyze phi: x_141 = PHI <x_74(9), 0(13)>

common/pixel.c:60:1: note: Analyze phi: i_sum_144 = PHI <i_sum_73(9), i_sum_146(13)>

common/pixel.c:60:1: note: reduc phi. skip.
common/pixel.c:60:1: note: Analyze phi: ivtmp_206 = PHI <ivtmp_205(9), 16(13)>

common/pixel.c:60:1: note: Vectorizing an unaligned access.
common/pixel.c:60:1: note: Vectorizing an unaligned access.
common/pixel.c:60:1: note: === vect_analyze_slp ===
common/pixel.c:60:1: note: === vect_make_slp_decision ===
common/pixel.c:60:1: note: === vect_detect_hybrid_slp ===
common/pixel.c:60:1: note: === vect_analyze_loop_operations ===
common/pixel.c:60:1: note: examining phi: x_141 = PHI <x_74(9), 0(13)>

common/pixel.c:60:1: note: examining phi: i_sum_144 = PHI <i_sum_73(9), i_sum_146(13)>

common/pixel.c:60:1: note: examining phi: ivtmp_206 = PHI <ivtmp_205(9), 16(13)>

common/pixel.c:60:1: note: ==> examining statement: # DEBUG x => x_141
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: # DEBUG i_sum => i_sum_144
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: _61 = (sizetype) x_141;
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: _63 = fenc_142 + _61;
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: _64 = *_63;
common/pixel.c:60:1: note: vect_is_simple_use: operand *_63
common/pixel.c:60:1: note: not ssa-name.
common/pixel.c:60:1: note: use not simple.
common/pixel.c:60:1: note: vect_is_simple_use: operand *_63
common/pixel.c:60:1: note: not ssa-name.
common/pixel.c:60:1: note: use not simple.
common/pixel.c:60:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:60:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:60:1: note: ==> examining statement: _65 = (int) _64;
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: _67 = pix1_143 + _61;
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: _68 = *_67;
common/pixel.c:60:1: note: vect_is_simple_use: operand *_67
common/pixel.c:60:1: note: not ssa-name.
common/pixel.c:60:1: note: use not simple.
common/pixel.c:60:1: note: vect_is_simple_use: operand *_67
common/pixel.c:60:1: note: not ssa-name.
common/pixel.c:60:1: note: use not simple.
common/pixel.c:60:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:60:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:60:1: note: ==> examining statement: _69 = (int) _68;
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: _70 = _65 - _69;
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: _71 = ABS_EXPR <_70>;
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: i_sum_73 = _71 + i_sum_144;
common/pixel.c:60:1: note: ==> examining pattern statement: patt_158 = SAD_EXPR <_64, _68, i_sum_144>;
common/pixel.c:60:1: note: vect_is_simple_use: operand _64
common/pixel.c:60:1: note: def_stmt: _64 = *_63;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: vect_is_simple_use: operand _68
common/pixel.c:60:1: note: def_stmt: _68 = *_67;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: vect_is_simple_use: operand i_sum_144
common/pixel.c:60:1: note: def_stmt: i_sum_144 = PHI <i_sum_73(9), i_sum_146(13)>
common/pixel.c:60:1: note: type of def: 5.
common/pixel.c:60:1: note: detected reduction: i_sum_73 = _71 + i_sum_144;

common/pixel.c:60:1: note: reduc op not supported by target.
vect_model_reduction_cost: inside_cost = 1, prologue_cost = 1, epilogue_cost = 5 .
common/pixel.c:60:1: note: ==> examining statement: # DEBUG i_sum => i_sum_73
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: x_74 = x_141 + 1;
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: # DEBUG x => x_74
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: # DEBUG x => x_74
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: # DEBUG i_sum => i_sum_73
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: ivtmp_205 = ivtmp_206 - 1;
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: if (ivtmp_205 != 0)
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: vectorization_factor = 16, niters = 16
common/pixel.c:60:1: note: === vect_update_slp_costs_according_to_vf ===
common/pixel.c:60:1: note: Cost model analysis: 
  Vector inside of loop cost: 5
  Vector prologue cost: 1
  Vector epilogue cost: 5
  Scalar iteration cost: 3
  Scalar outside cost: 0
  Vector outside cost: 6
  prologue iterations: 0
  epilogue iterations: 0
  Calculated minimum iters for profitability: 3
common/pixel.c:60:1: note:   Runtime profitability threshold = 15
common/pixel.c:60:1: note:   Static estimate profitability threshold = 15
common/pixel.c:60:1: note: loop vectorized
common/pixel.c:60:1: note: === vec_transform_loop ===
common/pixel.c:60:1: note: ------>vectorizing phi: x_141 = PHI <x_74(9), 0(29)>

common/pixel.c:60:1: note: ------>vectorizing phi: i_sum_144 = PHI <i_sum_73(9), i_sum_146(29)>

common/pixel.c:60:1: note: multiple-types.
common/pixel.c:60:1: note: ------>vectorizing phi: ivtmp_206 = PHI <ivtmp_205(9), 16(29)>

common/pixel.c:60:1: note: ------>vectorizing statement: # DEBUG x => x_141

common/pixel.c:60:1: note: ------>vectorizing statement: # DEBUG i_sum => i_sum_144

common/pixel.c:60:1: note: ------>vectorizing statement: _61 = (sizetype) x_141;

common/pixel.c:60:1: note: ------>vectorizing statement: _63 = fenc_142 + _61;

common/pixel.c:60:1: note: ------>vectorizing statement: _64 = *_63;

common/pixel.c:60:1: note: transform statement.
common/pixel.c:60:1: note: transform load. ncopies = 1
common/pixel.c:60:1: note: create vector_type-pointer variable to type: vector(16) unsigned char  vectorizing a pointer ref: *fenc_142
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:60:1: note: created vectp_fenc.743_157
common/pixel.c:60:1: note: add new stmt: vect__64.744_154 = MEM[(uint8_t *)vectp_fenc.742_156];
common/pixel.c:60:1: note: ------>vectorizing statement: _65 = (int) _64;

common/pixel.c:60:1: note: ------>vectorizing statement: _67 = pix1_143 + _61;

common/pixel.c:60:1: note: ------>vectorizing statement: _68 = *_67;

common/pixel.c:60:1: note: transform statement.
common/pixel.c:60:1: note: transform load. ncopies = 1
common/pixel.c:60:1: note: create vector_type-pointer variable to type: vector(16) unsigned char  vectorizing a pointer ref: *pix1_143
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:60:1: note: created vectp_pix1.746_153
common/pixel.c:60:1: note: add new stmt: vect__68.747_134 = MEM[(uint8_t *)vectp_pix1.745_136];
common/pixel.c:60:1: note: ------>vectorizing statement: _69 = (int) _68;

common/pixel.c:60:1: note: ------>vectorizing statement: _70 = _65 - _69;

common/pixel.c:60:1: note: ------>vectorizing statement: _71 = ABS_EXPR <_70>;

common/pixel.c:60:1: note: ------>vectorizing statement: i_sum_73 = _71 + i_sum_144;

common/pixel.c:60:1: note: multiple-types.
common/pixel.c:60:1: note: transform statement.
common/pixel.c:60:1: note: vect_is_simple_use: operand _64
common/pixel.c:60:1: note: def_stmt: _64 = *_63;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: vect_is_simple_use: operand _68
common/pixel.c:60:1: note: def_stmt: _68 = *_67;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: vect_is_simple_use: operand i_sum_144
common/pixel.c:60:1: note: def_stmt: i_sum_144 = PHI <i_sum_73(9), i_sum_146(29)>
common/pixel.c:60:1: note: type of def: 5.
common/pixel.c:60:1: note: detected reduction: i_sum_73 = _71 + i_sum_144;

common/pixel.c:60:1: note: reduc op not supported by target.
common/pixel.c:60:1: note: transform reduction.
common/pixel.c:60:1: note: vect_get_vec_def_for_operand: _64
common/pixel.c:60:1: note: vect_is_simple_use: operand _64
common/pixel.c:60:1: note: def_stmt: _64 = *_63;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: def =  _64
  def_stmt =  _64 = *_63;
common/pixel.c:60:1: note: vect_get_vec_def_for_operand: _68
common/pixel.c:60:1: note: vect_is_simple_use: operand _68
common/pixel.c:60:1: note: def_stmt: _68 = *_67;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: def =  _68
  def_stmt =  _68 = *_67;
common/pixel.c:60:1: note: add new stmt: vect_patt_158.748_132 = SAD_EXPR <vect__64.744_154, vect__68.747_134, vect_patt_158.748_133>;
common/pixel.c:60:1: note: vect_is_simple_use: operand i_sum_146
common/pixel.c:60:1: note: def_stmt: i_sum_146 = PHI <i_sum_218(12), 0(8)>
common/pixel.c:60:1: note: type of def: 2.
common/pixel.c:60:1: note: vect_get_vec_def_for_operand: i_sum_144
common/pixel.c:60:1: note: vect_is_simple_use: operand i_sum_144
common/pixel.c:60:1: note: def_stmt: i_sum_144 = PHI <i_sum_73(9), i_sum_146(29)>
common/pixel.c:60:1: note: type of def: 5.
common/pixel.c:60:1: note: def =  i_sum_144
  def_stmt =  i_sum_144 = PHI <i_sum_73(9), i_sum_146(29)>
common/pixel.c:60:1: note: transform reduction: created def-use cycle: vect_patt_158.748_133 = PHI <vect_patt_158.748_132(9), { 0, 0, 0, 0 }(29)>

vect_patt_158.748_132 = SAD_EXPR <vect__64.744_154, vect__68.747_134, vect_patt_158.748_133>;

common/pixel.c:60:1: note: Reduce using vector shifts
common/pixel.c:60:1: note: extract scalar result
common/pixel.c:60:1: note: ------>vectorizing statement: # DEBUG i_sum => i_sum_73

common/pixel.c:60:1: note: ------>vectorizing statement: x_74 = x_141 + 1;

common/pixel.c:60:1: note: ------>vectorizing statement: # DEBUG x => x_74

common/pixel.c:60:1: note: ------>vectorizing statement: # DEBUG x => x_74

common/pixel.c:60:1: note: ------>vectorizing statement: # DEBUG i_sum => i_sum_73

common/pixel.c:60:1: note: ------>vectorizing statement: ivtmp_205 = ivtmp_206 - 1;

common/pixel.c:60:1: note: ------>vectorizing statement: vectp_fenc.742_155 = vectp_fenc.742_156 + 16;

common/pixel.c:60:1: note: ------>vectorizing statement: vectp_pix1.745_135 = vectp_pix1.745_136 + 16;

common/pixel.c:60:1: note: ------>vectorizing statement: if (ivtmp_205 != 0)


loop at common/pixel.c:60: if (ivtmp_123 < 1)

;; Scaling loop 6 with scale 0.062500, bounding iterations to 1 from guessed 16
;; guessed iterations are now 1
common/pixel.c:60:1: note: LOOP VECTORIZED


Analyzing loop at common/pixel.c:60
common/pixel.c:60:1: note: ===== analyze_loop_nest =====
common/pixel.c:60:1: note: === vect_analyze_loop_form ===
common/pixel.c:60:1: note: ===== analyze_loop_nest_1 =====
common/pixel.c:60:1: note: === vect_analyze_loop_form ===
common/pixel.c:60:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 8
  exit condition [15, + , 4294967295] != 0
  bounds on difference of bases: -15 ... -15
  result:
    # of iterations 15, bounded by 15
common/pixel.c:60:1: note: Considering outer-loop vectorization.
common/pixel.c:60:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 7
  exit condition [7, + , 4294967295] != 0
  bounds on difference of bases: -7 ... -7
  result:
    # of iterations 7, bounded by 7
common/pixel.c:60:1: note: === vect_analyze_data_refs ===
Creating dr for *_85
analyze_innermost: success.
	base_address: fenc_148
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_2(D)
	Access function 0: {{0B, +, 16}_7, +, 1}_8
Creating dr for *_89
analyze_innermost: success.
	base_address: pix0_149
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix0_3(D)
	Access function 0: {{0B, +, pretmp_223}_7, +, 1}_8
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:60:1: note: analyze in outer-loop: *fenc_148
common/pixel.c:60:1: note: 	outer base_address: fenc_2(D)
	outer offset from base address: 0
	outer constant offset from base address: 0
	outer step: 16
	outer aligned to: 128
common/pixel.c:60:1: note: got vectype for stmt: _86 = *_85;
vector(16) unsigned char
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:60:1: note: analyze in outer-loop: *pix0_149
common/pixel.c:60:1: note: failed: evolution of base is not affine.
common/pixel.c:60:1: note: bad data references.

Analyzing loop at common/pixel.c:60
common/pixel.c:60:1: note: ===== analyze_loop_nest =====
common/pixel.c:60:1: note: === vect_analyze_loop_form ===
common/pixel.c:60:1: note: === get_loop_niters ===
common/pixel.c:60:1: note: === vect_analyze_data_refs ===
Creating dr for *_85
analyze_innermost: success.
	base_address: fenc_148
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_148
	Access function 0: {0B, +, 1}_8
Creating dr for *_89
analyze_innermost: success.
	base_address: pix0_149
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix0_149
	Access function 0: {0B, +, 1}_8
common/pixel.c:60:1: note: got vectype for stmt: _86 = *_85;
vector(16) unsigned char
common/pixel.c:60:1: note: got vectype for stmt: _90 = *_89;
vector(16) unsigned char
common/pixel.c:60:1: note: === vect_analyze_scalar_cycles ===
common/pixel.c:60:1: note: Analyze phi: x_147 = PHI <x_96(3), 0(7)>

common/pixel.c:60:1: note: Access function of PHI: {0, +, 1}_8
common/pixel.c:60:1: note: step: 1,  init: 0
common/pixel.c:60:1: note: Detected induction.
common/pixel.c:60:1: note: Analyze phi: i_sum_150 = PHI <i_sum_95(3), i_sum_152(7)>

common/pixel.c:60:1: note: Access function of PHI: {i_sum_152, +, _93}_8
common/pixel.c:60:1: note: step: _93,  init: i_sum_152
common/pixel.c:60:1: note: step unknown.
common/pixel.c:60:1: note: Analyze phi: ivtmp_202 = PHI <ivtmp_201(3), 16(7)>

common/pixel.c:60:1: note: Access function of PHI: {16, +, 4294967295}_8
common/pixel.c:60:1: note: step: 4294967295,  init: 16
common/pixel.c:60:1: note: Detected induction.
common/pixel.c:60:1: note: Analyze phi: i_sum_150 = PHI <i_sum_95(3), i_sum_152(7)>

common/pixel.c:60:1: note: detected reduction: i_sum_95 = _93 + i_sum_150;

common/pixel.c:60:1: note: Detected reduction.
common/pixel.c:60:1: note: === vect_pattern_recog ===
common/pixel.c:60:1: note: vect_is_simple_use: operand _93
common/pixel.c:60:1: note: def_stmt: _93 = ABS_EXPR <_92>;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: vect_is_simple_use: operand _93
common/pixel.c:60:1: note: def_stmt: _93 = ABS_EXPR <_92>;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: vect_is_simple_use: operand _93
common/pixel.c:60:1: note: def_stmt: _93 = ABS_EXPR <_92>;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: vect_is_simple_use: operand _87
common/pixel.c:60:1: note: def_stmt: _87 = (int) _86;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: vect_is_simple_use: operand _86
common/pixel.c:60:1: note: def_stmt: _86 = *_85;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: vect_is_simple_use: operand _91
common/pixel.c:60:1: note: def_stmt: _91 = (int) _90;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: vect_is_simple_use: operand _90
common/pixel.c:60:1: note: def_stmt: _90 = *_89;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: vect_recog_sad_pattern: detected: patt_122 = SAD_EXPR <_86, _90, i_sum_150>;

common/pixel.c:60:1: note: pattern recognized: patt_122 = SAD_EXPR <_86, _90, i_sum_150>;
common/pixel.c:60:1: note: === vect_analyze_data_ref_accesses ===
common/pixel.c:60:1: note: === vect_mark_stmts_to_be_vectorized ===
common/pixel.c:60:1: note: init: phi relevant? x_147 = PHI <x_96(3), 0(7)>
common/pixel.c:60:1: note: init: phi relevant? i_sum_150 = PHI <i_sum_95(3), i_sum_152(7)>
common/pixel.c:60:1: note: init: phi relevant? ivtmp_202 = PHI <ivtmp_201(3), 16(7)>
common/pixel.c:60:1: note: init: stmt relevant? # DEBUG x => x_147
common/pixel.c:60:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_150
common/pixel.c:60:1: note: init: stmt relevant? _83 = (sizetype) x_147;
common/pixel.c:60:1: note: init: stmt relevant? _85 = fenc_148 + _83;
common/pixel.c:60:1: note: init: stmt relevant? _86 = *_85;
common/pixel.c:60:1: note: init: stmt relevant? _87 = (int) _86;
common/pixel.c:60:1: note: init: stmt relevant? _89 = pix0_149 + _83;
common/pixel.c:60:1: note: init: stmt relevant? _90 = *_89;
common/pixel.c:60:1: note: init: stmt relevant? _91 = (int) _90;
common/pixel.c:60:1: note: init: stmt relevant? _92 = _87 - _91;
common/pixel.c:60:1: note: init: stmt relevant? _93 = ABS_EXPR <_92>;
common/pixel.c:60:1: note: init: stmt relevant? i_sum_95 = _93 + i_sum_150;
common/pixel.c:60:1: note: vec_stmt_relevant_p: used out of loop.
common/pixel.c:60:1: note: mark relevant 0, live 1.
common/pixel.c:60:1: note: last stmt in pattern. don't mark relevant/live.
common/pixel.c:60:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_95
common/pixel.c:60:1: note: init: stmt relevant? x_96 = x_147 + 1;
common/pixel.c:60:1: note: init: stmt relevant? # DEBUG x => x_96
common/pixel.c:60:1: note: init: stmt relevant? # DEBUG x => x_96
common/pixel.c:60:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_95
common/pixel.c:60:1: note: init: stmt relevant? ivtmp_201 = ivtmp_202 - 1;
common/pixel.c:60:1: note: init: stmt relevant? if (ivtmp_201 != 0)
common/pixel.c:60:1: note: worklist: examine stmt: patt_122 = SAD_EXPR <_86, _90, i_sum_150>;
common/pixel.c:60:1: note: vect_is_simple_use: operand _86
common/pixel.c:60:1: note: def_stmt: _86 = *_85;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: mark relevant 3, live 0.
common/pixel.c:60:1: note: vect_is_simple_use: operand _90
common/pixel.c:60:1: note: def_stmt: _90 = *_89;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: mark relevant 3, live 0.
common/pixel.c:60:1: note: vect_is_simple_use: operand i_sum_150
common/pixel.c:60:1: note: def_stmt: i_sum_150 = PHI <i_sum_95(3), i_sum_152(7)>
common/pixel.c:60:1: note: type of def: 5.
common/pixel.c:60:1: note: mark relevant 3, live 0.
common/pixel.c:60:1: note: worklist: examine stmt: i_sum_150 = PHI <i_sum_95(3), i_sum_152(7)>
common/pixel.c:60:1: note: vect_is_simple_use: operand i_sum_95
common/pixel.c:60:1: note: def_stmt: i_sum_95 = _93 + i_sum_150;
common/pixel.c:60:1: note: type of def: 5.
common/pixel.c:60:1: note: reduc-stmt defining reduc-phi in the same nest.
common/pixel.c:60:1: note: vect_is_simple_use: operand i_sum_152
common/pixel.c:60:1: note: def_stmt: i_sum_152 = PHI <i_sum_216(6), 0(2)>
common/pixel.c:60:1: note: type of def: 2.
common/pixel.c:60:1: note: def_stmt is out of loop.
common/pixel.c:60:1: note: worklist: examine stmt: _90 = *_89;
common/pixel.c:60:1: note: worklist: examine stmt: _86 = *_85;
common/pixel.c:60:1: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _86 = *_85;
  stmt_b: _90 = *_89;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _86 = *_85;
  stmt_b: _86 = *_85;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_8)
  (chrec_b = {0B, +, 1}_8)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _90 = *_89;
  stmt_b: _90 = *_89;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_8)
  (chrec_b = {0B, +, 1}_8)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/pixel.c:60:1: note: === vect_determine_vectorization_factor ===
common/pixel.c:60:1: note: ==> examining phi: x_147 = PHI <x_96(3), 0(7)>

common/pixel.c:60:1: note: ==> examining phi: i_sum_150 = PHI <i_sum_95(3), i_sum_152(7)>

common/pixel.c:60:1: note: get vectype for scalar type:  int
common/pixel.c:60:1: note: vectype: vector(4) int
common/pixel.c:60:1: note: nunits = 4
common/pixel.c:60:1: note: ==> examining phi: ivtmp_202 = PHI <ivtmp_201(3), 16(7)>

common/pixel.c:60:1: note: ==> examining statement: # DEBUG x => x_147

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: # DEBUG i_sum => i_sum_150

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: _83 = (sizetype) x_147;

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: _85 = fenc_148 + _83;

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: _86 = *_85;

common/pixel.c:60:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:60:1: note: vectype: vector(16) unsigned char
common/pixel.c:60:1: note: nunits = 16
common/pixel.c:60:1: note: ==> examining statement: _87 = (int) _86;

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: _89 = pix0_149 + _83;

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: _90 = *_89;

common/pixel.c:60:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:60:1: note: vectype: vector(16) unsigned char
common/pixel.c:60:1: note: nunits = 16
common/pixel.c:60:1: note: ==> examining statement: _91 = (int) _90;

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: _92 = _87 - _91;

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: _93 = ABS_EXPR <_92>;

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: i_sum_95 = _93 + i_sum_150;

common/pixel.c:60:1: note: ==> examining pattern statement: patt_122 = SAD_EXPR <_86, _90, i_sum_150>;

common/pixel.c:60:1: note: get vectype for scalar type:  int
common/pixel.c:60:1: note: vectype: vector(4) int
common/pixel.c:60:1: note: nunits = 4
common/pixel.c:60:1: note: ==> examining statement: # DEBUG i_sum => i_sum_95

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: x_96 = x_147 + 1;

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: # DEBUG x => x_96

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: # DEBUG x => x_96

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: # DEBUG i_sum => i_sum_95

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: ivtmp_201 = ivtmp_202 - 1;

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: ==> examining statement: if (ivtmp_201 != 0)

common/pixel.c:60:1: note: skip.
common/pixel.c:60:1: note: vectorization factor = 16
common/pixel.c:60:1: note: === vect_analyze_data_refs_alignment ===
common/pixel.c:60:1: note: vect_compute_data_ref_alignment:
common/pixel.c:60:1: note: can't force alignment of ref: *_85
common/pixel.c:60:1: note: vect_compute_data_ref_alignment:
common/pixel.c:60:1: note: can't force alignment of ref: *_89
common/pixel.c:60:1: note: === vect_prune_runtime_alias_test_list ===
common/pixel.c:60:1: note: === vect_enhance_data_refs_alignment ===
common/pixel.c:60:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:60:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:60:1: note: vect_can_advance_ivs_p:
common/pixel.c:60:1: note: Analyze phi: x_147 = PHI <x_96(3), 0(7)>

common/pixel.c:60:1: note: Analyze phi: i_sum_150 = PHI <i_sum_95(3), i_sum_152(7)>

common/pixel.c:60:1: note: reduc phi. skip.
common/pixel.c:60:1: note: Analyze phi: ivtmp_202 = PHI <ivtmp_201(3), 16(7)>

common/pixel.c:60:1: note: Vectorizing an unaligned access.
common/pixel.c:60:1: note: Vectorizing an unaligned access.
common/pixel.c:60:1: note: === vect_analyze_slp ===
common/pixel.c:60:1: note: === vect_make_slp_decision ===
common/pixel.c:60:1: note: === vect_detect_hybrid_slp ===
common/pixel.c:60:1: note: === vect_analyze_loop_operations ===
common/pixel.c:60:1: note: examining phi: x_147 = PHI <x_96(3), 0(7)>

common/pixel.c:60:1: note: examining phi: i_sum_150 = PHI <i_sum_95(3), i_sum_152(7)>

common/pixel.c:60:1: note: examining phi: ivtmp_202 = PHI <ivtmp_201(3), 16(7)>

common/pixel.c:60:1: note: ==> examining statement: # DEBUG x => x_147
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: # DEBUG i_sum => i_sum_150
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: _83 = (sizetype) x_147;
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: _85 = fenc_148 + _83;
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: _86 = *_85;
common/pixel.c:60:1: note: vect_is_simple_use: operand *_85
common/pixel.c:60:1: note: not ssa-name.
common/pixel.c:60:1: note: use not simple.
common/pixel.c:60:1: note: vect_is_simple_use: operand *_85
common/pixel.c:60:1: note: not ssa-name.
common/pixel.c:60:1: note: use not simple.
common/pixel.c:60:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:60:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:60:1: note: ==> examining statement: _87 = (int) _86;
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: _89 = pix0_149 + _83;
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: _90 = *_89;
common/pixel.c:60:1: note: vect_is_simple_use: operand *_89
common/pixel.c:60:1: note: not ssa-name.
common/pixel.c:60:1: note: use not simple.
common/pixel.c:60:1: note: vect_is_simple_use: operand *_89
common/pixel.c:60:1: note: not ssa-name.
common/pixel.c:60:1: note: use not simple.
common/pixel.c:60:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:60:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:60:1: note: ==> examining statement: _91 = (int) _90;
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: _92 = _87 - _91;
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: _93 = ABS_EXPR <_92>;
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: i_sum_95 = _93 + i_sum_150;
common/pixel.c:60:1: note: ==> examining pattern statement: patt_122 = SAD_EXPR <_86, _90, i_sum_150>;
common/pixel.c:60:1: note: vect_is_simple_use: operand _86
common/pixel.c:60:1: note: def_stmt: _86 = *_85;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: vect_is_simple_use: operand _90
common/pixel.c:60:1: note: def_stmt: _90 = *_89;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: vect_is_simple_use: operand i_sum_150
common/pixel.c:60:1: note: def_stmt: i_sum_150 = PHI <i_sum_95(3), i_sum_152(7)>
common/pixel.c:60:1: note: type of def: 5.
common/pixel.c:60:1: note: detected reduction: i_sum_95 = _93 + i_sum_150;

common/pixel.c:60:1: note: reduc op not supported by target.
vect_model_reduction_cost: inside_cost = 1, prologue_cost = 1, epilogue_cost = 5 .
common/pixel.c:60:1: note: ==> examining statement: # DEBUG i_sum => i_sum_95
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: x_96 = x_147 + 1;
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: # DEBUG x => x_96
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: # DEBUG x => x_96
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: # DEBUG i_sum => i_sum_95
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: ivtmp_201 = ivtmp_202 - 1;
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: ==> examining statement: if (ivtmp_201 != 0)
common/pixel.c:60:1: note: irrelevant.
common/pixel.c:60:1: note: vectorization_factor = 16, niters = 16
common/pixel.c:60:1: note: === vect_update_slp_costs_according_to_vf ===
common/pixel.c:60:1: note: Cost model analysis: 
  Vector inside of loop cost: 5
  Vector prologue cost: 1
  Vector epilogue cost: 5
  Scalar iteration cost: 3
  Scalar outside cost: 0
  Vector outside cost: 6
  prologue iterations: 0
  epilogue iterations: 0
  Calculated minimum iters for profitability: 3
common/pixel.c:60:1: note:   Runtime profitability threshold = 15
common/pixel.c:60:1: note:   Static estimate profitability threshold = 15
common/pixel.c:60:1: note: loop vectorized
common/pixel.c:60:1: note: === vec_transform_loop ===
common/pixel.c:60:1: note: ------>vectorizing phi: x_147 = PHI <x_96(3), 0(30)>

common/pixel.c:60:1: note: ------>vectorizing phi: i_sum_150 = PHI <i_sum_95(3), i_sum_152(30)>

common/pixel.c:60:1: note: multiple-types.
common/pixel.c:60:1: note: ------>vectorizing phi: ivtmp_202 = PHI <ivtmp_201(3), 16(30)>

common/pixel.c:60:1: note: ------>vectorizing statement: # DEBUG x => x_147

common/pixel.c:60:1: note: ------>vectorizing statement: # DEBUG i_sum => i_sum_150

common/pixel.c:60:1: note: ------>vectorizing statement: _83 = (sizetype) x_147;

common/pixel.c:60:1: note: ------>vectorizing statement: _85 = fenc_148 + _83;

common/pixel.c:60:1: note: ------>vectorizing statement: _86 = *_85;

common/pixel.c:60:1: note: transform statement.
common/pixel.c:60:1: note: transform load. ncopies = 1
common/pixel.c:60:1: note: create vector_type-pointer variable to type: vector(16) unsigned char  vectorizing a pointer ref: *fenc_148
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:60:1: note: created vectp_fenc.753_121
common/pixel.c:60:1: note: add new stmt: vect__86.754_118 = MEM[(uint8_t *)vectp_fenc.752_120];
common/pixel.c:60:1: note: ------>vectorizing statement: _87 = (int) _86;

common/pixel.c:60:1: note: ------>vectorizing statement: _89 = pix0_149 + _83;

common/pixel.c:60:1: note: ------>vectorizing statement: _90 = *_89;

common/pixel.c:60:1: note: transform statement.
common/pixel.c:60:1: note: transform load. ncopies = 1
common/pixel.c:60:1: note: create vector_type-pointer variable to type: vector(16) unsigned char  vectorizing a pointer ref: *pix0_149
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:60:1: note: created vectp_pix0.756_117
common/pixel.c:60:1: note: add new stmt: vect__90.757_114 = MEM[(uint8_t *)vectp_pix0.755_116];
common/pixel.c:60:1: note: ------>vectorizing statement: _91 = (int) _90;

common/pixel.c:60:1: note: ------>vectorizing statement: _92 = _87 - _91;

common/pixel.c:60:1: note: ------>vectorizing statement: _93 = ABS_EXPR <_92>;

common/pixel.c:60:1: note: ------>vectorizing statement: i_sum_95 = _93 + i_sum_150;

common/pixel.c:60:1: note: multiple-types.
common/pixel.c:60:1: note: transform statement.
common/pixel.c:60:1: note: vect_is_simple_use: operand _86
common/pixel.c:60:1: note: def_stmt: _86 = *_85;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: vect_is_simple_use: operand _90
common/pixel.c:60:1: note: def_stmt: _90 = *_89;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: vect_is_simple_use: operand i_sum_150
common/pixel.c:60:1: note: def_stmt: i_sum_150 = PHI <i_sum_95(3), i_sum_152(30)>
common/pixel.c:60:1: note: type of def: 5.
common/pixel.c:60:1: note: detected reduction: i_sum_95 = _93 + i_sum_150;

common/pixel.c:60:1: note: reduc op not supported by target.
common/pixel.c:60:1: note: transform reduction.
common/pixel.c:60:1: note: vect_get_vec_def_for_operand: _86
common/pixel.c:60:1: note: vect_is_simple_use: operand _86
common/pixel.c:60:1: note: def_stmt: _86 = *_85;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: def =  _86
  def_stmt =  _86 = *_85;
common/pixel.c:60:1: note: vect_get_vec_def_for_operand: _90
common/pixel.c:60:1: note: vect_is_simple_use: operand _90
common/pixel.c:60:1: note: def_stmt: _90 = *_89;
common/pixel.c:60:1: note: type of def: 3.
common/pixel.c:60:1: note: def =  _90
  def_stmt =  _90 = *_89;
common/pixel.c:60:1: note: add new stmt: vect_patt_122.758_112 = SAD_EXPR <vect__86.754_118, vect__90.757_114, vect_patt_122.758_113>;
common/pixel.c:60:1: note: vect_is_simple_use: operand i_sum_152
common/pixel.c:60:1: note: def_stmt: i_sum_152 = PHI <i_sum_216(6), 0(2)>
common/pixel.c:60:1: note: type of def: 2.
common/pixel.c:60:1: note: vect_get_vec_def_for_operand: i_sum_150
common/pixel.c:60:1: note: vect_is_simple_use: operand i_sum_150
common/pixel.c:60:1: note: def_stmt: i_sum_150 = PHI <i_sum_95(3), i_sum_152(30)>
common/pixel.c:60:1: note: type of def: 5.
common/pixel.c:60:1: note: def =  i_sum_150
  def_stmt =  i_sum_150 = PHI <i_sum_95(3), i_sum_152(30)>
common/pixel.c:60:1: note: transform reduction: created def-use cycle: vect_patt_122.758_113 = PHI <vect_patt_122.758_112(3), { 0, 0, 0, 0 }(30)>

vect_patt_122.758_112 = SAD_EXPR <vect__86.754_118, vect__90.757_114, vect_patt_122.758_113>;

common/pixel.c:60:1: note: Reduce using vector shifts
common/pixel.c:60:1: note: extract scalar result
common/pixel.c:60:1: note: ------>vectorizing statement: # DEBUG i_sum => i_sum_95

common/pixel.c:60:1: note: ------>vectorizing statement: x_96 = x_147 + 1;

common/pixel.c:60:1: note: ------>vectorizing statement: # DEBUG x => x_96

common/pixel.c:60:1: note: ------>vectorizing statement: # DEBUG x => x_96

common/pixel.c:60:1: note: ------>vectorizing statement: # DEBUG i_sum => i_sum_95

common/pixel.c:60:1: note: ------>vectorizing statement: ivtmp_201 = ivtmp_202 - 1;

common/pixel.c:60:1: note: ------>vectorizing statement: vectp_fenc.752_119 = vectp_fenc.752_120 + 16;

common/pixel.c:60:1: note: ------>vectorizing statement: vectp_pix0.755_115 = vectp_pix0.755_116 + 16;

common/pixel.c:60:1: note: ------>vectorizing statement: if (ivtmp_201 != 0)


loop at common/pixel.c:60: if (ivtmp_100 < 1)

;; Scaling loop 8 with scale 0.062500, bounding iterations to 1 from guessed 16
;; guessed iterations are now 1
common/pixel.c:60:1: note: LOOP VECTORIZED

common/pixel.c:384:1: note: vectorized 4 loops in function.
Merging blocks 7 and 30
Merging blocks 13 and 29
Merging blocks 19 and 28
Merging blocks 25 and 27
x264_pixel_sad_x4_16x8 (uint8_t * fenc, uint8_t * pix0, uint8_t * pix1, uint8_t * pix2, uint8_t * pix3, int i_stride, int * scores)
{
  int vect_i_sum_95.761;
  vector(4) int vect_i_sum_95.760;
  int stmp_i_sum_95.759;
  vector(4) int vect_patt_122.758;
  vector(16) unsigned char vect__90.757;
  vector(16) unsigned char * vectp_pix0.756;
  vector(16) unsigned char * vectp_pix0.755;
  vector(16) unsigned char vect__86.754;
  vector(16) unsigned char * vectp_fenc.753;
  vector(16) unsigned char * vectp_fenc.752;
  int vect_i_sum_73.751;
  vector(4) int vect_i_sum_73.750;
  int stmp_i_sum_73.749;
  vector(4) int vect_patt_158.748;
  vector(16) unsigned char vect__68.747;
  vector(16) unsigned char * vectp_pix1.746;
  vector(16) unsigned char * vectp_pix1.745;
  vector(16) unsigned char vect__64.744;
  vector(16) unsigned char * vectp_fenc.743;
  vector(16) unsigned char * vectp_fenc.742;
  int vect_i_sum_51.741;
  vector(4) int vect_i_sum_51.740;
  int stmp_i_sum_51.739;
  vector(4) int vect_patt_178.738;
  vector(16) unsigned char vect__46.737;
  vector(16) unsigned char * vectp_pix2.736;
  vector(16) unsigned char * vectp_pix2.735;
  vector(16) unsigned char vect__42.734;
  vector(16) unsigned char * vectp_fenc.733;
  vector(16) unsigned char * vectp_fenc.732;
  int vect_i_sum_29.731;
  vector(4) int vect_i_sum_29.730;
  int stmp_i_sum_29.729;
  vector(4) int vect_patt_198.728;
  vector(16) unsigned char vect__24.727;
  vector(16) unsigned char * vectp_pix3.726;
  vector(16) unsigned char * vectp_pix3.725;
  vector(16) unsigned char vect__20.724;
  vector(16) unsigned char * vectp_fenc.723;
  vector(16) unsigned char * vectp_fenc.722;
  int i_sum;
  int x;
  int y;
  int i_sum;
  int x;
  int y;
  int i_sum;
  int x;
  int y;
  int i_sum;
  int x;
  int y;
  uint8_t * _5;
  sizetype _14;
  unsigned char _20;
  int _21;
  uint8_t * _23;
  unsigned char _24;
  int _25;
  int _26;
  int _27;
  sizetype _39;
  uint8_t * _41;
  unsigned char _42;
  int _43;
  uint8_t * _45;
  unsigned char _46;
  int _47;
  int _48;
  int _49;
  sizetype _61;
  uint8_t * _63;
  unsigned char _64;
  int _65;
  uint8_t * _67;
  unsigned char _68;
  int _69;
  int _70;
  int _71;
  sizetype _83;
  uint8_t * _85;
  unsigned char _86;
  int _87;
  uint8_t * _89;
  unsigned char _90;
  int _91;
  int _92;
  int _93;
  unsigned int ivtmp_100;
  unsigned int ivtmp_102;
  unsigned int ivtmp_123;
  unsigned int ivtmp_124;
  unsigned int ivtmp_159;
  unsigned int ivtmp_160;
  unsigned int ivtmp_179;
  unsigned int ivtmp_180;
  unsigned int ivtmp_199;
  unsigned int ivtmp_200;
  unsigned int ivtmp_201;
  unsigned int ivtmp_202;
  unsigned int ivtmp_203;
  unsigned int ivtmp_204;
  unsigned int ivtmp_205;
  unsigned int ivtmp_206;
  unsigned int ivtmp_207;
  unsigned int ivtmp_208;
  unsigned int ivtmp_209;
  unsigned int ivtmp_210;
  unsigned int ivtmp_211;
  unsigned int ivtmp_212;
  unsigned int ivtmp_213;
  unsigned int ivtmp_214;
  sizetype pretmp_223;

  <bb 2>:
  # DEBUG pix1 => fenc_2(D)
  # DEBUG i_stride_pix1 => 16
  # DEBUG pix2 => pix0_3(D)
  # DEBUG i_stride_pix2 => i_stride_4(D)
  # DEBUG i_sum => 0
  # DEBUG y => 0
  # DEBUG y => 0
  # DEBUG i_sum => 0
  # DEBUG pix2 => pix0_3(D)
  # DEBUG pix1 => fenc_2(D)
  pretmp_223 = (sizetype) i_stride_4(D);
  goto <bb 7>;

  <bb 3>:

  <bb 4>:
  # x_147 = PHI <x_96(3), 0(7)>
  # i_sum_150 = PHI <i_sum_95(3), i_sum_152(7)>
  # ivtmp_202 = PHI <ivtmp_201(3), 16(7)>
  # vectp_fenc.752_120 = PHI <vectp_fenc.752_119(3), vectp_fenc.753_121(7)>
  # vectp_pix0.755_116 = PHI <vectp_pix0.755_115(3), vectp_pix0.756_117(7)>
  # vect_patt_122.758_113 = PHI <vect_patt_122.758_112(3), { 0, 0, 0, 0 }(7)>
  # ivtmp_102 = PHI <ivtmp_100(3), 0(7)>
  # DEBUG x => x_147
  # DEBUG i_sum => i_sum_150
  _83 = (sizetype) x_147;
  _85 = fenc_148 + _83;
  vect__86.754_118 = MEM[(uint8_t *)vectp_fenc.752_120];
  _86 = *_85;
  _87 = (int) _86;
  _89 = pix0_149 + _83;
  vect__90.757_114 = MEM[(uint8_t *)vectp_pix0.755_116];
  _90 = *_89;
  _91 = (int) _90;
  _92 = _87 - _91;
  _93 = ABS_EXPR <_92>;
  vect_patt_122.758_112 = SAD_EXPR <vect__86.754_118, vect__90.757_114, vect_patt_122.758_113>;
  i_sum_95 = _93 + i_sum_150;
  # DEBUG i_sum => i_sum_95
  x_96 = x_147 + 1;
  # DEBUG x => x_96
  # DEBUG x => x_96
  # DEBUG i_sum => i_sum_95
  ivtmp_201 = ivtmp_202 - 1;
  vectp_fenc.752_119 = vectp_fenc.752_120 + 16;
  vectp_pix0.755_115 = vectp_pix0.755_116 + 16;
  ivtmp_100 = ivtmp_102 + 1;
  if (ivtmp_100 < 1)
    goto <bb 3>;
  else
    goto <bb 5>;

  <bb 5>:
  # i_sum_216 = PHI <i_sum_95(4)>
  # vect_patt_122.758_111 = PHI <vect_patt_122.758_112(4)>
  vect_i_sum_95.760_110 = VEC_PERM_EXPR <vect_patt_122.758_111, { 0, 0, 0, 0 }, { 2, 3, 4, 5 }>;
  vect_i_sum_95.760_109 = vect_i_sum_95.760_110 + vect_patt_122.758_111;
  vect_i_sum_95.760_108 = VEC_PERM_EXPR <vect_i_sum_95.760_109, { 0, 0, 0, 0 }, { 1, 2, 3, 4 }>;
  vect_i_sum_95.760_107 = vect_i_sum_95.760_108 + vect_i_sum_95.760_109;
  stmp_i_sum_95.759_106 = BIT_FIELD_REF <vect_i_sum_95.760_107, 32, 0>;
  vect_i_sum_95.761_105 = stmp_i_sum_95.759_106 + i_sum_152;
  fenc_97 = fenc_148 + 16;
  # DEBUG pix1 => fenc_97
  pix0_99 = pix0_149 + pretmp_223;
  # DEBUG pix2 => pix0_99
  y_101 = y_151 + 1;
  # DEBUG y => y_101
  # DEBUG y => y_101
  # DEBUG i_sum => vect_i_sum_95.761_105
  # DEBUG pix2 => pix0_99
  # DEBUG pix1 => fenc_97
  ivtmp_199 = ivtmp_200 - 1;
  if (ivtmp_199 != 0)
    goto <bb 6>;
  else
    goto <bb 8>;

  <bb 6>:

  <bb 7>:
  # fenc_148 = PHI <fenc_97(6), fenc_2(D)(2)>
  # pix0_149 = PHI <pix0_99(6), pix0_3(D)(2)>
  # y_151 = PHI <y_101(6), 0(2)>
  # i_sum_152 = PHI <vect_i_sum_95.761_105(6), 0(2)>
  # ivtmp_200 = PHI <ivtmp_199(6), 8(2)>
  # DEBUG y => y_151
  # DEBUG i_sum => i_sum_152
  # DEBUG pix2 => pix0_149
  # DEBUG pix1 => fenc_148
  # DEBUG x => 0
  # DEBUG i_sum => i_sum_152
  vectp_fenc.753_121 = fenc_148;
  vectp_pix0.756_117 = pix0_149;
  goto <bb 4>;

  <bb 8>:
  # i_sum_215 = PHI <vect_i_sum_95.761_105(5)>
  # DEBUG pix1 => NULL
  # DEBUG i_stride_pix1 => NULL
  # DEBUG pix2 => NULL
  # DEBUG i_stride_pix2 => NULL
  # DEBUG y => NULL
  # DEBUG x => NULL
  # DEBUG i_sum => NULL
  *scores_6(D) = i_sum_215;
  # DEBUG pix1 => fenc_2(D)
  # DEBUG i_stride_pix1 => 16
  # DEBUG pix2 => pix1_9(D)
  # DEBUG i_stride_pix2 => i_stride_4(D)
  # DEBUG y => 0
  # DEBUG i_sum => 0
  # DEBUG pix2 => pix1_9(D)
  # DEBUG pix1 => fenc_2(D)
  goto <bb 13>;

  <bb 9>:

  <bb 10>:
  # x_141 = PHI <x_74(9), 0(13)>
  # i_sum_144 = PHI <i_sum_73(9), i_sum_146(13)>
  # ivtmp_206 = PHI <ivtmp_205(9), 16(13)>
  # vectp_fenc.742_156 = PHI <vectp_fenc.742_155(9), vectp_fenc.743_157(13)>
  # vectp_pix1.745_136 = PHI <vectp_pix1.745_135(9), vectp_pix1.746_153(13)>
  # vect_patt_158.748_133 = PHI <vect_patt_158.748_132(9), { 0, 0, 0, 0 }(13)>
  # ivtmp_124 = PHI <ivtmp_123(9), 0(13)>
  # DEBUG x => x_141
  # DEBUG i_sum => i_sum_144
  _61 = (sizetype) x_141;
  _63 = fenc_142 + _61;
  vect__64.744_154 = MEM[(uint8_t *)vectp_fenc.742_156];
  _64 = *_63;
  _65 = (int) _64;
  _67 = pix1_143 + _61;
  vect__68.747_134 = MEM[(uint8_t *)vectp_pix1.745_136];
  _68 = *_67;
  _69 = (int) _68;
  _70 = _65 - _69;
  _71 = ABS_EXPR <_70>;
  vect_patt_158.748_132 = SAD_EXPR <vect__64.744_154, vect__68.747_134, vect_patt_158.748_133>;
  i_sum_73 = _71 + i_sum_144;
  # DEBUG i_sum => i_sum_73
  x_74 = x_141 + 1;
  # DEBUG x => x_74
  # DEBUG x => x_74
  # DEBUG i_sum => i_sum_73
  ivtmp_205 = ivtmp_206 - 1;
  vectp_fenc.742_155 = vectp_fenc.742_156 + 16;
  vectp_pix1.745_135 = vectp_pix1.745_136 + 16;
  ivtmp_123 = ivtmp_124 + 1;
  if (ivtmp_123 < 1)
    goto <bb 9>;
  else
    goto <bb 11>;

  <bb 11>:
  # i_sum_218 = PHI <i_sum_73(10)>
  # vect_patt_158.748_131 = PHI <vect_patt_158.748_132(10)>
  vect_i_sum_73.750_130 = VEC_PERM_EXPR <vect_patt_158.748_131, { 0, 0, 0, 0 }, { 2, 3, 4, 5 }>;
  vect_i_sum_73.750_129 = vect_i_sum_73.750_130 + vect_patt_158.748_131;
  vect_i_sum_73.750_128 = VEC_PERM_EXPR <vect_i_sum_73.750_129, { 0, 0, 0, 0 }, { 1, 2, 3, 4 }>;
  vect_i_sum_73.750_127 = vect_i_sum_73.750_128 + vect_i_sum_73.750_129;
  stmp_i_sum_73.749_126 = BIT_FIELD_REF <vect_i_sum_73.750_127, 32, 0>;
  vect_i_sum_73.751_125 = stmp_i_sum_73.749_126 + i_sum_146;
  fenc_75 = fenc_142 + 16;
  # DEBUG pix1 => fenc_75
  pix1_77 = pix1_143 + pretmp_223;
  # DEBUG pix2 => pix1_77
  y_79 = y_145 + 1;
  # DEBUG y => y_79
  # DEBUG y => y_79
  # DEBUG i_sum => vect_i_sum_73.751_125
  # DEBUG pix2 => pix1_77
  # DEBUG pix1 => fenc_75
  ivtmp_203 = ivtmp_204 - 1;
  if (ivtmp_203 != 0)
    goto <bb 12>;
  else
    goto <bb 14>;

  <bb 12>:

  <bb 13>:
  # fenc_142 = PHI <fenc_75(12), fenc_2(D)(8)>
  # pix1_143 = PHI <pix1_77(12), pix1_9(D)(8)>
  # y_145 = PHI <y_79(12), 0(8)>
  # i_sum_146 = PHI <vect_i_sum_73.751_125(12), 0(8)>
  # ivtmp_204 = PHI <ivtmp_203(12), 8(8)>
  # DEBUG y => y_145
  # DEBUG i_sum => i_sum_146
  # DEBUG pix2 => pix1_143
  # DEBUG pix1 => fenc_142
  # DEBUG x => 0
  # DEBUG i_sum => i_sum_146
  vectp_fenc.743_157 = fenc_142;
  vectp_pix1.746_153 = pix1_143;
  goto <bb 10>;

  <bb 14>:
  # i_sum_217 = PHI <vect_i_sum_73.751_125(11)>
  # DEBUG pix1 => NULL
  # DEBUG i_stride_pix1 => NULL
  # DEBUG pix2 => NULL
  # DEBUG i_stride_pix2 => NULL
  # DEBUG y => NULL
  # DEBUG x => NULL
  # DEBUG i_sum => NULL
  MEM[(int *)scores_6(D) + 4B] = i_sum_217;
  # DEBUG pix1 => fenc_2(D)
  # DEBUG i_stride_pix1 => 16
  # DEBUG pix2 => pix2_13(D)
  # DEBUG i_stride_pix2 => i_stride_4(D)
  # DEBUG y => 0
  # DEBUG i_sum => 0
  # DEBUG pix2 => pix2_13(D)
  # DEBUG pix1 => fenc_2(D)
  goto <bb 19>;

  <bb 15>:

  <bb 16>:
  # x_81 = PHI <x_52(15), 0(19)>
  # i_sum_138 = PHI <i_sum_51(15), i_sum_140(19)>
  # ivtmp_210 = PHI <ivtmp_209(15), 16(19)>
  # vectp_fenc.732_176 = PHI <vectp_fenc.732_175(15), vectp_fenc.733_177(19)>
  # vectp_pix2.735_172 = PHI <vectp_pix2.735_171(15), vectp_pix2.736_173(19)>
  # vect_patt_178.738_169 = PHI <vect_patt_178.738_168(15), { 0, 0, 0, 0 }(19)>
  # ivtmp_160 = PHI <ivtmp_159(15), 0(19)>
  # DEBUG x => x_81
  # DEBUG i_sum => i_sum_138
  _39 = (sizetype) x_81;
  _41 = fenc_37 + _39;
  vect__42.734_174 = MEM[(uint8_t *)vectp_fenc.732_176];
  _42 = *_41;
  _43 = (int) _42;
  _45 = pix2_137 + _39;
  vect__46.737_170 = MEM[(uint8_t *)vectp_pix2.735_172];
  _46 = *_45;
  _47 = (int) _46;
  _48 = _43 - _47;
  _49 = ABS_EXPR <_48>;
  vect_patt_178.738_168 = SAD_EXPR <vect__42.734_174, vect__46.737_170, vect_patt_178.738_169>;
  i_sum_51 = _49 + i_sum_138;
  # DEBUG i_sum => i_sum_51
  x_52 = x_81 + 1;
  # DEBUG x => x_52
  # DEBUG x => x_52
  # DEBUG i_sum => i_sum_51
  ivtmp_209 = ivtmp_210 - 1;
  vectp_fenc.732_175 = vectp_fenc.732_176 + 16;
  vectp_pix2.735_171 = vectp_pix2.735_172 + 16;
  ivtmp_159 = ivtmp_160 + 1;
  if (ivtmp_159 < 1)
    goto <bb 15>;
  else
    goto <bb 17>;

  <bb 17>:
  # i_sum_220 = PHI <i_sum_51(16)>
  # vect_patt_178.738_167 = PHI <vect_patt_178.738_168(16)>
  vect_i_sum_51.740_166 = VEC_PERM_EXPR <vect_patt_178.738_167, { 0, 0, 0, 0 }, { 2, 3, 4, 5 }>;
  vect_i_sum_51.740_165 = vect_i_sum_51.740_166 + vect_patt_178.738_167;
  vect_i_sum_51.740_164 = VEC_PERM_EXPR <vect_i_sum_51.740_165, { 0, 0, 0, 0 }, { 1, 2, 3, 4 }>;
  vect_i_sum_51.740_163 = vect_i_sum_51.740_164 + vect_i_sum_51.740_165;
  stmp_i_sum_51.739_162 = BIT_FIELD_REF <vect_i_sum_51.740_163, 32, 0>;
  vect_i_sum_51.741_161 = stmp_i_sum_51.739_162 + i_sum_140;
  fenc_53 = fenc_37 + 16;
  # DEBUG pix1 => fenc_53
  pix2_55 = pix2_137 + pretmp_223;
  # DEBUG pix2 => pix2_55
  y_57 = y_139 + 1;
  # DEBUG y => y_57
  # DEBUG y => y_57
  # DEBUG i_sum => vect_i_sum_51.741_161
  # DEBUG pix2 => pix2_55
  # DEBUG pix1 => fenc_53
  ivtmp_207 = ivtmp_208 - 1;
  if (ivtmp_207 != 0)
    goto <bb 18>;
  else
    goto <bb 20>;

  <bb 18>:

  <bb 19>:
  # fenc_37 = PHI <fenc_53(18), fenc_2(D)(14)>
  # pix2_137 = PHI <pix2_55(18), pix2_13(D)(14)>
  # y_139 = PHI <y_57(18), 0(14)>
  # i_sum_140 = PHI <vect_i_sum_51.741_161(18), 0(14)>
  # ivtmp_208 = PHI <ivtmp_207(18), 8(14)>
  # DEBUG y => y_139
  # DEBUG i_sum => i_sum_140
  # DEBUG pix2 => pix2_137
  # DEBUG pix1 => fenc_37
  # DEBUG x => 0
  # DEBUG i_sum => i_sum_140
  vectp_fenc.733_177 = fenc_37;
  vectp_pix2.736_173 = pix2_137;
  goto <bb 16>;

  <bb 20>:
  # i_sum_219 = PHI <vect_i_sum_51.741_161(17)>
  # DEBUG pix1 => NULL
  # DEBUG i_stride_pix1 => NULL
  # DEBUG pix2 => NULL
  # DEBUG i_stride_pix2 => NULL
  # DEBUG y => NULL
  # DEBUG x => NULL
  # DEBUG i_sum => NULL
  MEM[(int *)scores_6(D) + 8B] = i_sum_219;
  # DEBUG pix1 => fenc_2(D)
  # DEBUG i_stride_pix1 => 16
  # DEBUG pix2 => pix3_17(D)
  # DEBUG i_stride_pix2 => i_stride_4(D)
  # DEBUG y => 0
  # DEBUG i_sum => 0
  # DEBUG pix2 => pix3_17(D)
  # DEBUG pix1 => fenc_2(D)
  goto <bb 25>;

  <bb 21>:

  <bb 22>:
  # x_8 = PHI <x_30(21), 0(25)>
  # i_sum_59 = PHI <i_sum_29(21), i_sum_104(25)>
  # ivtmp_214 = PHI <ivtmp_213(21), 16(25)>
  # vectp_fenc.722_196 = PHI <vectp_fenc.722_195(21), vectp_fenc.723_197(25)>
  # vectp_pix3.725_192 = PHI <vectp_pix3.725_191(21), vectp_pix3.726_193(25)>
  # vect_patt_198.728_189 = PHI <vect_patt_198.728_188(21), { 0, 0, 0, 0 }(25)>
  # ivtmp_180 = PHI <ivtmp_179(21), 0(25)>
  # DEBUG x => x_8
  # DEBUG i_sum => i_sum_59
  _14 = (sizetype) x_8;
  _5 = fenc_16 + _14;
  vect__20.724_194 = MEM[(uint8_t *)vectp_fenc.722_196];
  _20 = *_5;
  _21 = (int) _20;
  _23 = pix3_103 + _14;
  vect__24.727_190 = MEM[(uint8_t *)vectp_pix3.725_192];
  _24 = *_23;
  _25 = (int) _24;
  _26 = _21 - _25;
  _27 = ABS_EXPR <_26>;
  vect_patt_198.728_188 = SAD_EXPR <vect__20.724_194, vect__24.727_190, vect_patt_198.728_189>;
  i_sum_29 = _27 + i_sum_59;
  # DEBUG i_sum => i_sum_29
  x_30 = x_8 + 1;
  # DEBUG x => x_30
  # DEBUG x => x_30
  # DEBUG i_sum => i_sum_29
  ivtmp_213 = ivtmp_214 - 1;
  vectp_fenc.722_195 = vectp_fenc.722_196 + 16;
  vectp_pix3.725_191 = vectp_pix3.725_192 + 16;
  ivtmp_179 = ivtmp_180 + 1;
  if (ivtmp_179 < 1)
    goto <bb 21>;
  else
    goto <bb 23>;

  <bb 23>:
  # i_sum_222 = PHI <i_sum_29(22)>
  # vect_patt_198.728_187 = PHI <vect_patt_198.728_188(22)>
  vect_i_sum_29.730_186 = VEC_PERM_EXPR <vect_patt_198.728_187, { 0, 0, 0, 0 }, { 2, 3, 4, 5 }>;
  vect_i_sum_29.730_185 = vect_i_sum_29.730_186 + vect_patt_198.728_187;
  vect_i_sum_29.730_184 = VEC_PERM_EXPR <vect_i_sum_29.730_185, { 0, 0, 0, 0 }, { 1, 2, 3, 4 }>;
  vect_i_sum_29.730_183 = vect_i_sum_29.730_184 + vect_i_sum_29.730_185;
  stmp_i_sum_29.729_182 = BIT_FIELD_REF <vect_i_sum_29.730_183, 32, 0>;
  vect_i_sum_29.731_181 = stmp_i_sum_29.729_182 + i_sum_104;
  fenc_31 = fenc_16 + 16;
  # DEBUG pix1 => fenc_31
  pix3_33 = pix3_103 + pretmp_223;
  # DEBUG pix2 => pix3_33
  y_35 = y_12 + 1;
  # DEBUG y => y_35
  # DEBUG y => y_35
  # DEBUG i_sum => vect_i_sum_29.731_181
  # DEBUG pix2 => pix3_33
  # DEBUG pix1 => fenc_31
  ivtmp_211 = ivtmp_212 - 1;
  if (ivtmp_211 != 0)
    goto <bb 24>;
  else
    goto <bb 26>;

  <bb 24>:

  <bb 25>:
  # fenc_16 = PHI <fenc_31(24), fenc_2(D)(20)>
  # pix3_103 = PHI <pix3_33(24), pix3_17(D)(20)>
  # y_12 = PHI <y_35(24), 0(20)>
  # i_sum_104 = PHI <vect_i_sum_29.731_181(24), 0(20)>
  # ivtmp_212 = PHI <ivtmp_211(24), 8(20)>
  # DEBUG y => y_12
  # DEBUG i_sum => i_sum_104
  # DEBUG pix2 => pix3_103
  # DEBUG pix1 => fenc_16
  # DEBUG x => 0
  # DEBUG i_sum => i_sum_104
  vectp_fenc.723_197 = fenc_16;
  vectp_pix3.726_193 = pix3_103;
  goto <bb 22>;

  <bb 26>:
  # i_sum_221 = PHI <vect_i_sum_29.731_181(23)>
  # DEBUG pix1 => NULL
  # DEBUG i_stride_pix1 => NULL
  # DEBUG pix2 => NULL
  # DEBUG i_stride_pix2 => NULL
  # DEBUG y => NULL
  # DEBUG x => NULL
  # DEBUG i_sum => NULL
  MEM[(int *)scores_6(D) + 12B] = i_sum_221;
  return;

}



;; Function x264_pixel_sad_x3_8x16 (x264_pixel_sad_x3_8x16, funcdef_no=154, decl_uid=8051, cgraph_uid=154, symbol_order=197)


Analyzing loop at common/pixel.c:61
common/pixel.c:61:1: note: ===== analyze_loop_nest =====
common/pixel.c:61:1: note: === vect_analyze_loop_form ===
common/pixel.c:61:1: note: ===== analyze_loop_nest_1 =====
common/pixel.c:61:1: note: === vect_analyze_loop_form ===
common/pixel.c:61:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 2
  exit condition [7, + , 4294967295] != 0
  bounds on difference of bases: -7 ... -7
  result:
    # of iterations 7, bounded by 7
common/pixel.c:61:1: note: Considering outer-loop vectorization.
common/pixel.c:61:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 1
  exit condition [15, + , 4294967295] != 0
  bounds on difference of bases: -15 ... -15
  result:
    # of iterations 15, bounded by 15
common/pixel.c:61:1: note: === vect_analyze_data_refs ===
Creating dr for *_16
analyze_innermost: success.
	base_address: fenc_34
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_2(D)
	Access function 0: {{0B, +, 16}_1, +, 1}_2
Creating dr for *_20
analyze_innermost: success.
	base_address: pix2_79
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix2_13(D)
	Access function 0: {{0B, +, pretmp_169}_1, +, 1}_2
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:61:1: note: analyze in outer-loop: *fenc_34
common/pixel.c:61:1: note: 	outer base_address: fenc_2(D)
	outer offset from base address: 0
	outer constant offset from base address: 0
	outer step: 16
	outer aligned to: 128
common/pixel.c:61:1: note: got vectype for stmt: _17 = *_16;
vector(16) unsigned char
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:61:1: note: analyze in outer-loop: *pix2_79
common/pixel.c:61:1: note: failed: evolution of base is not affine.
common/pixel.c:61:1: note: bad data references.

Analyzing loop at common/pixel.c:61
common/pixel.c:61:1: note: ===== analyze_loop_nest =====
common/pixel.c:61:1: note: === vect_analyze_loop_form ===
common/pixel.c:61:1: note: === get_loop_niters ===
common/pixel.c:61:1: note: === vect_analyze_data_refs ===
Creating dr for *_16
analyze_innermost: success.
	base_address: fenc_34
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_34
	Access function 0: {0B, +, 1}_2
Creating dr for *_20
analyze_innermost: success.
	base_address: pix2_79
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix2_79
	Access function 0: {0B, +, 1}_2
common/pixel.c:61:1: note: got vectype for stmt: _17 = *_16;
vector(16) unsigned char
common/pixel.c:61:1: note: got vectype for stmt: _21 = *_20;
vector(16) unsigned char
common/pixel.c:61:1: note: === vect_analyze_scalar_cycles ===
common/pixel.c:61:1: note: Analyze phi: x_8 = PHI <x_27(15), 0(19)>

common/pixel.c:61:1: note: Access function of PHI: {0, +, 1}_2
common/pixel.c:61:1: note: step: 1,  init: 0
common/pixel.c:61:1: note: Detected induction.
common/pixel.c:61:1: note: Analyze phi: i_sum_78 = PHI <i_sum_26(15), i_sum_12(19)>

common/pixel.c:61:1: note: Access function of PHI: {i_sum_12, +, _24}_2
common/pixel.c:61:1: note: step: _24,  init: i_sum_12
common/pixel.c:61:1: note: step unknown.
common/pixel.c:61:1: note: Analyze phi: ivtmp_162 = PHI <ivtmp_161(15), 8(19)>

common/pixel.c:61:1: note: Access function of PHI: {8, +, 4294967295}_2
common/pixel.c:61:1: note: step: 4294967295,  init: 8
common/pixel.c:61:1: note: Detected induction.
common/pixel.c:61:1: note: Analyze phi: i_sum_78 = PHI <i_sum_26(15), i_sum_12(19)>

common/pixel.c:61:1: note: detected reduction: i_sum_26 = _24 + i_sum_78;

common/pixel.c:61:1: note: Detected reduction.
common/pixel.c:61:1: note: === vect_pattern_recog ===
common/pixel.c:61:1: note: vect_is_simple_use: operand _24
common/pixel.c:61:1: note: def_stmt: _24 = ABS_EXPR <_23>;
common/pixel.c:61:1: note: type of def: 3.
common/pixel.c:61:1: note: vect_is_simple_use: operand _24
common/pixel.c:61:1: note: def_stmt: _24 = ABS_EXPR <_23>;
common/pixel.c:61:1: note: type of def: 3.
common/pixel.c:61:1: note: vect_is_simple_use: operand _24
common/pixel.c:61:1: note: def_stmt: _24 = ABS_EXPR <_23>;
common/pixel.c:61:1: note: type of def: 3.
common/pixel.c:61:1: note: vect_is_simple_use: operand _18
common/pixel.c:61:1: note: def_stmt: _18 = (int) _17;
common/pixel.c:61:1: note: type of def: 3.
common/pixel.c:61:1: note: vect_is_simple_use: operand _17
common/pixel.c:61:1: note: def_stmt: _17 = *_16;
common/pixel.c:61:1: note: type of def: 3.
common/pixel.c:61:1: note: vect_is_simple_use: operand _22
common/pixel.c:61:1: note: def_stmt: _22 = (int) _21;
common/pixel.c:61:1: note: type of def: 3.
common/pixel.c:61:1: note: vect_is_simple_use: operand _21
common/pixel.c:61:1: note: def_stmt: _21 = *_20;
common/pixel.c:61:1: note: type of def: 3.
common/pixel.c:61:1: note: vect_recog_sad_pattern: detected: patt_150 = SAD_EXPR <_17, _21, i_sum_78>;

common/pixel.c:61:1: note: pattern recognized: patt_150 = SAD_EXPR <_17, _21, i_sum_78>;
common/pixel.c:61:1: note: === vect_analyze_data_ref_accesses ===
common/pixel.c:61:1: note: === vect_mark_stmts_to_be_vectorized ===
common/pixel.c:61:1: note: init: phi relevant? x_8 = PHI <x_27(15), 0(19)>
common/pixel.c:61:1: note: init: phi relevant? i_sum_78 = PHI <i_sum_26(15), i_sum_12(19)>
common/pixel.c:61:1: note: init: phi relevant? ivtmp_162 = PHI <ivtmp_161(15), 8(19)>
common/pixel.c:61:1: note: init: stmt relevant? # DEBUG x => x_8
common/pixel.c:61:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_78
common/pixel.c:61:1: note: init: stmt relevant? _10 = (sizetype) x_8;
common/pixel.c:61:1: note: init: stmt relevant? _16 = fenc_34 + _10;
common/pixel.c:61:1: note: init: stmt relevant? _17 = *_16;
common/pixel.c:61:1: note: init: stmt relevant? _18 = (int) _17;
common/pixel.c:61:1: note: init: stmt relevant? _20 = pix2_79 + _10;
common/pixel.c:61:1: note: init: stmt relevant? _21 = *_20;
common/pixel.c:61:1: note: init: stmt relevant? _22 = (int) _21;
common/pixel.c:61:1: note: init: stmt relevant? _23 = _18 - _22;
common/pixel.c:61:1: note: init: stmt relevant? _24 = ABS_EXPR <_23>;
common/pixel.c:61:1: note: init: stmt relevant? i_sum_26 = _24 + i_sum_78;
common/pixel.c:61:1: note: vec_stmt_relevant_p: used out of loop.
common/pixel.c:61:1: note: mark relevant 0, live 1.
common/pixel.c:61:1: note: last stmt in pattern. don't mark relevant/live.
common/pixel.c:61:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_26
common/pixel.c:61:1: note: init: stmt relevant? x_27 = x_8 + 1;
common/pixel.c:61:1: note: init: stmt relevant? # DEBUG x => x_27
common/pixel.c:61:1: note: init: stmt relevant? # DEBUG x => x_27
common/pixel.c:61:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_26
common/pixel.c:61:1: note: init: stmt relevant? ivtmp_161 = ivtmp_162 - 1;
common/pixel.c:61:1: note: init: stmt relevant? if (ivtmp_161 != 0)
common/pixel.c:61:1: note: worklist: examine stmt: patt_150 = SAD_EXPR <_17, _21, i_sum_78>;
common/pixel.c:61:1: note: vect_is_simple_use: operand _17
common/pixel.c:61:1: note: def_stmt: _17 = *_16;
common/pixel.c:61:1: note: type of def: 3.
common/pixel.c:61:1: note: mark relevant 3, live 0.
common/pixel.c:61:1: note: vect_is_simple_use: operand _21
common/pixel.c:61:1: note: def_stmt: _21 = *_20;
common/pixel.c:61:1: note: type of def: 3.
common/pixel.c:61:1: note: mark relevant 3, live 0.
common/pixel.c:61:1: note: vect_is_simple_use: operand i_sum_78
common/pixel.c:61:1: note: def_stmt: i_sum_78 = PHI <i_sum_26(15), i_sum_12(19)>
common/pixel.c:61:1: note: type of def: 5.
common/pixel.c:61:1: note: mark relevant 3, live 0.
common/pixel.c:61:1: note: worklist: examine stmt: i_sum_78 = PHI <i_sum_26(15), i_sum_12(19)>
common/pixel.c:61:1: note: vect_is_simple_use: operand i_sum_26
common/pixel.c:61:1: note: def_stmt: i_sum_26 = _24 + i_sum_78;
common/pixel.c:61:1: note: type of def: 5.
common/pixel.c:61:1: note: reduc-stmt defining reduc-phi in the same nest.
common/pixel.c:61:1: note: vect_is_simple_use: operand i_sum_12
common/pixel.c:61:1: note: def_stmt: i_sum_12 = PHI <i_sum_168(18), 0(14)>
common/pixel.c:61:1: note: type of def: 2.
common/pixel.c:61:1: note: def_stmt is out of loop.
common/pixel.c:61:1: note: worklist: examine stmt: _21 = *_20;
common/pixel.c:61:1: note: worklist: examine stmt: _17 = *_16;
common/pixel.c:61:1: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _17 = *_16;
  stmt_b: _21 = *_20;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _17 = *_16;
  stmt_b: _17 = *_16;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_2)
  (chrec_b = {0B, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _21 = *_20;
  stmt_b: _21 = *_20;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_2)
  (chrec_b = {0B, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/pixel.c:61:1: note: === vect_determine_vectorization_factor ===
common/pixel.c:61:1: note: ==> examining phi: x_8 = PHI <x_27(15), 0(19)>

common/pixel.c:61:1: note: ==> examining phi: i_sum_78 = PHI <i_sum_26(15), i_sum_12(19)>

common/pixel.c:61:1: note: get vectype for scalar type:  int
common/pixel.c:61:1: note: vectype: vector(4) int
common/pixel.c:61:1: note: nunits = 4
common/pixel.c:61:1: note: ==> examining phi: ivtmp_162 = PHI <ivtmp_161(15), 8(19)>

common/pixel.c:61:1: note: ==> examining statement: # DEBUG x => x_8

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: # DEBUG i_sum => i_sum_78

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: _10 = (sizetype) x_8;

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: _16 = fenc_34 + _10;

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: _17 = *_16;

common/pixel.c:61:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:61:1: note: vectype: vector(16) unsigned char
common/pixel.c:61:1: note: nunits = 16
common/pixel.c:61:1: note: ==> examining statement: _18 = (int) _17;

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: _20 = pix2_79 + _10;

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: _21 = *_20;

common/pixel.c:61:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:61:1: note: vectype: vector(16) unsigned char
common/pixel.c:61:1: note: nunits = 16
common/pixel.c:61:1: note: ==> examining statement: _22 = (int) _21;

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: _23 = _18 - _22;

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: _24 = ABS_EXPR <_23>;

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: i_sum_26 = _24 + i_sum_78;

common/pixel.c:61:1: note: ==> examining pattern statement: patt_150 = SAD_EXPR <_17, _21, i_sum_78>;

common/pixel.c:61:1: note: get vectype for scalar type:  int
common/pixel.c:61:1: note: vectype: vector(4) int
common/pixel.c:61:1: note: nunits = 4
common/pixel.c:61:1: note: ==> examining statement: # DEBUG i_sum => i_sum_26

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: x_27 = x_8 + 1;

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: # DEBUG x => x_27

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: # DEBUG x => x_27

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: # DEBUG i_sum => i_sum_26

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: ivtmp_161 = ivtmp_162 - 1;

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: if (ivtmp_161 != 0)

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: vectorization factor = 16
common/pixel.c:61:1: note: === vect_analyze_data_refs_alignment ===
common/pixel.c:61:1: note: vect_compute_data_ref_alignment:
common/pixel.c:61:1: note: can't force alignment of ref: *_16
common/pixel.c:61:1: note: vect_compute_data_ref_alignment:
common/pixel.c:61:1: note: can't force alignment of ref: *_20
common/pixel.c:61:1: note: === vect_prune_runtime_alias_test_list ===
common/pixel.c:61:1: note: === vect_enhance_data_refs_alignment ===
common/pixel.c:61:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:61:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:61:1: note: vect_can_advance_ivs_p:
common/pixel.c:61:1: note: Analyze phi: x_8 = PHI <x_27(15), 0(19)>

common/pixel.c:61:1: note: Analyze phi: i_sum_78 = PHI <i_sum_26(15), i_sum_12(19)>

common/pixel.c:61:1: note: reduc phi. skip.
common/pixel.c:61:1: note: Analyze phi: ivtmp_162 = PHI <ivtmp_161(15), 8(19)>

common/pixel.c:61:1: note: Vectorizing an unaligned access.
common/pixel.c:61:1: note: Vectorizing an unaligned access.
common/pixel.c:61:1: note: === vect_analyze_slp ===
common/pixel.c:61:1: note: === vect_make_slp_decision ===
common/pixel.c:61:1: note: === vect_detect_hybrid_slp ===
common/pixel.c:61:1: note: === vect_analyze_loop_operations ===
common/pixel.c:61:1: note: examining phi: x_8 = PHI <x_27(15), 0(19)>

common/pixel.c:61:1: note: examining phi: i_sum_78 = PHI <i_sum_26(15), i_sum_12(19)>

common/pixel.c:61:1: note: examining phi: ivtmp_162 = PHI <ivtmp_161(15), 8(19)>

common/pixel.c:61:1: note: ==> examining statement: # DEBUG x => x_8
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: # DEBUG i_sum => i_sum_78
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: _10 = (sizetype) x_8;
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: _16 = fenc_34 + _10;
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: _17 = *_16;
common/pixel.c:61:1: note: vect_is_simple_use: operand *_16
common/pixel.c:61:1: note: not ssa-name.
common/pixel.c:61:1: note: use not simple.
common/pixel.c:61:1: note: vect_is_simple_use: operand *_16
common/pixel.c:61:1: note: not ssa-name.
common/pixel.c:61:1: note: use not simple.
common/pixel.c:61:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:61:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:61:1: note: ==> examining statement: _18 = (int) _17;
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: _20 = pix2_79 + _10;
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: _21 = *_20;
common/pixel.c:61:1: note: vect_is_simple_use: operand *_20
common/pixel.c:61:1: note: not ssa-name.
common/pixel.c:61:1: note: use not simple.
common/pixel.c:61:1: note: vect_is_simple_use: operand *_20
common/pixel.c:61:1: note: not ssa-name.
common/pixel.c:61:1: note: use not simple.
common/pixel.c:61:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:61:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:61:1: note: ==> examining statement: _22 = (int) _21;
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: _23 = _18 - _22;
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: _24 = ABS_EXPR <_23>;
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: i_sum_26 = _24 + i_sum_78;
common/pixel.c:61:1: note: ==> examining pattern statement: patt_150 = SAD_EXPR <_17, _21, i_sum_78>;
common/pixel.c:61:1: note: vect_is_simple_use: operand _17
common/pixel.c:61:1: note: def_stmt: _17 = *_16;
common/pixel.c:61:1: note: type of def: 3.
common/pixel.c:61:1: note: vect_is_simple_use: operand _21
common/pixel.c:61:1: note: def_stmt: _21 = *_20;
common/pixel.c:61:1: note: type of def: 3.
common/pixel.c:61:1: note: vect_is_simple_use: operand i_sum_78
common/pixel.c:61:1: note: def_stmt: i_sum_78 = PHI <i_sum_26(15), i_sum_12(19)>
common/pixel.c:61:1: note: type of def: 5.
common/pixel.c:61:1: note: detected reduction: i_sum_26 = _24 + i_sum_78;

common/pixel.c:61:1: note: reduc op not supported by target.
vect_model_reduction_cost: inside_cost = 1, prologue_cost = 1, epilogue_cost = 5 .
common/pixel.c:61:1: note: ==> examining statement: # DEBUG i_sum => i_sum_26
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: x_27 = x_8 + 1;
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: # DEBUG x => x_27
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: # DEBUG x => x_27
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: # DEBUG i_sum => i_sum_26
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: ivtmp_161 = ivtmp_162 - 1;
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: if (ivtmp_161 != 0)
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: vectorization_factor = 16, niters = 8
common/pixel.c:61:1: note: not vectorized: iteration count too small.
common/pixel.c:61:1: note: not vectorized: iteration count smaller than vectorization factor.
common/pixel.c:61:1: note: bad operation or unsupported loop bound.

Analyzing loop at common/pixel.c:61
common/pixel.c:61:1: note: ===== analyze_loop_nest =====
common/pixel.c:61:1: note: === vect_analyze_loop_form ===
common/pixel.c:61:1: note: ===== analyze_loop_nest_1 =====
common/pixel.c:61:1: note: === vect_analyze_loop_form ===
common/pixel.c:61:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 4
  exit condition [7, + , 4294967295] != 0
  bounds on difference of bases: -7 ... -7
  result:
    # of iterations 7, bounded by 7
common/pixel.c:61:1: note: Considering outer-loop vectorization.
common/pixel.c:61:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 3
  exit condition [15, + , 4294967295] != 0
  bounds on difference of bases: -15 ... -15
  result:
    # of iterations 15, bounded by 15
common/pixel.c:61:1: note: === vect_analyze_data_refs ===
Creating dr for *_38
analyze_innermost: success.
	base_address: fenc_105
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_2(D)
	Access function 0: {{0B, +, 16}_3, +, 1}_4
Creating dr for *_42
analyze_innermost: success.
	base_address: pix1_106
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix1_9(D)
	Access function 0: {{0B, +, pretmp_169}_3, +, 1}_4
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:61:1: note: analyze in outer-loop: *fenc_105
common/pixel.c:61:1: note: 	outer base_address: fenc_2(D)
	outer offset from base address: 0
	outer constant offset from base address: 0
	outer step: 16
	outer aligned to: 128
common/pixel.c:61:1: note: got vectype for stmt: _39 = *_38;
vector(16) unsigned char
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:61:1: note: analyze in outer-loop: *pix1_106
common/pixel.c:61:1: note: failed: evolution of base is not affine.
common/pixel.c:61:1: note: bad data references.

Analyzing loop at common/pixel.c:61
common/pixel.c:61:1: note: ===== analyze_loop_nest =====
common/pixel.c:61:1: note: === vect_analyze_loop_form ===
common/pixel.c:61:1: note: === get_loop_niters ===
common/pixel.c:61:1: note: === vect_analyze_data_refs ===
Creating dr for *_38
analyze_innermost: success.
	base_address: fenc_105
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_105
	Access function 0: {0B, +, 1}_4
Creating dr for *_42
analyze_innermost: success.
	base_address: pix1_106
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix1_106
	Access function 0: {0B, +, 1}_4
common/pixel.c:61:1: note: got vectype for stmt: _39 = *_38;
vector(16) unsigned char
common/pixel.c:61:1: note: got vectype for stmt: _43 = *_42;
vector(16) unsigned char
common/pixel.c:61:1: note: === vect_analyze_scalar_cycles ===
common/pixel.c:61:1: note: Analyze phi: x_104 = PHI <x_49(9), 0(13)>

common/pixel.c:61:1: note: Access function of PHI: {0, +, 1}_4
common/pixel.c:61:1: note: step: 1,  init: 0
common/pixel.c:61:1: note: Detected induction.
common/pixel.c:61:1: note: Analyze phi: i_sum_107 = PHI <i_sum_48(9), i_sum_109(13)>

common/pixel.c:61:1: note: Access function of PHI: {i_sum_109, +, _46}_4
common/pixel.c:61:1: note: step: _46,  init: i_sum_109
common/pixel.c:61:1: note: step unknown.
common/pixel.c:61:1: note: Analyze phi: ivtmp_158 = PHI <ivtmp_157(9), 8(13)>

common/pixel.c:61:1: note: Access function of PHI: {8, +, 4294967295}_4
common/pixel.c:61:1: note: step: 4294967295,  init: 8
common/pixel.c:61:1: note: Detected induction.
common/pixel.c:61:1: note: Analyze phi: i_sum_107 = PHI <i_sum_48(9), i_sum_109(13)>

common/pixel.c:61:1: note: detected reduction: i_sum_48 = _46 + i_sum_107;

common/pixel.c:61:1: note: Detected reduction.
common/pixel.c:61:1: note: === vect_pattern_recog ===
common/pixel.c:61:1: note: vect_is_simple_use: operand _46
common/pixel.c:61:1: note: def_stmt: _46 = ABS_EXPR <_45>;
common/pixel.c:61:1: note: type of def: 3.
common/pixel.c:61:1: note: vect_is_simple_use: operand _46
common/pixel.c:61:1: note: def_stmt: _46 = ABS_EXPR <_45>;
common/pixel.c:61:1: note: type of def: 3.
common/pixel.c:61:1: note: vect_is_simple_use: operand _46
common/pixel.c:61:1: note: def_stmt: _46 = ABS_EXPR <_45>;
common/pixel.c:61:1: note: type of def: 3.
common/pixel.c:61:1: note: vect_is_simple_use: operand _40
common/pixel.c:61:1: note: def_stmt: _40 = (int) _39;
common/pixel.c:61:1: note: type of def: 3.
common/pixel.c:61:1: note: vect_is_simple_use: operand _39
common/pixel.c:61:1: note: def_stmt: _39 = *_38;
common/pixel.c:61:1: note: type of def: 3.
common/pixel.c:61:1: note: vect_is_simple_use: operand _44
common/pixel.c:61:1: note: def_stmt: _44 = (int) _43;
common/pixel.c:61:1: note: type of def: 3.
common/pixel.c:61:1: note: vect_is_simple_use: operand _43
common/pixel.c:61:1: note: def_stmt: _43 = *_42;
common/pixel.c:61:1: note: type of def: 3.
common/pixel.c:61:1: note: vect_recog_sad_pattern: detected: patt_150 = SAD_EXPR <_39, _43, i_sum_107>;

common/pixel.c:61:1: note: pattern recognized: patt_150 = SAD_EXPR <_39, _43, i_sum_107>;
common/pixel.c:61:1: note: === vect_analyze_data_ref_accesses ===
common/pixel.c:61:1: note: === vect_mark_stmts_to_be_vectorized ===
common/pixel.c:61:1: note: init: phi relevant? x_104 = PHI <x_49(9), 0(13)>
common/pixel.c:61:1: note: init: phi relevant? i_sum_107 = PHI <i_sum_48(9), i_sum_109(13)>
common/pixel.c:61:1: note: init: phi relevant? ivtmp_158 = PHI <ivtmp_157(9), 8(13)>
common/pixel.c:61:1: note: init: stmt relevant? # DEBUG x => x_104
common/pixel.c:61:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_107
common/pixel.c:61:1: note: init: stmt relevant? _36 = (sizetype) x_104;
common/pixel.c:61:1: note: init: stmt relevant? _38 = fenc_105 + _36;
common/pixel.c:61:1: note: init: stmt relevant? _39 = *_38;
common/pixel.c:61:1: note: init: stmt relevant? _40 = (int) _39;
common/pixel.c:61:1: note: init: stmt relevant? _42 = pix1_106 + _36;
common/pixel.c:61:1: note: init: stmt relevant? _43 = *_42;
common/pixel.c:61:1: note: init: stmt relevant? _44 = (int) _43;
common/pixel.c:61:1: note: init: stmt relevant? _45 = _40 - _44;
common/pixel.c:61:1: note: init: stmt relevant? _46 = ABS_EXPR <_45>;
common/pixel.c:61:1: note: init: stmt relevant? i_sum_48 = _46 + i_sum_107;
common/pixel.c:61:1: note: vec_stmt_relevant_p: used out of loop.
common/pixel.c:61:1: note: mark relevant 0, live 1.
common/pixel.c:61:1: note: last stmt in pattern. don't mark relevant/live.
common/pixel.c:61:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_48
common/pixel.c:61:1: note: init: stmt relevant? x_49 = x_104 + 1;
common/pixel.c:61:1: note: init: stmt relevant? # DEBUG x => x_49
common/pixel.c:61:1: note: init: stmt relevant? # DEBUG x => x_49
common/pixel.c:61:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_48
common/pixel.c:61:1: note: init: stmt relevant? ivtmp_157 = ivtmp_158 - 1;
common/pixel.c:61:1: note: init: stmt relevant? if (ivtmp_157 != 0)
common/pixel.c:61:1: note: worklist: examine stmt: patt_150 = SAD_EXPR <_39, _43, i_sum_107>;
common/pixel.c:61:1: note: vect_is_simple_use: operand _39
common/pixel.c:61:1: note: def_stmt: _39 = *_38;
common/pixel.c:61:1: note: type of def: 3.
common/pixel.c:61:1: note: mark relevant 3, live 0.
common/pixel.c:61:1: note: vect_is_simple_use: operand _43
common/pixel.c:61:1: note: def_stmt: _43 = *_42;
common/pixel.c:61:1: note: type of def: 3.
common/pixel.c:61:1: note: mark relevant 3, live 0.
common/pixel.c:61:1: note: vect_is_simple_use: operand i_sum_107
common/pixel.c:61:1: note: def_stmt: i_sum_107 = PHI <i_sum_48(9), i_sum_109(13)>
common/pixel.c:61:1: note: type of def: 5.
common/pixel.c:61:1: note: mark relevant 3, live 0.
common/pixel.c:61:1: note: worklist: examine stmt: i_sum_107 = PHI <i_sum_48(9), i_sum_109(13)>
common/pixel.c:61:1: note: vect_is_simple_use: operand i_sum_48
common/pixel.c:61:1: note: def_stmt: i_sum_48 = _46 + i_sum_107;
common/pixel.c:61:1: note: type of def: 5.
common/pixel.c:61:1: note: reduc-stmt defining reduc-phi in the same nest.
common/pixel.c:61:1: note: vect_is_simple_use: operand i_sum_109
common/pixel.c:61:1: note: def_stmt: i_sum_109 = PHI <i_sum_166(12), 0(8)>
common/pixel.c:61:1: note: type of def: 2.
common/pixel.c:61:1: note: def_stmt is out of loop.
common/pixel.c:61:1: note: worklist: examine stmt: _43 = *_42;
common/pixel.c:61:1: note: worklist: examine stmt: _39 = *_38;
common/pixel.c:61:1: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _39 = *_38;
  stmt_b: _43 = *_42;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _39 = *_38;
  stmt_b: _39 = *_38;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_4)
  (chrec_b = {0B, +, 1}_4)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _43 = *_42;
  stmt_b: _43 = *_42;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_4)
  (chrec_b = {0B, +, 1}_4)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/pixel.c:61:1: note: === vect_determine_vectorization_factor ===
common/pixel.c:61:1: note: ==> examining phi: x_104 = PHI <x_49(9), 0(13)>

common/pixel.c:61:1: note: ==> examining phi: i_sum_107 = PHI <i_sum_48(9), i_sum_109(13)>

common/pixel.c:61:1: note: get vectype for scalar type:  int
common/pixel.c:61:1: note: vectype: vector(4) int
common/pixel.c:61:1: note: nunits = 4
common/pixel.c:61:1: note: ==> examining phi: ivtmp_158 = PHI <ivtmp_157(9), 8(13)>

common/pixel.c:61:1: note: ==> examining statement: # DEBUG x => x_104

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: # DEBUG i_sum => i_sum_107

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: _36 = (sizetype) x_104;

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: _38 = fenc_105 + _36;

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: _39 = *_38;

common/pixel.c:61:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:61:1: note: vectype: vector(16) unsigned char
common/pixel.c:61:1: note: nunits = 16
common/pixel.c:61:1: note: ==> examining statement: _40 = (int) _39;

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: _42 = pix1_106 + _36;

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: _43 = *_42;

common/pixel.c:61:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:61:1: note: vectype: vector(16) unsigned char
common/pixel.c:61:1: note: nunits = 16
common/pixel.c:61:1: note: ==> examining statement: _44 = (int) _43;

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: _45 = _40 - _44;

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: _46 = ABS_EXPR <_45>;

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: i_sum_48 = _46 + i_sum_107;

common/pixel.c:61:1: note: ==> examining pattern statement: patt_150 = SAD_EXPR <_39, _43, i_sum_107>;

common/pixel.c:61:1: note: get vectype for scalar type:  int
common/pixel.c:61:1: note: vectype: vector(4) int
common/pixel.c:61:1: note: nunits = 4
common/pixel.c:61:1: note: ==> examining statement: # DEBUG i_sum => i_sum_48

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: x_49 = x_104 + 1;

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: # DEBUG x => x_49

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: # DEBUG x => x_49

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: # DEBUG i_sum => i_sum_48

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: ivtmp_157 = ivtmp_158 - 1;

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: if (ivtmp_157 != 0)

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: vectorization factor = 16
common/pixel.c:61:1: note: === vect_analyze_data_refs_alignment ===
common/pixel.c:61:1: note: vect_compute_data_ref_alignment:
common/pixel.c:61:1: note: can't force alignment of ref: *_38
common/pixel.c:61:1: note: vect_compute_data_ref_alignment:
common/pixel.c:61:1: note: can't force alignment of ref: *_42
common/pixel.c:61:1: note: === vect_prune_runtime_alias_test_list ===
common/pixel.c:61:1: note: === vect_enhance_data_refs_alignment ===
common/pixel.c:61:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:61:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:61:1: note: vect_can_advance_ivs_p:
common/pixel.c:61:1: note: Analyze phi: x_104 = PHI <x_49(9), 0(13)>

common/pixel.c:61:1: note: Analyze phi: i_sum_107 = PHI <i_sum_48(9), i_sum_109(13)>

common/pixel.c:61:1: note: reduc phi. skip.
common/pixel.c:61:1: note: Analyze phi: ivtmp_158 = PHI <ivtmp_157(9), 8(13)>

common/pixel.c:61:1: note: Vectorizing an unaligned access.
common/pixel.c:61:1: note: Vectorizing an unaligned access.
common/pixel.c:61:1: note: === vect_analyze_slp ===
common/pixel.c:61:1: note: === vect_make_slp_decision ===
common/pixel.c:61:1: note: === vect_detect_hybrid_slp ===
common/pixel.c:61:1: note: === vect_analyze_loop_operations ===
common/pixel.c:61:1: note: examining phi: x_104 = PHI <x_49(9), 0(13)>

common/pixel.c:61:1: note: examining phi: i_sum_107 = PHI <i_sum_48(9), i_sum_109(13)>

common/pixel.c:61:1: note: examining phi: ivtmp_158 = PHI <ivtmp_157(9), 8(13)>

common/pixel.c:61:1: note: ==> examining statement: # DEBUG x => x_104
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: # DEBUG i_sum => i_sum_107
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: _36 = (sizetype) x_104;
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: _38 = fenc_105 + _36;
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: _39 = *_38;
common/pixel.c:61:1: note: vect_is_simple_use: operand *_38
common/pixel.c:61:1: note: not ssa-name.
common/pixel.c:61:1: note: use not simple.
common/pixel.c:61:1: note: vect_is_simple_use: operand *_38
common/pixel.c:61:1: note: not ssa-name.
common/pixel.c:61:1: note: use not simple.
common/pixel.c:61:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:61:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:61:1: note: ==> examining statement: _40 = (int) _39;
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: _42 = pix1_106 + _36;
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: _43 = *_42;
common/pixel.c:61:1: note: vect_is_simple_use: operand *_42
common/pixel.c:61:1: note: not ssa-name.
common/pixel.c:61:1: note: use not simple.
common/pixel.c:61:1: note: vect_is_simple_use: operand *_42
common/pixel.c:61:1: note: not ssa-name.
common/pixel.c:61:1: note: use not simple.
common/pixel.c:61:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:61:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:61:1: note: ==> examining statement: _44 = (int) _43;
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: _45 = _40 - _44;
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: _46 = ABS_EXPR <_45>;
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: i_sum_48 = _46 + i_sum_107;
common/pixel.c:61:1: note: ==> examining pattern statement: patt_150 = SAD_EXPR <_39, _43, i_sum_107>;
common/pixel.c:61:1: note: vect_is_simple_use: operand _39
common/pixel.c:61:1: note: def_stmt: _39 = *_38;
common/pixel.c:61:1: note: type of def: 3.
common/pixel.c:61:1: note: vect_is_simple_use: operand _43
common/pixel.c:61:1: note: def_stmt: _43 = *_42;
common/pixel.c:61:1: note: type of def: 3.
common/pixel.c:61:1: note: vect_is_simple_use: operand i_sum_107
common/pixel.c:61:1: note: def_stmt: i_sum_107 = PHI <i_sum_48(9), i_sum_109(13)>
common/pixel.c:61:1: note: type of def: 5.
common/pixel.c:61:1: note: detected reduction: i_sum_48 = _46 + i_sum_107;

common/pixel.c:61:1: note: reduc op not supported by target.
vect_model_reduction_cost: inside_cost = 1, prologue_cost = 1, epilogue_cost = 5 .
common/pixel.c:61:1: note: ==> examining statement: # DEBUG i_sum => i_sum_48
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: x_49 = x_104 + 1;
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: # DEBUG x => x_49
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: # DEBUG x => x_49
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: # DEBUG i_sum => i_sum_48
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: ivtmp_157 = ivtmp_158 - 1;
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: if (ivtmp_157 != 0)
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: vectorization_factor = 16, niters = 8
common/pixel.c:61:1: note: not vectorized: iteration count too small.
common/pixel.c:61:1: note: not vectorized: iteration count smaller than vectorization factor.
common/pixel.c:61:1: note: bad operation or unsupported loop bound.

Analyzing loop at common/pixel.c:61
common/pixel.c:61:1: note: ===== analyze_loop_nest =====
common/pixel.c:61:1: note: === vect_analyze_loop_form ===
common/pixel.c:61:1: note: ===== analyze_loop_nest_1 =====
common/pixel.c:61:1: note: === vect_analyze_loop_form ===
common/pixel.c:61:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 6
  exit condition [7, + , 4294967295] != 0
  bounds on difference of bases: -7 ... -7
  result:
    # of iterations 7, bounded by 7
common/pixel.c:61:1: note: Considering outer-loop vectorization.
common/pixel.c:61:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 5
  exit condition [15, + , 4294967295] != 0
  bounds on difference of bases: -15 ... -15
  result:
    # of iterations 15, bounded by 15
common/pixel.c:61:1: note: === vect_analyze_data_refs ===
Creating dr for *_60
analyze_innermost: success.
	base_address: fenc_111
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_2(D)
	Access function 0: {{0B, +, 16}_5, +, 1}_6
Creating dr for *_64
analyze_innermost: success.
	base_address: pix0_112
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix0_3(D)
	Access function 0: {{0B, +, pretmp_169}_5, +, 1}_6
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:61:1: note: analyze in outer-loop: *fenc_111
common/pixel.c:61:1: note: 	outer base_address: fenc_2(D)
	outer offset from base address: 0
	outer constant offset from base address: 0
	outer step: 16
	outer aligned to: 128
common/pixel.c:61:1: note: got vectype for stmt: _61 = *_60;
vector(16) unsigned char
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:61:1: note: analyze in outer-loop: *pix0_112
common/pixel.c:61:1: note: failed: evolution of base is not affine.
common/pixel.c:61:1: note: bad data references.

Analyzing loop at common/pixel.c:61
common/pixel.c:61:1: note: ===== analyze_loop_nest =====
common/pixel.c:61:1: note: === vect_analyze_loop_form ===
common/pixel.c:61:1: note: === get_loop_niters ===
common/pixel.c:61:1: note: === vect_analyze_data_refs ===
Creating dr for *_60
analyze_innermost: success.
	base_address: fenc_111
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_111
	Access function 0: {0B, +, 1}_6
Creating dr for *_64
analyze_innermost: success.
	base_address: pix0_112
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix0_112
	Access function 0: {0B, +, 1}_6
common/pixel.c:61:1: note: got vectype for stmt: _61 = *_60;
vector(16) unsigned char
common/pixel.c:61:1: note: got vectype for stmt: _65 = *_64;
vector(16) unsigned char
common/pixel.c:61:1: note: === vect_analyze_scalar_cycles ===
common/pixel.c:61:1: note: Analyze phi: x_110 = PHI <x_71(3), 0(7)>

common/pixel.c:61:1: note: Access function of PHI: {0, +, 1}_6
common/pixel.c:61:1: note: step: 1,  init: 0
common/pixel.c:61:1: note: Detected induction.
common/pixel.c:61:1: note: Analyze phi: i_sum_113 = PHI <i_sum_70(3), i_sum_115(7)>

common/pixel.c:61:1: note: Access function of PHI: {i_sum_115, +, _68}_6
common/pixel.c:61:1: note: step: _68,  init: i_sum_115
common/pixel.c:61:1: note: step unknown.
common/pixel.c:61:1: note: Analyze phi: ivtmp_154 = PHI <ivtmp_153(3), 8(7)>

common/pixel.c:61:1: note: Access function of PHI: {8, +, 4294967295}_6
common/pixel.c:61:1: note: step: 4294967295,  init: 8
common/pixel.c:61:1: note: Detected induction.
common/pixel.c:61:1: note: Analyze phi: i_sum_113 = PHI <i_sum_70(3), i_sum_115(7)>

common/pixel.c:61:1: note: detected reduction: i_sum_70 = _68 + i_sum_113;

common/pixel.c:61:1: note: Detected reduction.
common/pixel.c:61:1: note: === vect_pattern_recog ===
common/pixel.c:61:1: note: vect_is_simple_use: operand _68
common/pixel.c:61:1: note: def_stmt: _68 = ABS_EXPR <_67>;
common/pixel.c:61:1: note: type of def: 3.
common/pixel.c:61:1: note: vect_is_simple_use: operand _68
common/pixel.c:61:1: note: def_stmt: _68 = ABS_EXPR <_67>;
common/pixel.c:61:1: note: type of def: 3.
common/pixel.c:61:1: note: vect_is_simple_use: operand _68
common/pixel.c:61:1: note: def_stmt: _68 = ABS_EXPR <_67>;
common/pixel.c:61:1: note: type of def: 3.
common/pixel.c:61:1: note: vect_is_simple_use: operand _62
common/pixel.c:61:1: note: def_stmt: _62 = (int) _61;
common/pixel.c:61:1: note: type of def: 3.
common/pixel.c:61:1: note: vect_is_simple_use: operand _61
common/pixel.c:61:1: note: def_stmt: _61 = *_60;
common/pixel.c:61:1: note: type of def: 3.
common/pixel.c:61:1: note: vect_is_simple_use: operand _66
common/pixel.c:61:1: note: def_stmt: _66 = (int) _65;
common/pixel.c:61:1: note: type of def: 3.
common/pixel.c:61:1: note: vect_is_simple_use: operand _65
common/pixel.c:61:1: note: def_stmt: _65 = *_64;
common/pixel.c:61:1: note: type of def: 3.
common/pixel.c:61:1: note: vect_recog_sad_pattern: detected: patt_150 = SAD_EXPR <_61, _65, i_sum_113>;

common/pixel.c:61:1: note: pattern recognized: patt_150 = SAD_EXPR <_61, _65, i_sum_113>;
common/pixel.c:61:1: note: === vect_analyze_data_ref_accesses ===
common/pixel.c:61:1: note: === vect_mark_stmts_to_be_vectorized ===
common/pixel.c:61:1: note: init: phi relevant? x_110 = PHI <x_71(3), 0(7)>
common/pixel.c:61:1: note: init: phi relevant? i_sum_113 = PHI <i_sum_70(3), i_sum_115(7)>
common/pixel.c:61:1: note: init: phi relevant? ivtmp_154 = PHI <ivtmp_153(3), 8(7)>
common/pixel.c:61:1: note: init: stmt relevant? # DEBUG x => x_110
common/pixel.c:61:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_113
common/pixel.c:61:1: note: init: stmt relevant? _58 = (sizetype) x_110;
common/pixel.c:61:1: note: init: stmt relevant? _60 = fenc_111 + _58;
common/pixel.c:61:1: note: init: stmt relevant? _61 = *_60;
common/pixel.c:61:1: note: init: stmt relevant? _62 = (int) _61;
common/pixel.c:61:1: note: init: stmt relevant? _64 = pix0_112 + _58;
common/pixel.c:61:1: note: init: stmt relevant? _65 = *_64;
common/pixel.c:61:1: note: init: stmt relevant? _66 = (int) _65;
common/pixel.c:61:1: note: init: stmt relevant? _67 = _62 - _66;
common/pixel.c:61:1: note: init: stmt relevant? _68 = ABS_EXPR <_67>;
common/pixel.c:61:1: note: init: stmt relevant? i_sum_70 = _68 + i_sum_113;
common/pixel.c:61:1: note: vec_stmt_relevant_p: used out of loop.
common/pixel.c:61:1: note: mark relevant 0, live 1.
common/pixel.c:61:1: note: last stmt in pattern. don't mark relevant/live.
common/pixel.c:61:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_70
common/pixel.c:61:1: note: init: stmt relevant? x_71 = x_110 + 1;
common/pixel.c:61:1: note: init: stmt relevant? # DEBUG x => x_71
common/pixel.c:61:1: note: init: stmt relevant? # DEBUG x => x_71
common/pixel.c:61:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_70
common/pixel.c:61:1: note: init: stmt relevant? ivtmp_153 = ivtmp_154 - 1;
common/pixel.c:61:1: note: init: stmt relevant? if (ivtmp_153 != 0)
common/pixel.c:61:1: note: worklist: examine stmt: patt_150 = SAD_EXPR <_61, _65, i_sum_113>;
common/pixel.c:61:1: note: vect_is_simple_use: operand _61
common/pixel.c:61:1: note: def_stmt: _61 = *_60;
common/pixel.c:61:1: note: type of def: 3.
common/pixel.c:61:1: note: mark relevant 3, live 0.
common/pixel.c:61:1: note: vect_is_simple_use: operand _65
common/pixel.c:61:1: note: def_stmt: _65 = *_64;
common/pixel.c:61:1: note: type of def: 3.
common/pixel.c:61:1: note: mark relevant 3, live 0.
common/pixel.c:61:1: note: vect_is_simple_use: operand i_sum_113
common/pixel.c:61:1: note: def_stmt: i_sum_113 = PHI <i_sum_70(3), i_sum_115(7)>
common/pixel.c:61:1: note: type of def: 5.
common/pixel.c:61:1: note: mark relevant 3, live 0.
common/pixel.c:61:1: note: worklist: examine stmt: i_sum_113 = PHI <i_sum_70(3), i_sum_115(7)>
common/pixel.c:61:1: note: vect_is_simple_use: operand i_sum_70
common/pixel.c:61:1: note: def_stmt: i_sum_70 = _68 + i_sum_113;
common/pixel.c:61:1: note: type of def: 5.
common/pixel.c:61:1: note: reduc-stmt defining reduc-phi in the same nest.
common/pixel.c:61:1: note: vect_is_simple_use: operand i_sum_115
common/pixel.c:61:1: note: def_stmt: i_sum_115 = PHI <i_sum_164(6), 0(2)>
common/pixel.c:61:1: note: type of def: 2.
common/pixel.c:61:1: note: def_stmt is out of loop.
common/pixel.c:61:1: note: worklist: examine stmt: _65 = *_64;
common/pixel.c:61:1: note: worklist: examine stmt: _61 = *_60;
common/pixel.c:61:1: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _61 = *_60;
  stmt_b: _65 = *_64;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _61 = *_60;
  stmt_b: _61 = *_60;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_6)
  (chrec_b = {0B, +, 1}_6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _65 = *_64;
  stmt_b: _65 = *_64;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_6)
  (chrec_b = {0B, +, 1}_6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/pixel.c:61:1: note: === vect_determine_vectorization_factor ===
common/pixel.c:61:1: note: ==> examining phi: x_110 = PHI <x_71(3), 0(7)>

common/pixel.c:61:1: note: ==> examining phi: i_sum_113 = PHI <i_sum_70(3), i_sum_115(7)>

common/pixel.c:61:1: note: get vectype for scalar type:  int
common/pixel.c:61:1: note: vectype: vector(4) int
common/pixel.c:61:1: note: nunits = 4
common/pixel.c:61:1: note: ==> examining phi: ivtmp_154 = PHI <ivtmp_153(3), 8(7)>

common/pixel.c:61:1: note: ==> examining statement: # DEBUG x => x_110

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: # DEBUG i_sum => i_sum_113

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: _58 = (sizetype) x_110;

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: _60 = fenc_111 + _58;

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: _61 = *_60;

common/pixel.c:61:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:61:1: note: vectype: vector(16) unsigned char
common/pixel.c:61:1: note: nunits = 16
common/pixel.c:61:1: note: ==> examining statement: _62 = (int) _61;

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: _64 = pix0_112 + _58;

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: _65 = *_64;

common/pixel.c:61:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:61:1: note: vectype: vector(16) unsigned char
common/pixel.c:61:1: note: nunits = 16
common/pixel.c:61:1: note: ==> examining statement: _66 = (int) _65;

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: _67 = _62 - _66;

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: _68 = ABS_EXPR <_67>;

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: i_sum_70 = _68 + i_sum_113;

common/pixel.c:61:1: note: ==> examining pattern statement: patt_150 = SAD_EXPR <_61, _65, i_sum_113>;

common/pixel.c:61:1: note: get vectype for scalar type:  int
common/pixel.c:61:1: note: vectype: vector(4) int
common/pixel.c:61:1: note: nunits = 4
common/pixel.c:61:1: note: ==> examining statement: # DEBUG i_sum => i_sum_70

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: x_71 = x_110 + 1;

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: # DEBUG x => x_71

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: # DEBUG x => x_71

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: # DEBUG i_sum => i_sum_70

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: ivtmp_153 = ivtmp_154 - 1;

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: if (ivtmp_153 != 0)

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: vectorization factor = 16
common/pixel.c:61:1: note: === vect_analyze_data_refs_alignment ===
common/pixel.c:61:1: note: vect_compute_data_ref_alignment:
common/pixel.c:61:1: note: can't force alignment of ref: *_60
common/pixel.c:61:1: note: vect_compute_data_ref_alignment:
common/pixel.c:61:1: note: can't force alignment of ref: *_64
common/pixel.c:61:1: note: === vect_prune_runtime_alias_test_list ===
common/pixel.c:61:1: note: === vect_enhance_data_refs_alignment ===
common/pixel.c:61:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:61:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:61:1: note: vect_can_advance_ivs_p:
common/pixel.c:61:1: note: Analyze phi: x_110 = PHI <x_71(3), 0(7)>

common/pixel.c:61:1: note: Analyze phi: i_sum_113 = PHI <i_sum_70(3), i_sum_115(7)>

common/pixel.c:61:1: note: reduc phi. skip.
common/pixel.c:61:1: note: Analyze phi: ivtmp_154 = PHI <ivtmp_153(3), 8(7)>

common/pixel.c:61:1: note: Vectorizing an unaligned access.
common/pixel.c:61:1: note: Vectorizing an unaligned access.
common/pixel.c:61:1: note: === vect_analyze_slp ===
common/pixel.c:61:1: note: === vect_make_slp_decision ===
common/pixel.c:61:1: note: === vect_detect_hybrid_slp ===
common/pixel.c:61:1: note: === vect_analyze_loop_operations ===
common/pixel.c:61:1: note: examining phi: x_110 = PHI <x_71(3), 0(7)>

common/pixel.c:61:1: note: examining phi: i_sum_113 = PHI <i_sum_70(3), i_sum_115(7)>

common/pixel.c:61:1: note: examining phi: ivtmp_154 = PHI <ivtmp_153(3), 8(7)>

common/pixel.c:61:1: note: ==> examining statement: # DEBUG x => x_110
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: # DEBUG i_sum => i_sum_113
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: _58 = (sizetype) x_110;
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: _60 = fenc_111 + _58;
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: _61 = *_60;
common/pixel.c:61:1: note: vect_is_simple_use: operand *_60
common/pixel.c:61:1: note: not ssa-name.
common/pixel.c:61:1: note: use not simple.
common/pixel.c:61:1: note: vect_is_simple_use: operand *_60
common/pixel.c:61:1: note: not ssa-name.
common/pixel.c:61:1: note: use not simple.
common/pixel.c:61:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:61:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:61:1: note: ==> examining statement: _62 = (int) _61;
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: _64 = pix0_112 + _58;
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: _65 = *_64;
common/pixel.c:61:1: note: vect_is_simple_use: operand *_64
common/pixel.c:61:1: note: not ssa-name.
common/pixel.c:61:1: note: use not simple.
common/pixel.c:61:1: note: vect_is_simple_use: operand *_64
common/pixel.c:61:1: note: not ssa-name.
common/pixel.c:61:1: note: use not simple.
common/pixel.c:61:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:61:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:61:1: note: ==> examining statement: _66 = (int) _65;
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: _67 = _62 - _66;
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: _68 = ABS_EXPR <_67>;
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: i_sum_70 = _68 + i_sum_113;
common/pixel.c:61:1: note: ==> examining pattern statement: patt_150 = SAD_EXPR <_61, _65, i_sum_113>;
common/pixel.c:61:1: note: vect_is_simple_use: operand _61
common/pixel.c:61:1: note: def_stmt: _61 = *_60;
common/pixel.c:61:1: note: type of def: 3.
common/pixel.c:61:1: note: vect_is_simple_use: operand _65
common/pixel.c:61:1: note: def_stmt: _65 = *_64;
common/pixel.c:61:1: note: type of def: 3.
common/pixel.c:61:1: note: vect_is_simple_use: operand i_sum_113
common/pixel.c:61:1: note: def_stmt: i_sum_113 = PHI <i_sum_70(3), i_sum_115(7)>
common/pixel.c:61:1: note: type of def: 5.
common/pixel.c:61:1: note: detected reduction: i_sum_70 = _68 + i_sum_113;

common/pixel.c:61:1: note: reduc op not supported by target.
vect_model_reduction_cost: inside_cost = 1, prologue_cost = 1, epilogue_cost = 5 .
common/pixel.c:61:1: note: ==> examining statement: # DEBUG i_sum => i_sum_70
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: x_71 = x_110 + 1;
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: # DEBUG x => x_71
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: # DEBUG x => x_71
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: # DEBUG i_sum => i_sum_70
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: ivtmp_153 = ivtmp_154 - 1;
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: if (ivtmp_153 != 0)
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: vectorization_factor = 16, niters = 8
common/pixel.c:61:1: note: not vectorized: iteration count too small.
common/pixel.c:61:1: note: not vectorized: iteration count smaller than vectorization factor.
common/pixel.c:61:1: note: bad operation or unsupported loop bound.
common/pixel.c:385:1: note: vectorized 0 loops in function.
x264_pixel_sad_x3_8x16 (uint8_t * fenc, uint8_t * pix0, uint8_t * pix1, uint8_t * pix2, int i_stride, int * scores)
{
  int i_sum;
  int x;
  int y;
  int i_sum;
  int x;
  int y;
  int i_sum;
  int x;
  int y;
  sizetype _10;
  uint8_t * _16;
  unsigned char _17;
  int _18;
  uint8_t * _20;
  unsigned char _21;
  int _22;
  int _23;
  int _24;
  sizetype _36;
  uint8_t * _38;
  unsigned char _39;
  int _40;
  uint8_t * _42;
  unsigned char _43;
  int _44;
  int _45;
  int _46;
  sizetype _58;
  uint8_t * _60;
  unsigned char _61;
  int _62;
  uint8_t * _64;
  unsigned char _65;
  int _66;
  int _67;
  int _68;
  unsigned int ivtmp_151;
  unsigned int ivtmp_152;
  unsigned int ivtmp_153;
  unsigned int ivtmp_154;
  unsigned int ivtmp_155;
  unsigned int ivtmp_156;
  unsigned int ivtmp_157;
  unsigned int ivtmp_158;
  unsigned int ivtmp_159;
  unsigned int ivtmp_160;
  unsigned int ivtmp_161;
  unsigned int ivtmp_162;
  sizetype pretmp_169;

  <bb 2>:
  # DEBUG pix1 => fenc_2(D)
  # DEBUG i_stride_pix1 => 16
  # DEBUG pix2 => pix0_3(D)
  # DEBUG i_stride_pix2 => i_stride_4(D)
  # DEBUG i_sum => 0
  # DEBUG y => 0
  # DEBUG y => 0
  # DEBUG i_sum => 0
  # DEBUG pix2 => pix0_3(D)
  # DEBUG pix1 => fenc_2(D)
  pretmp_169 = (sizetype) i_stride_4(D);
  goto <bb 7>;

  <bb 3>:

  <bb 4>:
  # x_110 = PHI <x_71(3), 0(7)>
  # i_sum_113 = PHI <i_sum_70(3), i_sum_115(7)>
  # ivtmp_154 = PHI <ivtmp_153(3), 8(7)>
  # DEBUG x => x_110
  # DEBUG i_sum => i_sum_113
  _58 = (sizetype) x_110;
  _60 = fenc_111 + _58;
  _61 = *_60;
  _62 = (int) _61;
  _64 = pix0_112 + _58;
  _65 = *_64;
  _66 = (int) _65;
  _67 = _62 - _66;
  _68 = ABS_EXPR <_67>;
  i_sum_70 = _68 + i_sum_113;
  # DEBUG i_sum => i_sum_70
  x_71 = x_110 + 1;
  # DEBUG x => x_71
  # DEBUG x => x_71
  # DEBUG i_sum => i_sum_70
  ivtmp_153 = ivtmp_154 - 1;
  if (ivtmp_153 != 0)
    goto <bb 3>;
  else
    goto <bb 5>;

  <bb 5>:
  # i_sum_164 = PHI <i_sum_70(4)>
  fenc_72 = fenc_111 + 16;
  # DEBUG pix1 => fenc_72
  pix0_74 = pix0_112 + pretmp_169;
  # DEBUG pix2 => pix0_74
  y_76 = y_114 + 1;
  # DEBUG y => y_76
  # DEBUG y => y_76
  # DEBUG i_sum => i_sum_164
  # DEBUG pix2 => pix0_74
  # DEBUG pix1 => fenc_72
  ivtmp_151 = ivtmp_152 - 1;
  if (ivtmp_151 != 0)
    goto <bb 6>;
  else
    goto <bb 8>;

  <bb 6>:

  <bb 7>:
  # fenc_111 = PHI <fenc_72(6), fenc_2(D)(2)>
  # pix0_112 = PHI <pix0_74(6), pix0_3(D)(2)>
  # y_114 = PHI <y_76(6), 0(2)>
  # i_sum_115 = PHI <i_sum_164(6), 0(2)>
  # ivtmp_152 = PHI <ivtmp_151(6), 16(2)>
  # DEBUG y => y_114
  # DEBUG i_sum => i_sum_115
  # DEBUG pix2 => pix0_112
  # DEBUG pix1 => fenc_111
  # DEBUG x => 0
  # DEBUG i_sum => i_sum_115
  goto <bb 4>;

  <bb 8>:
  # i_sum_163 = PHI <i_sum_164(5)>
  # DEBUG pix1 => NULL
  # DEBUG i_stride_pix1 => NULL
  # DEBUG pix2 => NULL
  # DEBUG i_stride_pix2 => NULL
  # DEBUG y => NULL
  # DEBUG x => NULL
  # DEBUG i_sum => NULL
  *scores_6(D) = i_sum_163;
  # DEBUG pix1 => fenc_2(D)
  # DEBUG i_stride_pix1 => 16
  # DEBUG pix2 => pix1_9(D)
  # DEBUG i_stride_pix2 => i_stride_4(D)
  # DEBUG y => 0
  # DEBUG i_sum => 0
  # DEBUG pix2 => pix1_9(D)
  # DEBUG pix1 => fenc_2(D)
  goto <bb 13>;

  <bb 9>:

  <bb 10>:
  # x_104 = PHI <x_49(9), 0(13)>
  # i_sum_107 = PHI <i_sum_48(9), i_sum_109(13)>
  # ivtmp_158 = PHI <ivtmp_157(9), 8(13)>
  # DEBUG x => x_104
  # DEBUG i_sum => i_sum_107
  _36 = (sizetype) x_104;
  _38 = fenc_105 + _36;
  _39 = *_38;
  _40 = (int) _39;
  _42 = pix1_106 + _36;
  _43 = *_42;
  _44 = (int) _43;
  _45 = _40 - _44;
  _46 = ABS_EXPR <_45>;
  i_sum_48 = _46 + i_sum_107;
  # DEBUG i_sum => i_sum_48
  x_49 = x_104 + 1;
  # DEBUG x => x_49
  # DEBUG x => x_49
  # DEBUG i_sum => i_sum_48
  ivtmp_157 = ivtmp_158 - 1;
  if (ivtmp_157 != 0)
    goto <bb 9>;
  else
    goto <bb 11>;

  <bb 11>:
  # i_sum_166 = PHI <i_sum_48(10)>
  fenc_50 = fenc_105 + 16;
  # DEBUG pix1 => fenc_50
  pix1_52 = pix1_106 + pretmp_169;
  # DEBUG pix2 => pix1_52
  y_54 = y_108 + 1;
  # DEBUG y => y_54
  # DEBUG y => y_54
  # DEBUG i_sum => i_sum_166
  # DEBUG pix2 => pix1_52
  # DEBUG pix1 => fenc_50
  ivtmp_155 = ivtmp_156 - 1;
  if (ivtmp_155 != 0)
    goto <bb 12>;
  else
    goto <bb 14>;

  <bb 12>:

  <bb 13>:
  # fenc_105 = PHI <fenc_50(12), fenc_2(D)(8)>
  # pix1_106 = PHI <pix1_52(12), pix1_9(D)(8)>
  # y_108 = PHI <y_54(12), 0(8)>
  # i_sum_109 = PHI <i_sum_166(12), 0(8)>
  # ivtmp_156 = PHI <ivtmp_155(12), 16(8)>
  # DEBUG y => y_108
  # DEBUG i_sum => i_sum_109
  # DEBUG pix2 => pix1_106
  # DEBUG pix1 => fenc_105
  # DEBUG x => 0
  # DEBUG i_sum => i_sum_109
  goto <bb 10>;

  <bb 14>:
  # i_sum_165 = PHI <i_sum_166(11)>
  # DEBUG pix1 => NULL
  # DEBUG i_stride_pix1 => NULL
  # DEBUG pix2 => NULL
  # DEBUG i_stride_pix2 => NULL
  # DEBUG y => NULL
  # DEBUG x => NULL
  # DEBUG i_sum => NULL
  MEM[(int *)scores_6(D) + 4B] = i_sum_165;
  # DEBUG pix1 => fenc_2(D)
  # DEBUG i_stride_pix1 => 16
  # DEBUG pix2 => pix2_13(D)
  # DEBUG i_stride_pix2 => i_stride_4(D)
  # DEBUG y => 0
  # DEBUG i_sum => 0
  # DEBUG pix2 => pix2_13(D)
  # DEBUG pix1 => fenc_2(D)
  goto <bb 19>;

  <bb 15>:

  <bb 16>:
  # x_8 = PHI <x_27(15), 0(19)>
  # i_sum_78 = PHI <i_sum_26(15), i_sum_12(19)>
  # ivtmp_162 = PHI <ivtmp_161(15), 8(19)>
  # DEBUG x => x_8
  # DEBUG i_sum => i_sum_78
  _10 = (sizetype) x_8;
  _16 = fenc_34 + _10;
  _17 = *_16;
  _18 = (int) _17;
  _20 = pix2_79 + _10;
  _21 = *_20;
  _22 = (int) _21;
  _23 = _18 - _22;
  _24 = ABS_EXPR <_23>;
  i_sum_26 = _24 + i_sum_78;
  # DEBUG i_sum => i_sum_26
  x_27 = x_8 + 1;
  # DEBUG x => x_27
  # DEBUG x => x_27
  # DEBUG i_sum => i_sum_26
  ivtmp_161 = ivtmp_162 - 1;
  if (ivtmp_161 != 0)
    goto <bb 15>;
  else
    goto <bb 17>;

  <bb 17>:
  # i_sum_168 = PHI <i_sum_26(16)>
  fenc_28 = fenc_34 + 16;
  # DEBUG pix1 => fenc_28
  pix2_30 = pix2_79 + pretmp_169;
  # DEBUG pix2 => pix2_30
  y_32 = y_56 + 1;
  # DEBUG y => y_32
  # DEBUG y => y_32
  # DEBUG i_sum => i_sum_168
  # DEBUG pix2 => pix2_30
  # DEBUG pix1 => fenc_28
  ivtmp_159 = ivtmp_160 - 1;
  if (ivtmp_159 != 0)
    goto <bb 18>;
  else
    goto <bb 20>;

  <bb 18>:

  <bb 19>:
  # fenc_34 = PHI <fenc_28(18), fenc_2(D)(14)>
  # pix2_79 = PHI <pix2_30(18), pix2_13(D)(14)>
  # y_56 = PHI <y_32(18), 0(14)>
  # i_sum_12 = PHI <i_sum_168(18), 0(14)>
  # ivtmp_160 = PHI <ivtmp_159(18), 16(14)>
  # DEBUG y => y_56
  # DEBUG i_sum => i_sum_12
  # DEBUG pix2 => pix2_79
  # DEBUG pix1 => fenc_34
  # DEBUG x => 0
  # DEBUG i_sum => i_sum_12
  goto <bb 16>;

  <bb 20>:
  # i_sum_167 = PHI <i_sum_168(17)>
  # DEBUG pix1 => NULL
  # DEBUG i_stride_pix1 => NULL
  # DEBUG pix2 => NULL
  # DEBUG i_stride_pix2 => NULL
  # DEBUG y => NULL
  # DEBUG x => NULL
  # DEBUG i_sum => NULL
  MEM[(int *)scores_6(D) + 8B] = i_sum_167;
  return;

}



;; Function x264_pixel_sad_x4_8x16 (x264_pixel_sad_x4_8x16, funcdef_no=155, decl_uid=8060, cgraph_uid=155, symbol_order=198)


Analyzing loop at common/pixel.c:61
common/pixel.c:61:1: note: ===== analyze_loop_nest =====
common/pixel.c:61:1: note: === vect_analyze_loop_form ===
common/pixel.c:61:1: note: ===== analyze_loop_nest_1 =====
common/pixel.c:61:1: note: === vect_analyze_loop_form ===
common/pixel.c:61:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 2
  exit condition [7, + , 4294967295] != 0
  bounds on difference of bases: -7 ... -7
  result:
    # of iterations 7, bounded by 7
common/pixel.c:61:1: note: Considering outer-loop vectorization.
common/pixel.c:61:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 1
  exit condition [15, + , 4294967295] != 0
  bounds on difference of bases: -15 ... -15
  result:
    # of iterations 15, bounded by 15
common/pixel.c:61:1: note: === vect_analyze_data_refs ===
Creating dr for *_5
analyze_innermost: success.
	base_address: fenc_16
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_2(D)
	Access function 0: {{0B, +, 16}_1, +, 1}_2
Creating dr for *_23
analyze_innermost: success.
	base_address: pix3_103
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix3_17(D)
	Access function 0: {{0B, +, pretmp_223}_1, +, 1}_2
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:61:1: note: analyze in outer-loop: *fenc_16
common/pixel.c:61:1: note: 	outer base_address: fenc_2(D)
	outer offset from base address: 0
	outer constant offset from base address: 0
	outer step: 16
	outer aligned to: 128
common/pixel.c:61:1: note: got vectype for stmt: _20 = *_5;
vector(16) unsigned char
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:61:1: note: analyze in outer-loop: *pix3_103
common/pixel.c:61:1: note: failed: evolution of base is not affine.
common/pixel.c:61:1: note: bad data references.

Analyzing loop at common/pixel.c:61
common/pixel.c:61:1: note: ===== analyze_loop_nest =====
common/pixel.c:61:1: note: === vect_analyze_loop_form ===
common/pixel.c:61:1: note: === get_loop_niters ===
common/pixel.c:61:1: note: === vect_analyze_data_refs ===
Creating dr for *_5
analyze_innermost: success.
	base_address: fenc_16
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_16
	Access function 0: {0B, +, 1}_2
Creating dr for *_23
analyze_innermost: success.
	base_address: pix3_103
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix3_103
	Access function 0: {0B, +, 1}_2
common/pixel.c:61:1: note: got vectype for stmt: _20 = *_5;
vector(16) unsigned char
common/pixel.c:61:1: note: got vectype for stmt: _24 = *_23;
vector(16) unsigned char
common/pixel.c:61:1: note: === vect_analyze_scalar_cycles ===
common/pixel.c:61:1: note: Analyze phi: x_8 = PHI <x_30(21), 0(25)>

common/pixel.c:61:1: note: Access function of PHI: {0, +, 1}_2
common/pixel.c:61:1: note: step: 1,  init: 0
common/pixel.c:61:1: note: Detected induction.
common/pixel.c:61:1: note: Analyze phi: i_sum_59 = PHI <i_sum_29(21), i_sum_104(25)>

common/pixel.c:61:1: note: Access function of PHI: {i_sum_104, +, _27}_2
common/pixel.c:61:1: note: step: _27,  init: i_sum_104
common/pixel.c:61:1: note: step unknown.
common/pixel.c:61:1: note: Analyze phi: ivtmp_214 = PHI <ivtmp_213(21), 8(25)>

common/pixel.c:61:1: note: Access function of PHI: {8, +, 4294967295}_2
common/pixel.c:61:1: note: step: 4294967295,  init: 8
common/pixel.c:61:1: note: Detected induction.
common/pixel.c:61:1: note: Analyze phi: i_sum_59 = PHI <i_sum_29(21), i_sum_104(25)>

common/pixel.c:61:1: note: detected reduction: i_sum_29 = _27 + i_sum_59;

common/pixel.c:61:1: note: Detected reduction.
common/pixel.c:61:1: note: === vect_pattern_recog ===
common/pixel.c:61:1: note: vect_is_simple_use: operand _27
common/pixel.c:61:1: note: def_stmt: _27 = ABS_EXPR <_26>;
common/pixel.c:61:1: note: type of def: 3.
common/pixel.c:61:1: note: vect_is_simple_use: operand _27
common/pixel.c:61:1: note: def_stmt: _27 = ABS_EXPR <_26>;
common/pixel.c:61:1: note: type of def: 3.
common/pixel.c:61:1: note: vect_is_simple_use: operand _27
common/pixel.c:61:1: note: def_stmt: _27 = ABS_EXPR <_26>;
common/pixel.c:61:1: note: type of def: 3.
common/pixel.c:61:1: note: vect_is_simple_use: operand _21
common/pixel.c:61:1: note: def_stmt: _21 = (int) _20;
common/pixel.c:61:1: note: type of def: 3.
common/pixel.c:61:1: note: vect_is_simple_use: operand _20
common/pixel.c:61:1: note: def_stmt: _20 = *_5;
common/pixel.c:61:1: note: type of def: 3.
common/pixel.c:61:1: note: vect_is_simple_use: operand _25
common/pixel.c:61:1: note: def_stmt: _25 = (int) _24;
common/pixel.c:61:1: note: type of def: 3.
common/pixel.c:61:1: note: vect_is_simple_use: operand _24
common/pixel.c:61:1: note: def_stmt: _24 = *_23;
common/pixel.c:61:1: note: type of def: 3.
common/pixel.c:61:1: note: vect_recog_sad_pattern: detected: patt_198 = SAD_EXPR <_20, _24, i_sum_59>;

common/pixel.c:61:1: note: pattern recognized: patt_198 = SAD_EXPR <_20, _24, i_sum_59>;
common/pixel.c:61:1: note: === vect_analyze_data_ref_accesses ===
common/pixel.c:61:1: note: === vect_mark_stmts_to_be_vectorized ===
common/pixel.c:61:1: note: init: phi relevant? x_8 = PHI <x_30(21), 0(25)>
common/pixel.c:61:1: note: init: phi relevant? i_sum_59 = PHI <i_sum_29(21), i_sum_104(25)>
common/pixel.c:61:1: note: init: phi relevant? ivtmp_214 = PHI <ivtmp_213(21), 8(25)>
common/pixel.c:61:1: note: init: stmt relevant? # DEBUG x => x_8
common/pixel.c:61:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_59
common/pixel.c:61:1: note: init: stmt relevant? _14 = (sizetype) x_8;
common/pixel.c:61:1: note: init: stmt relevant? _5 = fenc_16 + _14;
common/pixel.c:61:1: note: init: stmt relevant? _20 = *_5;
common/pixel.c:61:1: note: init: stmt relevant? _21 = (int) _20;
common/pixel.c:61:1: note: init: stmt relevant? _23 = pix3_103 + _14;
common/pixel.c:61:1: note: init: stmt relevant? _24 = *_23;
common/pixel.c:61:1: note: init: stmt relevant? _25 = (int) _24;
common/pixel.c:61:1: note: init: stmt relevant? _26 = _21 - _25;
common/pixel.c:61:1: note: init: stmt relevant? _27 = ABS_EXPR <_26>;
common/pixel.c:61:1: note: init: stmt relevant? i_sum_29 = _27 + i_sum_59;
common/pixel.c:61:1: note: vec_stmt_relevant_p: used out of loop.
common/pixel.c:61:1: note: mark relevant 0, live 1.
common/pixel.c:61:1: note: last stmt in pattern. don't mark relevant/live.
common/pixel.c:61:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_29
common/pixel.c:61:1: note: init: stmt relevant? x_30 = x_8 + 1;
common/pixel.c:61:1: note: init: stmt relevant? # DEBUG x => x_30
common/pixel.c:61:1: note: init: stmt relevant? # DEBUG x => x_30
common/pixel.c:61:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_29
common/pixel.c:61:1: note: init: stmt relevant? ivtmp_213 = ivtmp_214 - 1;
common/pixel.c:61:1: note: init: stmt relevant? if (ivtmp_213 != 0)
common/pixel.c:61:1: note: worklist: examine stmt: patt_198 = SAD_EXPR <_20, _24, i_sum_59>;
common/pixel.c:61:1: note: vect_is_simple_use: operand _20
common/pixel.c:61:1: note: def_stmt: _20 = *_5;
common/pixel.c:61:1: note: type of def: 3.
common/pixel.c:61:1: note: mark relevant 3, live 0.
common/pixel.c:61:1: note: vect_is_simple_use: operand _24
common/pixel.c:61:1: note: def_stmt: _24 = *_23;
common/pixel.c:61:1: note: type of def: 3.
common/pixel.c:61:1: note: mark relevant 3, live 0.
common/pixel.c:61:1: note: vect_is_simple_use: operand i_sum_59
common/pixel.c:61:1: note: def_stmt: i_sum_59 = PHI <i_sum_29(21), i_sum_104(25)>
common/pixel.c:61:1: note: type of def: 5.
common/pixel.c:61:1: note: mark relevant 3, live 0.
common/pixel.c:61:1: note: worklist: examine stmt: i_sum_59 = PHI <i_sum_29(21), i_sum_104(25)>
common/pixel.c:61:1: note: vect_is_simple_use: operand i_sum_29
common/pixel.c:61:1: note: def_stmt: i_sum_29 = _27 + i_sum_59;
common/pixel.c:61:1: note: type of def: 5.
common/pixel.c:61:1: note: reduc-stmt defining reduc-phi in the same nest.
common/pixel.c:61:1: note: vect_is_simple_use: operand i_sum_104
common/pixel.c:61:1: note: def_stmt: i_sum_104 = PHI <i_sum_222(24), 0(20)>
common/pixel.c:61:1: note: type of def: 2.
common/pixel.c:61:1: note: def_stmt is out of loop.
common/pixel.c:61:1: note: worklist: examine stmt: _24 = *_23;
common/pixel.c:61:1: note: worklist: examine stmt: _20 = *_5;
common/pixel.c:61:1: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _20 = *_5;
  stmt_b: _24 = *_23;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _20 = *_5;
  stmt_b: _20 = *_5;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_2)
  (chrec_b = {0B, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _24 = *_23;
  stmt_b: _24 = *_23;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_2)
  (chrec_b = {0B, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/pixel.c:61:1: note: === vect_determine_vectorization_factor ===
common/pixel.c:61:1: note: ==> examining phi: x_8 = PHI <x_30(21), 0(25)>

common/pixel.c:61:1: note: ==> examining phi: i_sum_59 = PHI <i_sum_29(21), i_sum_104(25)>

common/pixel.c:61:1: note: get vectype for scalar type:  int
common/pixel.c:61:1: note: vectype: vector(4) int
common/pixel.c:61:1: note: nunits = 4
common/pixel.c:61:1: note: ==> examining phi: ivtmp_214 = PHI <ivtmp_213(21), 8(25)>

common/pixel.c:61:1: note: ==> examining statement: # DEBUG x => x_8

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: # DEBUG i_sum => i_sum_59

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: _14 = (sizetype) x_8;

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: _5 = fenc_16 + _14;

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: _20 = *_5;

common/pixel.c:61:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:61:1: note: vectype: vector(16) unsigned char
common/pixel.c:61:1: note: nunits = 16
common/pixel.c:61:1: note: ==> examining statement: _21 = (int) _20;

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: _23 = pix3_103 + _14;

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: _24 = *_23;

common/pixel.c:61:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:61:1: note: vectype: vector(16) unsigned char
common/pixel.c:61:1: note: nunits = 16
common/pixel.c:61:1: note: ==> examining statement: _25 = (int) _24;

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: _26 = _21 - _25;

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: _27 = ABS_EXPR <_26>;

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: i_sum_29 = _27 + i_sum_59;

common/pixel.c:61:1: note: ==> examining pattern statement: patt_198 = SAD_EXPR <_20, _24, i_sum_59>;

common/pixel.c:61:1: note: get vectype for scalar type:  int
common/pixel.c:61:1: note: vectype: vector(4) int
common/pixel.c:61:1: note: nunits = 4
common/pixel.c:61:1: note: ==> examining statement: # DEBUG i_sum => i_sum_29

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: x_30 = x_8 + 1;

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: # DEBUG x => x_30

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: # DEBUG x => x_30

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: # DEBUG i_sum => i_sum_29

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: ivtmp_213 = ivtmp_214 - 1;

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: if (ivtmp_213 != 0)

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: vectorization factor = 16
common/pixel.c:61:1: note: === vect_analyze_data_refs_alignment ===
common/pixel.c:61:1: note: vect_compute_data_ref_alignment:
common/pixel.c:61:1: note: can't force alignment of ref: *_5
common/pixel.c:61:1: note: vect_compute_data_ref_alignment:
common/pixel.c:61:1: note: can't force alignment of ref: *_23
common/pixel.c:61:1: note: === vect_prune_runtime_alias_test_list ===
common/pixel.c:61:1: note: === vect_enhance_data_refs_alignment ===
common/pixel.c:61:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:61:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:61:1: note: vect_can_advance_ivs_p:
common/pixel.c:61:1: note: Analyze phi: x_8 = PHI <x_30(21), 0(25)>

common/pixel.c:61:1: note: Analyze phi: i_sum_59 = PHI <i_sum_29(21), i_sum_104(25)>

common/pixel.c:61:1: note: reduc phi. skip.
common/pixel.c:61:1: note: Analyze phi: ivtmp_214 = PHI <ivtmp_213(21), 8(25)>

common/pixel.c:61:1: note: Vectorizing an unaligned access.
common/pixel.c:61:1: note: Vectorizing an unaligned access.
common/pixel.c:61:1: note: === vect_analyze_slp ===
common/pixel.c:61:1: note: === vect_make_slp_decision ===
common/pixel.c:61:1: note: === vect_detect_hybrid_slp ===
common/pixel.c:61:1: note: === vect_analyze_loop_operations ===
common/pixel.c:61:1: note: examining phi: x_8 = PHI <x_30(21), 0(25)>

common/pixel.c:61:1: note: examining phi: i_sum_59 = PHI <i_sum_29(21), i_sum_104(25)>

common/pixel.c:61:1: note: examining phi: ivtmp_214 = PHI <ivtmp_213(21), 8(25)>

common/pixel.c:61:1: note: ==> examining statement: # DEBUG x => x_8
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: # DEBUG i_sum => i_sum_59
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: _14 = (sizetype) x_8;
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: _5 = fenc_16 + _14;
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: _20 = *_5;
common/pixel.c:61:1: note: vect_is_simple_use: operand *_5
common/pixel.c:61:1: note: not ssa-name.
common/pixel.c:61:1: note: use not simple.
common/pixel.c:61:1: note: vect_is_simple_use: operand *_5
common/pixel.c:61:1: note: not ssa-name.
common/pixel.c:61:1: note: use not simple.
common/pixel.c:61:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:61:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:61:1: note: ==> examining statement: _21 = (int) _20;
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: _23 = pix3_103 + _14;
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: _24 = *_23;
common/pixel.c:61:1: note: vect_is_simple_use: operand *_23
common/pixel.c:61:1: note: not ssa-name.
common/pixel.c:61:1: note: use not simple.
common/pixel.c:61:1: note: vect_is_simple_use: operand *_23
common/pixel.c:61:1: note: not ssa-name.
common/pixel.c:61:1: note: use not simple.
common/pixel.c:61:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:61:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:61:1: note: ==> examining statement: _25 = (int) _24;
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: _26 = _21 - _25;
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: _27 = ABS_EXPR <_26>;
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: i_sum_29 = _27 + i_sum_59;
common/pixel.c:61:1: note: ==> examining pattern statement: patt_198 = SAD_EXPR <_20, _24, i_sum_59>;
common/pixel.c:61:1: note: vect_is_simple_use: operand _20
common/pixel.c:61:1: note: def_stmt: _20 = *_5;
common/pixel.c:61:1: note: type of def: 3.
common/pixel.c:61:1: note: vect_is_simple_use: operand _24
common/pixel.c:61:1: note: def_stmt: _24 = *_23;
common/pixel.c:61:1: note: type of def: 3.
common/pixel.c:61:1: note: vect_is_simple_use: operand i_sum_59
common/pixel.c:61:1: note: def_stmt: i_sum_59 = PHI <i_sum_29(21), i_sum_104(25)>
common/pixel.c:61:1: note: type of def: 5.
common/pixel.c:61:1: note: detected reduction: i_sum_29 = _27 + i_sum_59;

common/pixel.c:61:1: note: reduc op not supported by target.
vect_model_reduction_cost: inside_cost = 1, prologue_cost = 1, epilogue_cost = 5 .
common/pixel.c:61:1: note: ==> examining statement: # DEBUG i_sum => i_sum_29
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: x_30 = x_8 + 1;
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: # DEBUG x => x_30
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: # DEBUG x => x_30
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: # DEBUG i_sum => i_sum_29
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: ivtmp_213 = ivtmp_214 - 1;
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: if (ivtmp_213 != 0)
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: vectorization_factor = 16, niters = 8
common/pixel.c:61:1: note: not vectorized: iteration count too small.
common/pixel.c:61:1: note: not vectorized: iteration count smaller than vectorization factor.
common/pixel.c:61:1: note: bad operation or unsupported loop bound.

Analyzing loop at common/pixel.c:61
common/pixel.c:61:1: note: ===== analyze_loop_nest =====
common/pixel.c:61:1: note: === vect_analyze_loop_form ===
common/pixel.c:61:1: note: ===== analyze_loop_nest_1 =====
common/pixel.c:61:1: note: === vect_analyze_loop_form ===
common/pixel.c:61:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 4
  exit condition [7, + , 4294967295] != 0
  bounds on difference of bases: -7 ... -7
  result:
    # of iterations 7, bounded by 7
common/pixel.c:61:1: note: Considering outer-loop vectorization.
common/pixel.c:61:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 3
  exit condition [15, + , 4294967295] != 0
  bounds on difference of bases: -15 ... -15
  result:
    # of iterations 15, bounded by 15
common/pixel.c:61:1: note: === vect_analyze_data_refs ===
Creating dr for *_41
analyze_innermost: success.
	base_address: fenc_37
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_2(D)
	Access function 0: {{0B, +, 16}_3, +, 1}_4
Creating dr for *_45
analyze_innermost: success.
	base_address: pix2_137
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix2_13(D)
	Access function 0: {{0B, +, pretmp_223}_3, +, 1}_4
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:61:1: note: analyze in outer-loop: *fenc_37
common/pixel.c:61:1: note: 	outer base_address: fenc_2(D)
	outer offset from base address: 0
	outer constant offset from base address: 0
	outer step: 16
	outer aligned to: 128
common/pixel.c:61:1: note: got vectype for stmt: _42 = *_41;
vector(16) unsigned char
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:61:1: note: analyze in outer-loop: *pix2_137
common/pixel.c:61:1: note: failed: evolution of base is not affine.
common/pixel.c:61:1: note: bad data references.

Analyzing loop at common/pixel.c:61
common/pixel.c:61:1: note: ===== analyze_loop_nest =====
common/pixel.c:61:1: note: === vect_analyze_loop_form ===
common/pixel.c:61:1: note: === get_loop_niters ===
common/pixel.c:61:1: note: === vect_analyze_data_refs ===
Creating dr for *_41
analyze_innermost: success.
	base_address: fenc_37
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_37
	Access function 0: {0B, +, 1}_4
Creating dr for *_45
analyze_innermost: success.
	base_address: pix2_137
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix2_137
	Access function 0: {0B, +, 1}_4
common/pixel.c:61:1: note: got vectype for stmt: _42 = *_41;
vector(16) unsigned char
common/pixel.c:61:1: note: got vectype for stmt: _46 = *_45;
vector(16) unsigned char
common/pixel.c:61:1: note: === vect_analyze_scalar_cycles ===
common/pixel.c:61:1: note: Analyze phi: x_81 = PHI <x_52(15), 0(19)>

common/pixel.c:61:1: note: Access function of PHI: {0, +, 1}_4
common/pixel.c:61:1: note: step: 1,  init: 0
common/pixel.c:61:1: note: Detected induction.
common/pixel.c:61:1: note: Analyze phi: i_sum_138 = PHI <i_sum_51(15), i_sum_140(19)>

common/pixel.c:61:1: note: Access function of PHI: {i_sum_140, +, _49}_4
common/pixel.c:61:1: note: step: _49,  init: i_sum_140
common/pixel.c:61:1: note: step unknown.
common/pixel.c:61:1: note: Analyze phi: ivtmp_210 = PHI <ivtmp_209(15), 8(19)>

common/pixel.c:61:1: note: Access function of PHI: {8, +, 4294967295}_4
common/pixel.c:61:1: note: step: 4294967295,  init: 8
common/pixel.c:61:1: note: Detected induction.
common/pixel.c:61:1: note: Analyze phi: i_sum_138 = PHI <i_sum_51(15), i_sum_140(19)>

common/pixel.c:61:1: note: detected reduction: i_sum_51 = _49 + i_sum_138;

common/pixel.c:61:1: note: Detected reduction.
common/pixel.c:61:1: note: === vect_pattern_recog ===
common/pixel.c:61:1: note: vect_is_simple_use: operand _49
common/pixel.c:61:1: note: def_stmt: _49 = ABS_EXPR <_48>;
common/pixel.c:61:1: note: type of def: 3.
common/pixel.c:61:1: note: vect_is_simple_use: operand _49
common/pixel.c:61:1: note: def_stmt: _49 = ABS_EXPR <_48>;
common/pixel.c:61:1: note: type of def: 3.
common/pixel.c:61:1: note: vect_is_simple_use: operand _49
common/pixel.c:61:1: note: def_stmt: _49 = ABS_EXPR <_48>;
common/pixel.c:61:1: note: type of def: 3.
common/pixel.c:61:1: note: vect_is_simple_use: operand _43
common/pixel.c:61:1: note: def_stmt: _43 = (int) _42;
common/pixel.c:61:1: note: type of def: 3.
common/pixel.c:61:1: note: vect_is_simple_use: operand _42
common/pixel.c:61:1: note: def_stmt: _42 = *_41;
common/pixel.c:61:1: note: type of def: 3.
common/pixel.c:61:1: note: vect_is_simple_use: operand _47
common/pixel.c:61:1: note: def_stmt: _47 = (int) _46;
common/pixel.c:61:1: note: type of def: 3.
common/pixel.c:61:1: note: vect_is_simple_use: operand _46
common/pixel.c:61:1: note: def_stmt: _46 = *_45;
common/pixel.c:61:1: note: type of def: 3.
common/pixel.c:61:1: note: vect_recog_sad_pattern: detected: patt_198 = SAD_EXPR <_42, _46, i_sum_138>;

common/pixel.c:61:1: note: pattern recognized: patt_198 = SAD_EXPR <_42, _46, i_sum_138>;
common/pixel.c:61:1: note: === vect_analyze_data_ref_accesses ===
common/pixel.c:61:1: note: === vect_mark_stmts_to_be_vectorized ===
common/pixel.c:61:1: note: init: phi relevant? x_81 = PHI <x_52(15), 0(19)>
common/pixel.c:61:1: note: init: phi relevant? i_sum_138 = PHI <i_sum_51(15), i_sum_140(19)>
common/pixel.c:61:1: note: init: phi relevant? ivtmp_210 = PHI <ivtmp_209(15), 8(19)>
common/pixel.c:61:1: note: init: stmt relevant? # DEBUG x => x_81
common/pixel.c:61:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_138
common/pixel.c:61:1: note: init: stmt relevant? _39 = (sizetype) x_81;
common/pixel.c:61:1: note: init: stmt relevant? _41 = fenc_37 + _39;
common/pixel.c:61:1: note: init: stmt relevant? _42 = *_41;
common/pixel.c:61:1: note: init: stmt relevant? _43 = (int) _42;
common/pixel.c:61:1: note: init: stmt relevant? _45 = pix2_137 + _39;
common/pixel.c:61:1: note: init: stmt relevant? _46 = *_45;
common/pixel.c:61:1: note: init: stmt relevant? _47 = (int) _46;
common/pixel.c:61:1: note: init: stmt relevant? _48 = _43 - _47;
common/pixel.c:61:1: note: init: stmt relevant? _49 = ABS_EXPR <_48>;
common/pixel.c:61:1: note: init: stmt relevant? i_sum_51 = _49 + i_sum_138;
common/pixel.c:61:1: note: vec_stmt_relevant_p: used out of loop.
common/pixel.c:61:1: note: mark relevant 0, live 1.
common/pixel.c:61:1: note: last stmt in pattern. don't mark relevant/live.
common/pixel.c:61:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_51
common/pixel.c:61:1: note: init: stmt relevant? x_52 = x_81 + 1;
common/pixel.c:61:1: note: init: stmt relevant? # DEBUG x => x_52
common/pixel.c:61:1: note: init: stmt relevant? # DEBUG x => x_52
common/pixel.c:61:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_51
common/pixel.c:61:1: note: init: stmt relevant? ivtmp_209 = ivtmp_210 - 1;
common/pixel.c:61:1: note: init: stmt relevant? if (ivtmp_209 != 0)
common/pixel.c:61:1: note: worklist: examine stmt: patt_198 = SAD_EXPR <_42, _46, i_sum_138>;
common/pixel.c:61:1: note: vect_is_simple_use: operand _42
common/pixel.c:61:1: note: def_stmt: _42 = *_41;
common/pixel.c:61:1: note: type of def: 3.
common/pixel.c:61:1: note: mark relevant 3, live 0.
common/pixel.c:61:1: note: vect_is_simple_use: operand _46
common/pixel.c:61:1: note: def_stmt: _46 = *_45;
common/pixel.c:61:1: note: type of def: 3.
common/pixel.c:61:1: note: mark relevant 3, live 0.
common/pixel.c:61:1: note: vect_is_simple_use: operand i_sum_138
common/pixel.c:61:1: note: def_stmt: i_sum_138 = PHI <i_sum_51(15), i_sum_140(19)>
common/pixel.c:61:1: note: type of def: 5.
common/pixel.c:61:1: note: mark relevant 3, live 0.
common/pixel.c:61:1: note: worklist: examine stmt: i_sum_138 = PHI <i_sum_51(15), i_sum_140(19)>
common/pixel.c:61:1: note: vect_is_simple_use: operand i_sum_51
common/pixel.c:61:1: note: def_stmt: i_sum_51 = _49 + i_sum_138;
common/pixel.c:61:1: note: type of def: 5.
common/pixel.c:61:1: note: reduc-stmt defining reduc-phi in the same nest.
common/pixel.c:61:1: note: vect_is_simple_use: operand i_sum_140
common/pixel.c:61:1: note: def_stmt: i_sum_140 = PHI <i_sum_220(18), 0(14)>
common/pixel.c:61:1: note: type of def: 2.
common/pixel.c:61:1: note: def_stmt is out of loop.
common/pixel.c:61:1: note: worklist: examine stmt: _46 = *_45;
common/pixel.c:61:1: note: worklist: examine stmt: _42 = *_41;
common/pixel.c:61:1: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _42 = *_41;
  stmt_b: _46 = *_45;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _42 = *_41;
  stmt_b: _42 = *_41;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_4)
  (chrec_b = {0B, +, 1}_4)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _46 = *_45;
  stmt_b: _46 = *_45;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_4)
  (chrec_b = {0B, +, 1}_4)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/pixel.c:61:1: note: === vect_determine_vectorization_factor ===
common/pixel.c:61:1: note: ==> examining phi: x_81 = PHI <x_52(15), 0(19)>

common/pixel.c:61:1: note: ==> examining phi: i_sum_138 = PHI <i_sum_51(15), i_sum_140(19)>

common/pixel.c:61:1: note: get vectype for scalar type:  int
common/pixel.c:61:1: note: vectype: vector(4) int
common/pixel.c:61:1: note: nunits = 4
common/pixel.c:61:1: note: ==> examining phi: ivtmp_210 = PHI <ivtmp_209(15), 8(19)>

common/pixel.c:61:1: note: ==> examining statement: # DEBUG x => x_81

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: # DEBUG i_sum => i_sum_138

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: _39 = (sizetype) x_81;

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: _41 = fenc_37 + _39;

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: _42 = *_41;

common/pixel.c:61:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:61:1: note: vectype: vector(16) unsigned char
common/pixel.c:61:1: note: nunits = 16
common/pixel.c:61:1: note: ==> examining statement: _43 = (int) _42;

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: _45 = pix2_137 + _39;

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: _46 = *_45;

common/pixel.c:61:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:61:1: note: vectype: vector(16) unsigned char
common/pixel.c:61:1: note: nunits = 16
common/pixel.c:61:1: note: ==> examining statement: _47 = (int) _46;

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: _48 = _43 - _47;

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: _49 = ABS_EXPR <_48>;

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: i_sum_51 = _49 + i_sum_138;

common/pixel.c:61:1: note: ==> examining pattern statement: patt_198 = SAD_EXPR <_42, _46, i_sum_138>;

common/pixel.c:61:1: note: get vectype for scalar type:  int
common/pixel.c:61:1: note: vectype: vector(4) int
common/pixel.c:61:1: note: nunits = 4
common/pixel.c:61:1: note: ==> examining statement: # DEBUG i_sum => i_sum_51

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: x_52 = x_81 + 1;

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: # DEBUG x => x_52

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: # DEBUG x => x_52

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: # DEBUG i_sum => i_sum_51

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: ivtmp_209 = ivtmp_210 - 1;

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: if (ivtmp_209 != 0)

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: vectorization factor = 16
common/pixel.c:61:1: note: === vect_analyze_data_refs_alignment ===
common/pixel.c:61:1: note: vect_compute_data_ref_alignment:
common/pixel.c:61:1: note: can't force alignment of ref: *_41
common/pixel.c:61:1: note: vect_compute_data_ref_alignment:
common/pixel.c:61:1: note: can't force alignment of ref: *_45
common/pixel.c:61:1: note: === vect_prune_runtime_alias_test_list ===
common/pixel.c:61:1: note: === vect_enhance_data_refs_alignment ===
common/pixel.c:61:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:61:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:61:1: note: vect_can_advance_ivs_p:
common/pixel.c:61:1: note: Analyze phi: x_81 = PHI <x_52(15), 0(19)>

common/pixel.c:61:1: note: Analyze phi: i_sum_138 = PHI <i_sum_51(15), i_sum_140(19)>

common/pixel.c:61:1: note: reduc phi. skip.
common/pixel.c:61:1: note: Analyze phi: ivtmp_210 = PHI <ivtmp_209(15), 8(19)>

common/pixel.c:61:1: note: Vectorizing an unaligned access.
common/pixel.c:61:1: note: Vectorizing an unaligned access.
common/pixel.c:61:1: note: === vect_analyze_slp ===
common/pixel.c:61:1: note: === vect_make_slp_decision ===
common/pixel.c:61:1: note: === vect_detect_hybrid_slp ===
common/pixel.c:61:1: note: === vect_analyze_loop_operations ===
common/pixel.c:61:1: note: examining phi: x_81 = PHI <x_52(15), 0(19)>

common/pixel.c:61:1: note: examining phi: i_sum_138 = PHI <i_sum_51(15), i_sum_140(19)>

common/pixel.c:61:1: note: examining phi: ivtmp_210 = PHI <ivtmp_209(15), 8(19)>

common/pixel.c:61:1: note: ==> examining statement: # DEBUG x => x_81
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: # DEBUG i_sum => i_sum_138
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: _39 = (sizetype) x_81;
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: _41 = fenc_37 + _39;
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: _42 = *_41;
common/pixel.c:61:1: note: vect_is_simple_use: operand *_41
common/pixel.c:61:1: note: not ssa-name.
common/pixel.c:61:1: note: use not simple.
common/pixel.c:61:1: note: vect_is_simple_use: operand *_41
common/pixel.c:61:1: note: not ssa-name.
common/pixel.c:61:1: note: use not simple.
common/pixel.c:61:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:61:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:61:1: note: ==> examining statement: _43 = (int) _42;
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: _45 = pix2_137 + _39;
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: _46 = *_45;
common/pixel.c:61:1: note: vect_is_simple_use: operand *_45
common/pixel.c:61:1: note: not ssa-name.
common/pixel.c:61:1: note: use not simple.
common/pixel.c:61:1: note: vect_is_simple_use: operand *_45
common/pixel.c:61:1: note: not ssa-name.
common/pixel.c:61:1: note: use not simple.
common/pixel.c:61:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:61:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:61:1: note: ==> examining statement: _47 = (int) _46;
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: _48 = _43 - _47;
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: _49 = ABS_EXPR <_48>;
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: i_sum_51 = _49 + i_sum_138;
common/pixel.c:61:1: note: ==> examining pattern statement: patt_198 = SAD_EXPR <_42, _46, i_sum_138>;
common/pixel.c:61:1: note: vect_is_simple_use: operand _42
common/pixel.c:61:1: note: def_stmt: _42 = *_41;
common/pixel.c:61:1: note: type of def: 3.
common/pixel.c:61:1: note: vect_is_simple_use: operand _46
common/pixel.c:61:1: note: def_stmt: _46 = *_45;
common/pixel.c:61:1: note: type of def: 3.
common/pixel.c:61:1: note: vect_is_simple_use: operand i_sum_138
common/pixel.c:61:1: note: def_stmt: i_sum_138 = PHI <i_sum_51(15), i_sum_140(19)>
common/pixel.c:61:1: note: type of def: 5.
common/pixel.c:61:1: note: detected reduction: i_sum_51 = _49 + i_sum_138;

common/pixel.c:61:1: note: reduc op not supported by target.
vect_model_reduction_cost: inside_cost = 1, prologue_cost = 1, epilogue_cost = 5 .
common/pixel.c:61:1: note: ==> examining statement: # DEBUG i_sum => i_sum_51
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: x_52 = x_81 + 1;
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: # DEBUG x => x_52
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: # DEBUG x => x_52
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: # DEBUG i_sum => i_sum_51
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: ivtmp_209 = ivtmp_210 - 1;
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: if (ivtmp_209 != 0)
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: vectorization_factor = 16, niters = 8
common/pixel.c:61:1: note: not vectorized: iteration count too small.
common/pixel.c:61:1: note: not vectorized: iteration count smaller than vectorization factor.
common/pixel.c:61:1: note: bad operation or unsupported loop bound.

Analyzing loop at common/pixel.c:61
common/pixel.c:61:1: note: ===== analyze_loop_nest =====
common/pixel.c:61:1: note: === vect_analyze_loop_form ===
common/pixel.c:61:1: note: ===== analyze_loop_nest_1 =====
common/pixel.c:61:1: note: === vect_analyze_loop_form ===
common/pixel.c:61:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 6
  exit condition [7, + , 4294967295] != 0
  bounds on difference of bases: -7 ... -7
  result:
    # of iterations 7, bounded by 7
common/pixel.c:61:1: note: Considering outer-loop vectorization.
common/pixel.c:61:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 5
  exit condition [15, + , 4294967295] != 0
  bounds on difference of bases: -15 ... -15
  result:
    # of iterations 15, bounded by 15
common/pixel.c:61:1: note: === vect_analyze_data_refs ===
Creating dr for *_63
analyze_innermost: success.
	base_address: fenc_142
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_2(D)
	Access function 0: {{0B, +, 16}_5, +, 1}_6
Creating dr for *_67
analyze_innermost: success.
	base_address: pix1_143
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix1_9(D)
	Access function 0: {{0B, +, pretmp_223}_5, +, 1}_6
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:61:1: note: analyze in outer-loop: *fenc_142
common/pixel.c:61:1: note: 	outer base_address: fenc_2(D)
	outer offset from base address: 0
	outer constant offset from base address: 0
	outer step: 16
	outer aligned to: 128
common/pixel.c:61:1: note: got vectype for stmt: _64 = *_63;
vector(16) unsigned char
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:61:1: note: analyze in outer-loop: *pix1_143
common/pixel.c:61:1: note: failed: evolution of base is not affine.
common/pixel.c:61:1: note: bad data references.

Analyzing loop at common/pixel.c:61
common/pixel.c:61:1: note: ===== analyze_loop_nest =====
common/pixel.c:61:1: note: === vect_analyze_loop_form ===
common/pixel.c:61:1: note: === get_loop_niters ===
common/pixel.c:61:1: note: === vect_analyze_data_refs ===
Creating dr for *_63
analyze_innermost: success.
	base_address: fenc_142
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_142
	Access function 0: {0B, +, 1}_6
Creating dr for *_67
analyze_innermost: success.
	base_address: pix1_143
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix1_143
	Access function 0: {0B, +, 1}_6
common/pixel.c:61:1: note: got vectype for stmt: _64 = *_63;
vector(16) unsigned char
common/pixel.c:61:1: note: got vectype for stmt: _68 = *_67;
vector(16) unsigned char
common/pixel.c:61:1: note: === vect_analyze_scalar_cycles ===
common/pixel.c:61:1: note: Analyze phi: x_141 = PHI <x_74(9), 0(13)>

common/pixel.c:61:1: note: Access function of PHI: {0, +, 1}_6
common/pixel.c:61:1: note: step: 1,  init: 0
common/pixel.c:61:1: note: Detected induction.
common/pixel.c:61:1: note: Analyze phi: i_sum_144 = PHI <i_sum_73(9), i_sum_146(13)>

common/pixel.c:61:1: note: Access function of PHI: {i_sum_146, +, _71}_6
common/pixel.c:61:1: note: step: _71,  init: i_sum_146
common/pixel.c:61:1: note: step unknown.
common/pixel.c:61:1: note: Analyze phi: ivtmp_206 = PHI <ivtmp_205(9), 8(13)>

common/pixel.c:61:1: note: Access function of PHI: {8, +, 4294967295}_6
common/pixel.c:61:1: note: step: 4294967295,  init: 8
common/pixel.c:61:1: note: Detected induction.
common/pixel.c:61:1: note: Analyze phi: i_sum_144 = PHI <i_sum_73(9), i_sum_146(13)>

common/pixel.c:61:1: note: detected reduction: i_sum_73 = _71 + i_sum_144;

common/pixel.c:61:1: note: Detected reduction.
common/pixel.c:61:1: note: === vect_pattern_recog ===
common/pixel.c:61:1: note: vect_is_simple_use: operand _71
common/pixel.c:61:1: note: def_stmt: _71 = ABS_EXPR <_70>;
common/pixel.c:61:1: note: type of def: 3.
common/pixel.c:61:1: note: vect_is_simple_use: operand _71
common/pixel.c:61:1: note: def_stmt: _71 = ABS_EXPR <_70>;
common/pixel.c:61:1: note: type of def: 3.
common/pixel.c:61:1: note: vect_is_simple_use: operand _71
common/pixel.c:61:1: note: def_stmt: _71 = ABS_EXPR <_70>;
common/pixel.c:61:1: note: type of def: 3.
common/pixel.c:61:1: note: vect_is_simple_use: operand _65
common/pixel.c:61:1: note: def_stmt: _65 = (int) _64;
common/pixel.c:61:1: note: type of def: 3.
common/pixel.c:61:1: note: vect_is_simple_use: operand _64
common/pixel.c:61:1: note: def_stmt: _64 = *_63;
common/pixel.c:61:1: note: type of def: 3.
common/pixel.c:61:1: note: vect_is_simple_use: operand _69
common/pixel.c:61:1: note: def_stmt: _69 = (int) _68;
common/pixel.c:61:1: note: type of def: 3.
common/pixel.c:61:1: note: vect_is_simple_use: operand _68
common/pixel.c:61:1: note: def_stmt: _68 = *_67;
common/pixel.c:61:1: note: type of def: 3.
common/pixel.c:61:1: note: vect_recog_sad_pattern: detected: patt_198 = SAD_EXPR <_64, _68, i_sum_144>;

common/pixel.c:61:1: note: pattern recognized: patt_198 = SAD_EXPR <_64, _68, i_sum_144>;
common/pixel.c:61:1: note: === vect_analyze_data_ref_accesses ===
common/pixel.c:61:1: note: === vect_mark_stmts_to_be_vectorized ===
common/pixel.c:61:1: note: init: phi relevant? x_141 = PHI <x_74(9), 0(13)>
common/pixel.c:61:1: note: init: phi relevant? i_sum_144 = PHI <i_sum_73(9), i_sum_146(13)>
common/pixel.c:61:1: note: init: phi relevant? ivtmp_206 = PHI <ivtmp_205(9), 8(13)>
common/pixel.c:61:1: note: init: stmt relevant? # DEBUG x => x_141
common/pixel.c:61:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_144
common/pixel.c:61:1: note: init: stmt relevant? _61 = (sizetype) x_141;
common/pixel.c:61:1: note: init: stmt relevant? _63 = fenc_142 + _61;
common/pixel.c:61:1: note: init: stmt relevant? _64 = *_63;
common/pixel.c:61:1: note: init: stmt relevant? _65 = (int) _64;
common/pixel.c:61:1: note: init: stmt relevant? _67 = pix1_143 + _61;
common/pixel.c:61:1: note: init: stmt relevant? _68 = *_67;
common/pixel.c:61:1: note: init: stmt relevant? _69 = (int) _68;
common/pixel.c:61:1: note: init: stmt relevant? _70 = _65 - _69;
common/pixel.c:61:1: note: init: stmt relevant? _71 = ABS_EXPR <_70>;
common/pixel.c:61:1: note: init: stmt relevant? i_sum_73 = _71 + i_sum_144;
common/pixel.c:61:1: note: vec_stmt_relevant_p: used out of loop.
common/pixel.c:61:1: note: mark relevant 0, live 1.
common/pixel.c:61:1: note: last stmt in pattern. don't mark relevant/live.
common/pixel.c:61:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_73
common/pixel.c:61:1: note: init: stmt relevant? x_74 = x_141 + 1;
common/pixel.c:61:1: note: init: stmt relevant? # DEBUG x => x_74
common/pixel.c:61:1: note: init: stmt relevant? # DEBUG x => x_74
common/pixel.c:61:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_73
common/pixel.c:61:1: note: init: stmt relevant? ivtmp_205 = ivtmp_206 - 1;
common/pixel.c:61:1: note: init: stmt relevant? if (ivtmp_205 != 0)
common/pixel.c:61:1: note: worklist: examine stmt: patt_198 = SAD_EXPR <_64, _68, i_sum_144>;
common/pixel.c:61:1: note: vect_is_simple_use: operand _64
common/pixel.c:61:1: note: def_stmt: _64 = *_63;
common/pixel.c:61:1: note: type of def: 3.
common/pixel.c:61:1: note: mark relevant 3, live 0.
common/pixel.c:61:1: note: vect_is_simple_use: operand _68
common/pixel.c:61:1: note: def_stmt: _68 = *_67;
common/pixel.c:61:1: note: type of def: 3.
common/pixel.c:61:1: note: mark relevant 3, live 0.
common/pixel.c:61:1: note: vect_is_simple_use: operand i_sum_144
common/pixel.c:61:1: note: def_stmt: i_sum_144 = PHI <i_sum_73(9), i_sum_146(13)>
common/pixel.c:61:1: note: type of def: 5.
common/pixel.c:61:1: note: mark relevant 3, live 0.
common/pixel.c:61:1: note: worklist: examine stmt: i_sum_144 = PHI <i_sum_73(9), i_sum_146(13)>
common/pixel.c:61:1: note: vect_is_simple_use: operand i_sum_73
common/pixel.c:61:1: note: def_stmt: i_sum_73 = _71 + i_sum_144;
common/pixel.c:61:1: note: type of def: 5.
common/pixel.c:61:1: note: reduc-stmt defining reduc-phi in the same nest.
common/pixel.c:61:1: note: vect_is_simple_use: operand i_sum_146
common/pixel.c:61:1: note: def_stmt: i_sum_146 = PHI <i_sum_218(12), 0(8)>
common/pixel.c:61:1: note: type of def: 2.
common/pixel.c:61:1: note: def_stmt is out of loop.
common/pixel.c:61:1: note: worklist: examine stmt: _68 = *_67;
common/pixel.c:61:1: note: worklist: examine stmt: _64 = *_63;
common/pixel.c:61:1: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _64 = *_63;
  stmt_b: _68 = *_67;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _64 = *_63;
  stmt_b: _64 = *_63;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_6)
  (chrec_b = {0B, +, 1}_6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _68 = *_67;
  stmt_b: _68 = *_67;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_6)
  (chrec_b = {0B, +, 1}_6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/pixel.c:61:1: note: === vect_determine_vectorization_factor ===
common/pixel.c:61:1: note: ==> examining phi: x_141 = PHI <x_74(9), 0(13)>

common/pixel.c:61:1: note: ==> examining phi: i_sum_144 = PHI <i_sum_73(9), i_sum_146(13)>

common/pixel.c:61:1: note: get vectype for scalar type:  int
common/pixel.c:61:1: note: vectype: vector(4) int
common/pixel.c:61:1: note: nunits = 4
common/pixel.c:61:1: note: ==> examining phi: ivtmp_206 = PHI <ivtmp_205(9), 8(13)>

common/pixel.c:61:1: note: ==> examining statement: # DEBUG x => x_141

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: # DEBUG i_sum => i_sum_144

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: _61 = (sizetype) x_141;

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: _63 = fenc_142 + _61;

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: _64 = *_63;

common/pixel.c:61:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:61:1: note: vectype: vector(16) unsigned char
common/pixel.c:61:1: note: nunits = 16
common/pixel.c:61:1: note: ==> examining statement: _65 = (int) _64;

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: _67 = pix1_143 + _61;

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: _68 = *_67;

common/pixel.c:61:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:61:1: note: vectype: vector(16) unsigned char
common/pixel.c:61:1: note: nunits = 16
common/pixel.c:61:1: note: ==> examining statement: _69 = (int) _68;

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: _70 = _65 - _69;

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: _71 = ABS_EXPR <_70>;

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: i_sum_73 = _71 + i_sum_144;

common/pixel.c:61:1: note: ==> examining pattern statement: patt_198 = SAD_EXPR <_64, _68, i_sum_144>;

common/pixel.c:61:1: note: get vectype for scalar type:  int
common/pixel.c:61:1: note: vectype: vector(4) int
common/pixel.c:61:1: note: nunits = 4
common/pixel.c:61:1: note: ==> examining statement: # DEBUG i_sum => i_sum_73

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: x_74 = x_141 + 1;

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: # DEBUG x => x_74

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: # DEBUG x => x_74

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: # DEBUG i_sum => i_sum_73

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: ivtmp_205 = ivtmp_206 - 1;

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: if (ivtmp_205 != 0)

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: vectorization factor = 16
common/pixel.c:61:1: note: === vect_analyze_data_refs_alignment ===
common/pixel.c:61:1: note: vect_compute_data_ref_alignment:
common/pixel.c:61:1: note: can't force alignment of ref: *_63
common/pixel.c:61:1: note: vect_compute_data_ref_alignment:
common/pixel.c:61:1: note: can't force alignment of ref: *_67
common/pixel.c:61:1: note: === vect_prune_runtime_alias_test_list ===
common/pixel.c:61:1: note: === vect_enhance_data_refs_alignment ===
common/pixel.c:61:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:61:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:61:1: note: vect_can_advance_ivs_p:
common/pixel.c:61:1: note: Analyze phi: x_141 = PHI <x_74(9), 0(13)>

common/pixel.c:61:1: note: Analyze phi: i_sum_144 = PHI <i_sum_73(9), i_sum_146(13)>

common/pixel.c:61:1: note: reduc phi. skip.
common/pixel.c:61:1: note: Analyze phi: ivtmp_206 = PHI <ivtmp_205(9), 8(13)>

common/pixel.c:61:1: note: Vectorizing an unaligned access.
common/pixel.c:61:1: note: Vectorizing an unaligned access.
common/pixel.c:61:1: note: === vect_analyze_slp ===
common/pixel.c:61:1: note: === vect_make_slp_decision ===
common/pixel.c:61:1: note: === vect_detect_hybrid_slp ===
common/pixel.c:61:1: note: === vect_analyze_loop_operations ===
common/pixel.c:61:1: note: examining phi: x_141 = PHI <x_74(9), 0(13)>

common/pixel.c:61:1: note: examining phi: i_sum_144 = PHI <i_sum_73(9), i_sum_146(13)>

common/pixel.c:61:1: note: examining phi: ivtmp_206 = PHI <ivtmp_205(9), 8(13)>

common/pixel.c:61:1: note: ==> examining statement: # DEBUG x => x_141
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: # DEBUG i_sum => i_sum_144
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: _61 = (sizetype) x_141;
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: _63 = fenc_142 + _61;
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: _64 = *_63;
common/pixel.c:61:1: note: vect_is_simple_use: operand *_63
common/pixel.c:61:1: note: not ssa-name.
common/pixel.c:61:1: note: use not simple.
common/pixel.c:61:1: note: vect_is_simple_use: operand *_63
common/pixel.c:61:1: note: not ssa-name.
common/pixel.c:61:1: note: use not simple.
common/pixel.c:61:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:61:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:61:1: note: ==> examining statement: _65 = (int) _64;
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: _67 = pix1_143 + _61;
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: _68 = *_67;
common/pixel.c:61:1: note: vect_is_simple_use: operand *_67
common/pixel.c:61:1: note: not ssa-name.
common/pixel.c:61:1: note: use not simple.
common/pixel.c:61:1: note: vect_is_simple_use: operand *_67
common/pixel.c:61:1: note: not ssa-name.
common/pixel.c:61:1: note: use not simple.
common/pixel.c:61:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:61:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:61:1: note: ==> examining statement: _69 = (int) _68;
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: _70 = _65 - _69;
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: _71 = ABS_EXPR <_70>;
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: i_sum_73 = _71 + i_sum_144;
common/pixel.c:61:1: note: ==> examining pattern statement: patt_198 = SAD_EXPR <_64, _68, i_sum_144>;
common/pixel.c:61:1: note: vect_is_simple_use: operand _64
common/pixel.c:61:1: note: def_stmt: _64 = *_63;
common/pixel.c:61:1: note: type of def: 3.
common/pixel.c:61:1: note: vect_is_simple_use: operand _68
common/pixel.c:61:1: note: def_stmt: _68 = *_67;
common/pixel.c:61:1: note: type of def: 3.
common/pixel.c:61:1: note: vect_is_simple_use: operand i_sum_144
common/pixel.c:61:1: note: def_stmt: i_sum_144 = PHI <i_sum_73(9), i_sum_146(13)>
common/pixel.c:61:1: note: type of def: 5.
common/pixel.c:61:1: note: detected reduction: i_sum_73 = _71 + i_sum_144;

common/pixel.c:61:1: note: reduc op not supported by target.
vect_model_reduction_cost: inside_cost = 1, prologue_cost = 1, epilogue_cost = 5 .
common/pixel.c:61:1: note: ==> examining statement: # DEBUG i_sum => i_sum_73
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: x_74 = x_141 + 1;
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: # DEBUG x => x_74
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: # DEBUG x => x_74
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: # DEBUG i_sum => i_sum_73
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: ivtmp_205 = ivtmp_206 - 1;
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: if (ivtmp_205 != 0)
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: vectorization_factor = 16, niters = 8
common/pixel.c:61:1: note: not vectorized: iteration count too small.
common/pixel.c:61:1: note: not vectorized: iteration count smaller than vectorization factor.
common/pixel.c:61:1: note: bad operation or unsupported loop bound.

Analyzing loop at common/pixel.c:61
common/pixel.c:61:1: note: ===== analyze_loop_nest =====
common/pixel.c:61:1: note: === vect_analyze_loop_form ===
common/pixel.c:61:1: note: ===== analyze_loop_nest_1 =====
common/pixel.c:61:1: note: === vect_analyze_loop_form ===
common/pixel.c:61:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 8
  exit condition [7, + , 4294967295] != 0
  bounds on difference of bases: -7 ... -7
  result:
    # of iterations 7, bounded by 7
common/pixel.c:61:1: note: Considering outer-loop vectorization.
common/pixel.c:61:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 7
  exit condition [15, + , 4294967295] != 0
  bounds on difference of bases: -15 ... -15
  result:
    # of iterations 15, bounded by 15
common/pixel.c:61:1: note: === vect_analyze_data_refs ===
Creating dr for *_85
analyze_innermost: success.
	base_address: fenc_148
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_2(D)
	Access function 0: {{0B, +, 16}_7, +, 1}_8
Creating dr for *_89
analyze_innermost: success.
	base_address: pix0_149
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix0_3(D)
	Access function 0: {{0B, +, pretmp_223}_7, +, 1}_8
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:61:1: note: analyze in outer-loop: *fenc_148
common/pixel.c:61:1: note: 	outer base_address: fenc_2(D)
	outer offset from base address: 0
	outer constant offset from base address: 0
	outer step: 16
	outer aligned to: 128
common/pixel.c:61:1: note: got vectype for stmt: _86 = *_85;
vector(16) unsigned char
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:61:1: note: analyze in outer-loop: *pix0_149
common/pixel.c:61:1: note: failed: evolution of base is not affine.
common/pixel.c:61:1: note: bad data references.

Analyzing loop at common/pixel.c:61
common/pixel.c:61:1: note: ===== analyze_loop_nest =====
common/pixel.c:61:1: note: === vect_analyze_loop_form ===
common/pixel.c:61:1: note: === get_loop_niters ===
common/pixel.c:61:1: note: === vect_analyze_data_refs ===
Creating dr for *_85
analyze_innermost: success.
	base_address: fenc_148
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_148
	Access function 0: {0B, +, 1}_8
Creating dr for *_89
analyze_innermost: success.
	base_address: pix0_149
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix0_149
	Access function 0: {0B, +, 1}_8
common/pixel.c:61:1: note: got vectype for stmt: _86 = *_85;
vector(16) unsigned char
common/pixel.c:61:1: note: got vectype for stmt: _90 = *_89;
vector(16) unsigned char
common/pixel.c:61:1: note: === vect_analyze_scalar_cycles ===
common/pixel.c:61:1: note: Analyze phi: x_147 = PHI <x_96(3), 0(7)>

common/pixel.c:61:1: note: Access function of PHI: {0, +, 1}_8
common/pixel.c:61:1: note: step: 1,  init: 0
common/pixel.c:61:1: note: Detected induction.
common/pixel.c:61:1: note: Analyze phi: i_sum_150 = PHI <i_sum_95(3), i_sum_152(7)>

common/pixel.c:61:1: note: Access function of PHI: {i_sum_152, +, _93}_8
common/pixel.c:61:1: note: step: _93,  init: i_sum_152
common/pixel.c:61:1: note: step unknown.
common/pixel.c:61:1: note: Analyze phi: ivtmp_202 = PHI <ivtmp_201(3), 8(7)>

common/pixel.c:61:1: note: Access function of PHI: {8, +, 4294967295}_8
common/pixel.c:61:1: note: step: 4294967295,  init: 8
common/pixel.c:61:1: note: Detected induction.
common/pixel.c:61:1: note: Analyze phi: i_sum_150 = PHI <i_sum_95(3), i_sum_152(7)>

common/pixel.c:61:1: note: detected reduction: i_sum_95 = _93 + i_sum_150;

common/pixel.c:61:1: note: Detected reduction.
common/pixel.c:61:1: note: === vect_pattern_recog ===
common/pixel.c:61:1: note: vect_is_simple_use: operand _93
common/pixel.c:61:1: note: def_stmt: _93 = ABS_EXPR <_92>;
common/pixel.c:61:1: note: type of def: 3.
common/pixel.c:61:1: note: vect_is_simple_use: operand _93
common/pixel.c:61:1: note: def_stmt: _93 = ABS_EXPR <_92>;
common/pixel.c:61:1: note: type of def: 3.
common/pixel.c:61:1: note: vect_is_simple_use: operand _93
common/pixel.c:61:1: note: def_stmt: _93 = ABS_EXPR <_92>;
common/pixel.c:61:1: note: type of def: 3.
common/pixel.c:61:1: note: vect_is_simple_use: operand _87
common/pixel.c:61:1: note: def_stmt: _87 = (int) _86;
common/pixel.c:61:1: note: type of def: 3.
common/pixel.c:61:1: note: vect_is_simple_use: operand _86
common/pixel.c:61:1: note: def_stmt: _86 = *_85;
common/pixel.c:61:1: note: type of def: 3.
common/pixel.c:61:1: note: vect_is_simple_use: operand _91
common/pixel.c:61:1: note: def_stmt: _91 = (int) _90;
common/pixel.c:61:1: note: type of def: 3.
common/pixel.c:61:1: note: vect_is_simple_use: operand _90
common/pixel.c:61:1: note: def_stmt: _90 = *_89;
common/pixel.c:61:1: note: type of def: 3.
common/pixel.c:61:1: note: vect_recog_sad_pattern: detected: patt_198 = SAD_EXPR <_86, _90, i_sum_150>;

common/pixel.c:61:1: note: pattern recognized: patt_198 = SAD_EXPR <_86, _90, i_sum_150>;
common/pixel.c:61:1: note: === vect_analyze_data_ref_accesses ===
common/pixel.c:61:1: note: === vect_mark_stmts_to_be_vectorized ===
common/pixel.c:61:1: note: init: phi relevant? x_147 = PHI <x_96(3), 0(7)>
common/pixel.c:61:1: note: init: phi relevant? i_sum_150 = PHI <i_sum_95(3), i_sum_152(7)>
common/pixel.c:61:1: note: init: phi relevant? ivtmp_202 = PHI <ivtmp_201(3), 8(7)>
common/pixel.c:61:1: note: init: stmt relevant? # DEBUG x => x_147
common/pixel.c:61:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_150
common/pixel.c:61:1: note: init: stmt relevant? _83 = (sizetype) x_147;
common/pixel.c:61:1: note: init: stmt relevant? _85 = fenc_148 + _83;
common/pixel.c:61:1: note: init: stmt relevant? _86 = *_85;
common/pixel.c:61:1: note: init: stmt relevant? _87 = (int) _86;
common/pixel.c:61:1: note: init: stmt relevant? _89 = pix0_149 + _83;
common/pixel.c:61:1: note: init: stmt relevant? _90 = *_89;
common/pixel.c:61:1: note: init: stmt relevant? _91 = (int) _90;
common/pixel.c:61:1: note: init: stmt relevant? _92 = _87 - _91;
common/pixel.c:61:1: note: init: stmt relevant? _93 = ABS_EXPR <_92>;
common/pixel.c:61:1: note: init: stmt relevant? i_sum_95 = _93 + i_sum_150;
common/pixel.c:61:1: note: vec_stmt_relevant_p: used out of loop.
common/pixel.c:61:1: note: mark relevant 0, live 1.
common/pixel.c:61:1: note: last stmt in pattern. don't mark relevant/live.
common/pixel.c:61:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_95
common/pixel.c:61:1: note: init: stmt relevant? x_96 = x_147 + 1;
common/pixel.c:61:1: note: init: stmt relevant? # DEBUG x => x_96
common/pixel.c:61:1: note: init: stmt relevant? # DEBUG x => x_96
common/pixel.c:61:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_95
common/pixel.c:61:1: note: init: stmt relevant? ivtmp_201 = ivtmp_202 - 1;
common/pixel.c:61:1: note: init: stmt relevant? if (ivtmp_201 != 0)
common/pixel.c:61:1: note: worklist: examine stmt: patt_198 = SAD_EXPR <_86, _90, i_sum_150>;
common/pixel.c:61:1: note: vect_is_simple_use: operand _86
common/pixel.c:61:1: note: def_stmt: _86 = *_85;
common/pixel.c:61:1: note: type of def: 3.
common/pixel.c:61:1: note: mark relevant 3, live 0.
common/pixel.c:61:1: note: vect_is_simple_use: operand _90
common/pixel.c:61:1: note: def_stmt: _90 = *_89;
common/pixel.c:61:1: note: type of def: 3.
common/pixel.c:61:1: note: mark relevant 3, live 0.
common/pixel.c:61:1: note: vect_is_simple_use: operand i_sum_150
common/pixel.c:61:1: note: def_stmt: i_sum_150 = PHI <i_sum_95(3), i_sum_152(7)>
common/pixel.c:61:1: note: type of def: 5.
common/pixel.c:61:1: note: mark relevant 3, live 0.
common/pixel.c:61:1: note: worklist: examine stmt: i_sum_150 = PHI <i_sum_95(3), i_sum_152(7)>
common/pixel.c:61:1: note: vect_is_simple_use: operand i_sum_95
common/pixel.c:61:1: note: def_stmt: i_sum_95 = _93 + i_sum_150;
common/pixel.c:61:1: note: type of def: 5.
common/pixel.c:61:1: note: reduc-stmt defining reduc-phi in the same nest.
common/pixel.c:61:1: note: vect_is_simple_use: operand i_sum_152
common/pixel.c:61:1: note: def_stmt: i_sum_152 = PHI <i_sum_216(6), 0(2)>
common/pixel.c:61:1: note: type of def: 2.
common/pixel.c:61:1: note: def_stmt is out of loop.
common/pixel.c:61:1: note: worklist: examine stmt: _90 = *_89;
common/pixel.c:61:1: note: worklist: examine stmt: _86 = *_85;
common/pixel.c:61:1: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _86 = *_85;
  stmt_b: _90 = *_89;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _86 = *_85;
  stmt_b: _86 = *_85;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_8)
  (chrec_b = {0B, +, 1}_8)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _90 = *_89;
  stmt_b: _90 = *_89;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_8)
  (chrec_b = {0B, +, 1}_8)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/pixel.c:61:1: note: === vect_determine_vectorization_factor ===
common/pixel.c:61:1: note: ==> examining phi: x_147 = PHI <x_96(3), 0(7)>

common/pixel.c:61:1: note: ==> examining phi: i_sum_150 = PHI <i_sum_95(3), i_sum_152(7)>

common/pixel.c:61:1: note: get vectype for scalar type:  int
common/pixel.c:61:1: note: vectype: vector(4) int
common/pixel.c:61:1: note: nunits = 4
common/pixel.c:61:1: note: ==> examining phi: ivtmp_202 = PHI <ivtmp_201(3), 8(7)>

common/pixel.c:61:1: note: ==> examining statement: # DEBUG x => x_147

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: # DEBUG i_sum => i_sum_150

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: _83 = (sizetype) x_147;

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: _85 = fenc_148 + _83;

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: _86 = *_85;

common/pixel.c:61:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:61:1: note: vectype: vector(16) unsigned char
common/pixel.c:61:1: note: nunits = 16
common/pixel.c:61:1: note: ==> examining statement: _87 = (int) _86;

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: _89 = pix0_149 + _83;

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: _90 = *_89;

common/pixel.c:61:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:61:1: note: vectype: vector(16) unsigned char
common/pixel.c:61:1: note: nunits = 16
common/pixel.c:61:1: note: ==> examining statement: _91 = (int) _90;

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: _92 = _87 - _91;

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: _93 = ABS_EXPR <_92>;

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: i_sum_95 = _93 + i_sum_150;

common/pixel.c:61:1: note: ==> examining pattern statement: patt_198 = SAD_EXPR <_86, _90, i_sum_150>;

common/pixel.c:61:1: note: get vectype for scalar type:  int
common/pixel.c:61:1: note: vectype: vector(4) int
common/pixel.c:61:1: note: nunits = 4
common/pixel.c:61:1: note: ==> examining statement: # DEBUG i_sum => i_sum_95

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: x_96 = x_147 + 1;

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: # DEBUG x => x_96

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: # DEBUG x => x_96

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: # DEBUG i_sum => i_sum_95

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: ivtmp_201 = ivtmp_202 - 1;

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: ==> examining statement: if (ivtmp_201 != 0)

common/pixel.c:61:1: note: skip.
common/pixel.c:61:1: note: vectorization factor = 16
common/pixel.c:61:1: note: === vect_analyze_data_refs_alignment ===
common/pixel.c:61:1: note: vect_compute_data_ref_alignment:
common/pixel.c:61:1: note: can't force alignment of ref: *_85
common/pixel.c:61:1: note: vect_compute_data_ref_alignment:
common/pixel.c:61:1: note: can't force alignment of ref: *_89
common/pixel.c:61:1: note: === vect_prune_runtime_alias_test_list ===
common/pixel.c:61:1: note: === vect_enhance_data_refs_alignment ===
common/pixel.c:61:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:61:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:61:1: note: vect_can_advance_ivs_p:
common/pixel.c:61:1: note: Analyze phi: x_147 = PHI <x_96(3), 0(7)>

common/pixel.c:61:1: note: Analyze phi: i_sum_150 = PHI <i_sum_95(3), i_sum_152(7)>

common/pixel.c:61:1: note: reduc phi. skip.
common/pixel.c:61:1: note: Analyze phi: ivtmp_202 = PHI <ivtmp_201(3), 8(7)>

common/pixel.c:61:1: note: Vectorizing an unaligned access.
common/pixel.c:61:1: note: Vectorizing an unaligned access.
common/pixel.c:61:1: note: === vect_analyze_slp ===
common/pixel.c:61:1: note: === vect_make_slp_decision ===
common/pixel.c:61:1: note: === vect_detect_hybrid_slp ===
common/pixel.c:61:1: note: === vect_analyze_loop_operations ===
common/pixel.c:61:1: note: examining phi: x_147 = PHI <x_96(3), 0(7)>

common/pixel.c:61:1: note: examining phi: i_sum_150 = PHI <i_sum_95(3), i_sum_152(7)>

common/pixel.c:61:1: note: examining phi: ivtmp_202 = PHI <ivtmp_201(3), 8(7)>

common/pixel.c:61:1: note: ==> examining statement: # DEBUG x => x_147
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: # DEBUG i_sum => i_sum_150
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: _83 = (sizetype) x_147;
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: _85 = fenc_148 + _83;
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: _86 = *_85;
common/pixel.c:61:1: note: vect_is_simple_use: operand *_85
common/pixel.c:61:1: note: not ssa-name.
common/pixel.c:61:1: note: use not simple.
common/pixel.c:61:1: note: vect_is_simple_use: operand *_85
common/pixel.c:61:1: note: not ssa-name.
common/pixel.c:61:1: note: use not simple.
common/pixel.c:61:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:61:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:61:1: note: ==> examining statement: _87 = (int) _86;
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: _89 = pix0_149 + _83;
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: _90 = *_89;
common/pixel.c:61:1: note: vect_is_simple_use: operand *_89
common/pixel.c:61:1: note: not ssa-name.
common/pixel.c:61:1: note: use not simple.
common/pixel.c:61:1: note: vect_is_simple_use: operand *_89
common/pixel.c:61:1: note: not ssa-name.
common/pixel.c:61:1: note: use not simple.
common/pixel.c:61:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:61:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:61:1: note: ==> examining statement: _91 = (int) _90;
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: _92 = _87 - _91;
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: _93 = ABS_EXPR <_92>;
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: i_sum_95 = _93 + i_sum_150;
common/pixel.c:61:1: note: ==> examining pattern statement: patt_198 = SAD_EXPR <_86, _90, i_sum_150>;
common/pixel.c:61:1: note: vect_is_simple_use: operand _86
common/pixel.c:61:1: note: def_stmt: _86 = *_85;
common/pixel.c:61:1: note: type of def: 3.
common/pixel.c:61:1: note: vect_is_simple_use: operand _90
common/pixel.c:61:1: note: def_stmt: _90 = *_89;
common/pixel.c:61:1: note: type of def: 3.
common/pixel.c:61:1: note: vect_is_simple_use: operand i_sum_150
common/pixel.c:61:1: note: def_stmt: i_sum_150 = PHI <i_sum_95(3), i_sum_152(7)>
common/pixel.c:61:1: note: type of def: 5.
common/pixel.c:61:1: note: detected reduction: i_sum_95 = _93 + i_sum_150;

common/pixel.c:61:1: note: reduc op not supported by target.
vect_model_reduction_cost: inside_cost = 1, prologue_cost = 1, epilogue_cost = 5 .
common/pixel.c:61:1: note: ==> examining statement: # DEBUG i_sum => i_sum_95
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: x_96 = x_147 + 1;
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: # DEBUG x => x_96
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: # DEBUG x => x_96
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: # DEBUG i_sum => i_sum_95
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: ivtmp_201 = ivtmp_202 - 1;
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: ==> examining statement: if (ivtmp_201 != 0)
common/pixel.c:61:1: note: irrelevant.
common/pixel.c:61:1: note: vectorization_factor = 16, niters = 8
common/pixel.c:61:1: note: not vectorized: iteration count too small.
common/pixel.c:61:1: note: not vectorized: iteration count smaller than vectorization factor.
common/pixel.c:61:1: note: bad operation or unsupported loop bound.
common/pixel.c:385:1: note: vectorized 0 loops in function.
x264_pixel_sad_x4_8x16 (uint8_t * fenc, uint8_t * pix0, uint8_t * pix1, uint8_t * pix2, uint8_t * pix3, int i_stride, int * scores)
{
  int i_sum;
  int x;
  int y;
  int i_sum;
  int x;
  int y;
  int i_sum;
  int x;
  int y;
  int i_sum;
  int x;
  int y;
  uint8_t * _5;
  sizetype _14;
  unsigned char _20;
  int _21;
  uint8_t * _23;
  unsigned char _24;
  int _25;
  int _26;
  int _27;
  sizetype _39;
  uint8_t * _41;
  unsigned char _42;
  int _43;
  uint8_t * _45;
  unsigned char _46;
  int _47;
  int _48;
  int _49;
  sizetype _61;
  uint8_t * _63;
  unsigned char _64;
  int _65;
  uint8_t * _67;
  unsigned char _68;
  int _69;
  int _70;
  int _71;
  sizetype _83;
  uint8_t * _85;
  unsigned char _86;
  int _87;
  uint8_t * _89;
  unsigned char _90;
  int _91;
  int _92;
  int _93;
  unsigned int ivtmp_199;
  unsigned int ivtmp_200;
  unsigned int ivtmp_201;
  unsigned int ivtmp_202;
  unsigned int ivtmp_203;
  unsigned int ivtmp_204;
  unsigned int ivtmp_205;
  unsigned int ivtmp_206;
  unsigned int ivtmp_207;
  unsigned int ivtmp_208;
  unsigned int ivtmp_209;
  unsigned int ivtmp_210;
  unsigned int ivtmp_211;
  unsigned int ivtmp_212;
  unsigned int ivtmp_213;
  unsigned int ivtmp_214;
  sizetype pretmp_223;

  <bb 2>:
  # DEBUG pix1 => fenc_2(D)
  # DEBUG i_stride_pix1 => 16
  # DEBUG pix2 => pix0_3(D)
  # DEBUG i_stride_pix2 => i_stride_4(D)
  # DEBUG i_sum => 0
  # DEBUG y => 0
  # DEBUG y => 0
  # DEBUG i_sum => 0
  # DEBUG pix2 => pix0_3(D)
  # DEBUG pix1 => fenc_2(D)
  pretmp_223 = (sizetype) i_stride_4(D);
  goto <bb 7>;

  <bb 3>:

  <bb 4>:
  # x_147 = PHI <x_96(3), 0(7)>
  # i_sum_150 = PHI <i_sum_95(3), i_sum_152(7)>
  # ivtmp_202 = PHI <ivtmp_201(3), 8(7)>
  # DEBUG x => x_147
  # DEBUG i_sum => i_sum_150
  _83 = (sizetype) x_147;
  _85 = fenc_148 + _83;
  _86 = *_85;
  _87 = (int) _86;
  _89 = pix0_149 + _83;
  _90 = *_89;
  _91 = (int) _90;
  _92 = _87 - _91;
  _93 = ABS_EXPR <_92>;
  i_sum_95 = _93 + i_sum_150;
  # DEBUG i_sum => i_sum_95
  x_96 = x_147 + 1;
  # DEBUG x => x_96
  # DEBUG x => x_96
  # DEBUG i_sum => i_sum_95
  ivtmp_201 = ivtmp_202 - 1;
  if (ivtmp_201 != 0)
    goto <bb 3>;
  else
    goto <bb 5>;

  <bb 5>:
  # i_sum_216 = PHI <i_sum_95(4)>
  fenc_97 = fenc_148 + 16;
  # DEBUG pix1 => fenc_97
  pix0_99 = pix0_149 + pretmp_223;
  # DEBUG pix2 => pix0_99
  y_101 = y_151 + 1;
  # DEBUG y => y_101
  # DEBUG y => y_101
  # DEBUG i_sum => i_sum_216
  # DEBUG pix2 => pix0_99
  # DEBUG pix1 => fenc_97
  ivtmp_199 = ivtmp_200 - 1;
  if (ivtmp_199 != 0)
    goto <bb 6>;
  else
    goto <bb 8>;

  <bb 6>:

  <bb 7>:
  # fenc_148 = PHI <fenc_97(6), fenc_2(D)(2)>
  # pix0_149 = PHI <pix0_99(6), pix0_3(D)(2)>
  # y_151 = PHI <y_101(6), 0(2)>
  # i_sum_152 = PHI <i_sum_216(6), 0(2)>
  # ivtmp_200 = PHI <ivtmp_199(6), 16(2)>
  # DEBUG y => y_151
  # DEBUG i_sum => i_sum_152
  # DEBUG pix2 => pix0_149
  # DEBUG pix1 => fenc_148
  # DEBUG x => 0
  # DEBUG i_sum => i_sum_152
  goto <bb 4>;

  <bb 8>:
  # i_sum_215 = PHI <i_sum_216(5)>
  # DEBUG pix1 => NULL
  # DEBUG i_stride_pix1 => NULL
  # DEBUG pix2 => NULL
  # DEBUG i_stride_pix2 => NULL
  # DEBUG y => NULL
  # DEBUG x => NULL
  # DEBUG i_sum => NULL
  *scores_6(D) = i_sum_215;
  # DEBUG pix1 => fenc_2(D)
  # DEBUG i_stride_pix1 => 16
  # DEBUG pix2 => pix1_9(D)
  # DEBUG i_stride_pix2 => i_stride_4(D)
  # DEBUG y => 0
  # DEBUG i_sum => 0
  # DEBUG pix2 => pix1_9(D)
  # DEBUG pix1 => fenc_2(D)
  goto <bb 13>;

  <bb 9>:

  <bb 10>:
  # x_141 = PHI <x_74(9), 0(13)>
  # i_sum_144 = PHI <i_sum_73(9), i_sum_146(13)>
  # ivtmp_206 = PHI <ivtmp_205(9), 8(13)>
  # DEBUG x => x_141
  # DEBUG i_sum => i_sum_144
  _61 = (sizetype) x_141;
  _63 = fenc_142 + _61;
  _64 = *_63;
  _65 = (int) _64;
  _67 = pix1_143 + _61;
  _68 = *_67;
  _69 = (int) _68;
  _70 = _65 - _69;
  _71 = ABS_EXPR <_70>;
  i_sum_73 = _71 + i_sum_144;
  # DEBUG i_sum => i_sum_73
  x_74 = x_141 + 1;
  # DEBUG x => x_74
  # DEBUG x => x_74
  # DEBUG i_sum => i_sum_73
  ivtmp_205 = ivtmp_206 - 1;
  if (ivtmp_205 != 0)
    goto <bb 9>;
  else
    goto <bb 11>;

  <bb 11>:
  # i_sum_218 = PHI <i_sum_73(10)>
  fenc_75 = fenc_142 + 16;
  # DEBUG pix1 => fenc_75
  pix1_77 = pix1_143 + pretmp_223;
  # DEBUG pix2 => pix1_77
  y_79 = y_145 + 1;
  # DEBUG y => y_79
  # DEBUG y => y_79
  # DEBUG i_sum => i_sum_218
  # DEBUG pix2 => pix1_77
  # DEBUG pix1 => fenc_75
  ivtmp_203 = ivtmp_204 - 1;
  if (ivtmp_203 != 0)
    goto <bb 12>;
  else
    goto <bb 14>;

  <bb 12>:

  <bb 13>:
  # fenc_142 = PHI <fenc_75(12), fenc_2(D)(8)>
  # pix1_143 = PHI <pix1_77(12), pix1_9(D)(8)>
  # y_145 = PHI <y_79(12), 0(8)>
  # i_sum_146 = PHI <i_sum_218(12), 0(8)>
  # ivtmp_204 = PHI <ivtmp_203(12), 16(8)>
  # DEBUG y => y_145
  # DEBUG i_sum => i_sum_146
  # DEBUG pix2 => pix1_143
  # DEBUG pix1 => fenc_142
  # DEBUG x => 0
  # DEBUG i_sum => i_sum_146
  goto <bb 10>;

  <bb 14>:
  # i_sum_217 = PHI <i_sum_218(11)>
  # DEBUG pix1 => NULL
  # DEBUG i_stride_pix1 => NULL
  # DEBUG pix2 => NULL
  # DEBUG i_stride_pix2 => NULL
  # DEBUG y => NULL
  # DEBUG x => NULL
  # DEBUG i_sum => NULL
  MEM[(int *)scores_6(D) + 4B] = i_sum_217;
  # DEBUG pix1 => fenc_2(D)
  # DEBUG i_stride_pix1 => 16
  # DEBUG pix2 => pix2_13(D)
  # DEBUG i_stride_pix2 => i_stride_4(D)
  # DEBUG y => 0
  # DEBUG i_sum => 0
  # DEBUG pix2 => pix2_13(D)
  # DEBUG pix1 => fenc_2(D)
  goto <bb 19>;

  <bb 15>:

  <bb 16>:
  # x_81 = PHI <x_52(15), 0(19)>
  # i_sum_138 = PHI <i_sum_51(15), i_sum_140(19)>
  # ivtmp_210 = PHI <ivtmp_209(15), 8(19)>
  # DEBUG x => x_81
  # DEBUG i_sum => i_sum_138
  _39 = (sizetype) x_81;
  _41 = fenc_37 + _39;
  _42 = *_41;
  _43 = (int) _42;
  _45 = pix2_137 + _39;
  _46 = *_45;
  _47 = (int) _46;
  _48 = _43 - _47;
  _49 = ABS_EXPR <_48>;
  i_sum_51 = _49 + i_sum_138;
  # DEBUG i_sum => i_sum_51
  x_52 = x_81 + 1;
  # DEBUG x => x_52
  # DEBUG x => x_52
  # DEBUG i_sum => i_sum_51
  ivtmp_209 = ivtmp_210 - 1;
  if (ivtmp_209 != 0)
    goto <bb 15>;
  else
    goto <bb 17>;

  <bb 17>:
  # i_sum_220 = PHI <i_sum_51(16)>
  fenc_53 = fenc_37 + 16;
  # DEBUG pix1 => fenc_53
  pix2_55 = pix2_137 + pretmp_223;
  # DEBUG pix2 => pix2_55
  y_57 = y_139 + 1;
  # DEBUG y => y_57
  # DEBUG y => y_57
  # DEBUG i_sum => i_sum_220
  # DEBUG pix2 => pix2_55
  # DEBUG pix1 => fenc_53
  ivtmp_207 = ivtmp_208 - 1;
  if (ivtmp_207 != 0)
    goto <bb 18>;
  else
    goto <bb 20>;

  <bb 18>:

  <bb 19>:
  # fenc_37 = PHI <fenc_53(18), fenc_2(D)(14)>
  # pix2_137 = PHI <pix2_55(18), pix2_13(D)(14)>
  # y_139 = PHI <y_57(18), 0(14)>
  # i_sum_140 = PHI <i_sum_220(18), 0(14)>
  # ivtmp_208 = PHI <ivtmp_207(18), 16(14)>
  # DEBUG y => y_139
  # DEBUG i_sum => i_sum_140
  # DEBUG pix2 => pix2_137
  # DEBUG pix1 => fenc_37
  # DEBUG x => 0
  # DEBUG i_sum => i_sum_140
  goto <bb 16>;

  <bb 20>:
  # i_sum_219 = PHI <i_sum_220(17)>
  # DEBUG pix1 => NULL
  # DEBUG i_stride_pix1 => NULL
  # DEBUG pix2 => NULL
  # DEBUG i_stride_pix2 => NULL
  # DEBUG y => NULL
  # DEBUG x => NULL
  # DEBUG i_sum => NULL
  MEM[(int *)scores_6(D) + 8B] = i_sum_219;
  # DEBUG pix1 => fenc_2(D)
  # DEBUG i_stride_pix1 => 16
  # DEBUG pix2 => pix3_17(D)
  # DEBUG i_stride_pix2 => i_stride_4(D)
  # DEBUG y => 0
  # DEBUG i_sum => 0
  # DEBUG pix2 => pix3_17(D)
  # DEBUG pix1 => fenc_2(D)
  goto <bb 25>;

  <bb 21>:

  <bb 22>:
  # x_8 = PHI <x_30(21), 0(25)>
  # i_sum_59 = PHI <i_sum_29(21), i_sum_104(25)>
  # ivtmp_214 = PHI <ivtmp_213(21), 8(25)>
  # DEBUG x => x_8
  # DEBUG i_sum => i_sum_59
  _14 = (sizetype) x_8;
  _5 = fenc_16 + _14;
  _20 = *_5;
  _21 = (int) _20;
  _23 = pix3_103 + _14;
  _24 = *_23;
  _25 = (int) _24;
  _26 = _21 - _25;
  _27 = ABS_EXPR <_26>;
  i_sum_29 = _27 + i_sum_59;
  # DEBUG i_sum => i_sum_29
  x_30 = x_8 + 1;
  # DEBUG x => x_30
  # DEBUG x => x_30
  # DEBUG i_sum => i_sum_29
  ivtmp_213 = ivtmp_214 - 1;
  if (ivtmp_213 != 0)
    goto <bb 21>;
  else
    goto <bb 23>;

  <bb 23>:
  # i_sum_222 = PHI <i_sum_29(22)>
  fenc_31 = fenc_16 + 16;
  # DEBUG pix1 => fenc_31
  pix3_33 = pix3_103 + pretmp_223;
  # DEBUG pix2 => pix3_33
  y_35 = y_12 + 1;
  # DEBUG y => y_35
  # DEBUG y => y_35
  # DEBUG i_sum => i_sum_222
  # DEBUG pix2 => pix3_33
  # DEBUG pix1 => fenc_31
  ivtmp_211 = ivtmp_212 - 1;
  if (ivtmp_211 != 0)
    goto <bb 24>;
  else
    goto <bb 26>;

  <bb 24>:

  <bb 25>:
  # fenc_16 = PHI <fenc_31(24), fenc_2(D)(20)>
  # pix3_103 = PHI <pix3_33(24), pix3_17(D)(20)>
  # y_12 = PHI <y_35(24), 0(20)>
  # i_sum_104 = PHI <i_sum_222(24), 0(20)>
  # ivtmp_212 = PHI <ivtmp_211(24), 16(20)>
  # DEBUG y => y_12
  # DEBUG i_sum => i_sum_104
  # DEBUG pix2 => pix3_103
  # DEBUG pix1 => fenc_16
  # DEBUG x => 0
  # DEBUG i_sum => i_sum_104
  goto <bb 22>;

  <bb 26>:
  # i_sum_221 = PHI <i_sum_222(23)>
  # DEBUG pix1 => NULL
  # DEBUG i_stride_pix1 => NULL
  # DEBUG pix2 => NULL
  # DEBUG i_stride_pix2 => NULL
  # DEBUG y => NULL
  # DEBUG x => NULL
  # DEBUG i_sum => NULL
  MEM[(int *)scores_6(D) + 12B] = i_sum_221;
  return;

}



;; Function x264_pixel_sad_x3_8x8 (x264_pixel_sad_x3_8x8, funcdef_no=156, decl_uid=8068, cgraph_uid=156, symbol_order=199)


Analyzing loop at common/pixel.c:62
common/pixel.c:62:1: note: ===== analyze_loop_nest =====
common/pixel.c:62:1: note: === vect_analyze_loop_form ===
common/pixel.c:62:1: note: ===== analyze_loop_nest_1 =====
common/pixel.c:62:1: note: === vect_analyze_loop_form ===
common/pixel.c:62:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 2
  exit condition [7, + , 4294967295] != 0
  bounds on difference of bases: -7 ... -7
  result:
    # of iterations 7, bounded by 7
common/pixel.c:62:1: note: Considering outer-loop vectorization.
common/pixel.c:62:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 1
  exit condition [7, + , 4294967295] != 0
  bounds on difference of bases: -7 ... -7
  result:
    # of iterations 7, bounded by 7
common/pixel.c:62:1: note: === vect_analyze_data_refs ===
Creating dr for *_16
analyze_innermost: success.
	base_address: fenc_34
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_2(D)
	Access function 0: {{0B, +, 16}_1, +, 1}_2
Creating dr for *_20
analyze_innermost: success.
	base_address: pix2_79
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix2_13(D)
	Access function 0: {{0B, +, pretmp_169}_1, +, 1}_2
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:62:1: note: analyze in outer-loop: *fenc_34
common/pixel.c:62:1: note: 	outer base_address: fenc_2(D)
	outer offset from base address: 0
	outer constant offset from base address: 0
	outer step: 16
	outer aligned to: 128
common/pixel.c:62:1: note: got vectype for stmt: _17 = *_16;
vector(16) unsigned char
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:62:1: note: analyze in outer-loop: *pix2_79
common/pixel.c:62:1: note: failed: evolution of base is not affine.
common/pixel.c:62:1: note: bad data references.

Analyzing loop at common/pixel.c:62
common/pixel.c:62:1: note: ===== analyze_loop_nest =====
common/pixel.c:62:1: note: === vect_analyze_loop_form ===
common/pixel.c:62:1: note: === get_loop_niters ===
common/pixel.c:62:1: note: === vect_analyze_data_refs ===
Creating dr for *_16
analyze_innermost: success.
	base_address: fenc_34
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_34
	Access function 0: {0B, +, 1}_2
Creating dr for *_20
analyze_innermost: success.
	base_address: pix2_79
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix2_79
	Access function 0: {0B, +, 1}_2
common/pixel.c:62:1: note: got vectype for stmt: _17 = *_16;
vector(16) unsigned char
common/pixel.c:62:1: note: got vectype for stmt: _21 = *_20;
vector(16) unsigned char
common/pixel.c:62:1: note: === vect_analyze_scalar_cycles ===
common/pixel.c:62:1: note: Analyze phi: x_8 = PHI <x_27(15), 0(19)>

common/pixel.c:62:1: note: Access function of PHI: {0, +, 1}_2
common/pixel.c:62:1: note: step: 1,  init: 0
common/pixel.c:62:1: note: Detected induction.
common/pixel.c:62:1: note: Analyze phi: i_sum_78 = PHI <i_sum_26(15), i_sum_12(19)>

common/pixel.c:62:1: note: Access function of PHI: {i_sum_12, +, _24}_2
common/pixel.c:62:1: note: step: _24,  init: i_sum_12
common/pixel.c:62:1: note: step unknown.
common/pixel.c:62:1: note: Analyze phi: ivtmp_162 = PHI <ivtmp_161(15), 8(19)>

common/pixel.c:62:1: note: Access function of PHI: {8, +, 4294967295}_2
common/pixel.c:62:1: note: step: 4294967295,  init: 8
common/pixel.c:62:1: note: Detected induction.
common/pixel.c:62:1: note: Analyze phi: i_sum_78 = PHI <i_sum_26(15), i_sum_12(19)>

common/pixel.c:62:1: note: detected reduction: i_sum_26 = _24 + i_sum_78;

common/pixel.c:62:1: note: Detected reduction.
common/pixel.c:62:1: note: === vect_pattern_recog ===
common/pixel.c:62:1: note: vect_is_simple_use: operand _24
common/pixel.c:62:1: note: def_stmt: _24 = ABS_EXPR <_23>;
common/pixel.c:62:1: note: type of def: 3.
common/pixel.c:62:1: note: vect_is_simple_use: operand _24
common/pixel.c:62:1: note: def_stmt: _24 = ABS_EXPR <_23>;
common/pixel.c:62:1: note: type of def: 3.
common/pixel.c:62:1: note: vect_is_simple_use: operand _24
common/pixel.c:62:1: note: def_stmt: _24 = ABS_EXPR <_23>;
common/pixel.c:62:1: note: type of def: 3.
common/pixel.c:62:1: note: vect_is_simple_use: operand _18
common/pixel.c:62:1: note: def_stmt: _18 = (int) _17;
common/pixel.c:62:1: note: type of def: 3.
common/pixel.c:62:1: note: vect_is_simple_use: operand _17
common/pixel.c:62:1: note: def_stmt: _17 = *_16;
common/pixel.c:62:1: note: type of def: 3.
common/pixel.c:62:1: note: vect_is_simple_use: operand _22
common/pixel.c:62:1: note: def_stmt: _22 = (int) _21;
common/pixel.c:62:1: note: type of def: 3.
common/pixel.c:62:1: note: vect_is_simple_use: operand _21
common/pixel.c:62:1: note: def_stmt: _21 = *_20;
common/pixel.c:62:1: note: type of def: 3.
common/pixel.c:62:1: note: vect_recog_sad_pattern: detected: patt_150 = SAD_EXPR <_17, _21, i_sum_78>;

common/pixel.c:62:1: note: pattern recognized: patt_150 = SAD_EXPR <_17, _21, i_sum_78>;
common/pixel.c:62:1: note: === vect_analyze_data_ref_accesses ===
common/pixel.c:62:1: note: === vect_mark_stmts_to_be_vectorized ===
common/pixel.c:62:1: note: init: phi relevant? x_8 = PHI <x_27(15), 0(19)>
common/pixel.c:62:1: note: init: phi relevant? i_sum_78 = PHI <i_sum_26(15), i_sum_12(19)>
common/pixel.c:62:1: note: init: phi relevant? ivtmp_162 = PHI <ivtmp_161(15), 8(19)>
common/pixel.c:62:1: note: init: stmt relevant? # DEBUG x => x_8
common/pixel.c:62:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_78
common/pixel.c:62:1: note: init: stmt relevant? _10 = (sizetype) x_8;
common/pixel.c:62:1: note: init: stmt relevant? _16 = fenc_34 + _10;
common/pixel.c:62:1: note: init: stmt relevant? _17 = *_16;
common/pixel.c:62:1: note: init: stmt relevant? _18 = (int) _17;
common/pixel.c:62:1: note: init: stmt relevant? _20 = pix2_79 + _10;
common/pixel.c:62:1: note: init: stmt relevant? _21 = *_20;
common/pixel.c:62:1: note: init: stmt relevant? _22 = (int) _21;
common/pixel.c:62:1: note: init: stmt relevant? _23 = _18 - _22;
common/pixel.c:62:1: note: init: stmt relevant? _24 = ABS_EXPR <_23>;
common/pixel.c:62:1: note: init: stmt relevant? i_sum_26 = _24 + i_sum_78;
common/pixel.c:62:1: note: vec_stmt_relevant_p: used out of loop.
common/pixel.c:62:1: note: mark relevant 0, live 1.
common/pixel.c:62:1: note: last stmt in pattern. don't mark relevant/live.
common/pixel.c:62:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_26
common/pixel.c:62:1: note: init: stmt relevant? x_27 = x_8 + 1;
common/pixel.c:62:1: note: init: stmt relevant? # DEBUG x => x_27
common/pixel.c:62:1: note: init: stmt relevant? # DEBUG x => x_27
common/pixel.c:62:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_26
common/pixel.c:62:1: note: init: stmt relevant? ivtmp_161 = ivtmp_162 - 1;
common/pixel.c:62:1: note: init: stmt relevant? if (ivtmp_161 != 0)
common/pixel.c:62:1: note: worklist: examine stmt: patt_150 = SAD_EXPR <_17, _21, i_sum_78>;
common/pixel.c:62:1: note: vect_is_simple_use: operand _17
common/pixel.c:62:1: note: def_stmt: _17 = *_16;
common/pixel.c:62:1: note: type of def: 3.
common/pixel.c:62:1: note: mark relevant 3, live 0.
common/pixel.c:62:1: note: vect_is_simple_use: operand _21
common/pixel.c:62:1: note: def_stmt: _21 = *_20;
common/pixel.c:62:1: note: type of def: 3.
common/pixel.c:62:1: note: mark relevant 3, live 0.
common/pixel.c:62:1: note: vect_is_simple_use: operand i_sum_78
common/pixel.c:62:1: note: def_stmt: i_sum_78 = PHI <i_sum_26(15), i_sum_12(19)>
common/pixel.c:62:1: note: type of def: 5.
common/pixel.c:62:1: note: mark relevant 3, live 0.
common/pixel.c:62:1: note: worklist: examine stmt: i_sum_78 = PHI <i_sum_26(15), i_sum_12(19)>
common/pixel.c:62:1: note: vect_is_simple_use: operand i_sum_26
common/pixel.c:62:1: note: def_stmt: i_sum_26 = _24 + i_sum_78;
common/pixel.c:62:1: note: type of def: 5.
common/pixel.c:62:1: note: reduc-stmt defining reduc-phi in the same nest.
common/pixel.c:62:1: note: vect_is_simple_use: operand i_sum_12
common/pixel.c:62:1: note: def_stmt: i_sum_12 = PHI <i_sum_168(18), 0(14)>
common/pixel.c:62:1: note: type of def: 2.
common/pixel.c:62:1: note: def_stmt is out of loop.
common/pixel.c:62:1: note: worklist: examine stmt: _21 = *_20;
common/pixel.c:62:1: note: worklist: examine stmt: _17 = *_16;
common/pixel.c:62:1: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _17 = *_16;
  stmt_b: _21 = *_20;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _17 = *_16;
  stmt_b: _17 = *_16;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_2)
  (chrec_b = {0B, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _21 = *_20;
  stmt_b: _21 = *_20;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_2)
  (chrec_b = {0B, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/pixel.c:62:1: note: === vect_determine_vectorization_factor ===
common/pixel.c:62:1: note: ==> examining phi: x_8 = PHI <x_27(15), 0(19)>

common/pixel.c:62:1: note: ==> examining phi: i_sum_78 = PHI <i_sum_26(15), i_sum_12(19)>

common/pixel.c:62:1: note: get vectype for scalar type:  int
common/pixel.c:62:1: note: vectype: vector(4) int
common/pixel.c:62:1: note: nunits = 4
common/pixel.c:62:1: note: ==> examining phi: ivtmp_162 = PHI <ivtmp_161(15), 8(19)>

common/pixel.c:62:1: note: ==> examining statement: # DEBUG x => x_8

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: # DEBUG i_sum => i_sum_78

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: _10 = (sizetype) x_8;

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: _16 = fenc_34 + _10;

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: _17 = *_16;

common/pixel.c:62:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:62:1: note: vectype: vector(16) unsigned char
common/pixel.c:62:1: note: nunits = 16
common/pixel.c:62:1: note: ==> examining statement: _18 = (int) _17;

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: _20 = pix2_79 + _10;

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: _21 = *_20;

common/pixel.c:62:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:62:1: note: vectype: vector(16) unsigned char
common/pixel.c:62:1: note: nunits = 16
common/pixel.c:62:1: note: ==> examining statement: _22 = (int) _21;

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: _23 = _18 - _22;

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: _24 = ABS_EXPR <_23>;

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: i_sum_26 = _24 + i_sum_78;

common/pixel.c:62:1: note: ==> examining pattern statement: patt_150 = SAD_EXPR <_17, _21, i_sum_78>;

common/pixel.c:62:1: note: get vectype for scalar type:  int
common/pixel.c:62:1: note: vectype: vector(4) int
common/pixel.c:62:1: note: nunits = 4
common/pixel.c:62:1: note: ==> examining statement: # DEBUG i_sum => i_sum_26

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: x_27 = x_8 + 1;

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: # DEBUG x => x_27

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: # DEBUG x => x_27

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: # DEBUG i_sum => i_sum_26

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: ivtmp_161 = ivtmp_162 - 1;

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: if (ivtmp_161 != 0)

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: vectorization factor = 16
common/pixel.c:62:1: note: === vect_analyze_data_refs_alignment ===
common/pixel.c:62:1: note: vect_compute_data_ref_alignment:
common/pixel.c:62:1: note: can't force alignment of ref: *_16
common/pixel.c:62:1: note: vect_compute_data_ref_alignment:
common/pixel.c:62:1: note: can't force alignment of ref: *_20
common/pixel.c:62:1: note: === vect_prune_runtime_alias_test_list ===
common/pixel.c:62:1: note: === vect_enhance_data_refs_alignment ===
common/pixel.c:62:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:62:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:62:1: note: vect_can_advance_ivs_p:
common/pixel.c:62:1: note: Analyze phi: x_8 = PHI <x_27(15), 0(19)>

common/pixel.c:62:1: note: Analyze phi: i_sum_78 = PHI <i_sum_26(15), i_sum_12(19)>

common/pixel.c:62:1: note: reduc phi. skip.
common/pixel.c:62:1: note: Analyze phi: ivtmp_162 = PHI <ivtmp_161(15), 8(19)>

common/pixel.c:62:1: note: Vectorizing an unaligned access.
common/pixel.c:62:1: note: Vectorizing an unaligned access.
common/pixel.c:62:1: note: === vect_analyze_slp ===
common/pixel.c:62:1: note: === vect_make_slp_decision ===
common/pixel.c:62:1: note: === vect_detect_hybrid_slp ===
common/pixel.c:62:1: note: === vect_analyze_loop_operations ===
common/pixel.c:62:1: note: examining phi: x_8 = PHI <x_27(15), 0(19)>

common/pixel.c:62:1: note: examining phi: i_sum_78 = PHI <i_sum_26(15), i_sum_12(19)>

common/pixel.c:62:1: note: examining phi: ivtmp_162 = PHI <ivtmp_161(15), 8(19)>

common/pixel.c:62:1: note: ==> examining statement: # DEBUG x => x_8
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: # DEBUG i_sum => i_sum_78
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: _10 = (sizetype) x_8;
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: _16 = fenc_34 + _10;
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: _17 = *_16;
common/pixel.c:62:1: note: vect_is_simple_use: operand *_16
common/pixel.c:62:1: note: not ssa-name.
common/pixel.c:62:1: note: use not simple.
common/pixel.c:62:1: note: vect_is_simple_use: operand *_16
common/pixel.c:62:1: note: not ssa-name.
common/pixel.c:62:1: note: use not simple.
common/pixel.c:62:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:62:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:62:1: note: ==> examining statement: _18 = (int) _17;
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: _20 = pix2_79 + _10;
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: _21 = *_20;
common/pixel.c:62:1: note: vect_is_simple_use: operand *_20
common/pixel.c:62:1: note: not ssa-name.
common/pixel.c:62:1: note: use not simple.
common/pixel.c:62:1: note: vect_is_simple_use: operand *_20
common/pixel.c:62:1: note: not ssa-name.
common/pixel.c:62:1: note: use not simple.
common/pixel.c:62:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:62:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:62:1: note: ==> examining statement: _22 = (int) _21;
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: _23 = _18 - _22;
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: _24 = ABS_EXPR <_23>;
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: i_sum_26 = _24 + i_sum_78;
common/pixel.c:62:1: note: ==> examining pattern statement: patt_150 = SAD_EXPR <_17, _21, i_sum_78>;
common/pixel.c:62:1: note: vect_is_simple_use: operand _17
common/pixel.c:62:1: note: def_stmt: _17 = *_16;
common/pixel.c:62:1: note: type of def: 3.
common/pixel.c:62:1: note: vect_is_simple_use: operand _21
common/pixel.c:62:1: note: def_stmt: _21 = *_20;
common/pixel.c:62:1: note: type of def: 3.
common/pixel.c:62:1: note: vect_is_simple_use: operand i_sum_78
common/pixel.c:62:1: note: def_stmt: i_sum_78 = PHI <i_sum_26(15), i_sum_12(19)>
common/pixel.c:62:1: note: type of def: 5.
common/pixel.c:62:1: note: detected reduction: i_sum_26 = _24 + i_sum_78;

common/pixel.c:62:1: note: reduc op not supported by target.
vect_model_reduction_cost: inside_cost = 1, prologue_cost = 1, epilogue_cost = 5 .
common/pixel.c:62:1: note: ==> examining statement: # DEBUG i_sum => i_sum_26
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: x_27 = x_8 + 1;
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: # DEBUG x => x_27
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: # DEBUG x => x_27
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: # DEBUG i_sum => i_sum_26
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: ivtmp_161 = ivtmp_162 - 1;
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: if (ivtmp_161 != 0)
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: vectorization_factor = 16, niters = 8
common/pixel.c:62:1: note: not vectorized: iteration count too small.
common/pixel.c:62:1: note: not vectorized: iteration count smaller than vectorization factor.
common/pixel.c:62:1: note: bad operation or unsupported loop bound.

Analyzing loop at common/pixel.c:62
common/pixel.c:62:1: note: ===== analyze_loop_nest =====
common/pixel.c:62:1: note: === vect_analyze_loop_form ===
common/pixel.c:62:1: note: ===== analyze_loop_nest_1 =====
common/pixel.c:62:1: note: === vect_analyze_loop_form ===
common/pixel.c:62:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 4
  exit condition [7, + , 4294967295] != 0
  bounds on difference of bases: -7 ... -7
  result:
    # of iterations 7, bounded by 7
common/pixel.c:62:1: note: Considering outer-loop vectorization.
common/pixel.c:62:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 3
  exit condition [7, + , 4294967295] != 0
  bounds on difference of bases: -7 ... -7
  result:
    # of iterations 7, bounded by 7
common/pixel.c:62:1: note: === vect_analyze_data_refs ===
Creating dr for *_38
analyze_innermost: success.
	base_address: fenc_105
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_2(D)
	Access function 0: {{0B, +, 16}_3, +, 1}_4
Creating dr for *_42
analyze_innermost: success.
	base_address: pix1_106
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix1_9(D)
	Access function 0: {{0B, +, pretmp_169}_3, +, 1}_4
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:62:1: note: analyze in outer-loop: *fenc_105
common/pixel.c:62:1: note: 	outer base_address: fenc_2(D)
	outer offset from base address: 0
	outer constant offset from base address: 0
	outer step: 16
	outer aligned to: 128
common/pixel.c:62:1: note: got vectype for stmt: _39 = *_38;
vector(16) unsigned char
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:62:1: note: analyze in outer-loop: *pix1_106
common/pixel.c:62:1: note: failed: evolution of base is not affine.
common/pixel.c:62:1: note: bad data references.

Analyzing loop at common/pixel.c:62
common/pixel.c:62:1: note: ===== analyze_loop_nest =====
common/pixel.c:62:1: note: === vect_analyze_loop_form ===
common/pixel.c:62:1: note: === get_loop_niters ===
common/pixel.c:62:1: note: === vect_analyze_data_refs ===
Creating dr for *_38
analyze_innermost: success.
	base_address: fenc_105
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_105
	Access function 0: {0B, +, 1}_4
Creating dr for *_42
analyze_innermost: success.
	base_address: pix1_106
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix1_106
	Access function 0: {0B, +, 1}_4
common/pixel.c:62:1: note: got vectype for stmt: _39 = *_38;
vector(16) unsigned char
common/pixel.c:62:1: note: got vectype for stmt: _43 = *_42;
vector(16) unsigned char
common/pixel.c:62:1: note: === vect_analyze_scalar_cycles ===
common/pixel.c:62:1: note: Analyze phi: x_104 = PHI <x_49(9), 0(13)>

common/pixel.c:62:1: note: Access function of PHI: {0, +, 1}_4
common/pixel.c:62:1: note: step: 1,  init: 0
common/pixel.c:62:1: note: Detected induction.
common/pixel.c:62:1: note: Analyze phi: i_sum_107 = PHI <i_sum_48(9), i_sum_109(13)>

common/pixel.c:62:1: note: Access function of PHI: {i_sum_109, +, _46}_4
common/pixel.c:62:1: note: step: _46,  init: i_sum_109
common/pixel.c:62:1: note: step unknown.
common/pixel.c:62:1: note: Analyze phi: ivtmp_158 = PHI <ivtmp_157(9), 8(13)>

common/pixel.c:62:1: note: Access function of PHI: {8, +, 4294967295}_4
common/pixel.c:62:1: note: step: 4294967295,  init: 8
common/pixel.c:62:1: note: Detected induction.
common/pixel.c:62:1: note: Analyze phi: i_sum_107 = PHI <i_sum_48(9), i_sum_109(13)>

common/pixel.c:62:1: note: detected reduction: i_sum_48 = _46 + i_sum_107;

common/pixel.c:62:1: note: Detected reduction.
common/pixel.c:62:1: note: === vect_pattern_recog ===
common/pixel.c:62:1: note: vect_is_simple_use: operand _46
common/pixel.c:62:1: note: def_stmt: _46 = ABS_EXPR <_45>;
common/pixel.c:62:1: note: type of def: 3.
common/pixel.c:62:1: note: vect_is_simple_use: operand _46
common/pixel.c:62:1: note: def_stmt: _46 = ABS_EXPR <_45>;
common/pixel.c:62:1: note: type of def: 3.
common/pixel.c:62:1: note: vect_is_simple_use: operand _46
common/pixel.c:62:1: note: def_stmt: _46 = ABS_EXPR <_45>;
common/pixel.c:62:1: note: type of def: 3.
common/pixel.c:62:1: note: vect_is_simple_use: operand _40
common/pixel.c:62:1: note: def_stmt: _40 = (int) _39;
common/pixel.c:62:1: note: type of def: 3.
common/pixel.c:62:1: note: vect_is_simple_use: operand _39
common/pixel.c:62:1: note: def_stmt: _39 = *_38;
common/pixel.c:62:1: note: type of def: 3.
common/pixel.c:62:1: note: vect_is_simple_use: operand _44
common/pixel.c:62:1: note: def_stmt: _44 = (int) _43;
common/pixel.c:62:1: note: type of def: 3.
common/pixel.c:62:1: note: vect_is_simple_use: operand _43
common/pixel.c:62:1: note: def_stmt: _43 = *_42;
common/pixel.c:62:1: note: type of def: 3.
common/pixel.c:62:1: note: vect_recog_sad_pattern: detected: patt_150 = SAD_EXPR <_39, _43, i_sum_107>;

common/pixel.c:62:1: note: pattern recognized: patt_150 = SAD_EXPR <_39, _43, i_sum_107>;
common/pixel.c:62:1: note: === vect_analyze_data_ref_accesses ===
common/pixel.c:62:1: note: === vect_mark_stmts_to_be_vectorized ===
common/pixel.c:62:1: note: init: phi relevant? x_104 = PHI <x_49(9), 0(13)>
common/pixel.c:62:1: note: init: phi relevant? i_sum_107 = PHI <i_sum_48(9), i_sum_109(13)>
common/pixel.c:62:1: note: init: phi relevant? ivtmp_158 = PHI <ivtmp_157(9), 8(13)>
common/pixel.c:62:1: note: init: stmt relevant? # DEBUG x => x_104
common/pixel.c:62:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_107
common/pixel.c:62:1: note: init: stmt relevant? _36 = (sizetype) x_104;
common/pixel.c:62:1: note: init: stmt relevant? _38 = fenc_105 + _36;
common/pixel.c:62:1: note: init: stmt relevant? _39 = *_38;
common/pixel.c:62:1: note: init: stmt relevant? _40 = (int) _39;
common/pixel.c:62:1: note: init: stmt relevant? _42 = pix1_106 + _36;
common/pixel.c:62:1: note: init: stmt relevant? _43 = *_42;
common/pixel.c:62:1: note: init: stmt relevant? _44 = (int) _43;
common/pixel.c:62:1: note: init: stmt relevant? _45 = _40 - _44;
common/pixel.c:62:1: note: init: stmt relevant? _46 = ABS_EXPR <_45>;
common/pixel.c:62:1: note: init: stmt relevant? i_sum_48 = _46 + i_sum_107;
common/pixel.c:62:1: note: vec_stmt_relevant_p: used out of loop.
common/pixel.c:62:1: note: mark relevant 0, live 1.
common/pixel.c:62:1: note: last stmt in pattern. don't mark relevant/live.
common/pixel.c:62:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_48
common/pixel.c:62:1: note: init: stmt relevant? x_49 = x_104 + 1;
common/pixel.c:62:1: note: init: stmt relevant? # DEBUG x => x_49
common/pixel.c:62:1: note: init: stmt relevant? # DEBUG x => x_49
common/pixel.c:62:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_48
common/pixel.c:62:1: note: init: stmt relevant? ivtmp_157 = ivtmp_158 - 1;
common/pixel.c:62:1: note: init: stmt relevant? if (ivtmp_157 != 0)
common/pixel.c:62:1: note: worklist: examine stmt: patt_150 = SAD_EXPR <_39, _43, i_sum_107>;
common/pixel.c:62:1: note: vect_is_simple_use: operand _39
common/pixel.c:62:1: note: def_stmt: _39 = *_38;
common/pixel.c:62:1: note: type of def: 3.
common/pixel.c:62:1: note: mark relevant 3, live 0.
common/pixel.c:62:1: note: vect_is_simple_use: operand _43
common/pixel.c:62:1: note: def_stmt: _43 = *_42;
common/pixel.c:62:1: note: type of def: 3.
common/pixel.c:62:1: note: mark relevant 3, live 0.
common/pixel.c:62:1: note: vect_is_simple_use: operand i_sum_107
common/pixel.c:62:1: note: def_stmt: i_sum_107 = PHI <i_sum_48(9), i_sum_109(13)>
common/pixel.c:62:1: note: type of def: 5.
common/pixel.c:62:1: note: mark relevant 3, live 0.
common/pixel.c:62:1: note: worklist: examine stmt: i_sum_107 = PHI <i_sum_48(9), i_sum_109(13)>
common/pixel.c:62:1: note: vect_is_simple_use: operand i_sum_48
common/pixel.c:62:1: note: def_stmt: i_sum_48 = _46 + i_sum_107;
common/pixel.c:62:1: note: type of def: 5.
common/pixel.c:62:1: note: reduc-stmt defining reduc-phi in the same nest.
common/pixel.c:62:1: note: vect_is_simple_use: operand i_sum_109
common/pixel.c:62:1: note: def_stmt: i_sum_109 = PHI <i_sum_166(12), 0(8)>
common/pixel.c:62:1: note: type of def: 2.
common/pixel.c:62:1: note: def_stmt is out of loop.
common/pixel.c:62:1: note: worklist: examine stmt: _43 = *_42;
common/pixel.c:62:1: note: worklist: examine stmt: _39 = *_38;
common/pixel.c:62:1: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _39 = *_38;
  stmt_b: _43 = *_42;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _39 = *_38;
  stmt_b: _39 = *_38;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_4)
  (chrec_b = {0B, +, 1}_4)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _43 = *_42;
  stmt_b: _43 = *_42;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_4)
  (chrec_b = {0B, +, 1}_4)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/pixel.c:62:1: note: === vect_determine_vectorization_factor ===
common/pixel.c:62:1: note: ==> examining phi: x_104 = PHI <x_49(9), 0(13)>

common/pixel.c:62:1: note: ==> examining phi: i_sum_107 = PHI <i_sum_48(9), i_sum_109(13)>

common/pixel.c:62:1: note: get vectype for scalar type:  int
common/pixel.c:62:1: note: vectype: vector(4) int
common/pixel.c:62:1: note: nunits = 4
common/pixel.c:62:1: note: ==> examining phi: ivtmp_158 = PHI <ivtmp_157(9), 8(13)>

common/pixel.c:62:1: note: ==> examining statement: # DEBUG x => x_104

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: # DEBUG i_sum => i_sum_107

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: _36 = (sizetype) x_104;

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: _38 = fenc_105 + _36;

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: _39 = *_38;

common/pixel.c:62:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:62:1: note: vectype: vector(16) unsigned char
common/pixel.c:62:1: note: nunits = 16
common/pixel.c:62:1: note: ==> examining statement: _40 = (int) _39;

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: _42 = pix1_106 + _36;

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: _43 = *_42;

common/pixel.c:62:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:62:1: note: vectype: vector(16) unsigned char
common/pixel.c:62:1: note: nunits = 16
common/pixel.c:62:1: note: ==> examining statement: _44 = (int) _43;

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: _45 = _40 - _44;

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: _46 = ABS_EXPR <_45>;

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: i_sum_48 = _46 + i_sum_107;

common/pixel.c:62:1: note: ==> examining pattern statement: patt_150 = SAD_EXPR <_39, _43, i_sum_107>;

common/pixel.c:62:1: note: get vectype for scalar type:  int
common/pixel.c:62:1: note: vectype: vector(4) int
common/pixel.c:62:1: note: nunits = 4
common/pixel.c:62:1: note: ==> examining statement: # DEBUG i_sum => i_sum_48

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: x_49 = x_104 + 1;

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: # DEBUG x => x_49

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: # DEBUG x => x_49

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: # DEBUG i_sum => i_sum_48

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: ivtmp_157 = ivtmp_158 - 1;

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: if (ivtmp_157 != 0)

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: vectorization factor = 16
common/pixel.c:62:1: note: === vect_analyze_data_refs_alignment ===
common/pixel.c:62:1: note: vect_compute_data_ref_alignment:
common/pixel.c:62:1: note: can't force alignment of ref: *_38
common/pixel.c:62:1: note: vect_compute_data_ref_alignment:
common/pixel.c:62:1: note: can't force alignment of ref: *_42
common/pixel.c:62:1: note: === vect_prune_runtime_alias_test_list ===
common/pixel.c:62:1: note: === vect_enhance_data_refs_alignment ===
common/pixel.c:62:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:62:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:62:1: note: vect_can_advance_ivs_p:
common/pixel.c:62:1: note: Analyze phi: x_104 = PHI <x_49(9), 0(13)>

common/pixel.c:62:1: note: Analyze phi: i_sum_107 = PHI <i_sum_48(9), i_sum_109(13)>

common/pixel.c:62:1: note: reduc phi. skip.
common/pixel.c:62:1: note: Analyze phi: ivtmp_158 = PHI <ivtmp_157(9), 8(13)>

common/pixel.c:62:1: note: Vectorizing an unaligned access.
common/pixel.c:62:1: note: Vectorizing an unaligned access.
common/pixel.c:62:1: note: === vect_analyze_slp ===
common/pixel.c:62:1: note: === vect_make_slp_decision ===
common/pixel.c:62:1: note: === vect_detect_hybrid_slp ===
common/pixel.c:62:1: note: === vect_analyze_loop_operations ===
common/pixel.c:62:1: note: examining phi: x_104 = PHI <x_49(9), 0(13)>

common/pixel.c:62:1: note: examining phi: i_sum_107 = PHI <i_sum_48(9), i_sum_109(13)>

common/pixel.c:62:1: note: examining phi: ivtmp_158 = PHI <ivtmp_157(9), 8(13)>

common/pixel.c:62:1: note: ==> examining statement: # DEBUG x => x_104
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: # DEBUG i_sum => i_sum_107
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: _36 = (sizetype) x_104;
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: _38 = fenc_105 + _36;
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: _39 = *_38;
common/pixel.c:62:1: note: vect_is_simple_use: operand *_38
common/pixel.c:62:1: note: not ssa-name.
common/pixel.c:62:1: note: use not simple.
common/pixel.c:62:1: note: vect_is_simple_use: operand *_38
common/pixel.c:62:1: note: not ssa-name.
common/pixel.c:62:1: note: use not simple.
common/pixel.c:62:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:62:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:62:1: note: ==> examining statement: _40 = (int) _39;
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: _42 = pix1_106 + _36;
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: _43 = *_42;
common/pixel.c:62:1: note: vect_is_simple_use: operand *_42
common/pixel.c:62:1: note: not ssa-name.
common/pixel.c:62:1: note: use not simple.
common/pixel.c:62:1: note: vect_is_simple_use: operand *_42
common/pixel.c:62:1: note: not ssa-name.
common/pixel.c:62:1: note: use not simple.
common/pixel.c:62:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:62:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:62:1: note: ==> examining statement: _44 = (int) _43;
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: _45 = _40 - _44;
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: _46 = ABS_EXPR <_45>;
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: i_sum_48 = _46 + i_sum_107;
common/pixel.c:62:1: note: ==> examining pattern statement: patt_150 = SAD_EXPR <_39, _43, i_sum_107>;
common/pixel.c:62:1: note: vect_is_simple_use: operand _39
common/pixel.c:62:1: note: def_stmt: _39 = *_38;
common/pixel.c:62:1: note: type of def: 3.
common/pixel.c:62:1: note: vect_is_simple_use: operand _43
common/pixel.c:62:1: note: def_stmt: _43 = *_42;
common/pixel.c:62:1: note: type of def: 3.
common/pixel.c:62:1: note: vect_is_simple_use: operand i_sum_107
common/pixel.c:62:1: note: def_stmt: i_sum_107 = PHI <i_sum_48(9), i_sum_109(13)>
common/pixel.c:62:1: note: type of def: 5.
common/pixel.c:62:1: note: detected reduction: i_sum_48 = _46 + i_sum_107;

common/pixel.c:62:1: note: reduc op not supported by target.
vect_model_reduction_cost: inside_cost = 1, prologue_cost = 1, epilogue_cost = 5 .
common/pixel.c:62:1: note: ==> examining statement: # DEBUG i_sum => i_sum_48
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: x_49 = x_104 + 1;
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: # DEBUG x => x_49
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: # DEBUG x => x_49
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: # DEBUG i_sum => i_sum_48
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: ivtmp_157 = ivtmp_158 - 1;
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: if (ivtmp_157 != 0)
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: vectorization_factor = 16, niters = 8
common/pixel.c:62:1: note: not vectorized: iteration count too small.
common/pixel.c:62:1: note: not vectorized: iteration count smaller than vectorization factor.
common/pixel.c:62:1: note: bad operation or unsupported loop bound.

Analyzing loop at common/pixel.c:62
common/pixel.c:62:1: note: ===== analyze_loop_nest =====
common/pixel.c:62:1: note: === vect_analyze_loop_form ===
common/pixel.c:62:1: note: ===== analyze_loop_nest_1 =====
common/pixel.c:62:1: note: === vect_analyze_loop_form ===
common/pixel.c:62:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 6
  exit condition [7, + , 4294967295] != 0
  bounds on difference of bases: -7 ... -7
  result:
    # of iterations 7, bounded by 7
common/pixel.c:62:1: note: Considering outer-loop vectorization.
common/pixel.c:62:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 5
  exit condition [7, + , 4294967295] != 0
  bounds on difference of bases: -7 ... -7
  result:
    # of iterations 7, bounded by 7
common/pixel.c:62:1: note: === vect_analyze_data_refs ===
Creating dr for *_60
analyze_innermost: success.
	base_address: fenc_111
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_2(D)
	Access function 0: {{0B, +, 16}_5, +, 1}_6
Creating dr for *_64
analyze_innermost: success.
	base_address: pix0_112
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix0_3(D)
	Access function 0: {{0B, +, pretmp_169}_5, +, 1}_6
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:62:1: note: analyze in outer-loop: *fenc_111
common/pixel.c:62:1: note: 	outer base_address: fenc_2(D)
	outer offset from base address: 0
	outer constant offset from base address: 0
	outer step: 16
	outer aligned to: 128
common/pixel.c:62:1: note: got vectype for stmt: _61 = *_60;
vector(16) unsigned char
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:62:1: note: analyze in outer-loop: *pix0_112
common/pixel.c:62:1: note: failed: evolution of base is not affine.
common/pixel.c:62:1: note: bad data references.

Analyzing loop at common/pixel.c:62
common/pixel.c:62:1: note: ===== analyze_loop_nest =====
common/pixel.c:62:1: note: === vect_analyze_loop_form ===
common/pixel.c:62:1: note: === get_loop_niters ===
common/pixel.c:62:1: note: === vect_analyze_data_refs ===
Creating dr for *_60
analyze_innermost: success.
	base_address: fenc_111
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_111
	Access function 0: {0B, +, 1}_6
Creating dr for *_64
analyze_innermost: success.
	base_address: pix0_112
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix0_112
	Access function 0: {0B, +, 1}_6
common/pixel.c:62:1: note: got vectype for stmt: _61 = *_60;
vector(16) unsigned char
common/pixel.c:62:1: note: got vectype for stmt: _65 = *_64;
vector(16) unsigned char
common/pixel.c:62:1: note: === vect_analyze_scalar_cycles ===
common/pixel.c:62:1: note: Analyze phi: x_110 = PHI <x_71(3), 0(7)>

common/pixel.c:62:1: note: Access function of PHI: {0, +, 1}_6
common/pixel.c:62:1: note: step: 1,  init: 0
common/pixel.c:62:1: note: Detected induction.
common/pixel.c:62:1: note: Analyze phi: i_sum_113 = PHI <i_sum_70(3), i_sum_115(7)>

common/pixel.c:62:1: note: Access function of PHI: {i_sum_115, +, _68}_6
common/pixel.c:62:1: note: step: _68,  init: i_sum_115
common/pixel.c:62:1: note: step unknown.
common/pixel.c:62:1: note: Analyze phi: ivtmp_154 = PHI <ivtmp_153(3), 8(7)>

common/pixel.c:62:1: note: Access function of PHI: {8, +, 4294967295}_6
common/pixel.c:62:1: note: step: 4294967295,  init: 8
common/pixel.c:62:1: note: Detected induction.
common/pixel.c:62:1: note: Analyze phi: i_sum_113 = PHI <i_sum_70(3), i_sum_115(7)>

common/pixel.c:62:1: note: detected reduction: i_sum_70 = _68 + i_sum_113;

common/pixel.c:62:1: note: Detected reduction.
common/pixel.c:62:1: note: === vect_pattern_recog ===
common/pixel.c:62:1: note: vect_is_simple_use: operand _68
common/pixel.c:62:1: note: def_stmt: _68 = ABS_EXPR <_67>;
common/pixel.c:62:1: note: type of def: 3.
common/pixel.c:62:1: note: vect_is_simple_use: operand _68
common/pixel.c:62:1: note: def_stmt: _68 = ABS_EXPR <_67>;
common/pixel.c:62:1: note: type of def: 3.
common/pixel.c:62:1: note: vect_is_simple_use: operand _68
common/pixel.c:62:1: note: def_stmt: _68 = ABS_EXPR <_67>;
common/pixel.c:62:1: note: type of def: 3.
common/pixel.c:62:1: note: vect_is_simple_use: operand _62
common/pixel.c:62:1: note: def_stmt: _62 = (int) _61;
common/pixel.c:62:1: note: type of def: 3.
common/pixel.c:62:1: note: vect_is_simple_use: operand _61
common/pixel.c:62:1: note: def_stmt: _61 = *_60;
common/pixel.c:62:1: note: type of def: 3.
common/pixel.c:62:1: note: vect_is_simple_use: operand _66
common/pixel.c:62:1: note: def_stmt: _66 = (int) _65;
common/pixel.c:62:1: note: type of def: 3.
common/pixel.c:62:1: note: vect_is_simple_use: operand _65
common/pixel.c:62:1: note: def_stmt: _65 = *_64;
common/pixel.c:62:1: note: type of def: 3.
common/pixel.c:62:1: note: vect_recog_sad_pattern: detected: patt_150 = SAD_EXPR <_61, _65, i_sum_113>;

common/pixel.c:62:1: note: pattern recognized: patt_150 = SAD_EXPR <_61, _65, i_sum_113>;
common/pixel.c:62:1: note: === vect_analyze_data_ref_accesses ===
common/pixel.c:62:1: note: === vect_mark_stmts_to_be_vectorized ===
common/pixel.c:62:1: note: init: phi relevant? x_110 = PHI <x_71(3), 0(7)>
common/pixel.c:62:1: note: init: phi relevant? i_sum_113 = PHI <i_sum_70(3), i_sum_115(7)>
common/pixel.c:62:1: note: init: phi relevant? ivtmp_154 = PHI <ivtmp_153(3), 8(7)>
common/pixel.c:62:1: note: init: stmt relevant? # DEBUG x => x_110
common/pixel.c:62:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_113
common/pixel.c:62:1: note: init: stmt relevant? _58 = (sizetype) x_110;
common/pixel.c:62:1: note: init: stmt relevant? _60 = fenc_111 + _58;
common/pixel.c:62:1: note: init: stmt relevant? _61 = *_60;
common/pixel.c:62:1: note: init: stmt relevant? _62 = (int) _61;
common/pixel.c:62:1: note: init: stmt relevant? _64 = pix0_112 + _58;
common/pixel.c:62:1: note: init: stmt relevant? _65 = *_64;
common/pixel.c:62:1: note: init: stmt relevant? _66 = (int) _65;
common/pixel.c:62:1: note: init: stmt relevant? _67 = _62 - _66;
common/pixel.c:62:1: note: init: stmt relevant? _68 = ABS_EXPR <_67>;
common/pixel.c:62:1: note: init: stmt relevant? i_sum_70 = _68 + i_sum_113;
common/pixel.c:62:1: note: vec_stmt_relevant_p: used out of loop.
common/pixel.c:62:1: note: mark relevant 0, live 1.
common/pixel.c:62:1: note: last stmt in pattern. don't mark relevant/live.
common/pixel.c:62:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_70
common/pixel.c:62:1: note: init: stmt relevant? x_71 = x_110 + 1;
common/pixel.c:62:1: note: init: stmt relevant? # DEBUG x => x_71
common/pixel.c:62:1: note: init: stmt relevant? # DEBUG x => x_71
common/pixel.c:62:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_70
common/pixel.c:62:1: note: init: stmt relevant? ivtmp_153 = ivtmp_154 - 1;
common/pixel.c:62:1: note: init: stmt relevant? if (ivtmp_153 != 0)
common/pixel.c:62:1: note: worklist: examine stmt: patt_150 = SAD_EXPR <_61, _65, i_sum_113>;
common/pixel.c:62:1: note: vect_is_simple_use: operand _61
common/pixel.c:62:1: note: def_stmt: _61 = *_60;
common/pixel.c:62:1: note: type of def: 3.
common/pixel.c:62:1: note: mark relevant 3, live 0.
common/pixel.c:62:1: note: vect_is_simple_use: operand _65
common/pixel.c:62:1: note: def_stmt: _65 = *_64;
common/pixel.c:62:1: note: type of def: 3.
common/pixel.c:62:1: note: mark relevant 3, live 0.
common/pixel.c:62:1: note: vect_is_simple_use: operand i_sum_113
common/pixel.c:62:1: note: def_stmt: i_sum_113 = PHI <i_sum_70(3), i_sum_115(7)>
common/pixel.c:62:1: note: type of def: 5.
common/pixel.c:62:1: note: mark relevant 3, live 0.
common/pixel.c:62:1: note: worklist: examine stmt: i_sum_113 = PHI <i_sum_70(3), i_sum_115(7)>
common/pixel.c:62:1: note: vect_is_simple_use: operand i_sum_70
common/pixel.c:62:1: note: def_stmt: i_sum_70 = _68 + i_sum_113;
common/pixel.c:62:1: note: type of def: 5.
common/pixel.c:62:1: note: reduc-stmt defining reduc-phi in the same nest.
common/pixel.c:62:1: note: vect_is_simple_use: operand i_sum_115
common/pixel.c:62:1: note: def_stmt: i_sum_115 = PHI <i_sum_164(6), 0(2)>
common/pixel.c:62:1: note: type of def: 2.
common/pixel.c:62:1: note: def_stmt is out of loop.
common/pixel.c:62:1: note: worklist: examine stmt: _65 = *_64;
common/pixel.c:62:1: note: worklist: examine stmt: _61 = *_60;
common/pixel.c:62:1: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _61 = *_60;
  stmt_b: _65 = *_64;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _61 = *_60;
  stmt_b: _61 = *_60;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_6)
  (chrec_b = {0B, +, 1}_6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _65 = *_64;
  stmt_b: _65 = *_64;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_6)
  (chrec_b = {0B, +, 1}_6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/pixel.c:62:1: note: === vect_determine_vectorization_factor ===
common/pixel.c:62:1: note: ==> examining phi: x_110 = PHI <x_71(3), 0(7)>

common/pixel.c:62:1: note: ==> examining phi: i_sum_113 = PHI <i_sum_70(3), i_sum_115(7)>

common/pixel.c:62:1: note: get vectype for scalar type:  int
common/pixel.c:62:1: note: vectype: vector(4) int
common/pixel.c:62:1: note: nunits = 4
common/pixel.c:62:1: note: ==> examining phi: ivtmp_154 = PHI <ivtmp_153(3), 8(7)>

common/pixel.c:62:1: note: ==> examining statement: # DEBUG x => x_110

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: # DEBUG i_sum => i_sum_113

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: _58 = (sizetype) x_110;

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: _60 = fenc_111 + _58;

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: _61 = *_60;

common/pixel.c:62:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:62:1: note: vectype: vector(16) unsigned char
common/pixel.c:62:1: note: nunits = 16
common/pixel.c:62:1: note: ==> examining statement: _62 = (int) _61;

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: _64 = pix0_112 + _58;

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: _65 = *_64;

common/pixel.c:62:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:62:1: note: vectype: vector(16) unsigned char
common/pixel.c:62:1: note: nunits = 16
common/pixel.c:62:1: note: ==> examining statement: _66 = (int) _65;

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: _67 = _62 - _66;

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: _68 = ABS_EXPR <_67>;

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: i_sum_70 = _68 + i_sum_113;

common/pixel.c:62:1: note: ==> examining pattern statement: patt_150 = SAD_EXPR <_61, _65, i_sum_113>;

common/pixel.c:62:1: note: get vectype for scalar type:  int
common/pixel.c:62:1: note: vectype: vector(4) int
common/pixel.c:62:1: note: nunits = 4
common/pixel.c:62:1: note: ==> examining statement: # DEBUG i_sum => i_sum_70

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: x_71 = x_110 + 1;

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: # DEBUG x => x_71

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: # DEBUG x => x_71

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: # DEBUG i_sum => i_sum_70

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: ivtmp_153 = ivtmp_154 - 1;

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: if (ivtmp_153 != 0)

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: vectorization factor = 16
common/pixel.c:62:1: note: === vect_analyze_data_refs_alignment ===
common/pixel.c:62:1: note: vect_compute_data_ref_alignment:
common/pixel.c:62:1: note: can't force alignment of ref: *_60
common/pixel.c:62:1: note: vect_compute_data_ref_alignment:
common/pixel.c:62:1: note: can't force alignment of ref: *_64
common/pixel.c:62:1: note: === vect_prune_runtime_alias_test_list ===
common/pixel.c:62:1: note: === vect_enhance_data_refs_alignment ===
common/pixel.c:62:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:62:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:62:1: note: vect_can_advance_ivs_p:
common/pixel.c:62:1: note: Analyze phi: x_110 = PHI <x_71(3), 0(7)>

common/pixel.c:62:1: note: Analyze phi: i_sum_113 = PHI <i_sum_70(3), i_sum_115(7)>

common/pixel.c:62:1: note: reduc phi. skip.
common/pixel.c:62:1: note: Analyze phi: ivtmp_154 = PHI <ivtmp_153(3), 8(7)>

common/pixel.c:62:1: note: Vectorizing an unaligned access.
common/pixel.c:62:1: note: Vectorizing an unaligned access.
common/pixel.c:62:1: note: === vect_analyze_slp ===
common/pixel.c:62:1: note: === vect_make_slp_decision ===
common/pixel.c:62:1: note: === vect_detect_hybrid_slp ===
common/pixel.c:62:1: note: === vect_analyze_loop_operations ===
common/pixel.c:62:1: note: examining phi: x_110 = PHI <x_71(3), 0(7)>

common/pixel.c:62:1: note: examining phi: i_sum_113 = PHI <i_sum_70(3), i_sum_115(7)>

common/pixel.c:62:1: note: examining phi: ivtmp_154 = PHI <ivtmp_153(3), 8(7)>

common/pixel.c:62:1: note: ==> examining statement: # DEBUG x => x_110
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: # DEBUG i_sum => i_sum_113
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: _58 = (sizetype) x_110;
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: _60 = fenc_111 + _58;
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: _61 = *_60;
common/pixel.c:62:1: note: vect_is_simple_use: operand *_60
common/pixel.c:62:1: note: not ssa-name.
common/pixel.c:62:1: note: use not simple.
common/pixel.c:62:1: note: vect_is_simple_use: operand *_60
common/pixel.c:62:1: note: not ssa-name.
common/pixel.c:62:1: note: use not simple.
common/pixel.c:62:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:62:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:62:1: note: ==> examining statement: _62 = (int) _61;
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: _64 = pix0_112 + _58;
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: _65 = *_64;
common/pixel.c:62:1: note: vect_is_simple_use: operand *_64
common/pixel.c:62:1: note: not ssa-name.
common/pixel.c:62:1: note: use not simple.
common/pixel.c:62:1: note: vect_is_simple_use: operand *_64
common/pixel.c:62:1: note: not ssa-name.
common/pixel.c:62:1: note: use not simple.
common/pixel.c:62:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:62:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:62:1: note: ==> examining statement: _66 = (int) _65;
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: _67 = _62 - _66;
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: _68 = ABS_EXPR <_67>;
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: i_sum_70 = _68 + i_sum_113;
common/pixel.c:62:1: note: ==> examining pattern statement: patt_150 = SAD_EXPR <_61, _65, i_sum_113>;
common/pixel.c:62:1: note: vect_is_simple_use: operand _61
common/pixel.c:62:1: note: def_stmt: _61 = *_60;
common/pixel.c:62:1: note: type of def: 3.
common/pixel.c:62:1: note: vect_is_simple_use: operand _65
common/pixel.c:62:1: note: def_stmt: _65 = *_64;
common/pixel.c:62:1: note: type of def: 3.
common/pixel.c:62:1: note: vect_is_simple_use: operand i_sum_113
common/pixel.c:62:1: note: def_stmt: i_sum_113 = PHI <i_sum_70(3), i_sum_115(7)>
common/pixel.c:62:1: note: type of def: 5.
common/pixel.c:62:1: note: detected reduction: i_sum_70 = _68 + i_sum_113;

common/pixel.c:62:1: note: reduc op not supported by target.
vect_model_reduction_cost: inside_cost = 1, prologue_cost = 1, epilogue_cost = 5 .
common/pixel.c:62:1: note: ==> examining statement: # DEBUG i_sum => i_sum_70
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: x_71 = x_110 + 1;
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: # DEBUG x => x_71
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: # DEBUG x => x_71
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: # DEBUG i_sum => i_sum_70
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: ivtmp_153 = ivtmp_154 - 1;
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: if (ivtmp_153 != 0)
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: vectorization_factor = 16, niters = 8
common/pixel.c:62:1: note: not vectorized: iteration count too small.
common/pixel.c:62:1: note: not vectorized: iteration count smaller than vectorization factor.
common/pixel.c:62:1: note: bad operation or unsupported loop bound.
common/pixel.c:386:1: note: vectorized 0 loops in function.
x264_pixel_sad_x3_8x8 (uint8_t * fenc, uint8_t * pix0, uint8_t * pix1, uint8_t * pix2, int i_stride, int * scores)
{
  int i_sum;
  int x;
  int y;
  int i_sum;
  int x;
  int y;
  int i_sum;
  int x;
  int y;
  sizetype _10;
  uint8_t * _16;
  unsigned char _17;
  int _18;
  uint8_t * _20;
  unsigned char _21;
  int _22;
  int _23;
  int _24;
  sizetype _36;
  uint8_t * _38;
  unsigned char _39;
  int _40;
  uint8_t * _42;
  unsigned char _43;
  int _44;
  int _45;
  int _46;
  sizetype _58;
  uint8_t * _60;
  unsigned char _61;
  int _62;
  uint8_t * _64;
  unsigned char _65;
  int _66;
  int _67;
  int _68;
  unsigned int ivtmp_151;
  unsigned int ivtmp_152;
  unsigned int ivtmp_153;
  unsigned int ivtmp_154;
  unsigned int ivtmp_155;
  unsigned int ivtmp_156;
  unsigned int ivtmp_157;
  unsigned int ivtmp_158;
  unsigned int ivtmp_159;
  unsigned int ivtmp_160;
  unsigned int ivtmp_161;
  unsigned int ivtmp_162;
  sizetype pretmp_169;

  <bb 2>:
  # DEBUG pix1 => fenc_2(D)
  # DEBUG i_stride_pix1 => 16
  # DEBUG pix2 => pix0_3(D)
  # DEBUG i_stride_pix2 => i_stride_4(D)
  # DEBUG i_sum => 0
  # DEBUG y => 0
  # DEBUG y => 0
  # DEBUG i_sum => 0
  # DEBUG pix2 => pix0_3(D)
  # DEBUG pix1 => fenc_2(D)
  pretmp_169 = (sizetype) i_stride_4(D);
  goto <bb 7>;

  <bb 3>:

  <bb 4>:
  # x_110 = PHI <x_71(3), 0(7)>
  # i_sum_113 = PHI <i_sum_70(3), i_sum_115(7)>
  # ivtmp_154 = PHI <ivtmp_153(3), 8(7)>
  # DEBUG x => x_110
  # DEBUG i_sum => i_sum_113
  _58 = (sizetype) x_110;
  _60 = fenc_111 + _58;
  _61 = *_60;
  _62 = (int) _61;
  _64 = pix0_112 + _58;
  _65 = *_64;
  _66 = (int) _65;
  _67 = _62 - _66;
  _68 = ABS_EXPR <_67>;
  i_sum_70 = _68 + i_sum_113;
  # DEBUG i_sum => i_sum_70
  x_71 = x_110 + 1;
  # DEBUG x => x_71
  # DEBUG x => x_71
  # DEBUG i_sum => i_sum_70
  ivtmp_153 = ivtmp_154 - 1;
  if (ivtmp_153 != 0)
    goto <bb 3>;
  else
    goto <bb 5>;

  <bb 5>:
  # i_sum_164 = PHI <i_sum_70(4)>
  fenc_72 = fenc_111 + 16;
  # DEBUG pix1 => fenc_72
  pix0_74 = pix0_112 + pretmp_169;
  # DEBUG pix2 => pix0_74
  y_76 = y_114 + 1;
  # DEBUG y => y_76
  # DEBUG y => y_76
  # DEBUG i_sum => i_sum_164
  # DEBUG pix2 => pix0_74
  # DEBUG pix1 => fenc_72
  ivtmp_151 = ivtmp_152 - 1;
  if (ivtmp_151 != 0)
    goto <bb 6>;
  else
    goto <bb 8>;

  <bb 6>:

  <bb 7>:
  # fenc_111 = PHI <fenc_72(6), fenc_2(D)(2)>
  # pix0_112 = PHI <pix0_74(6), pix0_3(D)(2)>
  # y_114 = PHI <y_76(6), 0(2)>
  # i_sum_115 = PHI <i_sum_164(6), 0(2)>
  # ivtmp_152 = PHI <ivtmp_151(6), 8(2)>
  # DEBUG y => y_114
  # DEBUG i_sum => i_sum_115
  # DEBUG pix2 => pix0_112
  # DEBUG pix1 => fenc_111
  # DEBUG x => 0
  # DEBUG i_sum => i_sum_115
  goto <bb 4>;

  <bb 8>:
  # i_sum_163 = PHI <i_sum_164(5)>
  # DEBUG pix1 => NULL
  # DEBUG i_stride_pix1 => NULL
  # DEBUG pix2 => NULL
  # DEBUG i_stride_pix2 => NULL
  # DEBUG y => NULL
  # DEBUG x => NULL
  # DEBUG i_sum => NULL
  *scores_6(D) = i_sum_163;
  # DEBUG pix1 => fenc_2(D)
  # DEBUG i_stride_pix1 => 16
  # DEBUG pix2 => pix1_9(D)
  # DEBUG i_stride_pix2 => i_stride_4(D)
  # DEBUG y => 0
  # DEBUG i_sum => 0
  # DEBUG pix2 => pix1_9(D)
  # DEBUG pix1 => fenc_2(D)
  goto <bb 13>;

  <bb 9>:

  <bb 10>:
  # x_104 = PHI <x_49(9), 0(13)>
  # i_sum_107 = PHI <i_sum_48(9), i_sum_109(13)>
  # ivtmp_158 = PHI <ivtmp_157(9), 8(13)>
  # DEBUG x => x_104
  # DEBUG i_sum => i_sum_107
  _36 = (sizetype) x_104;
  _38 = fenc_105 + _36;
  _39 = *_38;
  _40 = (int) _39;
  _42 = pix1_106 + _36;
  _43 = *_42;
  _44 = (int) _43;
  _45 = _40 - _44;
  _46 = ABS_EXPR <_45>;
  i_sum_48 = _46 + i_sum_107;
  # DEBUG i_sum => i_sum_48
  x_49 = x_104 + 1;
  # DEBUG x => x_49
  # DEBUG x => x_49
  # DEBUG i_sum => i_sum_48
  ivtmp_157 = ivtmp_158 - 1;
  if (ivtmp_157 != 0)
    goto <bb 9>;
  else
    goto <bb 11>;

  <bb 11>:
  # i_sum_166 = PHI <i_sum_48(10)>
  fenc_50 = fenc_105 + 16;
  # DEBUG pix1 => fenc_50
  pix1_52 = pix1_106 + pretmp_169;
  # DEBUG pix2 => pix1_52
  y_54 = y_108 + 1;
  # DEBUG y => y_54
  # DEBUG y => y_54
  # DEBUG i_sum => i_sum_166
  # DEBUG pix2 => pix1_52
  # DEBUG pix1 => fenc_50
  ivtmp_155 = ivtmp_156 - 1;
  if (ivtmp_155 != 0)
    goto <bb 12>;
  else
    goto <bb 14>;

  <bb 12>:

  <bb 13>:
  # fenc_105 = PHI <fenc_50(12), fenc_2(D)(8)>
  # pix1_106 = PHI <pix1_52(12), pix1_9(D)(8)>
  # y_108 = PHI <y_54(12), 0(8)>
  # i_sum_109 = PHI <i_sum_166(12), 0(8)>
  # ivtmp_156 = PHI <ivtmp_155(12), 8(8)>
  # DEBUG y => y_108
  # DEBUG i_sum => i_sum_109
  # DEBUG pix2 => pix1_106
  # DEBUG pix1 => fenc_105
  # DEBUG x => 0
  # DEBUG i_sum => i_sum_109
  goto <bb 10>;

  <bb 14>:
  # i_sum_165 = PHI <i_sum_166(11)>
  # DEBUG pix1 => NULL
  # DEBUG i_stride_pix1 => NULL
  # DEBUG pix2 => NULL
  # DEBUG i_stride_pix2 => NULL
  # DEBUG y => NULL
  # DEBUG x => NULL
  # DEBUG i_sum => NULL
  MEM[(int *)scores_6(D) + 4B] = i_sum_165;
  # DEBUG pix1 => fenc_2(D)
  # DEBUG i_stride_pix1 => 16
  # DEBUG pix2 => pix2_13(D)
  # DEBUG i_stride_pix2 => i_stride_4(D)
  # DEBUG y => 0
  # DEBUG i_sum => 0
  # DEBUG pix2 => pix2_13(D)
  # DEBUG pix1 => fenc_2(D)
  goto <bb 19>;

  <bb 15>:

  <bb 16>:
  # x_8 = PHI <x_27(15), 0(19)>
  # i_sum_78 = PHI <i_sum_26(15), i_sum_12(19)>
  # ivtmp_162 = PHI <ivtmp_161(15), 8(19)>
  # DEBUG x => x_8
  # DEBUG i_sum => i_sum_78
  _10 = (sizetype) x_8;
  _16 = fenc_34 + _10;
  _17 = *_16;
  _18 = (int) _17;
  _20 = pix2_79 + _10;
  _21 = *_20;
  _22 = (int) _21;
  _23 = _18 - _22;
  _24 = ABS_EXPR <_23>;
  i_sum_26 = _24 + i_sum_78;
  # DEBUG i_sum => i_sum_26
  x_27 = x_8 + 1;
  # DEBUG x => x_27
  # DEBUG x => x_27
  # DEBUG i_sum => i_sum_26
  ivtmp_161 = ivtmp_162 - 1;
  if (ivtmp_161 != 0)
    goto <bb 15>;
  else
    goto <bb 17>;

  <bb 17>:
  # i_sum_168 = PHI <i_sum_26(16)>
  fenc_28 = fenc_34 + 16;
  # DEBUG pix1 => fenc_28
  pix2_30 = pix2_79 + pretmp_169;
  # DEBUG pix2 => pix2_30
  y_32 = y_56 + 1;
  # DEBUG y => y_32
  # DEBUG y => y_32
  # DEBUG i_sum => i_sum_168
  # DEBUG pix2 => pix2_30
  # DEBUG pix1 => fenc_28
  ivtmp_159 = ivtmp_160 - 1;
  if (ivtmp_159 != 0)
    goto <bb 18>;
  else
    goto <bb 20>;

  <bb 18>:

  <bb 19>:
  # fenc_34 = PHI <fenc_28(18), fenc_2(D)(14)>
  # pix2_79 = PHI <pix2_30(18), pix2_13(D)(14)>
  # y_56 = PHI <y_32(18), 0(14)>
  # i_sum_12 = PHI <i_sum_168(18), 0(14)>
  # ivtmp_160 = PHI <ivtmp_159(18), 8(14)>
  # DEBUG y => y_56
  # DEBUG i_sum => i_sum_12
  # DEBUG pix2 => pix2_79
  # DEBUG pix1 => fenc_34
  # DEBUG x => 0
  # DEBUG i_sum => i_sum_12
  goto <bb 16>;

  <bb 20>:
  # i_sum_167 = PHI <i_sum_168(17)>
  # DEBUG pix1 => NULL
  # DEBUG i_stride_pix1 => NULL
  # DEBUG pix2 => NULL
  # DEBUG i_stride_pix2 => NULL
  # DEBUG y => NULL
  # DEBUG x => NULL
  # DEBUG i_sum => NULL
  MEM[(int *)scores_6(D) + 8B] = i_sum_167;
  return;

}



;; Function x264_pixel_sad_x4_8x8 (x264_pixel_sad_x4_8x8, funcdef_no=157, decl_uid=8077, cgraph_uid=157, symbol_order=200)


Analyzing loop at common/pixel.c:62
common/pixel.c:62:1: note: ===== analyze_loop_nest =====
common/pixel.c:62:1: note: === vect_analyze_loop_form ===
common/pixel.c:62:1: note: ===== analyze_loop_nest_1 =====
common/pixel.c:62:1: note: === vect_analyze_loop_form ===
common/pixel.c:62:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 2
  exit condition [7, + , 4294967295] != 0
  bounds on difference of bases: -7 ... -7
  result:
    # of iterations 7, bounded by 7
common/pixel.c:62:1: note: Considering outer-loop vectorization.
common/pixel.c:62:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 1
  exit condition [7, + , 4294967295] != 0
  bounds on difference of bases: -7 ... -7
  result:
    # of iterations 7, bounded by 7
common/pixel.c:62:1: note: === vect_analyze_data_refs ===
Creating dr for *_5
analyze_innermost: success.
	base_address: fenc_16
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_2(D)
	Access function 0: {{0B, +, 16}_1, +, 1}_2
Creating dr for *_23
analyze_innermost: success.
	base_address: pix3_103
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix3_17(D)
	Access function 0: {{0B, +, pretmp_223}_1, +, 1}_2
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:62:1: note: analyze in outer-loop: *fenc_16
common/pixel.c:62:1: note: 	outer base_address: fenc_2(D)
	outer offset from base address: 0
	outer constant offset from base address: 0
	outer step: 16
	outer aligned to: 128
common/pixel.c:62:1: note: got vectype for stmt: _20 = *_5;
vector(16) unsigned char
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:62:1: note: analyze in outer-loop: *pix3_103
common/pixel.c:62:1: note: failed: evolution of base is not affine.
common/pixel.c:62:1: note: bad data references.

Analyzing loop at common/pixel.c:62
common/pixel.c:62:1: note: ===== analyze_loop_nest =====
common/pixel.c:62:1: note: === vect_analyze_loop_form ===
common/pixel.c:62:1: note: === get_loop_niters ===
common/pixel.c:62:1: note: === vect_analyze_data_refs ===
Creating dr for *_5
analyze_innermost: success.
	base_address: fenc_16
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_16
	Access function 0: {0B, +, 1}_2
Creating dr for *_23
analyze_innermost: success.
	base_address: pix3_103
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix3_103
	Access function 0: {0B, +, 1}_2
common/pixel.c:62:1: note: got vectype for stmt: _20 = *_5;
vector(16) unsigned char
common/pixel.c:62:1: note: got vectype for stmt: _24 = *_23;
vector(16) unsigned char
common/pixel.c:62:1: note: === vect_analyze_scalar_cycles ===
common/pixel.c:62:1: note: Analyze phi: x_8 = PHI <x_30(21), 0(25)>

common/pixel.c:62:1: note: Access function of PHI: {0, +, 1}_2
common/pixel.c:62:1: note: step: 1,  init: 0
common/pixel.c:62:1: note: Detected induction.
common/pixel.c:62:1: note: Analyze phi: i_sum_59 = PHI <i_sum_29(21), i_sum_104(25)>

common/pixel.c:62:1: note: Access function of PHI: {i_sum_104, +, _27}_2
common/pixel.c:62:1: note: step: _27,  init: i_sum_104
common/pixel.c:62:1: note: step unknown.
common/pixel.c:62:1: note: Analyze phi: ivtmp_214 = PHI <ivtmp_213(21), 8(25)>

common/pixel.c:62:1: note: Access function of PHI: {8, +, 4294967295}_2
common/pixel.c:62:1: note: step: 4294967295,  init: 8
common/pixel.c:62:1: note: Detected induction.
common/pixel.c:62:1: note: Analyze phi: i_sum_59 = PHI <i_sum_29(21), i_sum_104(25)>

common/pixel.c:62:1: note: detected reduction: i_sum_29 = _27 + i_sum_59;

common/pixel.c:62:1: note: Detected reduction.
common/pixel.c:62:1: note: === vect_pattern_recog ===
common/pixel.c:62:1: note: vect_is_simple_use: operand _27
common/pixel.c:62:1: note: def_stmt: _27 = ABS_EXPR <_26>;
common/pixel.c:62:1: note: type of def: 3.
common/pixel.c:62:1: note: vect_is_simple_use: operand _27
common/pixel.c:62:1: note: def_stmt: _27 = ABS_EXPR <_26>;
common/pixel.c:62:1: note: type of def: 3.
common/pixel.c:62:1: note: vect_is_simple_use: operand _27
common/pixel.c:62:1: note: def_stmt: _27 = ABS_EXPR <_26>;
common/pixel.c:62:1: note: type of def: 3.
common/pixel.c:62:1: note: vect_is_simple_use: operand _21
common/pixel.c:62:1: note: def_stmt: _21 = (int) _20;
common/pixel.c:62:1: note: type of def: 3.
common/pixel.c:62:1: note: vect_is_simple_use: operand _20
common/pixel.c:62:1: note: def_stmt: _20 = *_5;
common/pixel.c:62:1: note: type of def: 3.
common/pixel.c:62:1: note: vect_is_simple_use: operand _25
common/pixel.c:62:1: note: def_stmt: _25 = (int) _24;
common/pixel.c:62:1: note: type of def: 3.
common/pixel.c:62:1: note: vect_is_simple_use: operand _24
common/pixel.c:62:1: note: def_stmt: _24 = *_23;
common/pixel.c:62:1: note: type of def: 3.
common/pixel.c:62:1: note: vect_recog_sad_pattern: detected: patt_198 = SAD_EXPR <_20, _24, i_sum_59>;

common/pixel.c:62:1: note: pattern recognized: patt_198 = SAD_EXPR <_20, _24, i_sum_59>;
common/pixel.c:62:1: note: === vect_analyze_data_ref_accesses ===
common/pixel.c:62:1: note: === vect_mark_stmts_to_be_vectorized ===
common/pixel.c:62:1: note: init: phi relevant? x_8 = PHI <x_30(21), 0(25)>
common/pixel.c:62:1: note: init: phi relevant? i_sum_59 = PHI <i_sum_29(21), i_sum_104(25)>
common/pixel.c:62:1: note: init: phi relevant? ivtmp_214 = PHI <ivtmp_213(21), 8(25)>
common/pixel.c:62:1: note: init: stmt relevant? # DEBUG x => x_8
common/pixel.c:62:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_59
common/pixel.c:62:1: note: init: stmt relevant? _14 = (sizetype) x_8;
common/pixel.c:62:1: note: init: stmt relevant? _5 = fenc_16 + _14;
common/pixel.c:62:1: note: init: stmt relevant? _20 = *_5;
common/pixel.c:62:1: note: init: stmt relevant? _21 = (int) _20;
common/pixel.c:62:1: note: init: stmt relevant? _23 = pix3_103 + _14;
common/pixel.c:62:1: note: init: stmt relevant? _24 = *_23;
common/pixel.c:62:1: note: init: stmt relevant? _25 = (int) _24;
common/pixel.c:62:1: note: init: stmt relevant? _26 = _21 - _25;
common/pixel.c:62:1: note: init: stmt relevant? _27 = ABS_EXPR <_26>;
common/pixel.c:62:1: note: init: stmt relevant? i_sum_29 = _27 + i_sum_59;
common/pixel.c:62:1: note: vec_stmt_relevant_p: used out of loop.
common/pixel.c:62:1: note: mark relevant 0, live 1.
common/pixel.c:62:1: note: last stmt in pattern. don't mark relevant/live.
common/pixel.c:62:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_29
common/pixel.c:62:1: note: init: stmt relevant? x_30 = x_8 + 1;
common/pixel.c:62:1: note: init: stmt relevant? # DEBUG x => x_30
common/pixel.c:62:1: note: init: stmt relevant? # DEBUG x => x_30
common/pixel.c:62:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_29
common/pixel.c:62:1: note: init: stmt relevant? ivtmp_213 = ivtmp_214 - 1;
common/pixel.c:62:1: note: init: stmt relevant? if (ivtmp_213 != 0)
common/pixel.c:62:1: note: worklist: examine stmt: patt_198 = SAD_EXPR <_20, _24, i_sum_59>;
common/pixel.c:62:1: note: vect_is_simple_use: operand _20
common/pixel.c:62:1: note: def_stmt: _20 = *_5;
common/pixel.c:62:1: note: type of def: 3.
common/pixel.c:62:1: note: mark relevant 3, live 0.
common/pixel.c:62:1: note: vect_is_simple_use: operand _24
common/pixel.c:62:1: note: def_stmt: _24 = *_23;
common/pixel.c:62:1: note: type of def: 3.
common/pixel.c:62:1: note: mark relevant 3, live 0.
common/pixel.c:62:1: note: vect_is_simple_use: operand i_sum_59
common/pixel.c:62:1: note: def_stmt: i_sum_59 = PHI <i_sum_29(21), i_sum_104(25)>
common/pixel.c:62:1: note: type of def: 5.
common/pixel.c:62:1: note: mark relevant 3, live 0.
common/pixel.c:62:1: note: worklist: examine stmt: i_sum_59 = PHI <i_sum_29(21), i_sum_104(25)>
common/pixel.c:62:1: note: vect_is_simple_use: operand i_sum_29
common/pixel.c:62:1: note: def_stmt: i_sum_29 = _27 + i_sum_59;
common/pixel.c:62:1: note: type of def: 5.
common/pixel.c:62:1: note: reduc-stmt defining reduc-phi in the same nest.
common/pixel.c:62:1: note: vect_is_simple_use: operand i_sum_104
common/pixel.c:62:1: note: def_stmt: i_sum_104 = PHI <i_sum_222(24), 0(20)>
common/pixel.c:62:1: note: type of def: 2.
common/pixel.c:62:1: note: def_stmt is out of loop.
common/pixel.c:62:1: note: worklist: examine stmt: _24 = *_23;
common/pixel.c:62:1: note: worklist: examine stmt: _20 = *_5;
common/pixel.c:62:1: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _20 = *_5;
  stmt_b: _24 = *_23;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _20 = *_5;
  stmt_b: _20 = *_5;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_2)
  (chrec_b = {0B, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _24 = *_23;
  stmt_b: _24 = *_23;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_2)
  (chrec_b = {0B, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/pixel.c:62:1: note: === vect_determine_vectorization_factor ===
common/pixel.c:62:1: note: ==> examining phi: x_8 = PHI <x_30(21), 0(25)>

common/pixel.c:62:1: note: ==> examining phi: i_sum_59 = PHI <i_sum_29(21), i_sum_104(25)>

common/pixel.c:62:1: note: get vectype for scalar type:  int
common/pixel.c:62:1: note: vectype: vector(4) int
common/pixel.c:62:1: note: nunits = 4
common/pixel.c:62:1: note: ==> examining phi: ivtmp_214 = PHI <ivtmp_213(21), 8(25)>

common/pixel.c:62:1: note: ==> examining statement: # DEBUG x => x_8

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: # DEBUG i_sum => i_sum_59

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: _14 = (sizetype) x_8;

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: _5 = fenc_16 + _14;

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: _20 = *_5;

common/pixel.c:62:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:62:1: note: vectype: vector(16) unsigned char
common/pixel.c:62:1: note: nunits = 16
common/pixel.c:62:1: note: ==> examining statement: _21 = (int) _20;

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: _23 = pix3_103 + _14;

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: _24 = *_23;

common/pixel.c:62:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:62:1: note: vectype: vector(16) unsigned char
common/pixel.c:62:1: note: nunits = 16
common/pixel.c:62:1: note: ==> examining statement: _25 = (int) _24;

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: _26 = _21 - _25;

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: _27 = ABS_EXPR <_26>;

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: i_sum_29 = _27 + i_sum_59;

common/pixel.c:62:1: note: ==> examining pattern statement: patt_198 = SAD_EXPR <_20, _24, i_sum_59>;

common/pixel.c:62:1: note: get vectype for scalar type:  int
common/pixel.c:62:1: note: vectype: vector(4) int
common/pixel.c:62:1: note: nunits = 4
common/pixel.c:62:1: note: ==> examining statement: # DEBUG i_sum => i_sum_29

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: x_30 = x_8 + 1;

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: # DEBUG x => x_30

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: # DEBUG x => x_30

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: # DEBUG i_sum => i_sum_29

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: ivtmp_213 = ivtmp_214 - 1;

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: if (ivtmp_213 != 0)

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: vectorization factor = 16
common/pixel.c:62:1: note: === vect_analyze_data_refs_alignment ===
common/pixel.c:62:1: note: vect_compute_data_ref_alignment:
common/pixel.c:62:1: note: can't force alignment of ref: *_5
common/pixel.c:62:1: note: vect_compute_data_ref_alignment:
common/pixel.c:62:1: note: can't force alignment of ref: *_23
common/pixel.c:62:1: note: === vect_prune_runtime_alias_test_list ===
common/pixel.c:62:1: note: === vect_enhance_data_refs_alignment ===
common/pixel.c:62:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:62:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:62:1: note: vect_can_advance_ivs_p:
common/pixel.c:62:1: note: Analyze phi: x_8 = PHI <x_30(21), 0(25)>

common/pixel.c:62:1: note: Analyze phi: i_sum_59 = PHI <i_sum_29(21), i_sum_104(25)>

common/pixel.c:62:1: note: reduc phi. skip.
common/pixel.c:62:1: note: Analyze phi: ivtmp_214 = PHI <ivtmp_213(21), 8(25)>

common/pixel.c:62:1: note: Vectorizing an unaligned access.
common/pixel.c:62:1: note: Vectorizing an unaligned access.
common/pixel.c:62:1: note: === vect_analyze_slp ===
common/pixel.c:62:1: note: === vect_make_slp_decision ===
common/pixel.c:62:1: note: === vect_detect_hybrid_slp ===
common/pixel.c:62:1: note: === vect_analyze_loop_operations ===
common/pixel.c:62:1: note: examining phi: x_8 = PHI <x_30(21), 0(25)>

common/pixel.c:62:1: note: examining phi: i_sum_59 = PHI <i_sum_29(21), i_sum_104(25)>

common/pixel.c:62:1: note: examining phi: ivtmp_214 = PHI <ivtmp_213(21), 8(25)>

common/pixel.c:62:1: note: ==> examining statement: # DEBUG x => x_8
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: # DEBUG i_sum => i_sum_59
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: _14 = (sizetype) x_8;
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: _5 = fenc_16 + _14;
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: _20 = *_5;
common/pixel.c:62:1: note: vect_is_simple_use: operand *_5
common/pixel.c:62:1: note: not ssa-name.
common/pixel.c:62:1: note: use not simple.
common/pixel.c:62:1: note: vect_is_simple_use: operand *_5
common/pixel.c:62:1: note: not ssa-name.
common/pixel.c:62:1: note: use not simple.
common/pixel.c:62:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:62:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:62:1: note: ==> examining statement: _21 = (int) _20;
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: _23 = pix3_103 + _14;
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: _24 = *_23;
common/pixel.c:62:1: note: vect_is_simple_use: operand *_23
common/pixel.c:62:1: note: not ssa-name.
common/pixel.c:62:1: note: use not simple.
common/pixel.c:62:1: note: vect_is_simple_use: operand *_23
common/pixel.c:62:1: note: not ssa-name.
common/pixel.c:62:1: note: use not simple.
common/pixel.c:62:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:62:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:62:1: note: ==> examining statement: _25 = (int) _24;
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: _26 = _21 - _25;
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: _27 = ABS_EXPR <_26>;
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: i_sum_29 = _27 + i_sum_59;
common/pixel.c:62:1: note: ==> examining pattern statement: patt_198 = SAD_EXPR <_20, _24, i_sum_59>;
common/pixel.c:62:1: note: vect_is_simple_use: operand _20
common/pixel.c:62:1: note: def_stmt: _20 = *_5;
common/pixel.c:62:1: note: type of def: 3.
common/pixel.c:62:1: note: vect_is_simple_use: operand _24
common/pixel.c:62:1: note: def_stmt: _24 = *_23;
common/pixel.c:62:1: note: type of def: 3.
common/pixel.c:62:1: note: vect_is_simple_use: operand i_sum_59
common/pixel.c:62:1: note: def_stmt: i_sum_59 = PHI <i_sum_29(21), i_sum_104(25)>
common/pixel.c:62:1: note: type of def: 5.
common/pixel.c:62:1: note: detected reduction: i_sum_29 = _27 + i_sum_59;

common/pixel.c:62:1: note: reduc op not supported by target.
vect_model_reduction_cost: inside_cost = 1, prologue_cost = 1, epilogue_cost = 5 .
common/pixel.c:62:1: note: ==> examining statement: # DEBUG i_sum => i_sum_29
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: x_30 = x_8 + 1;
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: # DEBUG x => x_30
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: # DEBUG x => x_30
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: # DEBUG i_sum => i_sum_29
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: ivtmp_213 = ivtmp_214 - 1;
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: if (ivtmp_213 != 0)
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: vectorization_factor = 16, niters = 8
common/pixel.c:62:1: note: not vectorized: iteration count too small.
common/pixel.c:62:1: note: not vectorized: iteration count smaller than vectorization factor.
common/pixel.c:62:1: note: bad operation or unsupported loop bound.

Analyzing loop at common/pixel.c:62
common/pixel.c:62:1: note: ===== analyze_loop_nest =====
common/pixel.c:62:1: note: === vect_analyze_loop_form ===
common/pixel.c:62:1: note: ===== analyze_loop_nest_1 =====
common/pixel.c:62:1: note: === vect_analyze_loop_form ===
common/pixel.c:62:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 4
  exit condition [7, + , 4294967295] != 0
  bounds on difference of bases: -7 ... -7
  result:
    # of iterations 7, bounded by 7
common/pixel.c:62:1: note: Considering outer-loop vectorization.
common/pixel.c:62:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 3
  exit condition [7, + , 4294967295] != 0
  bounds on difference of bases: -7 ... -7
  result:
    # of iterations 7, bounded by 7
common/pixel.c:62:1: note: === vect_analyze_data_refs ===
Creating dr for *_41
analyze_innermost: success.
	base_address: fenc_37
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_2(D)
	Access function 0: {{0B, +, 16}_3, +, 1}_4
Creating dr for *_45
analyze_innermost: success.
	base_address: pix2_137
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix2_13(D)
	Access function 0: {{0B, +, pretmp_223}_3, +, 1}_4
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:62:1: note: analyze in outer-loop: *fenc_37
common/pixel.c:62:1: note: 	outer base_address: fenc_2(D)
	outer offset from base address: 0
	outer constant offset from base address: 0
	outer step: 16
	outer aligned to: 128
common/pixel.c:62:1: note: got vectype for stmt: _42 = *_41;
vector(16) unsigned char
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:62:1: note: analyze in outer-loop: *pix2_137
common/pixel.c:62:1: note: failed: evolution of base is not affine.
common/pixel.c:62:1: note: bad data references.

Analyzing loop at common/pixel.c:62
common/pixel.c:62:1: note: ===== analyze_loop_nest =====
common/pixel.c:62:1: note: === vect_analyze_loop_form ===
common/pixel.c:62:1: note: === get_loop_niters ===
common/pixel.c:62:1: note: === vect_analyze_data_refs ===
Creating dr for *_41
analyze_innermost: success.
	base_address: fenc_37
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_37
	Access function 0: {0B, +, 1}_4
Creating dr for *_45
analyze_innermost: success.
	base_address: pix2_137
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix2_137
	Access function 0: {0B, +, 1}_4
common/pixel.c:62:1: note: got vectype for stmt: _42 = *_41;
vector(16) unsigned char
common/pixel.c:62:1: note: got vectype for stmt: _46 = *_45;
vector(16) unsigned char
common/pixel.c:62:1: note: === vect_analyze_scalar_cycles ===
common/pixel.c:62:1: note: Analyze phi: x_81 = PHI <x_52(15), 0(19)>

common/pixel.c:62:1: note: Access function of PHI: {0, +, 1}_4
common/pixel.c:62:1: note: step: 1,  init: 0
common/pixel.c:62:1: note: Detected induction.
common/pixel.c:62:1: note: Analyze phi: i_sum_138 = PHI <i_sum_51(15), i_sum_140(19)>

common/pixel.c:62:1: note: Access function of PHI: {i_sum_140, +, _49}_4
common/pixel.c:62:1: note: step: _49,  init: i_sum_140
common/pixel.c:62:1: note: step unknown.
common/pixel.c:62:1: note: Analyze phi: ivtmp_210 = PHI <ivtmp_209(15), 8(19)>

common/pixel.c:62:1: note: Access function of PHI: {8, +, 4294967295}_4
common/pixel.c:62:1: note: step: 4294967295,  init: 8
common/pixel.c:62:1: note: Detected induction.
common/pixel.c:62:1: note: Analyze phi: i_sum_138 = PHI <i_sum_51(15), i_sum_140(19)>

common/pixel.c:62:1: note: detected reduction: i_sum_51 = _49 + i_sum_138;

common/pixel.c:62:1: note: Detected reduction.
common/pixel.c:62:1: note: === vect_pattern_recog ===
common/pixel.c:62:1: note: vect_is_simple_use: operand _49
common/pixel.c:62:1: note: def_stmt: _49 = ABS_EXPR <_48>;
common/pixel.c:62:1: note: type of def: 3.
common/pixel.c:62:1: note: vect_is_simple_use: operand _49
common/pixel.c:62:1: note: def_stmt: _49 = ABS_EXPR <_48>;
common/pixel.c:62:1: note: type of def: 3.
common/pixel.c:62:1: note: vect_is_simple_use: operand _49
common/pixel.c:62:1: note: def_stmt: _49 = ABS_EXPR <_48>;
common/pixel.c:62:1: note: type of def: 3.
common/pixel.c:62:1: note: vect_is_simple_use: operand _43
common/pixel.c:62:1: note: def_stmt: _43 = (int) _42;
common/pixel.c:62:1: note: type of def: 3.
common/pixel.c:62:1: note: vect_is_simple_use: operand _42
common/pixel.c:62:1: note: def_stmt: _42 = *_41;
common/pixel.c:62:1: note: type of def: 3.
common/pixel.c:62:1: note: vect_is_simple_use: operand _47
common/pixel.c:62:1: note: def_stmt: _47 = (int) _46;
common/pixel.c:62:1: note: type of def: 3.
common/pixel.c:62:1: note: vect_is_simple_use: operand _46
common/pixel.c:62:1: note: def_stmt: _46 = *_45;
common/pixel.c:62:1: note: type of def: 3.
common/pixel.c:62:1: note: vect_recog_sad_pattern: detected: patt_198 = SAD_EXPR <_42, _46, i_sum_138>;

common/pixel.c:62:1: note: pattern recognized: patt_198 = SAD_EXPR <_42, _46, i_sum_138>;
common/pixel.c:62:1: note: === vect_analyze_data_ref_accesses ===
common/pixel.c:62:1: note: === vect_mark_stmts_to_be_vectorized ===
common/pixel.c:62:1: note: init: phi relevant? x_81 = PHI <x_52(15), 0(19)>
common/pixel.c:62:1: note: init: phi relevant? i_sum_138 = PHI <i_sum_51(15), i_sum_140(19)>
common/pixel.c:62:1: note: init: phi relevant? ivtmp_210 = PHI <ivtmp_209(15), 8(19)>
common/pixel.c:62:1: note: init: stmt relevant? # DEBUG x => x_81
common/pixel.c:62:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_138
common/pixel.c:62:1: note: init: stmt relevant? _39 = (sizetype) x_81;
common/pixel.c:62:1: note: init: stmt relevant? _41 = fenc_37 + _39;
common/pixel.c:62:1: note: init: stmt relevant? _42 = *_41;
common/pixel.c:62:1: note: init: stmt relevant? _43 = (int) _42;
common/pixel.c:62:1: note: init: stmt relevant? _45 = pix2_137 + _39;
common/pixel.c:62:1: note: init: stmt relevant? _46 = *_45;
common/pixel.c:62:1: note: init: stmt relevant? _47 = (int) _46;
common/pixel.c:62:1: note: init: stmt relevant? _48 = _43 - _47;
common/pixel.c:62:1: note: init: stmt relevant? _49 = ABS_EXPR <_48>;
common/pixel.c:62:1: note: init: stmt relevant? i_sum_51 = _49 + i_sum_138;
common/pixel.c:62:1: note: vec_stmt_relevant_p: used out of loop.
common/pixel.c:62:1: note: mark relevant 0, live 1.
common/pixel.c:62:1: note: last stmt in pattern. don't mark relevant/live.
common/pixel.c:62:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_51
common/pixel.c:62:1: note: init: stmt relevant? x_52 = x_81 + 1;
common/pixel.c:62:1: note: init: stmt relevant? # DEBUG x => x_52
common/pixel.c:62:1: note: init: stmt relevant? # DEBUG x => x_52
common/pixel.c:62:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_51
common/pixel.c:62:1: note: init: stmt relevant? ivtmp_209 = ivtmp_210 - 1;
common/pixel.c:62:1: note: init: stmt relevant? if (ivtmp_209 != 0)
common/pixel.c:62:1: note: worklist: examine stmt: patt_198 = SAD_EXPR <_42, _46, i_sum_138>;
common/pixel.c:62:1: note: vect_is_simple_use: operand _42
common/pixel.c:62:1: note: def_stmt: _42 = *_41;
common/pixel.c:62:1: note: type of def: 3.
common/pixel.c:62:1: note: mark relevant 3, live 0.
common/pixel.c:62:1: note: vect_is_simple_use: operand _46
common/pixel.c:62:1: note: def_stmt: _46 = *_45;
common/pixel.c:62:1: note: type of def: 3.
common/pixel.c:62:1: note: mark relevant 3, live 0.
common/pixel.c:62:1: note: vect_is_simple_use: operand i_sum_138
common/pixel.c:62:1: note: def_stmt: i_sum_138 = PHI <i_sum_51(15), i_sum_140(19)>
common/pixel.c:62:1: note: type of def: 5.
common/pixel.c:62:1: note: mark relevant 3, live 0.
common/pixel.c:62:1: note: worklist: examine stmt: i_sum_138 = PHI <i_sum_51(15), i_sum_140(19)>
common/pixel.c:62:1: note: vect_is_simple_use: operand i_sum_51
common/pixel.c:62:1: note: def_stmt: i_sum_51 = _49 + i_sum_138;
common/pixel.c:62:1: note: type of def: 5.
common/pixel.c:62:1: note: reduc-stmt defining reduc-phi in the same nest.
common/pixel.c:62:1: note: vect_is_simple_use: operand i_sum_140
common/pixel.c:62:1: note: def_stmt: i_sum_140 = PHI <i_sum_220(18), 0(14)>
common/pixel.c:62:1: note: type of def: 2.
common/pixel.c:62:1: note: def_stmt is out of loop.
common/pixel.c:62:1: note: worklist: examine stmt: _46 = *_45;
common/pixel.c:62:1: note: worklist: examine stmt: _42 = *_41;
common/pixel.c:62:1: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _42 = *_41;
  stmt_b: _46 = *_45;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _42 = *_41;
  stmt_b: _42 = *_41;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_4)
  (chrec_b = {0B, +, 1}_4)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _46 = *_45;
  stmt_b: _46 = *_45;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_4)
  (chrec_b = {0B, +, 1}_4)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/pixel.c:62:1: note: === vect_determine_vectorization_factor ===
common/pixel.c:62:1: note: ==> examining phi: x_81 = PHI <x_52(15), 0(19)>

common/pixel.c:62:1: note: ==> examining phi: i_sum_138 = PHI <i_sum_51(15), i_sum_140(19)>

common/pixel.c:62:1: note: get vectype for scalar type:  int
common/pixel.c:62:1: note: vectype: vector(4) int
common/pixel.c:62:1: note: nunits = 4
common/pixel.c:62:1: note: ==> examining phi: ivtmp_210 = PHI <ivtmp_209(15), 8(19)>

common/pixel.c:62:1: note: ==> examining statement: # DEBUG x => x_81

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: # DEBUG i_sum => i_sum_138

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: _39 = (sizetype) x_81;

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: _41 = fenc_37 + _39;

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: _42 = *_41;

common/pixel.c:62:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:62:1: note: vectype: vector(16) unsigned char
common/pixel.c:62:1: note: nunits = 16
common/pixel.c:62:1: note: ==> examining statement: _43 = (int) _42;

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: _45 = pix2_137 + _39;

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: _46 = *_45;

common/pixel.c:62:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:62:1: note: vectype: vector(16) unsigned char
common/pixel.c:62:1: note: nunits = 16
common/pixel.c:62:1: note: ==> examining statement: _47 = (int) _46;

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: _48 = _43 - _47;

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: _49 = ABS_EXPR <_48>;

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: i_sum_51 = _49 + i_sum_138;

common/pixel.c:62:1: note: ==> examining pattern statement: patt_198 = SAD_EXPR <_42, _46, i_sum_138>;

common/pixel.c:62:1: note: get vectype for scalar type:  int
common/pixel.c:62:1: note: vectype: vector(4) int
common/pixel.c:62:1: note: nunits = 4
common/pixel.c:62:1: note: ==> examining statement: # DEBUG i_sum => i_sum_51

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: x_52 = x_81 + 1;

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: # DEBUG x => x_52

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: # DEBUG x => x_52

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: # DEBUG i_sum => i_sum_51

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: ivtmp_209 = ivtmp_210 - 1;

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: if (ivtmp_209 != 0)

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: vectorization factor = 16
common/pixel.c:62:1: note: === vect_analyze_data_refs_alignment ===
common/pixel.c:62:1: note: vect_compute_data_ref_alignment:
common/pixel.c:62:1: note: can't force alignment of ref: *_41
common/pixel.c:62:1: note: vect_compute_data_ref_alignment:
common/pixel.c:62:1: note: can't force alignment of ref: *_45
common/pixel.c:62:1: note: === vect_prune_runtime_alias_test_list ===
common/pixel.c:62:1: note: === vect_enhance_data_refs_alignment ===
common/pixel.c:62:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:62:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:62:1: note: vect_can_advance_ivs_p:
common/pixel.c:62:1: note: Analyze phi: x_81 = PHI <x_52(15), 0(19)>

common/pixel.c:62:1: note: Analyze phi: i_sum_138 = PHI <i_sum_51(15), i_sum_140(19)>

common/pixel.c:62:1: note: reduc phi. skip.
common/pixel.c:62:1: note: Analyze phi: ivtmp_210 = PHI <ivtmp_209(15), 8(19)>

common/pixel.c:62:1: note: Vectorizing an unaligned access.
common/pixel.c:62:1: note: Vectorizing an unaligned access.
common/pixel.c:62:1: note: === vect_analyze_slp ===
common/pixel.c:62:1: note: === vect_make_slp_decision ===
common/pixel.c:62:1: note: === vect_detect_hybrid_slp ===
common/pixel.c:62:1: note: === vect_analyze_loop_operations ===
common/pixel.c:62:1: note: examining phi: x_81 = PHI <x_52(15), 0(19)>

common/pixel.c:62:1: note: examining phi: i_sum_138 = PHI <i_sum_51(15), i_sum_140(19)>

common/pixel.c:62:1: note: examining phi: ivtmp_210 = PHI <ivtmp_209(15), 8(19)>

common/pixel.c:62:1: note: ==> examining statement: # DEBUG x => x_81
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: # DEBUG i_sum => i_sum_138
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: _39 = (sizetype) x_81;
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: _41 = fenc_37 + _39;
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: _42 = *_41;
common/pixel.c:62:1: note: vect_is_simple_use: operand *_41
common/pixel.c:62:1: note: not ssa-name.
common/pixel.c:62:1: note: use not simple.
common/pixel.c:62:1: note: vect_is_simple_use: operand *_41
common/pixel.c:62:1: note: not ssa-name.
common/pixel.c:62:1: note: use not simple.
common/pixel.c:62:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:62:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:62:1: note: ==> examining statement: _43 = (int) _42;
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: _45 = pix2_137 + _39;
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: _46 = *_45;
common/pixel.c:62:1: note: vect_is_simple_use: operand *_45
common/pixel.c:62:1: note: not ssa-name.
common/pixel.c:62:1: note: use not simple.
common/pixel.c:62:1: note: vect_is_simple_use: operand *_45
common/pixel.c:62:1: note: not ssa-name.
common/pixel.c:62:1: note: use not simple.
common/pixel.c:62:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:62:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:62:1: note: ==> examining statement: _47 = (int) _46;
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: _48 = _43 - _47;
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: _49 = ABS_EXPR <_48>;
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: i_sum_51 = _49 + i_sum_138;
common/pixel.c:62:1: note: ==> examining pattern statement: patt_198 = SAD_EXPR <_42, _46, i_sum_138>;
common/pixel.c:62:1: note: vect_is_simple_use: operand _42
common/pixel.c:62:1: note: def_stmt: _42 = *_41;
common/pixel.c:62:1: note: type of def: 3.
common/pixel.c:62:1: note: vect_is_simple_use: operand _46
common/pixel.c:62:1: note: def_stmt: _46 = *_45;
common/pixel.c:62:1: note: type of def: 3.
common/pixel.c:62:1: note: vect_is_simple_use: operand i_sum_138
common/pixel.c:62:1: note: def_stmt: i_sum_138 = PHI <i_sum_51(15), i_sum_140(19)>
common/pixel.c:62:1: note: type of def: 5.
common/pixel.c:62:1: note: detected reduction: i_sum_51 = _49 + i_sum_138;

common/pixel.c:62:1: note: reduc op not supported by target.
vect_model_reduction_cost: inside_cost = 1, prologue_cost = 1, epilogue_cost = 5 .
common/pixel.c:62:1: note: ==> examining statement: # DEBUG i_sum => i_sum_51
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: x_52 = x_81 + 1;
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: # DEBUG x => x_52
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: # DEBUG x => x_52
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: # DEBUG i_sum => i_sum_51
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: ivtmp_209 = ivtmp_210 - 1;
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: if (ivtmp_209 != 0)
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: vectorization_factor = 16, niters = 8
common/pixel.c:62:1: note: not vectorized: iteration count too small.
common/pixel.c:62:1: note: not vectorized: iteration count smaller than vectorization factor.
common/pixel.c:62:1: note: bad operation or unsupported loop bound.

Analyzing loop at common/pixel.c:62
common/pixel.c:62:1: note: ===== analyze_loop_nest =====
common/pixel.c:62:1: note: === vect_analyze_loop_form ===
common/pixel.c:62:1: note: ===== analyze_loop_nest_1 =====
common/pixel.c:62:1: note: === vect_analyze_loop_form ===
common/pixel.c:62:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 6
  exit condition [7, + , 4294967295] != 0
  bounds on difference of bases: -7 ... -7
  result:
    # of iterations 7, bounded by 7
common/pixel.c:62:1: note: Considering outer-loop vectorization.
common/pixel.c:62:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 5
  exit condition [7, + , 4294967295] != 0
  bounds on difference of bases: -7 ... -7
  result:
    # of iterations 7, bounded by 7
common/pixel.c:62:1: note: === vect_analyze_data_refs ===
Creating dr for *_63
analyze_innermost: success.
	base_address: fenc_142
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_2(D)
	Access function 0: {{0B, +, 16}_5, +, 1}_6
Creating dr for *_67
analyze_innermost: success.
	base_address: pix1_143
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix1_9(D)
	Access function 0: {{0B, +, pretmp_223}_5, +, 1}_6
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:62:1: note: analyze in outer-loop: *fenc_142
common/pixel.c:62:1: note: 	outer base_address: fenc_2(D)
	outer offset from base address: 0
	outer constant offset from base address: 0
	outer step: 16
	outer aligned to: 128
common/pixel.c:62:1: note: got vectype for stmt: _64 = *_63;
vector(16) unsigned char
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:62:1: note: analyze in outer-loop: *pix1_143
common/pixel.c:62:1: note: failed: evolution of base is not affine.
common/pixel.c:62:1: note: bad data references.

Analyzing loop at common/pixel.c:62
common/pixel.c:62:1: note: ===== analyze_loop_nest =====
common/pixel.c:62:1: note: === vect_analyze_loop_form ===
common/pixel.c:62:1: note: === get_loop_niters ===
common/pixel.c:62:1: note: === vect_analyze_data_refs ===
Creating dr for *_63
analyze_innermost: success.
	base_address: fenc_142
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_142
	Access function 0: {0B, +, 1}_6
Creating dr for *_67
analyze_innermost: success.
	base_address: pix1_143
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix1_143
	Access function 0: {0B, +, 1}_6
common/pixel.c:62:1: note: got vectype for stmt: _64 = *_63;
vector(16) unsigned char
common/pixel.c:62:1: note: got vectype for stmt: _68 = *_67;
vector(16) unsigned char
common/pixel.c:62:1: note: === vect_analyze_scalar_cycles ===
common/pixel.c:62:1: note: Analyze phi: x_141 = PHI <x_74(9), 0(13)>

common/pixel.c:62:1: note: Access function of PHI: {0, +, 1}_6
common/pixel.c:62:1: note: step: 1,  init: 0
common/pixel.c:62:1: note: Detected induction.
common/pixel.c:62:1: note: Analyze phi: i_sum_144 = PHI <i_sum_73(9), i_sum_146(13)>

common/pixel.c:62:1: note: Access function of PHI: {i_sum_146, +, _71}_6
common/pixel.c:62:1: note: step: _71,  init: i_sum_146
common/pixel.c:62:1: note: step unknown.
common/pixel.c:62:1: note: Analyze phi: ivtmp_206 = PHI <ivtmp_205(9), 8(13)>

common/pixel.c:62:1: note: Access function of PHI: {8, +, 4294967295}_6
common/pixel.c:62:1: note: step: 4294967295,  init: 8
common/pixel.c:62:1: note: Detected induction.
common/pixel.c:62:1: note: Analyze phi: i_sum_144 = PHI <i_sum_73(9), i_sum_146(13)>

common/pixel.c:62:1: note: detected reduction: i_sum_73 = _71 + i_sum_144;

common/pixel.c:62:1: note: Detected reduction.
common/pixel.c:62:1: note: === vect_pattern_recog ===
common/pixel.c:62:1: note: vect_is_simple_use: operand _71
common/pixel.c:62:1: note: def_stmt: _71 = ABS_EXPR <_70>;
common/pixel.c:62:1: note: type of def: 3.
common/pixel.c:62:1: note: vect_is_simple_use: operand _71
common/pixel.c:62:1: note: def_stmt: _71 = ABS_EXPR <_70>;
common/pixel.c:62:1: note: type of def: 3.
common/pixel.c:62:1: note: vect_is_simple_use: operand _71
common/pixel.c:62:1: note: def_stmt: _71 = ABS_EXPR <_70>;
common/pixel.c:62:1: note: type of def: 3.
common/pixel.c:62:1: note: vect_is_simple_use: operand _65
common/pixel.c:62:1: note: def_stmt: _65 = (int) _64;
common/pixel.c:62:1: note: type of def: 3.
common/pixel.c:62:1: note: vect_is_simple_use: operand _64
common/pixel.c:62:1: note: def_stmt: _64 = *_63;
common/pixel.c:62:1: note: type of def: 3.
common/pixel.c:62:1: note: vect_is_simple_use: operand _69
common/pixel.c:62:1: note: def_stmt: _69 = (int) _68;
common/pixel.c:62:1: note: type of def: 3.
common/pixel.c:62:1: note: vect_is_simple_use: operand _68
common/pixel.c:62:1: note: def_stmt: _68 = *_67;
common/pixel.c:62:1: note: type of def: 3.
common/pixel.c:62:1: note: vect_recog_sad_pattern: detected: patt_198 = SAD_EXPR <_64, _68, i_sum_144>;

common/pixel.c:62:1: note: pattern recognized: patt_198 = SAD_EXPR <_64, _68, i_sum_144>;
common/pixel.c:62:1: note: === vect_analyze_data_ref_accesses ===
common/pixel.c:62:1: note: === vect_mark_stmts_to_be_vectorized ===
common/pixel.c:62:1: note: init: phi relevant? x_141 = PHI <x_74(9), 0(13)>
common/pixel.c:62:1: note: init: phi relevant? i_sum_144 = PHI <i_sum_73(9), i_sum_146(13)>
common/pixel.c:62:1: note: init: phi relevant? ivtmp_206 = PHI <ivtmp_205(9), 8(13)>
common/pixel.c:62:1: note: init: stmt relevant? # DEBUG x => x_141
common/pixel.c:62:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_144
common/pixel.c:62:1: note: init: stmt relevant? _61 = (sizetype) x_141;
common/pixel.c:62:1: note: init: stmt relevant? _63 = fenc_142 + _61;
common/pixel.c:62:1: note: init: stmt relevant? _64 = *_63;
common/pixel.c:62:1: note: init: stmt relevant? _65 = (int) _64;
common/pixel.c:62:1: note: init: stmt relevant? _67 = pix1_143 + _61;
common/pixel.c:62:1: note: init: stmt relevant? _68 = *_67;
common/pixel.c:62:1: note: init: stmt relevant? _69 = (int) _68;
common/pixel.c:62:1: note: init: stmt relevant? _70 = _65 - _69;
common/pixel.c:62:1: note: init: stmt relevant? _71 = ABS_EXPR <_70>;
common/pixel.c:62:1: note: init: stmt relevant? i_sum_73 = _71 + i_sum_144;
common/pixel.c:62:1: note: vec_stmt_relevant_p: used out of loop.
common/pixel.c:62:1: note: mark relevant 0, live 1.
common/pixel.c:62:1: note: last stmt in pattern. don't mark relevant/live.
common/pixel.c:62:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_73
common/pixel.c:62:1: note: init: stmt relevant? x_74 = x_141 + 1;
common/pixel.c:62:1: note: init: stmt relevant? # DEBUG x => x_74
common/pixel.c:62:1: note: init: stmt relevant? # DEBUG x => x_74
common/pixel.c:62:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_73
common/pixel.c:62:1: note: init: stmt relevant? ivtmp_205 = ivtmp_206 - 1;
common/pixel.c:62:1: note: init: stmt relevant? if (ivtmp_205 != 0)
common/pixel.c:62:1: note: worklist: examine stmt: patt_198 = SAD_EXPR <_64, _68, i_sum_144>;
common/pixel.c:62:1: note: vect_is_simple_use: operand _64
common/pixel.c:62:1: note: def_stmt: _64 = *_63;
common/pixel.c:62:1: note: type of def: 3.
common/pixel.c:62:1: note: mark relevant 3, live 0.
common/pixel.c:62:1: note: vect_is_simple_use: operand _68
common/pixel.c:62:1: note: def_stmt: _68 = *_67;
common/pixel.c:62:1: note: type of def: 3.
common/pixel.c:62:1: note: mark relevant 3, live 0.
common/pixel.c:62:1: note: vect_is_simple_use: operand i_sum_144
common/pixel.c:62:1: note: def_stmt: i_sum_144 = PHI <i_sum_73(9), i_sum_146(13)>
common/pixel.c:62:1: note: type of def: 5.
common/pixel.c:62:1: note: mark relevant 3, live 0.
common/pixel.c:62:1: note: worklist: examine stmt: i_sum_144 = PHI <i_sum_73(9), i_sum_146(13)>
common/pixel.c:62:1: note: vect_is_simple_use: operand i_sum_73
common/pixel.c:62:1: note: def_stmt: i_sum_73 = _71 + i_sum_144;
common/pixel.c:62:1: note: type of def: 5.
common/pixel.c:62:1: note: reduc-stmt defining reduc-phi in the same nest.
common/pixel.c:62:1: note: vect_is_simple_use: operand i_sum_146
common/pixel.c:62:1: note: def_stmt: i_sum_146 = PHI <i_sum_218(12), 0(8)>
common/pixel.c:62:1: note: type of def: 2.
common/pixel.c:62:1: note: def_stmt is out of loop.
common/pixel.c:62:1: note: worklist: examine stmt: _68 = *_67;
common/pixel.c:62:1: note: worklist: examine stmt: _64 = *_63;
common/pixel.c:62:1: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _64 = *_63;
  stmt_b: _68 = *_67;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _64 = *_63;
  stmt_b: _64 = *_63;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_6)
  (chrec_b = {0B, +, 1}_6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _68 = *_67;
  stmt_b: _68 = *_67;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_6)
  (chrec_b = {0B, +, 1}_6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/pixel.c:62:1: note: === vect_determine_vectorization_factor ===
common/pixel.c:62:1: note: ==> examining phi: x_141 = PHI <x_74(9), 0(13)>

common/pixel.c:62:1: note: ==> examining phi: i_sum_144 = PHI <i_sum_73(9), i_sum_146(13)>

common/pixel.c:62:1: note: get vectype for scalar type:  int
common/pixel.c:62:1: note: vectype: vector(4) int
common/pixel.c:62:1: note: nunits = 4
common/pixel.c:62:1: note: ==> examining phi: ivtmp_206 = PHI <ivtmp_205(9), 8(13)>

common/pixel.c:62:1: note: ==> examining statement: # DEBUG x => x_141

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: # DEBUG i_sum => i_sum_144

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: _61 = (sizetype) x_141;

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: _63 = fenc_142 + _61;

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: _64 = *_63;

common/pixel.c:62:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:62:1: note: vectype: vector(16) unsigned char
common/pixel.c:62:1: note: nunits = 16
common/pixel.c:62:1: note: ==> examining statement: _65 = (int) _64;

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: _67 = pix1_143 + _61;

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: _68 = *_67;

common/pixel.c:62:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:62:1: note: vectype: vector(16) unsigned char
common/pixel.c:62:1: note: nunits = 16
common/pixel.c:62:1: note: ==> examining statement: _69 = (int) _68;

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: _70 = _65 - _69;

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: _71 = ABS_EXPR <_70>;

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: i_sum_73 = _71 + i_sum_144;

common/pixel.c:62:1: note: ==> examining pattern statement: patt_198 = SAD_EXPR <_64, _68, i_sum_144>;

common/pixel.c:62:1: note: get vectype for scalar type:  int
common/pixel.c:62:1: note: vectype: vector(4) int
common/pixel.c:62:1: note: nunits = 4
common/pixel.c:62:1: note: ==> examining statement: # DEBUG i_sum => i_sum_73

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: x_74 = x_141 + 1;

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: # DEBUG x => x_74

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: # DEBUG x => x_74

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: # DEBUG i_sum => i_sum_73

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: ivtmp_205 = ivtmp_206 - 1;

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: if (ivtmp_205 != 0)

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: vectorization factor = 16
common/pixel.c:62:1: note: === vect_analyze_data_refs_alignment ===
common/pixel.c:62:1: note: vect_compute_data_ref_alignment:
common/pixel.c:62:1: note: can't force alignment of ref: *_63
common/pixel.c:62:1: note: vect_compute_data_ref_alignment:
common/pixel.c:62:1: note: can't force alignment of ref: *_67
common/pixel.c:62:1: note: === vect_prune_runtime_alias_test_list ===
common/pixel.c:62:1: note: === vect_enhance_data_refs_alignment ===
common/pixel.c:62:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:62:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:62:1: note: vect_can_advance_ivs_p:
common/pixel.c:62:1: note: Analyze phi: x_141 = PHI <x_74(9), 0(13)>

common/pixel.c:62:1: note: Analyze phi: i_sum_144 = PHI <i_sum_73(9), i_sum_146(13)>

common/pixel.c:62:1: note: reduc phi. skip.
common/pixel.c:62:1: note: Analyze phi: ivtmp_206 = PHI <ivtmp_205(9), 8(13)>

common/pixel.c:62:1: note: Vectorizing an unaligned access.
common/pixel.c:62:1: note: Vectorizing an unaligned access.
common/pixel.c:62:1: note: === vect_analyze_slp ===
common/pixel.c:62:1: note: === vect_make_slp_decision ===
common/pixel.c:62:1: note: === vect_detect_hybrid_slp ===
common/pixel.c:62:1: note: === vect_analyze_loop_operations ===
common/pixel.c:62:1: note: examining phi: x_141 = PHI <x_74(9), 0(13)>

common/pixel.c:62:1: note: examining phi: i_sum_144 = PHI <i_sum_73(9), i_sum_146(13)>

common/pixel.c:62:1: note: examining phi: ivtmp_206 = PHI <ivtmp_205(9), 8(13)>

common/pixel.c:62:1: note: ==> examining statement: # DEBUG x => x_141
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: # DEBUG i_sum => i_sum_144
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: _61 = (sizetype) x_141;
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: _63 = fenc_142 + _61;
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: _64 = *_63;
common/pixel.c:62:1: note: vect_is_simple_use: operand *_63
common/pixel.c:62:1: note: not ssa-name.
common/pixel.c:62:1: note: use not simple.
common/pixel.c:62:1: note: vect_is_simple_use: operand *_63
common/pixel.c:62:1: note: not ssa-name.
common/pixel.c:62:1: note: use not simple.
common/pixel.c:62:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:62:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:62:1: note: ==> examining statement: _65 = (int) _64;
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: _67 = pix1_143 + _61;
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: _68 = *_67;
common/pixel.c:62:1: note: vect_is_simple_use: operand *_67
common/pixel.c:62:1: note: not ssa-name.
common/pixel.c:62:1: note: use not simple.
common/pixel.c:62:1: note: vect_is_simple_use: operand *_67
common/pixel.c:62:1: note: not ssa-name.
common/pixel.c:62:1: note: use not simple.
common/pixel.c:62:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:62:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:62:1: note: ==> examining statement: _69 = (int) _68;
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: _70 = _65 - _69;
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: _71 = ABS_EXPR <_70>;
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: i_sum_73 = _71 + i_sum_144;
common/pixel.c:62:1: note: ==> examining pattern statement: patt_198 = SAD_EXPR <_64, _68, i_sum_144>;
common/pixel.c:62:1: note: vect_is_simple_use: operand _64
common/pixel.c:62:1: note: def_stmt: _64 = *_63;
common/pixel.c:62:1: note: type of def: 3.
common/pixel.c:62:1: note: vect_is_simple_use: operand _68
common/pixel.c:62:1: note: def_stmt: _68 = *_67;
common/pixel.c:62:1: note: type of def: 3.
common/pixel.c:62:1: note: vect_is_simple_use: operand i_sum_144
common/pixel.c:62:1: note: def_stmt: i_sum_144 = PHI <i_sum_73(9), i_sum_146(13)>
common/pixel.c:62:1: note: type of def: 5.
common/pixel.c:62:1: note: detected reduction: i_sum_73 = _71 + i_sum_144;

common/pixel.c:62:1: note: reduc op not supported by target.
vect_model_reduction_cost: inside_cost = 1, prologue_cost = 1, epilogue_cost = 5 .
common/pixel.c:62:1: note: ==> examining statement: # DEBUG i_sum => i_sum_73
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: x_74 = x_141 + 1;
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: # DEBUG x => x_74
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: # DEBUG x => x_74
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: # DEBUG i_sum => i_sum_73
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: ivtmp_205 = ivtmp_206 - 1;
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: if (ivtmp_205 != 0)
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: vectorization_factor = 16, niters = 8
common/pixel.c:62:1: note: not vectorized: iteration count too small.
common/pixel.c:62:1: note: not vectorized: iteration count smaller than vectorization factor.
common/pixel.c:62:1: note: bad operation or unsupported loop bound.

Analyzing loop at common/pixel.c:62
common/pixel.c:62:1: note: ===== analyze_loop_nest =====
common/pixel.c:62:1: note: === vect_analyze_loop_form ===
common/pixel.c:62:1: note: ===== analyze_loop_nest_1 =====
common/pixel.c:62:1: note: === vect_analyze_loop_form ===
common/pixel.c:62:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 8
  exit condition [7, + , 4294967295] != 0
  bounds on difference of bases: -7 ... -7
  result:
    # of iterations 7, bounded by 7
common/pixel.c:62:1: note: Considering outer-loop vectorization.
common/pixel.c:62:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 7
  exit condition [7, + , 4294967295] != 0
  bounds on difference of bases: -7 ... -7
  result:
    # of iterations 7, bounded by 7
common/pixel.c:62:1: note: === vect_analyze_data_refs ===
Creating dr for *_85
analyze_innermost: success.
	base_address: fenc_148
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_2(D)
	Access function 0: {{0B, +, 16}_7, +, 1}_8
Creating dr for *_89
analyze_innermost: success.
	base_address: pix0_149
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix0_3(D)
	Access function 0: {{0B, +, pretmp_223}_7, +, 1}_8
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:62:1: note: analyze in outer-loop: *fenc_148
common/pixel.c:62:1: note: 	outer base_address: fenc_2(D)
	outer offset from base address: 0
	outer constant offset from base address: 0
	outer step: 16
	outer aligned to: 128
common/pixel.c:62:1: note: got vectype for stmt: _86 = *_85;
vector(16) unsigned char
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:62:1: note: analyze in outer-loop: *pix0_149
common/pixel.c:62:1: note: failed: evolution of base is not affine.
common/pixel.c:62:1: note: bad data references.

Analyzing loop at common/pixel.c:62
common/pixel.c:62:1: note: ===== analyze_loop_nest =====
common/pixel.c:62:1: note: === vect_analyze_loop_form ===
common/pixel.c:62:1: note: === get_loop_niters ===
common/pixel.c:62:1: note: === vect_analyze_data_refs ===
Creating dr for *_85
analyze_innermost: success.
	base_address: fenc_148
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_148
	Access function 0: {0B, +, 1}_8
Creating dr for *_89
analyze_innermost: success.
	base_address: pix0_149
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix0_149
	Access function 0: {0B, +, 1}_8
common/pixel.c:62:1: note: got vectype for stmt: _86 = *_85;
vector(16) unsigned char
common/pixel.c:62:1: note: got vectype for stmt: _90 = *_89;
vector(16) unsigned char
common/pixel.c:62:1: note: === vect_analyze_scalar_cycles ===
common/pixel.c:62:1: note: Analyze phi: x_147 = PHI <x_96(3), 0(7)>

common/pixel.c:62:1: note: Access function of PHI: {0, +, 1}_8
common/pixel.c:62:1: note: step: 1,  init: 0
common/pixel.c:62:1: note: Detected induction.
common/pixel.c:62:1: note: Analyze phi: i_sum_150 = PHI <i_sum_95(3), i_sum_152(7)>

common/pixel.c:62:1: note: Access function of PHI: {i_sum_152, +, _93}_8
common/pixel.c:62:1: note: step: _93,  init: i_sum_152
common/pixel.c:62:1: note: step unknown.
common/pixel.c:62:1: note: Analyze phi: ivtmp_202 = PHI <ivtmp_201(3), 8(7)>

common/pixel.c:62:1: note: Access function of PHI: {8, +, 4294967295}_8
common/pixel.c:62:1: note: step: 4294967295,  init: 8
common/pixel.c:62:1: note: Detected induction.
common/pixel.c:62:1: note: Analyze phi: i_sum_150 = PHI <i_sum_95(3), i_sum_152(7)>

common/pixel.c:62:1: note: detected reduction: i_sum_95 = _93 + i_sum_150;

common/pixel.c:62:1: note: Detected reduction.
common/pixel.c:62:1: note: === vect_pattern_recog ===
common/pixel.c:62:1: note: vect_is_simple_use: operand _93
common/pixel.c:62:1: note: def_stmt: _93 = ABS_EXPR <_92>;
common/pixel.c:62:1: note: type of def: 3.
common/pixel.c:62:1: note: vect_is_simple_use: operand _93
common/pixel.c:62:1: note: def_stmt: _93 = ABS_EXPR <_92>;
common/pixel.c:62:1: note: type of def: 3.
common/pixel.c:62:1: note: vect_is_simple_use: operand _93
common/pixel.c:62:1: note: def_stmt: _93 = ABS_EXPR <_92>;
common/pixel.c:62:1: note: type of def: 3.
common/pixel.c:62:1: note: vect_is_simple_use: operand _87
common/pixel.c:62:1: note: def_stmt: _87 = (int) _86;
common/pixel.c:62:1: note: type of def: 3.
common/pixel.c:62:1: note: vect_is_simple_use: operand _86
common/pixel.c:62:1: note: def_stmt: _86 = *_85;
common/pixel.c:62:1: note: type of def: 3.
common/pixel.c:62:1: note: vect_is_simple_use: operand _91
common/pixel.c:62:1: note: def_stmt: _91 = (int) _90;
common/pixel.c:62:1: note: type of def: 3.
common/pixel.c:62:1: note: vect_is_simple_use: operand _90
common/pixel.c:62:1: note: def_stmt: _90 = *_89;
common/pixel.c:62:1: note: type of def: 3.
common/pixel.c:62:1: note: vect_recog_sad_pattern: detected: patt_198 = SAD_EXPR <_86, _90, i_sum_150>;

common/pixel.c:62:1: note: pattern recognized: patt_198 = SAD_EXPR <_86, _90, i_sum_150>;
common/pixel.c:62:1: note: === vect_analyze_data_ref_accesses ===
common/pixel.c:62:1: note: === vect_mark_stmts_to_be_vectorized ===
common/pixel.c:62:1: note: init: phi relevant? x_147 = PHI <x_96(3), 0(7)>
common/pixel.c:62:1: note: init: phi relevant? i_sum_150 = PHI <i_sum_95(3), i_sum_152(7)>
common/pixel.c:62:1: note: init: phi relevant? ivtmp_202 = PHI <ivtmp_201(3), 8(7)>
common/pixel.c:62:1: note: init: stmt relevant? # DEBUG x => x_147
common/pixel.c:62:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_150
common/pixel.c:62:1: note: init: stmt relevant? _83 = (sizetype) x_147;
common/pixel.c:62:1: note: init: stmt relevant? _85 = fenc_148 + _83;
common/pixel.c:62:1: note: init: stmt relevant? _86 = *_85;
common/pixel.c:62:1: note: init: stmt relevant? _87 = (int) _86;
common/pixel.c:62:1: note: init: stmt relevant? _89 = pix0_149 + _83;
common/pixel.c:62:1: note: init: stmt relevant? _90 = *_89;
common/pixel.c:62:1: note: init: stmt relevant? _91 = (int) _90;
common/pixel.c:62:1: note: init: stmt relevant? _92 = _87 - _91;
common/pixel.c:62:1: note: init: stmt relevant? _93 = ABS_EXPR <_92>;
common/pixel.c:62:1: note: init: stmt relevant? i_sum_95 = _93 + i_sum_150;
common/pixel.c:62:1: note: vec_stmt_relevant_p: used out of loop.
common/pixel.c:62:1: note: mark relevant 0, live 1.
common/pixel.c:62:1: note: last stmt in pattern. don't mark relevant/live.
common/pixel.c:62:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_95
common/pixel.c:62:1: note: init: stmt relevant? x_96 = x_147 + 1;
common/pixel.c:62:1: note: init: stmt relevant? # DEBUG x => x_96
common/pixel.c:62:1: note: init: stmt relevant? # DEBUG x => x_96
common/pixel.c:62:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_95
common/pixel.c:62:1: note: init: stmt relevant? ivtmp_201 = ivtmp_202 - 1;
common/pixel.c:62:1: note: init: stmt relevant? if (ivtmp_201 != 0)
common/pixel.c:62:1: note: worklist: examine stmt: patt_198 = SAD_EXPR <_86, _90, i_sum_150>;
common/pixel.c:62:1: note: vect_is_simple_use: operand _86
common/pixel.c:62:1: note: def_stmt: _86 = *_85;
common/pixel.c:62:1: note: type of def: 3.
common/pixel.c:62:1: note: mark relevant 3, live 0.
common/pixel.c:62:1: note: vect_is_simple_use: operand _90
common/pixel.c:62:1: note: def_stmt: _90 = *_89;
common/pixel.c:62:1: note: type of def: 3.
common/pixel.c:62:1: note: mark relevant 3, live 0.
common/pixel.c:62:1: note: vect_is_simple_use: operand i_sum_150
common/pixel.c:62:1: note: def_stmt: i_sum_150 = PHI <i_sum_95(3), i_sum_152(7)>
common/pixel.c:62:1: note: type of def: 5.
common/pixel.c:62:1: note: mark relevant 3, live 0.
common/pixel.c:62:1: note: worklist: examine stmt: i_sum_150 = PHI <i_sum_95(3), i_sum_152(7)>
common/pixel.c:62:1: note: vect_is_simple_use: operand i_sum_95
common/pixel.c:62:1: note: def_stmt: i_sum_95 = _93 + i_sum_150;
common/pixel.c:62:1: note: type of def: 5.
common/pixel.c:62:1: note: reduc-stmt defining reduc-phi in the same nest.
common/pixel.c:62:1: note: vect_is_simple_use: operand i_sum_152
common/pixel.c:62:1: note: def_stmt: i_sum_152 = PHI <i_sum_216(6), 0(2)>
common/pixel.c:62:1: note: type of def: 2.
common/pixel.c:62:1: note: def_stmt is out of loop.
common/pixel.c:62:1: note: worklist: examine stmt: _90 = *_89;
common/pixel.c:62:1: note: worklist: examine stmt: _86 = *_85;
common/pixel.c:62:1: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _86 = *_85;
  stmt_b: _90 = *_89;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _86 = *_85;
  stmt_b: _86 = *_85;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_8)
  (chrec_b = {0B, +, 1}_8)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _90 = *_89;
  stmt_b: _90 = *_89;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_8)
  (chrec_b = {0B, +, 1}_8)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/pixel.c:62:1: note: === vect_determine_vectorization_factor ===
common/pixel.c:62:1: note: ==> examining phi: x_147 = PHI <x_96(3), 0(7)>

common/pixel.c:62:1: note: ==> examining phi: i_sum_150 = PHI <i_sum_95(3), i_sum_152(7)>

common/pixel.c:62:1: note: get vectype for scalar type:  int
common/pixel.c:62:1: note: vectype: vector(4) int
common/pixel.c:62:1: note: nunits = 4
common/pixel.c:62:1: note: ==> examining phi: ivtmp_202 = PHI <ivtmp_201(3), 8(7)>

common/pixel.c:62:1: note: ==> examining statement: # DEBUG x => x_147

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: # DEBUG i_sum => i_sum_150

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: _83 = (sizetype) x_147;

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: _85 = fenc_148 + _83;

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: _86 = *_85;

common/pixel.c:62:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:62:1: note: vectype: vector(16) unsigned char
common/pixel.c:62:1: note: nunits = 16
common/pixel.c:62:1: note: ==> examining statement: _87 = (int) _86;

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: _89 = pix0_149 + _83;

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: _90 = *_89;

common/pixel.c:62:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:62:1: note: vectype: vector(16) unsigned char
common/pixel.c:62:1: note: nunits = 16
common/pixel.c:62:1: note: ==> examining statement: _91 = (int) _90;

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: _92 = _87 - _91;

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: _93 = ABS_EXPR <_92>;

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: i_sum_95 = _93 + i_sum_150;

common/pixel.c:62:1: note: ==> examining pattern statement: patt_198 = SAD_EXPR <_86, _90, i_sum_150>;

common/pixel.c:62:1: note: get vectype for scalar type:  int
common/pixel.c:62:1: note: vectype: vector(4) int
common/pixel.c:62:1: note: nunits = 4
common/pixel.c:62:1: note: ==> examining statement: # DEBUG i_sum => i_sum_95

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: x_96 = x_147 + 1;

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: # DEBUG x => x_96

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: # DEBUG x => x_96

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: # DEBUG i_sum => i_sum_95

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: ivtmp_201 = ivtmp_202 - 1;

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: ==> examining statement: if (ivtmp_201 != 0)

common/pixel.c:62:1: note: skip.
common/pixel.c:62:1: note: vectorization factor = 16
common/pixel.c:62:1: note: === vect_analyze_data_refs_alignment ===
common/pixel.c:62:1: note: vect_compute_data_ref_alignment:
common/pixel.c:62:1: note: can't force alignment of ref: *_85
common/pixel.c:62:1: note: vect_compute_data_ref_alignment:
common/pixel.c:62:1: note: can't force alignment of ref: *_89
common/pixel.c:62:1: note: === vect_prune_runtime_alias_test_list ===
common/pixel.c:62:1: note: === vect_enhance_data_refs_alignment ===
common/pixel.c:62:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:62:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:62:1: note: vect_can_advance_ivs_p:
common/pixel.c:62:1: note: Analyze phi: x_147 = PHI <x_96(3), 0(7)>

common/pixel.c:62:1: note: Analyze phi: i_sum_150 = PHI <i_sum_95(3), i_sum_152(7)>

common/pixel.c:62:1: note: reduc phi. skip.
common/pixel.c:62:1: note: Analyze phi: ivtmp_202 = PHI <ivtmp_201(3), 8(7)>

common/pixel.c:62:1: note: Vectorizing an unaligned access.
common/pixel.c:62:1: note: Vectorizing an unaligned access.
common/pixel.c:62:1: note: === vect_analyze_slp ===
common/pixel.c:62:1: note: === vect_make_slp_decision ===
common/pixel.c:62:1: note: === vect_detect_hybrid_slp ===
common/pixel.c:62:1: note: === vect_analyze_loop_operations ===
common/pixel.c:62:1: note: examining phi: x_147 = PHI <x_96(3), 0(7)>

common/pixel.c:62:1: note: examining phi: i_sum_150 = PHI <i_sum_95(3), i_sum_152(7)>

common/pixel.c:62:1: note: examining phi: ivtmp_202 = PHI <ivtmp_201(3), 8(7)>

common/pixel.c:62:1: note: ==> examining statement: # DEBUG x => x_147
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: # DEBUG i_sum => i_sum_150
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: _83 = (sizetype) x_147;
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: _85 = fenc_148 + _83;
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: _86 = *_85;
common/pixel.c:62:1: note: vect_is_simple_use: operand *_85
common/pixel.c:62:1: note: not ssa-name.
common/pixel.c:62:1: note: use not simple.
common/pixel.c:62:1: note: vect_is_simple_use: operand *_85
common/pixel.c:62:1: note: not ssa-name.
common/pixel.c:62:1: note: use not simple.
common/pixel.c:62:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:62:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:62:1: note: ==> examining statement: _87 = (int) _86;
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: _89 = pix0_149 + _83;
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: _90 = *_89;
common/pixel.c:62:1: note: vect_is_simple_use: operand *_89
common/pixel.c:62:1: note: not ssa-name.
common/pixel.c:62:1: note: use not simple.
common/pixel.c:62:1: note: vect_is_simple_use: operand *_89
common/pixel.c:62:1: note: not ssa-name.
common/pixel.c:62:1: note: use not simple.
common/pixel.c:62:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:62:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:62:1: note: ==> examining statement: _91 = (int) _90;
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: _92 = _87 - _91;
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: _93 = ABS_EXPR <_92>;
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: i_sum_95 = _93 + i_sum_150;
common/pixel.c:62:1: note: ==> examining pattern statement: patt_198 = SAD_EXPR <_86, _90, i_sum_150>;
common/pixel.c:62:1: note: vect_is_simple_use: operand _86
common/pixel.c:62:1: note: def_stmt: _86 = *_85;
common/pixel.c:62:1: note: type of def: 3.
common/pixel.c:62:1: note: vect_is_simple_use: operand _90
common/pixel.c:62:1: note: def_stmt: _90 = *_89;
common/pixel.c:62:1: note: type of def: 3.
common/pixel.c:62:1: note: vect_is_simple_use: operand i_sum_150
common/pixel.c:62:1: note: def_stmt: i_sum_150 = PHI <i_sum_95(3), i_sum_152(7)>
common/pixel.c:62:1: note: type of def: 5.
common/pixel.c:62:1: note: detected reduction: i_sum_95 = _93 + i_sum_150;

common/pixel.c:62:1: note: reduc op not supported by target.
vect_model_reduction_cost: inside_cost = 1, prologue_cost = 1, epilogue_cost = 5 .
common/pixel.c:62:1: note: ==> examining statement: # DEBUG i_sum => i_sum_95
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: x_96 = x_147 + 1;
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: # DEBUG x => x_96
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: # DEBUG x => x_96
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: # DEBUG i_sum => i_sum_95
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: ivtmp_201 = ivtmp_202 - 1;
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: ==> examining statement: if (ivtmp_201 != 0)
common/pixel.c:62:1: note: irrelevant.
common/pixel.c:62:1: note: vectorization_factor = 16, niters = 8
common/pixel.c:62:1: note: not vectorized: iteration count too small.
common/pixel.c:62:1: note: not vectorized: iteration count smaller than vectorization factor.
common/pixel.c:62:1: note: bad operation or unsupported loop bound.
common/pixel.c:386:1: note: vectorized 0 loops in function.
x264_pixel_sad_x4_8x8 (uint8_t * fenc, uint8_t * pix0, uint8_t * pix1, uint8_t * pix2, uint8_t * pix3, int i_stride, int * scores)
{
  int i_sum;
  int x;
  int y;
  int i_sum;
  int x;
  int y;
  int i_sum;
  int x;
  int y;
  int i_sum;
  int x;
  int y;
  uint8_t * _5;
  sizetype _14;
  unsigned char _20;
  int _21;
  uint8_t * _23;
  unsigned char _24;
  int _25;
  int _26;
  int _27;
  sizetype _39;
  uint8_t * _41;
  unsigned char _42;
  int _43;
  uint8_t * _45;
  unsigned char _46;
  int _47;
  int _48;
  int _49;
  sizetype _61;
  uint8_t * _63;
  unsigned char _64;
  int _65;
  uint8_t * _67;
  unsigned char _68;
  int _69;
  int _70;
  int _71;
  sizetype _83;
  uint8_t * _85;
  unsigned char _86;
  int _87;
  uint8_t * _89;
  unsigned char _90;
  int _91;
  int _92;
  int _93;
  unsigned int ivtmp_199;
  unsigned int ivtmp_200;
  unsigned int ivtmp_201;
  unsigned int ivtmp_202;
  unsigned int ivtmp_203;
  unsigned int ivtmp_204;
  unsigned int ivtmp_205;
  unsigned int ivtmp_206;
  unsigned int ivtmp_207;
  unsigned int ivtmp_208;
  unsigned int ivtmp_209;
  unsigned int ivtmp_210;
  unsigned int ivtmp_211;
  unsigned int ivtmp_212;
  unsigned int ivtmp_213;
  unsigned int ivtmp_214;
  sizetype pretmp_223;

  <bb 2>:
  # DEBUG pix1 => fenc_2(D)
  # DEBUG i_stride_pix1 => 16
  # DEBUG pix2 => pix0_3(D)
  # DEBUG i_stride_pix2 => i_stride_4(D)
  # DEBUG i_sum => 0
  # DEBUG y => 0
  # DEBUG y => 0
  # DEBUG i_sum => 0
  # DEBUG pix2 => pix0_3(D)
  # DEBUG pix1 => fenc_2(D)
  pretmp_223 = (sizetype) i_stride_4(D);
  goto <bb 7>;

  <bb 3>:

  <bb 4>:
  # x_147 = PHI <x_96(3), 0(7)>
  # i_sum_150 = PHI <i_sum_95(3), i_sum_152(7)>
  # ivtmp_202 = PHI <ivtmp_201(3), 8(7)>
  # DEBUG x => x_147
  # DEBUG i_sum => i_sum_150
  _83 = (sizetype) x_147;
  _85 = fenc_148 + _83;
  _86 = *_85;
  _87 = (int) _86;
  _89 = pix0_149 + _83;
  _90 = *_89;
  _91 = (int) _90;
  _92 = _87 - _91;
  _93 = ABS_EXPR <_92>;
  i_sum_95 = _93 + i_sum_150;
  # DEBUG i_sum => i_sum_95
  x_96 = x_147 + 1;
  # DEBUG x => x_96
  # DEBUG x => x_96
  # DEBUG i_sum => i_sum_95
  ivtmp_201 = ivtmp_202 - 1;
  if (ivtmp_201 != 0)
    goto <bb 3>;
  else
    goto <bb 5>;

  <bb 5>:
  # i_sum_216 = PHI <i_sum_95(4)>
  fenc_97 = fenc_148 + 16;
  # DEBUG pix1 => fenc_97
  pix0_99 = pix0_149 + pretmp_223;
  # DEBUG pix2 => pix0_99
  y_101 = y_151 + 1;
  # DEBUG y => y_101
  # DEBUG y => y_101
  # DEBUG i_sum => i_sum_216
  # DEBUG pix2 => pix0_99
  # DEBUG pix1 => fenc_97
  ivtmp_199 = ivtmp_200 - 1;
  if (ivtmp_199 != 0)
    goto <bb 6>;
  else
    goto <bb 8>;

  <bb 6>:

  <bb 7>:
  # fenc_148 = PHI <fenc_97(6), fenc_2(D)(2)>
  # pix0_149 = PHI <pix0_99(6), pix0_3(D)(2)>
  # y_151 = PHI <y_101(6), 0(2)>
  # i_sum_152 = PHI <i_sum_216(6), 0(2)>
  # ivtmp_200 = PHI <ivtmp_199(6), 8(2)>
  # DEBUG y => y_151
  # DEBUG i_sum => i_sum_152
  # DEBUG pix2 => pix0_149
  # DEBUG pix1 => fenc_148
  # DEBUG x => 0
  # DEBUG i_sum => i_sum_152
  goto <bb 4>;

  <bb 8>:
  # i_sum_215 = PHI <i_sum_216(5)>
  # DEBUG pix1 => NULL
  # DEBUG i_stride_pix1 => NULL
  # DEBUG pix2 => NULL
  # DEBUG i_stride_pix2 => NULL
  # DEBUG y => NULL
  # DEBUG x => NULL
  # DEBUG i_sum => NULL
  *scores_6(D) = i_sum_215;
  # DEBUG pix1 => fenc_2(D)
  # DEBUG i_stride_pix1 => 16
  # DEBUG pix2 => pix1_9(D)
  # DEBUG i_stride_pix2 => i_stride_4(D)
  # DEBUG y => 0
  # DEBUG i_sum => 0
  # DEBUG pix2 => pix1_9(D)
  # DEBUG pix1 => fenc_2(D)
  goto <bb 13>;

  <bb 9>:

  <bb 10>:
  # x_141 = PHI <x_74(9), 0(13)>
  # i_sum_144 = PHI <i_sum_73(9), i_sum_146(13)>
  # ivtmp_206 = PHI <ivtmp_205(9), 8(13)>
  # DEBUG x => x_141
  # DEBUG i_sum => i_sum_144
  _61 = (sizetype) x_141;
  _63 = fenc_142 + _61;
  _64 = *_63;
  _65 = (int) _64;
  _67 = pix1_143 + _61;
  _68 = *_67;
  _69 = (int) _68;
  _70 = _65 - _69;
  _71 = ABS_EXPR <_70>;
  i_sum_73 = _71 + i_sum_144;
  # DEBUG i_sum => i_sum_73
  x_74 = x_141 + 1;
  # DEBUG x => x_74
  # DEBUG x => x_74
  # DEBUG i_sum => i_sum_73
  ivtmp_205 = ivtmp_206 - 1;
  if (ivtmp_205 != 0)
    goto <bb 9>;
  else
    goto <bb 11>;

  <bb 11>:
  # i_sum_218 = PHI <i_sum_73(10)>
  fenc_75 = fenc_142 + 16;
  # DEBUG pix1 => fenc_75
  pix1_77 = pix1_143 + pretmp_223;
  # DEBUG pix2 => pix1_77
  y_79 = y_145 + 1;
  # DEBUG y => y_79
  # DEBUG y => y_79
  # DEBUG i_sum => i_sum_218
  # DEBUG pix2 => pix1_77
  # DEBUG pix1 => fenc_75
  ivtmp_203 = ivtmp_204 - 1;
  if (ivtmp_203 != 0)
    goto <bb 12>;
  else
    goto <bb 14>;

  <bb 12>:

  <bb 13>:
  # fenc_142 = PHI <fenc_75(12), fenc_2(D)(8)>
  # pix1_143 = PHI <pix1_77(12), pix1_9(D)(8)>
  # y_145 = PHI <y_79(12), 0(8)>
  # i_sum_146 = PHI <i_sum_218(12), 0(8)>
  # ivtmp_204 = PHI <ivtmp_203(12), 8(8)>
  # DEBUG y => y_145
  # DEBUG i_sum => i_sum_146
  # DEBUG pix2 => pix1_143
  # DEBUG pix1 => fenc_142
  # DEBUG x => 0
  # DEBUG i_sum => i_sum_146
  goto <bb 10>;

  <bb 14>:
  # i_sum_217 = PHI <i_sum_218(11)>
  # DEBUG pix1 => NULL
  # DEBUG i_stride_pix1 => NULL
  # DEBUG pix2 => NULL
  # DEBUG i_stride_pix2 => NULL
  # DEBUG y => NULL
  # DEBUG x => NULL
  # DEBUG i_sum => NULL
  MEM[(int *)scores_6(D) + 4B] = i_sum_217;
  # DEBUG pix1 => fenc_2(D)
  # DEBUG i_stride_pix1 => 16
  # DEBUG pix2 => pix2_13(D)
  # DEBUG i_stride_pix2 => i_stride_4(D)
  # DEBUG y => 0
  # DEBUG i_sum => 0
  # DEBUG pix2 => pix2_13(D)
  # DEBUG pix1 => fenc_2(D)
  goto <bb 19>;

  <bb 15>:

  <bb 16>:
  # x_81 = PHI <x_52(15), 0(19)>
  # i_sum_138 = PHI <i_sum_51(15), i_sum_140(19)>
  # ivtmp_210 = PHI <ivtmp_209(15), 8(19)>
  # DEBUG x => x_81
  # DEBUG i_sum => i_sum_138
  _39 = (sizetype) x_81;
  _41 = fenc_37 + _39;
  _42 = *_41;
  _43 = (int) _42;
  _45 = pix2_137 + _39;
  _46 = *_45;
  _47 = (int) _46;
  _48 = _43 - _47;
  _49 = ABS_EXPR <_48>;
  i_sum_51 = _49 + i_sum_138;
  # DEBUG i_sum => i_sum_51
  x_52 = x_81 + 1;
  # DEBUG x => x_52
  # DEBUG x => x_52
  # DEBUG i_sum => i_sum_51
  ivtmp_209 = ivtmp_210 - 1;
  if (ivtmp_209 != 0)
    goto <bb 15>;
  else
    goto <bb 17>;

  <bb 17>:
  # i_sum_220 = PHI <i_sum_51(16)>
  fenc_53 = fenc_37 + 16;
  # DEBUG pix1 => fenc_53
  pix2_55 = pix2_137 + pretmp_223;
  # DEBUG pix2 => pix2_55
  y_57 = y_139 + 1;
  # DEBUG y => y_57
  # DEBUG y => y_57
  # DEBUG i_sum => i_sum_220
  # DEBUG pix2 => pix2_55
  # DEBUG pix1 => fenc_53
  ivtmp_207 = ivtmp_208 - 1;
  if (ivtmp_207 != 0)
    goto <bb 18>;
  else
    goto <bb 20>;

  <bb 18>:

  <bb 19>:
  # fenc_37 = PHI <fenc_53(18), fenc_2(D)(14)>
  # pix2_137 = PHI <pix2_55(18), pix2_13(D)(14)>
  # y_139 = PHI <y_57(18), 0(14)>
  # i_sum_140 = PHI <i_sum_220(18), 0(14)>
  # ivtmp_208 = PHI <ivtmp_207(18), 8(14)>
  # DEBUG y => y_139
  # DEBUG i_sum => i_sum_140
  # DEBUG pix2 => pix2_137
  # DEBUG pix1 => fenc_37
  # DEBUG x => 0
  # DEBUG i_sum => i_sum_140
  goto <bb 16>;

  <bb 20>:
  # i_sum_219 = PHI <i_sum_220(17)>
  # DEBUG pix1 => NULL
  # DEBUG i_stride_pix1 => NULL
  # DEBUG pix2 => NULL
  # DEBUG i_stride_pix2 => NULL
  # DEBUG y => NULL
  # DEBUG x => NULL
  # DEBUG i_sum => NULL
  MEM[(int *)scores_6(D) + 8B] = i_sum_219;
  # DEBUG pix1 => fenc_2(D)
  # DEBUG i_stride_pix1 => 16
  # DEBUG pix2 => pix3_17(D)
  # DEBUG i_stride_pix2 => i_stride_4(D)
  # DEBUG y => 0
  # DEBUG i_sum => 0
  # DEBUG pix2 => pix3_17(D)
  # DEBUG pix1 => fenc_2(D)
  goto <bb 25>;

  <bb 21>:

  <bb 22>:
  # x_8 = PHI <x_30(21), 0(25)>
  # i_sum_59 = PHI <i_sum_29(21), i_sum_104(25)>
  # ivtmp_214 = PHI <ivtmp_213(21), 8(25)>
  # DEBUG x => x_8
  # DEBUG i_sum => i_sum_59
  _14 = (sizetype) x_8;
  _5 = fenc_16 + _14;
  _20 = *_5;
  _21 = (int) _20;
  _23 = pix3_103 + _14;
  _24 = *_23;
  _25 = (int) _24;
  _26 = _21 - _25;
  _27 = ABS_EXPR <_26>;
  i_sum_29 = _27 + i_sum_59;
  # DEBUG i_sum => i_sum_29
  x_30 = x_8 + 1;
  # DEBUG x => x_30
  # DEBUG x => x_30
  # DEBUG i_sum => i_sum_29
  ivtmp_213 = ivtmp_214 - 1;
  if (ivtmp_213 != 0)
    goto <bb 21>;
  else
    goto <bb 23>;

  <bb 23>:
  # i_sum_222 = PHI <i_sum_29(22)>
  fenc_31 = fenc_16 + 16;
  # DEBUG pix1 => fenc_31
  pix3_33 = pix3_103 + pretmp_223;
  # DEBUG pix2 => pix3_33
  y_35 = y_12 + 1;
  # DEBUG y => y_35
  # DEBUG y => y_35
  # DEBUG i_sum => i_sum_222
  # DEBUG pix2 => pix3_33
  # DEBUG pix1 => fenc_31
  ivtmp_211 = ivtmp_212 - 1;
  if (ivtmp_211 != 0)
    goto <bb 24>;
  else
    goto <bb 26>;

  <bb 24>:

  <bb 25>:
  # fenc_16 = PHI <fenc_31(24), fenc_2(D)(20)>
  # pix3_103 = PHI <pix3_33(24), pix3_17(D)(20)>
  # y_12 = PHI <y_35(24), 0(20)>
  # i_sum_104 = PHI <i_sum_222(24), 0(20)>
  # ivtmp_212 = PHI <ivtmp_211(24), 8(20)>
  # DEBUG y => y_12
  # DEBUG i_sum => i_sum_104
  # DEBUG pix2 => pix3_103
  # DEBUG pix1 => fenc_16
  # DEBUG x => 0
  # DEBUG i_sum => i_sum_104
  goto <bb 22>;

  <bb 26>:
  # i_sum_221 = PHI <i_sum_222(23)>
  # DEBUG pix1 => NULL
  # DEBUG i_stride_pix1 => NULL
  # DEBUG pix2 => NULL
  # DEBUG i_stride_pix2 => NULL
  # DEBUG y => NULL
  # DEBUG x => NULL
  # DEBUG i_sum => NULL
  MEM[(int *)scores_6(D) + 12B] = i_sum_221;
  return;

}



;; Function x264_pixel_sad_x3_8x4 (x264_pixel_sad_x3_8x4, funcdef_no=158, decl_uid=8085, cgraph_uid=158, symbol_order=201)


Analyzing loop at common/pixel.c:63
common/pixel.c:63:1: note: ===== analyze_loop_nest =====
common/pixel.c:63:1: note: === vect_analyze_loop_form ===
common/pixel.c:63:1: note: ===== analyze_loop_nest_1 =====
common/pixel.c:63:1: note: === vect_analyze_loop_form ===
common/pixel.c:63:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 2
  exit condition [7, + , 4294967295] != 0
  bounds on difference of bases: -7 ... -7
  result:
    # of iterations 7, bounded by 7
common/pixel.c:63:1: note: Considering outer-loop vectorization.
common/pixel.c:63:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 1
  exit condition [3, + , 4294967295] != 0
  bounds on difference of bases: -3 ... -3
  result:
    # of iterations 3, bounded by 3
common/pixel.c:63:1: note: === vect_analyze_data_refs ===
Creating dr for *_16
analyze_innermost: success.
	base_address: fenc_34
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_2(D)
	Access function 0: {{0B, +, 16}_1, +, 1}_2
Creating dr for *_20
analyze_innermost: success.
	base_address: pix2_79
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix2_13(D)
	Access function 0: {{0B, +, pretmp_169}_1, +, 1}_2
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:63:1: note: analyze in outer-loop: *fenc_34
common/pixel.c:63:1: note: 	outer base_address: fenc_2(D)
	outer offset from base address: 0
	outer constant offset from base address: 0
	outer step: 16
	outer aligned to: 128
common/pixel.c:63:1: note: got vectype for stmt: _17 = *_16;
vector(16) unsigned char
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:63:1: note: analyze in outer-loop: *pix2_79
common/pixel.c:63:1: note: failed: evolution of base is not affine.
common/pixel.c:63:1: note: bad data references.

Analyzing loop at common/pixel.c:63
common/pixel.c:63:1: note: ===== analyze_loop_nest =====
common/pixel.c:63:1: note: === vect_analyze_loop_form ===
common/pixel.c:63:1: note: === get_loop_niters ===
common/pixel.c:63:1: note: === vect_analyze_data_refs ===
Creating dr for *_16
analyze_innermost: success.
	base_address: fenc_34
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_34
	Access function 0: {0B, +, 1}_2
Creating dr for *_20
analyze_innermost: success.
	base_address: pix2_79
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix2_79
	Access function 0: {0B, +, 1}_2
common/pixel.c:63:1: note: got vectype for stmt: _17 = *_16;
vector(16) unsigned char
common/pixel.c:63:1: note: got vectype for stmt: _21 = *_20;
vector(16) unsigned char
common/pixel.c:63:1: note: === vect_analyze_scalar_cycles ===
common/pixel.c:63:1: note: Analyze phi: x_8 = PHI <x_27(15), 0(19)>

common/pixel.c:63:1: note: Access function of PHI: {0, +, 1}_2
common/pixel.c:63:1: note: step: 1,  init: 0
common/pixel.c:63:1: note: Detected induction.
common/pixel.c:63:1: note: Analyze phi: i_sum_78 = PHI <i_sum_26(15), i_sum_12(19)>

common/pixel.c:63:1: note: Access function of PHI: {i_sum_12, +, _24}_2
common/pixel.c:63:1: note: step: _24,  init: i_sum_12
common/pixel.c:63:1: note: step unknown.
common/pixel.c:63:1: note: Analyze phi: ivtmp_162 = PHI <ivtmp_161(15), 8(19)>

common/pixel.c:63:1: note: Access function of PHI: {8, +, 4294967295}_2
common/pixel.c:63:1: note: step: 4294967295,  init: 8
common/pixel.c:63:1: note: Detected induction.
common/pixel.c:63:1: note: Analyze phi: i_sum_78 = PHI <i_sum_26(15), i_sum_12(19)>

common/pixel.c:63:1: note: detected reduction: i_sum_26 = _24 + i_sum_78;

common/pixel.c:63:1: note: Detected reduction.
common/pixel.c:63:1: note: === vect_pattern_recog ===
common/pixel.c:63:1: note: vect_is_simple_use: operand _24
common/pixel.c:63:1: note: def_stmt: _24 = ABS_EXPR <_23>;
common/pixel.c:63:1: note: type of def: 3.
common/pixel.c:63:1: note: vect_is_simple_use: operand _24
common/pixel.c:63:1: note: def_stmt: _24 = ABS_EXPR <_23>;
common/pixel.c:63:1: note: type of def: 3.
common/pixel.c:63:1: note: vect_is_simple_use: operand _24
common/pixel.c:63:1: note: def_stmt: _24 = ABS_EXPR <_23>;
common/pixel.c:63:1: note: type of def: 3.
common/pixel.c:63:1: note: vect_is_simple_use: operand _18
common/pixel.c:63:1: note: def_stmt: _18 = (int) _17;
common/pixel.c:63:1: note: type of def: 3.
common/pixel.c:63:1: note: vect_is_simple_use: operand _17
common/pixel.c:63:1: note: def_stmt: _17 = *_16;
common/pixel.c:63:1: note: type of def: 3.
common/pixel.c:63:1: note: vect_is_simple_use: operand _22
common/pixel.c:63:1: note: def_stmt: _22 = (int) _21;
common/pixel.c:63:1: note: type of def: 3.
common/pixel.c:63:1: note: vect_is_simple_use: operand _21
common/pixel.c:63:1: note: def_stmt: _21 = *_20;
common/pixel.c:63:1: note: type of def: 3.
common/pixel.c:63:1: note: vect_recog_sad_pattern: detected: patt_150 = SAD_EXPR <_17, _21, i_sum_78>;

common/pixel.c:63:1: note: pattern recognized: patt_150 = SAD_EXPR <_17, _21, i_sum_78>;
common/pixel.c:63:1: note: === vect_analyze_data_ref_accesses ===
common/pixel.c:63:1: note: === vect_mark_stmts_to_be_vectorized ===
common/pixel.c:63:1: note: init: phi relevant? x_8 = PHI <x_27(15), 0(19)>
common/pixel.c:63:1: note: init: phi relevant? i_sum_78 = PHI <i_sum_26(15), i_sum_12(19)>
common/pixel.c:63:1: note: init: phi relevant? ivtmp_162 = PHI <ivtmp_161(15), 8(19)>
common/pixel.c:63:1: note: init: stmt relevant? # DEBUG x => x_8
common/pixel.c:63:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_78
common/pixel.c:63:1: note: init: stmt relevant? _10 = (sizetype) x_8;
common/pixel.c:63:1: note: init: stmt relevant? _16 = fenc_34 + _10;
common/pixel.c:63:1: note: init: stmt relevant? _17 = *_16;
common/pixel.c:63:1: note: init: stmt relevant? _18 = (int) _17;
common/pixel.c:63:1: note: init: stmt relevant? _20 = pix2_79 + _10;
common/pixel.c:63:1: note: init: stmt relevant? _21 = *_20;
common/pixel.c:63:1: note: init: stmt relevant? _22 = (int) _21;
common/pixel.c:63:1: note: init: stmt relevant? _23 = _18 - _22;
common/pixel.c:63:1: note: init: stmt relevant? _24 = ABS_EXPR <_23>;
common/pixel.c:63:1: note: init: stmt relevant? i_sum_26 = _24 + i_sum_78;
common/pixel.c:63:1: note: vec_stmt_relevant_p: used out of loop.
common/pixel.c:63:1: note: mark relevant 0, live 1.
common/pixel.c:63:1: note: last stmt in pattern. don't mark relevant/live.
common/pixel.c:63:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_26
common/pixel.c:63:1: note: init: stmt relevant? x_27 = x_8 + 1;
common/pixel.c:63:1: note: init: stmt relevant? # DEBUG x => x_27
common/pixel.c:63:1: note: init: stmt relevant? # DEBUG x => x_27
common/pixel.c:63:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_26
common/pixel.c:63:1: note: init: stmt relevant? ivtmp_161 = ivtmp_162 - 1;
common/pixel.c:63:1: note: init: stmt relevant? if (ivtmp_161 != 0)
common/pixel.c:63:1: note: worklist: examine stmt: patt_150 = SAD_EXPR <_17, _21, i_sum_78>;
common/pixel.c:63:1: note: vect_is_simple_use: operand _17
common/pixel.c:63:1: note: def_stmt: _17 = *_16;
common/pixel.c:63:1: note: type of def: 3.
common/pixel.c:63:1: note: mark relevant 3, live 0.
common/pixel.c:63:1: note: vect_is_simple_use: operand _21
common/pixel.c:63:1: note: def_stmt: _21 = *_20;
common/pixel.c:63:1: note: type of def: 3.
common/pixel.c:63:1: note: mark relevant 3, live 0.
common/pixel.c:63:1: note: vect_is_simple_use: operand i_sum_78
common/pixel.c:63:1: note: def_stmt: i_sum_78 = PHI <i_sum_26(15), i_sum_12(19)>
common/pixel.c:63:1: note: type of def: 5.
common/pixel.c:63:1: note: mark relevant 3, live 0.
common/pixel.c:63:1: note: worklist: examine stmt: i_sum_78 = PHI <i_sum_26(15), i_sum_12(19)>
common/pixel.c:63:1: note: vect_is_simple_use: operand i_sum_26
common/pixel.c:63:1: note: def_stmt: i_sum_26 = _24 + i_sum_78;
common/pixel.c:63:1: note: type of def: 5.
common/pixel.c:63:1: note: reduc-stmt defining reduc-phi in the same nest.
common/pixel.c:63:1: note: vect_is_simple_use: operand i_sum_12
common/pixel.c:63:1: note: def_stmt: i_sum_12 = PHI <i_sum_168(18), 0(14)>
common/pixel.c:63:1: note: type of def: 2.
common/pixel.c:63:1: note: def_stmt is out of loop.
common/pixel.c:63:1: note: worklist: examine stmt: _21 = *_20;
common/pixel.c:63:1: note: worklist: examine stmt: _17 = *_16;
common/pixel.c:63:1: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _17 = *_16;
  stmt_b: _21 = *_20;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _17 = *_16;
  stmt_b: _17 = *_16;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_2)
  (chrec_b = {0B, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _21 = *_20;
  stmt_b: _21 = *_20;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_2)
  (chrec_b = {0B, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/pixel.c:63:1: note: === vect_determine_vectorization_factor ===
common/pixel.c:63:1: note: ==> examining phi: x_8 = PHI <x_27(15), 0(19)>

common/pixel.c:63:1: note: ==> examining phi: i_sum_78 = PHI <i_sum_26(15), i_sum_12(19)>

common/pixel.c:63:1: note: get vectype for scalar type:  int
common/pixel.c:63:1: note: vectype: vector(4) int
common/pixel.c:63:1: note: nunits = 4
common/pixel.c:63:1: note: ==> examining phi: ivtmp_162 = PHI <ivtmp_161(15), 8(19)>

common/pixel.c:63:1: note: ==> examining statement: # DEBUG x => x_8

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: # DEBUG i_sum => i_sum_78

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: _10 = (sizetype) x_8;

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: _16 = fenc_34 + _10;

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: _17 = *_16;

common/pixel.c:63:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:63:1: note: vectype: vector(16) unsigned char
common/pixel.c:63:1: note: nunits = 16
common/pixel.c:63:1: note: ==> examining statement: _18 = (int) _17;

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: _20 = pix2_79 + _10;

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: _21 = *_20;

common/pixel.c:63:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:63:1: note: vectype: vector(16) unsigned char
common/pixel.c:63:1: note: nunits = 16
common/pixel.c:63:1: note: ==> examining statement: _22 = (int) _21;

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: _23 = _18 - _22;

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: _24 = ABS_EXPR <_23>;

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: i_sum_26 = _24 + i_sum_78;

common/pixel.c:63:1: note: ==> examining pattern statement: patt_150 = SAD_EXPR <_17, _21, i_sum_78>;

common/pixel.c:63:1: note: get vectype for scalar type:  int
common/pixel.c:63:1: note: vectype: vector(4) int
common/pixel.c:63:1: note: nunits = 4
common/pixel.c:63:1: note: ==> examining statement: # DEBUG i_sum => i_sum_26

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: x_27 = x_8 + 1;

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: # DEBUG x => x_27

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: # DEBUG x => x_27

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: # DEBUG i_sum => i_sum_26

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: ivtmp_161 = ivtmp_162 - 1;

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: if (ivtmp_161 != 0)

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: vectorization factor = 16
common/pixel.c:63:1: note: === vect_analyze_data_refs_alignment ===
common/pixel.c:63:1: note: vect_compute_data_ref_alignment:
common/pixel.c:63:1: note: can't force alignment of ref: *_16
common/pixel.c:63:1: note: vect_compute_data_ref_alignment:
common/pixel.c:63:1: note: can't force alignment of ref: *_20
common/pixel.c:63:1: note: === vect_prune_runtime_alias_test_list ===
common/pixel.c:63:1: note: === vect_enhance_data_refs_alignment ===
common/pixel.c:63:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:63:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:63:1: note: vect_can_advance_ivs_p:
common/pixel.c:63:1: note: Analyze phi: x_8 = PHI <x_27(15), 0(19)>

common/pixel.c:63:1: note: Analyze phi: i_sum_78 = PHI <i_sum_26(15), i_sum_12(19)>

common/pixel.c:63:1: note: reduc phi. skip.
common/pixel.c:63:1: note: Analyze phi: ivtmp_162 = PHI <ivtmp_161(15), 8(19)>

common/pixel.c:63:1: note: Vectorizing an unaligned access.
common/pixel.c:63:1: note: Vectorizing an unaligned access.
common/pixel.c:63:1: note: === vect_analyze_slp ===
common/pixel.c:63:1: note: === vect_make_slp_decision ===
common/pixel.c:63:1: note: === vect_detect_hybrid_slp ===
common/pixel.c:63:1: note: === vect_analyze_loop_operations ===
common/pixel.c:63:1: note: examining phi: x_8 = PHI <x_27(15), 0(19)>

common/pixel.c:63:1: note: examining phi: i_sum_78 = PHI <i_sum_26(15), i_sum_12(19)>

common/pixel.c:63:1: note: examining phi: ivtmp_162 = PHI <ivtmp_161(15), 8(19)>

common/pixel.c:63:1: note: ==> examining statement: # DEBUG x => x_8
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: # DEBUG i_sum => i_sum_78
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: _10 = (sizetype) x_8;
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: _16 = fenc_34 + _10;
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: _17 = *_16;
common/pixel.c:63:1: note: vect_is_simple_use: operand *_16
common/pixel.c:63:1: note: not ssa-name.
common/pixel.c:63:1: note: use not simple.
common/pixel.c:63:1: note: vect_is_simple_use: operand *_16
common/pixel.c:63:1: note: not ssa-name.
common/pixel.c:63:1: note: use not simple.
common/pixel.c:63:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:63:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:63:1: note: ==> examining statement: _18 = (int) _17;
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: _20 = pix2_79 + _10;
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: _21 = *_20;
common/pixel.c:63:1: note: vect_is_simple_use: operand *_20
common/pixel.c:63:1: note: not ssa-name.
common/pixel.c:63:1: note: use not simple.
common/pixel.c:63:1: note: vect_is_simple_use: operand *_20
common/pixel.c:63:1: note: not ssa-name.
common/pixel.c:63:1: note: use not simple.
common/pixel.c:63:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:63:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:63:1: note: ==> examining statement: _22 = (int) _21;
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: _23 = _18 - _22;
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: _24 = ABS_EXPR <_23>;
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: i_sum_26 = _24 + i_sum_78;
common/pixel.c:63:1: note: ==> examining pattern statement: patt_150 = SAD_EXPR <_17, _21, i_sum_78>;
common/pixel.c:63:1: note: vect_is_simple_use: operand _17
common/pixel.c:63:1: note: def_stmt: _17 = *_16;
common/pixel.c:63:1: note: type of def: 3.
common/pixel.c:63:1: note: vect_is_simple_use: operand _21
common/pixel.c:63:1: note: def_stmt: _21 = *_20;
common/pixel.c:63:1: note: type of def: 3.
common/pixel.c:63:1: note: vect_is_simple_use: operand i_sum_78
common/pixel.c:63:1: note: def_stmt: i_sum_78 = PHI <i_sum_26(15), i_sum_12(19)>
common/pixel.c:63:1: note: type of def: 5.
common/pixel.c:63:1: note: detected reduction: i_sum_26 = _24 + i_sum_78;

common/pixel.c:63:1: note: reduc op not supported by target.
vect_model_reduction_cost: inside_cost = 1, prologue_cost = 1, epilogue_cost = 5 .
common/pixel.c:63:1: note: ==> examining statement: # DEBUG i_sum => i_sum_26
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: x_27 = x_8 + 1;
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: # DEBUG x => x_27
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: # DEBUG x => x_27
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: # DEBUG i_sum => i_sum_26
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: ivtmp_161 = ivtmp_162 - 1;
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: if (ivtmp_161 != 0)
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: vectorization_factor = 16, niters = 8
common/pixel.c:63:1: note: not vectorized: iteration count too small.
common/pixel.c:63:1: note: not vectorized: iteration count smaller than vectorization factor.
common/pixel.c:63:1: note: bad operation or unsupported loop bound.

Analyzing loop at common/pixel.c:63
common/pixel.c:63:1: note: ===== analyze_loop_nest =====
common/pixel.c:63:1: note: === vect_analyze_loop_form ===
common/pixel.c:63:1: note: ===== analyze_loop_nest_1 =====
common/pixel.c:63:1: note: === vect_analyze_loop_form ===
common/pixel.c:63:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 4
  exit condition [7, + , 4294967295] != 0
  bounds on difference of bases: -7 ... -7
  result:
    # of iterations 7, bounded by 7
common/pixel.c:63:1: note: Considering outer-loop vectorization.
common/pixel.c:63:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 3
  exit condition [3, + , 4294967295] != 0
  bounds on difference of bases: -3 ... -3
  result:
    # of iterations 3, bounded by 3
common/pixel.c:63:1: note: === vect_analyze_data_refs ===
Creating dr for *_38
analyze_innermost: success.
	base_address: fenc_105
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_2(D)
	Access function 0: {{0B, +, 16}_3, +, 1}_4
Creating dr for *_42
analyze_innermost: success.
	base_address: pix1_106
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix1_9(D)
	Access function 0: {{0B, +, pretmp_169}_3, +, 1}_4
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:63:1: note: analyze in outer-loop: *fenc_105
common/pixel.c:63:1: note: 	outer base_address: fenc_2(D)
	outer offset from base address: 0
	outer constant offset from base address: 0
	outer step: 16
	outer aligned to: 128
common/pixel.c:63:1: note: got vectype for stmt: _39 = *_38;
vector(16) unsigned char
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:63:1: note: analyze in outer-loop: *pix1_106
common/pixel.c:63:1: note: failed: evolution of base is not affine.
common/pixel.c:63:1: note: bad data references.

Analyzing loop at common/pixel.c:63
common/pixel.c:63:1: note: ===== analyze_loop_nest =====
common/pixel.c:63:1: note: === vect_analyze_loop_form ===
common/pixel.c:63:1: note: === get_loop_niters ===
common/pixel.c:63:1: note: === vect_analyze_data_refs ===
Creating dr for *_38
analyze_innermost: success.
	base_address: fenc_105
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_105
	Access function 0: {0B, +, 1}_4
Creating dr for *_42
analyze_innermost: success.
	base_address: pix1_106
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix1_106
	Access function 0: {0B, +, 1}_4
common/pixel.c:63:1: note: got vectype for stmt: _39 = *_38;
vector(16) unsigned char
common/pixel.c:63:1: note: got vectype for stmt: _43 = *_42;
vector(16) unsigned char
common/pixel.c:63:1: note: === vect_analyze_scalar_cycles ===
common/pixel.c:63:1: note: Analyze phi: x_104 = PHI <x_49(9), 0(13)>

common/pixel.c:63:1: note: Access function of PHI: {0, +, 1}_4
common/pixel.c:63:1: note: step: 1,  init: 0
common/pixel.c:63:1: note: Detected induction.
common/pixel.c:63:1: note: Analyze phi: i_sum_107 = PHI <i_sum_48(9), i_sum_109(13)>

common/pixel.c:63:1: note: Access function of PHI: {i_sum_109, +, _46}_4
common/pixel.c:63:1: note: step: _46,  init: i_sum_109
common/pixel.c:63:1: note: step unknown.
common/pixel.c:63:1: note: Analyze phi: ivtmp_158 = PHI <ivtmp_157(9), 8(13)>

common/pixel.c:63:1: note: Access function of PHI: {8, +, 4294967295}_4
common/pixel.c:63:1: note: step: 4294967295,  init: 8
common/pixel.c:63:1: note: Detected induction.
common/pixel.c:63:1: note: Analyze phi: i_sum_107 = PHI <i_sum_48(9), i_sum_109(13)>

common/pixel.c:63:1: note: detected reduction: i_sum_48 = _46 + i_sum_107;

common/pixel.c:63:1: note: Detected reduction.
common/pixel.c:63:1: note: === vect_pattern_recog ===
common/pixel.c:63:1: note: vect_is_simple_use: operand _46
common/pixel.c:63:1: note: def_stmt: _46 = ABS_EXPR <_45>;
common/pixel.c:63:1: note: type of def: 3.
common/pixel.c:63:1: note: vect_is_simple_use: operand _46
common/pixel.c:63:1: note: def_stmt: _46 = ABS_EXPR <_45>;
common/pixel.c:63:1: note: type of def: 3.
common/pixel.c:63:1: note: vect_is_simple_use: operand _46
common/pixel.c:63:1: note: def_stmt: _46 = ABS_EXPR <_45>;
common/pixel.c:63:1: note: type of def: 3.
common/pixel.c:63:1: note: vect_is_simple_use: operand _40
common/pixel.c:63:1: note: def_stmt: _40 = (int) _39;
common/pixel.c:63:1: note: type of def: 3.
common/pixel.c:63:1: note: vect_is_simple_use: operand _39
common/pixel.c:63:1: note: def_stmt: _39 = *_38;
common/pixel.c:63:1: note: type of def: 3.
common/pixel.c:63:1: note: vect_is_simple_use: operand _44
common/pixel.c:63:1: note: def_stmt: _44 = (int) _43;
common/pixel.c:63:1: note: type of def: 3.
common/pixel.c:63:1: note: vect_is_simple_use: operand _43
common/pixel.c:63:1: note: def_stmt: _43 = *_42;
common/pixel.c:63:1: note: type of def: 3.
common/pixel.c:63:1: note: vect_recog_sad_pattern: detected: patt_150 = SAD_EXPR <_39, _43, i_sum_107>;

common/pixel.c:63:1: note: pattern recognized: patt_150 = SAD_EXPR <_39, _43, i_sum_107>;
common/pixel.c:63:1: note: === vect_analyze_data_ref_accesses ===
common/pixel.c:63:1: note: === vect_mark_stmts_to_be_vectorized ===
common/pixel.c:63:1: note: init: phi relevant? x_104 = PHI <x_49(9), 0(13)>
common/pixel.c:63:1: note: init: phi relevant? i_sum_107 = PHI <i_sum_48(9), i_sum_109(13)>
common/pixel.c:63:1: note: init: phi relevant? ivtmp_158 = PHI <ivtmp_157(9), 8(13)>
common/pixel.c:63:1: note: init: stmt relevant? # DEBUG x => x_104
common/pixel.c:63:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_107
common/pixel.c:63:1: note: init: stmt relevant? _36 = (sizetype) x_104;
common/pixel.c:63:1: note: init: stmt relevant? _38 = fenc_105 + _36;
common/pixel.c:63:1: note: init: stmt relevant? _39 = *_38;
common/pixel.c:63:1: note: init: stmt relevant? _40 = (int) _39;
common/pixel.c:63:1: note: init: stmt relevant? _42 = pix1_106 + _36;
common/pixel.c:63:1: note: init: stmt relevant? _43 = *_42;
common/pixel.c:63:1: note: init: stmt relevant? _44 = (int) _43;
common/pixel.c:63:1: note: init: stmt relevant? _45 = _40 - _44;
common/pixel.c:63:1: note: init: stmt relevant? _46 = ABS_EXPR <_45>;
common/pixel.c:63:1: note: init: stmt relevant? i_sum_48 = _46 + i_sum_107;
common/pixel.c:63:1: note: vec_stmt_relevant_p: used out of loop.
common/pixel.c:63:1: note: mark relevant 0, live 1.
common/pixel.c:63:1: note: last stmt in pattern. don't mark relevant/live.
common/pixel.c:63:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_48
common/pixel.c:63:1: note: init: stmt relevant? x_49 = x_104 + 1;
common/pixel.c:63:1: note: init: stmt relevant? # DEBUG x => x_49
common/pixel.c:63:1: note: init: stmt relevant? # DEBUG x => x_49
common/pixel.c:63:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_48
common/pixel.c:63:1: note: init: stmt relevant? ivtmp_157 = ivtmp_158 - 1;
common/pixel.c:63:1: note: init: stmt relevant? if (ivtmp_157 != 0)
common/pixel.c:63:1: note: worklist: examine stmt: patt_150 = SAD_EXPR <_39, _43, i_sum_107>;
common/pixel.c:63:1: note: vect_is_simple_use: operand _39
common/pixel.c:63:1: note: def_stmt: _39 = *_38;
common/pixel.c:63:1: note: type of def: 3.
common/pixel.c:63:1: note: mark relevant 3, live 0.
common/pixel.c:63:1: note: vect_is_simple_use: operand _43
common/pixel.c:63:1: note: def_stmt: _43 = *_42;
common/pixel.c:63:1: note: type of def: 3.
common/pixel.c:63:1: note: mark relevant 3, live 0.
common/pixel.c:63:1: note: vect_is_simple_use: operand i_sum_107
common/pixel.c:63:1: note: def_stmt: i_sum_107 = PHI <i_sum_48(9), i_sum_109(13)>
common/pixel.c:63:1: note: type of def: 5.
common/pixel.c:63:1: note: mark relevant 3, live 0.
common/pixel.c:63:1: note: worklist: examine stmt: i_sum_107 = PHI <i_sum_48(9), i_sum_109(13)>
common/pixel.c:63:1: note: vect_is_simple_use: operand i_sum_48
common/pixel.c:63:1: note: def_stmt: i_sum_48 = _46 + i_sum_107;
common/pixel.c:63:1: note: type of def: 5.
common/pixel.c:63:1: note: reduc-stmt defining reduc-phi in the same nest.
common/pixel.c:63:1: note: vect_is_simple_use: operand i_sum_109
common/pixel.c:63:1: note: def_stmt: i_sum_109 = PHI <i_sum_166(12), 0(8)>
common/pixel.c:63:1: note: type of def: 2.
common/pixel.c:63:1: note: def_stmt is out of loop.
common/pixel.c:63:1: note: worklist: examine stmt: _43 = *_42;
common/pixel.c:63:1: note: worklist: examine stmt: _39 = *_38;
common/pixel.c:63:1: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _39 = *_38;
  stmt_b: _43 = *_42;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _39 = *_38;
  stmt_b: _39 = *_38;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_4)
  (chrec_b = {0B, +, 1}_4)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _43 = *_42;
  stmt_b: _43 = *_42;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_4)
  (chrec_b = {0B, +, 1}_4)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/pixel.c:63:1: note: === vect_determine_vectorization_factor ===
common/pixel.c:63:1: note: ==> examining phi: x_104 = PHI <x_49(9), 0(13)>

common/pixel.c:63:1: note: ==> examining phi: i_sum_107 = PHI <i_sum_48(9), i_sum_109(13)>

common/pixel.c:63:1: note: get vectype for scalar type:  int
common/pixel.c:63:1: note: vectype: vector(4) int
common/pixel.c:63:1: note: nunits = 4
common/pixel.c:63:1: note: ==> examining phi: ivtmp_158 = PHI <ivtmp_157(9), 8(13)>

common/pixel.c:63:1: note: ==> examining statement: # DEBUG x => x_104

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: # DEBUG i_sum => i_sum_107

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: _36 = (sizetype) x_104;

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: _38 = fenc_105 + _36;

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: _39 = *_38;

common/pixel.c:63:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:63:1: note: vectype: vector(16) unsigned char
common/pixel.c:63:1: note: nunits = 16
common/pixel.c:63:1: note: ==> examining statement: _40 = (int) _39;

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: _42 = pix1_106 + _36;

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: _43 = *_42;

common/pixel.c:63:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:63:1: note: vectype: vector(16) unsigned char
common/pixel.c:63:1: note: nunits = 16
common/pixel.c:63:1: note: ==> examining statement: _44 = (int) _43;

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: _45 = _40 - _44;

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: _46 = ABS_EXPR <_45>;

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: i_sum_48 = _46 + i_sum_107;

common/pixel.c:63:1: note: ==> examining pattern statement: patt_150 = SAD_EXPR <_39, _43, i_sum_107>;

common/pixel.c:63:1: note: get vectype for scalar type:  int
common/pixel.c:63:1: note: vectype: vector(4) int
common/pixel.c:63:1: note: nunits = 4
common/pixel.c:63:1: note: ==> examining statement: # DEBUG i_sum => i_sum_48

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: x_49 = x_104 + 1;

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: # DEBUG x => x_49

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: # DEBUG x => x_49

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: # DEBUG i_sum => i_sum_48

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: ivtmp_157 = ivtmp_158 - 1;

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: if (ivtmp_157 != 0)

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: vectorization factor = 16
common/pixel.c:63:1: note: === vect_analyze_data_refs_alignment ===
common/pixel.c:63:1: note: vect_compute_data_ref_alignment:
common/pixel.c:63:1: note: can't force alignment of ref: *_38
common/pixel.c:63:1: note: vect_compute_data_ref_alignment:
common/pixel.c:63:1: note: can't force alignment of ref: *_42
common/pixel.c:63:1: note: === vect_prune_runtime_alias_test_list ===
common/pixel.c:63:1: note: === vect_enhance_data_refs_alignment ===
common/pixel.c:63:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:63:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:63:1: note: vect_can_advance_ivs_p:
common/pixel.c:63:1: note: Analyze phi: x_104 = PHI <x_49(9), 0(13)>

common/pixel.c:63:1: note: Analyze phi: i_sum_107 = PHI <i_sum_48(9), i_sum_109(13)>

common/pixel.c:63:1: note: reduc phi. skip.
common/pixel.c:63:1: note: Analyze phi: ivtmp_158 = PHI <ivtmp_157(9), 8(13)>

common/pixel.c:63:1: note: Vectorizing an unaligned access.
common/pixel.c:63:1: note: Vectorizing an unaligned access.
common/pixel.c:63:1: note: === vect_analyze_slp ===
common/pixel.c:63:1: note: === vect_make_slp_decision ===
common/pixel.c:63:1: note: === vect_detect_hybrid_slp ===
common/pixel.c:63:1: note: === vect_analyze_loop_operations ===
common/pixel.c:63:1: note: examining phi: x_104 = PHI <x_49(9), 0(13)>

common/pixel.c:63:1: note: examining phi: i_sum_107 = PHI <i_sum_48(9), i_sum_109(13)>

common/pixel.c:63:1: note: examining phi: ivtmp_158 = PHI <ivtmp_157(9), 8(13)>

common/pixel.c:63:1: note: ==> examining statement: # DEBUG x => x_104
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: # DEBUG i_sum => i_sum_107
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: _36 = (sizetype) x_104;
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: _38 = fenc_105 + _36;
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: _39 = *_38;
common/pixel.c:63:1: note: vect_is_simple_use: operand *_38
common/pixel.c:63:1: note: not ssa-name.
common/pixel.c:63:1: note: use not simple.
common/pixel.c:63:1: note: vect_is_simple_use: operand *_38
common/pixel.c:63:1: note: not ssa-name.
common/pixel.c:63:1: note: use not simple.
common/pixel.c:63:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:63:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:63:1: note: ==> examining statement: _40 = (int) _39;
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: _42 = pix1_106 + _36;
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: _43 = *_42;
common/pixel.c:63:1: note: vect_is_simple_use: operand *_42
common/pixel.c:63:1: note: not ssa-name.
common/pixel.c:63:1: note: use not simple.
common/pixel.c:63:1: note: vect_is_simple_use: operand *_42
common/pixel.c:63:1: note: not ssa-name.
common/pixel.c:63:1: note: use not simple.
common/pixel.c:63:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:63:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:63:1: note: ==> examining statement: _44 = (int) _43;
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: _45 = _40 - _44;
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: _46 = ABS_EXPR <_45>;
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: i_sum_48 = _46 + i_sum_107;
common/pixel.c:63:1: note: ==> examining pattern statement: patt_150 = SAD_EXPR <_39, _43, i_sum_107>;
common/pixel.c:63:1: note: vect_is_simple_use: operand _39
common/pixel.c:63:1: note: def_stmt: _39 = *_38;
common/pixel.c:63:1: note: type of def: 3.
common/pixel.c:63:1: note: vect_is_simple_use: operand _43
common/pixel.c:63:1: note: def_stmt: _43 = *_42;
common/pixel.c:63:1: note: type of def: 3.
common/pixel.c:63:1: note: vect_is_simple_use: operand i_sum_107
common/pixel.c:63:1: note: def_stmt: i_sum_107 = PHI <i_sum_48(9), i_sum_109(13)>
common/pixel.c:63:1: note: type of def: 5.
common/pixel.c:63:1: note: detected reduction: i_sum_48 = _46 + i_sum_107;

common/pixel.c:63:1: note: reduc op not supported by target.
vect_model_reduction_cost: inside_cost = 1, prologue_cost = 1, epilogue_cost = 5 .
common/pixel.c:63:1: note: ==> examining statement: # DEBUG i_sum => i_sum_48
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: x_49 = x_104 + 1;
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: # DEBUG x => x_49
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: # DEBUG x => x_49
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: # DEBUG i_sum => i_sum_48
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: ivtmp_157 = ivtmp_158 - 1;
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: if (ivtmp_157 != 0)
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: vectorization_factor = 16, niters = 8
common/pixel.c:63:1: note: not vectorized: iteration count too small.
common/pixel.c:63:1: note: not vectorized: iteration count smaller than vectorization factor.
common/pixel.c:63:1: note: bad operation or unsupported loop bound.

Analyzing loop at common/pixel.c:63
common/pixel.c:63:1: note: ===== analyze_loop_nest =====
common/pixel.c:63:1: note: === vect_analyze_loop_form ===
common/pixel.c:63:1: note: ===== analyze_loop_nest_1 =====
common/pixel.c:63:1: note: === vect_analyze_loop_form ===
common/pixel.c:63:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 6
  exit condition [7, + , 4294967295] != 0
  bounds on difference of bases: -7 ... -7
  result:
    # of iterations 7, bounded by 7
common/pixel.c:63:1: note: Considering outer-loop vectorization.
common/pixel.c:63:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 5
  exit condition [3, + , 4294967295] != 0
  bounds on difference of bases: -3 ... -3
  result:
    # of iterations 3, bounded by 3
common/pixel.c:63:1: note: === vect_analyze_data_refs ===
Creating dr for *_60
analyze_innermost: success.
	base_address: fenc_111
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_2(D)
	Access function 0: {{0B, +, 16}_5, +, 1}_6
Creating dr for *_64
analyze_innermost: success.
	base_address: pix0_112
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix0_3(D)
	Access function 0: {{0B, +, pretmp_169}_5, +, 1}_6
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:63:1: note: analyze in outer-loop: *fenc_111
common/pixel.c:63:1: note: 	outer base_address: fenc_2(D)
	outer offset from base address: 0
	outer constant offset from base address: 0
	outer step: 16
	outer aligned to: 128
common/pixel.c:63:1: note: got vectype for stmt: _61 = *_60;
vector(16) unsigned char
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:63:1: note: analyze in outer-loop: *pix0_112
common/pixel.c:63:1: note: failed: evolution of base is not affine.
common/pixel.c:63:1: note: bad data references.

Analyzing loop at common/pixel.c:63
common/pixel.c:63:1: note: ===== analyze_loop_nest =====
common/pixel.c:63:1: note: === vect_analyze_loop_form ===
common/pixel.c:63:1: note: === get_loop_niters ===
common/pixel.c:63:1: note: === vect_analyze_data_refs ===
Creating dr for *_60
analyze_innermost: success.
	base_address: fenc_111
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_111
	Access function 0: {0B, +, 1}_6
Creating dr for *_64
analyze_innermost: success.
	base_address: pix0_112
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix0_112
	Access function 0: {0B, +, 1}_6
common/pixel.c:63:1: note: got vectype for stmt: _61 = *_60;
vector(16) unsigned char
common/pixel.c:63:1: note: got vectype for stmt: _65 = *_64;
vector(16) unsigned char
common/pixel.c:63:1: note: === vect_analyze_scalar_cycles ===
common/pixel.c:63:1: note: Analyze phi: x_110 = PHI <x_71(3), 0(7)>

common/pixel.c:63:1: note: Access function of PHI: {0, +, 1}_6
common/pixel.c:63:1: note: step: 1,  init: 0
common/pixel.c:63:1: note: Detected induction.
common/pixel.c:63:1: note: Analyze phi: i_sum_113 = PHI <i_sum_70(3), i_sum_115(7)>

common/pixel.c:63:1: note: Access function of PHI: {i_sum_115, +, _68}_6
common/pixel.c:63:1: note: step: _68,  init: i_sum_115
common/pixel.c:63:1: note: step unknown.
common/pixel.c:63:1: note: Analyze phi: ivtmp_154 = PHI <ivtmp_153(3), 8(7)>

common/pixel.c:63:1: note: Access function of PHI: {8, +, 4294967295}_6
common/pixel.c:63:1: note: step: 4294967295,  init: 8
common/pixel.c:63:1: note: Detected induction.
common/pixel.c:63:1: note: Analyze phi: i_sum_113 = PHI <i_sum_70(3), i_sum_115(7)>

common/pixel.c:63:1: note: detected reduction: i_sum_70 = _68 + i_sum_113;

common/pixel.c:63:1: note: Detected reduction.
common/pixel.c:63:1: note: === vect_pattern_recog ===
common/pixel.c:63:1: note: vect_is_simple_use: operand _68
common/pixel.c:63:1: note: def_stmt: _68 = ABS_EXPR <_67>;
common/pixel.c:63:1: note: type of def: 3.
common/pixel.c:63:1: note: vect_is_simple_use: operand _68
common/pixel.c:63:1: note: def_stmt: _68 = ABS_EXPR <_67>;
common/pixel.c:63:1: note: type of def: 3.
common/pixel.c:63:1: note: vect_is_simple_use: operand _68
common/pixel.c:63:1: note: def_stmt: _68 = ABS_EXPR <_67>;
common/pixel.c:63:1: note: type of def: 3.
common/pixel.c:63:1: note: vect_is_simple_use: operand _62
common/pixel.c:63:1: note: def_stmt: _62 = (int) _61;
common/pixel.c:63:1: note: type of def: 3.
common/pixel.c:63:1: note: vect_is_simple_use: operand _61
common/pixel.c:63:1: note: def_stmt: _61 = *_60;
common/pixel.c:63:1: note: type of def: 3.
common/pixel.c:63:1: note: vect_is_simple_use: operand _66
common/pixel.c:63:1: note: def_stmt: _66 = (int) _65;
common/pixel.c:63:1: note: type of def: 3.
common/pixel.c:63:1: note: vect_is_simple_use: operand _65
common/pixel.c:63:1: note: def_stmt: _65 = *_64;
common/pixel.c:63:1: note: type of def: 3.
common/pixel.c:63:1: note: vect_recog_sad_pattern: detected: patt_150 = SAD_EXPR <_61, _65, i_sum_113>;

common/pixel.c:63:1: note: pattern recognized: patt_150 = SAD_EXPR <_61, _65, i_sum_113>;
common/pixel.c:63:1: note: === vect_analyze_data_ref_accesses ===
common/pixel.c:63:1: note: === vect_mark_stmts_to_be_vectorized ===
common/pixel.c:63:1: note: init: phi relevant? x_110 = PHI <x_71(3), 0(7)>
common/pixel.c:63:1: note: init: phi relevant? i_sum_113 = PHI <i_sum_70(3), i_sum_115(7)>
common/pixel.c:63:1: note: init: phi relevant? ivtmp_154 = PHI <ivtmp_153(3), 8(7)>
common/pixel.c:63:1: note: init: stmt relevant? # DEBUG x => x_110
common/pixel.c:63:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_113
common/pixel.c:63:1: note: init: stmt relevant? _58 = (sizetype) x_110;
common/pixel.c:63:1: note: init: stmt relevant? _60 = fenc_111 + _58;
common/pixel.c:63:1: note: init: stmt relevant? _61 = *_60;
common/pixel.c:63:1: note: init: stmt relevant? _62 = (int) _61;
common/pixel.c:63:1: note: init: stmt relevant? _64 = pix0_112 + _58;
common/pixel.c:63:1: note: init: stmt relevant? _65 = *_64;
common/pixel.c:63:1: note: init: stmt relevant? _66 = (int) _65;
common/pixel.c:63:1: note: init: stmt relevant? _67 = _62 - _66;
common/pixel.c:63:1: note: init: stmt relevant? _68 = ABS_EXPR <_67>;
common/pixel.c:63:1: note: init: stmt relevant? i_sum_70 = _68 + i_sum_113;
common/pixel.c:63:1: note: vec_stmt_relevant_p: used out of loop.
common/pixel.c:63:1: note: mark relevant 0, live 1.
common/pixel.c:63:1: note: last stmt in pattern. don't mark relevant/live.
common/pixel.c:63:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_70
common/pixel.c:63:1: note: init: stmt relevant? x_71 = x_110 + 1;
common/pixel.c:63:1: note: init: stmt relevant? # DEBUG x => x_71
common/pixel.c:63:1: note: init: stmt relevant? # DEBUG x => x_71
common/pixel.c:63:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_70
common/pixel.c:63:1: note: init: stmt relevant? ivtmp_153 = ivtmp_154 - 1;
common/pixel.c:63:1: note: init: stmt relevant? if (ivtmp_153 != 0)
common/pixel.c:63:1: note: worklist: examine stmt: patt_150 = SAD_EXPR <_61, _65, i_sum_113>;
common/pixel.c:63:1: note: vect_is_simple_use: operand _61
common/pixel.c:63:1: note: def_stmt: _61 = *_60;
common/pixel.c:63:1: note: type of def: 3.
common/pixel.c:63:1: note: mark relevant 3, live 0.
common/pixel.c:63:1: note: vect_is_simple_use: operand _65
common/pixel.c:63:1: note: def_stmt: _65 = *_64;
common/pixel.c:63:1: note: type of def: 3.
common/pixel.c:63:1: note: mark relevant 3, live 0.
common/pixel.c:63:1: note: vect_is_simple_use: operand i_sum_113
common/pixel.c:63:1: note: def_stmt: i_sum_113 = PHI <i_sum_70(3), i_sum_115(7)>
common/pixel.c:63:1: note: type of def: 5.
common/pixel.c:63:1: note: mark relevant 3, live 0.
common/pixel.c:63:1: note: worklist: examine stmt: i_sum_113 = PHI <i_sum_70(3), i_sum_115(7)>
common/pixel.c:63:1: note: vect_is_simple_use: operand i_sum_70
common/pixel.c:63:1: note: def_stmt: i_sum_70 = _68 + i_sum_113;
common/pixel.c:63:1: note: type of def: 5.
common/pixel.c:63:1: note: reduc-stmt defining reduc-phi in the same nest.
common/pixel.c:63:1: note: vect_is_simple_use: operand i_sum_115
common/pixel.c:63:1: note: def_stmt: i_sum_115 = PHI <i_sum_164(6), 0(2)>
common/pixel.c:63:1: note: type of def: 2.
common/pixel.c:63:1: note: def_stmt is out of loop.
common/pixel.c:63:1: note: worklist: examine stmt: _65 = *_64;
common/pixel.c:63:1: note: worklist: examine stmt: _61 = *_60;
common/pixel.c:63:1: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _61 = *_60;
  stmt_b: _65 = *_64;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _61 = *_60;
  stmt_b: _61 = *_60;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_6)
  (chrec_b = {0B, +, 1}_6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _65 = *_64;
  stmt_b: _65 = *_64;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_6)
  (chrec_b = {0B, +, 1}_6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/pixel.c:63:1: note: === vect_determine_vectorization_factor ===
common/pixel.c:63:1: note: ==> examining phi: x_110 = PHI <x_71(3), 0(7)>

common/pixel.c:63:1: note: ==> examining phi: i_sum_113 = PHI <i_sum_70(3), i_sum_115(7)>

common/pixel.c:63:1: note: get vectype for scalar type:  int
common/pixel.c:63:1: note: vectype: vector(4) int
common/pixel.c:63:1: note: nunits = 4
common/pixel.c:63:1: note: ==> examining phi: ivtmp_154 = PHI <ivtmp_153(3), 8(7)>

common/pixel.c:63:1: note: ==> examining statement: # DEBUG x => x_110

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: # DEBUG i_sum => i_sum_113

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: _58 = (sizetype) x_110;

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: _60 = fenc_111 + _58;

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: _61 = *_60;

common/pixel.c:63:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:63:1: note: vectype: vector(16) unsigned char
common/pixel.c:63:1: note: nunits = 16
common/pixel.c:63:1: note: ==> examining statement: _62 = (int) _61;

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: _64 = pix0_112 + _58;

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: _65 = *_64;

common/pixel.c:63:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:63:1: note: vectype: vector(16) unsigned char
common/pixel.c:63:1: note: nunits = 16
common/pixel.c:63:1: note: ==> examining statement: _66 = (int) _65;

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: _67 = _62 - _66;

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: _68 = ABS_EXPR <_67>;

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: i_sum_70 = _68 + i_sum_113;

common/pixel.c:63:1: note: ==> examining pattern statement: patt_150 = SAD_EXPR <_61, _65, i_sum_113>;

common/pixel.c:63:1: note: get vectype for scalar type:  int
common/pixel.c:63:1: note: vectype: vector(4) int
common/pixel.c:63:1: note: nunits = 4
common/pixel.c:63:1: note: ==> examining statement: # DEBUG i_sum => i_sum_70

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: x_71 = x_110 + 1;

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: # DEBUG x => x_71

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: # DEBUG x => x_71

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: # DEBUG i_sum => i_sum_70

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: ivtmp_153 = ivtmp_154 - 1;

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: if (ivtmp_153 != 0)

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: vectorization factor = 16
common/pixel.c:63:1: note: === vect_analyze_data_refs_alignment ===
common/pixel.c:63:1: note: vect_compute_data_ref_alignment:
common/pixel.c:63:1: note: can't force alignment of ref: *_60
common/pixel.c:63:1: note: vect_compute_data_ref_alignment:
common/pixel.c:63:1: note: can't force alignment of ref: *_64
common/pixel.c:63:1: note: === vect_prune_runtime_alias_test_list ===
common/pixel.c:63:1: note: === vect_enhance_data_refs_alignment ===
common/pixel.c:63:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:63:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:63:1: note: vect_can_advance_ivs_p:
common/pixel.c:63:1: note: Analyze phi: x_110 = PHI <x_71(3), 0(7)>

common/pixel.c:63:1: note: Analyze phi: i_sum_113 = PHI <i_sum_70(3), i_sum_115(7)>

common/pixel.c:63:1: note: reduc phi. skip.
common/pixel.c:63:1: note: Analyze phi: ivtmp_154 = PHI <ivtmp_153(3), 8(7)>

common/pixel.c:63:1: note: Vectorizing an unaligned access.
common/pixel.c:63:1: note: Vectorizing an unaligned access.
common/pixel.c:63:1: note: === vect_analyze_slp ===
common/pixel.c:63:1: note: === vect_make_slp_decision ===
common/pixel.c:63:1: note: === vect_detect_hybrid_slp ===
common/pixel.c:63:1: note: === vect_analyze_loop_operations ===
common/pixel.c:63:1: note: examining phi: x_110 = PHI <x_71(3), 0(7)>

common/pixel.c:63:1: note: examining phi: i_sum_113 = PHI <i_sum_70(3), i_sum_115(7)>

common/pixel.c:63:1: note: examining phi: ivtmp_154 = PHI <ivtmp_153(3), 8(7)>

common/pixel.c:63:1: note: ==> examining statement: # DEBUG x => x_110
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: # DEBUG i_sum => i_sum_113
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: _58 = (sizetype) x_110;
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: _60 = fenc_111 + _58;
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: _61 = *_60;
common/pixel.c:63:1: note: vect_is_simple_use: operand *_60
common/pixel.c:63:1: note: not ssa-name.
common/pixel.c:63:1: note: use not simple.
common/pixel.c:63:1: note: vect_is_simple_use: operand *_60
common/pixel.c:63:1: note: not ssa-name.
common/pixel.c:63:1: note: use not simple.
common/pixel.c:63:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:63:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:63:1: note: ==> examining statement: _62 = (int) _61;
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: _64 = pix0_112 + _58;
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: _65 = *_64;
common/pixel.c:63:1: note: vect_is_simple_use: operand *_64
common/pixel.c:63:1: note: not ssa-name.
common/pixel.c:63:1: note: use not simple.
common/pixel.c:63:1: note: vect_is_simple_use: operand *_64
common/pixel.c:63:1: note: not ssa-name.
common/pixel.c:63:1: note: use not simple.
common/pixel.c:63:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:63:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:63:1: note: ==> examining statement: _66 = (int) _65;
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: _67 = _62 - _66;
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: _68 = ABS_EXPR <_67>;
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: i_sum_70 = _68 + i_sum_113;
common/pixel.c:63:1: note: ==> examining pattern statement: patt_150 = SAD_EXPR <_61, _65, i_sum_113>;
common/pixel.c:63:1: note: vect_is_simple_use: operand _61
common/pixel.c:63:1: note: def_stmt: _61 = *_60;
common/pixel.c:63:1: note: type of def: 3.
common/pixel.c:63:1: note: vect_is_simple_use: operand _65
common/pixel.c:63:1: note: def_stmt: _65 = *_64;
common/pixel.c:63:1: note: type of def: 3.
common/pixel.c:63:1: note: vect_is_simple_use: operand i_sum_113
common/pixel.c:63:1: note: def_stmt: i_sum_113 = PHI <i_sum_70(3), i_sum_115(7)>
common/pixel.c:63:1: note: type of def: 5.
common/pixel.c:63:1: note: detected reduction: i_sum_70 = _68 + i_sum_113;

common/pixel.c:63:1: note: reduc op not supported by target.
vect_model_reduction_cost: inside_cost = 1, prologue_cost = 1, epilogue_cost = 5 .
common/pixel.c:63:1: note: ==> examining statement: # DEBUG i_sum => i_sum_70
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: x_71 = x_110 + 1;
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: # DEBUG x => x_71
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: # DEBUG x => x_71
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: # DEBUG i_sum => i_sum_70
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: ivtmp_153 = ivtmp_154 - 1;
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: if (ivtmp_153 != 0)
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: vectorization_factor = 16, niters = 8
common/pixel.c:63:1: note: not vectorized: iteration count too small.
common/pixel.c:63:1: note: not vectorized: iteration count smaller than vectorization factor.
common/pixel.c:63:1: note: bad operation or unsupported loop bound.
common/pixel.c:387:1: note: vectorized 0 loops in function.
x264_pixel_sad_x3_8x4 (uint8_t * fenc, uint8_t * pix0, uint8_t * pix1, uint8_t * pix2, int i_stride, int * scores)
{
  int i_sum;
  int x;
  int y;
  int i_sum;
  int x;
  int y;
  int i_sum;
  int x;
  int y;
  sizetype _10;
  uint8_t * _16;
  unsigned char _17;
  int _18;
  uint8_t * _20;
  unsigned char _21;
  int _22;
  int _23;
  int _24;
  sizetype _36;
  uint8_t * _38;
  unsigned char _39;
  int _40;
  uint8_t * _42;
  unsigned char _43;
  int _44;
  int _45;
  int _46;
  sizetype _58;
  uint8_t * _60;
  unsigned char _61;
  int _62;
  uint8_t * _64;
  unsigned char _65;
  int _66;
  int _67;
  int _68;
  unsigned int ivtmp_151;
  unsigned int ivtmp_152;
  unsigned int ivtmp_153;
  unsigned int ivtmp_154;
  unsigned int ivtmp_155;
  unsigned int ivtmp_156;
  unsigned int ivtmp_157;
  unsigned int ivtmp_158;
  unsigned int ivtmp_159;
  unsigned int ivtmp_160;
  unsigned int ivtmp_161;
  unsigned int ivtmp_162;
  sizetype pretmp_169;

  <bb 2>:
  # DEBUG pix1 => fenc_2(D)
  # DEBUG i_stride_pix1 => 16
  # DEBUG pix2 => pix0_3(D)
  # DEBUG i_stride_pix2 => i_stride_4(D)
  # DEBUG i_sum => 0
  # DEBUG y => 0
  # DEBUG y => 0
  # DEBUG i_sum => 0
  # DEBUG pix2 => pix0_3(D)
  # DEBUG pix1 => fenc_2(D)
  pretmp_169 = (sizetype) i_stride_4(D);
  goto <bb 7>;

  <bb 3>:

  <bb 4>:
  # x_110 = PHI <x_71(3), 0(7)>
  # i_sum_113 = PHI <i_sum_70(3), i_sum_115(7)>
  # ivtmp_154 = PHI <ivtmp_153(3), 8(7)>
  # DEBUG x => x_110
  # DEBUG i_sum => i_sum_113
  _58 = (sizetype) x_110;
  _60 = fenc_111 + _58;
  _61 = *_60;
  _62 = (int) _61;
  _64 = pix0_112 + _58;
  _65 = *_64;
  _66 = (int) _65;
  _67 = _62 - _66;
  _68 = ABS_EXPR <_67>;
  i_sum_70 = _68 + i_sum_113;
  # DEBUG i_sum => i_sum_70
  x_71 = x_110 + 1;
  # DEBUG x => x_71
  # DEBUG x => x_71
  # DEBUG i_sum => i_sum_70
  ivtmp_153 = ivtmp_154 - 1;
  if (ivtmp_153 != 0)
    goto <bb 3>;
  else
    goto <bb 5>;

  <bb 5>:
  # i_sum_164 = PHI <i_sum_70(4)>
  fenc_72 = fenc_111 + 16;
  # DEBUG pix1 => fenc_72
  pix0_74 = pix0_112 + pretmp_169;
  # DEBUG pix2 => pix0_74
  y_76 = y_114 + 1;
  # DEBUG y => y_76
  # DEBUG y => y_76
  # DEBUG i_sum => i_sum_164
  # DEBUG pix2 => pix0_74
  # DEBUG pix1 => fenc_72
  ivtmp_151 = ivtmp_152 - 1;
  if (ivtmp_151 != 0)
    goto <bb 6>;
  else
    goto <bb 8>;

  <bb 6>:

  <bb 7>:
  # fenc_111 = PHI <fenc_72(6), fenc_2(D)(2)>
  # pix0_112 = PHI <pix0_74(6), pix0_3(D)(2)>
  # y_114 = PHI <y_76(6), 0(2)>
  # i_sum_115 = PHI <i_sum_164(6), 0(2)>
  # ivtmp_152 = PHI <ivtmp_151(6), 4(2)>
  # DEBUG y => y_114
  # DEBUG i_sum => i_sum_115
  # DEBUG pix2 => pix0_112
  # DEBUG pix1 => fenc_111
  # DEBUG x => 0
  # DEBUG i_sum => i_sum_115
  goto <bb 4>;

  <bb 8>:
  # i_sum_163 = PHI <i_sum_164(5)>
  # DEBUG pix1 => NULL
  # DEBUG i_stride_pix1 => NULL
  # DEBUG pix2 => NULL
  # DEBUG i_stride_pix2 => NULL
  # DEBUG y => NULL
  # DEBUG x => NULL
  # DEBUG i_sum => NULL
  *scores_6(D) = i_sum_163;
  # DEBUG pix1 => fenc_2(D)
  # DEBUG i_stride_pix1 => 16
  # DEBUG pix2 => pix1_9(D)
  # DEBUG i_stride_pix2 => i_stride_4(D)
  # DEBUG y => 0
  # DEBUG i_sum => 0
  # DEBUG pix2 => pix1_9(D)
  # DEBUG pix1 => fenc_2(D)
  goto <bb 13>;

  <bb 9>:

  <bb 10>:
  # x_104 = PHI <x_49(9), 0(13)>
  # i_sum_107 = PHI <i_sum_48(9), i_sum_109(13)>
  # ivtmp_158 = PHI <ivtmp_157(9), 8(13)>
  # DEBUG x => x_104
  # DEBUG i_sum => i_sum_107
  _36 = (sizetype) x_104;
  _38 = fenc_105 + _36;
  _39 = *_38;
  _40 = (int) _39;
  _42 = pix1_106 + _36;
  _43 = *_42;
  _44 = (int) _43;
  _45 = _40 - _44;
  _46 = ABS_EXPR <_45>;
  i_sum_48 = _46 + i_sum_107;
  # DEBUG i_sum => i_sum_48
  x_49 = x_104 + 1;
  # DEBUG x => x_49
  # DEBUG x => x_49
  # DEBUG i_sum => i_sum_48
  ivtmp_157 = ivtmp_158 - 1;
  if (ivtmp_157 != 0)
    goto <bb 9>;
  else
    goto <bb 11>;

  <bb 11>:
  # i_sum_166 = PHI <i_sum_48(10)>
  fenc_50 = fenc_105 + 16;
  # DEBUG pix1 => fenc_50
  pix1_52 = pix1_106 + pretmp_169;
  # DEBUG pix2 => pix1_52
  y_54 = y_108 + 1;
  # DEBUG y => y_54
  # DEBUG y => y_54
  # DEBUG i_sum => i_sum_166
  # DEBUG pix2 => pix1_52
  # DEBUG pix1 => fenc_50
  ivtmp_155 = ivtmp_156 - 1;
  if (ivtmp_155 != 0)
    goto <bb 12>;
  else
    goto <bb 14>;

  <bb 12>:

  <bb 13>:
  # fenc_105 = PHI <fenc_50(12), fenc_2(D)(8)>
  # pix1_106 = PHI <pix1_52(12), pix1_9(D)(8)>
  # y_108 = PHI <y_54(12), 0(8)>
  # i_sum_109 = PHI <i_sum_166(12), 0(8)>
  # ivtmp_156 = PHI <ivtmp_155(12), 4(8)>
  # DEBUG y => y_108
  # DEBUG i_sum => i_sum_109
  # DEBUG pix2 => pix1_106
  # DEBUG pix1 => fenc_105
  # DEBUG x => 0
  # DEBUG i_sum => i_sum_109
  goto <bb 10>;

  <bb 14>:
  # i_sum_165 = PHI <i_sum_166(11)>
  # DEBUG pix1 => NULL
  # DEBUG i_stride_pix1 => NULL
  # DEBUG pix2 => NULL
  # DEBUG i_stride_pix2 => NULL
  # DEBUG y => NULL
  # DEBUG x => NULL
  # DEBUG i_sum => NULL
  MEM[(int *)scores_6(D) + 4B] = i_sum_165;
  # DEBUG pix1 => fenc_2(D)
  # DEBUG i_stride_pix1 => 16
  # DEBUG pix2 => pix2_13(D)
  # DEBUG i_stride_pix2 => i_stride_4(D)
  # DEBUG y => 0
  # DEBUG i_sum => 0
  # DEBUG pix2 => pix2_13(D)
  # DEBUG pix1 => fenc_2(D)
  goto <bb 19>;

  <bb 15>:

  <bb 16>:
  # x_8 = PHI <x_27(15), 0(19)>
  # i_sum_78 = PHI <i_sum_26(15), i_sum_12(19)>
  # ivtmp_162 = PHI <ivtmp_161(15), 8(19)>
  # DEBUG x => x_8
  # DEBUG i_sum => i_sum_78
  _10 = (sizetype) x_8;
  _16 = fenc_34 + _10;
  _17 = *_16;
  _18 = (int) _17;
  _20 = pix2_79 + _10;
  _21 = *_20;
  _22 = (int) _21;
  _23 = _18 - _22;
  _24 = ABS_EXPR <_23>;
  i_sum_26 = _24 + i_sum_78;
  # DEBUG i_sum => i_sum_26
  x_27 = x_8 + 1;
  # DEBUG x => x_27
  # DEBUG x => x_27
  # DEBUG i_sum => i_sum_26
  ivtmp_161 = ivtmp_162 - 1;
  if (ivtmp_161 != 0)
    goto <bb 15>;
  else
    goto <bb 17>;

  <bb 17>:
  # i_sum_168 = PHI <i_sum_26(16)>
  fenc_28 = fenc_34 + 16;
  # DEBUG pix1 => fenc_28
  pix2_30 = pix2_79 + pretmp_169;
  # DEBUG pix2 => pix2_30
  y_32 = y_56 + 1;
  # DEBUG y => y_32
  # DEBUG y => y_32
  # DEBUG i_sum => i_sum_168
  # DEBUG pix2 => pix2_30
  # DEBUG pix1 => fenc_28
  ivtmp_159 = ivtmp_160 - 1;
  if (ivtmp_159 != 0)
    goto <bb 18>;
  else
    goto <bb 20>;

  <bb 18>:

  <bb 19>:
  # fenc_34 = PHI <fenc_28(18), fenc_2(D)(14)>
  # pix2_79 = PHI <pix2_30(18), pix2_13(D)(14)>
  # y_56 = PHI <y_32(18), 0(14)>
  # i_sum_12 = PHI <i_sum_168(18), 0(14)>
  # ivtmp_160 = PHI <ivtmp_159(18), 4(14)>
  # DEBUG y => y_56
  # DEBUG i_sum => i_sum_12
  # DEBUG pix2 => pix2_79
  # DEBUG pix1 => fenc_34
  # DEBUG x => 0
  # DEBUG i_sum => i_sum_12
  goto <bb 16>;

  <bb 20>:
  # i_sum_167 = PHI <i_sum_168(17)>
  # DEBUG pix1 => NULL
  # DEBUG i_stride_pix1 => NULL
  # DEBUG pix2 => NULL
  # DEBUG i_stride_pix2 => NULL
  # DEBUG y => NULL
  # DEBUG x => NULL
  # DEBUG i_sum => NULL
  MEM[(int *)scores_6(D) + 8B] = i_sum_167;
  return;

}



;; Function x264_pixel_sad_x4_8x4 (x264_pixel_sad_x4_8x4, funcdef_no=159, decl_uid=8094, cgraph_uid=159, symbol_order=202)


Analyzing loop at common/pixel.c:63
common/pixel.c:63:1: note: ===== analyze_loop_nest =====
common/pixel.c:63:1: note: === vect_analyze_loop_form ===
common/pixel.c:63:1: note: ===== analyze_loop_nest_1 =====
common/pixel.c:63:1: note: === vect_analyze_loop_form ===
common/pixel.c:63:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 2
  exit condition [7, + , 4294967295] != 0
  bounds on difference of bases: -7 ... -7
  result:
    # of iterations 7, bounded by 7
common/pixel.c:63:1: note: Considering outer-loop vectorization.
common/pixel.c:63:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 1
  exit condition [3, + , 4294967295] != 0
  bounds on difference of bases: -3 ... -3
  result:
    # of iterations 3, bounded by 3
common/pixel.c:63:1: note: === vect_analyze_data_refs ===
Creating dr for *_5
analyze_innermost: success.
	base_address: fenc_16
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_2(D)
	Access function 0: {{0B, +, 16}_1, +, 1}_2
Creating dr for *_23
analyze_innermost: success.
	base_address: pix3_103
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix3_17(D)
	Access function 0: {{0B, +, pretmp_223}_1, +, 1}_2
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:63:1: note: analyze in outer-loop: *fenc_16
common/pixel.c:63:1: note: 	outer base_address: fenc_2(D)
	outer offset from base address: 0
	outer constant offset from base address: 0
	outer step: 16
	outer aligned to: 128
common/pixel.c:63:1: note: got vectype for stmt: _20 = *_5;
vector(16) unsigned char
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:63:1: note: analyze in outer-loop: *pix3_103
common/pixel.c:63:1: note: failed: evolution of base is not affine.
common/pixel.c:63:1: note: bad data references.

Analyzing loop at common/pixel.c:63
common/pixel.c:63:1: note: ===== analyze_loop_nest =====
common/pixel.c:63:1: note: === vect_analyze_loop_form ===
common/pixel.c:63:1: note: === get_loop_niters ===
common/pixel.c:63:1: note: === vect_analyze_data_refs ===
Creating dr for *_5
analyze_innermost: success.
	base_address: fenc_16
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_16
	Access function 0: {0B, +, 1}_2
Creating dr for *_23
analyze_innermost: success.
	base_address: pix3_103
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix3_103
	Access function 0: {0B, +, 1}_2
common/pixel.c:63:1: note: got vectype for stmt: _20 = *_5;
vector(16) unsigned char
common/pixel.c:63:1: note: got vectype for stmt: _24 = *_23;
vector(16) unsigned char
common/pixel.c:63:1: note: === vect_analyze_scalar_cycles ===
common/pixel.c:63:1: note: Analyze phi: x_8 = PHI <x_30(21), 0(25)>

common/pixel.c:63:1: note: Access function of PHI: {0, +, 1}_2
common/pixel.c:63:1: note: step: 1,  init: 0
common/pixel.c:63:1: note: Detected induction.
common/pixel.c:63:1: note: Analyze phi: i_sum_59 = PHI <i_sum_29(21), i_sum_104(25)>

common/pixel.c:63:1: note: Access function of PHI: {i_sum_104, +, _27}_2
common/pixel.c:63:1: note: step: _27,  init: i_sum_104
common/pixel.c:63:1: note: step unknown.
common/pixel.c:63:1: note: Analyze phi: ivtmp_214 = PHI <ivtmp_213(21), 8(25)>

common/pixel.c:63:1: note: Access function of PHI: {8, +, 4294967295}_2
common/pixel.c:63:1: note: step: 4294967295,  init: 8
common/pixel.c:63:1: note: Detected induction.
common/pixel.c:63:1: note: Analyze phi: i_sum_59 = PHI <i_sum_29(21), i_sum_104(25)>

common/pixel.c:63:1: note: detected reduction: i_sum_29 = _27 + i_sum_59;

common/pixel.c:63:1: note: Detected reduction.
common/pixel.c:63:1: note: === vect_pattern_recog ===
common/pixel.c:63:1: note: vect_is_simple_use: operand _27
common/pixel.c:63:1: note: def_stmt: _27 = ABS_EXPR <_26>;
common/pixel.c:63:1: note: type of def: 3.
common/pixel.c:63:1: note: vect_is_simple_use: operand _27
common/pixel.c:63:1: note: def_stmt: _27 = ABS_EXPR <_26>;
common/pixel.c:63:1: note: type of def: 3.
common/pixel.c:63:1: note: vect_is_simple_use: operand _27
common/pixel.c:63:1: note: def_stmt: _27 = ABS_EXPR <_26>;
common/pixel.c:63:1: note: type of def: 3.
common/pixel.c:63:1: note: vect_is_simple_use: operand _21
common/pixel.c:63:1: note: def_stmt: _21 = (int) _20;
common/pixel.c:63:1: note: type of def: 3.
common/pixel.c:63:1: note: vect_is_simple_use: operand _20
common/pixel.c:63:1: note: def_stmt: _20 = *_5;
common/pixel.c:63:1: note: type of def: 3.
common/pixel.c:63:1: note: vect_is_simple_use: operand _25
common/pixel.c:63:1: note: def_stmt: _25 = (int) _24;
common/pixel.c:63:1: note: type of def: 3.
common/pixel.c:63:1: note: vect_is_simple_use: operand _24
common/pixel.c:63:1: note: def_stmt: _24 = *_23;
common/pixel.c:63:1: note: type of def: 3.
common/pixel.c:63:1: note: vect_recog_sad_pattern: detected: patt_198 = SAD_EXPR <_20, _24, i_sum_59>;

common/pixel.c:63:1: note: pattern recognized: patt_198 = SAD_EXPR <_20, _24, i_sum_59>;
common/pixel.c:63:1: note: === vect_analyze_data_ref_accesses ===
common/pixel.c:63:1: note: === vect_mark_stmts_to_be_vectorized ===
common/pixel.c:63:1: note: init: phi relevant? x_8 = PHI <x_30(21), 0(25)>
common/pixel.c:63:1: note: init: phi relevant? i_sum_59 = PHI <i_sum_29(21), i_sum_104(25)>
common/pixel.c:63:1: note: init: phi relevant? ivtmp_214 = PHI <ivtmp_213(21), 8(25)>
common/pixel.c:63:1: note: init: stmt relevant? # DEBUG x => x_8
common/pixel.c:63:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_59
common/pixel.c:63:1: note: init: stmt relevant? _14 = (sizetype) x_8;
common/pixel.c:63:1: note: init: stmt relevant? _5 = fenc_16 + _14;
common/pixel.c:63:1: note: init: stmt relevant? _20 = *_5;
common/pixel.c:63:1: note: init: stmt relevant? _21 = (int) _20;
common/pixel.c:63:1: note: init: stmt relevant? _23 = pix3_103 + _14;
common/pixel.c:63:1: note: init: stmt relevant? _24 = *_23;
common/pixel.c:63:1: note: init: stmt relevant? _25 = (int) _24;
common/pixel.c:63:1: note: init: stmt relevant? _26 = _21 - _25;
common/pixel.c:63:1: note: init: stmt relevant? _27 = ABS_EXPR <_26>;
common/pixel.c:63:1: note: init: stmt relevant? i_sum_29 = _27 + i_sum_59;
common/pixel.c:63:1: note: vec_stmt_relevant_p: used out of loop.
common/pixel.c:63:1: note: mark relevant 0, live 1.
common/pixel.c:63:1: note: last stmt in pattern. don't mark relevant/live.
common/pixel.c:63:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_29
common/pixel.c:63:1: note: init: stmt relevant? x_30 = x_8 + 1;
common/pixel.c:63:1: note: init: stmt relevant? # DEBUG x => x_30
common/pixel.c:63:1: note: init: stmt relevant? # DEBUG x => x_30
common/pixel.c:63:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_29
common/pixel.c:63:1: note: init: stmt relevant? ivtmp_213 = ivtmp_214 - 1;
common/pixel.c:63:1: note: init: stmt relevant? if (ivtmp_213 != 0)
common/pixel.c:63:1: note: worklist: examine stmt: patt_198 = SAD_EXPR <_20, _24, i_sum_59>;
common/pixel.c:63:1: note: vect_is_simple_use: operand _20
common/pixel.c:63:1: note: def_stmt: _20 = *_5;
common/pixel.c:63:1: note: type of def: 3.
common/pixel.c:63:1: note: mark relevant 3, live 0.
common/pixel.c:63:1: note: vect_is_simple_use: operand _24
common/pixel.c:63:1: note: def_stmt: _24 = *_23;
common/pixel.c:63:1: note: type of def: 3.
common/pixel.c:63:1: note: mark relevant 3, live 0.
common/pixel.c:63:1: note: vect_is_simple_use: operand i_sum_59
common/pixel.c:63:1: note: def_stmt: i_sum_59 = PHI <i_sum_29(21), i_sum_104(25)>
common/pixel.c:63:1: note: type of def: 5.
common/pixel.c:63:1: note: mark relevant 3, live 0.
common/pixel.c:63:1: note: worklist: examine stmt: i_sum_59 = PHI <i_sum_29(21), i_sum_104(25)>
common/pixel.c:63:1: note: vect_is_simple_use: operand i_sum_29
common/pixel.c:63:1: note: def_stmt: i_sum_29 = _27 + i_sum_59;
common/pixel.c:63:1: note: type of def: 5.
common/pixel.c:63:1: note: reduc-stmt defining reduc-phi in the same nest.
common/pixel.c:63:1: note: vect_is_simple_use: operand i_sum_104
common/pixel.c:63:1: note: def_stmt: i_sum_104 = PHI <i_sum_222(24), 0(20)>
common/pixel.c:63:1: note: type of def: 2.
common/pixel.c:63:1: note: def_stmt is out of loop.
common/pixel.c:63:1: note: worklist: examine stmt: _24 = *_23;
common/pixel.c:63:1: note: worklist: examine stmt: _20 = *_5;
common/pixel.c:63:1: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _20 = *_5;
  stmt_b: _24 = *_23;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _20 = *_5;
  stmt_b: _20 = *_5;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_2)
  (chrec_b = {0B, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _24 = *_23;
  stmt_b: _24 = *_23;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_2)
  (chrec_b = {0B, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/pixel.c:63:1: note: === vect_determine_vectorization_factor ===
common/pixel.c:63:1: note: ==> examining phi: x_8 = PHI <x_30(21), 0(25)>

common/pixel.c:63:1: note: ==> examining phi: i_sum_59 = PHI <i_sum_29(21), i_sum_104(25)>

common/pixel.c:63:1: note: get vectype for scalar type:  int
common/pixel.c:63:1: note: vectype: vector(4) int
common/pixel.c:63:1: note: nunits = 4
common/pixel.c:63:1: note: ==> examining phi: ivtmp_214 = PHI <ivtmp_213(21), 8(25)>

common/pixel.c:63:1: note: ==> examining statement: # DEBUG x => x_8

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: # DEBUG i_sum => i_sum_59

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: _14 = (sizetype) x_8;

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: _5 = fenc_16 + _14;

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: _20 = *_5;

common/pixel.c:63:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:63:1: note: vectype: vector(16) unsigned char
common/pixel.c:63:1: note: nunits = 16
common/pixel.c:63:1: note: ==> examining statement: _21 = (int) _20;

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: _23 = pix3_103 + _14;

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: _24 = *_23;

common/pixel.c:63:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:63:1: note: vectype: vector(16) unsigned char
common/pixel.c:63:1: note: nunits = 16
common/pixel.c:63:1: note: ==> examining statement: _25 = (int) _24;

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: _26 = _21 - _25;

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: _27 = ABS_EXPR <_26>;

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: i_sum_29 = _27 + i_sum_59;

common/pixel.c:63:1: note: ==> examining pattern statement: patt_198 = SAD_EXPR <_20, _24, i_sum_59>;

common/pixel.c:63:1: note: get vectype for scalar type:  int
common/pixel.c:63:1: note: vectype: vector(4) int
common/pixel.c:63:1: note: nunits = 4
common/pixel.c:63:1: note: ==> examining statement: # DEBUG i_sum => i_sum_29

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: x_30 = x_8 + 1;

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: # DEBUG x => x_30

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: # DEBUG x => x_30

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: # DEBUG i_sum => i_sum_29

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: ivtmp_213 = ivtmp_214 - 1;

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: if (ivtmp_213 != 0)

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: vectorization factor = 16
common/pixel.c:63:1: note: === vect_analyze_data_refs_alignment ===
common/pixel.c:63:1: note: vect_compute_data_ref_alignment:
common/pixel.c:63:1: note: can't force alignment of ref: *_5
common/pixel.c:63:1: note: vect_compute_data_ref_alignment:
common/pixel.c:63:1: note: can't force alignment of ref: *_23
common/pixel.c:63:1: note: === vect_prune_runtime_alias_test_list ===
common/pixel.c:63:1: note: === vect_enhance_data_refs_alignment ===
common/pixel.c:63:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:63:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:63:1: note: vect_can_advance_ivs_p:
common/pixel.c:63:1: note: Analyze phi: x_8 = PHI <x_30(21), 0(25)>

common/pixel.c:63:1: note: Analyze phi: i_sum_59 = PHI <i_sum_29(21), i_sum_104(25)>

common/pixel.c:63:1: note: reduc phi. skip.
common/pixel.c:63:1: note: Analyze phi: ivtmp_214 = PHI <ivtmp_213(21), 8(25)>

common/pixel.c:63:1: note: Vectorizing an unaligned access.
common/pixel.c:63:1: note: Vectorizing an unaligned access.
common/pixel.c:63:1: note: === vect_analyze_slp ===
common/pixel.c:63:1: note: === vect_make_slp_decision ===
common/pixel.c:63:1: note: === vect_detect_hybrid_slp ===
common/pixel.c:63:1: note: === vect_analyze_loop_operations ===
common/pixel.c:63:1: note: examining phi: x_8 = PHI <x_30(21), 0(25)>

common/pixel.c:63:1: note: examining phi: i_sum_59 = PHI <i_sum_29(21), i_sum_104(25)>

common/pixel.c:63:1: note: examining phi: ivtmp_214 = PHI <ivtmp_213(21), 8(25)>

common/pixel.c:63:1: note: ==> examining statement: # DEBUG x => x_8
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: # DEBUG i_sum => i_sum_59
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: _14 = (sizetype) x_8;
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: _5 = fenc_16 + _14;
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: _20 = *_5;
common/pixel.c:63:1: note: vect_is_simple_use: operand *_5
common/pixel.c:63:1: note: not ssa-name.
common/pixel.c:63:1: note: use not simple.
common/pixel.c:63:1: note: vect_is_simple_use: operand *_5
common/pixel.c:63:1: note: not ssa-name.
common/pixel.c:63:1: note: use not simple.
common/pixel.c:63:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:63:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:63:1: note: ==> examining statement: _21 = (int) _20;
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: _23 = pix3_103 + _14;
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: _24 = *_23;
common/pixel.c:63:1: note: vect_is_simple_use: operand *_23
common/pixel.c:63:1: note: not ssa-name.
common/pixel.c:63:1: note: use not simple.
common/pixel.c:63:1: note: vect_is_simple_use: operand *_23
common/pixel.c:63:1: note: not ssa-name.
common/pixel.c:63:1: note: use not simple.
common/pixel.c:63:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:63:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:63:1: note: ==> examining statement: _25 = (int) _24;
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: _26 = _21 - _25;
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: _27 = ABS_EXPR <_26>;
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: i_sum_29 = _27 + i_sum_59;
common/pixel.c:63:1: note: ==> examining pattern statement: patt_198 = SAD_EXPR <_20, _24, i_sum_59>;
common/pixel.c:63:1: note: vect_is_simple_use: operand _20
common/pixel.c:63:1: note: def_stmt: _20 = *_5;
common/pixel.c:63:1: note: type of def: 3.
common/pixel.c:63:1: note: vect_is_simple_use: operand _24
common/pixel.c:63:1: note: def_stmt: _24 = *_23;
common/pixel.c:63:1: note: type of def: 3.
common/pixel.c:63:1: note: vect_is_simple_use: operand i_sum_59
common/pixel.c:63:1: note: def_stmt: i_sum_59 = PHI <i_sum_29(21), i_sum_104(25)>
common/pixel.c:63:1: note: type of def: 5.
common/pixel.c:63:1: note: detected reduction: i_sum_29 = _27 + i_sum_59;

common/pixel.c:63:1: note: reduc op not supported by target.
vect_model_reduction_cost: inside_cost = 1, prologue_cost = 1, epilogue_cost = 5 .
common/pixel.c:63:1: note: ==> examining statement: # DEBUG i_sum => i_sum_29
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: x_30 = x_8 + 1;
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: # DEBUG x => x_30
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: # DEBUG x => x_30
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: # DEBUG i_sum => i_sum_29
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: ivtmp_213 = ivtmp_214 - 1;
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: if (ivtmp_213 != 0)
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: vectorization_factor = 16, niters = 8
common/pixel.c:63:1: note: not vectorized: iteration count too small.
common/pixel.c:63:1: note: not vectorized: iteration count smaller than vectorization factor.
common/pixel.c:63:1: note: bad operation or unsupported loop bound.

Analyzing loop at common/pixel.c:63
common/pixel.c:63:1: note: ===== analyze_loop_nest =====
common/pixel.c:63:1: note: === vect_analyze_loop_form ===
common/pixel.c:63:1: note: ===== analyze_loop_nest_1 =====
common/pixel.c:63:1: note: === vect_analyze_loop_form ===
common/pixel.c:63:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 4
  exit condition [7, + , 4294967295] != 0
  bounds on difference of bases: -7 ... -7
  result:
    # of iterations 7, bounded by 7
common/pixel.c:63:1: note: Considering outer-loop vectorization.
common/pixel.c:63:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 3
  exit condition [3, + , 4294967295] != 0
  bounds on difference of bases: -3 ... -3
  result:
    # of iterations 3, bounded by 3
common/pixel.c:63:1: note: === vect_analyze_data_refs ===
Creating dr for *_41
analyze_innermost: success.
	base_address: fenc_37
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_2(D)
	Access function 0: {{0B, +, 16}_3, +, 1}_4
Creating dr for *_45
analyze_innermost: success.
	base_address: pix2_137
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix2_13(D)
	Access function 0: {{0B, +, pretmp_223}_3, +, 1}_4
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:63:1: note: analyze in outer-loop: *fenc_37
common/pixel.c:63:1: note: 	outer base_address: fenc_2(D)
	outer offset from base address: 0
	outer constant offset from base address: 0
	outer step: 16
	outer aligned to: 128
common/pixel.c:63:1: note: got vectype for stmt: _42 = *_41;
vector(16) unsigned char
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:63:1: note: analyze in outer-loop: *pix2_137
common/pixel.c:63:1: note: failed: evolution of base is not affine.
common/pixel.c:63:1: note: bad data references.

Analyzing loop at common/pixel.c:63
common/pixel.c:63:1: note: ===== analyze_loop_nest =====
common/pixel.c:63:1: note: === vect_analyze_loop_form ===
common/pixel.c:63:1: note: === get_loop_niters ===
common/pixel.c:63:1: note: === vect_analyze_data_refs ===
Creating dr for *_41
analyze_innermost: success.
	base_address: fenc_37
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_37
	Access function 0: {0B, +, 1}_4
Creating dr for *_45
analyze_innermost: success.
	base_address: pix2_137
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix2_137
	Access function 0: {0B, +, 1}_4
common/pixel.c:63:1: note: got vectype for stmt: _42 = *_41;
vector(16) unsigned char
common/pixel.c:63:1: note: got vectype for stmt: _46 = *_45;
vector(16) unsigned char
common/pixel.c:63:1: note: === vect_analyze_scalar_cycles ===
common/pixel.c:63:1: note: Analyze phi: x_81 = PHI <x_52(15), 0(19)>

common/pixel.c:63:1: note: Access function of PHI: {0, +, 1}_4
common/pixel.c:63:1: note: step: 1,  init: 0
common/pixel.c:63:1: note: Detected induction.
common/pixel.c:63:1: note: Analyze phi: i_sum_138 = PHI <i_sum_51(15), i_sum_140(19)>

common/pixel.c:63:1: note: Access function of PHI: {i_sum_140, +, _49}_4
common/pixel.c:63:1: note: step: _49,  init: i_sum_140
common/pixel.c:63:1: note: step unknown.
common/pixel.c:63:1: note: Analyze phi: ivtmp_210 = PHI <ivtmp_209(15), 8(19)>

common/pixel.c:63:1: note: Access function of PHI: {8, +, 4294967295}_4
common/pixel.c:63:1: note: step: 4294967295,  init: 8
common/pixel.c:63:1: note: Detected induction.
common/pixel.c:63:1: note: Analyze phi: i_sum_138 = PHI <i_sum_51(15), i_sum_140(19)>

common/pixel.c:63:1: note: detected reduction: i_sum_51 = _49 + i_sum_138;

common/pixel.c:63:1: note: Detected reduction.
common/pixel.c:63:1: note: === vect_pattern_recog ===
common/pixel.c:63:1: note: vect_is_simple_use: operand _49
common/pixel.c:63:1: note: def_stmt: _49 = ABS_EXPR <_48>;
common/pixel.c:63:1: note: type of def: 3.
common/pixel.c:63:1: note: vect_is_simple_use: operand _49
common/pixel.c:63:1: note: def_stmt: _49 = ABS_EXPR <_48>;
common/pixel.c:63:1: note: type of def: 3.
common/pixel.c:63:1: note: vect_is_simple_use: operand _49
common/pixel.c:63:1: note: def_stmt: _49 = ABS_EXPR <_48>;
common/pixel.c:63:1: note: type of def: 3.
common/pixel.c:63:1: note: vect_is_simple_use: operand _43
common/pixel.c:63:1: note: def_stmt: _43 = (int) _42;
common/pixel.c:63:1: note: type of def: 3.
common/pixel.c:63:1: note: vect_is_simple_use: operand _42
common/pixel.c:63:1: note: def_stmt: _42 = *_41;
common/pixel.c:63:1: note: type of def: 3.
common/pixel.c:63:1: note: vect_is_simple_use: operand _47
common/pixel.c:63:1: note: def_stmt: _47 = (int) _46;
common/pixel.c:63:1: note: type of def: 3.
common/pixel.c:63:1: note: vect_is_simple_use: operand _46
common/pixel.c:63:1: note: def_stmt: _46 = *_45;
common/pixel.c:63:1: note: type of def: 3.
common/pixel.c:63:1: note: vect_recog_sad_pattern: detected: patt_198 = SAD_EXPR <_42, _46, i_sum_138>;

common/pixel.c:63:1: note: pattern recognized: patt_198 = SAD_EXPR <_42, _46, i_sum_138>;
common/pixel.c:63:1: note: === vect_analyze_data_ref_accesses ===
common/pixel.c:63:1: note: === vect_mark_stmts_to_be_vectorized ===
common/pixel.c:63:1: note: init: phi relevant? x_81 = PHI <x_52(15), 0(19)>
common/pixel.c:63:1: note: init: phi relevant? i_sum_138 = PHI <i_sum_51(15), i_sum_140(19)>
common/pixel.c:63:1: note: init: phi relevant? ivtmp_210 = PHI <ivtmp_209(15), 8(19)>
common/pixel.c:63:1: note: init: stmt relevant? # DEBUG x => x_81
common/pixel.c:63:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_138
common/pixel.c:63:1: note: init: stmt relevant? _39 = (sizetype) x_81;
common/pixel.c:63:1: note: init: stmt relevant? _41 = fenc_37 + _39;
common/pixel.c:63:1: note: init: stmt relevant? _42 = *_41;
common/pixel.c:63:1: note: init: stmt relevant? _43 = (int) _42;
common/pixel.c:63:1: note: init: stmt relevant? _45 = pix2_137 + _39;
common/pixel.c:63:1: note: init: stmt relevant? _46 = *_45;
common/pixel.c:63:1: note: init: stmt relevant? _47 = (int) _46;
common/pixel.c:63:1: note: init: stmt relevant? _48 = _43 - _47;
common/pixel.c:63:1: note: init: stmt relevant? _49 = ABS_EXPR <_48>;
common/pixel.c:63:1: note: init: stmt relevant? i_sum_51 = _49 + i_sum_138;
common/pixel.c:63:1: note: vec_stmt_relevant_p: used out of loop.
common/pixel.c:63:1: note: mark relevant 0, live 1.
common/pixel.c:63:1: note: last stmt in pattern. don't mark relevant/live.
common/pixel.c:63:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_51
common/pixel.c:63:1: note: init: stmt relevant? x_52 = x_81 + 1;
common/pixel.c:63:1: note: init: stmt relevant? # DEBUG x => x_52
common/pixel.c:63:1: note: init: stmt relevant? # DEBUG x => x_52
common/pixel.c:63:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_51
common/pixel.c:63:1: note: init: stmt relevant? ivtmp_209 = ivtmp_210 - 1;
common/pixel.c:63:1: note: init: stmt relevant? if (ivtmp_209 != 0)
common/pixel.c:63:1: note: worklist: examine stmt: patt_198 = SAD_EXPR <_42, _46, i_sum_138>;
common/pixel.c:63:1: note: vect_is_simple_use: operand _42
common/pixel.c:63:1: note: def_stmt: _42 = *_41;
common/pixel.c:63:1: note: type of def: 3.
common/pixel.c:63:1: note: mark relevant 3, live 0.
common/pixel.c:63:1: note: vect_is_simple_use: operand _46
common/pixel.c:63:1: note: def_stmt: _46 = *_45;
common/pixel.c:63:1: note: type of def: 3.
common/pixel.c:63:1: note: mark relevant 3, live 0.
common/pixel.c:63:1: note: vect_is_simple_use: operand i_sum_138
common/pixel.c:63:1: note: def_stmt: i_sum_138 = PHI <i_sum_51(15), i_sum_140(19)>
common/pixel.c:63:1: note: type of def: 5.
common/pixel.c:63:1: note: mark relevant 3, live 0.
common/pixel.c:63:1: note: worklist: examine stmt: i_sum_138 = PHI <i_sum_51(15), i_sum_140(19)>
common/pixel.c:63:1: note: vect_is_simple_use: operand i_sum_51
common/pixel.c:63:1: note: def_stmt: i_sum_51 = _49 + i_sum_138;
common/pixel.c:63:1: note: type of def: 5.
common/pixel.c:63:1: note: reduc-stmt defining reduc-phi in the same nest.
common/pixel.c:63:1: note: vect_is_simple_use: operand i_sum_140
common/pixel.c:63:1: note: def_stmt: i_sum_140 = PHI <i_sum_220(18), 0(14)>
common/pixel.c:63:1: note: type of def: 2.
common/pixel.c:63:1: note: def_stmt is out of loop.
common/pixel.c:63:1: note: worklist: examine stmt: _46 = *_45;
common/pixel.c:63:1: note: worklist: examine stmt: _42 = *_41;
common/pixel.c:63:1: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _42 = *_41;
  stmt_b: _46 = *_45;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _42 = *_41;
  stmt_b: _42 = *_41;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_4)
  (chrec_b = {0B, +, 1}_4)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _46 = *_45;
  stmt_b: _46 = *_45;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_4)
  (chrec_b = {0B, +, 1}_4)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/pixel.c:63:1: note: === vect_determine_vectorization_factor ===
common/pixel.c:63:1: note: ==> examining phi: x_81 = PHI <x_52(15), 0(19)>

common/pixel.c:63:1: note: ==> examining phi: i_sum_138 = PHI <i_sum_51(15), i_sum_140(19)>

common/pixel.c:63:1: note: get vectype for scalar type:  int
common/pixel.c:63:1: note: vectype: vector(4) int
common/pixel.c:63:1: note: nunits = 4
common/pixel.c:63:1: note: ==> examining phi: ivtmp_210 = PHI <ivtmp_209(15), 8(19)>

common/pixel.c:63:1: note: ==> examining statement: # DEBUG x => x_81

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: # DEBUG i_sum => i_sum_138

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: _39 = (sizetype) x_81;

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: _41 = fenc_37 + _39;

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: _42 = *_41;

common/pixel.c:63:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:63:1: note: vectype: vector(16) unsigned char
common/pixel.c:63:1: note: nunits = 16
common/pixel.c:63:1: note: ==> examining statement: _43 = (int) _42;

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: _45 = pix2_137 + _39;

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: _46 = *_45;

common/pixel.c:63:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:63:1: note: vectype: vector(16) unsigned char
common/pixel.c:63:1: note: nunits = 16
common/pixel.c:63:1: note: ==> examining statement: _47 = (int) _46;

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: _48 = _43 - _47;

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: _49 = ABS_EXPR <_48>;

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: i_sum_51 = _49 + i_sum_138;

common/pixel.c:63:1: note: ==> examining pattern statement: patt_198 = SAD_EXPR <_42, _46, i_sum_138>;

common/pixel.c:63:1: note: get vectype for scalar type:  int
common/pixel.c:63:1: note: vectype: vector(4) int
common/pixel.c:63:1: note: nunits = 4
common/pixel.c:63:1: note: ==> examining statement: # DEBUG i_sum => i_sum_51

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: x_52 = x_81 + 1;

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: # DEBUG x => x_52

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: # DEBUG x => x_52

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: # DEBUG i_sum => i_sum_51

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: ivtmp_209 = ivtmp_210 - 1;

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: if (ivtmp_209 != 0)

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: vectorization factor = 16
common/pixel.c:63:1: note: === vect_analyze_data_refs_alignment ===
common/pixel.c:63:1: note: vect_compute_data_ref_alignment:
common/pixel.c:63:1: note: can't force alignment of ref: *_41
common/pixel.c:63:1: note: vect_compute_data_ref_alignment:
common/pixel.c:63:1: note: can't force alignment of ref: *_45
common/pixel.c:63:1: note: === vect_prune_runtime_alias_test_list ===
common/pixel.c:63:1: note: === vect_enhance_data_refs_alignment ===
common/pixel.c:63:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:63:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:63:1: note: vect_can_advance_ivs_p:
common/pixel.c:63:1: note: Analyze phi: x_81 = PHI <x_52(15), 0(19)>

common/pixel.c:63:1: note: Analyze phi: i_sum_138 = PHI <i_sum_51(15), i_sum_140(19)>

common/pixel.c:63:1: note: reduc phi. skip.
common/pixel.c:63:1: note: Analyze phi: ivtmp_210 = PHI <ivtmp_209(15), 8(19)>

common/pixel.c:63:1: note: Vectorizing an unaligned access.
common/pixel.c:63:1: note: Vectorizing an unaligned access.
common/pixel.c:63:1: note: === vect_analyze_slp ===
common/pixel.c:63:1: note: === vect_make_slp_decision ===
common/pixel.c:63:1: note: === vect_detect_hybrid_slp ===
common/pixel.c:63:1: note: === vect_analyze_loop_operations ===
common/pixel.c:63:1: note: examining phi: x_81 = PHI <x_52(15), 0(19)>

common/pixel.c:63:1: note: examining phi: i_sum_138 = PHI <i_sum_51(15), i_sum_140(19)>

common/pixel.c:63:1: note: examining phi: ivtmp_210 = PHI <ivtmp_209(15), 8(19)>

common/pixel.c:63:1: note: ==> examining statement: # DEBUG x => x_81
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: # DEBUG i_sum => i_sum_138
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: _39 = (sizetype) x_81;
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: _41 = fenc_37 + _39;
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: _42 = *_41;
common/pixel.c:63:1: note: vect_is_simple_use: operand *_41
common/pixel.c:63:1: note: not ssa-name.
common/pixel.c:63:1: note: use not simple.
common/pixel.c:63:1: note: vect_is_simple_use: operand *_41
common/pixel.c:63:1: note: not ssa-name.
common/pixel.c:63:1: note: use not simple.
common/pixel.c:63:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:63:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:63:1: note: ==> examining statement: _43 = (int) _42;
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: _45 = pix2_137 + _39;
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: _46 = *_45;
common/pixel.c:63:1: note: vect_is_simple_use: operand *_45
common/pixel.c:63:1: note: not ssa-name.
common/pixel.c:63:1: note: use not simple.
common/pixel.c:63:1: note: vect_is_simple_use: operand *_45
common/pixel.c:63:1: note: not ssa-name.
common/pixel.c:63:1: note: use not simple.
common/pixel.c:63:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:63:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:63:1: note: ==> examining statement: _47 = (int) _46;
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: _48 = _43 - _47;
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: _49 = ABS_EXPR <_48>;
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: i_sum_51 = _49 + i_sum_138;
common/pixel.c:63:1: note: ==> examining pattern statement: patt_198 = SAD_EXPR <_42, _46, i_sum_138>;
common/pixel.c:63:1: note: vect_is_simple_use: operand _42
common/pixel.c:63:1: note: def_stmt: _42 = *_41;
common/pixel.c:63:1: note: type of def: 3.
common/pixel.c:63:1: note: vect_is_simple_use: operand _46
common/pixel.c:63:1: note: def_stmt: _46 = *_45;
common/pixel.c:63:1: note: type of def: 3.
common/pixel.c:63:1: note: vect_is_simple_use: operand i_sum_138
common/pixel.c:63:1: note: def_stmt: i_sum_138 = PHI <i_sum_51(15), i_sum_140(19)>
common/pixel.c:63:1: note: type of def: 5.
common/pixel.c:63:1: note: detected reduction: i_sum_51 = _49 + i_sum_138;

common/pixel.c:63:1: note: reduc op not supported by target.
vect_model_reduction_cost: inside_cost = 1, prologue_cost = 1, epilogue_cost = 5 .
common/pixel.c:63:1: note: ==> examining statement: # DEBUG i_sum => i_sum_51
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: x_52 = x_81 + 1;
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: # DEBUG x => x_52
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: # DEBUG x => x_52
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: # DEBUG i_sum => i_sum_51
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: ivtmp_209 = ivtmp_210 - 1;
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: if (ivtmp_209 != 0)
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: vectorization_factor = 16, niters = 8
common/pixel.c:63:1: note: not vectorized: iteration count too small.
common/pixel.c:63:1: note: not vectorized: iteration count smaller than vectorization factor.
common/pixel.c:63:1: note: bad operation or unsupported loop bound.

Analyzing loop at common/pixel.c:63
common/pixel.c:63:1: note: ===== analyze_loop_nest =====
common/pixel.c:63:1: note: === vect_analyze_loop_form ===
common/pixel.c:63:1: note: ===== analyze_loop_nest_1 =====
common/pixel.c:63:1: note: === vect_analyze_loop_form ===
common/pixel.c:63:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 6
  exit condition [7, + , 4294967295] != 0
  bounds on difference of bases: -7 ... -7
  result:
    # of iterations 7, bounded by 7
common/pixel.c:63:1: note: Considering outer-loop vectorization.
common/pixel.c:63:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 5
  exit condition [3, + , 4294967295] != 0
  bounds on difference of bases: -3 ... -3
  result:
    # of iterations 3, bounded by 3
common/pixel.c:63:1: note: === vect_analyze_data_refs ===
Creating dr for *_63
analyze_innermost: success.
	base_address: fenc_142
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_2(D)
	Access function 0: {{0B, +, 16}_5, +, 1}_6
Creating dr for *_67
analyze_innermost: success.
	base_address: pix1_143
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix1_9(D)
	Access function 0: {{0B, +, pretmp_223}_5, +, 1}_6
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:63:1: note: analyze in outer-loop: *fenc_142
common/pixel.c:63:1: note: 	outer base_address: fenc_2(D)
	outer offset from base address: 0
	outer constant offset from base address: 0
	outer step: 16
	outer aligned to: 128
common/pixel.c:63:1: note: got vectype for stmt: _64 = *_63;
vector(16) unsigned char
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:63:1: note: analyze in outer-loop: *pix1_143
common/pixel.c:63:1: note: failed: evolution of base is not affine.
common/pixel.c:63:1: note: bad data references.

Analyzing loop at common/pixel.c:63
common/pixel.c:63:1: note: ===== analyze_loop_nest =====
common/pixel.c:63:1: note: === vect_analyze_loop_form ===
common/pixel.c:63:1: note: === get_loop_niters ===
common/pixel.c:63:1: note: === vect_analyze_data_refs ===
Creating dr for *_63
analyze_innermost: success.
	base_address: fenc_142
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_142
	Access function 0: {0B, +, 1}_6
Creating dr for *_67
analyze_innermost: success.
	base_address: pix1_143
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix1_143
	Access function 0: {0B, +, 1}_6
common/pixel.c:63:1: note: got vectype for stmt: _64 = *_63;
vector(16) unsigned char
common/pixel.c:63:1: note: got vectype for stmt: _68 = *_67;
vector(16) unsigned char
common/pixel.c:63:1: note: === vect_analyze_scalar_cycles ===
common/pixel.c:63:1: note: Analyze phi: x_141 = PHI <x_74(9), 0(13)>

common/pixel.c:63:1: note: Access function of PHI: {0, +, 1}_6
common/pixel.c:63:1: note: step: 1,  init: 0
common/pixel.c:63:1: note: Detected induction.
common/pixel.c:63:1: note: Analyze phi: i_sum_144 = PHI <i_sum_73(9), i_sum_146(13)>

common/pixel.c:63:1: note: Access function of PHI: {i_sum_146, +, _71}_6
common/pixel.c:63:1: note: step: _71,  init: i_sum_146
common/pixel.c:63:1: note: step unknown.
common/pixel.c:63:1: note: Analyze phi: ivtmp_206 = PHI <ivtmp_205(9), 8(13)>

common/pixel.c:63:1: note: Access function of PHI: {8, +, 4294967295}_6
common/pixel.c:63:1: note: step: 4294967295,  init: 8
common/pixel.c:63:1: note: Detected induction.
common/pixel.c:63:1: note: Analyze phi: i_sum_144 = PHI <i_sum_73(9), i_sum_146(13)>

common/pixel.c:63:1: note: detected reduction: i_sum_73 = _71 + i_sum_144;

common/pixel.c:63:1: note: Detected reduction.
common/pixel.c:63:1: note: === vect_pattern_recog ===
common/pixel.c:63:1: note: vect_is_simple_use: operand _71
common/pixel.c:63:1: note: def_stmt: _71 = ABS_EXPR <_70>;
common/pixel.c:63:1: note: type of def: 3.
common/pixel.c:63:1: note: vect_is_simple_use: operand _71
common/pixel.c:63:1: note: def_stmt: _71 = ABS_EXPR <_70>;
common/pixel.c:63:1: note: type of def: 3.
common/pixel.c:63:1: note: vect_is_simple_use: operand _71
common/pixel.c:63:1: note: def_stmt: _71 = ABS_EXPR <_70>;
common/pixel.c:63:1: note: type of def: 3.
common/pixel.c:63:1: note: vect_is_simple_use: operand _65
common/pixel.c:63:1: note: def_stmt: _65 = (int) _64;
common/pixel.c:63:1: note: type of def: 3.
common/pixel.c:63:1: note: vect_is_simple_use: operand _64
common/pixel.c:63:1: note: def_stmt: _64 = *_63;
common/pixel.c:63:1: note: type of def: 3.
common/pixel.c:63:1: note: vect_is_simple_use: operand _69
common/pixel.c:63:1: note: def_stmt: _69 = (int) _68;
common/pixel.c:63:1: note: type of def: 3.
common/pixel.c:63:1: note: vect_is_simple_use: operand _68
common/pixel.c:63:1: note: def_stmt: _68 = *_67;
common/pixel.c:63:1: note: type of def: 3.
common/pixel.c:63:1: note: vect_recog_sad_pattern: detected: patt_198 = SAD_EXPR <_64, _68, i_sum_144>;

common/pixel.c:63:1: note: pattern recognized: patt_198 = SAD_EXPR <_64, _68, i_sum_144>;
common/pixel.c:63:1: note: === vect_analyze_data_ref_accesses ===
common/pixel.c:63:1: note: === vect_mark_stmts_to_be_vectorized ===
common/pixel.c:63:1: note: init: phi relevant? x_141 = PHI <x_74(9), 0(13)>
common/pixel.c:63:1: note: init: phi relevant? i_sum_144 = PHI <i_sum_73(9), i_sum_146(13)>
common/pixel.c:63:1: note: init: phi relevant? ivtmp_206 = PHI <ivtmp_205(9), 8(13)>
common/pixel.c:63:1: note: init: stmt relevant? # DEBUG x => x_141
common/pixel.c:63:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_144
common/pixel.c:63:1: note: init: stmt relevant? _61 = (sizetype) x_141;
common/pixel.c:63:1: note: init: stmt relevant? _63 = fenc_142 + _61;
common/pixel.c:63:1: note: init: stmt relevant? _64 = *_63;
common/pixel.c:63:1: note: init: stmt relevant? _65 = (int) _64;
common/pixel.c:63:1: note: init: stmt relevant? _67 = pix1_143 + _61;
common/pixel.c:63:1: note: init: stmt relevant? _68 = *_67;
common/pixel.c:63:1: note: init: stmt relevant? _69 = (int) _68;
common/pixel.c:63:1: note: init: stmt relevant? _70 = _65 - _69;
common/pixel.c:63:1: note: init: stmt relevant? _71 = ABS_EXPR <_70>;
common/pixel.c:63:1: note: init: stmt relevant? i_sum_73 = _71 + i_sum_144;
common/pixel.c:63:1: note: vec_stmt_relevant_p: used out of loop.
common/pixel.c:63:1: note: mark relevant 0, live 1.
common/pixel.c:63:1: note: last stmt in pattern. don't mark relevant/live.
common/pixel.c:63:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_73
common/pixel.c:63:1: note: init: stmt relevant? x_74 = x_141 + 1;
common/pixel.c:63:1: note: init: stmt relevant? # DEBUG x => x_74
common/pixel.c:63:1: note: init: stmt relevant? # DEBUG x => x_74
common/pixel.c:63:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_73
common/pixel.c:63:1: note: init: stmt relevant? ivtmp_205 = ivtmp_206 - 1;
common/pixel.c:63:1: note: init: stmt relevant? if (ivtmp_205 != 0)
common/pixel.c:63:1: note: worklist: examine stmt: patt_198 = SAD_EXPR <_64, _68, i_sum_144>;
common/pixel.c:63:1: note: vect_is_simple_use: operand _64
common/pixel.c:63:1: note: def_stmt: _64 = *_63;
common/pixel.c:63:1: note: type of def: 3.
common/pixel.c:63:1: note: mark relevant 3, live 0.
common/pixel.c:63:1: note: vect_is_simple_use: operand _68
common/pixel.c:63:1: note: def_stmt: _68 = *_67;
common/pixel.c:63:1: note: type of def: 3.
common/pixel.c:63:1: note: mark relevant 3, live 0.
common/pixel.c:63:1: note: vect_is_simple_use: operand i_sum_144
common/pixel.c:63:1: note: def_stmt: i_sum_144 = PHI <i_sum_73(9), i_sum_146(13)>
common/pixel.c:63:1: note: type of def: 5.
common/pixel.c:63:1: note: mark relevant 3, live 0.
common/pixel.c:63:1: note: worklist: examine stmt: i_sum_144 = PHI <i_sum_73(9), i_sum_146(13)>
common/pixel.c:63:1: note: vect_is_simple_use: operand i_sum_73
common/pixel.c:63:1: note: def_stmt: i_sum_73 = _71 + i_sum_144;
common/pixel.c:63:1: note: type of def: 5.
common/pixel.c:63:1: note: reduc-stmt defining reduc-phi in the same nest.
common/pixel.c:63:1: note: vect_is_simple_use: operand i_sum_146
common/pixel.c:63:1: note: def_stmt: i_sum_146 = PHI <i_sum_218(12), 0(8)>
common/pixel.c:63:1: note: type of def: 2.
common/pixel.c:63:1: note: def_stmt is out of loop.
common/pixel.c:63:1: note: worklist: examine stmt: _68 = *_67;
common/pixel.c:63:1: note: worklist: examine stmt: _64 = *_63;
common/pixel.c:63:1: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _64 = *_63;
  stmt_b: _68 = *_67;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _64 = *_63;
  stmt_b: _64 = *_63;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_6)
  (chrec_b = {0B, +, 1}_6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _68 = *_67;
  stmt_b: _68 = *_67;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_6)
  (chrec_b = {0B, +, 1}_6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/pixel.c:63:1: note: === vect_determine_vectorization_factor ===
common/pixel.c:63:1: note: ==> examining phi: x_141 = PHI <x_74(9), 0(13)>

common/pixel.c:63:1: note: ==> examining phi: i_sum_144 = PHI <i_sum_73(9), i_sum_146(13)>

common/pixel.c:63:1: note: get vectype for scalar type:  int
common/pixel.c:63:1: note: vectype: vector(4) int
common/pixel.c:63:1: note: nunits = 4
common/pixel.c:63:1: note: ==> examining phi: ivtmp_206 = PHI <ivtmp_205(9), 8(13)>

common/pixel.c:63:1: note: ==> examining statement: # DEBUG x => x_141

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: # DEBUG i_sum => i_sum_144

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: _61 = (sizetype) x_141;

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: _63 = fenc_142 + _61;

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: _64 = *_63;

common/pixel.c:63:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:63:1: note: vectype: vector(16) unsigned char
common/pixel.c:63:1: note: nunits = 16
common/pixel.c:63:1: note: ==> examining statement: _65 = (int) _64;

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: _67 = pix1_143 + _61;

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: _68 = *_67;

common/pixel.c:63:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:63:1: note: vectype: vector(16) unsigned char
common/pixel.c:63:1: note: nunits = 16
common/pixel.c:63:1: note: ==> examining statement: _69 = (int) _68;

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: _70 = _65 - _69;

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: _71 = ABS_EXPR <_70>;

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: i_sum_73 = _71 + i_sum_144;

common/pixel.c:63:1: note: ==> examining pattern statement: patt_198 = SAD_EXPR <_64, _68, i_sum_144>;

common/pixel.c:63:1: note: get vectype for scalar type:  int
common/pixel.c:63:1: note: vectype: vector(4) int
common/pixel.c:63:1: note: nunits = 4
common/pixel.c:63:1: note: ==> examining statement: # DEBUG i_sum => i_sum_73

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: x_74 = x_141 + 1;

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: # DEBUG x => x_74

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: # DEBUG x => x_74

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: # DEBUG i_sum => i_sum_73

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: ivtmp_205 = ivtmp_206 - 1;

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: if (ivtmp_205 != 0)

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: vectorization factor = 16
common/pixel.c:63:1: note: === vect_analyze_data_refs_alignment ===
common/pixel.c:63:1: note: vect_compute_data_ref_alignment:
common/pixel.c:63:1: note: can't force alignment of ref: *_63
common/pixel.c:63:1: note: vect_compute_data_ref_alignment:
common/pixel.c:63:1: note: can't force alignment of ref: *_67
common/pixel.c:63:1: note: === vect_prune_runtime_alias_test_list ===
common/pixel.c:63:1: note: === vect_enhance_data_refs_alignment ===
common/pixel.c:63:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:63:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:63:1: note: vect_can_advance_ivs_p:
common/pixel.c:63:1: note: Analyze phi: x_141 = PHI <x_74(9), 0(13)>

common/pixel.c:63:1: note: Analyze phi: i_sum_144 = PHI <i_sum_73(9), i_sum_146(13)>

common/pixel.c:63:1: note: reduc phi. skip.
common/pixel.c:63:1: note: Analyze phi: ivtmp_206 = PHI <ivtmp_205(9), 8(13)>

common/pixel.c:63:1: note: Vectorizing an unaligned access.
common/pixel.c:63:1: note: Vectorizing an unaligned access.
common/pixel.c:63:1: note: === vect_analyze_slp ===
common/pixel.c:63:1: note: === vect_make_slp_decision ===
common/pixel.c:63:1: note: === vect_detect_hybrid_slp ===
common/pixel.c:63:1: note: === vect_analyze_loop_operations ===
common/pixel.c:63:1: note: examining phi: x_141 = PHI <x_74(9), 0(13)>

common/pixel.c:63:1: note: examining phi: i_sum_144 = PHI <i_sum_73(9), i_sum_146(13)>

common/pixel.c:63:1: note: examining phi: ivtmp_206 = PHI <ivtmp_205(9), 8(13)>

common/pixel.c:63:1: note: ==> examining statement: # DEBUG x => x_141
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: # DEBUG i_sum => i_sum_144
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: _61 = (sizetype) x_141;
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: _63 = fenc_142 + _61;
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: _64 = *_63;
common/pixel.c:63:1: note: vect_is_simple_use: operand *_63
common/pixel.c:63:1: note: not ssa-name.
common/pixel.c:63:1: note: use not simple.
common/pixel.c:63:1: note: vect_is_simple_use: operand *_63
common/pixel.c:63:1: note: not ssa-name.
common/pixel.c:63:1: note: use not simple.
common/pixel.c:63:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:63:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:63:1: note: ==> examining statement: _65 = (int) _64;
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: _67 = pix1_143 + _61;
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: _68 = *_67;
common/pixel.c:63:1: note: vect_is_simple_use: operand *_67
common/pixel.c:63:1: note: not ssa-name.
common/pixel.c:63:1: note: use not simple.
common/pixel.c:63:1: note: vect_is_simple_use: operand *_67
common/pixel.c:63:1: note: not ssa-name.
common/pixel.c:63:1: note: use not simple.
common/pixel.c:63:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:63:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:63:1: note: ==> examining statement: _69 = (int) _68;
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: _70 = _65 - _69;
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: _71 = ABS_EXPR <_70>;
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: i_sum_73 = _71 + i_sum_144;
common/pixel.c:63:1: note: ==> examining pattern statement: patt_198 = SAD_EXPR <_64, _68, i_sum_144>;
common/pixel.c:63:1: note: vect_is_simple_use: operand _64
common/pixel.c:63:1: note: def_stmt: _64 = *_63;
common/pixel.c:63:1: note: type of def: 3.
common/pixel.c:63:1: note: vect_is_simple_use: operand _68
common/pixel.c:63:1: note: def_stmt: _68 = *_67;
common/pixel.c:63:1: note: type of def: 3.
common/pixel.c:63:1: note: vect_is_simple_use: operand i_sum_144
common/pixel.c:63:1: note: def_stmt: i_sum_144 = PHI <i_sum_73(9), i_sum_146(13)>
common/pixel.c:63:1: note: type of def: 5.
common/pixel.c:63:1: note: detected reduction: i_sum_73 = _71 + i_sum_144;

common/pixel.c:63:1: note: reduc op not supported by target.
vect_model_reduction_cost: inside_cost = 1, prologue_cost = 1, epilogue_cost = 5 .
common/pixel.c:63:1: note: ==> examining statement: # DEBUG i_sum => i_sum_73
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: x_74 = x_141 + 1;
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: # DEBUG x => x_74
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: # DEBUG x => x_74
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: # DEBUG i_sum => i_sum_73
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: ivtmp_205 = ivtmp_206 - 1;
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: if (ivtmp_205 != 0)
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: vectorization_factor = 16, niters = 8
common/pixel.c:63:1: note: not vectorized: iteration count too small.
common/pixel.c:63:1: note: not vectorized: iteration count smaller than vectorization factor.
common/pixel.c:63:1: note: bad operation or unsupported loop bound.

Analyzing loop at common/pixel.c:63
common/pixel.c:63:1: note: ===== analyze_loop_nest =====
common/pixel.c:63:1: note: === vect_analyze_loop_form ===
common/pixel.c:63:1: note: ===== analyze_loop_nest_1 =====
common/pixel.c:63:1: note: === vect_analyze_loop_form ===
common/pixel.c:63:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 8
  exit condition [7, + , 4294967295] != 0
  bounds on difference of bases: -7 ... -7
  result:
    # of iterations 7, bounded by 7
common/pixel.c:63:1: note: Considering outer-loop vectorization.
common/pixel.c:63:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 7
  exit condition [3, + , 4294967295] != 0
  bounds on difference of bases: -3 ... -3
  result:
    # of iterations 3, bounded by 3
common/pixel.c:63:1: note: === vect_analyze_data_refs ===
Creating dr for *_85
analyze_innermost: success.
	base_address: fenc_148
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_2(D)
	Access function 0: {{0B, +, 16}_7, +, 1}_8
Creating dr for *_89
analyze_innermost: success.
	base_address: pix0_149
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix0_3(D)
	Access function 0: {{0B, +, pretmp_223}_7, +, 1}_8
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:63:1: note: analyze in outer-loop: *fenc_148
common/pixel.c:63:1: note: 	outer base_address: fenc_2(D)
	outer offset from base address: 0
	outer constant offset from base address: 0
	outer step: 16
	outer aligned to: 128
common/pixel.c:63:1: note: got vectype for stmt: _86 = *_85;
vector(16) unsigned char
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:63:1: note: analyze in outer-loop: *pix0_149
common/pixel.c:63:1: note: failed: evolution of base is not affine.
common/pixel.c:63:1: note: bad data references.

Analyzing loop at common/pixel.c:63
common/pixel.c:63:1: note: ===== analyze_loop_nest =====
common/pixel.c:63:1: note: === vect_analyze_loop_form ===
common/pixel.c:63:1: note: === get_loop_niters ===
common/pixel.c:63:1: note: === vect_analyze_data_refs ===
Creating dr for *_85
analyze_innermost: success.
	base_address: fenc_148
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_148
	Access function 0: {0B, +, 1}_8
Creating dr for *_89
analyze_innermost: success.
	base_address: pix0_149
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix0_149
	Access function 0: {0B, +, 1}_8
common/pixel.c:63:1: note: got vectype for stmt: _86 = *_85;
vector(16) unsigned char
common/pixel.c:63:1: note: got vectype for stmt: _90 = *_89;
vector(16) unsigned char
common/pixel.c:63:1: note: === vect_analyze_scalar_cycles ===
common/pixel.c:63:1: note: Analyze phi: x_147 = PHI <x_96(3), 0(7)>

common/pixel.c:63:1: note: Access function of PHI: {0, +, 1}_8
common/pixel.c:63:1: note: step: 1,  init: 0
common/pixel.c:63:1: note: Detected induction.
common/pixel.c:63:1: note: Analyze phi: i_sum_150 = PHI <i_sum_95(3), i_sum_152(7)>

common/pixel.c:63:1: note: Access function of PHI: {i_sum_152, +, _93}_8
common/pixel.c:63:1: note: step: _93,  init: i_sum_152
common/pixel.c:63:1: note: step unknown.
common/pixel.c:63:1: note: Analyze phi: ivtmp_202 = PHI <ivtmp_201(3), 8(7)>

common/pixel.c:63:1: note: Access function of PHI: {8, +, 4294967295}_8
common/pixel.c:63:1: note: step: 4294967295,  init: 8
common/pixel.c:63:1: note: Detected induction.
common/pixel.c:63:1: note: Analyze phi: i_sum_150 = PHI <i_sum_95(3), i_sum_152(7)>

common/pixel.c:63:1: note: detected reduction: i_sum_95 = _93 + i_sum_150;

common/pixel.c:63:1: note: Detected reduction.
common/pixel.c:63:1: note: === vect_pattern_recog ===
common/pixel.c:63:1: note: vect_is_simple_use: operand _93
common/pixel.c:63:1: note: def_stmt: _93 = ABS_EXPR <_92>;
common/pixel.c:63:1: note: type of def: 3.
common/pixel.c:63:1: note: vect_is_simple_use: operand _93
common/pixel.c:63:1: note: def_stmt: _93 = ABS_EXPR <_92>;
common/pixel.c:63:1: note: type of def: 3.
common/pixel.c:63:1: note: vect_is_simple_use: operand _93
common/pixel.c:63:1: note: def_stmt: _93 = ABS_EXPR <_92>;
common/pixel.c:63:1: note: type of def: 3.
common/pixel.c:63:1: note: vect_is_simple_use: operand _87
common/pixel.c:63:1: note: def_stmt: _87 = (int) _86;
common/pixel.c:63:1: note: type of def: 3.
common/pixel.c:63:1: note: vect_is_simple_use: operand _86
common/pixel.c:63:1: note: def_stmt: _86 = *_85;
common/pixel.c:63:1: note: type of def: 3.
common/pixel.c:63:1: note: vect_is_simple_use: operand _91
common/pixel.c:63:1: note: def_stmt: _91 = (int) _90;
common/pixel.c:63:1: note: type of def: 3.
common/pixel.c:63:1: note: vect_is_simple_use: operand _90
common/pixel.c:63:1: note: def_stmt: _90 = *_89;
common/pixel.c:63:1: note: type of def: 3.
common/pixel.c:63:1: note: vect_recog_sad_pattern: detected: patt_198 = SAD_EXPR <_86, _90, i_sum_150>;

common/pixel.c:63:1: note: pattern recognized: patt_198 = SAD_EXPR <_86, _90, i_sum_150>;
common/pixel.c:63:1: note: === vect_analyze_data_ref_accesses ===
common/pixel.c:63:1: note: === vect_mark_stmts_to_be_vectorized ===
common/pixel.c:63:1: note: init: phi relevant? x_147 = PHI <x_96(3), 0(7)>
common/pixel.c:63:1: note: init: phi relevant? i_sum_150 = PHI <i_sum_95(3), i_sum_152(7)>
common/pixel.c:63:1: note: init: phi relevant? ivtmp_202 = PHI <ivtmp_201(3), 8(7)>
common/pixel.c:63:1: note: init: stmt relevant? # DEBUG x => x_147
common/pixel.c:63:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_150
common/pixel.c:63:1: note: init: stmt relevant? _83 = (sizetype) x_147;
common/pixel.c:63:1: note: init: stmt relevant? _85 = fenc_148 + _83;
common/pixel.c:63:1: note: init: stmt relevant? _86 = *_85;
common/pixel.c:63:1: note: init: stmt relevant? _87 = (int) _86;
common/pixel.c:63:1: note: init: stmt relevant? _89 = pix0_149 + _83;
common/pixel.c:63:1: note: init: stmt relevant? _90 = *_89;
common/pixel.c:63:1: note: init: stmt relevant? _91 = (int) _90;
common/pixel.c:63:1: note: init: stmt relevant? _92 = _87 - _91;
common/pixel.c:63:1: note: init: stmt relevant? _93 = ABS_EXPR <_92>;
common/pixel.c:63:1: note: init: stmt relevant? i_sum_95 = _93 + i_sum_150;
common/pixel.c:63:1: note: vec_stmt_relevant_p: used out of loop.
common/pixel.c:63:1: note: mark relevant 0, live 1.
common/pixel.c:63:1: note: last stmt in pattern. don't mark relevant/live.
common/pixel.c:63:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_95
common/pixel.c:63:1: note: init: stmt relevant? x_96 = x_147 + 1;
common/pixel.c:63:1: note: init: stmt relevant? # DEBUG x => x_96
common/pixel.c:63:1: note: init: stmt relevant? # DEBUG x => x_96
common/pixel.c:63:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_95
common/pixel.c:63:1: note: init: stmt relevant? ivtmp_201 = ivtmp_202 - 1;
common/pixel.c:63:1: note: init: stmt relevant? if (ivtmp_201 != 0)
common/pixel.c:63:1: note: worklist: examine stmt: patt_198 = SAD_EXPR <_86, _90, i_sum_150>;
common/pixel.c:63:1: note: vect_is_simple_use: operand _86
common/pixel.c:63:1: note: def_stmt: _86 = *_85;
common/pixel.c:63:1: note: type of def: 3.
common/pixel.c:63:1: note: mark relevant 3, live 0.
common/pixel.c:63:1: note: vect_is_simple_use: operand _90
common/pixel.c:63:1: note: def_stmt: _90 = *_89;
common/pixel.c:63:1: note: type of def: 3.
common/pixel.c:63:1: note: mark relevant 3, live 0.
common/pixel.c:63:1: note: vect_is_simple_use: operand i_sum_150
common/pixel.c:63:1: note: def_stmt: i_sum_150 = PHI <i_sum_95(3), i_sum_152(7)>
common/pixel.c:63:1: note: type of def: 5.
common/pixel.c:63:1: note: mark relevant 3, live 0.
common/pixel.c:63:1: note: worklist: examine stmt: i_sum_150 = PHI <i_sum_95(3), i_sum_152(7)>
common/pixel.c:63:1: note: vect_is_simple_use: operand i_sum_95
common/pixel.c:63:1: note: def_stmt: i_sum_95 = _93 + i_sum_150;
common/pixel.c:63:1: note: type of def: 5.
common/pixel.c:63:1: note: reduc-stmt defining reduc-phi in the same nest.
common/pixel.c:63:1: note: vect_is_simple_use: operand i_sum_152
common/pixel.c:63:1: note: def_stmt: i_sum_152 = PHI <i_sum_216(6), 0(2)>
common/pixel.c:63:1: note: type of def: 2.
common/pixel.c:63:1: note: def_stmt is out of loop.
common/pixel.c:63:1: note: worklist: examine stmt: _90 = *_89;
common/pixel.c:63:1: note: worklist: examine stmt: _86 = *_85;
common/pixel.c:63:1: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _86 = *_85;
  stmt_b: _90 = *_89;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _86 = *_85;
  stmt_b: _86 = *_85;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_8)
  (chrec_b = {0B, +, 1}_8)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _90 = *_89;
  stmt_b: _90 = *_89;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_8)
  (chrec_b = {0B, +, 1}_8)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/pixel.c:63:1: note: === vect_determine_vectorization_factor ===
common/pixel.c:63:1: note: ==> examining phi: x_147 = PHI <x_96(3), 0(7)>

common/pixel.c:63:1: note: ==> examining phi: i_sum_150 = PHI <i_sum_95(3), i_sum_152(7)>

common/pixel.c:63:1: note: get vectype for scalar type:  int
common/pixel.c:63:1: note: vectype: vector(4) int
common/pixel.c:63:1: note: nunits = 4
common/pixel.c:63:1: note: ==> examining phi: ivtmp_202 = PHI <ivtmp_201(3), 8(7)>

common/pixel.c:63:1: note: ==> examining statement: # DEBUG x => x_147

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: # DEBUG i_sum => i_sum_150

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: _83 = (sizetype) x_147;

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: _85 = fenc_148 + _83;

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: _86 = *_85;

common/pixel.c:63:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:63:1: note: vectype: vector(16) unsigned char
common/pixel.c:63:1: note: nunits = 16
common/pixel.c:63:1: note: ==> examining statement: _87 = (int) _86;

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: _89 = pix0_149 + _83;

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: _90 = *_89;

common/pixel.c:63:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:63:1: note: vectype: vector(16) unsigned char
common/pixel.c:63:1: note: nunits = 16
common/pixel.c:63:1: note: ==> examining statement: _91 = (int) _90;

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: _92 = _87 - _91;

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: _93 = ABS_EXPR <_92>;

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: i_sum_95 = _93 + i_sum_150;

common/pixel.c:63:1: note: ==> examining pattern statement: patt_198 = SAD_EXPR <_86, _90, i_sum_150>;

common/pixel.c:63:1: note: get vectype for scalar type:  int
common/pixel.c:63:1: note: vectype: vector(4) int
common/pixel.c:63:1: note: nunits = 4
common/pixel.c:63:1: note: ==> examining statement: # DEBUG i_sum => i_sum_95

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: x_96 = x_147 + 1;

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: # DEBUG x => x_96

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: # DEBUG x => x_96

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: # DEBUG i_sum => i_sum_95

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: ivtmp_201 = ivtmp_202 - 1;

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: ==> examining statement: if (ivtmp_201 != 0)

common/pixel.c:63:1: note: skip.
common/pixel.c:63:1: note: vectorization factor = 16
common/pixel.c:63:1: note: === vect_analyze_data_refs_alignment ===
common/pixel.c:63:1: note: vect_compute_data_ref_alignment:
common/pixel.c:63:1: note: can't force alignment of ref: *_85
common/pixel.c:63:1: note: vect_compute_data_ref_alignment:
common/pixel.c:63:1: note: can't force alignment of ref: *_89
common/pixel.c:63:1: note: === vect_prune_runtime_alias_test_list ===
common/pixel.c:63:1: note: === vect_enhance_data_refs_alignment ===
common/pixel.c:63:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:63:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:63:1: note: vect_can_advance_ivs_p:
common/pixel.c:63:1: note: Analyze phi: x_147 = PHI <x_96(3), 0(7)>

common/pixel.c:63:1: note: Analyze phi: i_sum_150 = PHI <i_sum_95(3), i_sum_152(7)>

common/pixel.c:63:1: note: reduc phi. skip.
common/pixel.c:63:1: note: Analyze phi: ivtmp_202 = PHI <ivtmp_201(3), 8(7)>

common/pixel.c:63:1: note: Vectorizing an unaligned access.
common/pixel.c:63:1: note: Vectorizing an unaligned access.
common/pixel.c:63:1: note: === vect_analyze_slp ===
common/pixel.c:63:1: note: === vect_make_slp_decision ===
common/pixel.c:63:1: note: === vect_detect_hybrid_slp ===
common/pixel.c:63:1: note: === vect_analyze_loop_operations ===
common/pixel.c:63:1: note: examining phi: x_147 = PHI <x_96(3), 0(7)>

common/pixel.c:63:1: note: examining phi: i_sum_150 = PHI <i_sum_95(3), i_sum_152(7)>

common/pixel.c:63:1: note: examining phi: ivtmp_202 = PHI <ivtmp_201(3), 8(7)>

common/pixel.c:63:1: note: ==> examining statement: # DEBUG x => x_147
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: # DEBUG i_sum => i_sum_150
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: _83 = (sizetype) x_147;
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: _85 = fenc_148 + _83;
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: _86 = *_85;
common/pixel.c:63:1: note: vect_is_simple_use: operand *_85
common/pixel.c:63:1: note: not ssa-name.
common/pixel.c:63:1: note: use not simple.
common/pixel.c:63:1: note: vect_is_simple_use: operand *_85
common/pixel.c:63:1: note: not ssa-name.
common/pixel.c:63:1: note: use not simple.
common/pixel.c:63:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:63:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:63:1: note: ==> examining statement: _87 = (int) _86;
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: _89 = pix0_149 + _83;
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: _90 = *_89;
common/pixel.c:63:1: note: vect_is_simple_use: operand *_89
common/pixel.c:63:1: note: not ssa-name.
common/pixel.c:63:1: note: use not simple.
common/pixel.c:63:1: note: vect_is_simple_use: operand *_89
common/pixel.c:63:1: note: not ssa-name.
common/pixel.c:63:1: note: use not simple.
common/pixel.c:63:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:63:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:63:1: note: ==> examining statement: _91 = (int) _90;
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: _92 = _87 - _91;
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: _93 = ABS_EXPR <_92>;
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: i_sum_95 = _93 + i_sum_150;
common/pixel.c:63:1: note: ==> examining pattern statement: patt_198 = SAD_EXPR <_86, _90, i_sum_150>;
common/pixel.c:63:1: note: vect_is_simple_use: operand _86
common/pixel.c:63:1: note: def_stmt: _86 = *_85;
common/pixel.c:63:1: note: type of def: 3.
common/pixel.c:63:1: note: vect_is_simple_use: operand _90
common/pixel.c:63:1: note: def_stmt: _90 = *_89;
common/pixel.c:63:1: note: type of def: 3.
common/pixel.c:63:1: note: vect_is_simple_use: operand i_sum_150
common/pixel.c:63:1: note: def_stmt: i_sum_150 = PHI <i_sum_95(3), i_sum_152(7)>
common/pixel.c:63:1: note: type of def: 5.
common/pixel.c:63:1: note: detected reduction: i_sum_95 = _93 + i_sum_150;

common/pixel.c:63:1: note: reduc op not supported by target.
vect_model_reduction_cost: inside_cost = 1, prologue_cost = 1, epilogue_cost = 5 .
common/pixel.c:63:1: note: ==> examining statement: # DEBUG i_sum => i_sum_95
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: x_96 = x_147 + 1;
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: # DEBUG x => x_96
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: # DEBUG x => x_96
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: # DEBUG i_sum => i_sum_95
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: ivtmp_201 = ivtmp_202 - 1;
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: ==> examining statement: if (ivtmp_201 != 0)
common/pixel.c:63:1: note: irrelevant.
common/pixel.c:63:1: note: vectorization_factor = 16, niters = 8
common/pixel.c:63:1: note: not vectorized: iteration count too small.
common/pixel.c:63:1: note: not vectorized: iteration count smaller than vectorization factor.
common/pixel.c:63:1: note: bad operation or unsupported loop bound.
common/pixel.c:387:1: note: vectorized 0 loops in function.
x264_pixel_sad_x4_8x4 (uint8_t * fenc, uint8_t * pix0, uint8_t * pix1, uint8_t * pix2, uint8_t * pix3, int i_stride, int * scores)
{
  int i_sum;
  int x;
  int y;
  int i_sum;
  int x;
  int y;
  int i_sum;
  int x;
  int y;
  int i_sum;
  int x;
  int y;
  uint8_t * _5;
  sizetype _14;
  unsigned char _20;
  int _21;
  uint8_t * _23;
  unsigned char _24;
  int _25;
  int _26;
  int _27;
  sizetype _39;
  uint8_t * _41;
  unsigned char _42;
  int _43;
  uint8_t * _45;
  unsigned char _46;
  int _47;
  int _48;
  int _49;
  sizetype _61;
  uint8_t * _63;
  unsigned char _64;
  int _65;
  uint8_t * _67;
  unsigned char _68;
  int _69;
  int _70;
  int _71;
  sizetype _83;
  uint8_t * _85;
  unsigned char _86;
  int _87;
  uint8_t * _89;
  unsigned char _90;
  int _91;
  int _92;
  int _93;
  unsigned int ivtmp_199;
  unsigned int ivtmp_200;
  unsigned int ivtmp_201;
  unsigned int ivtmp_202;
  unsigned int ivtmp_203;
  unsigned int ivtmp_204;
  unsigned int ivtmp_205;
  unsigned int ivtmp_206;
  unsigned int ivtmp_207;
  unsigned int ivtmp_208;
  unsigned int ivtmp_209;
  unsigned int ivtmp_210;
  unsigned int ivtmp_211;
  unsigned int ivtmp_212;
  unsigned int ivtmp_213;
  unsigned int ivtmp_214;
  sizetype pretmp_223;

  <bb 2>:
  # DEBUG pix1 => fenc_2(D)
  # DEBUG i_stride_pix1 => 16
  # DEBUG pix2 => pix0_3(D)
  # DEBUG i_stride_pix2 => i_stride_4(D)
  # DEBUG i_sum => 0
  # DEBUG y => 0
  # DEBUG y => 0
  # DEBUG i_sum => 0
  # DEBUG pix2 => pix0_3(D)
  # DEBUG pix1 => fenc_2(D)
  pretmp_223 = (sizetype) i_stride_4(D);
  goto <bb 7>;

  <bb 3>:

  <bb 4>:
  # x_147 = PHI <x_96(3), 0(7)>
  # i_sum_150 = PHI <i_sum_95(3), i_sum_152(7)>
  # ivtmp_202 = PHI <ivtmp_201(3), 8(7)>
  # DEBUG x => x_147
  # DEBUG i_sum => i_sum_150
  _83 = (sizetype) x_147;
  _85 = fenc_148 + _83;
  _86 = *_85;
  _87 = (int) _86;
  _89 = pix0_149 + _83;
  _90 = *_89;
  _91 = (int) _90;
  _92 = _87 - _91;
  _93 = ABS_EXPR <_92>;
  i_sum_95 = _93 + i_sum_150;
  # DEBUG i_sum => i_sum_95
  x_96 = x_147 + 1;
  # DEBUG x => x_96
  # DEBUG x => x_96
  # DEBUG i_sum => i_sum_95
  ivtmp_201 = ivtmp_202 - 1;
  if (ivtmp_201 != 0)
    goto <bb 3>;
  else
    goto <bb 5>;

  <bb 5>:
  # i_sum_216 = PHI <i_sum_95(4)>
  fenc_97 = fenc_148 + 16;
  # DEBUG pix1 => fenc_97
  pix0_99 = pix0_149 + pretmp_223;
  # DEBUG pix2 => pix0_99
  y_101 = y_151 + 1;
  # DEBUG y => y_101
  # DEBUG y => y_101
  # DEBUG i_sum => i_sum_216
  # DEBUG pix2 => pix0_99
  # DEBUG pix1 => fenc_97
  ivtmp_199 = ivtmp_200 - 1;
  if (ivtmp_199 != 0)
    goto <bb 6>;
  else
    goto <bb 8>;

  <bb 6>:

  <bb 7>:
  # fenc_148 = PHI <fenc_97(6), fenc_2(D)(2)>
  # pix0_149 = PHI <pix0_99(6), pix0_3(D)(2)>
  # y_151 = PHI <y_101(6), 0(2)>
  # i_sum_152 = PHI <i_sum_216(6), 0(2)>
  # ivtmp_200 = PHI <ivtmp_199(6), 4(2)>
  # DEBUG y => y_151
  # DEBUG i_sum => i_sum_152
  # DEBUG pix2 => pix0_149
  # DEBUG pix1 => fenc_148
  # DEBUG x => 0
  # DEBUG i_sum => i_sum_152
  goto <bb 4>;

  <bb 8>:
  # i_sum_215 = PHI <i_sum_216(5)>
  # DEBUG pix1 => NULL
  # DEBUG i_stride_pix1 => NULL
  # DEBUG pix2 => NULL
  # DEBUG i_stride_pix2 => NULL
  # DEBUG y => NULL
  # DEBUG x => NULL
  # DEBUG i_sum => NULL
  *scores_6(D) = i_sum_215;
  # DEBUG pix1 => fenc_2(D)
  # DEBUG i_stride_pix1 => 16
  # DEBUG pix2 => pix1_9(D)
  # DEBUG i_stride_pix2 => i_stride_4(D)
  # DEBUG y => 0
  # DEBUG i_sum => 0
  # DEBUG pix2 => pix1_9(D)
  # DEBUG pix1 => fenc_2(D)
  goto <bb 13>;

  <bb 9>:

  <bb 10>:
  # x_141 = PHI <x_74(9), 0(13)>
  # i_sum_144 = PHI <i_sum_73(9), i_sum_146(13)>
  # ivtmp_206 = PHI <ivtmp_205(9), 8(13)>
  # DEBUG x => x_141
  # DEBUG i_sum => i_sum_144
  _61 = (sizetype) x_141;
  _63 = fenc_142 + _61;
  _64 = *_63;
  _65 = (int) _64;
  _67 = pix1_143 + _61;
  _68 = *_67;
  _69 = (int) _68;
  _70 = _65 - _69;
  _71 = ABS_EXPR <_70>;
  i_sum_73 = _71 + i_sum_144;
  # DEBUG i_sum => i_sum_73
  x_74 = x_141 + 1;
  # DEBUG x => x_74
  # DEBUG x => x_74
  # DEBUG i_sum => i_sum_73
  ivtmp_205 = ivtmp_206 - 1;
  if (ivtmp_205 != 0)
    goto <bb 9>;
  else
    goto <bb 11>;

  <bb 11>:
  # i_sum_218 = PHI <i_sum_73(10)>
  fenc_75 = fenc_142 + 16;
  # DEBUG pix1 => fenc_75
  pix1_77 = pix1_143 + pretmp_223;
  # DEBUG pix2 => pix1_77
  y_79 = y_145 + 1;
  # DEBUG y => y_79
  # DEBUG y => y_79
  # DEBUG i_sum => i_sum_218
  # DEBUG pix2 => pix1_77
  # DEBUG pix1 => fenc_75
  ivtmp_203 = ivtmp_204 - 1;
  if (ivtmp_203 != 0)
    goto <bb 12>;
  else
    goto <bb 14>;

  <bb 12>:

  <bb 13>:
  # fenc_142 = PHI <fenc_75(12), fenc_2(D)(8)>
  # pix1_143 = PHI <pix1_77(12), pix1_9(D)(8)>
  # y_145 = PHI <y_79(12), 0(8)>
  # i_sum_146 = PHI <i_sum_218(12), 0(8)>
  # ivtmp_204 = PHI <ivtmp_203(12), 4(8)>
  # DEBUG y => y_145
  # DEBUG i_sum => i_sum_146
  # DEBUG pix2 => pix1_143
  # DEBUG pix1 => fenc_142
  # DEBUG x => 0
  # DEBUG i_sum => i_sum_146
  goto <bb 10>;

  <bb 14>:
  # i_sum_217 = PHI <i_sum_218(11)>
  # DEBUG pix1 => NULL
  # DEBUG i_stride_pix1 => NULL
  # DEBUG pix2 => NULL
  # DEBUG i_stride_pix2 => NULL
  # DEBUG y => NULL
  # DEBUG x => NULL
  # DEBUG i_sum => NULL
  MEM[(int *)scores_6(D) + 4B] = i_sum_217;
  # DEBUG pix1 => fenc_2(D)
  # DEBUG i_stride_pix1 => 16
  # DEBUG pix2 => pix2_13(D)
  # DEBUG i_stride_pix2 => i_stride_4(D)
  # DEBUG y => 0
  # DEBUG i_sum => 0
  # DEBUG pix2 => pix2_13(D)
  # DEBUG pix1 => fenc_2(D)
  goto <bb 19>;

  <bb 15>:

  <bb 16>:
  # x_81 = PHI <x_52(15), 0(19)>
  # i_sum_138 = PHI <i_sum_51(15), i_sum_140(19)>
  # ivtmp_210 = PHI <ivtmp_209(15), 8(19)>
  # DEBUG x => x_81
  # DEBUG i_sum => i_sum_138
  _39 = (sizetype) x_81;
  _41 = fenc_37 + _39;
  _42 = *_41;
  _43 = (int) _42;
  _45 = pix2_137 + _39;
  _46 = *_45;
  _47 = (int) _46;
  _48 = _43 - _47;
  _49 = ABS_EXPR <_48>;
  i_sum_51 = _49 + i_sum_138;
  # DEBUG i_sum => i_sum_51
  x_52 = x_81 + 1;
  # DEBUG x => x_52
  # DEBUG x => x_52
  # DEBUG i_sum => i_sum_51
  ivtmp_209 = ivtmp_210 - 1;
  if (ivtmp_209 != 0)
    goto <bb 15>;
  else
    goto <bb 17>;

  <bb 17>:
  # i_sum_220 = PHI <i_sum_51(16)>
  fenc_53 = fenc_37 + 16;
  # DEBUG pix1 => fenc_53
  pix2_55 = pix2_137 + pretmp_223;
  # DEBUG pix2 => pix2_55
  y_57 = y_139 + 1;
  # DEBUG y => y_57
  # DEBUG y => y_57
  # DEBUG i_sum => i_sum_220
  # DEBUG pix2 => pix2_55
  # DEBUG pix1 => fenc_53
  ivtmp_207 = ivtmp_208 - 1;
  if (ivtmp_207 != 0)
    goto <bb 18>;
  else
    goto <bb 20>;

  <bb 18>:

  <bb 19>:
  # fenc_37 = PHI <fenc_53(18), fenc_2(D)(14)>
  # pix2_137 = PHI <pix2_55(18), pix2_13(D)(14)>
  # y_139 = PHI <y_57(18), 0(14)>
  # i_sum_140 = PHI <i_sum_220(18), 0(14)>
  # ivtmp_208 = PHI <ivtmp_207(18), 4(14)>
  # DEBUG y => y_139
  # DEBUG i_sum => i_sum_140
  # DEBUG pix2 => pix2_137
  # DEBUG pix1 => fenc_37
  # DEBUG x => 0
  # DEBUG i_sum => i_sum_140
  goto <bb 16>;

  <bb 20>:
  # i_sum_219 = PHI <i_sum_220(17)>
  # DEBUG pix1 => NULL
  # DEBUG i_stride_pix1 => NULL
  # DEBUG pix2 => NULL
  # DEBUG i_stride_pix2 => NULL
  # DEBUG y => NULL
  # DEBUG x => NULL
  # DEBUG i_sum => NULL
  MEM[(int *)scores_6(D) + 8B] = i_sum_219;
  # DEBUG pix1 => fenc_2(D)
  # DEBUG i_stride_pix1 => 16
  # DEBUG pix2 => pix3_17(D)
  # DEBUG i_stride_pix2 => i_stride_4(D)
  # DEBUG y => 0
  # DEBUG i_sum => 0
  # DEBUG pix2 => pix3_17(D)
  # DEBUG pix1 => fenc_2(D)
  goto <bb 25>;

  <bb 21>:

  <bb 22>:
  # x_8 = PHI <x_30(21), 0(25)>
  # i_sum_59 = PHI <i_sum_29(21), i_sum_104(25)>
  # ivtmp_214 = PHI <ivtmp_213(21), 8(25)>
  # DEBUG x => x_8
  # DEBUG i_sum => i_sum_59
  _14 = (sizetype) x_8;
  _5 = fenc_16 + _14;
  _20 = *_5;
  _21 = (int) _20;
  _23 = pix3_103 + _14;
  _24 = *_23;
  _25 = (int) _24;
  _26 = _21 - _25;
  _27 = ABS_EXPR <_26>;
  i_sum_29 = _27 + i_sum_59;
  # DEBUG i_sum => i_sum_29
  x_30 = x_8 + 1;
  # DEBUG x => x_30
  # DEBUG x => x_30
  # DEBUG i_sum => i_sum_29
  ivtmp_213 = ivtmp_214 - 1;
  if (ivtmp_213 != 0)
    goto <bb 21>;
  else
    goto <bb 23>;

  <bb 23>:
  # i_sum_222 = PHI <i_sum_29(22)>
  fenc_31 = fenc_16 + 16;
  # DEBUG pix1 => fenc_31
  pix3_33 = pix3_103 + pretmp_223;
  # DEBUG pix2 => pix3_33
  y_35 = y_12 + 1;
  # DEBUG y => y_35
  # DEBUG y => y_35
  # DEBUG i_sum => i_sum_222
  # DEBUG pix2 => pix3_33
  # DEBUG pix1 => fenc_31
  ivtmp_211 = ivtmp_212 - 1;
  if (ivtmp_211 != 0)
    goto <bb 24>;
  else
    goto <bb 26>;

  <bb 24>:

  <bb 25>:
  # fenc_16 = PHI <fenc_31(24), fenc_2(D)(20)>
  # pix3_103 = PHI <pix3_33(24), pix3_17(D)(20)>
  # y_12 = PHI <y_35(24), 0(20)>
  # i_sum_104 = PHI <i_sum_222(24), 0(20)>
  # ivtmp_212 = PHI <ivtmp_211(24), 4(20)>
  # DEBUG y => y_12
  # DEBUG i_sum => i_sum_104
  # DEBUG pix2 => pix3_103
  # DEBUG pix1 => fenc_16
  # DEBUG x => 0
  # DEBUG i_sum => i_sum_104
  goto <bb 22>;

  <bb 26>:
  # i_sum_221 = PHI <i_sum_222(23)>
  # DEBUG pix1 => NULL
  # DEBUG i_stride_pix1 => NULL
  # DEBUG pix2 => NULL
  # DEBUG i_stride_pix2 => NULL
  # DEBUG y => NULL
  # DEBUG x => NULL
  # DEBUG i_sum => NULL
  MEM[(int *)scores_6(D) + 12B] = i_sum_221;
  return;

}



;; Function x264_pixel_sad_x3_4x8 (x264_pixel_sad_x3_4x8, funcdef_no=160, decl_uid=8102, cgraph_uid=160, symbol_order=203)


Analyzing loop at common/pixel.c:64
common/pixel.c:64:1: note: ===== analyze_loop_nest =====
common/pixel.c:64:1: note: === vect_analyze_loop_form ===
common/pixel.c:64:1: note: ===== analyze_loop_nest_1 =====
common/pixel.c:64:1: note: === vect_analyze_loop_form ===
common/pixel.c:64:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 2
  exit condition [3, + , 4294967295] != 0
  bounds on difference of bases: -3 ... -3
  result:
    # of iterations 3, bounded by 3
common/pixel.c:64:1: note: Considering outer-loop vectorization.
common/pixel.c:64:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 1
  exit condition [7, + , 4294967295] != 0
  bounds on difference of bases: -7 ... -7
  result:
    # of iterations 7, bounded by 7
common/pixel.c:64:1: note: === vect_analyze_data_refs ===
Creating dr for *_16
analyze_innermost: success.
	base_address: fenc_34
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_2(D)
	Access function 0: {{0B, +, 16}_1, +, 1}_2
Creating dr for *_20
analyze_innermost: success.
	base_address: pix2_79
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix2_13(D)
	Access function 0: {{0B, +, pretmp_169}_1, +, 1}_2
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:64:1: note: analyze in outer-loop: *fenc_34
common/pixel.c:64:1: note: 	outer base_address: fenc_2(D)
	outer offset from base address: 0
	outer constant offset from base address: 0
	outer step: 16
	outer aligned to: 128
common/pixel.c:64:1: note: got vectype for stmt: _17 = *_16;
vector(16) unsigned char
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:64:1: note: analyze in outer-loop: *pix2_79
common/pixel.c:64:1: note: failed: evolution of base is not affine.
common/pixel.c:64:1: note: bad data references.

Analyzing loop at common/pixel.c:64
common/pixel.c:64:1: note: ===== analyze_loop_nest =====
common/pixel.c:64:1: note: === vect_analyze_loop_form ===
common/pixel.c:64:1: note: === get_loop_niters ===
common/pixel.c:64:1: note: === vect_analyze_data_refs ===
Creating dr for *_16
analyze_innermost: success.
	base_address: fenc_34
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_34
	Access function 0: {0B, +, 1}_2
Creating dr for *_20
analyze_innermost: success.
	base_address: pix2_79
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix2_79
	Access function 0: {0B, +, 1}_2
common/pixel.c:64:1: note: got vectype for stmt: _17 = *_16;
vector(16) unsigned char
common/pixel.c:64:1: note: got vectype for stmt: _21 = *_20;
vector(16) unsigned char
common/pixel.c:64:1: note: === vect_analyze_scalar_cycles ===
common/pixel.c:64:1: note: Analyze phi: x_8 = PHI <x_27(15), 0(19)>

common/pixel.c:64:1: note: Access function of PHI: {0, +, 1}_2
common/pixel.c:64:1: note: step: 1,  init: 0
common/pixel.c:64:1: note: Detected induction.
common/pixel.c:64:1: note: Analyze phi: i_sum_78 = PHI <i_sum_26(15), i_sum_12(19)>

common/pixel.c:64:1: note: Access function of PHI: {i_sum_12, +, _24}_2
common/pixel.c:64:1: note: step: _24,  init: i_sum_12
common/pixel.c:64:1: note: step unknown.
common/pixel.c:64:1: note: Analyze phi: ivtmp_162 = PHI <ivtmp_161(15), 4(19)>

common/pixel.c:64:1: note: Access function of PHI: {4, +, 4294967295}_2
common/pixel.c:64:1: note: step: 4294967295,  init: 4
common/pixel.c:64:1: note: Detected induction.
common/pixel.c:64:1: note: Analyze phi: i_sum_78 = PHI <i_sum_26(15), i_sum_12(19)>

common/pixel.c:64:1: note: detected reduction: i_sum_26 = _24 + i_sum_78;

common/pixel.c:64:1: note: Detected reduction.
common/pixel.c:64:1: note: === vect_pattern_recog ===
common/pixel.c:64:1: note: vect_is_simple_use: operand _24
common/pixel.c:64:1: note: def_stmt: _24 = ABS_EXPR <_23>;
common/pixel.c:64:1: note: type of def: 3.
common/pixel.c:64:1: note: vect_is_simple_use: operand _24
common/pixel.c:64:1: note: def_stmt: _24 = ABS_EXPR <_23>;
common/pixel.c:64:1: note: type of def: 3.
common/pixel.c:64:1: note: vect_is_simple_use: operand _24
common/pixel.c:64:1: note: def_stmt: _24 = ABS_EXPR <_23>;
common/pixel.c:64:1: note: type of def: 3.
common/pixel.c:64:1: note: vect_is_simple_use: operand _18
common/pixel.c:64:1: note: def_stmt: _18 = (int) _17;
common/pixel.c:64:1: note: type of def: 3.
common/pixel.c:64:1: note: vect_is_simple_use: operand _17
common/pixel.c:64:1: note: def_stmt: _17 = *_16;
common/pixel.c:64:1: note: type of def: 3.
common/pixel.c:64:1: note: vect_is_simple_use: operand _22
common/pixel.c:64:1: note: def_stmt: _22 = (int) _21;
common/pixel.c:64:1: note: type of def: 3.
common/pixel.c:64:1: note: vect_is_simple_use: operand _21
common/pixel.c:64:1: note: def_stmt: _21 = *_20;
common/pixel.c:64:1: note: type of def: 3.
common/pixel.c:64:1: note: vect_recog_sad_pattern: detected: patt_150 = SAD_EXPR <_17, _21, i_sum_78>;

common/pixel.c:64:1: note: pattern recognized: patt_150 = SAD_EXPR <_17, _21, i_sum_78>;
common/pixel.c:64:1: note: === vect_analyze_data_ref_accesses ===
common/pixel.c:64:1: note: === vect_mark_stmts_to_be_vectorized ===
common/pixel.c:64:1: note: init: phi relevant? x_8 = PHI <x_27(15), 0(19)>
common/pixel.c:64:1: note: init: phi relevant? i_sum_78 = PHI <i_sum_26(15), i_sum_12(19)>
common/pixel.c:64:1: note: init: phi relevant? ivtmp_162 = PHI <ivtmp_161(15), 4(19)>
common/pixel.c:64:1: note: init: stmt relevant? # DEBUG x => x_8
common/pixel.c:64:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_78
common/pixel.c:64:1: note: init: stmt relevant? _10 = (sizetype) x_8;
common/pixel.c:64:1: note: init: stmt relevant? _16 = fenc_34 + _10;
common/pixel.c:64:1: note: init: stmt relevant? _17 = *_16;
common/pixel.c:64:1: note: init: stmt relevant? _18 = (int) _17;
common/pixel.c:64:1: note: init: stmt relevant? _20 = pix2_79 + _10;
common/pixel.c:64:1: note: init: stmt relevant? _21 = *_20;
common/pixel.c:64:1: note: init: stmt relevant? _22 = (int) _21;
common/pixel.c:64:1: note: init: stmt relevant? _23 = _18 - _22;
common/pixel.c:64:1: note: init: stmt relevant? _24 = ABS_EXPR <_23>;
common/pixel.c:64:1: note: init: stmt relevant? i_sum_26 = _24 + i_sum_78;
common/pixel.c:64:1: note: vec_stmt_relevant_p: used out of loop.
common/pixel.c:64:1: note: mark relevant 0, live 1.
common/pixel.c:64:1: note: last stmt in pattern. don't mark relevant/live.
common/pixel.c:64:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_26
common/pixel.c:64:1: note: init: stmt relevant? x_27 = x_8 + 1;
common/pixel.c:64:1: note: init: stmt relevant? # DEBUG x => x_27
common/pixel.c:64:1: note: init: stmt relevant? # DEBUG x => x_27
common/pixel.c:64:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_26
common/pixel.c:64:1: note: init: stmt relevant? ivtmp_161 = ivtmp_162 - 1;
common/pixel.c:64:1: note: init: stmt relevant? if (ivtmp_161 != 0)
common/pixel.c:64:1: note: worklist: examine stmt: patt_150 = SAD_EXPR <_17, _21, i_sum_78>;
common/pixel.c:64:1: note: vect_is_simple_use: operand _17
common/pixel.c:64:1: note: def_stmt: _17 = *_16;
common/pixel.c:64:1: note: type of def: 3.
common/pixel.c:64:1: note: mark relevant 3, live 0.
common/pixel.c:64:1: note: vect_is_simple_use: operand _21
common/pixel.c:64:1: note: def_stmt: _21 = *_20;
common/pixel.c:64:1: note: type of def: 3.
common/pixel.c:64:1: note: mark relevant 3, live 0.
common/pixel.c:64:1: note: vect_is_simple_use: operand i_sum_78
common/pixel.c:64:1: note: def_stmt: i_sum_78 = PHI <i_sum_26(15), i_sum_12(19)>
common/pixel.c:64:1: note: type of def: 5.
common/pixel.c:64:1: note: mark relevant 3, live 0.
common/pixel.c:64:1: note: worklist: examine stmt: i_sum_78 = PHI <i_sum_26(15), i_sum_12(19)>
common/pixel.c:64:1: note: vect_is_simple_use: operand i_sum_26
common/pixel.c:64:1: note: def_stmt: i_sum_26 = _24 + i_sum_78;
common/pixel.c:64:1: note: type of def: 5.
common/pixel.c:64:1: note: reduc-stmt defining reduc-phi in the same nest.
common/pixel.c:64:1: note: vect_is_simple_use: operand i_sum_12
common/pixel.c:64:1: note: def_stmt: i_sum_12 = PHI <i_sum_168(18), 0(14)>
common/pixel.c:64:1: note: type of def: 2.
common/pixel.c:64:1: note: def_stmt is out of loop.
common/pixel.c:64:1: note: worklist: examine stmt: _21 = *_20;
common/pixel.c:64:1: note: worklist: examine stmt: _17 = *_16;
common/pixel.c:64:1: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _17 = *_16;
  stmt_b: _21 = *_20;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _17 = *_16;
  stmt_b: _17 = *_16;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_2)
  (chrec_b = {0B, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _21 = *_20;
  stmt_b: _21 = *_20;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_2)
  (chrec_b = {0B, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/pixel.c:64:1: note: === vect_determine_vectorization_factor ===
common/pixel.c:64:1: note: ==> examining phi: x_8 = PHI <x_27(15), 0(19)>

common/pixel.c:64:1: note: ==> examining phi: i_sum_78 = PHI <i_sum_26(15), i_sum_12(19)>

common/pixel.c:64:1: note: get vectype for scalar type:  int
common/pixel.c:64:1: note: vectype: vector(4) int
common/pixel.c:64:1: note: nunits = 4
common/pixel.c:64:1: note: ==> examining phi: ivtmp_162 = PHI <ivtmp_161(15), 4(19)>

common/pixel.c:64:1: note: ==> examining statement: # DEBUG x => x_8

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: # DEBUG i_sum => i_sum_78

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: _10 = (sizetype) x_8;

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: _16 = fenc_34 + _10;

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: _17 = *_16;

common/pixel.c:64:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:64:1: note: vectype: vector(16) unsigned char
common/pixel.c:64:1: note: nunits = 16
common/pixel.c:64:1: note: ==> examining statement: _18 = (int) _17;

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: _20 = pix2_79 + _10;

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: _21 = *_20;

common/pixel.c:64:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:64:1: note: vectype: vector(16) unsigned char
common/pixel.c:64:1: note: nunits = 16
common/pixel.c:64:1: note: ==> examining statement: _22 = (int) _21;

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: _23 = _18 - _22;

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: _24 = ABS_EXPR <_23>;

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: i_sum_26 = _24 + i_sum_78;

common/pixel.c:64:1: note: ==> examining pattern statement: patt_150 = SAD_EXPR <_17, _21, i_sum_78>;

common/pixel.c:64:1: note: get vectype for scalar type:  int
common/pixel.c:64:1: note: vectype: vector(4) int
common/pixel.c:64:1: note: nunits = 4
common/pixel.c:64:1: note: ==> examining statement: # DEBUG i_sum => i_sum_26

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: x_27 = x_8 + 1;

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: # DEBUG x => x_27

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: # DEBUG x => x_27

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: # DEBUG i_sum => i_sum_26

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: ivtmp_161 = ivtmp_162 - 1;

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: if (ivtmp_161 != 0)

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: vectorization factor = 16
common/pixel.c:64:1: note: === vect_analyze_data_refs_alignment ===
common/pixel.c:64:1: note: vect_compute_data_ref_alignment:
common/pixel.c:64:1: note: can't force alignment of ref: *_16
common/pixel.c:64:1: note: vect_compute_data_ref_alignment:
common/pixel.c:64:1: note: can't force alignment of ref: *_20
common/pixel.c:64:1: note: === vect_prune_runtime_alias_test_list ===
common/pixel.c:64:1: note: === vect_enhance_data_refs_alignment ===
common/pixel.c:64:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:64:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:64:1: note: vect_can_advance_ivs_p:
common/pixel.c:64:1: note: Analyze phi: x_8 = PHI <x_27(15), 0(19)>

common/pixel.c:64:1: note: Analyze phi: i_sum_78 = PHI <i_sum_26(15), i_sum_12(19)>

common/pixel.c:64:1: note: reduc phi. skip.
common/pixel.c:64:1: note: Analyze phi: ivtmp_162 = PHI <ivtmp_161(15), 4(19)>

common/pixel.c:64:1: note: Vectorizing an unaligned access.
common/pixel.c:64:1: note: Vectorizing an unaligned access.
common/pixel.c:64:1: note: === vect_analyze_slp ===
common/pixel.c:64:1: note: === vect_make_slp_decision ===
common/pixel.c:64:1: note: === vect_detect_hybrid_slp ===
common/pixel.c:64:1: note: === vect_analyze_loop_operations ===
common/pixel.c:64:1: note: examining phi: x_8 = PHI <x_27(15), 0(19)>

common/pixel.c:64:1: note: examining phi: i_sum_78 = PHI <i_sum_26(15), i_sum_12(19)>

common/pixel.c:64:1: note: examining phi: ivtmp_162 = PHI <ivtmp_161(15), 4(19)>

common/pixel.c:64:1: note: ==> examining statement: # DEBUG x => x_8
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: # DEBUG i_sum => i_sum_78
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: _10 = (sizetype) x_8;
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: _16 = fenc_34 + _10;
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: _17 = *_16;
common/pixel.c:64:1: note: vect_is_simple_use: operand *_16
common/pixel.c:64:1: note: not ssa-name.
common/pixel.c:64:1: note: use not simple.
common/pixel.c:64:1: note: vect_is_simple_use: operand *_16
common/pixel.c:64:1: note: not ssa-name.
common/pixel.c:64:1: note: use not simple.
common/pixel.c:64:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:64:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:64:1: note: ==> examining statement: _18 = (int) _17;
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: _20 = pix2_79 + _10;
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: _21 = *_20;
common/pixel.c:64:1: note: vect_is_simple_use: operand *_20
common/pixel.c:64:1: note: not ssa-name.
common/pixel.c:64:1: note: use not simple.
common/pixel.c:64:1: note: vect_is_simple_use: operand *_20
common/pixel.c:64:1: note: not ssa-name.
common/pixel.c:64:1: note: use not simple.
common/pixel.c:64:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:64:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:64:1: note: ==> examining statement: _22 = (int) _21;
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: _23 = _18 - _22;
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: _24 = ABS_EXPR <_23>;
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: i_sum_26 = _24 + i_sum_78;
common/pixel.c:64:1: note: ==> examining pattern statement: patt_150 = SAD_EXPR <_17, _21, i_sum_78>;
common/pixel.c:64:1: note: vect_is_simple_use: operand _17
common/pixel.c:64:1: note: def_stmt: _17 = *_16;
common/pixel.c:64:1: note: type of def: 3.
common/pixel.c:64:1: note: vect_is_simple_use: operand _21
common/pixel.c:64:1: note: def_stmt: _21 = *_20;
common/pixel.c:64:1: note: type of def: 3.
common/pixel.c:64:1: note: vect_is_simple_use: operand i_sum_78
common/pixel.c:64:1: note: def_stmt: i_sum_78 = PHI <i_sum_26(15), i_sum_12(19)>
common/pixel.c:64:1: note: type of def: 5.
common/pixel.c:64:1: note: detected reduction: i_sum_26 = _24 + i_sum_78;

common/pixel.c:64:1: note: reduc op not supported by target.
vect_model_reduction_cost: inside_cost = 1, prologue_cost = 1, epilogue_cost = 5 .
common/pixel.c:64:1: note: ==> examining statement: # DEBUG i_sum => i_sum_26
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: x_27 = x_8 + 1;
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: # DEBUG x => x_27
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: # DEBUG x => x_27
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: # DEBUG i_sum => i_sum_26
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: ivtmp_161 = ivtmp_162 - 1;
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: if (ivtmp_161 != 0)
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: vectorization_factor = 16, niters = 4
common/pixel.c:64:1: note: not vectorized: iteration count too small.
common/pixel.c:64:1: note: not vectorized: iteration count smaller than vectorization factor.
common/pixel.c:64:1: note: bad operation or unsupported loop bound.

Analyzing loop at common/pixel.c:64
common/pixel.c:64:1: note: ===== analyze_loop_nest =====
common/pixel.c:64:1: note: === vect_analyze_loop_form ===
common/pixel.c:64:1: note: ===== analyze_loop_nest_1 =====
common/pixel.c:64:1: note: === vect_analyze_loop_form ===
common/pixel.c:64:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 4
  exit condition [3, + , 4294967295] != 0
  bounds on difference of bases: -3 ... -3
  result:
    # of iterations 3, bounded by 3
common/pixel.c:64:1: note: Considering outer-loop vectorization.
common/pixel.c:64:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 3
  exit condition [7, + , 4294967295] != 0
  bounds on difference of bases: -7 ... -7
  result:
    # of iterations 7, bounded by 7
common/pixel.c:64:1: note: === vect_analyze_data_refs ===
Creating dr for *_38
analyze_innermost: success.
	base_address: fenc_105
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_2(D)
	Access function 0: {{0B, +, 16}_3, +, 1}_4
Creating dr for *_42
analyze_innermost: success.
	base_address: pix1_106
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix1_9(D)
	Access function 0: {{0B, +, pretmp_169}_3, +, 1}_4
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:64:1: note: analyze in outer-loop: *fenc_105
common/pixel.c:64:1: note: 	outer base_address: fenc_2(D)
	outer offset from base address: 0
	outer constant offset from base address: 0
	outer step: 16
	outer aligned to: 128
common/pixel.c:64:1: note: got vectype for stmt: _39 = *_38;
vector(16) unsigned char
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:64:1: note: analyze in outer-loop: *pix1_106
common/pixel.c:64:1: note: failed: evolution of base is not affine.
common/pixel.c:64:1: note: bad data references.

Analyzing loop at common/pixel.c:64
common/pixel.c:64:1: note: ===== analyze_loop_nest =====
common/pixel.c:64:1: note: === vect_analyze_loop_form ===
common/pixel.c:64:1: note: === get_loop_niters ===
common/pixel.c:64:1: note: === vect_analyze_data_refs ===
Creating dr for *_38
analyze_innermost: success.
	base_address: fenc_105
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_105
	Access function 0: {0B, +, 1}_4
Creating dr for *_42
analyze_innermost: success.
	base_address: pix1_106
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix1_106
	Access function 0: {0B, +, 1}_4
common/pixel.c:64:1: note: got vectype for stmt: _39 = *_38;
vector(16) unsigned char
common/pixel.c:64:1: note: got vectype for stmt: _43 = *_42;
vector(16) unsigned char
common/pixel.c:64:1: note: === vect_analyze_scalar_cycles ===
common/pixel.c:64:1: note: Analyze phi: x_104 = PHI <x_49(9), 0(13)>

common/pixel.c:64:1: note: Access function of PHI: {0, +, 1}_4
common/pixel.c:64:1: note: step: 1,  init: 0
common/pixel.c:64:1: note: Detected induction.
common/pixel.c:64:1: note: Analyze phi: i_sum_107 = PHI <i_sum_48(9), i_sum_109(13)>

common/pixel.c:64:1: note: Access function of PHI: {i_sum_109, +, _46}_4
common/pixel.c:64:1: note: step: _46,  init: i_sum_109
common/pixel.c:64:1: note: step unknown.
common/pixel.c:64:1: note: Analyze phi: ivtmp_158 = PHI <ivtmp_157(9), 4(13)>

common/pixel.c:64:1: note: Access function of PHI: {4, +, 4294967295}_4
common/pixel.c:64:1: note: step: 4294967295,  init: 4
common/pixel.c:64:1: note: Detected induction.
common/pixel.c:64:1: note: Analyze phi: i_sum_107 = PHI <i_sum_48(9), i_sum_109(13)>

common/pixel.c:64:1: note: detected reduction: i_sum_48 = _46 + i_sum_107;

common/pixel.c:64:1: note: Detected reduction.
common/pixel.c:64:1: note: === vect_pattern_recog ===
common/pixel.c:64:1: note: vect_is_simple_use: operand _46
common/pixel.c:64:1: note: def_stmt: _46 = ABS_EXPR <_45>;
common/pixel.c:64:1: note: type of def: 3.
common/pixel.c:64:1: note: vect_is_simple_use: operand _46
common/pixel.c:64:1: note: def_stmt: _46 = ABS_EXPR <_45>;
common/pixel.c:64:1: note: type of def: 3.
common/pixel.c:64:1: note: vect_is_simple_use: operand _46
common/pixel.c:64:1: note: def_stmt: _46 = ABS_EXPR <_45>;
common/pixel.c:64:1: note: type of def: 3.
common/pixel.c:64:1: note: vect_is_simple_use: operand _40
common/pixel.c:64:1: note: def_stmt: _40 = (int) _39;
common/pixel.c:64:1: note: type of def: 3.
common/pixel.c:64:1: note: vect_is_simple_use: operand _39
common/pixel.c:64:1: note: def_stmt: _39 = *_38;
common/pixel.c:64:1: note: type of def: 3.
common/pixel.c:64:1: note: vect_is_simple_use: operand _44
common/pixel.c:64:1: note: def_stmt: _44 = (int) _43;
common/pixel.c:64:1: note: type of def: 3.
common/pixel.c:64:1: note: vect_is_simple_use: operand _43
common/pixel.c:64:1: note: def_stmt: _43 = *_42;
common/pixel.c:64:1: note: type of def: 3.
common/pixel.c:64:1: note: vect_recog_sad_pattern: detected: patt_150 = SAD_EXPR <_39, _43, i_sum_107>;

common/pixel.c:64:1: note: pattern recognized: patt_150 = SAD_EXPR <_39, _43, i_sum_107>;
common/pixel.c:64:1: note: === vect_analyze_data_ref_accesses ===
common/pixel.c:64:1: note: === vect_mark_stmts_to_be_vectorized ===
common/pixel.c:64:1: note: init: phi relevant? x_104 = PHI <x_49(9), 0(13)>
common/pixel.c:64:1: note: init: phi relevant? i_sum_107 = PHI <i_sum_48(9), i_sum_109(13)>
common/pixel.c:64:1: note: init: phi relevant? ivtmp_158 = PHI <ivtmp_157(9), 4(13)>
common/pixel.c:64:1: note: init: stmt relevant? # DEBUG x => x_104
common/pixel.c:64:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_107
common/pixel.c:64:1: note: init: stmt relevant? _36 = (sizetype) x_104;
common/pixel.c:64:1: note: init: stmt relevant? _38 = fenc_105 + _36;
common/pixel.c:64:1: note: init: stmt relevant? _39 = *_38;
common/pixel.c:64:1: note: init: stmt relevant? _40 = (int) _39;
common/pixel.c:64:1: note: init: stmt relevant? _42 = pix1_106 + _36;
common/pixel.c:64:1: note: init: stmt relevant? _43 = *_42;
common/pixel.c:64:1: note: init: stmt relevant? _44 = (int) _43;
common/pixel.c:64:1: note: init: stmt relevant? _45 = _40 - _44;
common/pixel.c:64:1: note: init: stmt relevant? _46 = ABS_EXPR <_45>;
common/pixel.c:64:1: note: init: stmt relevant? i_sum_48 = _46 + i_sum_107;
common/pixel.c:64:1: note: vec_stmt_relevant_p: used out of loop.
common/pixel.c:64:1: note: mark relevant 0, live 1.
common/pixel.c:64:1: note: last stmt in pattern. don't mark relevant/live.
common/pixel.c:64:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_48
common/pixel.c:64:1: note: init: stmt relevant? x_49 = x_104 + 1;
common/pixel.c:64:1: note: init: stmt relevant? # DEBUG x => x_49
common/pixel.c:64:1: note: init: stmt relevant? # DEBUG x => x_49
common/pixel.c:64:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_48
common/pixel.c:64:1: note: init: stmt relevant? ivtmp_157 = ivtmp_158 - 1;
common/pixel.c:64:1: note: init: stmt relevant? if (ivtmp_157 != 0)
common/pixel.c:64:1: note: worklist: examine stmt: patt_150 = SAD_EXPR <_39, _43, i_sum_107>;
common/pixel.c:64:1: note: vect_is_simple_use: operand _39
common/pixel.c:64:1: note: def_stmt: _39 = *_38;
common/pixel.c:64:1: note: type of def: 3.
common/pixel.c:64:1: note: mark relevant 3, live 0.
common/pixel.c:64:1: note: vect_is_simple_use: operand _43
common/pixel.c:64:1: note: def_stmt: _43 = *_42;
common/pixel.c:64:1: note: type of def: 3.
common/pixel.c:64:1: note: mark relevant 3, live 0.
common/pixel.c:64:1: note: vect_is_simple_use: operand i_sum_107
common/pixel.c:64:1: note: def_stmt: i_sum_107 = PHI <i_sum_48(9), i_sum_109(13)>
common/pixel.c:64:1: note: type of def: 5.
common/pixel.c:64:1: note: mark relevant 3, live 0.
common/pixel.c:64:1: note: worklist: examine stmt: i_sum_107 = PHI <i_sum_48(9), i_sum_109(13)>
common/pixel.c:64:1: note: vect_is_simple_use: operand i_sum_48
common/pixel.c:64:1: note: def_stmt: i_sum_48 = _46 + i_sum_107;
common/pixel.c:64:1: note: type of def: 5.
common/pixel.c:64:1: note: reduc-stmt defining reduc-phi in the same nest.
common/pixel.c:64:1: note: vect_is_simple_use: operand i_sum_109
common/pixel.c:64:1: note: def_stmt: i_sum_109 = PHI <i_sum_166(12), 0(8)>
common/pixel.c:64:1: note: type of def: 2.
common/pixel.c:64:1: note: def_stmt is out of loop.
common/pixel.c:64:1: note: worklist: examine stmt: _43 = *_42;
common/pixel.c:64:1: note: worklist: examine stmt: _39 = *_38;
common/pixel.c:64:1: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _39 = *_38;
  stmt_b: _43 = *_42;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _39 = *_38;
  stmt_b: _39 = *_38;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_4)
  (chrec_b = {0B, +, 1}_4)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _43 = *_42;
  stmt_b: _43 = *_42;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_4)
  (chrec_b = {0B, +, 1}_4)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/pixel.c:64:1: note: === vect_determine_vectorization_factor ===
common/pixel.c:64:1: note: ==> examining phi: x_104 = PHI <x_49(9), 0(13)>

common/pixel.c:64:1: note: ==> examining phi: i_sum_107 = PHI <i_sum_48(9), i_sum_109(13)>

common/pixel.c:64:1: note: get vectype for scalar type:  int
common/pixel.c:64:1: note: vectype: vector(4) int
common/pixel.c:64:1: note: nunits = 4
common/pixel.c:64:1: note: ==> examining phi: ivtmp_158 = PHI <ivtmp_157(9), 4(13)>

common/pixel.c:64:1: note: ==> examining statement: # DEBUG x => x_104

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: # DEBUG i_sum => i_sum_107

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: _36 = (sizetype) x_104;

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: _38 = fenc_105 + _36;

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: _39 = *_38;

common/pixel.c:64:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:64:1: note: vectype: vector(16) unsigned char
common/pixel.c:64:1: note: nunits = 16
common/pixel.c:64:1: note: ==> examining statement: _40 = (int) _39;

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: _42 = pix1_106 + _36;

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: _43 = *_42;

common/pixel.c:64:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:64:1: note: vectype: vector(16) unsigned char
common/pixel.c:64:1: note: nunits = 16
common/pixel.c:64:1: note: ==> examining statement: _44 = (int) _43;

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: _45 = _40 - _44;

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: _46 = ABS_EXPR <_45>;

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: i_sum_48 = _46 + i_sum_107;

common/pixel.c:64:1: note: ==> examining pattern statement: patt_150 = SAD_EXPR <_39, _43, i_sum_107>;

common/pixel.c:64:1: note: get vectype for scalar type:  int
common/pixel.c:64:1: note: vectype: vector(4) int
common/pixel.c:64:1: note: nunits = 4
common/pixel.c:64:1: note: ==> examining statement: # DEBUG i_sum => i_sum_48

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: x_49 = x_104 + 1;

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: # DEBUG x => x_49

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: # DEBUG x => x_49

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: # DEBUG i_sum => i_sum_48

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: ivtmp_157 = ivtmp_158 - 1;

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: if (ivtmp_157 != 0)

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: vectorization factor = 16
common/pixel.c:64:1: note: === vect_analyze_data_refs_alignment ===
common/pixel.c:64:1: note: vect_compute_data_ref_alignment:
common/pixel.c:64:1: note: can't force alignment of ref: *_38
common/pixel.c:64:1: note: vect_compute_data_ref_alignment:
common/pixel.c:64:1: note: can't force alignment of ref: *_42
common/pixel.c:64:1: note: === vect_prune_runtime_alias_test_list ===
common/pixel.c:64:1: note: === vect_enhance_data_refs_alignment ===
common/pixel.c:64:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:64:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:64:1: note: vect_can_advance_ivs_p:
common/pixel.c:64:1: note: Analyze phi: x_104 = PHI <x_49(9), 0(13)>

common/pixel.c:64:1: note: Analyze phi: i_sum_107 = PHI <i_sum_48(9), i_sum_109(13)>

common/pixel.c:64:1: note: reduc phi. skip.
common/pixel.c:64:1: note: Analyze phi: ivtmp_158 = PHI <ivtmp_157(9), 4(13)>

common/pixel.c:64:1: note: Vectorizing an unaligned access.
common/pixel.c:64:1: note: Vectorizing an unaligned access.
common/pixel.c:64:1: note: === vect_analyze_slp ===
common/pixel.c:64:1: note: === vect_make_slp_decision ===
common/pixel.c:64:1: note: === vect_detect_hybrid_slp ===
common/pixel.c:64:1: note: === vect_analyze_loop_operations ===
common/pixel.c:64:1: note: examining phi: x_104 = PHI <x_49(9), 0(13)>

common/pixel.c:64:1: note: examining phi: i_sum_107 = PHI <i_sum_48(9), i_sum_109(13)>

common/pixel.c:64:1: note: examining phi: ivtmp_158 = PHI <ivtmp_157(9), 4(13)>

common/pixel.c:64:1: note: ==> examining statement: # DEBUG x => x_104
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: # DEBUG i_sum => i_sum_107
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: _36 = (sizetype) x_104;
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: _38 = fenc_105 + _36;
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: _39 = *_38;
common/pixel.c:64:1: note: vect_is_simple_use: operand *_38
common/pixel.c:64:1: note: not ssa-name.
common/pixel.c:64:1: note: use not simple.
common/pixel.c:64:1: note: vect_is_simple_use: operand *_38
common/pixel.c:64:1: note: not ssa-name.
common/pixel.c:64:1: note: use not simple.
common/pixel.c:64:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:64:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:64:1: note: ==> examining statement: _40 = (int) _39;
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: _42 = pix1_106 + _36;
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: _43 = *_42;
common/pixel.c:64:1: note: vect_is_simple_use: operand *_42
common/pixel.c:64:1: note: not ssa-name.
common/pixel.c:64:1: note: use not simple.
common/pixel.c:64:1: note: vect_is_simple_use: operand *_42
common/pixel.c:64:1: note: not ssa-name.
common/pixel.c:64:1: note: use not simple.
common/pixel.c:64:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:64:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:64:1: note: ==> examining statement: _44 = (int) _43;
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: _45 = _40 - _44;
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: _46 = ABS_EXPR <_45>;
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: i_sum_48 = _46 + i_sum_107;
common/pixel.c:64:1: note: ==> examining pattern statement: patt_150 = SAD_EXPR <_39, _43, i_sum_107>;
common/pixel.c:64:1: note: vect_is_simple_use: operand _39
common/pixel.c:64:1: note: def_stmt: _39 = *_38;
common/pixel.c:64:1: note: type of def: 3.
common/pixel.c:64:1: note: vect_is_simple_use: operand _43
common/pixel.c:64:1: note: def_stmt: _43 = *_42;
common/pixel.c:64:1: note: type of def: 3.
common/pixel.c:64:1: note: vect_is_simple_use: operand i_sum_107
common/pixel.c:64:1: note: def_stmt: i_sum_107 = PHI <i_sum_48(9), i_sum_109(13)>
common/pixel.c:64:1: note: type of def: 5.
common/pixel.c:64:1: note: detected reduction: i_sum_48 = _46 + i_sum_107;

common/pixel.c:64:1: note: reduc op not supported by target.
vect_model_reduction_cost: inside_cost = 1, prologue_cost = 1, epilogue_cost = 5 .
common/pixel.c:64:1: note: ==> examining statement: # DEBUG i_sum => i_sum_48
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: x_49 = x_104 + 1;
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: # DEBUG x => x_49
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: # DEBUG x => x_49
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: # DEBUG i_sum => i_sum_48
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: ivtmp_157 = ivtmp_158 - 1;
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: if (ivtmp_157 != 0)
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: vectorization_factor = 16, niters = 4
common/pixel.c:64:1: note: not vectorized: iteration count too small.
common/pixel.c:64:1: note: not vectorized: iteration count smaller than vectorization factor.
common/pixel.c:64:1: note: bad operation or unsupported loop bound.

Analyzing loop at common/pixel.c:64
common/pixel.c:64:1: note: ===== analyze_loop_nest =====
common/pixel.c:64:1: note: === vect_analyze_loop_form ===
common/pixel.c:64:1: note: ===== analyze_loop_nest_1 =====
common/pixel.c:64:1: note: === vect_analyze_loop_form ===
common/pixel.c:64:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 6
  exit condition [3, + , 4294967295] != 0
  bounds on difference of bases: -3 ... -3
  result:
    # of iterations 3, bounded by 3
common/pixel.c:64:1: note: Considering outer-loop vectorization.
common/pixel.c:64:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 5
  exit condition [7, + , 4294967295] != 0
  bounds on difference of bases: -7 ... -7
  result:
    # of iterations 7, bounded by 7
common/pixel.c:64:1: note: === vect_analyze_data_refs ===
Creating dr for *_60
analyze_innermost: success.
	base_address: fenc_111
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_2(D)
	Access function 0: {{0B, +, 16}_5, +, 1}_6
Creating dr for *_64
analyze_innermost: success.
	base_address: pix0_112
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix0_3(D)
	Access function 0: {{0B, +, pretmp_169}_5, +, 1}_6
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:64:1: note: analyze in outer-loop: *fenc_111
common/pixel.c:64:1: note: 	outer base_address: fenc_2(D)
	outer offset from base address: 0
	outer constant offset from base address: 0
	outer step: 16
	outer aligned to: 128
common/pixel.c:64:1: note: got vectype for stmt: _61 = *_60;
vector(16) unsigned char
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:64:1: note: analyze in outer-loop: *pix0_112
common/pixel.c:64:1: note: failed: evolution of base is not affine.
common/pixel.c:64:1: note: bad data references.

Analyzing loop at common/pixel.c:64
common/pixel.c:64:1: note: ===== analyze_loop_nest =====
common/pixel.c:64:1: note: === vect_analyze_loop_form ===
common/pixel.c:64:1: note: === get_loop_niters ===
common/pixel.c:64:1: note: === vect_analyze_data_refs ===
Creating dr for *_60
analyze_innermost: success.
	base_address: fenc_111
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_111
	Access function 0: {0B, +, 1}_6
Creating dr for *_64
analyze_innermost: success.
	base_address: pix0_112
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix0_112
	Access function 0: {0B, +, 1}_6
common/pixel.c:64:1: note: got vectype for stmt: _61 = *_60;
vector(16) unsigned char
common/pixel.c:64:1: note: got vectype for stmt: _65 = *_64;
vector(16) unsigned char
common/pixel.c:64:1: note: === vect_analyze_scalar_cycles ===
common/pixel.c:64:1: note: Analyze phi: x_110 = PHI <x_71(3), 0(7)>

common/pixel.c:64:1: note: Access function of PHI: {0, +, 1}_6
common/pixel.c:64:1: note: step: 1,  init: 0
common/pixel.c:64:1: note: Detected induction.
common/pixel.c:64:1: note: Analyze phi: i_sum_113 = PHI <i_sum_70(3), i_sum_115(7)>

common/pixel.c:64:1: note: Access function of PHI: {i_sum_115, +, _68}_6
common/pixel.c:64:1: note: step: _68,  init: i_sum_115
common/pixel.c:64:1: note: step unknown.
common/pixel.c:64:1: note: Analyze phi: ivtmp_154 = PHI <ivtmp_153(3), 4(7)>

common/pixel.c:64:1: note: Access function of PHI: {4, +, 4294967295}_6
common/pixel.c:64:1: note: step: 4294967295,  init: 4
common/pixel.c:64:1: note: Detected induction.
common/pixel.c:64:1: note: Analyze phi: i_sum_113 = PHI <i_sum_70(3), i_sum_115(7)>

common/pixel.c:64:1: note: detected reduction: i_sum_70 = _68 + i_sum_113;

common/pixel.c:64:1: note: Detected reduction.
common/pixel.c:64:1: note: === vect_pattern_recog ===
common/pixel.c:64:1: note: vect_is_simple_use: operand _68
common/pixel.c:64:1: note: def_stmt: _68 = ABS_EXPR <_67>;
common/pixel.c:64:1: note: type of def: 3.
common/pixel.c:64:1: note: vect_is_simple_use: operand _68
common/pixel.c:64:1: note: def_stmt: _68 = ABS_EXPR <_67>;
common/pixel.c:64:1: note: type of def: 3.
common/pixel.c:64:1: note: vect_is_simple_use: operand _68
common/pixel.c:64:1: note: def_stmt: _68 = ABS_EXPR <_67>;
common/pixel.c:64:1: note: type of def: 3.
common/pixel.c:64:1: note: vect_is_simple_use: operand _62
common/pixel.c:64:1: note: def_stmt: _62 = (int) _61;
common/pixel.c:64:1: note: type of def: 3.
common/pixel.c:64:1: note: vect_is_simple_use: operand _61
common/pixel.c:64:1: note: def_stmt: _61 = *_60;
common/pixel.c:64:1: note: type of def: 3.
common/pixel.c:64:1: note: vect_is_simple_use: operand _66
common/pixel.c:64:1: note: def_stmt: _66 = (int) _65;
common/pixel.c:64:1: note: type of def: 3.
common/pixel.c:64:1: note: vect_is_simple_use: operand _65
common/pixel.c:64:1: note: def_stmt: _65 = *_64;
common/pixel.c:64:1: note: type of def: 3.
common/pixel.c:64:1: note: vect_recog_sad_pattern: detected: patt_150 = SAD_EXPR <_61, _65, i_sum_113>;

common/pixel.c:64:1: note: pattern recognized: patt_150 = SAD_EXPR <_61, _65, i_sum_113>;
common/pixel.c:64:1: note: === vect_analyze_data_ref_accesses ===
common/pixel.c:64:1: note: === vect_mark_stmts_to_be_vectorized ===
common/pixel.c:64:1: note: init: phi relevant? x_110 = PHI <x_71(3), 0(7)>
common/pixel.c:64:1: note: init: phi relevant? i_sum_113 = PHI <i_sum_70(3), i_sum_115(7)>
common/pixel.c:64:1: note: init: phi relevant? ivtmp_154 = PHI <ivtmp_153(3), 4(7)>
common/pixel.c:64:1: note: init: stmt relevant? # DEBUG x => x_110
common/pixel.c:64:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_113
common/pixel.c:64:1: note: init: stmt relevant? _58 = (sizetype) x_110;
common/pixel.c:64:1: note: init: stmt relevant? _60 = fenc_111 + _58;
common/pixel.c:64:1: note: init: stmt relevant? _61 = *_60;
common/pixel.c:64:1: note: init: stmt relevant? _62 = (int) _61;
common/pixel.c:64:1: note: init: stmt relevant? _64 = pix0_112 + _58;
common/pixel.c:64:1: note: init: stmt relevant? _65 = *_64;
common/pixel.c:64:1: note: init: stmt relevant? _66 = (int) _65;
common/pixel.c:64:1: note: init: stmt relevant? _67 = _62 - _66;
common/pixel.c:64:1: note: init: stmt relevant? _68 = ABS_EXPR <_67>;
common/pixel.c:64:1: note: init: stmt relevant? i_sum_70 = _68 + i_sum_113;
common/pixel.c:64:1: note: vec_stmt_relevant_p: used out of loop.
common/pixel.c:64:1: note: mark relevant 0, live 1.
common/pixel.c:64:1: note: last stmt in pattern. don't mark relevant/live.
common/pixel.c:64:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_70
common/pixel.c:64:1: note: init: stmt relevant? x_71 = x_110 + 1;
common/pixel.c:64:1: note: init: stmt relevant? # DEBUG x => x_71
common/pixel.c:64:1: note: init: stmt relevant? # DEBUG x => x_71
common/pixel.c:64:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_70
common/pixel.c:64:1: note: init: stmt relevant? ivtmp_153 = ivtmp_154 - 1;
common/pixel.c:64:1: note: init: stmt relevant? if (ivtmp_153 != 0)
common/pixel.c:64:1: note: worklist: examine stmt: patt_150 = SAD_EXPR <_61, _65, i_sum_113>;
common/pixel.c:64:1: note: vect_is_simple_use: operand _61
common/pixel.c:64:1: note: def_stmt: _61 = *_60;
common/pixel.c:64:1: note: type of def: 3.
common/pixel.c:64:1: note: mark relevant 3, live 0.
common/pixel.c:64:1: note: vect_is_simple_use: operand _65
common/pixel.c:64:1: note: def_stmt: _65 = *_64;
common/pixel.c:64:1: note: type of def: 3.
common/pixel.c:64:1: note: mark relevant 3, live 0.
common/pixel.c:64:1: note: vect_is_simple_use: operand i_sum_113
common/pixel.c:64:1: note: def_stmt: i_sum_113 = PHI <i_sum_70(3), i_sum_115(7)>
common/pixel.c:64:1: note: type of def: 5.
common/pixel.c:64:1: note: mark relevant 3, live 0.
common/pixel.c:64:1: note: worklist: examine stmt: i_sum_113 = PHI <i_sum_70(3), i_sum_115(7)>
common/pixel.c:64:1: note: vect_is_simple_use: operand i_sum_70
common/pixel.c:64:1: note: def_stmt: i_sum_70 = _68 + i_sum_113;
common/pixel.c:64:1: note: type of def: 5.
common/pixel.c:64:1: note: reduc-stmt defining reduc-phi in the same nest.
common/pixel.c:64:1: note: vect_is_simple_use: operand i_sum_115
common/pixel.c:64:1: note: def_stmt: i_sum_115 = PHI <i_sum_164(6), 0(2)>
common/pixel.c:64:1: note: type of def: 2.
common/pixel.c:64:1: note: def_stmt is out of loop.
common/pixel.c:64:1: note: worklist: examine stmt: _65 = *_64;
common/pixel.c:64:1: note: worklist: examine stmt: _61 = *_60;
common/pixel.c:64:1: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _61 = *_60;
  stmt_b: _65 = *_64;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _61 = *_60;
  stmt_b: _61 = *_60;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_6)
  (chrec_b = {0B, +, 1}_6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _65 = *_64;
  stmt_b: _65 = *_64;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_6)
  (chrec_b = {0B, +, 1}_6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/pixel.c:64:1: note: === vect_determine_vectorization_factor ===
common/pixel.c:64:1: note: ==> examining phi: x_110 = PHI <x_71(3), 0(7)>

common/pixel.c:64:1: note: ==> examining phi: i_sum_113 = PHI <i_sum_70(3), i_sum_115(7)>

common/pixel.c:64:1: note: get vectype for scalar type:  int
common/pixel.c:64:1: note: vectype: vector(4) int
common/pixel.c:64:1: note: nunits = 4
common/pixel.c:64:1: note: ==> examining phi: ivtmp_154 = PHI <ivtmp_153(3), 4(7)>

common/pixel.c:64:1: note: ==> examining statement: # DEBUG x => x_110

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: # DEBUG i_sum => i_sum_113

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: _58 = (sizetype) x_110;

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: _60 = fenc_111 + _58;

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: _61 = *_60;

common/pixel.c:64:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:64:1: note: vectype: vector(16) unsigned char
common/pixel.c:64:1: note: nunits = 16
common/pixel.c:64:1: note: ==> examining statement: _62 = (int) _61;

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: _64 = pix0_112 + _58;

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: _65 = *_64;

common/pixel.c:64:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:64:1: note: vectype: vector(16) unsigned char
common/pixel.c:64:1: note: nunits = 16
common/pixel.c:64:1: note: ==> examining statement: _66 = (int) _65;

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: _67 = _62 - _66;

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: _68 = ABS_EXPR <_67>;

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: i_sum_70 = _68 + i_sum_113;

common/pixel.c:64:1: note: ==> examining pattern statement: patt_150 = SAD_EXPR <_61, _65, i_sum_113>;

common/pixel.c:64:1: note: get vectype for scalar type:  int
common/pixel.c:64:1: note: vectype: vector(4) int
common/pixel.c:64:1: note: nunits = 4
common/pixel.c:64:1: note: ==> examining statement: # DEBUG i_sum => i_sum_70

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: x_71 = x_110 + 1;

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: # DEBUG x => x_71

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: # DEBUG x => x_71

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: # DEBUG i_sum => i_sum_70

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: ivtmp_153 = ivtmp_154 - 1;

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: if (ivtmp_153 != 0)

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: vectorization factor = 16
common/pixel.c:64:1: note: === vect_analyze_data_refs_alignment ===
common/pixel.c:64:1: note: vect_compute_data_ref_alignment:
common/pixel.c:64:1: note: can't force alignment of ref: *_60
common/pixel.c:64:1: note: vect_compute_data_ref_alignment:
common/pixel.c:64:1: note: can't force alignment of ref: *_64
common/pixel.c:64:1: note: === vect_prune_runtime_alias_test_list ===
common/pixel.c:64:1: note: === vect_enhance_data_refs_alignment ===
common/pixel.c:64:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:64:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:64:1: note: vect_can_advance_ivs_p:
common/pixel.c:64:1: note: Analyze phi: x_110 = PHI <x_71(3), 0(7)>

common/pixel.c:64:1: note: Analyze phi: i_sum_113 = PHI <i_sum_70(3), i_sum_115(7)>

common/pixel.c:64:1: note: reduc phi. skip.
common/pixel.c:64:1: note: Analyze phi: ivtmp_154 = PHI <ivtmp_153(3), 4(7)>

common/pixel.c:64:1: note: Vectorizing an unaligned access.
common/pixel.c:64:1: note: Vectorizing an unaligned access.
common/pixel.c:64:1: note: === vect_analyze_slp ===
common/pixel.c:64:1: note: === vect_make_slp_decision ===
common/pixel.c:64:1: note: === vect_detect_hybrid_slp ===
common/pixel.c:64:1: note: === vect_analyze_loop_operations ===
common/pixel.c:64:1: note: examining phi: x_110 = PHI <x_71(3), 0(7)>

common/pixel.c:64:1: note: examining phi: i_sum_113 = PHI <i_sum_70(3), i_sum_115(7)>

common/pixel.c:64:1: note: examining phi: ivtmp_154 = PHI <ivtmp_153(3), 4(7)>

common/pixel.c:64:1: note: ==> examining statement: # DEBUG x => x_110
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: # DEBUG i_sum => i_sum_113
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: _58 = (sizetype) x_110;
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: _60 = fenc_111 + _58;
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: _61 = *_60;
common/pixel.c:64:1: note: vect_is_simple_use: operand *_60
common/pixel.c:64:1: note: not ssa-name.
common/pixel.c:64:1: note: use not simple.
common/pixel.c:64:1: note: vect_is_simple_use: operand *_60
common/pixel.c:64:1: note: not ssa-name.
common/pixel.c:64:1: note: use not simple.
common/pixel.c:64:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:64:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:64:1: note: ==> examining statement: _62 = (int) _61;
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: _64 = pix0_112 + _58;
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: _65 = *_64;
common/pixel.c:64:1: note: vect_is_simple_use: operand *_64
common/pixel.c:64:1: note: not ssa-name.
common/pixel.c:64:1: note: use not simple.
common/pixel.c:64:1: note: vect_is_simple_use: operand *_64
common/pixel.c:64:1: note: not ssa-name.
common/pixel.c:64:1: note: use not simple.
common/pixel.c:64:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:64:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:64:1: note: ==> examining statement: _66 = (int) _65;
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: _67 = _62 - _66;
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: _68 = ABS_EXPR <_67>;
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: i_sum_70 = _68 + i_sum_113;
common/pixel.c:64:1: note: ==> examining pattern statement: patt_150 = SAD_EXPR <_61, _65, i_sum_113>;
common/pixel.c:64:1: note: vect_is_simple_use: operand _61
common/pixel.c:64:1: note: def_stmt: _61 = *_60;
common/pixel.c:64:1: note: type of def: 3.
common/pixel.c:64:1: note: vect_is_simple_use: operand _65
common/pixel.c:64:1: note: def_stmt: _65 = *_64;
common/pixel.c:64:1: note: type of def: 3.
common/pixel.c:64:1: note: vect_is_simple_use: operand i_sum_113
common/pixel.c:64:1: note: def_stmt: i_sum_113 = PHI <i_sum_70(3), i_sum_115(7)>
common/pixel.c:64:1: note: type of def: 5.
common/pixel.c:64:1: note: detected reduction: i_sum_70 = _68 + i_sum_113;

common/pixel.c:64:1: note: reduc op not supported by target.
vect_model_reduction_cost: inside_cost = 1, prologue_cost = 1, epilogue_cost = 5 .
common/pixel.c:64:1: note: ==> examining statement: # DEBUG i_sum => i_sum_70
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: x_71 = x_110 + 1;
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: # DEBUG x => x_71
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: # DEBUG x => x_71
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: # DEBUG i_sum => i_sum_70
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: ivtmp_153 = ivtmp_154 - 1;
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: if (ivtmp_153 != 0)
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: vectorization_factor = 16, niters = 4
common/pixel.c:64:1: note: not vectorized: iteration count too small.
common/pixel.c:64:1: note: not vectorized: iteration count smaller than vectorization factor.
common/pixel.c:64:1: note: bad operation or unsupported loop bound.
common/pixel.c:388:1: note: vectorized 0 loops in function.
x264_pixel_sad_x3_4x8 (uint8_t * fenc, uint8_t * pix0, uint8_t * pix1, uint8_t * pix2, int i_stride, int * scores)
{
  int i_sum;
  int x;
  int y;
  int i_sum;
  int x;
  int y;
  int i_sum;
  int x;
  int y;
  sizetype _10;
  uint8_t * _16;
  unsigned char _17;
  int _18;
  uint8_t * _20;
  unsigned char _21;
  int _22;
  int _23;
  int _24;
  sizetype _36;
  uint8_t * _38;
  unsigned char _39;
  int _40;
  uint8_t * _42;
  unsigned char _43;
  int _44;
  int _45;
  int _46;
  sizetype _58;
  uint8_t * _60;
  unsigned char _61;
  int _62;
  uint8_t * _64;
  unsigned char _65;
  int _66;
  int _67;
  int _68;
  unsigned int ivtmp_151;
  unsigned int ivtmp_152;
  unsigned int ivtmp_153;
  unsigned int ivtmp_154;
  unsigned int ivtmp_155;
  unsigned int ivtmp_156;
  unsigned int ivtmp_157;
  unsigned int ivtmp_158;
  unsigned int ivtmp_159;
  unsigned int ivtmp_160;
  unsigned int ivtmp_161;
  unsigned int ivtmp_162;
  sizetype pretmp_169;

  <bb 2>:
  # DEBUG pix1 => fenc_2(D)
  # DEBUG i_stride_pix1 => 16
  # DEBUG pix2 => pix0_3(D)
  # DEBUG i_stride_pix2 => i_stride_4(D)
  # DEBUG i_sum => 0
  # DEBUG y => 0
  # DEBUG y => 0
  # DEBUG i_sum => 0
  # DEBUG pix2 => pix0_3(D)
  # DEBUG pix1 => fenc_2(D)
  pretmp_169 = (sizetype) i_stride_4(D);
  goto <bb 7>;

  <bb 3>:

  <bb 4>:
  # x_110 = PHI <x_71(3), 0(7)>
  # i_sum_113 = PHI <i_sum_70(3), i_sum_115(7)>
  # ivtmp_154 = PHI <ivtmp_153(3), 4(7)>
  # DEBUG x => x_110
  # DEBUG i_sum => i_sum_113
  _58 = (sizetype) x_110;
  _60 = fenc_111 + _58;
  _61 = *_60;
  _62 = (int) _61;
  _64 = pix0_112 + _58;
  _65 = *_64;
  _66 = (int) _65;
  _67 = _62 - _66;
  _68 = ABS_EXPR <_67>;
  i_sum_70 = _68 + i_sum_113;
  # DEBUG i_sum => i_sum_70
  x_71 = x_110 + 1;
  # DEBUG x => x_71
  # DEBUG x => x_71
  # DEBUG i_sum => i_sum_70
  ivtmp_153 = ivtmp_154 - 1;
  if (ivtmp_153 != 0)
    goto <bb 3>;
  else
    goto <bb 5>;

  <bb 5>:
  # i_sum_164 = PHI <i_sum_70(4)>
  fenc_72 = fenc_111 + 16;
  # DEBUG pix1 => fenc_72
  pix0_74 = pix0_112 + pretmp_169;
  # DEBUG pix2 => pix0_74
  y_76 = y_114 + 1;
  # DEBUG y => y_76
  # DEBUG y => y_76
  # DEBUG i_sum => i_sum_164
  # DEBUG pix2 => pix0_74
  # DEBUG pix1 => fenc_72
  ivtmp_151 = ivtmp_152 - 1;
  if (ivtmp_151 != 0)
    goto <bb 6>;
  else
    goto <bb 8>;

  <bb 6>:

  <bb 7>:
  # fenc_111 = PHI <fenc_72(6), fenc_2(D)(2)>
  # pix0_112 = PHI <pix0_74(6), pix0_3(D)(2)>
  # y_114 = PHI <y_76(6), 0(2)>
  # i_sum_115 = PHI <i_sum_164(6), 0(2)>
  # ivtmp_152 = PHI <ivtmp_151(6), 8(2)>
  # DEBUG y => y_114
  # DEBUG i_sum => i_sum_115
  # DEBUG pix2 => pix0_112
  # DEBUG pix1 => fenc_111
  # DEBUG x => 0
  # DEBUG i_sum => i_sum_115
  goto <bb 4>;

  <bb 8>:
  # i_sum_163 = PHI <i_sum_164(5)>
  # DEBUG pix1 => NULL
  # DEBUG i_stride_pix1 => NULL
  # DEBUG pix2 => NULL
  # DEBUG i_stride_pix2 => NULL
  # DEBUG y => NULL
  # DEBUG x => NULL
  # DEBUG i_sum => NULL
  *scores_6(D) = i_sum_163;
  # DEBUG pix1 => fenc_2(D)
  # DEBUG i_stride_pix1 => 16
  # DEBUG pix2 => pix1_9(D)
  # DEBUG i_stride_pix2 => i_stride_4(D)
  # DEBUG y => 0
  # DEBUG i_sum => 0
  # DEBUG pix2 => pix1_9(D)
  # DEBUG pix1 => fenc_2(D)
  goto <bb 13>;

  <bb 9>:

  <bb 10>:
  # x_104 = PHI <x_49(9), 0(13)>
  # i_sum_107 = PHI <i_sum_48(9), i_sum_109(13)>
  # ivtmp_158 = PHI <ivtmp_157(9), 4(13)>
  # DEBUG x => x_104
  # DEBUG i_sum => i_sum_107
  _36 = (sizetype) x_104;
  _38 = fenc_105 + _36;
  _39 = *_38;
  _40 = (int) _39;
  _42 = pix1_106 + _36;
  _43 = *_42;
  _44 = (int) _43;
  _45 = _40 - _44;
  _46 = ABS_EXPR <_45>;
  i_sum_48 = _46 + i_sum_107;
  # DEBUG i_sum => i_sum_48
  x_49 = x_104 + 1;
  # DEBUG x => x_49
  # DEBUG x => x_49
  # DEBUG i_sum => i_sum_48
  ivtmp_157 = ivtmp_158 - 1;
  if (ivtmp_157 != 0)
    goto <bb 9>;
  else
    goto <bb 11>;

  <bb 11>:
  # i_sum_166 = PHI <i_sum_48(10)>
  fenc_50 = fenc_105 + 16;
  # DEBUG pix1 => fenc_50
  pix1_52 = pix1_106 + pretmp_169;
  # DEBUG pix2 => pix1_52
  y_54 = y_108 + 1;
  # DEBUG y => y_54
  # DEBUG y => y_54
  # DEBUG i_sum => i_sum_166
  # DEBUG pix2 => pix1_52
  # DEBUG pix1 => fenc_50
  ivtmp_155 = ivtmp_156 - 1;
  if (ivtmp_155 != 0)
    goto <bb 12>;
  else
    goto <bb 14>;

  <bb 12>:

  <bb 13>:
  # fenc_105 = PHI <fenc_50(12), fenc_2(D)(8)>
  # pix1_106 = PHI <pix1_52(12), pix1_9(D)(8)>
  # y_108 = PHI <y_54(12), 0(8)>
  # i_sum_109 = PHI <i_sum_166(12), 0(8)>
  # ivtmp_156 = PHI <ivtmp_155(12), 8(8)>
  # DEBUG y => y_108
  # DEBUG i_sum => i_sum_109
  # DEBUG pix2 => pix1_106
  # DEBUG pix1 => fenc_105
  # DEBUG x => 0
  # DEBUG i_sum => i_sum_109
  goto <bb 10>;

  <bb 14>:
  # i_sum_165 = PHI <i_sum_166(11)>
  # DEBUG pix1 => NULL
  # DEBUG i_stride_pix1 => NULL
  # DEBUG pix2 => NULL
  # DEBUG i_stride_pix2 => NULL
  # DEBUG y => NULL
  # DEBUG x => NULL
  # DEBUG i_sum => NULL
  MEM[(int *)scores_6(D) + 4B] = i_sum_165;
  # DEBUG pix1 => fenc_2(D)
  # DEBUG i_stride_pix1 => 16
  # DEBUG pix2 => pix2_13(D)
  # DEBUG i_stride_pix2 => i_stride_4(D)
  # DEBUG y => 0
  # DEBUG i_sum => 0
  # DEBUG pix2 => pix2_13(D)
  # DEBUG pix1 => fenc_2(D)
  goto <bb 19>;

  <bb 15>:

  <bb 16>:
  # x_8 = PHI <x_27(15), 0(19)>
  # i_sum_78 = PHI <i_sum_26(15), i_sum_12(19)>
  # ivtmp_162 = PHI <ivtmp_161(15), 4(19)>
  # DEBUG x => x_8
  # DEBUG i_sum => i_sum_78
  _10 = (sizetype) x_8;
  _16 = fenc_34 + _10;
  _17 = *_16;
  _18 = (int) _17;
  _20 = pix2_79 + _10;
  _21 = *_20;
  _22 = (int) _21;
  _23 = _18 - _22;
  _24 = ABS_EXPR <_23>;
  i_sum_26 = _24 + i_sum_78;
  # DEBUG i_sum => i_sum_26
  x_27 = x_8 + 1;
  # DEBUG x => x_27
  # DEBUG x => x_27
  # DEBUG i_sum => i_sum_26
  ivtmp_161 = ivtmp_162 - 1;
  if (ivtmp_161 != 0)
    goto <bb 15>;
  else
    goto <bb 17>;

  <bb 17>:
  # i_sum_168 = PHI <i_sum_26(16)>
  fenc_28 = fenc_34 + 16;
  # DEBUG pix1 => fenc_28
  pix2_30 = pix2_79 + pretmp_169;
  # DEBUG pix2 => pix2_30
  y_32 = y_56 + 1;
  # DEBUG y => y_32
  # DEBUG y => y_32
  # DEBUG i_sum => i_sum_168
  # DEBUG pix2 => pix2_30
  # DEBUG pix1 => fenc_28
  ivtmp_159 = ivtmp_160 - 1;
  if (ivtmp_159 != 0)
    goto <bb 18>;
  else
    goto <bb 20>;

  <bb 18>:

  <bb 19>:
  # fenc_34 = PHI <fenc_28(18), fenc_2(D)(14)>
  # pix2_79 = PHI <pix2_30(18), pix2_13(D)(14)>
  # y_56 = PHI <y_32(18), 0(14)>
  # i_sum_12 = PHI <i_sum_168(18), 0(14)>
  # ivtmp_160 = PHI <ivtmp_159(18), 8(14)>
  # DEBUG y => y_56
  # DEBUG i_sum => i_sum_12
  # DEBUG pix2 => pix2_79
  # DEBUG pix1 => fenc_34
  # DEBUG x => 0
  # DEBUG i_sum => i_sum_12
  goto <bb 16>;

  <bb 20>:
  # i_sum_167 = PHI <i_sum_168(17)>
  # DEBUG pix1 => NULL
  # DEBUG i_stride_pix1 => NULL
  # DEBUG pix2 => NULL
  # DEBUG i_stride_pix2 => NULL
  # DEBUG y => NULL
  # DEBUG x => NULL
  # DEBUG i_sum => NULL
  MEM[(int *)scores_6(D) + 8B] = i_sum_167;
  return;

}



;; Function x264_pixel_sad_x4_4x8 (x264_pixel_sad_x4_4x8, funcdef_no=161, decl_uid=8111, cgraph_uid=161, symbol_order=204)


Analyzing loop at common/pixel.c:64
common/pixel.c:64:1: note: ===== analyze_loop_nest =====
common/pixel.c:64:1: note: === vect_analyze_loop_form ===
common/pixel.c:64:1: note: ===== analyze_loop_nest_1 =====
common/pixel.c:64:1: note: === vect_analyze_loop_form ===
common/pixel.c:64:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 2
  exit condition [3, + , 4294967295] != 0
  bounds on difference of bases: -3 ... -3
  result:
    # of iterations 3, bounded by 3
common/pixel.c:64:1: note: Considering outer-loop vectorization.
common/pixel.c:64:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 1
  exit condition [7, + , 4294967295] != 0
  bounds on difference of bases: -7 ... -7
  result:
    # of iterations 7, bounded by 7
common/pixel.c:64:1: note: === vect_analyze_data_refs ===
Creating dr for *_5
analyze_innermost: success.
	base_address: fenc_16
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_2(D)
	Access function 0: {{0B, +, 16}_1, +, 1}_2
Creating dr for *_23
analyze_innermost: success.
	base_address: pix3_103
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix3_17(D)
	Access function 0: {{0B, +, pretmp_223}_1, +, 1}_2
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:64:1: note: analyze in outer-loop: *fenc_16
common/pixel.c:64:1: note: 	outer base_address: fenc_2(D)
	outer offset from base address: 0
	outer constant offset from base address: 0
	outer step: 16
	outer aligned to: 128
common/pixel.c:64:1: note: got vectype for stmt: _20 = *_5;
vector(16) unsigned char
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:64:1: note: analyze in outer-loop: *pix3_103
common/pixel.c:64:1: note: failed: evolution of base is not affine.
common/pixel.c:64:1: note: bad data references.

Analyzing loop at common/pixel.c:64
common/pixel.c:64:1: note: ===== analyze_loop_nest =====
common/pixel.c:64:1: note: === vect_analyze_loop_form ===
common/pixel.c:64:1: note: === get_loop_niters ===
common/pixel.c:64:1: note: === vect_analyze_data_refs ===
Creating dr for *_5
analyze_innermost: success.
	base_address: fenc_16
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_16
	Access function 0: {0B, +, 1}_2
Creating dr for *_23
analyze_innermost: success.
	base_address: pix3_103
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix3_103
	Access function 0: {0B, +, 1}_2
common/pixel.c:64:1: note: got vectype for stmt: _20 = *_5;
vector(16) unsigned char
common/pixel.c:64:1: note: got vectype for stmt: _24 = *_23;
vector(16) unsigned char
common/pixel.c:64:1: note: === vect_analyze_scalar_cycles ===
common/pixel.c:64:1: note: Analyze phi: x_8 = PHI <x_30(21), 0(25)>

common/pixel.c:64:1: note: Access function of PHI: {0, +, 1}_2
common/pixel.c:64:1: note: step: 1,  init: 0
common/pixel.c:64:1: note: Detected induction.
common/pixel.c:64:1: note: Analyze phi: i_sum_59 = PHI <i_sum_29(21), i_sum_104(25)>

common/pixel.c:64:1: note: Access function of PHI: {i_sum_104, +, _27}_2
common/pixel.c:64:1: note: step: _27,  init: i_sum_104
common/pixel.c:64:1: note: step unknown.
common/pixel.c:64:1: note: Analyze phi: ivtmp_214 = PHI <ivtmp_213(21), 4(25)>

common/pixel.c:64:1: note: Access function of PHI: {4, +, 4294967295}_2
common/pixel.c:64:1: note: step: 4294967295,  init: 4
common/pixel.c:64:1: note: Detected induction.
common/pixel.c:64:1: note: Analyze phi: i_sum_59 = PHI <i_sum_29(21), i_sum_104(25)>

common/pixel.c:64:1: note: detected reduction: i_sum_29 = _27 + i_sum_59;

common/pixel.c:64:1: note: Detected reduction.
common/pixel.c:64:1: note: === vect_pattern_recog ===
common/pixel.c:64:1: note: vect_is_simple_use: operand _27
common/pixel.c:64:1: note: def_stmt: _27 = ABS_EXPR <_26>;
common/pixel.c:64:1: note: type of def: 3.
common/pixel.c:64:1: note: vect_is_simple_use: operand _27
common/pixel.c:64:1: note: def_stmt: _27 = ABS_EXPR <_26>;
common/pixel.c:64:1: note: type of def: 3.
common/pixel.c:64:1: note: vect_is_simple_use: operand _27
common/pixel.c:64:1: note: def_stmt: _27 = ABS_EXPR <_26>;
common/pixel.c:64:1: note: type of def: 3.
common/pixel.c:64:1: note: vect_is_simple_use: operand _21
common/pixel.c:64:1: note: def_stmt: _21 = (int) _20;
common/pixel.c:64:1: note: type of def: 3.
common/pixel.c:64:1: note: vect_is_simple_use: operand _20
common/pixel.c:64:1: note: def_stmt: _20 = *_5;
common/pixel.c:64:1: note: type of def: 3.
common/pixel.c:64:1: note: vect_is_simple_use: operand _25
common/pixel.c:64:1: note: def_stmt: _25 = (int) _24;
common/pixel.c:64:1: note: type of def: 3.
common/pixel.c:64:1: note: vect_is_simple_use: operand _24
common/pixel.c:64:1: note: def_stmt: _24 = *_23;
common/pixel.c:64:1: note: type of def: 3.
common/pixel.c:64:1: note: vect_recog_sad_pattern: detected: patt_198 = SAD_EXPR <_20, _24, i_sum_59>;

common/pixel.c:64:1: note: pattern recognized: patt_198 = SAD_EXPR <_20, _24, i_sum_59>;
common/pixel.c:64:1: note: === vect_analyze_data_ref_accesses ===
common/pixel.c:64:1: note: === vect_mark_stmts_to_be_vectorized ===
common/pixel.c:64:1: note: init: phi relevant? x_8 = PHI <x_30(21), 0(25)>
common/pixel.c:64:1: note: init: phi relevant? i_sum_59 = PHI <i_sum_29(21), i_sum_104(25)>
common/pixel.c:64:1: note: init: phi relevant? ivtmp_214 = PHI <ivtmp_213(21), 4(25)>
common/pixel.c:64:1: note: init: stmt relevant? # DEBUG x => x_8
common/pixel.c:64:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_59
common/pixel.c:64:1: note: init: stmt relevant? _14 = (sizetype) x_8;
common/pixel.c:64:1: note: init: stmt relevant? _5 = fenc_16 + _14;
common/pixel.c:64:1: note: init: stmt relevant? _20 = *_5;
common/pixel.c:64:1: note: init: stmt relevant? _21 = (int) _20;
common/pixel.c:64:1: note: init: stmt relevant? _23 = pix3_103 + _14;
common/pixel.c:64:1: note: init: stmt relevant? _24 = *_23;
common/pixel.c:64:1: note: init: stmt relevant? _25 = (int) _24;
common/pixel.c:64:1: note: init: stmt relevant? _26 = _21 - _25;
common/pixel.c:64:1: note: init: stmt relevant? _27 = ABS_EXPR <_26>;
common/pixel.c:64:1: note: init: stmt relevant? i_sum_29 = _27 + i_sum_59;
common/pixel.c:64:1: note: vec_stmt_relevant_p: used out of loop.
common/pixel.c:64:1: note: mark relevant 0, live 1.
common/pixel.c:64:1: note: last stmt in pattern. don't mark relevant/live.
common/pixel.c:64:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_29
common/pixel.c:64:1: note: init: stmt relevant? x_30 = x_8 + 1;
common/pixel.c:64:1: note: init: stmt relevant? # DEBUG x => x_30
common/pixel.c:64:1: note: init: stmt relevant? # DEBUG x => x_30
common/pixel.c:64:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_29
common/pixel.c:64:1: note: init: stmt relevant? ivtmp_213 = ivtmp_214 - 1;
common/pixel.c:64:1: note: init: stmt relevant? if (ivtmp_213 != 0)
common/pixel.c:64:1: note: worklist: examine stmt: patt_198 = SAD_EXPR <_20, _24, i_sum_59>;
common/pixel.c:64:1: note: vect_is_simple_use: operand _20
common/pixel.c:64:1: note: def_stmt: _20 = *_5;
common/pixel.c:64:1: note: type of def: 3.
common/pixel.c:64:1: note: mark relevant 3, live 0.
common/pixel.c:64:1: note: vect_is_simple_use: operand _24
common/pixel.c:64:1: note: def_stmt: _24 = *_23;
common/pixel.c:64:1: note: type of def: 3.
common/pixel.c:64:1: note: mark relevant 3, live 0.
common/pixel.c:64:1: note: vect_is_simple_use: operand i_sum_59
common/pixel.c:64:1: note: def_stmt: i_sum_59 = PHI <i_sum_29(21), i_sum_104(25)>
common/pixel.c:64:1: note: type of def: 5.
common/pixel.c:64:1: note: mark relevant 3, live 0.
common/pixel.c:64:1: note: worklist: examine stmt: i_sum_59 = PHI <i_sum_29(21), i_sum_104(25)>
common/pixel.c:64:1: note: vect_is_simple_use: operand i_sum_29
common/pixel.c:64:1: note: def_stmt: i_sum_29 = _27 + i_sum_59;
common/pixel.c:64:1: note: type of def: 5.
common/pixel.c:64:1: note: reduc-stmt defining reduc-phi in the same nest.
common/pixel.c:64:1: note: vect_is_simple_use: operand i_sum_104
common/pixel.c:64:1: note: def_stmt: i_sum_104 = PHI <i_sum_222(24), 0(20)>
common/pixel.c:64:1: note: type of def: 2.
common/pixel.c:64:1: note: def_stmt is out of loop.
common/pixel.c:64:1: note: worklist: examine stmt: _24 = *_23;
common/pixel.c:64:1: note: worklist: examine stmt: _20 = *_5;
common/pixel.c:64:1: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _20 = *_5;
  stmt_b: _24 = *_23;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _20 = *_5;
  stmt_b: _20 = *_5;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_2)
  (chrec_b = {0B, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _24 = *_23;
  stmt_b: _24 = *_23;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_2)
  (chrec_b = {0B, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/pixel.c:64:1: note: === vect_determine_vectorization_factor ===
common/pixel.c:64:1: note: ==> examining phi: x_8 = PHI <x_30(21), 0(25)>

common/pixel.c:64:1: note: ==> examining phi: i_sum_59 = PHI <i_sum_29(21), i_sum_104(25)>

common/pixel.c:64:1: note: get vectype for scalar type:  int
common/pixel.c:64:1: note: vectype: vector(4) int
common/pixel.c:64:1: note: nunits = 4
common/pixel.c:64:1: note: ==> examining phi: ivtmp_214 = PHI <ivtmp_213(21), 4(25)>

common/pixel.c:64:1: note: ==> examining statement: # DEBUG x => x_8

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: # DEBUG i_sum => i_sum_59

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: _14 = (sizetype) x_8;

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: _5 = fenc_16 + _14;

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: _20 = *_5;

common/pixel.c:64:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:64:1: note: vectype: vector(16) unsigned char
common/pixel.c:64:1: note: nunits = 16
common/pixel.c:64:1: note: ==> examining statement: _21 = (int) _20;

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: _23 = pix3_103 + _14;

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: _24 = *_23;

common/pixel.c:64:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:64:1: note: vectype: vector(16) unsigned char
common/pixel.c:64:1: note: nunits = 16
common/pixel.c:64:1: note: ==> examining statement: _25 = (int) _24;

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: _26 = _21 - _25;

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: _27 = ABS_EXPR <_26>;

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: i_sum_29 = _27 + i_sum_59;

common/pixel.c:64:1: note: ==> examining pattern statement: patt_198 = SAD_EXPR <_20, _24, i_sum_59>;

common/pixel.c:64:1: note: get vectype for scalar type:  int
common/pixel.c:64:1: note: vectype: vector(4) int
common/pixel.c:64:1: note: nunits = 4
common/pixel.c:64:1: note: ==> examining statement: # DEBUG i_sum => i_sum_29

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: x_30 = x_8 + 1;

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: # DEBUG x => x_30

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: # DEBUG x => x_30

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: # DEBUG i_sum => i_sum_29

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: ivtmp_213 = ivtmp_214 - 1;

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: if (ivtmp_213 != 0)

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: vectorization factor = 16
common/pixel.c:64:1: note: === vect_analyze_data_refs_alignment ===
common/pixel.c:64:1: note: vect_compute_data_ref_alignment:
common/pixel.c:64:1: note: can't force alignment of ref: *_5
common/pixel.c:64:1: note: vect_compute_data_ref_alignment:
common/pixel.c:64:1: note: can't force alignment of ref: *_23
common/pixel.c:64:1: note: === vect_prune_runtime_alias_test_list ===
common/pixel.c:64:1: note: === vect_enhance_data_refs_alignment ===
common/pixel.c:64:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:64:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:64:1: note: vect_can_advance_ivs_p:
common/pixel.c:64:1: note: Analyze phi: x_8 = PHI <x_30(21), 0(25)>

common/pixel.c:64:1: note: Analyze phi: i_sum_59 = PHI <i_sum_29(21), i_sum_104(25)>

common/pixel.c:64:1: note: reduc phi. skip.
common/pixel.c:64:1: note: Analyze phi: ivtmp_214 = PHI <ivtmp_213(21), 4(25)>

common/pixel.c:64:1: note: Vectorizing an unaligned access.
common/pixel.c:64:1: note: Vectorizing an unaligned access.
common/pixel.c:64:1: note: === vect_analyze_slp ===
common/pixel.c:64:1: note: === vect_make_slp_decision ===
common/pixel.c:64:1: note: === vect_detect_hybrid_slp ===
common/pixel.c:64:1: note: === vect_analyze_loop_operations ===
common/pixel.c:64:1: note: examining phi: x_8 = PHI <x_30(21), 0(25)>

common/pixel.c:64:1: note: examining phi: i_sum_59 = PHI <i_sum_29(21), i_sum_104(25)>

common/pixel.c:64:1: note: examining phi: ivtmp_214 = PHI <ivtmp_213(21), 4(25)>

common/pixel.c:64:1: note: ==> examining statement: # DEBUG x => x_8
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: # DEBUG i_sum => i_sum_59
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: _14 = (sizetype) x_8;
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: _5 = fenc_16 + _14;
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: _20 = *_5;
common/pixel.c:64:1: note: vect_is_simple_use: operand *_5
common/pixel.c:64:1: note: not ssa-name.
common/pixel.c:64:1: note: use not simple.
common/pixel.c:64:1: note: vect_is_simple_use: operand *_5
common/pixel.c:64:1: note: not ssa-name.
common/pixel.c:64:1: note: use not simple.
common/pixel.c:64:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:64:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:64:1: note: ==> examining statement: _21 = (int) _20;
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: _23 = pix3_103 + _14;
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: _24 = *_23;
common/pixel.c:64:1: note: vect_is_simple_use: operand *_23
common/pixel.c:64:1: note: not ssa-name.
common/pixel.c:64:1: note: use not simple.
common/pixel.c:64:1: note: vect_is_simple_use: operand *_23
common/pixel.c:64:1: note: not ssa-name.
common/pixel.c:64:1: note: use not simple.
common/pixel.c:64:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:64:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:64:1: note: ==> examining statement: _25 = (int) _24;
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: _26 = _21 - _25;
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: _27 = ABS_EXPR <_26>;
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: i_sum_29 = _27 + i_sum_59;
common/pixel.c:64:1: note: ==> examining pattern statement: patt_198 = SAD_EXPR <_20, _24, i_sum_59>;
common/pixel.c:64:1: note: vect_is_simple_use: operand _20
common/pixel.c:64:1: note: def_stmt: _20 = *_5;
common/pixel.c:64:1: note: type of def: 3.
common/pixel.c:64:1: note: vect_is_simple_use: operand _24
common/pixel.c:64:1: note: def_stmt: _24 = *_23;
common/pixel.c:64:1: note: type of def: 3.
common/pixel.c:64:1: note: vect_is_simple_use: operand i_sum_59
common/pixel.c:64:1: note: def_stmt: i_sum_59 = PHI <i_sum_29(21), i_sum_104(25)>
common/pixel.c:64:1: note: type of def: 5.
common/pixel.c:64:1: note: detected reduction: i_sum_29 = _27 + i_sum_59;

common/pixel.c:64:1: note: reduc op not supported by target.
vect_model_reduction_cost: inside_cost = 1, prologue_cost = 1, epilogue_cost = 5 .
common/pixel.c:64:1: note: ==> examining statement: # DEBUG i_sum => i_sum_29
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: x_30 = x_8 + 1;
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: # DEBUG x => x_30
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: # DEBUG x => x_30
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: # DEBUG i_sum => i_sum_29
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: ivtmp_213 = ivtmp_214 - 1;
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: if (ivtmp_213 != 0)
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: vectorization_factor = 16, niters = 4
common/pixel.c:64:1: note: not vectorized: iteration count too small.
common/pixel.c:64:1: note: not vectorized: iteration count smaller than vectorization factor.
common/pixel.c:64:1: note: bad operation or unsupported loop bound.

Analyzing loop at common/pixel.c:64
common/pixel.c:64:1: note: ===== analyze_loop_nest =====
common/pixel.c:64:1: note: === vect_analyze_loop_form ===
common/pixel.c:64:1: note: ===== analyze_loop_nest_1 =====
common/pixel.c:64:1: note: === vect_analyze_loop_form ===
common/pixel.c:64:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 4
  exit condition [3, + , 4294967295] != 0
  bounds on difference of bases: -3 ... -3
  result:
    # of iterations 3, bounded by 3
common/pixel.c:64:1: note: Considering outer-loop vectorization.
common/pixel.c:64:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 3
  exit condition [7, + , 4294967295] != 0
  bounds on difference of bases: -7 ... -7
  result:
    # of iterations 7, bounded by 7
common/pixel.c:64:1: note: === vect_analyze_data_refs ===
Creating dr for *_41
analyze_innermost: success.
	base_address: fenc_37
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_2(D)
	Access function 0: {{0B, +, 16}_3, +, 1}_4
Creating dr for *_45
analyze_innermost: success.
	base_address: pix2_137
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix2_13(D)
	Access function 0: {{0B, +, pretmp_223}_3, +, 1}_4
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:64:1: note: analyze in outer-loop: *fenc_37
common/pixel.c:64:1: note: 	outer base_address: fenc_2(D)
	outer offset from base address: 0
	outer constant offset from base address: 0
	outer step: 16
	outer aligned to: 128
common/pixel.c:64:1: note: got vectype for stmt: _42 = *_41;
vector(16) unsigned char
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:64:1: note: analyze in outer-loop: *pix2_137
common/pixel.c:64:1: note: failed: evolution of base is not affine.
common/pixel.c:64:1: note: bad data references.

Analyzing loop at common/pixel.c:64
common/pixel.c:64:1: note: ===== analyze_loop_nest =====
common/pixel.c:64:1: note: === vect_analyze_loop_form ===
common/pixel.c:64:1: note: === get_loop_niters ===
common/pixel.c:64:1: note: === vect_analyze_data_refs ===
Creating dr for *_41
analyze_innermost: success.
	base_address: fenc_37
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_37
	Access function 0: {0B, +, 1}_4
Creating dr for *_45
analyze_innermost: success.
	base_address: pix2_137
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix2_137
	Access function 0: {0B, +, 1}_4
common/pixel.c:64:1: note: got vectype for stmt: _42 = *_41;
vector(16) unsigned char
common/pixel.c:64:1: note: got vectype for stmt: _46 = *_45;
vector(16) unsigned char
common/pixel.c:64:1: note: === vect_analyze_scalar_cycles ===
common/pixel.c:64:1: note: Analyze phi: x_81 = PHI <x_52(15), 0(19)>

common/pixel.c:64:1: note: Access function of PHI: {0, +, 1}_4
common/pixel.c:64:1: note: step: 1,  init: 0
common/pixel.c:64:1: note: Detected induction.
common/pixel.c:64:1: note: Analyze phi: i_sum_138 = PHI <i_sum_51(15), i_sum_140(19)>

common/pixel.c:64:1: note: Access function of PHI: {i_sum_140, +, _49}_4
common/pixel.c:64:1: note: step: _49,  init: i_sum_140
common/pixel.c:64:1: note: step unknown.
common/pixel.c:64:1: note: Analyze phi: ivtmp_210 = PHI <ivtmp_209(15), 4(19)>

common/pixel.c:64:1: note: Access function of PHI: {4, +, 4294967295}_4
common/pixel.c:64:1: note: step: 4294967295,  init: 4
common/pixel.c:64:1: note: Detected induction.
common/pixel.c:64:1: note: Analyze phi: i_sum_138 = PHI <i_sum_51(15), i_sum_140(19)>

common/pixel.c:64:1: note: detected reduction: i_sum_51 = _49 + i_sum_138;

common/pixel.c:64:1: note: Detected reduction.
common/pixel.c:64:1: note: === vect_pattern_recog ===
common/pixel.c:64:1: note: vect_is_simple_use: operand _49
common/pixel.c:64:1: note: def_stmt: _49 = ABS_EXPR <_48>;
common/pixel.c:64:1: note: type of def: 3.
common/pixel.c:64:1: note: vect_is_simple_use: operand _49
common/pixel.c:64:1: note: def_stmt: _49 = ABS_EXPR <_48>;
common/pixel.c:64:1: note: type of def: 3.
common/pixel.c:64:1: note: vect_is_simple_use: operand _49
common/pixel.c:64:1: note: def_stmt: _49 = ABS_EXPR <_48>;
common/pixel.c:64:1: note: type of def: 3.
common/pixel.c:64:1: note: vect_is_simple_use: operand _43
common/pixel.c:64:1: note: def_stmt: _43 = (int) _42;
common/pixel.c:64:1: note: type of def: 3.
common/pixel.c:64:1: note: vect_is_simple_use: operand _42
common/pixel.c:64:1: note: def_stmt: _42 = *_41;
common/pixel.c:64:1: note: type of def: 3.
common/pixel.c:64:1: note: vect_is_simple_use: operand _47
common/pixel.c:64:1: note: def_stmt: _47 = (int) _46;
common/pixel.c:64:1: note: type of def: 3.
common/pixel.c:64:1: note: vect_is_simple_use: operand _46
common/pixel.c:64:1: note: def_stmt: _46 = *_45;
common/pixel.c:64:1: note: type of def: 3.
common/pixel.c:64:1: note: vect_recog_sad_pattern: detected: patt_198 = SAD_EXPR <_42, _46, i_sum_138>;

common/pixel.c:64:1: note: pattern recognized: patt_198 = SAD_EXPR <_42, _46, i_sum_138>;
common/pixel.c:64:1: note: === vect_analyze_data_ref_accesses ===
common/pixel.c:64:1: note: === vect_mark_stmts_to_be_vectorized ===
common/pixel.c:64:1: note: init: phi relevant? x_81 = PHI <x_52(15), 0(19)>
common/pixel.c:64:1: note: init: phi relevant? i_sum_138 = PHI <i_sum_51(15), i_sum_140(19)>
common/pixel.c:64:1: note: init: phi relevant? ivtmp_210 = PHI <ivtmp_209(15), 4(19)>
common/pixel.c:64:1: note: init: stmt relevant? # DEBUG x => x_81
common/pixel.c:64:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_138
common/pixel.c:64:1: note: init: stmt relevant? _39 = (sizetype) x_81;
common/pixel.c:64:1: note: init: stmt relevant? _41 = fenc_37 + _39;
common/pixel.c:64:1: note: init: stmt relevant? _42 = *_41;
common/pixel.c:64:1: note: init: stmt relevant? _43 = (int) _42;
common/pixel.c:64:1: note: init: stmt relevant? _45 = pix2_137 + _39;
common/pixel.c:64:1: note: init: stmt relevant? _46 = *_45;
common/pixel.c:64:1: note: init: stmt relevant? _47 = (int) _46;
common/pixel.c:64:1: note: init: stmt relevant? _48 = _43 - _47;
common/pixel.c:64:1: note: init: stmt relevant? _49 = ABS_EXPR <_48>;
common/pixel.c:64:1: note: init: stmt relevant? i_sum_51 = _49 + i_sum_138;
common/pixel.c:64:1: note: vec_stmt_relevant_p: used out of loop.
common/pixel.c:64:1: note: mark relevant 0, live 1.
common/pixel.c:64:1: note: last stmt in pattern. don't mark relevant/live.
common/pixel.c:64:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_51
common/pixel.c:64:1: note: init: stmt relevant? x_52 = x_81 + 1;
common/pixel.c:64:1: note: init: stmt relevant? # DEBUG x => x_52
common/pixel.c:64:1: note: init: stmt relevant? # DEBUG x => x_52
common/pixel.c:64:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_51
common/pixel.c:64:1: note: init: stmt relevant? ivtmp_209 = ivtmp_210 - 1;
common/pixel.c:64:1: note: init: stmt relevant? if (ivtmp_209 != 0)
common/pixel.c:64:1: note: worklist: examine stmt: patt_198 = SAD_EXPR <_42, _46, i_sum_138>;
common/pixel.c:64:1: note: vect_is_simple_use: operand _42
common/pixel.c:64:1: note: def_stmt: _42 = *_41;
common/pixel.c:64:1: note: type of def: 3.
common/pixel.c:64:1: note: mark relevant 3, live 0.
common/pixel.c:64:1: note: vect_is_simple_use: operand _46
common/pixel.c:64:1: note: def_stmt: _46 = *_45;
common/pixel.c:64:1: note: type of def: 3.
common/pixel.c:64:1: note: mark relevant 3, live 0.
common/pixel.c:64:1: note: vect_is_simple_use: operand i_sum_138
common/pixel.c:64:1: note: def_stmt: i_sum_138 = PHI <i_sum_51(15), i_sum_140(19)>
common/pixel.c:64:1: note: type of def: 5.
common/pixel.c:64:1: note: mark relevant 3, live 0.
common/pixel.c:64:1: note: worklist: examine stmt: i_sum_138 = PHI <i_sum_51(15), i_sum_140(19)>
common/pixel.c:64:1: note: vect_is_simple_use: operand i_sum_51
common/pixel.c:64:1: note: def_stmt: i_sum_51 = _49 + i_sum_138;
common/pixel.c:64:1: note: type of def: 5.
common/pixel.c:64:1: note: reduc-stmt defining reduc-phi in the same nest.
common/pixel.c:64:1: note: vect_is_simple_use: operand i_sum_140
common/pixel.c:64:1: note: def_stmt: i_sum_140 = PHI <i_sum_220(18), 0(14)>
common/pixel.c:64:1: note: type of def: 2.
common/pixel.c:64:1: note: def_stmt is out of loop.
common/pixel.c:64:1: note: worklist: examine stmt: _46 = *_45;
common/pixel.c:64:1: note: worklist: examine stmt: _42 = *_41;
common/pixel.c:64:1: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _42 = *_41;
  stmt_b: _46 = *_45;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _42 = *_41;
  stmt_b: _42 = *_41;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_4)
  (chrec_b = {0B, +, 1}_4)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _46 = *_45;
  stmt_b: _46 = *_45;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_4)
  (chrec_b = {0B, +, 1}_4)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/pixel.c:64:1: note: === vect_determine_vectorization_factor ===
common/pixel.c:64:1: note: ==> examining phi: x_81 = PHI <x_52(15), 0(19)>

common/pixel.c:64:1: note: ==> examining phi: i_sum_138 = PHI <i_sum_51(15), i_sum_140(19)>

common/pixel.c:64:1: note: get vectype for scalar type:  int
common/pixel.c:64:1: note: vectype: vector(4) int
common/pixel.c:64:1: note: nunits = 4
common/pixel.c:64:1: note: ==> examining phi: ivtmp_210 = PHI <ivtmp_209(15), 4(19)>

common/pixel.c:64:1: note: ==> examining statement: # DEBUG x => x_81

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: # DEBUG i_sum => i_sum_138

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: _39 = (sizetype) x_81;

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: _41 = fenc_37 + _39;

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: _42 = *_41;

common/pixel.c:64:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:64:1: note: vectype: vector(16) unsigned char
common/pixel.c:64:1: note: nunits = 16
common/pixel.c:64:1: note: ==> examining statement: _43 = (int) _42;

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: _45 = pix2_137 + _39;

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: _46 = *_45;

common/pixel.c:64:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:64:1: note: vectype: vector(16) unsigned char
common/pixel.c:64:1: note: nunits = 16
common/pixel.c:64:1: note: ==> examining statement: _47 = (int) _46;

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: _48 = _43 - _47;

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: _49 = ABS_EXPR <_48>;

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: i_sum_51 = _49 + i_sum_138;

common/pixel.c:64:1: note: ==> examining pattern statement: patt_198 = SAD_EXPR <_42, _46, i_sum_138>;

common/pixel.c:64:1: note: get vectype for scalar type:  int
common/pixel.c:64:1: note: vectype: vector(4) int
common/pixel.c:64:1: note: nunits = 4
common/pixel.c:64:1: note: ==> examining statement: # DEBUG i_sum => i_sum_51

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: x_52 = x_81 + 1;

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: # DEBUG x => x_52

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: # DEBUG x => x_52

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: # DEBUG i_sum => i_sum_51

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: ivtmp_209 = ivtmp_210 - 1;

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: if (ivtmp_209 != 0)

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: vectorization factor = 16
common/pixel.c:64:1: note: === vect_analyze_data_refs_alignment ===
common/pixel.c:64:1: note: vect_compute_data_ref_alignment:
common/pixel.c:64:1: note: can't force alignment of ref: *_41
common/pixel.c:64:1: note: vect_compute_data_ref_alignment:
common/pixel.c:64:1: note: can't force alignment of ref: *_45
common/pixel.c:64:1: note: === vect_prune_runtime_alias_test_list ===
common/pixel.c:64:1: note: === vect_enhance_data_refs_alignment ===
common/pixel.c:64:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:64:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:64:1: note: vect_can_advance_ivs_p:
common/pixel.c:64:1: note: Analyze phi: x_81 = PHI <x_52(15), 0(19)>

common/pixel.c:64:1: note: Analyze phi: i_sum_138 = PHI <i_sum_51(15), i_sum_140(19)>

common/pixel.c:64:1: note: reduc phi. skip.
common/pixel.c:64:1: note: Analyze phi: ivtmp_210 = PHI <ivtmp_209(15), 4(19)>

common/pixel.c:64:1: note: Vectorizing an unaligned access.
common/pixel.c:64:1: note: Vectorizing an unaligned access.
common/pixel.c:64:1: note: === vect_analyze_slp ===
common/pixel.c:64:1: note: === vect_make_slp_decision ===
common/pixel.c:64:1: note: === vect_detect_hybrid_slp ===
common/pixel.c:64:1: note: === vect_analyze_loop_operations ===
common/pixel.c:64:1: note: examining phi: x_81 = PHI <x_52(15), 0(19)>

common/pixel.c:64:1: note: examining phi: i_sum_138 = PHI <i_sum_51(15), i_sum_140(19)>

common/pixel.c:64:1: note: examining phi: ivtmp_210 = PHI <ivtmp_209(15), 4(19)>

common/pixel.c:64:1: note: ==> examining statement: # DEBUG x => x_81
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: # DEBUG i_sum => i_sum_138
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: _39 = (sizetype) x_81;
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: _41 = fenc_37 + _39;
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: _42 = *_41;
common/pixel.c:64:1: note: vect_is_simple_use: operand *_41
common/pixel.c:64:1: note: not ssa-name.
common/pixel.c:64:1: note: use not simple.
common/pixel.c:64:1: note: vect_is_simple_use: operand *_41
common/pixel.c:64:1: note: not ssa-name.
common/pixel.c:64:1: note: use not simple.
common/pixel.c:64:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:64:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:64:1: note: ==> examining statement: _43 = (int) _42;
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: _45 = pix2_137 + _39;
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: _46 = *_45;
common/pixel.c:64:1: note: vect_is_simple_use: operand *_45
common/pixel.c:64:1: note: not ssa-name.
common/pixel.c:64:1: note: use not simple.
common/pixel.c:64:1: note: vect_is_simple_use: operand *_45
common/pixel.c:64:1: note: not ssa-name.
common/pixel.c:64:1: note: use not simple.
common/pixel.c:64:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:64:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:64:1: note: ==> examining statement: _47 = (int) _46;
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: _48 = _43 - _47;
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: _49 = ABS_EXPR <_48>;
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: i_sum_51 = _49 + i_sum_138;
common/pixel.c:64:1: note: ==> examining pattern statement: patt_198 = SAD_EXPR <_42, _46, i_sum_138>;
common/pixel.c:64:1: note: vect_is_simple_use: operand _42
common/pixel.c:64:1: note: def_stmt: _42 = *_41;
common/pixel.c:64:1: note: type of def: 3.
common/pixel.c:64:1: note: vect_is_simple_use: operand _46
common/pixel.c:64:1: note: def_stmt: _46 = *_45;
common/pixel.c:64:1: note: type of def: 3.
common/pixel.c:64:1: note: vect_is_simple_use: operand i_sum_138
common/pixel.c:64:1: note: def_stmt: i_sum_138 = PHI <i_sum_51(15), i_sum_140(19)>
common/pixel.c:64:1: note: type of def: 5.
common/pixel.c:64:1: note: detected reduction: i_sum_51 = _49 + i_sum_138;

common/pixel.c:64:1: note: reduc op not supported by target.
vect_model_reduction_cost: inside_cost = 1, prologue_cost = 1, epilogue_cost = 5 .
common/pixel.c:64:1: note: ==> examining statement: # DEBUG i_sum => i_sum_51
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: x_52 = x_81 + 1;
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: # DEBUG x => x_52
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: # DEBUG x => x_52
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: # DEBUG i_sum => i_sum_51
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: ivtmp_209 = ivtmp_210 - 1;
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: if (ivtmp_209 != 0)
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: vectorization_factor = 16, niters = 4
common/pixel.c:64:1: note: not vectorized: iteration count too small.
common/pixel.c:64:1: note: not vectorized: iteration count smaller than vectorization factor.
common/pixel.c:64:1: note: bad operation or unsupported loop bound.

Analyzing loop at common/pixel.c:64
common/pixel.c:64:1: note: ===== analyze_loop_nest =====
common/pixel.c:64:1: note: === vect_analyze_loop_form ===
common/pixel.c:64:1: note: ===== analyze_loop_nest_1 =====
common/pixel.c:64:1: note: === vect_analyze_loop_form ===
common/pixel.c:64:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 6
  exit condition [3, + , 4294967295] != 0
  bounds on difference of bases: -3 ... -3
  result:
    # of iterations 3, bounded by 3
common/pixel.c:64:1: note: Considering outer-loop vectorization.
common/pixel.c:64:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 5
  exit condition [7, + , 4294967295] != 0
  bounds on difference of bases: -7 ... -7
  result:
    # of iterations 7, bounded by 7
common/pixel.c:64:1: note: === vect_analyze_data_refs ===
Creating dr for *_63
analyze_innermost: success.
	base_address: fenc_142
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_2(D)
	Access function 0: {{0B, +, 16}_5, +, 1}_6
Creating dr for *_67
analyze_innermost: success.
	base_address: pix1_143
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix1_9(D)
	Access function 0: {{0B, +, pretmp_223}_5, +, 1}_6
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:64:1: note: analyze in outer-loop: *fenc_142
common/pixel.c:64:1: note: 	outer base_address: fenc_2(D)
	outer offset from base address: 0
	outer constant offset from base address: 0
	outer step: 16
	outer aligned to: 128
common/pixel.c:64:1: note: got vectype for stmt: _64 = *_63;
vector(16) unsigned char
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:64:1: note: analyze in outer-loop: *pix1_143
common/pixel.c:64:1: note: failed: evolution of base is not affine.
common/pixel.c:64:1: note: bad data references.

Analyzing loop at common/pixel.c:64
common/pixel.c:64:1: note: ===== analyze_loop_nest =====
common/pixel.c:64:1: note: === vect_analyze_loop_form ===
common/pixel.c:64:1: note: === get_loop_niters ===
common/pixel.c:64:1: note: === vect_analyze_data_refs ===
Creating dr for *_63
analyze_innermost: success.
	base_address: fenc_142
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_142
	Access function 0: {0B, +, 1}_6
Creating dr for *_67
analyze_innermost: success.
	base_address: pix1_143
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix1_143
	Access function 0: {0B, +, 1}_6
common/pixel.c:64:1: note: got vectype for stmt: _64 = *_63;
vector(16) unsigned char
common/pixel.c:64:1: note: got vectype for stmt: _68 = *_67;
vector(16) unsigned char
common/pixel.c:64:1: note: === vect_analyze_scalar_cycles ===
common/pixel.c:64:1: note: Analyze phi: x_141 = PHI <x_74(9), 0(13)>

common/pixel.c:64:1: note: Access function of PHI: {0, +, 1}_6
common/pixel.c:64:1: note: step: 1,  init: 0
common/pixel.c:64:1: note: Detected induction.
common/pixel.c:64:1: note: Analyze phi: i_sum_144 = PHI <i_sum_73(9), i_sum_146(13)>

common/pixel.c:64:1: note: Access function of PHI: {i_sum_146, +, _71}_6
common/pixel.c:64:1: note: step: _71,  init: i_sum_146
common/pixel.c:64:1: note: step unknown.
common/pixel.c:64:1: note: Analyze phi: ivtmp_206 = PHI <ivtmp_205(9), 4(13)>

common/pixel.c:64:1: note: Access function of PHI: {4, +, 4294967295}_6
common/pixel.c:64:1: note: step: 4294967295,  init: 4
common/pixel.c:64:1: note: Detected induction.
common/pixel.c:64:1: note: Analyze phi: i_sum_144 = PHI <i_sum_73(9), i_sum_146(13)>

common/pixel.c:64:1: note: detected reduction: i_sum_73 = _71 + i_sum_144;

common/pixel.c:64:1: note: Detected reduction.
common/pixel.c:64:1: note: === vect_pattern_recog ===
common/pixel.c:64:1: note: vect_is_simple_use: operand _71
common/pixel.c:64:1: note: def_stmt: _71 = ABS_EXPR <_70>;
common/pixel.c:64:1: note: type of def: 3.
common/pixel.c:64:1: note: vect_is_simple_use: operand _71
common/pixel.c:64:1: note: def_stmt: _71 = ABS_EXPR <_70>;
common/pixel.c:64:1: note: type of def: 3.
common/pixel.c:64:1: note: vect_is_simple_use: operand _71
common/pixel.c:64:1: note: def_stmt: _71 = ABS_EXPR <_70>;
common/pixel.c:64:1: note: type of def: 3.
common/pixel.c:64:1: note: vect_is_simple_use: operand _65
common/pixel.c:64:1: note: def_stmt: _65 = (int) _64;
common/pixel.c:64:1: note: type of def: 3.
common/pixel.c:64:1: note: vect_is_simple_use: operand _64
common/pixel.c:64:1: note: def_stmt: _64 = *_63;
common/pixel.c:64:1: note: type of def: 3.
common/pixel.c:64:1: note: vect_is_simple_use: operand _69
common/pixel.c:64:1: note: def_stmt: _69 = (int) _68;
common/pixel.c:64:1: note: type of def: 3.
common/pixel.c:64:1: note: vect_is_simple_use: operand _68
common/pixel.c:64:1: note: def_stmt: _68 = *_67;
common/pixel.c:64:1: note: type of def: 3.
common/pixel.c:64:1: note: vect_recog_sad_pattern: detected: patt_198 = SAD_EXPR <_64, _68, i_sum_144>;

common/pixel.c:64:1: note: pattern recognized: patt_198 = SAD_EXPR <_64, _68, i_sum_144>;
common/pixel.c:64:1: note: === vect_analyze_data_ref_accesses ===
common/pixel.c:64:1: note: === vect_mark_stmts_to_be_vectorized ===
common/pixel.c:64:1: note: init: phi relevant? x_141 = PHI <x_74(9), 0(13)>
common/pixel.c:64:1: note: init: phi relevant? i_sum_144 = PHI <i_sum_73(9), i_sum_146(13)>
common/pixel.c:64:1: note: init: phi relevant? ivtmp_206 = PHI <ivtmp_205(9), 4(13)>
common/pixel.c:64:1: note: init: stmt relevant? # DEBUG x => x_141
common/pixel.c:64:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_144
common/pixel.c:64:1: note: init: stmt relevant? _61 = (sizetype) x_141;
common/pixel.c:64:1: note: init: stmt relevant? _63 = fenc_142 + _61;
common/pixel.c:64:1: note: init: stmt relevant? _64 = *_63;
common/pixel.c:64:1: note: init: stmt relevant? _65 = (int) _64;
common/pixel.c:64:1: note: init: stmt relevant? _67 = pix1_143 + _61;
common/pixel.c:64:1: note: init: stmt relevant? _68 = *_67;
common/pixel.c:64:1: note: init: stmt relevant? _69 = (int) _68;
common/pixel.c:64:1: note: init: stmt relevant? _70 = _65 - _69;
common/pixel.c:64:1: note: init: stmt relevant? _71 = ABS_EXPR <_70>;
common/pixel.c:64:1: note: init: stmt relevant? i_sum_73 = _71 + i_sum_144;
common/pixel.c:64:1: note: vec_stmt_relevant_p: used out of loop.
common/pixel.c:64:1: note: mark relevant 0, live 1.
common/pixel.c:64:1: note: last stmt in pattern. don't mark relevant/live.
common/pixel.c:64:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_73
common/pixel.c:64:1: note: init: stmt relevant? x_74 = x_141 + 1;
common/pixel.c:64:1: note: init: stmt relevant? # DEBUG x => x_74
common/pixel.c:64:1: note: init: stmt relevant? # DEBUG x => x_74
common/pixel.c:64:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_73
common/pixel.c:64:1: note: init: stmt relevant? ivtmp_205 = ivtmp_206 - 1;
common/pixel.c:64:1: note: init: stmt relevant? if (ivtmp_205 != 0)
common/pixel.c:64:1: note: worklist: examine stmt: patt_198 = SAD_EXPR <_64, _68, i_sum_144>;
common/pixel.c:64:1: note: vect_is_simple_use: operand _64
common/pixel.c:64:1: note: def_stmt: _64 = *_63;
common/pixel.c:64:1: note: type of def: 3.
common/pixel.c:64:1: note: mark relevant 3, live 0.
common/pixel.c:64:1: note: vect_is_simple_use: operand _68
common/pixel.c:64:1: note: def_stmt: _68 = *_67;
common/pixel.c:64:1: note: type of def: 3.
common/pixel.c:64:1: note: mark relevant 3, live 0.
common/pixel.c:64:1: note: vect_is_simple_use: operand i_sum_144
common/pixel.c:64:1: note: def_stmt: i_sum_144 = PHI <i_sum_73(9), i_sum_146(13)>
common/pixel.c:64:1: note: type of def: 5.
common/pixel.c:64:1: note: mark relevant 3, live 0.
common/pixel.c:64:1: note: worklist: examine stmt: i_sum_144 = PHI <i_sum_73(9), i_sum_146(13)>
common/pixel.c:64:1: note: vect_is_simple_use: operand i_sum_73
common/pixel.c:64:1: note: def_stmt: i_sum_73 = _71 + i_sum_144;
common/pixel.c:64:1: note: type of def: 5.
common/pixel.c:64:1: note: reduc-stmt defining reduc-phi in the same nest.
common/pixel.c:64:1: note: vect_is_simple_use: operand i_sum_146
common/pixel.c:64:1: note: def_stmt: i_sum_146 = PHI <i_sum_218(12), 0(8)>
common/pixel.c:64:1: note: type of def: 2.
common/pixel.c:64:1: note: def_stmt is out of loop.
common/pixel.c:64:1: note: worklist: examine stmt: _68 = *_67;
common/pixel.c:64:1: note: worklist: examine stmt: _64 = *_63;
common/pixel.c:64:1: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _64 = *_63;
  stmt_b: _68 = *_67;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _64 = *_63;
  stmt_b: _64 = *_63;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_6)
  (chrec_b = {0B, +, 1}_6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _68 = *_67;
  stmt_b: _68 = *_67;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_6)
  (chrec_b = {0B, +, 1}_6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/pixel.c:64:1: note: === vect_determine_vectorization_factor ===
common/pixel.c:64:1: note: ==> examining phi: x_141 = PHI <x_74(9), 0(13)>

common/pixel.c:64:1: note: ==> examining phi: i_sum_144 = PHI <i_sum_73(9), i_sum_146(13)>

common/pixel.c:64:1: note: get vectype for scalar type:  int
common/pixel.c:64:1: note: vectype: vector(4) int
common/pixel.c:64:1: note: nunits = 4
common/pixel.c:64:1: note: ==> examining phi: ivtmp_206 = PHI <ivtmp_205(9), 4(13)>

common/pixel.c:64:1: note: ==> examining statement: # DEBUG x => x_141

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: # DEBUG i_sum => i_sum_144

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: _61 = (sizetype) x_141;

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: _63 = fenc_142 + _61;

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: _64 = *_63;

common/pixel.c:64:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:64:1: note: vectype: vector(16) unsigned char
common/pixel.c:64:1: note: nunits = 16
common/pixel.c:64:1: note: ==> examining statement: _65 = (int) _64;

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: _67 = pix1_143 + _61;

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: _68 = *_67;

common/pixel.c:64:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:64:1: note: vectype: vector(16) unsigned char
common/pixel.c:64:1: note: nunits = 16
common/pixel.c:64:1: note: ==> examining statement: _69 = (int) _68;

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: _70 = _65 - _69;

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: _71 = ABS_EXPR <_70>;

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: i_sum_73 = _71 + i_sum_144;

common/pixel.c:64:1: note: ==> examining pattern statement: patt_198 = SAD_EXPR <_64, _68, i_sum_144>;

common/pixel.c:64:1: note: get vectype for scalar type:  int
common/pixel.c:64:1: note: vectype: vector(4) int
common/pixel.c:64:1: note: nunits = 4
common/pixel.c:64:1: note: ==> examining statement: # DEBUG i_sum => i_sum_73

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: x_74 = x_141 + 1;

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: # DEBUG x => x_74

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: # DEBUG x => x_74

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: # DEBUG i_sum => i_sum_73

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: ivtmp_205 = ivtmp_206 - 1;

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: if (ivtmp_205 != 0)

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: vectorization factor = 16
common/pixel.c:64:1: note: === vect_analyze_data_refs_alignment ===
common/pixel.c:64:1: note: vect_compute_data_ref_alignment:
common/pixel.c:64:1: note: can't force alignment of ref: *_63
common/pixel.c:64:1: note: vect_compute_data_ref_alignment:
common/pixel.c:64:1: note: can't force alignment of ref: *_67
common/pixel.c:64:1: note: === vect_prune_runtime_alias_test_list ===
common/pixel.c:64:1: note: === vect_enhance_data_refs_alignment ===
common/pixel.c:64:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:64:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:64:1: note: vect_can_advance_ivs_p:
common/pixel.c:64:1: note: Analyze phi: x_141 = PHI <x_74(9), 0(13)>

common/pixel.c:64:1: note: Analyze phi: i_sum_144 = PHI <i_sum_73(9), i_sum_146(13)>

common/pixel.c:64:1: note: reduc phi. skip.
common/pixel.c:64:1: note: Analyze phi: ivtmp_206 = PHI <ivtmp_205(9), 4(13)>

common/pixel.c:64:1: note: Vectorizing an unaligned access.
common/pixel.c:64:1: note: Vectorizing an unaligned access.
common/pixel.c:64:1: note: === vect_analyze_slp ===
common/pixel.c:64:1: note: === vect_make_slp_decision ===
common/pixel.c:64:1: note: === vect_detect_hybrid_slp ===
common/pixel.c:64:1: note: === vect_analyze_loop_operations ===
common/pixel.c:64:1: note: examining phi: x_141 = PHI <x_74(9), 0(13)>

common/pixel.c:64:1: note: examining phi: i_sum_144 = PHI <i_sum_73(9), i_sum_146(13)>

common/pixel.c:64:1: note: examining phi: ivtmp_206 = PHI <ivtmp_205(9), 4(13)>

common/pixel.c:64:1: note: ==> examining statement: # DEBUG x => x_141
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: # DEBUG i_sum => i_sum_144
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: _61 = (sizetype) x_141;
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: _63 = fenc_142 + _61;
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: _64 = *_63;
common/pixel.c:64:1: note: vect_is_simple_use: operand *_63
common/pixel.c:64:1: note: not ssa-name.
common/pixel.c:64:1: note: use not simple.
common/pixel.c:64:1: note: vect_is_simple_use: operand *_63
common/pixel.c:64:1: note: not ssa-name.
common/pixel.c:64:1: note: use not simple.
common/pixel.c:64:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:64:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:64:1: note: ==> examining statement: _65 = (int) _64;
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: _67 = pix1_143 + _61;
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: _68 = *_67;
common/pixel.c:64:1: note: vect_is_simple_use: operand *_67
common/pixel.c:64:1: note: not ssa-name.
common/pixel.c:64:1: note: use not simple.
common/pixel.c:64:1: note: vect_is_simple_use: operand *_67
common/pixel.c:64:1: note: not ssa-name.
common/pixel.c:64:1: note: use not simple.
common/pixel.c:64:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:64:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:64:1: note: ==> examining statement: _69 = (int) _68;
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: _70 = _65 - _69;
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: _71 = ABS_EXPR <_70>;
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: i_sum_73 = _71 + i_sum_144;
common/pixel.c:64:1: note: ==> examining pattern statement: patt_198 = SAD_EXPR <_64, _68, i_sum_144>;
common/pixel.c:64:1: note: vect_is_simple_use: operand _64
common/pixel.c:64:1: note: def_stmt: _64 = *_63;
common/pixel.c:64:1: note: type of def: 3.
common/pixel.c:64:1: note: vect_is_simple_use: operand _68
common/pixel.c:64:1: note: def_stmt: _68 = *_67;
common/pixel.c:64:1: note: type of def: 3.
common/pixel.c:64:1: note: vect_is_simple_use: operand i_sum_144
common/pixel.c:64:1: note: def_stmt: i_sum_144 = PHI <i_sum_73(9), i_sum_146(13)>
common/pixel.c:64:1: note: type of def: 5.
common/pixel.c:64:1: note: detected reduction: i_sum_73 = _71 + i_sum_144;

common/pixel.c:64:1: note: reduc op not supported by target.
vect_model_reduction_cost: inside_cost = 1, prologue_cost = 1, epilogue_cost = 5 .
common/pixel.c:64:1: note: ==> examining statement: # DEBUG i_sum => i_sum_73
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: x_74 = x_141 + 1;
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: # DEBUG x => x_74
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: # DEBUG x => x_74
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: # DEBUG i_sum => i_sum_73
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: ivtmp_205 = ivtmp_206 - 1;
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: if (ivtmp_205 != 0)
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: vectorization_factor = 16, niters = 4
common/pixel.c:64:1: note: not vectorized: iteration count too small.
common/pixel.c:64:1: note: not vectorized: iteration count smaller than vectorization factor.
common/pixel.c:64:1: note: bad operation or unsupported loop bound.

Analyzing loop at common/pixel.c:64
common/pixel.c:64:1: note: ===== analyze_loop_nest =====
common/pixel.c:64:1: note: === vect_analyze_loop_form ===
common/pixel.c:64:1: note: ===== analyze_loop_nest_1 =====
common/pixel.c:64:1: note: === vect_analyze_loop_form ===
common/pixel.c:64:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 8
  exit condition [3, + , 4294967295] != 0
  bounds on difference of bases: -3 ... -3
  result:
    # of iterations 3, bounded by 3
common/pixel.c:64:1: note: Considering outer-loop vectorization.
common/pixel.c:64:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 7
  exit condition [7, + , 4294967295] != 0
  bounds on difference of bases: -7 ... -7
  result:
    # of iterations 7, bounded by 7
common/pixel.c:64:1: note: === vect_analyze_data_refs ===
Creating dr for *_85
analyze_innermost: success.
	base_address: fenc_148
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_2(D)
	Access function 0: {{0B, +, 16}_7, +, 1}_8
Creating dr for *_89
analyze_innermost: success.
	base_address: pix0_149
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix0_3(D)
	Access function 0: {{0B, +, pretmp_223}_7, +, 1}_8
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:64:1: note: analyze in outer-loop: *fenc_148
common/pixel.c:64:1: note: 	outer base_address: fenc_2(D)
	outer offset from base address: 0
	outer constant offset from base address: 0
	outer step: 16
	outer aligned to: 128
common/pixel.c:64:1: note: got vectype for stmt: _86 = *_85;
vector(16) unsigned char
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:64:1: note: analyze in outer-loop: *pix0_149
common/pixel.c:64:1: note: failed: evolution of base is not affine.
common/pixel.c:64:1: note: bad data references.

Analyzing loop at common/pixel.c:64
common/pixel.c:64:1: note: ===== analyze_loop_nest =====
common/pixel.c:64:1: note: === vect_analyze_loop_form ===
common/pixel.c:64:1: note: === get_loop_niters ===
common/pixel.c:64:1: note: === vect_analyze_data_refs ===
Creating dr for *_85
analyze_innermost: success.
	base_address: fenc_148
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_148
	Access function 0: {0B, +, 1}_8
Creating dr for *_89
analyze_innermost: success.
	base_address: pix0_149
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix0_149
	Access function 0: {0B, +, 1}_8
common/pixel.c:64:1: note: got vectype for stmt: _86 = *_85;
vector(16) unsigned char
common/pixel.c:64:1: note: got vectype for stmt: _90 = *_89;
vector(16) unsigned char
common/pixel.c:64:1: note: === vect_analyze_scalar_cycles ===
common/pixel.c:64:1: note: Analyze phi: x_147 = PHI <x_96(3), 0(7)>

common/pixel.c:64:1: note: Access function of PHI: {0, +, 1}_8
common/pixel.c:64:1: note: step: 1,  init: 0
common/pixel.c:64:1: note: Detected induction.
common/pixel.c:64:1: note: Analyze phi: i_sum_150 = PHI <i_sum_95(3), i_sum_152(7)>

common/pixel.c:64:1: note: Access function of PHI: {i_sum_152, +, _93}_8
common/pixel.c:64:1: note: step: _93,  init: i_sum_152
common/pixel.c:64:1: note: step unknown.
common/pixel.c:64:1: note: Analyze phi: ivtmp_202 = PHI <ivtmp_201(3), 4(7)>

common/pixel.c:64:1: note: Access function of PHI: {4, +, 4294967295}_8
common/pixel.c:64:1: note: step: 4294967295,  init: 4
common/pixel.c:64:1: note: Detected induction.
common/pixel.c:64:1: note: Analyze phi: i_sum_150 = PHI <i_sum_95(3), i_sum_152(7)>

common/pixel.c:64:1: note: detected reduction: i_sum_95 = _93 + i_sum_150;

common/pixel.c:64:1: note: Detected reduction.
common/pixel.c:64:1: note: === vect_pattern_recog ===
common/pixel.c:64:1: note: vect_is_simple_use: operand _93
common/pixel.c:64:1: note: def_stmt: _93 = ABS_EXPR <_92>;
common/pixel.c:64:1: note: type of def: 3.
common/pixel.c:64:1: note: vect_is_simple_use: operand _93
common/pixel.c:64:1: note: def_stmt: _93 = ABS_EXPR <_92>;
common/pixel.c:64:1: note: type of def: 3.
common/pixel.c:64:1: note: vect_is_simple_use: operand _93
common/pixel.c:64:1: note: def_stmt: _93 = ABS_EXPR <_92>;
common/pixel.c:64:1: note: type of def: 3.
common/pixel.c:64:1: note: vect_is_simple_use: operand _87
common/pixel.c:64:1: note: def_stmt: _87 = (int) _86;
common/pixel.c:64:1: note: type of def: 3.
common/pixel.c:64:1: note: vect_is_simple_use: operand _86
common/pixel.c:64:1: note: def_stmt: _86 = *_85;
common/pixel.c:64:1: note: type of def: 3.
common/pixel.c:64:1: note: vect_is_simple_use: operand _91
common/pixel.c:64:1: note: def_stmt: _91 = (int) _90;
common/pixel.c:64:1: note: type of def: 3.
common/pixel.c:64:1: note: vect_is_simple_use: operand _90
common/pixel.c:64:1: note: def_stmt: _90 = *_89;
common/pixel.c:64:1: note: type of def: 3.
common/pixel.c:64:1: note: vect_recog_sad_pattern: detected: patt_198 = SAD_EXPR <_86, _90, i_sum_150>;

common/pixel.c:64:1: note: pattern recognized: patt_198 = SAD_EXPR <_86, _90, i_sum_150>;
common/pixel.c:64:1: note: === vect_analyze_data_ref_accesses ===
common/pixel.c:64:1: note: === vect_mark_stmts_to_be_vectorized ===
common/pixel.c:64:1: note: init: phi relevant? x_147 = PHI <x_96(3), 0(7)>
common/pixel.c:64:1: note: init: phi relevant? i_sum_150 = PHI <i_sum_95(3), i_sum_152(7)>
common/pixel.c:64:1: note: init: phi relevant? ivtmp_202 = PHI <ivtmp_201(3), 4(7)>
common/pixel.c:64:1: note: init: stmt relevant? # DEBUG x => x_147
common/pixel.c:64:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_150
common/pixel.c:64:1: note: init: stmt relevant? _83 = (sizetype) x_147;
common/pixel.c:64:1: note: init: stmt relevant? _85 = fenc_148 + _83;
common/pixel.c:64:1: note: init: stmt relevant? _86 = *_85;
common/pixel.c:64:1: note: init: stmt relevant? _87 = (int) _86;
common/pixel.c:64:1: note: init: stmt relevant? _89 = pix0_149 + _83;
common/pixel.c:64:1: note: init: stmt relevant? _90 = *_89;
common/pixel.c:64:1: note: init: stmt relevant? _91 = (int) _90;
common/pixel.c:64:1: note: init: stmt relevant? _92 = _87 - _91;
common/pixel.c:64:1: note: init: stmt relevant? _93 = ABS_EXPR <_92>;
common/pixel.c:64:1: note: init: stmt relevant? i_sum_95 = _93 + i_sum_150;
common/pixel.c:64:1: note: vec_stmt_relevant_p: used out of loop.
common/pixel.c:64:1: note: mark relevant 0, live 1.
common/pixel.c:64:1: note: last stmt in pattern. don't mark relevant/live.
common/pixel.c:64:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_95
common/pixel.c:64:1: note: init: stmt relevant? x_96 = x_147 + 1;
common/pixel.c:64:1: note: init: stmt relevant? # DEBUG x => x_96
common/pixel.c:64:1: note: init: stmt relevant? # DEBUG x => x_96
common/pixel.c:64:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_95
common/pixel.c:64:1: note: init: stmt relevant? ivtmp_201 = ivtmp_202 - 1;
common/pixel.c:64:1: note: init: stmt relevant? if (ivtmp_201 != 0)
common/pixel.c:64:1: note: worklist: examine stmt: patt_198 = SAD_EXPR <_86, _90, i_sum_150>;
common/pixel.c:64:1: note: vect_is_simple_use: operand _86
common/pixel.c:64:1: note: def_stmt: _86 = *_85;
common/pixel.c:64:1: note: type of def: 3.
common/pixel.c:64:1: note: mark relevant 3, live 0.
common/pixel.c:64:1: note: vect_is_simple_use: operand _90
common/pixel.c:64:1: note: def_stmt: _90 = *_89;
common/pixel.c:64:1: note: type of def: 3.
common/pixel.c:64:1: note: mark relevant 3, live 0.
common/pixel.c:64:1: note: vect_is_simple_use: operand i_sum_150
common/pixel.c:64:1: note: def_stmt: i_sum_150 = PHI <i_sum_95(3), i_sum_152(7)>
common/pixel.c:64:1: note: type of def: 5.
common/pixel.c:64:1: note: mark relevant 3, live 0.
common/pixel.c:64:1: note: worklist: examine stmt: i_sum_150 = PHI <i_sum_95(3), i_sum_152(7)>
common/pixel.c:64:1: note: vect_is_simple_use: operand i_sum_95
common/pixel.c:64:1: note: def_stmt: i_sum_95 = _93 + i_sum_150;
common/pixel.c:64:1: note: type of def: 5.
common/pixel.c:64:1: note: reduc-stmt defining reduc-phi in the same nest.
common/pixel.c:64:1: note: vect_is_simple_use: operand i_sum_152
common/pixel.c:64:1: note: def_stmt: i_sum_152 = PHI <i_sum_216(6), 0(2)>
common/pixel.c:64:1: note: type of def: 2.
common/pixel.c:64:1: note: def_stmt is out of loop.
common/pixel.c:64:1: note: worklist: examine stmt: _90 = *_89;
common/pixel.c:64:1: note: worklist: examine stmt: _86 = *_85;
common/pixel.c:64:1: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _86 = *_85;
  stmt_b: _90 = *_89;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _86 = *_85;
  stmt_b: _86 = *_85;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_8)
  (chrec_b = {0B, +, 1}_8)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _90 = *_89;
  stmt_b: _90 = *_89;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_8)
  (chrec_b = {0B, +, 1}_8)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/pixel.c:64:1: note: === vect_determine_vectorization_factor ===
common/pixel.c:64:1: note: ==> examining phi: x_147 = PHI <x_96(3), 0(7)>

common/pixel.c:64:1: note: ==> examining phi: i_sum_150 = PHI <i_sum_95(3), i_sum_152(7)>

common/pixel.c:64:1: note: get vectype for scalar type:  int
common/pixel.c:64:1: note: vectype: vector(4) int
common/pixel.c:64:1: note: nunits = 4
common/pixel.c:64:1: note: ==> examining phi: ivtmp_202 = PHI <ivtmp_201(3), 4(7)>

common/pixel.c:64:1: note: ==> examining statement: # DEBUG x => x_147

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: # DEBUG i_sum => i_sum_150

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: _83 = (sizetype) x_147;

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: _85 = fenc_148 + _83;

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: _86 = *_85;

common/pixel.c:64:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:64:1: note: vectype: vector(16) unsigned char
common/pixel.c:64:1: note: nunits = 16
common/pixel.c:64:1: note: ==> examining statement: _87 = (int) _86;

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: _89 = pix0_149 + _83;

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: _90 = *_89;

common/pixel.c:64:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:64:1: note: vectype: vector(16) unsigned char
common/pixel.c:64:1: note: nunits = 16
common/pixel.c:64:1: note: ==> examining statement: _91 = (int) _90;

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: _92 = _87 - _91;

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: _93 = ABS_EXPR <_92>;

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: i_sum_95 = _93 + i_sum_150;

common/pixel.c:64:1: note: ==> examining pattern statement: patt_198 = SAD_EXPR <_86, _90, i_sum_150>;

common/pixel.c:64:1: note: get vectype for scalar type:  int
common/pixel.c:64:1: note: vectype: vector(4) int
common/pixel.c:64:1: note: nunits = 4
common/pixel.c:64:1: note: ==> examining statement: # DEBUG i_sum => i_sum_95

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: x_96 = x_147 + 1;

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: # DEBUG x => x_96

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: # DEBUG x => x_96

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: # DEBUG i_sum => i_sum_95

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: ivtmp_201 = ivtmp_202 - 1;

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: ==> examining statement: if (ivtmp_201 != 0)

common/pixel.c:64:1: note: skip.
common/pixel.c:64:1: note: vectorization factor = 16
common/pixel.c:64:1: note: === vect_analyze_data_refs_alignment ===
common/pixel.c:64:1: note: vect_compute_data_ref_alignment:
common/pixel.c:64:1: note: can't force alignment of ref: *_85
common/pixel.c:64:1: note: vect_compute_data_ref_alignment:
common/pixel.c:64:1: note: can't force alignment of ref: *_89
common/pixel.c:64:1: note: === vect_prune_runtime_alias_test_list ===
common/pixel.c:64:1: note: === vect_enhance_data_refs_alignment ===
common/pixel.c:64:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:64:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:64:1: note: vect_can_advance_ivs_p:
common/pixel.c:64:1: note: Analyze phi: x_147 = PHI <x_96(3), 0(7)>

common/pixel.c:64:1: note: Analyze phi: i_sum_150 = PHI <i_sum_95(3), i_sum_152(7)>

common/pixel.c:64:1: note: reduc phi. skip.
common/pixel.c:64:1: note: Analyze phi: ivtmp_202 = PHI <ivtmp_201(3), 4(7)>

common/pixel.c:64:1: note: Vectorizing an unaligned access.
common/pixel.c:64:1: note: Vectorizing an unaligned access.
common/pixel.c:64:1: note: === vect_analyze_slp ===
common/pixel.c:64:1: note: === vect_make_slp_decision ===
common/pixel.c:64:1: note: === vect_detect_hybrid_slp ===
common/pixel.c:64:1: note: === vect_analyze_loop_operations ===
common/pixel.c:64:1: note: examining phi: x_147 = PHI <x_96(3), 0(7)>

common/pixel.c:64:1: note: examining phi: i_sum_150 = PHI <i_sum_95(3), i_sum_152(7)>

common/pixel.c:64:1: note: examining phi: ivtmp_202 = PHI <ivtmp_201(3), 4(7)>

common/pixel.c:64:1: note: ==> examining statement: # DEBUG x => x_147
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: # DEBUG i_sum => i_sum_150
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: _83 = (sizetype) x_147;
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: _85 = fenc_148 + _83;
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: _86 = *_85;
common/pixel.c:64:1: note: vect_is_simple_use: operand *_85
common/pixel.c:64:1: note: not ssa-name.
common/pixel.c:64:1: note: use not simple.
common/pixel.c:64:1: note: vect_is_simple_use: operand *_85
common/pixel.c:64:1: note: not ssa-name.
common/pixel.c:64:1: note: use not simple.
common/pixel.c:64:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:64:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:64:1: note: ==> examining statement: _87 = (int) _86;
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: _89 = pix0_149 + _83;
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: _90 = *_89;
common/pixel.c:64:1: note: vect_is_simple_use: operand *_89
common/pixel.c:64:1: note: not ssa-name.
common/pixel.c:64:1: note: use not simple.
common/pixel.c:64:1: note: vect_is_simple_use: operand *_89
common/pixel.c:64:1: note: not ssa-name.
common/pixel.c:64:1: note: use not simple.
common/pixel.c:64:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:64:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:64:1: note: ==> examining statement: _91 = (int) _90;
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: _92 = _87 - _91;
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: _93 = ABS_EXPR <_92>;
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: i_sum_95 = _93 + i_sum_150;
common/pixel.c:64:1: note: ==> examining pattern statement: patt_198 = SAD_EXPR <_86, _90, i_sum_150>;
common/pixel.c:64:1: note: vect_is_simple_use: operand _86
common/pixel.c:64:1: note: def_stmt: _86 = *_85;
common/pixel.c:64:1: note: type of def: 3.
common/pixel.c:64:1: note: vect_is_simple_use: operand _90
common/pixel.c:64:1: note: def_stmt: _90 = *_89;
common/pixel.c:64:1: note: type of def: 3.
common/pixel.c:64:1: note: vect_is_simple_use: operand i_sum_150
common/pixel.c:64:1: note: def_stmt: i_sum_150 = PHI <i_sum_95(3), i_sum_152(7)>
common/pixel.c:64:1: note: type of def: 5.
common/pixel.c:64:1: note: detected reduction: i_sum_95 = _93 + i_sum_150;

common/pixel.c:64:1: note: reduc op not supported by target.
vect_model_reduction_cost: inside_cost = 1, prologue_cost = 1, epilogue_cost = 5 .
common/pixel.c:64:1: note: ==> examining statement: # DEBUG i_sum => i_sum_95
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: x_96 = x_147 + 1;
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: # DEBUG x => x_96
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: # DEBUG x => x_96
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: # DEBUG i_sum => i_sum_95
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: ivtmp_201 = ivtmp_202 - 1;
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: ==> examining statement: if (ivtmp_201 != 0)
common/pixel.c:64:1: note: irrelevant.
common/pixel.c:64:1: note: vectorization_factor = 16, niters = 4
common/pixel.c:64:1: note: not vectorized: iteration count too small.
common/pixel.c:64:1: note: not vectorized: iteration count smaller than vectorization factor.
common/pixel.c:64:1: note: bad operation or unsupported loop bound.
common/pixel.c:388:1: note: vectorized 0 loops in function.
x264_pixel_sad_x4_4x8 (uint8_t * fenc, uint8_t * pix0, uint8_t * pix1, uint8_t * pix2, uint8_t * pix3, int i_stride, int * scores)
{
  int i_sum;
  int x;
  int y;
  int i_sum;
  int x;
  int y;
  int i_sum;
  int x;
  int y;
  int i_sum;
  int x;
  int y;
  uint8_t * _5;
  sizetype _14;
  unsigned char _20;
  int _21;
  uint8_t * _23;
  unsigned char _24;
  int _25;
  int _26;
  int _27;
  sizetype _39;
  uint8_t * _41;
  unsigned char _42;
  int _43;
  uint8_t * _45;
  unsigned char _46;
  int _47;
  int _48;
  int _49;
  sizetype _61;
  uint8_t * _63;
  unsigned char _64;
  int _65;
  uint8_t * _67;
  unsigned char _68;
  int _69;
  int _70;
  int _71;
  sizetype _83;
  uint8_t * _85;
  unsigned char _86;
  int _87;
  uint8_t * _89;
  unsigned char _90;
  int _91;
  int _92;
  int _93;
  unsigned int ivtmp_199;
  unsigned int ivtmp_200;
  unsigned int ivtmp_201;
  unsigned int ivtmp_202;
  unsigned int ivtmp_203;
  unsigned int ivtmp_204;
  unsigned int ivtmp_205;
  unsigned int ivtmp_206;
  unsigned int ivtmp_207;
  unsigned int ivtmp_208;
  unsigned int ivtmp_209;
  unsigned int ivtmp_210;
  unsigned int ivtmp_211;
  unsigned int ivtmp_212;
  unsigned int ivtmp_213;
  unsigned int ivtmp_214;
  sizetype pretmp_223;

  <bb 2>:
  # DEBUG pix1 => fenc_2(D)
  # DEBUG i_stride_pix1 => 16
  # DEBUG pix2 => pix0_3(D)
  # DEBUG i_stride_pix2 => i_stride_4(D)
  # DEBUG i_sum => 0
  # DEBUG y => 0
  # DEBUG y => 0
  # DEBUG i_sum => 0
  # DEBUG pix2 => pix0_3(D)
  # DEBUG pix1 => fenc_2(D)
  pretmp_223 = (sizetype) i_stride_4(D);
  goto <bb 7>;

  <bb 3>:

  <bb 4>:
  # x_147 = PHI <x_96(3), 0(7)>
  # i_sum_150 = PHI <i_sum_95(3), i_sum_152(7)>
  # ivtmp_202 = PHI <ivtmp_201(3), 4(7)>
  # DEBUG x => x_147
  # DEBUG i_sum => i_sum_150
  _83 = (sizetype) x_147;
  _85 = fenc_148 + _83;
  _86 = *_85;
  _87 = (int) _86;
  _89 = pix0_149 + _83;
  _90 = *_89;
  _91 = (int) _90;
  _92 = _87 - _91;
  _93 = ABS_EXPR <_92>;
  i_sum_95 = _93 + i_sum_150;
  # DEBUG i_sum => i_sum_95
  x_96 = x_147 + 1;
  # DEBUG x => x_96
  # DEBUG x => x_96
  # DEBUG i_sum => i_sum_95
  ivtmp_201 = ivtmp_202 - 1;
  if (ivtmp_201 != 0)
    goto <bb 3>;
  else
    goto <bb 5>;

  <bb 5>:
  # i_sum_216 = PHI <i_sum_95(4)>
  fenc_97 = fenc_148 + 16;
  # DEBUG pix1 => fenc_97
  pix0_99 = pix0_149 + pretmp_223;
  # DEBUG pix2 => pix0_99
  y_101 = y_151 + 1;
  # DEBUG y => y_101
  # DEBUG y => y_101
  # DEBUG i_sum => i_sum_216
  # DEBUG pix2 => pix0_99
  # DEBUG pix1 => fenc_97
  ivtmp_199 = ivtmp_200 - 1;
  if (ivtmp_199 != 0)
    goto <bb 6>;
  else
    goto <bb 8>;

  <bb 6>:

  <bb 7>:
  # fenc_148 = PHI <fenc_97(6), fenc_2(D)(2)>
  # pix0_149 = PHI <pix0_99(6), pix0_3(D)(2)>
  # y_151 = PHI <y_101(6), 0(2)>
  # i_sum_152 = PHI <i_sum_216(6), 0(2)>
  # ivtmp_200 = PHI <ivtmp_199(6), 8(2)>
  # DEBUG y => y_151
  # DEBUG i_sum => i_sum_152
  # DEBUG pix2 => pix0_149
  # DEBUG pix1 => fenc_148
  # DEBUG x => 0
  # DEBUG i_sum => i_sum_152
  goto <bb 4>;

  <bb 8>:
  # i_sum_215 = PHI <i_sum_216(5)>
  # DEBUG pix1 => NULL
  # DEBUG i_stride_pix1 => NULL
  # DEBUG pix2 => NULL
  # DEBUG i_stride_pix2 => NULL
  # DEBUG y => NULL
  # DEBUG x => NULL
  # DEBUG i_sum => NULL
  *scores_6(D) = i_sum_215;
  # DEBUG pix1 => fenc_2(D)
  # DEBUG i_stride_pix1 => 16
  # DEBUG pix2 => pix1_9(D)
  # DEBUG i_stride_pix2 => i_stride_4(D)
  # DEBUG y => 0
  # DEBUG i_sum => 0
  # DEBUG pix2 => pix1_9(D)
  # DEBUG pix1 => fenc_2(D)
  goto <bb 13>;

  <bb 9>:

  <bb 10>:
  # x_141 = PHI <x_74(9), 0(13)>
  # i_sum_144 = PHI <i_sum_73(9), i_sum_146(13)>
  # ivtmp_206 = PHI <ivtmp_205(9), 4(13)>
  # DEBUG x => x_141
  # DEBUG i_sum => i_sum_144
  _61 = (sizetype) x_141;
  _63 = fenc_142 + _61;
  _64 = *_63;
  _65 = (int) _64;
  _67 = pix1_143 + _61;
  _68 = *_67;
  _69 = (int) _68;
  _70 = _65 - _69;
  _71 = ABS_EXPR <_70>;
  i_sum_73 = _71 + i_sum_144;
  # DEBUG i_sum => i_sum_73
  x_74 = x_141 + 1;
  # DEBUG x => x_74
  # DEBUG x => x_74
  # DEBUG i_sum => i_sum_73
  ivtmp_205 = ivtmp_206 - 1;
  if (ivtmp_205 != 0)
    goto <bb 9>;
  else
    goto <bb 11>;

  <bb 11>:
  # i_sum_218 = PHI <i_sum_73(10)>
  fenc_75 = fenc_142 + 16;
  # DEBUG pix1 => fenc_75
  pix1_77 = pix1_143 + pretmp_223;
  # DEBUG pix2 => pix1_77
  y_79 = y_145 + 1;
  # DEBUG y => y_79
  # DEBUG y => y_79
  # DEBUG i_sum => i_sum_218
  # DEBUG pix2 => pix1_77
  # DEBUG pix1 => fenc_75
  ivtmp_203 = ivtmp_204 - 1;
  if (ivtmp_203 != 0)
    goto <bb 12>;
  else
    goto <bb 14>;

  <bb 12>:

  <bb 13>:
  # fenc_142 = PHI <fenc_75(12), fenc_2(D)(8)>
  # pix1_143 = PHI <pix1_77(12), pix1_9(D)(8)>
  # y_145 = PHI <y_79(12), 0(8)>
  # i_sum_146 = PHI <i_sum_218(12), 0(8)>
  # ivtmp_204 = PHI <ivtmp_203(12), 8(8)>
  # DEBUG y => y_145
  # DEBUG i_sum => i_sum_146
  # DEBUG pix2 => pix1_143
  # DEBUG pix1 => fenc_142
  # DEBUG x => 0
  # DEBUG i_sum => i_sum_146
  goto <bb 10>;

  <bb 14>:
  # i_sum_217 = PHI <i_sum_218(11)>
  # DEBUG pix1 => NULL
  # DEBUG i_stride_pix1 => NULL
  # DEBUG pix2 => NULL
  # DEBUG i_stride_pix2 => NULL
  # DEBUG y => NULL
  # DEBUG x => NULL
  # DEBUG i_sum => NULL
  MEM[(int *)scores_6(D) + 4B] = i_sum_217;
  # DEBUG pix1 => fenc_2(D)
  # DEBUG i_stride_pix1 => 16
  # DEBUG pix2 => pix2_13(D)
  # DEBUG i_stride_pix2 => i_stride_4(D)
  # DEBUG y => 0
  # DEBUG i_sum => 0
  # DEBUG pix2 => pix2_13(D)
  # DEBUG pix1 => fenc_2(D)
  goto <bb 19>;

  <bb 15>:

  <bb 16>:
  # x_81 = PHI <x_52(15), 0(19)>
  # i_sum_138 = PHI <i_sum_51(15), i_sum_140(19)>
  # ivtmp_210 = PHI <ivtmp_209(15), 4(19)>
  # DEBUG x => x_81
  # DEBUG i_sum => i_sum_138
  _39 = (sizetype) x_81;
  _41 = fenc_37 + _39;
  _42 = *_41;
  _43 = (int) _42;
  _45 = pix2_137 + _39;
  _46 = *_45;
  _47 = (int) _46;
  _48 = _43 - _47;
  _49 = ABS_EXPR <_48>;
  i_sum_51 = _49 + i_sum_138;
  # DEBUG i_sum => i_sum_51
  x_52 = x_81 + 1;
  # DEBUG x => x_52
  # DEBUG x => x_52
  # DEBUG i_sum => i_sum_51
  ivtmp_209 = ivtmp_210 - 1;
  if (ivtmp_209 != 0)
    goto <bb 15>;
  else
    goto <bb 17>;

  <bb 17>:
  # i_sum_220 = PHI <i_sum_51(16)>
  fenc_53 = fenc_37 + 16;
  # DEBUG pix1 => fenc_53
  pix2_55 = pix2_137 + pretmp_223;
  # DEBUG pix2 => pix2_55
  y_57 = y_139 + 1;
  # DEBUG y => y_57
  # DEBUG y => y_57
  # DEBUG i_sum => i_sum_220
  # DEBUG pix2 => pix2_55
  # DEBUG pix1 => fenc_53
  ivtmp_207 = ivtmp_208 - 1;
  if (ivtmp_207 != 0)
    goto <bb 18>;
  else
    goto <bb 20>;

  <bb 18>:

  <bb 19>:
  # fenc_37 = PHI <fenc_53(18), fenc_2(D)(14)>
  # pix2_137 = PHI <pix2_55(18), pix2_13(D)(14)>
  # y_139 = PHI <y_57(18), 0(14)>
  # i_sum_140 = PHI <i_sum_220(18), 0(14)>
  # ivtmp_208 = PHI <ivtmp_207(18), 8(14)>
  # DEBUG y => y_139
  # DEBUG i_sum => i_sum_140
  # DEBUG pix2 => pix2_137
  # DEBUG pix1 => fenc_37
  # DEBUG x => 0
  # DEBUG i_sum => i_sum_140
  goto <bb 16>;

  <bb 20>:
  # i_sum_219 = PHI <i_sum_220(17)>
  # DEBUG pix1 => NULL
  # DEBUG i_stride_pix1 => NULL
  # DEBUG pix2 => NULL
  # DEBUG i_stride_pix2 => NULL
  # DEBUG y => NULL
  # DEBUG x => NULL
  # DEBUG i_sum => NULL
  MEM[(int *)scores_6(D) + 8B] = i_sum_219;
  # DEBUG pix1 => fenc_2(D)
  # DEBUG i_stride_pix1 => 16
  # DEBUG pix2 => pix3_17(D)
  # DEBUG i_stride_pix2 => i_stride_4(D)
  # DEBUG y => 0
  # DEBUG i_sum => 0
  # DEBUG pix2 => pix3_17(D)
  # DEBUG pix1 => fenc_2(D)
  goto <bb 25>;

  <bb 21>:

  <bb 22>:
  # x_8 = PHI <x_30(21), 0(25)>
  # i_sum_59 = PHI <i_sum_29(21), i_sum_104(25)>
  # ivtmp_214 = PHI <ivtmp_213(21), 4(25)>
  # DEBUG x => x_8
  # DEBUG i_sum => i_sum_59
  _14 = (sizetype) x_8;
  _5 = fenc_16 + _14;
  _20 = *_5;
  _21 = (int) _20;
  _23 = pix3_103 + _14;
  _24 = *_23;
  _25 = (int) _24;
  _26 = _21 - _25;
  _27 = ABS_EXPR <_26>;
  i_sum_29 = _27 + i_sum_59;
  # DEBUG i_sum => i_sum_29
  x_30 = x_8 + 1;
  # DEBUG x => x_30
  # DEBUG x => x_30
  # DEBUG i_sum => i_sum_29
  ivtmp_213 = ivtmp_214 - 1;
  if (ivtmp_213 != 0)
    goto <bb 21>;
  else
    goto <bb 23>;

  <bb 23>:
  # i_sum_222 = PHI <i_sum_29(22)>
  fenc_31 = fenc_16 + 16;
  # DEBUG pix1 => fenc_31
  pix3_33 = pix3_103 + pretmp_223;
  # DEBUG pix2 => pix3_33
  y_35 = y_12 + 1;
  # DEBUG y => y_35
  # DEBUG y => y_35
  # DEBUG i_sum => i_sum_222
  # DEBUG pix2 => pix3_33
  # DEBUG pix1 => fenc_31
  ivtmp_211 = ivtmp_212 - 1;
  if (ivtmp_211 != 0)
    goto <bb 24>;
  else
    goto <bb 26>;

  <bb 24>:

  <bb 25>:
  # fenc_16 = PHI <fenc_31(24), fenc_2(D)(20)>
  # pix3_103 = PHI <pix3_33(24), pix3_17(D)(20)>
  # y_12 = PHI <y_35(24), 0(20)>
  # i_sum_104 = PHI <i_sum_222(24), 0(20)>
  # ivtmp_212 = PHI <ivtmp_211(24), 8(20)>
  # DEBUG y => y_12
  # DEBUG i_sum => i_sum_104
  # DEBUG pix2 => pix3_103
  # DEBUG pix1 => fenc_16
  # DEBUG x => 0
  # DEBUG i_sum => i_sum_104
  goto <bb 22>;

  <bb 26>:
  # i_sum_221 = PHI <i_sum_222(23)>
  # DEBUG pix1 => NULL
  # DEBUG i_stride_pix1 => NULL
  # DEBUG pix2 => NULL
  # DEBUG i_stride_pix2 => NULL
  # DEBUG y => NULL
  # DEBUG x => NULL
  # DEBUG i_sum => NULL
  MEM[(int *)scores_6(D) + 12B] = i_sum_221;
  return;

}



;; Function x264_pixel_sad_x3_4x4 (x264_pixel_sad_x3_4x4, funcdef_no=162, decl_uid=8119, cgraph_uid=162, symbol_order=205)


Analyzing loop at common/pixel.c:65
common/pixel.c:65:1: note: ===== analyze_loop_nest =====
common/pixel.c:65:1: note: === vect_analyze_loop_form ===
common/pixel.c:65:1: note: ===== analyze_loop_nest_1 =====
common/pixel.c:65:1: note: === vect_analyze_loop_form ===
common/pixel.c:65:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 2
  exit condition [3, + , 4294967295] != 0
  bounds on difference of bases: -3 ... -3
  result:
    # of iterations 3, bounded by 3
common/pixel.c:65:1: note: Considering outer-loop vectorization.
common/pixel.c:65:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 1
  exit condition [3, + , 4294967295] != 0
  bounds on difference of bases: -3 ... -3
  result:
    # of iterations 3, bounded by 3
common/pixel.c:65:1: note: === vect_analyze_data_refs ===
Creating dr for *_16
analyze_innermost: success.
	base_address: fenc_34
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_2(D)
	Access function 0: {{0B, +, 16}_1, +, 1}_2
Creating dr for *_20
analyze_innermost: success.
	base_address: pix2_79
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix2_13(D)
	Access function 0: {{0B, +, pretmp_169}_1, +, 1}_2
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:65:1: note: analyze in outer-loop: *fenc_34
common/pixel.c:65:1: note: 	outer base_address: fenc_2(D)
	outer offset from base address: 0
	outer constant offset from base address: 0
	outer step: 16
	outer aligned to: 128
common/pixel.c:65:1: note: got vectype for stmt: _17 = *_16;
vector(16) unsigned char
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:65:1: note: analyze in outer-loop: *pix2_79
common/pixel.c:65:1: note: failed: evolution of base is not affine.
common/pixel.c:65:1: note: bad data references.

Analyzing loop at common/pixel.c:65
common/pixel.c:65:1: note: ===== analyze_loop_nest =====
common/pixel.c:65:1: note: === vect_analyze_loop_form ===
common/pixel.c:65:1: note: === get_loop_niters ===
common/pixel.c:65:1: note: === vect_analyze_data_refs ===
Creating dr for *_16
analyze_innermost: success.
	base_address: fenc_34
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_34
	Access function 0: {0B, +, 1}_2
Creating dr for *_20
analyze_innermost: success.
	base_address: pix2_79
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix2_79
	Access function 0: {0B, +, 1}_2
common/pixel.c:65:1: note: got vectype for stmt: _17 = *_16;
vector(16) unsigned char
common/pixel.c:65:1: note: got vectype for stmt: _21 = *_20;
vector(16) unsigned char
common/pixel.c:65:1: note: === vect_analyze_scalar_cycles ===
common/pixel.c:65:1: note: Analyze phi: x_8 = PHI <x_27(15), 0(19)>

common/pixel.c:65:1: note: Access function of PHI: {0, +, 1}_2
common/pixel.c:65:1: note: step: 1,  init: 0
common/pixel.c:65:1: note: Detected induction.
common/pixel.c:65:1: note: Analyze phi: i_sum_78 = PHI <i_sum_26(15), i_sum_12(19)>

common/pixel.c:65:1: note: Access function of PHI: {i_sum_12, +, _24}_2
common/pixel.c:65:1: note: step: _24,  init: i_sum_12
common/pixel.c:65:1: note: step unknown.
common/pixel.c:65:1: note: Analyze phi: ivtmp_162 = PHI <ivtmp_161(15), 4(19)>

common/pixel.c:65:1: note: Access function of PHI: {4, +, 4294967295}_2
common/pixel.c:65:1: note: step: 4294967295,  init: 4
common/pixel.c:65:1: note: Detected induction.
common/pixel.c:65:1: note: Analyze phi: i_sum_78 = PHI <i_sum_26(15), i_sum_12(19)>

common/pixel.c:65:1: note: detected reduction: i_sum_26 = _24 + i_sum_78;

common/pixel.c:65:1: note: Detected reduction.
common/pixel.c:65:1: note: === vect_pattern_recog ===
common/pixel.c:65:1: note: vect_is_simple_use: operand _24
common/pixel.c:65:1: note: def_stmt: _24 = ABS_EXPR <_23>;
common/pixel.c:65:1: note: type of def: 3.
common/pixel.c:65:1: note: vect_is_simple_use: operand _24
common/pixel.c:65:1: note: def_stmt: _24 = ABS_EXPR <_23>;
common/pixel.c:65:1: note: type of def: 3.
common/pixel.c:65:1: note: vect_is_simple_use: operand _24
common/pixel.c:65:1: note: def_stmt: _24 = ABS_EXPR <_23>;
common/pixel.c:65:1: note: type of def: 3.
common/pixel.c:65:1: note: vect_is_simple_use: operand _18
common/pixel.c:65:1: note: def_stmt: _18 = (int) _17;
common/pixel.c:65:1: note: type of def: 3.
common/pixel.c:65:1: note: vect_is_simple_use: operand _17
common/pixel.c:65:1: note: def_stmt: _17 = *_16;
common/pixel.c:65:1: note: type of def: 3.
common/pixel.c:65:1: note: vect_is_simple_use: operand _22
common/pixel.c:65:1: note: def_stmt: _22 = (int) _21;
common/pixel.c:65:1: note: type of def: 3.
common/pixel.c:65:1: note: vect_is_simple_use: operand _21
common/pixel.c:65:1: note: def_stmt: _21 = *_20;
common/pixel.c:65:1: note: type of def: 3.
common/pixel.c:65:1: note: vect_recog_sad_pattern: detected: patt_150 = SAD_EXPR <_17, _21, i_sum_78>;

common/pixel.c:65:1: note: pattern recognized: patt_150 = SAD_EXPR <_17, _21, i_sum_78>;
common/pixel.c:65:1: note: === vect_analyze_data_ref_accesses ===
common/pixel.c:65:1: note: === vect_mark_stmts_to_be_vectorized ===
common/pixel.c:65:1: note: init: phi relevant? x_8 = PHI <x_27(15), 0(19)>
common/pixel.c:65:1: note: init: phi relevant? i_sum_78 = PHI <i_sum_26(15), i_sum_12(19)>
common/pixel.c:65:1: note: init: phi relevant? ivtmp_162 = PHI <ivtmp_161(15), 4(19)>
common/pixel.c:65:1: note: init: stmt relevant? # DEBUG x => x_8
common/pixel.c:65:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_78
common/pixel.c:65:1: note: init: stmt relevant? _10 = (sizetype) x_8;
common/pixel.c:65:1: note: init: stmt relevant? _16 = fenc_34 + _10;
common/pixel.c:65:1: note: init: stmt relevant? _17 = *_16;
common/pixel.c:65:1: note: init: stmt relevant? _18 = (int) _17;
common/pixel.c:65:1: note: init: stmt relevant? _20 = pix2_79 + _10;
common/pixel.c:65:1: note: init: stmt relevant? _21 = *_20;
common/pixel.c:65:1: note: init: stmt relevant? _22 = (int) _21;
common/pixel.c:65:1: note: init: stmt relevant? _23 = _18 - _22;
common/pixel.c:65:1: note: init: stmt relevant? _24 = ABS_EXPR <_23>;
common/pixel.c:65:1: note: init: stmt relevant? i_sum_26 = _24 + i_sum_78;
common/pixel.c:65:1: note: vec_stmt_relevant_p: used out of loop.
common/pixel.c:65:1: note: mark relevant 0, live 1.
common/pixel.c:65:1: note: last stmt in pattern. don't mark relevant/live.
common/pixel.c:65:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_26
common/pixel.c:65:1: note: init: stmt relevant? x_27 = x_8 + 1;
common/pixel.c:65:1: note: init: stmt relevant? # DEBUG x => x_27
common/pixel.c:65:1: note: init: stmt relevant? # DEBUG x => x_27
common/pixel.c:65:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_26
common/pixel.c:65:1: note: init: stmt relevant? ivtmp_161 = ivtmp_162 - 1;
common/pixel.c:65:1: note: init: stmt relevant? if (ivtmp_161 != 0)
common/pixel.c:65:1: note: worklist: examine stmt: patt_150 = SAD_EXPR <_17, _21, i_sum_78>;
common/pixel.c:65:1: note: vect_is_simple_use: operand _17
common/pixel.c:65:1: note: def_stmt: _17 = *_16;
common/pixel.c:65:1: note: type of def: 3.
common/pixel.c:65:1: note: mark relevant 3, live 0.
common/pixel.c:65:1: note: vect_is_simple_use: operand _21
common/pixel.c:65:1: note: def_stmt: _21 = *_20;
common/pixel.c:65:1: note: type of def: 3.
common/pixel.c:65:1: note: mark relevant 3, live 0.
common/pixel.c:65:1: note: vect_is_simple_use: operand i_sum_78
common/pixel.c:65:1: note: def_stmt: i_sum_78 = PHI <i_sum_26(15), i_sum_12(19)>
common/pixel.c:65:1: note: type of def: 5.
common/pixel.c:65:1: note: mark relevant 3, live 0.
common/pixel.c:65:1: note: worklist: examine stmt: i_sum_78 = PHI <i_sum_26(15), i_sum_12(19)>
common/pixel.c:65:1: note: vect_is_simple_use: operand i_sum_26
common/pixel.c:65:1: note: def_stmt: i_sum_26 = _24 + i_sum_78;
common/pixel.c:65:1: note: type of def: 5.
common/pixel.c:65:1: note: reduc-stmt defining reduc-phi in the same nest.
common/pixel.c:65:1: note: vect_is_simple_use: operand i_sum_12
common/pixel.c:65:1: note: def_stmt: i_sum_12 = PHI <i_sum_168(18), 0(14)>
common/pixel.c:65:1: note: type of def: 2.
common/pixel.c:65:1: note: def_stmt is out of loop.
common/pixel.c:65:1: note: worklist: examine stmt: _21 = *_20;
common/pixel.c:65:1: note: worklist: examine stmt: _17 = *_16;
common/pixel.c:65:1: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _17 = *_16;
  stmt_b: _21 = *_20;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _17 = *_16;
  stmt_b: _17 = *_16;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_2)
  (chrec_b = {0B, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _21 = *_20;
  stmt_b: _21 = *_20;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_2)
  (chrec_b = {0B, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/pixel.c:65:1: note: === vect_determine_vectorization_factor ===
common/pixel.c:65:1: note: ==> examining phi: x_8 = PHI <x_27(15), 0(19)>

common/pixel.c:65:1: note: ==> examining phi: i_sum_78 = PHI <i_sum_26(15), i_sum_12(19)>

common/pixel.c:65:1: note: get vectype for scalar type:  int
common/pixel.c:65:1: note: vectype: vector(4) int
common/pixel.c:65:1: note: nunits = 4
common/pixel.c:65:1: note: ==> examining phi: ivtmp_162 = PHI <ivtmp_161(15), 4(19)>

common/pixel.c:65:1: note: ==> examining statement: # DEBUG x => x_8

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: # DEBUG i_sum => i_sum_78

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: _10 = (sizetype) x_8;

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: _16 = fenc_34 + _10;

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: _17 = *_16;

common/pixel.c:65:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:65:1: note: vectype: vector(16) unsigned char
common/pixel.c:65:1: note: nunits = 16
common/pixel.c:65:1: note: ==> examining statement: _18 = (int) _17;

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: _20 = pix2_79 + _10;

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: _21 = *_20;

common/pixel.c:65:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:65:1: note: vectype: vector(16) unsigned char
common/pixel.c:65:1: note: nunits = 16
common/pixel.c:65:1: note: ==> examining statement: _22 = (int) _21;

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: _23 = _18 - _22;

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: _24 = ABS_EXPR <_23>;

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: i_sum_26 = _24 + i_sum_78;

common/pixel.c:65:1: note: ==> examining pattern statement: patt_150 = SAD_EXPR <_17, _21, i_sum_78>;

common/pixel.c:65:1: note: get vectype for scalar type:  int
common/pixel.c:65:1: note: vectype: vector(4) int
common/pixel.c:65:1: note: nunits = 4
common/pixel.c:65:1: note: ==> examining statement: # DEBUG i_sum => i_sum_26

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: x_27 = x_8 + 1;

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: # DEBUG x => x_27

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: # DEBUG x => x_27

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: # DEBUG i_sum => i_sum_26

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: ivtmp_161 = ivtmp_162 - 1;

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: if (ivtmp_161 != 0)

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: vectorization factor = 16
common/pixel.c:65:1: note: === vect_analyze_data_refs_alignment ===
common/pixel.c:65:1: note: vect_compute_data_ref_alignment:
common/pixel.c:65:1: note: can't force alignment of ref: *_16
common/pixel.c:65:1: note: vect_compute_data_ref_alignment:
common/pixel.c:65:1: note: can't force alignment of ref: *_20
common/pixel.c:65:1: note: === vect_prune_runtime_alias_test_list ===
common/pixel.c:65:1: note: === vect_enhance_data_refs_alignment ===
common/pixel.c:65:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:65:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:65:1: note: vect_can_advance_ivs_p:
common/pixel.c:65:1: note: Analyze phi: x_8 = PHI <x_27(15), 0(19)>

common/pixel.c:65:1: note: Analyze phi: i_sum_78 = PHI <i_sum_26(15), i_sum_12(19)>

common/pixel.c:65:1: note: reduc phi. skip.
common/pixel.c:65:1: note: Analyze phi: ivtmp_162 = PHI <ivtmp_161(15), 4(19)>

common/pixel.c:65:1: note: Vectorizing an unaligned access.
common/pixel.c:65:1: note: Vectorizing an unaligned access.
common/pixel.c:65:1: note: === vect_analyze_slp ===
common/pixel.c:65:1: note: === vect_make_slp_decision ===
common/pixel.c:65:1: note: === vect_detect_hybrid_slp ===
common/pixel.c:65:1: note: === vect_analyze_loop_operations ===
common/pixel.c:65:1: note: examining phi: x_8 = PHI <x_27(15), 0(19)>

common/pixel.c:65:1: note: examining phi: i_sum_78 = PHI <i_sum_26(15), i_sum_12(19)>

common/pixel.c:65:1: note: examining phi: ivtmp_162 = PHI <ivtmp_161(15), 4(19)>

common/pixel.c:65:1: note: ==> examining statement: # DEBUG x => x_8
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: # DEBUG i_sum => i_sum_78
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: _10 = (sizetype) x_8;
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: _16 = fenc_34 + _10;
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: _17 = *_16;
common/pixel.c:65:1: note: vect_is_simple_use: operand *_16
common/pixel.c:65:1: note: not ssa-name.
common/pixel.c:65:1: note: use not simple.
common/pixel.c:65:1: note: vect_is_simple_use: operand *_16
common/pixel.c:65:1: note: not ssa-name.
common/pixel.c:65:1: note: use not simple.
common/pixel.c:65:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:65:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:65:1: note: ==> examining statement: _18 = (int) _17;
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: _20 = pix2_79 + _10;
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: _21 = *_20;
common/pixel.c:65:1: note: vect_is_simple_use: operand *_20
common/pixel.c:65:1: note: not ssa-name.
common/pixel.c:65:1: note: use not simple.
common/pixel.c:65:1: note: vect_is_simple_use: operand *_20
common/pixel.c:65:1: note: not ssa-name.
common/pixel.c:65:1: note: use not simple.
common/pixel.c:65:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:65:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:65:1: note: ==> examining statement: _22 = (int) _21;
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: _23 = _18 - _22;
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: _24 = ABS_EXPR <_23>;
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: i_sum_26 = _24 + i_sum_78;
common/pixel.c:65:1: note: ==> examining pattern statement: patt_150 = SAD_EXPR <_17, _21, i_sum_78>;
common/pixel.c:65:1: note: vect_is_simple_use: operand _17
common/pixel.c:65:1: note: def_stmt: _17 = *_16;
common/pixel.c:65:1: note: type of def: 3.
common/pixel.c:65:1: note: vect_is_simple_use: operand _21
common/pixel.c:65:1: note: def_stmt: _21 = *_20;
common/pixel.c:65:1: note: type of def: 3.
common/pixel.c:65:1: note: vect_is_simple_use: operand i_sum_78
common/pixel.c:65:1: note: def_stmt: i_sum_78 = PHI <i_sum_26(15), i_sum_12(19)>
common/pixel.c:65:1: note: type of def: 5.
common/pixel.c:65:1: note: detected reduction: i_sum_26 = _24 + i_sum_78;

common/pixel.c:65:1: note: reduc op not supported by target.
vect_model_reduction_cost: inside_cost = 1, prologue_cost = 1, epilogue_cost = 5 .
common/pixel.c:65:1: note: ==> examining statement: # DEBUG i_sum => i_sum_26
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: x_27 = x_8 + 1;
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: # DEBUG x => x_27
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: # DEBUG x => x_27
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: # DEBUG i_sum => i_sum_26
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: ivtmp_161 = ivtmp_162 - 1;
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: if (ivtmp_161 != 0)
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: vectorization_factor = 16, niters = 4
common/pixel.c:65:1: note: not vectorized: iteration count too small.
common/pixel.c:65:1: note: not vectorized: iteration count smaller than vectorization factor.
common/pixel.c:65:1: note: bad operation or unsupported loop bound.

Analyzing loop at common/pixel.c:65
common/pixel.c:65:1: note: ===== analyze_loop_nest =====
common/pixel.c:65:1: note: === vect_analyze_loop_form ===
common/pixel.c:65:1: note: ===== analyze_loop_nest_1 =====
common/pixel.c:65:1: note: === vect_analyze_loop_form ===
common/pixel.c:65:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 4
  exit condition [3, + , 4294967295] != 0
  bounds on difference of bases: -3 ... -3
  result:
    # of iterations 3, bounded by 3
common/pixel.c:65:1: note: Considering outer-loop vectorization.
common/pixel.c:65:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 3
  exit condition [3, + , 4294967295] != 0
  bounds on difference of bases: -3 ... -3
  result:
    # of iterations 3, bounded by 3
common/pixel.c:65:1: note: === vect_analyze_data_refs ===
Creating dr for *_38
analyze_innermost: success.
	base_address: fenc_105
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_2(D)
	Access function 0: {{0B, +, 16}_3, +, 1}_4
Creating dr for *_42
analyze_innermost: success.
	base_address: pix1_106
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix1_9(D)
	Access function 0: {{0B, +, pretmp_169}_3, +, 1}_4
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:65:1: note: analyze in outer-loop: *fenc_105
common/pixel.c:65:1: note: 	outer base_address: fenc_2(D)
	outer offset from base address: 0
	outer constant offset from base address: 0
	outer step: 16
	outer aligned to: 128
common/pixel.c:65:1: note: got vectype for stmt: _39 = *_38;
vector(16) unsigned char
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:65:1: note: analyze in outer-loop: *pix1_106
common/pixel.c:65:1: note: failed: evolution of base is not affine.
common/pixel.c:65:1: note: bad data references.

Analyzing loop at common/pixel.c:65
common/pixel.c:65:1: note: ===== analyze_loop_nest =====
common/pixel.c:65:1: note: === vect_analyze_loop_form ===
common/pixel.c:65:1: note: === get_loop_niters ===
common/pixel.c:65:1: note: === vect_analyze_data_refs ===
Creating dr for *_38
analyze_innermost: success.
	base_address: fenc_105
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_105
	Access function 0: {0B, +, 1}_4
Creating dr for *_42
analyze_innermost: success.
	base_address: pix1_106
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix1_106
	Access function 0: {0B, +, 1}_4
common/pixel.c:65:1: note: got vectype for stmt: _39 = *_38;
vector(16) unsigned char
common/pixel.c:65:1: note: got vectype for stmt: _43 = *_42;
vector(16) unsigned char
common/pixel.c:65:1: note: === vect_analyze_scalar_cycles ===
common/pixel.c:65:1: note: Analyze phi: x_104 = PHI <x_49(9), 0(13)>

common/pixel.c:65:1: note: Access function of PHI: {0, +, 1}_4
common/pixel.c:65:1: note: step: 1,  init: 0
common/pixel.c:65:1: note: Detected induction.
common/pixel.c:65:1: note: Analyze phi: i_sum_107 = PHI <i_sum_48(9), i_sum_109(13)>

common/pixel.c:65:1: note: Access function of PHI: {i_sum_109, +, _46}_4
common/pixel.c:65:1: note: step: _46,  init: i_sum_109
common/pixel.c:65:1: note: step unknown.
common/pixel.c:65:1: note: Analyze phi: ivtmp_158 = PHI <ivtmp_157(9), 4(13)>

common/pixel.c:65:1: note: Access function of PHI: {4, +, 4294967295}_4
common/pixel.c:65:1: note: step: 4294967295,  init: 4
common/pixel.c:65:1: note: Detected induction.
common/pixel.c:65:1: note: Analyze phi: i_sum_107 = PHI <i_sum_48(9), i_sum_109(13)>

common/pixel.c:65:1: note: detected reduction: i_sum_48 = _46 + i_sum_107;

common/pixel.c:65:1: note: Detected reduction.
common/pixel.c:65:1: note: === vect_pattern_recog ===
common/pixel.c:65:1: note: vect_is_simple_use: operand _46
common/pixel.c:65:1: note: def_stmt: _46 = ABS_EXPR <_45>;
common/pixel.c:65:1: note: type of def: 3.
common/pixel.c:65:1: note: vect_is_simple_use: operand _46
common/pixel.c:65:1: note: def_stmt: _46 = ABS_EXPR <_45>;
common/pixel.c:65:1: note: type of def: 3.
common/pixel.c:65:1: note: vect_is_simple_use: operand _46
common/pixel.c:65:1: note: def_stmt: _46 = ABS_EXPR <_45>;
common/pixel.c:65:1: note: type of def: 3.
common/pixel.c:65:1: note: vect_is_simple_use: operand _40
common/pixel.c:65:1: note: def_stmt: _40 = (int) _39;
common/pixel.c:65:1: note: type of def: 3.
common/pixel.c:65:1: note: vect_is_simple_use: operand _39
common/pixel.c:65:1: note: def_stmt: _39 = *_38;
common/pixel.c:65:1: note: type of def: 3.
common/pixel.c:65:1: note: vect_is_simple_use: operand _44
common/pixel.c:65:1: note: def_stmt: _44 = (int) _43;
common/pixel.c:65:1: note: type of def: 3.
common/pixel.c:65:1: note: vect_is_simple_use: operand _43
common/pixel.c:65:1: note: def_stmt: _43 = *_42;
common/pixel.c:65:1: note: type of def: 3.
common/pixel.c:65:1: note: vect_recog_sad_pattern: detected: patt_150 = SAD_EXPR <_39, _43, i_sum_107>;

common/pixel.c:65:1: note: pattern recognized: patt_150 = SAD_EXPR <_39, _43, i_sum_107>;
common/pixel.c:65:1: note: === vect_analyze_data_ref_accesses ===
common/pixel.c:65:1: note: === vect_mark_stmts_to_be_vectorized ===
common/pixel.c:65:1: note: init: phi relevant? x_104 = PHI <x_49(9), 0(13)>
common/pixel.c:65:1: note: init: phi relevant? i_sum_107 = PHI <i_sum_48(9), i_sum_109(13)>
common/pixel.c:65:1: note: init: phi relevant? ivtmp_158 = PHI <ivtmp_157(9), 4(13)>
common/pixel.c:65:1: note: init: stmt relevant? # DEBUG x => x_104
common/pixel.c:65:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_107
common/pixel.c:65:1: note: init: stmt relevant? _36 = (sizetype) x_104;
common/pixel.c:65:1: note: init: stmt relevant? _38 = fenc_105 + _36;
common/pixel.c:65:1: note: init: stmt relevant? _39 = *_38;
common/pixel.c:65:1: note: init: stmt relevant? _40 = (int) _39;
common/pixel.c:65:1: note: init: stmt relevant? _42 = pix1_106 + _36;
common/pixel.c:65:1: note: init: stmt relevant? _43 = *_42;
common/pixel.c:65:1: note: init: stmt relevant? _44 = (int) _43;
common/pixel.c:65:1: note: init: stmt relevant? _45 = _40 - _44;
common/pixel.c:65:1: note: init: stmt relevant? _46 = ABS_EXPR <_45>;
common/pixel.c:65:1: note: init: stmt relevant? i_sum_48 = _46 + i_sum_107;
common/pixel.c:65:1: note: vec_stmt_relevant_p: used out of loop.
common/pixel.c:65:1: note: mark relevant 0, live 1.
common/pixel.c:65:1: note: last stmt in pattern. don't mark relevant/live.
common/pixel.c:65:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_48
common/pixel.c:65:1: note: init: stmt relevant? x_49 = x_104 + 1;
common/pixel.c:65:1: note: init: stmt relevant? # DEBUG x => x_49
common/pixel.c:65:1: note: init: stmt relevant? # DEBUG x => x_49
common/pixel.c:65:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_48
common/pixel.c:65:1: note: init: stmt relevant? ivtmp_157 = ivtmp_158 - 1;
common/pixel.c:65:1: note: init: stmt relevant? if (ivtmp_157 != 0)
common/pixel.c:65:1: note: worklist: examine stmt: patt_150 = SAD_EXPR <_39, _43, i_sum_107>;
common/pixel.c:65:1: note: vect_is_simple_use: operand _39
common/pixel.c:65:1: note: def_stmt: _39 = *_38;
common/pixel.c:65:1: note: type of def: 3.
common/pixel.c:65:1: note: mark relevant 3, live 0.
common/pixel.c:65:1: note: vect_is_simple_use: operand _43
common/pixel.c:65:1: note: def_stmt: _43 = *_42;
common/pixel.c:65:1: note: type of def: 3.
common/pixel.c:65:1: note: mark relevant 3, live 0.
common/pixel.c:65:1: note: vect_is_simple_use: operand i_sum_107
common/pixel.c:65:1: note: def_stmt: i_sum_107 = PHI <i_sum_48(9), i_sum_109(13)>
common/pixel.c:65:1: note: type of def: 5.
common/pixel.c:65:1: note: mark relevant 3, live 0.
common/pixel.c:65:1: note: worklist: examine stmt: i_sum_107 = PHI <i_sum_48(9), i_sum_109(13)>
common/pixel.c:65:1: note: vect_is_simple_use: operand i_sum_48
common/pixel.c:65:1: note: def_stmt: i_sum_48 = _46 + i_sum_107;
common/pixel.c:65:1: note: type of def: 5.
common/pixel.c:65:1: note: reduc-stmt defining reduc-phi in the same nest.
common/pixel.c:65:1: note: vect_is_simple_use: operand i_sum_109
common/pixel.c:65:1: note: def_stmt: i_sum_109 = PHI <i_sum_166(12), 0(8)>
common/pixel.c:65:1: note: type of def: 2.
common/pixel.c:65:1: note: def_stmt is out of loop.
common/pixel.c:65:1: note: worklist: examine stmt: _43 = *_42;
common/pixel.c:65:1: note: worklist: examine stmt: _39 = *_38;
common/pixel.c:65:1: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _39 = *_38;
  stmt_b: _43 = *_42;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _39 = *_38;
  stmt_b: _39 = *_38;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_4)
  (chrec_b = {0B, +, 1}_4)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _43 = *_42;
  stmt_b: _43 = *_42;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_4)
  (chrec_b = {0B, +, 1}_4)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/pixel.c:65:1: note: === vect_determine_vectorization_factor ===
common/pixel.c:65:1: note: ==> examining phi: x_104 = PHI <x_49(9), 0(13)>

common/pixel.c:65:1: note: ==> examining phi: i_sum_107 = PHI <i_sum_48(9), i_sum_109(13)>

common/pixel.c:65:1: note: get vectype for scalar type:  int
common/pixel.c:65:1: note: vectype: vector(4) int
common/pixel.c:65:1: note: nunits = 4
common/pixel.c:65:1: note: ==> examining phi: ivtmp_158 = PHI <ivtmp_157(9), 4(13)>

common/pixel.c:65:1: note: ==> examining statement: # DEBUG x => x_104

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: # DEBUG i_sum => i_sum_107

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: _36 = (sizetype) x_104;

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: _38 = fenc_105 + _36;

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: _39 = *_38;

common/pixel.c:65:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:65:1: note: vectype: vector(16) unsigned char
common/pixel.c:65:1: note: nunits = 16
common/pixel.c:65:1: note: ==> examining statement: _40 = (int) _39;

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: _42 = pix1_106 + _36;

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: _43 = *_42;

common/pixel.c:65:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:65:1: note: vectype: vector(16) unsigned char
common/pixel.c:65:1: note: nunits = 16
common/pixel.c:65:1: note: ==> examining statement: _44 = (int) _43;

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: _45 = _40 - _44;

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: _46 = ABS_EXPR <_45>;

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: i_sum_48 = _46 + i_sum_107;

common/pixel.c:65:1: note: ==> examining pattern statement: patt_150 = SAD_EXPR <_39, _43, i_sum_107>;

common/pixel.c:65:1: note: get vectype for scalar type:  int
common/pixel.c:65:1: note: vectype: vector(4) int
common/pixel.c:65:1: note: nunits = 4
common/pixel.c:65:1: note: ==> examining statement: # DEBUG i_sum => i_sum_48

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: x_49 = x_104 + 1;

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: # DEBUG x => x_49

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: # DEBUG x => x_49

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: # DEBUG i_sum => i_sum_48

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: ivtmp_157 = ivtmp_158 - 1;

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: if (ivtmp_157 != 0)

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: vectorization factor = 16
common/pixel.c:65:1: note: === vect_analyze_data_refs_alignment ===
common/pixel.c:65:1: note: vect_compute_data_ref_alignment:
common/pixel.c:65:1: note: can't force alignment of ref: *_38
common/pixel.c:65:1: note: vect_compute_data_ref_alignment:
common/pixel.c:65:1: note: can't force alignment of ref: *_42
common/pixel.c:65:1: note: === vect_prune_runtime_alias_test_list ===
common/pixel.c:65:1: note: === vect_enhance_data_refs_alignment ===
common/pixel.c:65:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:65:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:65:1: note: vect_can_advance_ivs_p:
common/pixel.c:65:1: note: Analyze phi: x_104 = PHI <x_49(9), 0(13)>

common/pixel.c:65:1: note: Analyze phi: i_sum_107 = PHI <i_sum_48(9), i_sum_109(13)>

common/pixel.c:65:1: note: reduc phi. skip.
common/pixel.c:65:1: note: Analyze phi: ivtmp_158 = PHI <ivtmp_157(9), 4(13)>

common/pixel.c:65:1: note: Vectorizing an unaligned access.
common/pixel.c:65:1: note: Vectorizing an unaligned access.
common/pixel.c:65:1: note: === vect_analyze_slp ===
common/pixel.c:65:1: note: === vect_make_slp_decision ===
common/pixel.c:65:1: note: === vect_detect_hybrid_slp ===
common/pixel.c:65:1: note: === vect_analyze_loop_operations ===
common/pixel.c:65:1: note: examining phi: x_104 = PHI <x_49(9), 0(13)>

common/pixel.c:65:1: note: examining phi: i_sum_107 = PHI <i_sum_48(9), i_sum_109(13)>

common/pixel.c:65:1: note: examining phi: ivtmp_158 = PHI <ivtmp_157(9), 4(13)>

common/pixel.c:65:1: note: ==> examining statement: # DEBUG x => x_104
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: # DEBUG i_sum => i_sum_107
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: _36 = (sizetype) x_104;
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: _38 = fenc_105 + _36;
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: _39 = *_38;
common/pixel.c:65:1: note: vect_is_simple_use: operand *_38
common/pixel.c:65:1: note: not ssa-name.
common/pixel.c:65:1: note: use not simple.
common/pixel.c:65:1: note: vect_is_simple_use: operand *_38
common/pixel.c:65:1: note: not ssa-name.
common/pixel.c:65:1: note: use not simple.
common/pixel.c:65:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:65:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:65:1: note: ==> examining statement: _40 = (int) _39;
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: _42 = pix1_106 + _36;
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: _43 = *_42;
common/pixel.c:65:1: note: vect_is_simple_use: operand *_42
common/pixel.c:65:1: note: not ssa-name.
common/pixel.c:65:1: note: use not simple.
common/pixel.c:65:1: note: vect_is_simple_use: operand *_42
common/pixel.c:65:1: note: not ssa-name.
common/pixel.c:65:1: note: use not simple.
common/pixel.c:65:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:65:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:65:1: note: ==> examining statement: _44 = (int) _43;
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: _45 = _40 - _44;
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: _46 = ABS_EXPR <_45>;
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: i_sum_48 = _46 + i_sum_107;
common/pixel.c:65:1: note: ==> examining pattern statement: patt_150 = SAD_EXPR <_39, _43, i_sum_107>;
common/pixel.c:65:1: note: vect_is_simple_use: operand _39
common/pixel.c:65:1: note: def_stmt: _39 = *_38;
common/pixel.c:65:1: note: type of def: 3.
common/pixel.c:65:1: note: vect_is_simple_use: operand _43
common/pixel.c:65:1: note: def_stmt: _43 = *_42;
common/pixel.c:65:1: note: type of def: 3.
common/pixel.c:65:1: note: vect_is_simple_use: operand i_sum_107
common/pixel.c:65:1: note: def_stmt: i_sum_107 = PHI <i_sum_48(9), i_sum_109(13)>
common/pixel.c:65:1: note: type of def: 5.
common/pixel.c:65:1: note: detected reduction: i_sum_48 = _46 + i_sum_107;

common/pixel.c:65:1: note: reduc op not supported by target.
vect_model_reduction_cost: inside_cost = 1, prologue_cost = 1, epilogue_cost = 5 .
common/pixel.c:65:1: note: ==> examining statement: # DEBUG i_sum => i_sum_48
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: x_49 = x_104 + 1;
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: # DEBUG x => x_49
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: # DEBUG x => x_49
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: # DEBUG i_sum => i_sum_48
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: ivtmp_157 = ivtmp_158 - 1;
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: if (ivtmp_157 != 0)
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: vectorization_factor = 16, niters = 4
common/pixel.c:65:1: note: not vectorized: iteration count too small.
common/pixel.c:65:1: note: not vectorized: iteration count smaller than vectorization factor.
common/pixel.c:65:1: note: bad operation or unsupported loop bound.

Analyzing loop at common/pixel.c:65
common/pixel.c:65:1: note: ===== analyze_loop_nest =====
common/pixel.c:65:1: note: === vect_analyze_loop_form ===
common/pixel.c:65:1: note: ===== analyze_loop_nest_1 =====
common/pixel.c:65:1: note: === vect_analyze_loop_form ===
common/pixel.c:65:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 6
  exit condition [3, + , 4294967295] != 0
  bounds on difference of bases: -3 ... -3
  result:
    # of iterations 3, bounded by 3
common/pixel.c:65:1: note: Considering outer-loop vectorization.
common/pixel.c:65:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 5
  exit condition [3, + , 4294967295] != 0
  bounds on difference of bases: -3 ... -3
  result:
    # of iterations 3, bounded by 3
common/pixel.c:65:1: note: === vect_analyze_data_refs ===
Creating dr for *_60
analyze_innermost: success.
	base_address: fenc_111
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_2(D)
	Access function 0: {{0B, +, 16}_5, +, 1}_6
Creating dr for *_64
analyze_innermost: success.
	base_address: pix0_112
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix0_3(D)
	Access function 0: {{0B, +, pretmp_169}_5, +, 1}_6
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:65:1: note: analyze in outer-loop: *fenc_111
common/pixel.c:65:1: note: 	outer base_address: fenc_2(D)
	outer offset from base address: 0
	outer constant offset from base address: 0
	outer step: 16
	outer aligned to: 128
common/pixel.c:65:1: note: got vectype for stmt: _61 = *_60;
vector(16) unsigned char
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:65:1: note: analyze in outer-loop: *pix0_112
common/pixel.c:65:1: note: failed: evolution of base is not affine.
common/pixel.c:65:1: note: bad data references.

Analyzing loop at common/pixel.c:65
common/pixel.c:65:1: note: ===== analyze_loop_nest =====
common/pixel.c:65:1: note: === vect_analyze_loop_form ===
common/pixel.c:65:1: note: === get_loop_niters ===
common/pixel.c:65:1: note: === vect_analyze_data_refs ===
Creating dr for *_60
analyze_innermost: success.
	base_address: fenc_111
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_111
	Access function 0: {0B, +, 1}_6
Creating dr for *_64
analyze_innermost: success.
	base_address: pix0_112
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix0_112
	Access function 0: {0B, +, 1}_6
common/pixel.c:65:1: note: got vectype for stmt: _61 = *_60;
vector(16) unsigned char
common/pixel.c:65:1: note: got vectype for stmt: _65 = *_64;
vector(16) unsigned char
common/pixel.c:65:1: note: === vect_analyze_scalar_cycles ===
common/pixel.c:65:1: note: Analyze phi: x_110 = PHI <x_71(3), 0(7)>

common/pixel.c:65:1: note: Access function of PHI: {0, +, 1}_6
common/pixel.c:65:1: note: step: 1,  init: 0
common/pixel.c:65:1: note: Detected induction.
common/pixel.c:65:1: note: Analyze phi: i_sum_113 = PHI <i_sum_70(3), i_sum_115(7)>

common/pixel.c:65:1: note: Access function of PHI: {i_sum_115, +, _68}_6
common/pixel.c:65:1: note: step: _68,  init: i_sum_115
common/pixel.c:65:1: note: step unknown.
common/pixel.c:65:1: note: Analyze phi: ivtmp_154 = PHI <ivtmp_153(3), 4(7)>

common/pixel.c:65:1: note: Access function of PHI: {4, +, 4294967295}_6
common/pixel.c:65:1: note: step: 4294967295,  init: 4
common/pixel.c:65:1: note: Detected induction.
common/pixel.c:65:1: note: Analyze phi: i_sum_113 = PHI <i_sum_70(3), i_sum_115(7)>

common/pixel.c:65:1: note: detected reduction: i_sum_70 = _68 + i_sum_113;

common/pixel.c:65:1: note: Detected reduction.
common/pixel.c:65:1: note: === vect_pattern_recog ===
common/pixel.c:65:1: note: vect_is_simple_use: operand _68
common/pixel.c:65:1: note: def_stmt: _68 = ABS_EXPR <_67>;
common/pixel.c:65:1: note: type of def: 3.
common/pixel.c:65:1: note: vect_is_simple_use: operand _68
common/pixel.c:65:1: note: def_stmt: _68 = ABS_EXPR <_67>;
common/pixel.c:65:1: note: type of def: 3.
common/pixel.c:65:1: note: vect_is_simple_use: operand _68
common/pixel.c:65:1: note: def_stmt: _68 = ABS_EXPR <_67>;
common/pixel.c:65:1: note: type of def: 3.
common/pixel.c:65:1: note: vect_is_simple_use: operand _62
common/pixel.c:65:1: note: def_stmt: _62 = (int) _61;
common/pixel.c:65:1: note: type of def: 3.
common/pixel.c:65:1: note: vect_is_simple_use: operand _61
common/pixel.c:65:1: note: def_stmt: _61 = *_60;
common/pixel.c:65:1: note: type of def: 3.
common/pixel.c:65:1: note: vect_is_simple_use: operand _66
common/pixel.c:65:1: note: def_stmt: _66 = (int) _65;
common/pixel.c:65:1: note: type of def: 3.
common/pixel.c:65:1: note: vect_is_simple_use: operand _65
common/pixel.c:65:1: note: def_stmt: _65 = *_64;
common/pixel.c:65:1: note: type of def: 3.
common/pixel.c:65:1: note: vect_recog_sad_pattern: detected: patt_150 = SAD_EXPR <_61, _65, i_sum_113>;

common/pixel.c:65:1: note: pattern recognized: patt_150 = SAD_EXPR <_61, _65, i_sum_113>;
common/pixel.c:65:1: note: === vect_analyze_data_ref_accesses ===
common/pixel.c:65:1: note: === vect_mark_stmts_to_be_vectorized ===
common/pixel.c:65:1: note: init: phi relevant? x_110 = PHI <x_71(3), 0(7)>
common/pixel.c:65:1: note: init: phi relevant? i_sum_113 = PHI <i_sum_70(3), i_sum_115(7)>
common/pixel.c:65:1: note: init: phi relevant? ivtmp_154 = PHI <ivtmp_153(3), 4(7)>
common/pixel.c:65:1: note: init: stmt relevant? # DEBUG x => x_110
common/pixel.c:65:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_113
common/pixel.c:65:1: note: init: stmt relevant? _58 = (sizetype) x_110;
common/pixel.c:65:1: note: init: stmt relevant? _60 = fenc_111 + _58;
common/pixel.c:65:1: note: init: stmt relevant? _61 = *_60;
common/pixel.c:65:1: note: init: stmt relevant? _62 = (int) _61;
common/pixel.c:65:1: note: init: stmt relevant? _64 = pix0_112 + _58;
common/pixel.c:65:1: note: init: stmt relevant? _65 = *_64;
common/pixel.c:65:1: note: init: stmt relevant? _66 = (int) _65;
common/pixel.c:65:1: note: init: stmt relevant? _67 = _62 - _66;
common/pixel.c:65:1: note: init: stmt relevant? _68 = ABS_EXPR <_67>;
common/pixel.c:65:1: note: init: stmt relevant? i_sum_70 = _68 + i_sum_113;
common/pixel.c:65:1: note: vec_stmt_relevant_p: used out of loop.
common/pixel.c:65:1: note: mark relevant 0, live 1.
common/pixel.c:65:1: note: last stmt in pattern. don't mark relevant/live.
common/pixel.c:65:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_70
common/pixel.c:65:1: note: init: stmt relevant? x_71 = x_110 + 1;
common/pixel.c:65:1: note: init: stmt relevant? # DEBUG x => x_71
common/pixel.c:65:1: note: init: stmt relevant? # DEBUG x => x_71
common/pixel.c:65:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_70
common/pixel.c:65:1: note: init: stmt relevant? ivtmp_153 = ivtmp_154 - 1;
common/pixel.c:65:1: note: init: stmt relevant? if (ivtmp_153 != 0)
common/pixel.c:65:1: note: worklist: examine stmt: patt_150 = SAD_EXPR <_61, _65, i_sum_113>;
common/pixel.c:65:1: note: vect_is_simple_use: operand _61
common/pixel.c:65:1: note: def_stmt: _61 = *_60;
common/pixel.c:65:1: note: type of def: 3.
common/pixel.c:65:1: note: mark relevant 3, live 0.
common/pixel.c:65:1: note: vect_is_simple_use: operand _65
common/pixel.c:65:1: note: def_stmt: _65 = *_64;
common/pixel.c:65:1: note: type of def: 3.
common/pixel.c:65:1: note: mark relevant 3, live 0.
common/pixel.c:65:1: note: vect_is_simple_use: operand i_sum_113
common/pixel.c:65:1: note: def_stmt: i_sum_113 = PHI <i_sum_70(3), i_sum_115(7)>
common/pixel.c:65:1: note: type of def: 5.
common/pixel.c:65:1: note: mark relevant 3, live 0.
common/pixel.c:65:1: note: worklist: examine stmt: i_sum_113 = PHI <i_sum_70(3), i_sum_115(7)>
common/pixel.c:65:1: note: vect_is_simple_use: operand i_sum_70
common/pixel.c:65:1: note: def_stmt: i_sum_70 = _68 + i_sum_113;
common/pixel.c:65:1: note: type of def: 5.
common/pixel.c:65:1: note: reduc-stmt defining reduc-phi in the same nest.
common/pixel.c:65:1: note: vect_is_simple_use: operand i_sum_115
common/pixel.c:65:1: note: def_stmt: i_sum_115 = PHI <i_sum_164(6), 0(2)>
common/pixel.c:65:1: note: type of def: 2.
common/pixel.c:65:1: note: def_stmt is out of loop.
common/pixel.c:65:1: note: worklist: examine stmt: _65 = *_64;
common/pixel.c:65:1: note: worklist: examine stmt: _61 = *_60;
common/pixel.c:65:1: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _61 = *_60;
  stmt_b: _65 = *_64;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _61 = *_60;
  stmt_b: _61 = *_60;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_6)
  (chrec_b = {0B, +, 1}_6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _65 = *_64;
  stmt_b: _65 = *_64;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_6)
  (chrec_b = {0B, +, 1}_6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/pixel.c:65:1: note: === vect_determine_vectorization_factor ===
common/pixel.c:65:1: note: ==> examining phi: x_110 = PHI <x_71(3), 0(7)>

common/pixel.c:65:1: note: ==> examining phi: i_sum_113 = PHI <i_sum_70(3), i_sum_115(7)>

common/pixel.c:65:1: note: get vectype for scalar type:  int
common/pixel.c:65:1: note: vectype: vector(4) int
common/pixel.c:65:1: note: nunits = 4
common/pixel.c:65:1: note: ==> examining phi: ivtmp_154 = PHI <ivtmp_153(3), 4(7)>

common/pixel.c:65:1: note: ==> examining statement: # DEBUG x => x_110

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: # DEBUG i_sum => i_sum_113

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: _58 = (sizetype) x_110;

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: _60 = fenc_111 + _58;

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: _61 = *_60;

common/pixel.c:65:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:65:1: note: vectype: vector(16) unsigned char
common/pixel.c:65:1: note: nunits = 16
common/pixel.c:65:1: note: ==> examining statement: _62 = (int) _61;

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: _64 = pix0_112 + _58;

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: _65 = *_64;

common/pixel.c:65:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:65:1: note: vectype: vector(16) unsigned char
common/pixel.c:65:1: note: nunits = 16
common/pixel.c:65:1: note: ==> examining statement: _66 = (int) _65;

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: _67 = _62 - _66;

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: _68 = ABS_EXPR <_67>;

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: i_sum_70 = _68 + i_sum_113;

common/pixel.c:65:1: note: ==> examining pattern statement: patt_150 = SAD_EXPR <_61, _65, i_sum_113>;

common/pixel.c:65:1: note: get vectype for scalar type:  int
common/pixel.c:65:1: note: vectype: vector(4) int
common/pixel.c:65:1: note: nunits = 4
common/pixel.c:65:1: note: ==> examining statement: # DEBUG i_sum => i_sum_70

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: x_71 = x_110 + 1;

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: # DEBUG x => x_71

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: # DEBUG x => x_71

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: # DEBUG i_sum => i_sum_70

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: ivtmp_153 = ivtmp_154 - 1;

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: if (ivtmp_153 != 0)

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: vectorization factor = 16
common/pixel.c:65:1: note: === vect_analyze_data_refs_alignment ===
common/pixel.c:65:1: note: vect_compute_data_ref_alignment:
common/pixel.c:65:1: note: can't force alignment of ref: *_60
common/pixel.c:65:1: note: vect_compute_data_ref_alignment:
common/pixel.c:65:1: note: can't force alignment of ref: *_64
common/pixel.c:65:1: note: === vect_prune_runtime_alias_test_list ===
common/pixel.c:65:1: note: === vect_enhance_data_refs_alignment ===
common/pixel.c:65:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:65:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:65:1: note: vect_can_advance_ivs_p:
common/pixel.c:65:1: note: Analyze phi: x_110 = PHI <x_71(3), 0(7)>

common/pixel.c:65:1: note: Analyze phi: i_sum_113 = PHI <i_sum_70(3), i_sum_115(7)>

common/pixel.c:65:1: note: reduc phi. skip.
common/pixel.c:65:1: note: Analyze phi: ivtmp_154 = PHI <ivtmp_153(3), 4(7)>

common/pixel.c:65:1: note: Vectorizing an unaligned access.
common/pixel.c:65:1: note: Vectorizing an unaligned access.
common/pixel.c:65:1: note: === vect_analyze_slp ===
common/pixel.c:65:1: note: === vect_make_slp_decision ===
common/pixel.c:65:1: note: === vect_detect_hybrid_slp ===
common/pixel.c:65:1: note: === vect_analyze_loop_operations ===
common/pixel.c:65:1: note: examining phi: x_110 = PHI <x_71(3), 0(7)>

common/pixel.c:65:1: note: examining phi: i_sum_113 = PHI <i_sum_70(3), i_sum_115(7)>

common/pixel.c:65:1: note: examining phi: ivtmp_154 = PHI <ivtmp_153(3), 4(7)>

common/pixel.c:65:1: note: ==> examining statement: # DEBUG x => x_110
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: # DEBUG i_sum => i_sum_113
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: _58 = (sizetype) x_110;
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: _60 = fenc_111 + _58;
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: _61 = *_60;
common/pixel.c:65:1: note: vect_is_simple_use: operand *_60
common/pixel.c:65:1: note: not ssa-name.
common/pixel.c:65:1: note: use not simple.
common/pixel.c:65:1: note: vect_is_simple_use: operand *_60
common/pixel.c:65:1: note: not ssa-name.
common/pixel.c:65:1: note: use not simple.
common/pixel.c:65:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:65:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:65:1: note: ==> examining statement: _62 = (int) _61;
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: _64 = pix0_112 + _58;
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: _65 = *_64;
common/pixel.c:65:1: note: vect_is_simple_use: operand *_64
common/pixel.c:65:1: note: not ssa-name.
common/pixel.c:65:1: note: use not simple.
common/pixel.c:65:1: note: vect_is_simple_use: operand *_64
common/pixel.c:65:1: note: not ssa-name.
common/pixel.c:65:1: note: use not simple.
common/pixel.c:65:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:65:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:65:1: note: ==> examining statement: _66 = (int) _65;
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: _67 = _62 - _66;
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: _68 = ABS_EXPR <_67>;
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: i_sum_70 = _68 + i_sum_113;
common/pixel.c:65:1: note: ==> examining pattern statement: patt_150 = SAD_EXPR <_61, _65, i_sum_113>;
common/pixel.c:65:1: note: vect_is_simple_use: operand _61
common/pixel.c:65:1: note: def_stmt: _61 = *_60;
common/pixel.c:65:1: note: type of def: 3.
common/pixel.c:65:1: note: vect_is_simple_use: operand _65
common/pixel.c:65:1: note: def_stmt: _65 = *_64;
common/pixel.c:65:1: note: type of def: 3.
common/pixel.c:65:1: note: vect_is_simple_use: operand i_sum_113
common/pixel.c:65:1: note: def_stmt: i_sum_113 = PHI <i_sum_70(3), i_sum_115(7)>
common/pixel.c:65:1: note: type of def: 5.
common/pixel.c:65:1: note: detected reduction: i_sum_70 = _68 + i_sum_113;

common/pixel.c:65:1: note: reduc op not supported by target.
vect_model_reduction_cost: inside_cost = 1, prologue_cost = 1, epilogue_cost = 5 .
common/pixel.c:65:1: note: ==> examining statement: # DEBUG i_sum => i_sum_70
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: x_71 = x_110 + 1;
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: # DEBUG x => x_71
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: # DEBUG x => x_71
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: # DEBUG i_sum => i_sum_70
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: ivtmp_153 = ivtmp_154 - 1;
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: if (ivtmp_153 != 0)
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: vectorization_factor = 16, niters = 4
common/pixel.c:65:1: note: not vectorized: iteration count too small.
common/pixel.c:65:1: note: not vectorized: iteration count smaller than vectorization factor.
common/pixel.c:65:1: note: bad operation or unsupported loop bound.
common/pixel.c:389:1: note: vectorized 0 loops in function.
x264_pixel_sad_x3_4x4 (uint8_t * fenc, uint8_t * pix0, uint8_t * pix1, uint8_t * pix2, int i_stride, int * scores)
{
  int i_sum;
  int x;
  int y;
  int i_sum;
  int x;
  int y;
  int i_sum;
  int x;
  int y;
  sizetype _10;
  uint8_t * _16;
  unsigned char _17;
  int _18;
  uint8_t * _20;
  unsigned char _21;
  int _22;
  int _23;
  int _24;
  sizetype _36;
  uint8_t * _38;
  unsigned char _39;
  int _40;
  uint8_t * _42;
  unsigned char _43;
  int _44;
  int _45;
  int _46;
  sizetype _58;
  uint8_t * _60;
  unsigned char _61;
  int _62;
  uint8_t * _64;
  unsigned char _65;
  int _66;
  int _67;
  int _68;
  unsigned int ivtmp_151;
  unsigned int ivtmp_152;
  unsigned int ivtmp_153;
  unsigned int ivtmp_154;
  unsigned int ivtmp_155;
  unsigned int ivtmp_156;
  unsigned int ivtmp_157;
  unsigned int ivtmp_158;
  unsigned int ivtmp_159;
  unsigned int ivtmp_160;
  unsigned int ivtmp_161;
  unsigned int ivtmp_162;
  sizetype pretmp_169;

  <bb 2>:
  # DEBUG pix1 => fenc_2(D)
  # DEBUG i_stride_pix1 => 16
  # DEBUG pix2 => pix0_3(D)
  # DEBUG i_stride_pix2 => i_stride_4(D)
  # DEBUG i_sum => 0
  # DEBUG y => 0
  # DEBUG y => 0
  # DEBUG i_sum => 0
  # DEBUG pix2 => pix0_3(D)
  # DEBUG pix1 => fenc_2(D)
  pretmp_169 = (sizetype) i_stride_4(D);
  goto <bb 7>;

  <bb 3>:

  <bb 4>:
  # x_110 = PHI <x_71(3), 0(7)>
  # i_sum_113 = PHI <i_sum_70(3), i_sum_115(7)>
  # ivtmp_154 = PHI <ivtmp_153(3), 4(7)>
  # DEBUG x => x_110
  # DEBUG i_sum => i_sum_113
  _58 = (sizetype) x_110;
  _60 = fenc_111 + _58;
  _61 = *_60;
  _62 = (int) _61;
  _64 = pix0_112 + _58;
  _65 = *_64;
  _66 = (int) _65;
  _67 = _62 - _66;
  _68 = ABS_EXPR <_67>;
  i_sum_70 = _68 + i_sum_113;
  # DEBUG i_sum => i_sum_70
  x_71 = x_110 + 1;
  # DEBUG x => x_71
  # DEBUG x => x_71
  # DEBUG i_sum => i_sum_70
  ivtmp_153 = ivtmp_154 - 1;
  if (ivtmp_153 != 0)
    goto <bb 3>;
  else
    goto <bb 5>;

  <bb 5>:
  # i_sum_164 = PHI <i_sum_70(4)>
  fenc_72 = fenc_111 + 16;
  # DEBUG pix1 => fenc_72
  pix0_74 = pix0_112 + pretmp_169;
  # DEBUG pix2 => pix0_74
  y_76 = y_114 + 1;
  # DEBUG y => y_76
  # DEBUG y => y_76
  # DEBUG i_sum => i_sum_164
  # DEBUG pix2 => pix0_74
  # DEBUG pix1 => fenc_72
  ivtmp_151 = ivtmp_152 - 1;
  if (ivtmp_151 != 0)
    goto <bb 6>;
  else
    goto <bb 8>;

  <bb 6>:

  <bb 7>:
  # fenc_111 = PHI <fenc_72(6), fenc_2(D)(2)>
  # pix0_112 = PHI <pix0_74(6), pix0_3(D)(2)>
  # y_114 = PHI <y_76(6), 0(2)>
  # i_sum_115 = PHI <i_sum_164(6), 0(2)>
  # ivtmp_152 = PHI <ivtmp_151(6), 4(2)>
  # DEBUG y => y_114
  # DEBUG i_sum => i_sum_115
  # DEBUG pix2 => pix0_112
  # DEBUG pix1 => fenc_111
  # DEBUG x => 0
  # DEBUG i_sum => i_sum_115
  goto <bb 4>;

  <bb 8>:
  # i_sum_163 = PHI <i_sum_164(5)>
  # DEBUG pix1 => NULL
  # DEBUG i_stride_pix1 => NULL
  # DEBUG pix2 => NULL
  # DEBUG i_stride_pix2 => NULL
  # DEBUG y => NULL
  # DEBUG x => NULL
  # DEBUG i_sum => NULL
  *scores_6(D) = i_sum_163;
  # DEBUG pix1 => fenc_2(D)
  # DEBUG i_stride_pix1 => 16
  # DEBUG pix2 => pix1_9(D)
  # DEBUG i_stride_pix2 => i_stride_4(D)
  # DEBUG y => 0
  # DEBUG i_sum => 0
  # DEBUG pix2 => pix1_9(D)
  # DEBUG pix1 => fenc_2(D)
  goto <bb 13>;

  <bb 9>:

  <bb 10>:
  # x_104 = PHI <x_49(9), 0(13)>
  # i_sum_107 = PHI <i_sum_48(9), i_sum_109(13)>
  # ivtmp_158 = PHI <ivtmp_157(9), 4(13)>
  # DEBUG x => x_104
  # DEBUG i_sum => i_sum_107
  _36 = (sizetype) x_104;
  _38 = fenc_105 + _36;
  _39 = *_38;
  _40 = (int) _39;
  _42 = pix1_106 + _36;
  _43 = *_42;
  _44 = (int) _43;
  _45 = _40 - _44;
  _46 = ABS_EXPR <_45>;
  i_sum_48 = _46 + i_sum_107;
  # DEBUG i_sum => i_sum_48
  x_49 = x_104 + 1;
  # DEBUG x => x_49
  # DEBUG x => x_49
  # DEBUG i_sum => i_sum_48
  ivtmp_157 = ivtmp_158 - 1;
  if (ivtmp_157 != 0)
    goto <bb 9>;
  else
    goto <bb 11>;

  <bb 11>:
  # i_sum_166 = PHI <i_sum_48(10)>
  fenc_50 = fenc_105 + 16;
  # DEBUG pix1 => fenc_50
  pix1_52 = pix1_106 + pretmp_169;
  # DEBUG pix2 => pix1_52
  y_54 = y_108 + 1;
  # DEBUG y => y_54
  # DEBUG y => y_54
  # DEBUG i_sum => i_sum_166
  # DEBUG pix2 => pix1_52
  # DEBUG pix1 => fenc_50
  ivtmp_155 = ivtmp_156 - 1;
  if (ivtmp_155 != 0)
    goto <bb 12>;
  else
    goto <bb 14>;

  <bb 12>:

  <bb 13>:
  # fenc_105 = PHI <fenc_50(12), fenc_2(D)(8)>
  # pix1_106 = PHI <pix1_52(12), pix1_9(D)(8)>
  # y_108 = PHI <y_54(12), 0(8)>
  # i_sum_109 = PHI <i_sum_166(12), 0(8)>
  # ivtmp_156 = PHI <ivtmp_155(12), 4(8)>
  # DEBUG y => y_108
  # DEBUG i_sum => i_sum_109
  # DEBUG pix2 => pix1_106
  # DEBUG pix1 => fenc_105
  # DEBUG x => 0
  # DEBUG i_sum => i_sum_109
  goto <bb 10>;

  <bb 14>:
  # i_sum_165 = PHI <i_sum_166(11)>
  # DEBUG pix1 => NULL
  # DEBUG i_stride_pix1 => NULL
  # DEBUG pix2 => NULL
  # DEBUG i_stride_pix2 => NULL
  # DEBUG y => NULL
  # DEBUG x => NULL
  # DEBUG i_sum => NULL
  MEM[(int *)scores_6(D) + 4B] = i_sum_165;
  # DEBUG pix1 => fenc_2(D)
  # DEBUG i_stride_pix1 => 16
  # DEBUG pix2 => pix2_13(D)
  # DEBUG i_stride_pix2 => i_stride_4(D)
  # DEBUG y => 0
  # DEBUG i_sum => 0
  # DEBUG pix2 => pix2_13(D)
  # DEBUG pix1 => fenc_2(D)
  goto <bb 19>;

  <bb 15>:

  <bb 16>:
  # x_8 = PHI <x_27(15), 0(19)>
  # i_sum_78 = PHI <i_sum_26(15), i_sum_12(19)>
  # ivtmp_162 = PHI <ivtmp_161(15), 4(19)>
  # DEBUG x => x_8
  # DEBUG i_sum => i_sum_78
  _10 = (sizetype) x_8;
  _16 = fenc_34 + _10;
  _17 = *_16;
  _18 = (int) _17;
  _20 = pix2_79 + _10;
  _21 = *_20;
  _22 = (int) _21;
  _23 = _18 - _22;
  _24 = ABS_EXPR <_23>;
  i_sum_26 = _24 + i_sum_78;
  # DEBUG i_sum => i_sum_26
  x_27 = x_8 + 1;
  # DEBUG x => x_27
  # DEBUG x => x_27
  # DEBUG i_sum => i_sum_26
  ivtmp_161 = ivtmp_162 - 1;
  if (ivtmp_161 != 0)
    goto <bb 15>;
  else
    goto <bb 17>;

  <bb 17>:
  # i_sum_168 = PHI <i_sum_26(16)>
  fenc_28 = fenc_34 + 16;
  # DEBUG pix1 => fenc_28
  pix2_30 = pix2_79 + pretmp_169;
  # DEBUG pix2 => pix2_30
  y_32 = y_56 + 1;
  # DEBUG y => y_32
  # DEBUG y => y_32
  # DEBUG i_sum => i_sum_168
  # DEBUG pix2 => pix2_30
  # DEBUG pix1 => fenc_28
  ivtmp_159 = ivtmp_160 - 1;
  if (ivtmp_159 != 0)
    goto <bb 18>;
  else
    goto <bb 20>;

  <bb 18>:

  <bb 19>:
  # fenc_34 = PHI <fenc_28(18), fenc_2(D)(14)>
  # pix2_79 = PHI <pix2_30(18), pix2_13(D)(14)>
  # y_56 = PHI <y_32(18), 0(14)>
  # i_sum_12 = PHI <i_sum_168(18), 0(14)>
  # ivtmp_160 = PHI <ivtmp_159(18), 4(14)>
  # DEBUG y => y_56
  # DEBUG i_sum => i_sum_12
  # DEBUG pix2 => pix2_79
  # DEBUG pix1 => fenc_34
  # DEBUG x => 0
  # DEBUG i_sum => i_sum_12
  goto <bb 16>;

  <bb 20>:
  # i_sum_167 = PHI <i_sum_168(17)>
  # DEBUG pix1 => NULL
  # DEBUG i_stride_pix1 => NULL
  # DEBUG pix2 => NULL
  # DEBUG i_stride_pix2 => NULL
  # DEBUG y => NULL
  # DEBUG x => NULL
  # DEBUG i_sum => NULL
  MEM[(int *)scores_6(D) + 8B] = i_sum_167;
  return;

}



;; Function x264_pixel_sad_x4_4x4 (x264_pixel_sad_x4_4x4, funcdef_no=163, decl_uid=8128, cgraph_uid=163, symbol_order=206)


Analyzing loop at common/pixel.c:65
common/pixel.c:65:1: note: ===== analyze_loop_nest =====
common/pixel.c:65:1: note: === vect_analyze_loop_form ===
common/pixel.c:65:1: note: ===== analyze_loop_nest_1 =====
common/pixel.c:65:1: note: === vect_analyze_loop_form ===
common/pixel.c:65:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 2
  exit condition [3, + , 4294967295] != 0
  bounds on difference of bases: -3 ... -3
  result:
    # of iterations 3, bounded by 3
common/pixel.c:65:1: note: Considering outer-loop vectorization.
common/pixel.c:65:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 1
  exit condition [3, + , 4294967295] != 0
  bounds on difference of bases: -3 ... -3
  result:
    # of iterations 3, bounded by 3
common/pixel.c:65:1: note: === vect_analyze_data_refs ===
Creating dr for *_5
analyze_innermost: success.
	base_address: fenc_16
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_2(D)
	Access function 0: {{0B, +, 16}_1, +, 1}_2
Creating dr for *_23
analyze_innermost: success.
	base_address: pix3_103
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix3_17(D)
	Access function 0: {{0B, +, pretmp_223}_1, +, 1}_2
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:65:1: note: analyze in outer-loop: *fenc_16
common/pixel.c:65:1: note: 	outer base_address: fenc_2(D)
	outer offset from base address: 0
	outer constant offset from base address: 0
	outer step: 16
	outer aligned to: 128
common/pixel.c:65:1: note: got vectype for stmt: _20 = *_5;
vector(16) unsigned char
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:65:1: note: analyze in outer-loop: *pix3_103
common/pixel.c:65:1: note: failed: evolution of base is not affine.
common/pixel.c:65:1: note: bad data references.

Analyzing loop at common/pixel.c:65
common/pixel.c:65:1: note: ===== analyze_loop_nest =====
common/pixel.c:65:1: note: === vect_analyze_loop_form ===
common/pixel.c:65:1: note: === get_loop_niters ===
common/pixel.c:65:1: note: === vect_analyze_data_refs ===
Creating dr for *_5
analyze_innermost: success.
	base_address: fenc_16
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_16
	Access function 0: {0B, +, 1}_2
Creating dr for *_23
analyze_innermost: success.
	base_address: pix3_103
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix3_103
	Access function 0: {0B, +, 1}_2
common/pixel.c:65:1: note: got vectype for stmt: _20 = *_5;
vector(16) unsigned char
common/pixel.c:65:1: note: got vectype for stmt: _24 = *_23;
vector(16) unsigned char
common/pixel.c:65:1: note: === vect_analyze_scalar_cycles ===
common/pixel.c:65:1: note: Analyze phi: x_8 = PHI <x_30(21), 0(25)>

common/pixel.c:65:1: note: Access function of PHI: {0, +, 1}_2
common/pixel.c:65:1: note: step: 1,  init: 0
common/pixel.c:65:1: note: Detected induction.
common/pixel.c:65:1: note: Analyze phi: i_sum_59 = PHI <i_sum_29(21), i_sum_104(25)>

common/pixel.c:65:1: note: Access function of PHI: {i_sum_104, +, _27}_2
common/pixel.c:65:1: note: step: _27,  init: i_sum_104
common/pixel.c:65:1: note: step unknown.
common/pixel.c:65:1: note: Analyze phi: ivtmp_214 = PHI <ivtmp_213(21), 4(25)>

common/pixel.c:65:1: note: Access function of PHI: {4, +, 4294967295}_2
common/pixel.c:65:1: note: step: 4294967295,  init: 4
common/pixel.c:65:1: note: Detected induction.
common/pixel.c:65:1: note: Analyze phi: i_sum_59 = PHI <i_sum_29(21), i_sum_104(25)>

common/pixel.c:65:1: note: detected reduction: i_sum_29 = _27 + i_sum_59;

common/pixel.c:65:1: note: Detected reduction.
common/pixel.c:65:1: note: === vect_pattern_recog ===
common/pixel.c:65:1: note: vect_is_simple_use: operand _27
common/pixel.c:65:1: note: def_stmt: _27 = ABS_EXPR <_26>;
common/pixel.c:65:1: note: type of def: 3.
common/pixel.c:65:1: note: vect_is_simple_use: operand _27
common/pixel.c:65:1: note: def_stmt: _27 = ABS_EXPR <_26>;
common/pixel.c:65:1: note: type of def: 3.
common/pixel.c:65:1: note: vect_is_simple_use: operand _27
common/pixel.c:65:1: note: def_stmt: _27 = ABS_EXPR <_26>;
common/pixel.c:65:1: note: type of def: 3.
common/pixel.c:65:1: note: vect_is_simple_use: operand _21
common/pixel.c:65:1: note: def_stmt: _21 = (int) _20;
common/pixel.c:65:1: note: type of def: 3.
common/pixel.c:65:1: note: vect_is_simple_use: operand _20
common/pixel.c:65:1: note: def_stmt: _20 = *_5;
common/pixel.c:65:1: note: type of def: 3.
common/pixel.c:65:1: note: vect_is_simple_use: operand _25
common/pixel.c:65:1: note: def_stmt: _25 = (int) _24;
common/pixel.c:65:1: note: type of def: 3.
common/pixel.c:65:1: note: vect_is_simple_use: operand _24
common/pixel.c:65:1: note: def_stmt: _24 = *_23;
common/pixel.c:65:1: note: type of def: 3.
common/pixel.c:65:1: note: vect_recog_sad_pattern: detected: patt_198 = SAD_EXPR <_20, _24, i_sum_59>;

common/pixel.c:65:1: note: pattern recognized: patt_198 = SAD_EXPR <_20, _24, i_sum_59>;
common/pixel.c:65:1: note: === vect_analyze_data_ref_accesses ===
common/pixel.c:65:1: note: === vect_mark_stmts_to_be_vectorized ===
common/pixel.c:65:1: note: init: phi relevant? x_8 = PHI <x_30(21), 0(25)>
common/pixel.c:65:1: note: init: phi relevant? i_sum_59 = PHI <i_sum_29(21), i_sum_104(25)>
common/pixel.c:65:1: note: init: phi relevant? ivtmp_214 = PHI <ivtmp_213(21), 4(25)>
common/pixel.c:65:1: note: init: stmt relevant? # DEBUG x => x_8
common/pixel.c:65:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_59
common/pixel.c:65:1: note: init: stmt relevant? _14 = (sizetype) x_8;
common/pixel.c:65:1: note: init: stmt relevant? _5 = fenc_16 + _14;
common/pixel.c:65:1: note: init: stmt relevant? _20 = *_5;
common/pixel.c:65:1: note: init: stmt relevant? _21 = (int) _20;
common/pixel.c:65:1: note: init: stmt relevant? _23 = pix3_103 + _14;
common/pixel.c:65:1: note: init: stmt relevant? _24 = *_23;
common/pixel.c:65:1: note: init: stmt relevant? _25 = (int) _24;
common/pixel.c:65:1: note: init: stmt relevant? _26 = _21 - _25;
common/pixel.c:65:1: note: init: stmt relevant? _27 = ABS_EXPR <_26>;
common/pixel.c:65:1: note: init: stmt relevant? i_sum_29 = _27 + i_sum_59;
common/pixel.c:65:1: note: vec_stmt_relevant_p: used out of loop.
common/pixel.c:65:1: note: mark relevant 0, live 1.
common/pixel.c:65:1: note: last stmt in pattern. don't mark relevant/live.
common/pixel.c:65:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_29
common/pixel.c:65:1: note: init: stmt relevant? x_30 = x_8 + 1;
common/pixel.c:65:1: note: init: stmt relevant? # DEBUG x => x_30
common/pixel.c:65:1: note: init: stmt relevant? # DEBUG x => x_30
common/pixel.c:65:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_29
common/pixel.c:65:1: note: init: stmt relevant? ivtmp_213 = ivtmp_214 - 1;
common/pixel.c:65:1: note: init: stmt relevant? if (ivtmp_213 != 0)
common/pixel.c:65:1: note: worklist: examine stmt: patt_198 = SAD_EXPR <_20, _24, i_sum_59>;
common/pixel.c:65:1: note: vect_is_simple_use: operand _20
common/pixel.c:65:1: note: def_stmt: _20 = *_5;
common/pixel.c:65:1: note: type of def: 3.
common/pixel.c:65:1: note: mark relevant 3, live 0.
common/pixel.c:65:1: note: vect_is_simple_use: operand _24
common/pixel.c:65:1: note: def_stmt: _24 = *_23;
common/pixel.c:65:1: note: type of def: 3.
common/pixel.c:65:1: note: mark relevant 3, live 0.
common/pixel.c:65:1: note: vect_is_simple_use: operand i_sum_59
common/pixel.c:65:1: note: def_stmt: i_sum_59 = PHI <i_sum_29(21), i_sum_104(25)>
common/pixel.c:65:1: note: type of def: 5.
common/pixel.c:65:1: note: mark relevant 3, live 0.
common/pixel.c:65:1: note: worklist: examine stmt: i_sum_59 = PHI <i_sum_29(21), i_sum_104(25)>
common/pixel.c:65:1: note: vect_is_simple_use: operand i_sum_29
common/pixel.c:65:1: note: def_stmt: i_sum_29 = _27 + i_sum_59;
common/pixel.c:65:1: note: type of def: 5.
common/pixel.c:65:1: note: reduc-stmt defining reduc-phi in the same nest.
common/pixel.c:65:1: note: vect_is_simple_use: operand i_sum_104
common/pixel.c:65:1: note: def_stmt: i_sum_104 = PHI <i_sum_222(24), 0(20)>
common/pixel.c:65:1: note: type of def: 2.
common/pixel.c:65:1: note: def_stmt is out of loop.
common/pixel.c:65:1: note: worklist: examine stmt: _24 = *_23;
common/pixel.c:65:1: note: worklist: examine stmt: _20 = *_5;
common/pixel.c:65:1: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _20 = *_5;
  stmt_b: _24 = *_23;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _20 = *_5;
  stmt_b: _20 = *_5;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_2)
  (chrec_b = {0B, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _24 = *_23;
  stmt_b: _24 = *_23;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_2)
  (chrec_b = {0B, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/pixel.c:65:1: note: === vect_determine_vectorization_factor ===
common/pixel.c:65:1: note: ==> examining phi: x_8 = PHI <x_30(21), 0(25)>

common/pixel.c:65:1: note: ==> examining phi: i_sum_59 = PHI <i_sum_29(21), i_sum_104(25)>

common/pixel.c:65:1: note: get vectype for scalar type:  int
common/pixel.c:65:1: note: vectype: vector(4) int
common/pixel.c:65:1: note: nunits = 4
common/pixel.c:65:1: note: ==> examining phi: ivtmp_214 = PHI <ivtmp_213(21), 4(25)>

common/pixel.c:65:1: note: ==> examining statement: # DEBUG x => x_8

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: # DEBUG i_sum => i_sum_59

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: _14 = (sizetype) x_8;

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: _5 = fenc_16 + _14;

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: _20 = *_5;

common/pixel.c:65:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:65:1: note: vectype: vector(16) unsigned char
common/pixel.c:65:1: note: nunits = 16
common/pixel.c:65:1: note: ==> examining statement: _21 = (int) _20;

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: _23 = pix3_103 + _14;

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: _24 = *_23;

common/pixel.c:65:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:65:1: note: vectype: vector(16) unsigned char
common/pixel.c:65:1: note: nunits = 16
common/pixel.c:65:1: note: ==> examining statement: _25 = (int) _24;

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: _26 = _21 - _25;

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: _27 = ABS_EXPR <_26>;

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: i_sum_29 = _27 + i_sum_59;

common/pixel.c:65:1: note: ==> examining pattern statement: patt_198 = SAD_EXPR <_20, _24, i_sum_59>;

common/pixel.c:65:1: note: get vectype for scalar type:  int
common/pixel.c:65:1: note: vectype: vector(4) int
common/pixel.c:65:1: note: nunits = 4
common/pixel.c:65:1: note: ==> examining statement: # DEBUG i_sum => i_sum_29

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: x_30 = x_8 + 1;

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: # DEBUG x => x_30

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: # DEBUG x => x_30

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: # DEBUG i_sum => i_sum_29

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: ivtmp_213 = ivtmp_214 - 1;

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: if (ivtmp_213 != 0)

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: vectorization factor = 16
common/pixel.c:65:1: note: === vect_analyze_data_refs_alignment ===
common/pixel.c:65:1: note: vect_compute_data_ref_alignment:
common/pixel.c:65:1: note: can't force alignment of ref: *_5
common/pixel.c:65:1: note: vect_compute_data_ref_alignment:
common/pixel.c:65:1: note: can't force alignment of ref: *_23
common/pixel.c:65:1: note: === vect_prune_runtime_alias_test_list ===
common/pixel.c:65:1: note: === vect_enhance_data_refs_alignment ===
common/pixel.c:65:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:65:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:65:1: note: vect_can_advance_ivs_p:
common/pixel.c:65:1: note: Analyze phi: x_8 = PHI <x_30(21), 0(25)>

common/pixel.c:65:1: note: Analyze phi: i_sum_59 = PHI <i_sum_29(21), i_sum_104(25)>

common/pixel.c:65:1: note: reduc phi. skip.
common/pixel.c:65:1: note: Analyze phi: ivtmp_214 = PHI <ivtmp_213(21), 4(25)>

common/pixel.c:65:1: note: Vectorizing an unaligned access.
common/pixel.c:65:1: note: Vectorizing an unaligned access.
common/pixel.c:65:1: note: === vect_analyze_slp ===
common/pixel.c:65:1: note: === vect_make_slp_decision ===
common/pixel.c:65:1: note: === vect_detect_hybrid_slp ===
common/pixel.c:65:1: note: === vect_analyze_loop_operations ===
common/pixel.c:65:1: note: examining phi: x_8 = PHI <x_30(21), 0(25)>

common/pixel.c:65:1: note: examining phi: i_sum_59 = PHI <i_sum_29(21), i_sum_104(25)>

common/pixel.c:65:1: note: examining phi: ivtmp_214 = PHI <ivtmp_213(21), 4(25)>

common/pixel.c:65:1: note: ==> examining statement: # DEBUG x => x_8
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: # DEBUG i_sum => i_sum_59
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: _14 = (sizetype) x_8;
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: _5 = fenc_16 + _14;
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: _20 = *_5;
common/pixel.c:65:1: note: vect_is_simple_use: operand *_5
common/pixel.c:65:1: note: not ssa-name.
common/pixel.c:65:1: note: use not simple.
common/pixel.c:65:1: note: vect_is_simple_use: operand *_5
common/pixel.c:65:1: note: not ssa-name.
common/pixel.c:65:1: note: use not simple.
common/pixel.c:65:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:65:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:65:1: note: ==> examining statement: _21 = (int) _20;
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: _23 = pix3_103 + _14;
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: _24 = *_23;
common/pixel.c:65:1: note: vect_is_simple_use: operand *_23
common/pixel.c:65:1: note: not ssa-name.
common/pixel.c:65:1: note: use not simple.
common/pixel.c:65:1: note: vect_is_simple_use: operand *_23
common/pixel.c:65:1: note: not ssa-name.
common/pixel.c:65:1: note: use not simple.
common/pixel.c:65:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:65:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:65:1: note: ==> examining statement: _25 = (int) _24;
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: _26 = _21 - _25;
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: _27 = ABS_EXPR <_26>;
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: i_sum_29 = _27 + i_sum_59;
common/pixel.c:65:1: note: ==> examining pattern statement: patt_198 = SAD_EXPR <_20, _24, i_sum_59>;
common/pixel.c:65:1: note: vect_is_simple_use: operand _20
common/pixel.c:65:1: note: def_stmt: _20 = *_5;
common/pixel.c:65:1: note: type of def: 3.
common/pixel.c:65:1: note: vect_is_simple_use: operand _24
common/pixel.c:65:1: note: def_stmt: _24 = *_23;
common/pixel.c:65:1: note: type of def: 3.
common/pixel.c:65:1: note: vect_is_simple_use: operand i_sum_59
common/pixel.c:65:1: note: def_stmt: i_sum_59 = PHI <i_sum_29(21), i_sum_104(25)>
common/pixel.c:65:1: note: type of def: 5.
common/pixel.c:65:1: note: detected reduction: i_sum_29 = _27 + i_sum_59;

common/pixel.c:65:1: note: reduc op not supported by target.
vect_model_reduction_cost: inside_cost = 1, prologue_cost = 1, epilogue_cost = 5 .
common/pixel.c:65:1: note: ==> examining statement: # DEBUG i_sum => i_sum_29
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: x_30 = x_8 + 1;
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: # DEBUG x => x_30
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: # DEBUG x => x_30
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: # DEBUG i_sum => i_sum_29
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: ivtmp_213 = ivtmp_214 - 1;
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: if (ivtmp_213 != 0)
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: vectorization_factor = 16, niters = 4
common/pixel.c:65:1: note: not vectorized: iteration count too small.
common/pixel.c:65:1: note: not vectorized: iteration count smaller than vectorization factor.
common/pixel.c:65:1: note: bad operation or unsupported loop bound.

Analyzing loop at common/pixel.c:65
common/pixel.c:65:1: note: ===== analyze_loop_nest =====
common/pixel.c:65:1: note: === vect_analyze_loop_form ===
common/pixel.c:65:1: note: ===== analyze_loop_nest_1 =====
common/pixel.c:65:1: note: === vect_analyze_loop_form ===
common/pixel.c:65:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 4
  exit condition [3, + , 4294967295] != 0
  bounds on difference of bases: -3 ... -3
  result:
    # of iterations 3, bounded by 3
common/pixel.c:65:1: note: Considering outer-loop vectorization.
common/pixel.c:65:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 3
  exit condition [3, + , 4294967295] != 0
  bounds on difference of bases: -3 ... -3
  result:
    # of iterations 3, bounded by 3
common/pixel.c:65:1: note: === vect_analyze_data_refs ===
Creating dr for *_41
analyze_innermost: success.
	base_address: fenc_37
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_2(D)
	Access function 0: {{0B, +, 16}_3, +, 1}_4
Creating dr for *_45
analyze_innermost: success.
	base_address: pix2_137
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix2_13(D)
	Access function 0: {{0B, +, pretmp_223}_3, +, 1}_4
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:65:1: note: analyze in outer-loop: *fenc_37
common/pixel.c:65:1: note: 	outer base_address: fenc_2(D)
	outer offset from base address: 0
	outer constant offset from base address: 0
	outer step: 16
	outer aligned to: 128
common/pixel.c:65:1: note: got vectype for stmt: _42 = *_41;
vector(16) unsigned char
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:65:1: note: analyze in outer-loop: *pix2_137
common/pixel.c:65:1: note: failed: evolution of base is not affine.
common/pixel.c:65:1: note: bad data references.

Analyzing loop at common/pixel.c:65
common/pixel.c:65:1: note: ===== analyze_loop_nest =====
common/pixel.c:65:1: note: === vect_analyze_loop_form ===
common/pixel.c:65:1: note: === get_loop_niters ===
common/pixel.c:65:1: note: === vect_analyze_data_refs ===
Creating dr for *_41
analyze_innermost: success.
	base_address: fenc_37
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_37
	Access function 0: {0B, +, 1}_4
Creating dr for *_45
analyze_innermost: success.
	base_address: pix2_137
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix2_137
	Access function 0: {0B, +, 1}_4
common/pixel.c:65:1: note: got vectype for stmt: _42 = *_41;
vector(16) unsigned char
common/pixel.c:65:1: note: got vectype for stmt: _46 = *_45;
vector(16) unsigned char
common/pixel.c:65:1: note: === vect_analyze_scalar_cycles ===
common/pixel.c:65:1: note: Analyze phi: x_81 = PHI <x_52(15), 0(19)>

common/pixel.c:65:1: note: Access function of PHI: {0, +, 1}_4
common/pixel.c:65:1: note: step: 1,  init: 0
common/pixel.c:65:1: note: Detected induction.
common/pixel.c:65:1: note: Analyze phi: i_sum_138 = PHI <i_sum_51(15), i_sum_140(19)>

common/pixel.c:65:1: note: Access function of PHI: {i_sum_140, +, _49}_4
common/pixel.c:65:1: note: step: _49,  init: i_sum_140
common/pixel.c:65:1: note: step unknown.
common/pixel.c:65:1: note: Analyze phi: ivtmp_210 = PHI <ivtmp_209(15), 4(19)>

common/pixel.c:65:1: note: Access function of PHI: {4, +, 4294967295}_4
common/pixel.c:65:1: note: step: 4294967295,  init: 4
common/pixel.c:65:1: note: Detected induction.
common/pixel.c:65:1: note: Analyze phi: i_sum_138 = PHI <i_sum_51(15), i_sum_140(19)>

common/pixel.c:65:1: note: detected reduction: i_sum_51 = _49 + i_sum_138;

common/pixel.c:65:1: note: Detected reduction.
common/pixel.c:65:1: note: === vect_pattern_recog ===
common/pixel.c:65:1: note: vect_is_simple_use: operand _49
common/pixel.c:65:1: note: def_stmt: _49 = ABS_EXPR <_48>;
common/pixel.c:65:1: note: type of def: 3.
common/pixel.c:65:1: note: vect_is_simple_use: operand _49
common/pixel.c:65:1: note: def_stmt: _49 = ABS_EXPR <_48>;
common/pixel.c:65:1: note: type of def: 3.
common/pixel.c:65:1: note: vect_is_simple_use: operand _49
common/pixel.c:65:1: note: def_stmt: _49 = ABS_EXPR <_48>;
common/pixel.c:65:1: note: type of def: 3.
common/pixel.c:65:1: note: vect_is_simple_use: operand _43
common/pixel.c:65:1: note: def_stmt: _43 = (int) _42;
common/pixel.c:65:1: note: type of def: 3.
common/pixel.c:65:1: note: vect_is_simple_use: operand _42
common/pixel.c:65:1: note: def_stmt: _42 = *_41;
common/pixel.c:65:1: note: type of def: 3.
common/pixel.c:65:1: note: vect_is_simple_use: operand _47
common/pixel.c:65:1: note: def_stmt: _47 = (int) _46;
common/pixel.c:65:1: note: type of def: 3.
common/pixel.c:65:1: note: vect_is_simple_use: operand _46
common/pixel.c:65:1: note: def_stmt: _46 = *_45;
common/pixel.c:65:1: note: type of def: 3.
common/pixel.c:65:1: note: vect_recog_sad_pattern: detected: patt_198 = SAD_EXPR <_42, _46, i_sum_138>;

common/pixel.c:65:1: note: pattern recognized: patt_198 = SAD_EXPR <_42, _46, i_sum_138>;
common/pixel.c:65:1: note: === vect_analyze_data_ref_accesses ===
common/pixel.c:65:1: note: === vect_mark_stmts_to_be_vectorized ===
common/pixel.c:65:1: note: init: phi relevant? x_81 = PHI <x_52(15), 0(19)>
common/pixel.c:65:1: note: init: phi relevant? i_sum_138 = PHI <i_sum_51(15), i_sum_140(19)>
common/pixel.c:65:1: note: init: phi relevant? ivtmp_210 = PHI <ivtmp_209(15), 4(19)>
common/pixel.c:65:1: note: init: stmt relevant? # DEBUG x => x_81
common/pixel.c:65:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_138
common/pixel.c:65:1: note: init: stmt relevant? _39 = (sizetype) x_81;
common/pixel.c:65:1: note: init: stmt relevant? _41 = fenc_37 + _39;
common/pixel.c:65:1: note: init: stmt relevant? _42 = *_41;
common/pixel.c:65:1: note: init: stmt relevant? _43 = (int) _42;
common/pixel.c:65:1: note: init: stmt relevant? _45 = pix2_137 + _39;
common/pixel.c:65:1: note: init: stmt relevant? _46 = *_45;
common/pixel.c:65:1: note: init: stmt relevant? _47 = (int) _46;
common/pixel.c:65:1: note: init: stmt relevant? _48 = _43 - _47;
common/pixel.c:65:1: note: init: stmt relevant? _49 = ABS_EXPR <_48>;
common/pixel.c:65:1: note: init: stmt relevant? i_sum_51 = _49 + i_sum_138;
common/pixel.c:65:1: note: vec_stmt_relevant_p: used out of loop.
common/pixel.c:65:1: note: mark relevant 0, live 1.
common/pixel.c:65:1: note: last stmt in pattern. don't mark relevant/live.
common/pixel.c:65:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_51
common/pixel.c:65:1: note: init: stmt relevant? x_52 = x_81 + 1;
common/pixel.c:65:1: note: init: stmt relevant? # DEBUG x => x_52
common/pixel.c:65:1: note: init: stmt relevant? # DEBUG x => x_52
common/pixel.c:65:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_51
common/pixel.c:65:1: note: init: stmt relevant? ivtmp_209 = ivtmp_210 - 1;
common/pixel.c:65:1: note: init: stmt relevant? if (ivtmp_209 != 0)
common/pixel.c:65:1: note: worklist: examine stmt: patt_198 = SAD_EXPR <_42, _46, i_sum_138>;
common/pixel.c:65:1: note: vect_is_simple_use: operand _42
common/pixel.c:65:1: note: def_stmt: _42 = *_41;
common/pixel.c:65:1: note: type of def: 3.
common/pixel.c:65:1: note: mark relevant 3, live 0.
common/pixel.c:65:1: note: vect_is_simple_use: operand _46
common/pixel.c:65:1: note: def_stmt: _46 = *_45;
common/pixel.c:65:1: note: type of def: 3.
common/pixel.c:65:1: note: mark relevant 3, live 0.
common/pixel.c:65:1: note: vect_is_simple_use: operand i_sum_138
common/pixel.c:65:1: note: def_stmt: i_sum_138 = PHI <i_sum_51(15), i_sum_140(19)>
common/pixel.c:65:1: note: type of def: 5.
common/pixel.c:65:1: note: mark relevant 3, live 0.
common/pixel.c:65:1: note: worklist: examine stmt: i_sum_138 = PHI <i_sum_51(15), i_sum_140(19)>
common/pixel.c:65:1: note: vect_is_simple_use: operand i_sum_51
common/pixel.c:65:1: note: def_stmt: i_sum_51 = _49 + i_sum_138;
common/pixel.c:65:1: note: type of def: 5.
common/pixel.c:65:1: note: reduc-stmt defining reduc-phi in the same nest.
common/pixel.c:65:1: note: vect_is_simple_use: operand i_sum_140
common/pixel.c:65:1: note: def_stmt: i_sum_140 = PHI <i_sum_220(18), 0(14)>
common/pixel.c:65:1: note: type of def: 2.
common/pixel.c:65:1: note: def_stmt is out of loop.
common/pixel.c:65:1: note: worklist: examine stmt: _46 = *_45;
common/pixel.c:65:1: note: worklist: examine stmt: _42 = *_41;
common/pixel.c:65:1: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _42 = *_41;
  stmt_b: _46 = *_45;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _42 = *_41;
  stmt_b: _42 = *_41;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_4)
  (chrec_b = {0B, +, 1}_4)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _46 = *_45;
  stmt_b: _46 = *_45;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_4)
  (chrec_b = {0B, +, 1}_4)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/pixel.c:65:1: note: === vect_determine_vectorization_factor ===
common/pixel.c:65:1: note: ==> examining phi: x_81 = PHI <x_52(15), 0(19)>

common/pixel.c:65:1: note: ==> examining phi: i_sum_138 = PHI <i_sum_51(15), i_sum_140(19)>

common/pixel.c:65:1: note: get vectype for scalar type:  int
common/pixel.c:65:1: note: vectype: vector(4) int
common/pixel.c:65:1: note: nunits = 4
common/pixel.c:65:1: note: ==> examining phi: ivtmp_210 = PHI <ivtmp_209(15), 4(19)>

common/pixel.c:65:1: note: ==> examining statement: # DEBUG x => x_81

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: # DEBUG i_sum => i_sum_138

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: _39 = (sizetype) x_81;

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: _41 = fenc_37 + _39;

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: _42 = *_41;

common/pixel.c:65:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:65:1: note: vectype: vector(16) unsigned char
common/pixel.c:65:1: note: nunits = 16
common/pixel.c:65:1: note: ==> examining statement: _43 = (int) _42;

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: _45 = pix2_137 + _39;

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: _46 = *_45;

common/pixel.c:65:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:65:1: note: vectype: vector(16) unsigned char
common/pixel.c:65:1: note: nunits = 16
common/pixel.c:65:1: note: ==> examining statement: _47 = (int) _46;

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: _48 = _43 - _47;

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: _49 = ABS_EXPR <_48>;

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: i_sum_51 = _49 + i_sum_138;

common/pixel.c:65:1: note: ==> examining pattern statement: patt_198 = SAD_EXPR <_42, _46, i_sum_138>;

common/pixel.c:65:1: note: get vectype for scalar type:  int
common/pixel.c:65:1: note: vectype: vector(4) int
common/pixel.c:65:1: note: nunits = 4
common/pixel.c:65:1: note: ==> examining statement: # DEBUG i_sum => i_sum_51

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: x_52 = x_81 + 1;

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: # DEBUG x => x_52

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: # DEBUG x => x_52

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: # DEBUG i_sum => i_sum_51

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: ivtmp_209 = ivtmp_210 - 1;

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: if (ivtmp_209 != 0)

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: vectorization factor = 16
common/pixel.c:65:1: note: === vect_analyze_data_refs_alignment ===
common/pixel.c:65:1: note: vect_compute_data_ref_alignment:
common/pixel.c:65:1: note: can't force alignment of ref: *_41
common/pixel.c:65:1: note: vect_compute_data_ref_alignment:
common/pixel.c:65:1: note: can't force alignment of ref: *_45
common/pixel.c:65:1: note: === vect_prune_runtime_alias_test_list ===
common/pixel.c:65:1: note: === vect_enhance_data_refs_alignment ===
common/pixel.c:65:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:65:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:65:1: note: vect_can_advance_ivs_p:
common/pixel.c:65:1: note: Analyze phi: x_81 = PHI <x_52(15), 0(19)>

common/pixel.c:65:1: note: Analyze phi: i_sum_138 = PHI <i_sum_51(15), i_sum_140(19)>

common/pixel.c:65:1: note: reduc phi. skip.
common/pixel.c:65:1: note: Analyze phi: ivtmp_210 = PHI <ivtmp_209(15), 4(19)>

common/pixel.c:65:1: note: Vectorizing an unaligned access.
common/pixel.c:65:1: note: Vectorizing an unaligned access.
common/pixel.c:65:1: note: === vect_analyze_slp ===
common/pixel.c:65:1: note: === vect_make_slp_decision ===
common/pixel.c:65:1: note: === vect_detect_hybrid_slp ===
common/pixel.c:65:1: note: === vect_analyze_loop_operations ===
common/pixel.c:65:1: note: examining phi: x_81 = PHI <x_52(15), 0(19)>

common/pixel.c:65:1: note: examining phi: i_sum_138 = PHI <i_sum_51(15), i_sum_140(19)>

common/pixel.c:65:1: note: examining phi: ivtmp_210 = PHI <ivtmp_209(15), 4(19)>

common/pixel.c:65:1: note: ==> examining statement: # DEBUG x => x_81
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: # DEBUG i_sum => i_sum_138
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: _39 = (sizetype) x_81;
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: _41 = fenc_37 + _39;
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: _42 = *_41;
common/pixel.c:65:1: note: vect_is_simple_use: operand *_41
common/pixel.c:65:1: note: not ssa-name.
common/pixel.c:65:1: note: use not simple.
common/pixel.c:65:1: note: vect_is_simple_use: operand *_41
common/pixel.c:65:1: note: not ssa-name.
common/pixel.c:65:1: note: use not simple.
common/pixel.c:65:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:65:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:65:1: note: ==> examining statement: _43 = (int) _42;
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: _45 = pix2_137 + _39;
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: _46 = *_45;
common/pixel.c:65:1: note: vect_is_simple_use: operand *_45
common/pixel.c:65:1: note: not ssa-name.
common/pixel.c:65:1: note: use not simple.
common/pixel.c:65:1: note: vect_is_simple_use: operand *_45
common/pixel.c:65:1: note: not ssa-name.
common/pixel.c:65:1: note: use not simple.
common/pixel.c:65:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:65:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:65:1: note: ==> examining statement: _47 = (int) _46;
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: _48 = _43 - _47;
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: _49 = ABS_EXPR <_48>;
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: i_sum_51 = _49 + i_sum_138;
common/pixel.c:65:1: note: ==> examining pattern statement: patt_198 = SAD_EXPR <_42, _46, i_sum_138>;
common/pixel.c:65:1: note: vect_is_simple_use: operand _42
common/pixel.c:65:1: note: def_stmt: _42 = *_41;
common/pixel.c:65:1: note: type of def: 3.
common/pixel.c:65:1: note: vect_is_simple_use: operand _46
common/pixel.c:65:1: note: def_stmt: _46 = *_45;
common/pixel.c:65:1: note: type of def: 3.
common/pixel.c:65:1: note: vect_is_simple_use: operand i_sum_138
common/pixel.c:65:1: note: def_stmt: i_sum_138 = PHI <i_sum_51(15), i_sum_140(19)>
common/pixel.c:65:1: note: type of def: 5.
common/pixel.c:65:1: note: detected reduction: i_sum_51 = _49 + i_sum_138;

common/pixel.c:65:1: note: reduc op not supported by target.
vect_model_reduction_cost: inside_cost = 1, prologue_cost = 1, epilogue_cost = 5 .
common/pixel.c:65:1: note: ==> examining statement: # DEBUG i_sum => i_sum_51
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: x_52 = x_81 + 1;
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: # DEBUG x => x_52
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: # DEBUG x => x_52
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: # DEBUG i_sum => i_sum_51
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: ivtmp_209 = ivtmp_210 - 1;
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: if (ivtmp_209 != 0)
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: vectorization_factor = 16, niters = 4
common/pixel.c:65:1: note: not vectorized: iteration count too small.
common/pixel.c:65:1: note: not vectorized: iteration count smaller than vectorization factor.
common/pixel.c:65:1: note: bad operation or unsupported loop bound.

Analyzing loop at common/pixel.c:65
common/pixel.c:65:1: note: ===== analyze_loop_nest =====
common/pixel.c:65:1: note: === vect_analyze_loop_form ===
common/pixel.c:65:1: note: ===== analyze_loop_nest_1 =====
common/pixel.c:65:1: note: === vect_analyze_loop_form ===
common/pixel.c:65:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 6
  exit condition [3, + , 4294967295] != 0
  bounds on difference of bases: -3 ... -3
  result:
    # of iterations 3, bounded by 3
common/pixel.c:65:1: note: Considering outer-loop vectorization.
common/pixel.c:65:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 5
  exit condition [3, + , 4294967295] != 0
  bounds on difference of bases: -3 ... -3
  result:
    # of iterations 3, bounded by 3
common/pixel.c:65:1: note: === vect_analyze_data_refs ===
Creating dr for *_63
analyze_innermost: success.
	base_address: fenc_142
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_2(D)
	Access function 0: {{0B, +, 16}_5, +, 1}_6
Creating dr for *_67
analyze_innermost: success.
	base_address: pix1_143
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix1_9(D)
	Access function 0: {{0B, +, pretmp_223}_5, +, 1}_6
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:65:1: note: analyze in outer-loop: *fenc_142
common/pixel.c:65:1: note: 	outer base_address: fenc_2(D)
	outer offset from base address: 0
	outer constant offset from base address: 0
	outer step: 16
	outer aligned to: 128
common/pixel.c:65:1: note: got vectype for stmt: _64 = *_63;
vector(16) unsigned char
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:65:1: note: analyze in outer-loop: *pix1_143
common/pixel.c:65:1: note: failed: evolution of base is not affine.
common/pixel.c:65:1: note: bad data references.

Analyzing loop at common/pixel.c:65
common/pixel.c:65:1: note: ===== analyze_loop_nest =====
common/pixel.c:65:1: note: === vect_analyze_loop_form ===
common/pixel.c:65:1: note: === get_loop_niters ===
common/pixel.c:65:1: note: === vect_analyze_data_refs ===
Creating dr for *_63
analyze_innermost: success.
	base_address: fenc_142
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_142
	Access function 0: {0B, +, 1}_6
Creating dr for *_67
analyze_innermost: success.
	base_address: pix1_143
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix1_143
	Access function 0: {0B, +, 1}_6
common/pixel.c:65:1: note: got vectype for stmt: _64 = *_63;
vector(16) unsigned char
common/pixel.c:65:1: note: got vectype for stmt: _68 = *_67;
vector(16) unsigned char
common/pixel.c:65:1: note: === vect_analyze_scalar_cycles ===
common/pixel.c:65:1: note: Analyze phi: x_141 = PHI <x_74(9), 0(13)>

common/pixel.c:65:1: note: Access function of PHI: {0, +, 1}_6
common/pixel.c:65:1: note: step: 1,  init: 0
common/pixel.c:65:1: note: Detected induction.
common/pixel.c:65:1: note: Analyze phi: i_sum_144 = PHI <i_sum_73(9), i_sum_146(13)>

common/pixel.c:65:1: note: Access function of PHI: {i_sum_146, +, _71}_6
common/pixel.c:65:1: note: step: _71,  init: i_sum_146
common/pixel.c:65:1: note: step unknown.
common/pixel.c:65:1: note: Analyze phi: ivtmp_206 = PHI <ivtmp_205(9), 4(13)>

common/pixel.c:65:1: note: Access function of PHI: {4, +, 4294967295}_6
common/pixel.c:65:1: note: step: 4294967295,  init: 4
common/pixel.c:65:1: note: Detected induction.
common/pixel.c:65:1: note: Analyze phi: i_sum_144 = PHI <i_sum_73(9), i_sum_146(13)>

common/pixel.c:65:1: note: detected reduction: i_sum_73 = _71 + i_sum_144;

common/pixel.c:65:1: note: Detected reduction.
common/pixel.c:65:1: note: === vect_pattern_recog ===
common/pixel.c:65:1: note: vect_is_simple_use: operand _71
common/pixel.c:65:1: note: def_stmt: _71 = ABS_EXPR <_70>;
common/pixel.c:65:1: note: type of def: 3.
common/pixel.c:65:1: note: vect_is_simple_use: operand _71
common/pixel.c:65:1: note: def_stmt: _71 = ABS_EXPR <_70>;
common/pixel.c:65:1: note: type of def: 3.
common/pixel.c:65:1: note: vect_is_simple_use: operand _71
common/pixel.c:65:1: note: def_stmt: _71 = ABS_EXPR <_70>;
common/pixel.c:65:1: note: type of def: 3.
common/pixel.c:65:1: note: vect_is_simple_use: operand _65
common/pixel.c:65:1: note: def_stmt: _65 = (int) _64;
common/pixel.c:65:1: note: type of def: 3.
common/pixel.c:65:1: note: vect_is_simple_use: operand _64
common/pixel.c:65:1: note: def_stmt: _64 = *_63;
common/pixel.c:65:1: note: type of def: 3.
common/pixel.c:65:1: note: vect_is_simple_use: operand _69
common/pixel.c:65:1: note: def_stmt: _69 = (int) _68;
common/pixel.c:65:1: note: type of def: 3.
common/pixel.c:65:1: note: vect_is_simple_use: operand _68
common/pixel.c:65:1: note: def_stmt: _68 = *_67;
common/pixel.c:65:1: note: type of def: 3.
common/pixel.c:65:1: note: vect_recog_sad_pattern: detected: patt_198 = SAD_EXPR <_64, _68, i_sum_144>;

common/pixel.c:65:1: note: pattern recognized: patt_198 = SAD_EXPR <_64, _68, i_sum_144>;
common/pixel.c:65:1: note: === vect_analyze_data_ref_accesses ===
common/pixel.c:65:1: note: === vect_mark_stmts_to_be_vectorized ===
common/pixel.c:65:1: note: init: phi relevant? x_141 = PHI <x_74(9), 0(13)>
common/pixel.c:65:1: note: init: phi relevant? i_sum_144 = PHI <i_sum_73(9), i_sum_146(13)>
common/pixel.c:65:1: note: init: phi relevant? ivtmp_206 = PHI <ivtmp_205(9), 4(13)>
common/pixel.c:65:1: note: init: stmt relevant? # DEBUG x => x_141
common/pixel.c:65:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_144
common/pixel.c:65:1: note: init: stmt relevant? _61 = (sizetype) x_141;
common/pixel.c:65:1: note: init: stmt relevant? _63 = fenc_142 + _61;
common/pixel.c:65:1: note: init: stmt relevant? _64 = *_63;
common/pixel.c:65:1: note: init: stmt relevant? _65 = (int) _64;
common/pixel.c:65:1: note: init: stmt relevant? _67 = pix1_143 + _61;
common/pixel.c:65:1: note: init: stmt relevant? _68 = *_67;
common/pixel.c:65:1: note: init: stmt relevant? _69 = (int) _68;
common/pixel.c:65:1: note: init: stmt relevant? _70 = _65 - _69;
common/pixel.c:65:1: note: init: stmt relevant? _71 = ABS_EXPR <_70>;
common/pixel.c:65:1: note: init: stmt relevant? i_sum_73 = _71 + i_sum_144;
common/pixel.c:65:1: note: vec_stmt_relevant_p: used out of loop.
common/pixel.c:65:1: note: mark relevant 0, live 1.
common/pixel.c:65:1: note: last stmt in pattern. don't mark relevant/live.
common/pixel.c:65:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_73
common/pixel.c:65:1: note: init: stmt relevant? x_74 = x_141 + 1;
common/pixel.c:65:1: note: init: stmt relevant? # DEBUG x => x_74
common/pixel.c:65:1: note: init: stmt relevant? # DEBUG x => x_74
common/pixel.c:65:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_73
common/pixel.c:65:1: note: init: stmt relevant? ivtmp_205 = ivtmp_206 - 1;
common/pixel.c:65:1: note: init: stmt relevant? if (ivtmp_205 != 0)
common/pixel.c:65:1: note: worklist: examine stmt: patt_198 = SAD_EXPR <_64, _68, i_sum_144>;
common/pixel.c:65:1: note: vect_is_simple_use: operand _64
common/pixel.c:65:1: note: def_stmt: _64 = *_63;
common/pixel.c:65:1: note: type of def: 3.
common/pixel.c:65:1: note: mark relevant 3, live 0.
common/pixel.c:65:1: note: vect_is_simple_use: operand _68
common/pixel.c:65:1: note: def_stmt: _68 = *_67;
common/pixel.c:65:1: note: type of def: 3.
common/pixel.c:65:1: note: mark relevant 3, live 0.
common/pixel.c:65:1: note: vect_is_simple_use: operand i_sum_144
common/pixel.c:65:1: note: def_stmt: i_sum_144 = PHI <i_sum_73(9), i_sum_146(13)>
common/pixel.c:65:1: note: type of def: 5.
common/pixel.c:65:1: note: mark relevant 3, live 0.
common/pixel.c:65:1: note: worklist: examine stmt: i_sum_144 = PHI <i_sum_73(9), i_sum_146(13)>
common/pixel.c:65:1: note: vect_is_simple_use: operand i_sum_73
common/pixel.c:65:1: note: def_stmt: i_sum_73 = _71 + i_sum_144;
common/pixel.c:65:1: note: type of def: 5.
common/pixel.c:65:1: note: reduc-stmt defining reduc-phi in the same nest.
common/pixel.c:65:1: note: vect_is_simple_use: operand i_sum_146
common/pixel.c:65:1: note: def_stmt: i_sum_146 = PHI <i_sum_218(12), 0(8)>
common/pixel.c:65:1: note: type of def: 2.
common/pixel.c:65:1: note: def_stmt is out of loop.
common/pixel.c:65:1: note: worklist: examine stmt: _68 = *_67;
common/pixel.c:65:1: note: worklist: examine stmt: _64 = *_63;
common/pixel.c:65:1: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _64 = *_63;
  stmt_b: _68 = *_67;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _64 = *_63;
  stmt_b: _64 = *_63;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_6)
  (chrec_b = {0B, +, 1}_6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _68 = *_67;
  stmt_b: _68 = *_67;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_6)
  (chrec_b = {0B, +, 1}_6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/pixel.c:65:1: note: === vect_determine_vectorization_factor ===
common/pixel.c:65:1: note: ==> examining phi: x_141 = PHI <x_74(9), 0(13)>

common/pixel.c:65:1: note: ==> examining phi: i_sum_144 = PHI <i_sum_73(9), i_sum_146(13)>

common/pixel.c:65:1: note: get vectype for scalar type:  int
common/pixel.c:65:1: note: vectype: vector(4) int
common/pixel.c:65:1: note: nunits = 4
common/pixel.c:65:1: note: ==> examining phi: ivtmp_206 = PHI <ivtmp_205(9), 4(13)>

common/pixel.c:65:1: note: ==> examining statement: # DEBUG x => x_141

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: # DEBUG i_sum => i_sum_144

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: _61 = (sizetype) x_141;

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: _63 = fenc_142 + _61;

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: _64 = *_63;

common/pixel.c:65:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:65:1: note: vectype: vector(16) unsigned char
common/pixel.c:65:1: note: nunits = 16
common/pixel.c:65:1: note: ==> examining statement: _65 = (int) _64;

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: _67 = pix1_143 + _61;

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: _68 = *_67;

common/pixel.c:65:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:65:1: note: vectype: vector(16) unsigned char
common/pixel.c:65:1: note: nunits = 16
common/pixel.c:65:1: note: ==> examining statement: _69 = (int) _68;

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: _70 = _65 - _69;

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: _71 = ABS_EXPR <_70>;

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: i_sum_73 = _71 + i_sum_144;

common/pixel.c:65:1: note: ==> examining pattern statement: patt_198 = SAD_EXPR <_64, _68, i_sum_144>;

common/pixel.c:65:1: note: get vectype for scalar type:  int
common/pixel.c:65:1: note: vectype: vector(4) int
common/pixel.c:65:1: note: nunits = 4
common/pixel.c:65:1: note: ==> examining statement: # DEBUG i_sum => i_sum_73

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: x_74 = x_141 + 1;

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: # DEBUG x => x_74

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: # DEBUG x => x_74

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: # DEBUG i_sum => i_sum_73

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: ivtmp_205 = ivtmp_206 - 1;

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: if (ivtmp_205 != 0)

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: vectorization factor = 16
common/pixel.c:65:1: note: === vect_analyze_data_refs_alignment ===
common/pixel.c:65:1: note: vect_compute_data_ref_alignment:
common/pixel.c:65:1: note: can't force alignment of ref: *_63
common/pixel.c:65:1: note: vect_compute_data_ref_alignment:
common/pixel.c:65:1: note: can't force alignment of ref: *_67
common/pixel.c:65:1: note: === vect_prune_runtime_alias_test_list ===
common/pixel.c:65:1: note: === vect_enhance_data_refs_alignment ===
common/pixel.c:65:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:65:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:65:1: note: vect_can_advance_ivs_p:
common/pixel.c:65:1: note: Analyze phi: x_141 = PHI <x_74(9), 0(13)>

common/pixel.c:65:1: note: Analyze phi: i_sum_144 = PHI <i_sum_73(9), i_sum_146(13)>

common/pixel.c:65:1: note: reduc phi. skip.
common/pixel.c:65:1: note: Analyze phi: ivtmp_206 = PHI <ivtmp_205(9), 4(13)>

common/pixel.c:65:1: note: Vectorizing an unaligned access.
common/pixel.c:65:1: note: Vectorizing an unaligned access.
common/pixel.c:65:1: note: === vect_analyze_slp ===
common/pixel.c:65:1: note: === vect_make_slp_decision ===
common/pixel.c:65:1: note: === vect_detect_hybrid_slp ===
common/pixel.c:65:1: note: === vect_analyze_loop_operations ===
common/pixel.c:65:1: note: examining phi: x_141 = PHI <x_74(9), 0(13)>

common/pixel.c:65:1: note: examining phi: i_sum_144 = PHI <i_sum_73(9), i_sum_146(13)>

common/pixel.c:65:1: note: examining phi: ivtmp_206 = PHI <ivtmp_205(9), 4(13)>

common/pixel.c:65:1: note: ==> examining statement: # DEBUG x => x_141
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: # DEBUG i_sum => i_sum_144
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: _61 = (sizetype) x_141;
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: _63 = fenc_142 + _61;
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: _64 = *_63;
common/pixel.c:65:1: note: vect_is_simple_use: operand *_63
common/pixel.c:65:1: note: not ssa-name.
common/pixel.c:65:1: note: use not simple.
common/pixel.c:65:1: note: vect_is_simple_use: operand *_63
common/pixel.c:65:1: note: not ssa-name.
common/pixel.c:65:1: note: use not simple.
common/pixel.c:65:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:65:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:65:1: note: ==> examining statement: _65 = (int) _64;
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: _67 = pix1_143 + _61;
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: _68 = *_67;
common/pixel.c:65:1: note: vect_is_simple_use: operand *_67
common/pixel.c:65:1: note: not ssa-name.
common/pixel.c:65:1: note: use not simple.
common/pixel.c:65:1: note: vect_is_simple_use: operand *_67
common/pixel.c:65:1: note: not ssa-name.
common/pixel.c:65:1: note: use not simple.
common/pixel.c:65:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:65:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:65:1: note: ==> examining statement: _69 = (int) _68;
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: _70 = _65 - _69;
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: _71 = ABS_EXPR <_70>;
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: i_sum_73 = _71 + i_sum_144;
common/pixel.c:65:1: note: ==> examining pattern statement: patt_198 = SAD_EXPR <_64, _68, i_sum_144>;
common/pixel.c:65:1: note: vect_is_simple_use: operand _64
common/pixel.c:65:1: note: def_stmt: _64 = *_63;
common/pixel.c:65:1: note: type of def: 3.
common/pixel.c:65:1: note: vect_is_simple_use: operand _68
common/pixel.c:65:1: note: def_stmt: _68 = *_67;
common/pixel.c:65:1: note: type of def: 3.
common/pixel.c:65:1: note: vect_is_simple_use: operand i_sum_144
common/pixel.c:65:1: note: def_stmt: i_sum_144 = PHI <i_sum_73(9), i_sum_146(13)>
common/pixel.c:65:1: note: type of def: 5.
common/pixel.c:65:1: note: detected reduction: i_sum_73 = _71 + i_sum_144;

common/pixel.c:65:1: note: reduc op not supported by target.
vect_model_reduction_cost: inside_cost = 1, prologue_cost = 1, epilogue_cost = 5 .
common/pixel.c:65:1: note: ==> examining statement: # DEBUG i_sum => i_sum_73
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: x_74 = x_141 + 1;
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: # DEBUG x => x_74
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: # DEBUG x => x_74
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: # DEBUG i_sum => i_sum_73
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: ivtmp_205 = ivtmp_206 - 1;
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: if (ivtmp_205 != 0)
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: vectorization_factor = 16, niters = 4
common/pixel.c:65:1: note: not vectorized: iteration count too small.
common/pixel.c:65:1: note: not vectorized: iteration count smaller than vectorization factor.
common/pixel.c:65:1: note: bad operation or unsupported loop bound.

Analyzing loop at common/pixel.c:65
common/pixel.c:65:1: note: ===== analyze_loop_nest =====
common/pixel.c:65:1: note: === vect_analyze_loop_form ===
common/pixel.c:65:1: note: ===== analyze_loop_nest_1 =====
common/pixel.c:65:1: note: === vect_analyze_loop_form ===
common/pixel.c:65:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 8
  exit condition [3, + , 4294967295] != 0
  bounds on difference of bases: -3 ... -3
  result:
    # of iterations 3, bounded by 3
common/pixel.c:65:1: note: Considering outer-loop vectorization.
common/pixel.c:65:1: note: === get_loop_niters ===
Analyzing # of iterations of loop 7
  exit condition [3, + , 4294967295] != 0
  bounds on difference of bases: -3 ... -3
  result:
    # of iterations 3, bounded by 3
common/pixel.c:65:1: note: === vect_analyze_data_refs ===
Creating dr for *_85
analyze_innermost: success.
	base_address: fenc_148
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_2(D)
	Access function 0: {{0B, +, 16}_7, +, 1}_8
Creating dr for *_89
analyze_innermost: success.
	base_address: pix0_149
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix0_3(D)
	Access function 0: {{0B, +, pretmp_223}_7, +, 1}_8
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:65:1: note: analyze in outer-loop: *fenc_148
common/pixel.c:65:1: note: 	outer base_address: fenc_2(D)
	outer offset from base address: 0
	outer constant offset from base address: 0
	outer step: 16
	outer aligned to: 128
common/pixel.c:65:1: note: got vectype for stmt: _86 = *_85;
vector(16) unsigned char
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:65:1: note: analyze in outer-loop: *pix0_149
common/pixel.c:65:1: note: failed: evolution of base is not affine.
common/pixel.c:65:1: note: bad data references.

Analyzing loop at common/pixel.c:65
common/pixel.c:65:1: note: ===== analyze_loop_nest =====
common/pixel.c:65:1: note: === vect_analyze_loop_form ===
common/pixel.c:65:1: note: === get_loop_niters ===
common/pixel.c:65:1: note: === vect_analyze_data_refs ===
Creating dr for *_85
analyze_innermost: success.
	base_address: fenc_148
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *fenc_148
	Access function 0: {0B, +, 1}_8
Creating dr for *_89
analyze_innermost: success.
	base_address: pix0_149
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix0_149
	Access function 0: {0B, +, 1}_8
common/pixel.c:65:1: note: got vectype for stmt: _86 = *_85;
vector(16) unsigned char
common/pixel.c:65:1: note: got vectype for stmt: _90 = *_89;
vector(16) unsigned char
common/pixel.c:65:1: note: === vect_analyze_scalar_cycles ===
common/pixel.c:65:1: note: Analyze phi: x_147 = PHI <x_96(3), 0(7)>

common/pixel.c:65:1: note: Access function of PHI: {0, +, 1}_8
common/pixel.c:65:1: note: step: 1,  init: 0
common/pixel.c:65:1: note: Detected induction.
common/pixel.c:65:1: note: Analyze phi: i_sum_150 = PHI <i_sum_95(3), i_sum_152(7)>

common/pixel.c:65:1: note: Access function of PHI: {i_sum_152, +, _93}_8
common/pixel.c:65:1: note: step: _93,  init: i_sum_152
common/pixel.c:65:1: note: step unknown.
common/pixel.c:65:1: note: Analyze phi: ivtmp_202 = PHI <ivtmp_201(3), 4(7)>

common/pixel.c:65:1: note: Access function of PHI: {4, +, 4294967295}_8
common/pixel.c:65:1: note: step: 4294967295,  init: 4
common/pixel.c:65:1: note: Detected induction.
common/pixel.c:65:1: note: Analyze phi: i_sum_150 = PHI <i_sum_95(3), i_sum_152(7)>

common/pixel.c:65:1: note: detected reduction: i_sum_95 = _93 + i_sum_150;

common/pixel.c:65:1: note: Detected reduction.
common/pixel.c:65:1: note: === vect_pattern_recog ===
common/pixel.c:65:1: note: vect_is_simple_use: operand _93
common/pixel.c:65:1: note: def_stmt: _93 = ABS_EXPR <_92>;
common/pixel.c:65:1: note: type of def: 3.
common/pixel.c:65:1: note: vect_is_simple_use: operand _93
common/pixel.c:65:1: note: def_stmt: _93 = ABS_EXPR <_92>;
common/pixel.c:65:1: note: type of def: 3.
common/pixel.c:65:1: note: vect_is_simple_use: operand _93
common/pixel.c:65:1: note: def_stmt: _93 = ABS_EXPR <_92>;
common/pixel.c:65:1: note: type of def: 3.
common/pixel.c:65:1: note: vect_is_simple_use: operand _87
common/pixel.c:65:1: note: def_stmt: _87 = (int) _86;
common/pixel.c:65:1: note: type of def: 3.
common/pixel.c:65:1: note: vect_is_simple_use: operand _86
common/pixel.c:65:1: note: def_stmt: _86 = *_85;
common/pixel.c:65:1: note: type of def: 3.
common/pixel.c:65:1: note: vect_is_simple_use: operand _91
common/pixel.c:65:1: note: def_stmt: _91 = (int) _90;
common/pixel.c:65:1: note: type of def: 3.
common/pixel.c:65:1: note: vect_is_simple_use: operand _90
common/pixel.c:65:1: note: def_stmt: _90 = *_89;
common/pixel.c:65:1: note: type of def: 3.
common/pixel.c:65:1: note: vect_recog_sad_pattern: detected: patt_198 = SAD_EXPR <_86, _90, i_sum_150>;

common/pixel.c:65:1: note: pattern recognized: patt_198 = SAD_EXPR <_86, _90, i_sum_150>;
common/pixel.c:65:1: note: === vect_analyze_data_ref_accesses ===
common/pixel.c:65:1: note: === vect_mark_stmts_to_be_vectorized ===
common/pixel.c:65:1: note: init: phi relevant? x_147 = PHI <x_96(3), 0(7)>
common/pixel.c:65:1: note: init: phi relevant? i_sum_150 = PHI <i_sum_95(3), i_sum_152(7)>
common/pixel.c:65:1: note: init: phi relevant? ivtmp_202 = PHI <ivtmp_201(3), 4(7)>
common/pixel.c:65:1: note: init: stmt relevant? # DEBUG x => x_147
common/pixel.c:65:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_150
common/pixel.c:65:1: note: init: stmt relevant? _83 = (sizetype) x_147;
common/pixel.c:65:1: note: init: stmt relevant? _85 = fenc_148 + _83;
common/pixel.c:65:1: note: init: stmt relevant? _86 = *_85;
common/pixel.c:65:1: note: init: stmt relevant? _87 = (int) _86;
common/pixel.c:65:1: note: init: stmt relevant? _89 = pix0_149 + _83;
common/pixel.c:65:1: note: init: stmt relevant? _90 = *_89;
common/pixel.c:65:1: note: init: stmt relevant? _91 = (int) _90;
common/pixel.c:65:1: note: init: stmt relevant? _92 = _87 - _91;
common/pixel.c:65:1: note: init: stmt relevant? _93 = ABS_EXPR <_92>;
common/pixel.c:65:1: note: init: stmt relevant? i_sum_95 = _93 + i_sum_150;
common/pixel.c:65:1: note: vec_stmt_relevant_p: used out of loop.
common/pixel.c:65:1: note: mark relevant 0, live 1.
common/pixel.c:65:1: note: last stmt in pattern. don't mark relevant/live.
common/pixel.c:65:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_95
common/pixel.c:65:1: note: init: stmt relevant? x_96 = x_147 + 1;
common/pixel.c:65:1: note: init: stmt relevant? # DEBUG x => x_96
common/pixel.c:65:1: note: init: stmt relevant? # DEBUG x => x_96
common/pixel.c:65:1: note: init: stmt relevant? # DEBUG i_sum => i_sum_95
common/pixel.c:65:1: note: init: stmt relevant? ivtmp_201 = ivtmp_202 - 1;
common/pixel.c:65:1: note: init: stmt relevant? if (ivtmp_201 != 0)
common/pixel.c:65:1: note: worklist: examine stmt: patt_198 = SAD_EXPR <_86, _90, i_sum_150>;
common/pixel.c:65:1: note: vect_is_simple_use: operand _86
common/pixel.c:65:1: note: def_stmt: _86 = *_85;
common/pixel.c:65:1: note: type of def: 3.
common/pixel.c:65:1: note: mark relevant 3, live 0.
common/pixel.c:65:1: note: vect_is_simple_use: operand _90
common/pixel.c:65:1: note: def_stmt: _90 = *_89;
common/pixel.c:65:1: note: type of def: 3.
common/pixel.c:65:1: note: mark relevant 3, live 0.
common/pixel.c:65:1: note: vect_is_simple_use: operand i_sum_150
common/pixel.c:65:1: note: def_stmt: i_sum_150 = PHI <i_sum_95(3), i_sum_152(7)>
common/pixel.c:65:1: note: type of def: 5.
common/pixel.c:65:1: note: mark relevant 3, live 0.
common/pixel.c:65:1: note: worklist: examine stmt: i_sum_150 = PHI <i_sum_95(3), i_sum_152(7)>
common/pixel.c:65:1: note: vect_is_simple_use: operand i_sum_95
common/pixel.c:65:1: note: def_stmt: i_sum_95 = _93 + i_sum_150;
common/pixel.c:65:1: note: type of def: 5.
common/pixel.c:65:1: note: reduc-stmt defining reduc-phi in the same nest.
common/pixel.c:65:1: note: vect_is_simple_use: operand i_sum_152
common/pixel.c:65:1: note: def_stmt: i_sum_152 = PHI <i_sum_216(6), 0(2)>
common/pixel.c:65:1: note: type of def: 2.
common/pixel.c:65:1: note: def_stmt is out of loop.
common/pixel.c:65:1: note: worklist: examine stmt: _90 = *_89;
common/pixel.c:65:1: note: worklist: examine stmt: _86 = *_85;
common/pixel.c:65:1: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _86 = *_85;
  stmt_b: _90 = *_89;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _86 = *_85;
  stmt_b: _86 = *_85;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_8)
  (chrec_b = {0B, +, 1}_8)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _90 = *_89;
  stmt_b: _90 = *_89;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_8)
  (chrec_b = {0B, +, 1}_8)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/pixel.c:65:1: note: === vect_determine_vectorization_factor ===
common/pixel.c:65:1: note: ==> examining phi: x_147 = PHI <x_96(3), 0(7)>

common/pixel.c:65:1: note: ==> examining phi: i_sum_150 = PHI <i_sum_95(3), i_sum_152(7)>

common/pixel.c:65:1: note: get vectype for scalar type:  int
common/pixel.c:65:1: note: vectype: vector(4) int
common/pixel.c:65:1: note: nunits = 4
common/pixel.c:65:1: note: ==> examining phi: ivtmp_202 = PHI <ivtmp_201(3), 4(7)>

common/pixel.c:65:1: note: ==> examining statement: # DEBUG x => x_147

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: # DEBUG i_sum => i_sum_150

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: _83 = (sizetype) x_147;

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: _85 = fenc_148 + _83;

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: _86 = *_85;

common/pixel.c:65:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:65:1: note: vectype: vector(16) unsigned char
common/pixel.c:65:1: note: nunits = 16
common/pixel.c:65:1: note: ==> examining statement: _87 = (int) _86;

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: _89 = pix0_149 + _83;

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: _90 = *_89;

common/pixel.c:65:1: note: get vectype for scalar type:  unsigned char
common/pixel.c:65:1: note: vectype: vector(16) unsigned char
common/pixel.c:65:1: note: nunits = 16
common/pixel.c:65:1: note: ==> examining statement: _91 = (int) _90;

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: _92 = _87 - _91;

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: _93 = ABS_EXPR <_92>;

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: i_sum_95 = _93 + i_sum_150;

common/pixel.c:65:1: note: ==> examining pattern statement: patt_198 = SAD_EXPR <_86, _90, i_sum_150>;

common/pixel.c:65:1: note: get vectype for scalar type:  int
common/pixel.c:65:1: note: vectype: vector(4) int
common/pixel.c:65:1: note: nunits = 4
common/pixel.c:65:1: note: ==> examining statement: # DEBUG i_sum => i_sum_95

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: x_96 = x_147 + 1;

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: # DEBUG x => x_96

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: # DEBUG x => x_96

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: # DEBUG i_sum => i_sum_95

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: ivtmp_201 = ivtmp_202 - 1;

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: ==> examining statement: if (ivtmp_201 != 0)

common/pixel.c:65:1: note: skip.
common/pixel.c:65:1: note: vectorization factor = 16
common/pixel.c:65:1: note: === vect_analyze_data_refs_alignment ===
common/pixel.c:65:1: note: vect_compute_data_ref_alignment:
common/pixel.c:65:1: note: can't force alignment of ref: *_85
common/pixel.c:65:1: note: vect_compute_data_ref_alignment:
common/pixel.c:65:1: note: can't force alignment of ref: *_89
common/pixel.c:65:1: note: === vect_prune_runtime_alias_test_list ===
common/pixel.c:65:1: note: === vect_enhance_data_refs_alignment ===
common/pixel.c:65:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:65:1: note: Unknown misalignment, is_packed = 0
common/pixel.c:65:1: note: vect_can_advance_ivs_p:
common/pixel.c:65:1: note: Analyze phi: x_147 = PHI <x_96(3), 0(7)>

common/pixel.c:65:1: note: Analyze phi: i_sum_150 = PHI <i_sum_95(3), i_sum_152(7)>

common/pixel.c:65:1: note: reduc phi. skip.
common/pixel.c:65:1: note: Analyze phi: ivtmp_202 = PHI <ivtmp_201(3), 4(7)>

common/pixel.c:65:1: note: Vectorizing an unaligned access.
common/pixel.c:65:1: note: Vectorizing an unaligned access.
common/pixel.c:65:1: note: === vect_analyze_slp ===
common/pixel.c:65:1: note: === vect_make_slp_decision ===
common/pixel.c:65:1: note: === vect_detect_hybrid_slp ===
common/pixel.c:65:1: note: === vect_analyze_loop_operations ===
common/pixel.c:65:1: note: examining phi: x_147 = PHI <x_96(3), 0(7)>

common/pixel.c:65:1: note: examining phi: i_sum_150 = PHI <i_sum_95(3), i_sum_152(7)>

common/pixel.c:65:1: note: examining phi: ivtmp_202 = PHI <ivtmp_201(3), 4(7)>

common/pixel.c:65:1: note: ==> examining statement: # DEBUG x => x_147
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: # DEBUG i_sum => i_sum_150
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: _83 = (sizetype) x_147;
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: _85 = fenc_148 + _83;
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: _86 = *_85;
common/pixel.c:65:1: note: vect_is_simple_use: operand *_85
common/pixel.c:65:1: note: not ssa-name.
common/pixel.c:65:1: note: use not simple.
common/pixel.c:65:1: note: vect_is_simple_use: operand *_85
common/pixel.c:65:1: note: not ssa-name.
common/pixel.c:65:1: note: use not simple.
common/pixel.c:65:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:65:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:65:1: note: ==> examining statement: _87 = (int) _86;
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: _89 = pix0_149 + _83;
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: _90 = *_89;
common/pixel.c:65:1: note: vect_is_simple_use: operand *_89
common/pixel.c:65:1: note: not ssa-name.
common/pixel.c:65:1: note: use not simple.
common/pixel.c:65:1: note: vect_is_simple_use: operand *_89
common/pixel.c:65:1: note: not ssa-name.
common/pixel.c:65:1: note: use not simple.
common/pixel.c:65:1: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:65:1: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:65:1: note: ==> examining statement: _91 = (int) _90;
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: _92 = _87 - _91;
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: _93 = ABS_EXPR <_92>;
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: i_sum_95 = _93 + i_sum_150;
common/pixel.c:65:1: note: ==> examining pattern statement: patt_198 = SAD_EXPR <_86, _90, i_sum_150>;
common/pixel.c:65:1: note: vect_is_simple_use: operand _86
common/pixel.c:65:1: note: def_stmt: _86 = *_85;
common/pixel.c:65:1: note: type of def: 3.
common/pixel.c:65:1: note: vect_is_simple_use: operand _90
common/pixel.c:65:1: note: def_stmt: _90 = *_89;
common/pixel.c:65:1: note: type of def: 3.
common/pixel.c:65:1: note: vect_is_simple_use: operand i_sum_150
common/pixel.c:65:1: note: def_stmt: i_sum_150 = PHI <i_sum_95(3), i_sum_152(7)>
common/pixel.c:65:1: note: type of def: 5.
common/pixel.c:65:1: note: detected reduction: i_sum_95 = _93 + i_sum_150;

common/pixel.c:65:1: note: reduc op not supported by target.
vect_model_reduction_cost: inside_cost = 1, prologue_cost = 1, epilogue_cost = 5 .
common/pixel.c:65:1: note: ==> examining statement: # DEBUG i_sum => i_sum_95
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: x_96 = x_147 + 1;
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: # DEBUG x => x_96
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: # DEBUG x => x_96
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: # DEBUG i_sum => i_sum_95
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: ivtmp_201 = ivtmp_202 - 1;
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: ==> examining statement: if (ivtmp_201 != 0)
common/pixel.c:65:1: note: irrelevant.
common/pixel.c:65:1: note: vectorization_factor = 16, niters = 4
common/pixel.c:65:1: note: not vectorized: iteration count too small.
common/pixel.c:65:1: note: not vectorized: iteration count smaller than vectorization factor.
common/pixel.c:65:1: note: bad operation or unsupported loop bound.
common/pixel.c:389:1: note: vectorized 0 loops in function.
x264_pixel_sad_x4_4x4 (uint8_t * fenc, uint8_t * pix0, uint8_t * pix1, uint8_t * pix2, uint8_t * pix3, int i_stride, int * scores)
{
  int i_sum;
  int x;
  int y;
  int i_sum;
  int x;
  int y;
  int i_sum;
  int x;
  int y;
  int i_sum;
  int x;
  int y;
  uint8_t * _5;
  sizetype _14;
  unsigned char _20;
  int _21;
  uint8_t * _23;
  unsigned char _24;
  int _25;
  int _26;
  int _27;
  sizetype _39;
  uint8_t * _41;
  unsigned char _42;
  int _43;
  uint8_t * _45;
  unsigned char _46;
  int _47;
  int _48;
  int _49;
  sizetype _61;
  uint8_t * _63;
  unsigned char _64;
  int _65;
  uint8_t * _67;
  unsigned char _68;
  int _69;
  int _70;
  int _71;
  sizetype _83;
  uint8_t * _85;
  unsigned char _86;
  int _87;
  uint8_t * _89;
  unsigned char _90;
  int _91;
  int _92;
  int _93;
  unsigned int ivtmp_199;
  unsigned int ivtmp_200;
  unsigned int ivtmp_201;
  unsigned int ivtmp_202;
  unsigned int ivtmp_203;
  unsigned int ivtmp_204;
  unsigned int ivtmp_205;
  unsigned int ivtmp_206;
  unsigned int ivtmp_207;
  unsigned int ivtmp_208;
  unsigned int ivtmp_209;
  unsigned int ivtmp_210;
  unsigned int ivtmp_211;
  unsigned int ivtmp_212;
  unsigned int ivtmp_213;
  unsigned int ivtmp_214;
  sizetype pretmp_223;

  <bb 2>:
  # DEBUG pix1 => fenc_2(D)
  # DEBUG i_stride_pix1 => 16
  # DEBUG pix2 => pix0_3(D)
  # DEBUG i_stride_pix2 => i_stride_4(D)
  # DEBUG i_sum => 0
  # DEBUG y => 0
  # DEBUG y => 0
  # DEBUG i_sum => 0
  # DEBUG pix2 => pix0_3(D)
  # DEBUG pix1 => fenc_2(D)
  pretmp_223 = (sizetype) i_stride_4(D);
  goto <bb 7>;

  <bb 3>:

  <bb 4>:
  # x_147 = PHI <x_96(3), 0(7)>
  # i_sum_150 = PHI <i_sum_95(3), i_sum_152(7)>
  # ivtmp_202 = PHI <ivtmp_201(3), 4(7)>
  # DEBUG x => x_147
  # DEBUG i_sum => i_sum_150
  _83 = (sizetype) x_147;
  _85 = fenc_148 + _83;
  _86 = *_85;
  _87 = (int) _86;
  _89 = pix0_149 + _83;
  _90 = *_89;
  _91 = (int) _90;
  _92 = _87 - _91;
  _93 = ABS_EXPR <_92>;
  i_sum_95 = _93 + i_sum_150;
  # DEBUG i_sum => i_sum_95
  x_96 = x_147 + 1;
  # DEBUG x => x_96
  # DEBUG x => x_96
  # DEBUG i_sum => i_sum_95
  ivtmp_201 = ivtmp_202 - 1;
  if (ivtmp_201 != 0)
    goto <bb 3>;
  else
    goto <bb 5>;

  <bb 5>:
  # i_sum_216 = PHI <i_sum_95(4)>
  fenc_97 = fenc_148 + 16;
  # DEBUG pix1 => fenc_97
  pix0_99 = pix0_149 + pretmp_223;
  # DEBUG pix2 => pix0_99
  y_101 = y_151 + 1;
  # DEBUG y => y_101
  # DEBUG y => y_101
  # DEBUG i_sum => i_sum_216
  # DEBUG pix2 => pix0_99
  # DEBUG pix1 => fenc_97
  ivtmp_199 = ivtmp_200 - 1;
  if (ivtmp_199 != 0)
    goto <bb 6>;
  else
    goto <bb 8>;

  <bb 6>:

  <bb 7>:
  # fenc_148 = PHI <fenc_97(6), fenc_2(D)(2)>
  # pix0_149 = PHI <pix0_99(6), pix0_3(D)(2)>
  # y_151 = PHI <y_101(6), 0(2)>
  # i_sum_152 = PHI <i_sum_216(6), 0(2)>
  # ivtmp_200 = PHI <ivtmp_199(6), 4(2)>
  # DEBUG y => y_151
  # DEBUG i_sum => i_sum_152
  # DEBUG pix2 => pix0_149
  # DEBUG pix1 => fenc_148
  # DEBUG x => 0
  # DEBUG i_sum => i_sum_152
  goto <bb 4>;

  <bb 8>:
  # i_sum_215 = PHI <i_sum_216(5)>
  # DEBUG pix1 => NULL
  # DEBUG i_stride_pix1 => NULL
  # DEBUG pix2 => NULL
  # DEBUG i_stride_pix2 => NULL
  # DEBUG y => NULL
  # DEBUG x => NULL
  # DEBUG i_sum => NULL
  *scores_6(D) = i_sum_215;
  # DEBUG pix1 => fenc_2(D)
  # DEBUG i_stride_pix1 => 16
  # DEBUG pix2 => pix1_9(D)
  # DEBUG i_stride_pix2 => i_stride_4(D)
  # DEBUG y => 0
  # DEBUG i_sum => 0
  # DEBUG pix2 => pix1_9(D)
  # DEBUG pix1 => fenc_2(D)
  goto <bb 13>;

  <bb 9>:

  <bb 10>:
  # x_141 = PHI <x_74(9), 0(13)>
  # i_sum_144 = PHI <i_sum_73(9), i_sum_146(13)>
  # ivtmp_206 = PHI <ivtmp_205(9), 4(13)>
  # DEBUG x => x_141
  # DEBUG i_sum => i_sum_144
  _61 = (sizetype) x_141;
  _63 = fenc_142 + _61;
  _64 = *_63;
  _65 = (int) _64;
  _67 = pix1_143 + _61;
  _68 = *_67;
  _69 = (int) _68;
  _70 = _65 - _69;
  _71 = ABS_EXPR <_70>;
  i_sum_73 = _71 + i_sum_144;
  # DEBUG i_sum => i_sum_73
  x_74 = x_141 + 1;
  # DEBUG x => x_74
  # DEBUG x => x_74
  # DEBUG i_sum => i_sum_73
  ivtmp_205 = ivtmp_206 - 1;
  if (ivtmp_205 != 0)
    goto <bb 9>;
  else
    goto <bb 11>;

  <bb 11>:
  # i_sum_218 = PHI <i_sum_73(10)>
  fenc_75 = fenc_142 + 16;
  # DEBUG pix1 => fenc_75
  pix1_77 = pix1_143 + pretmp_223;
  # DEBUG pix2 => pix1_77
  y_79 = y_145 + 1;
  # DEBUG y => y_79
  # DEBUG y => y_79
  # DEBUG i_sum => i_sum_218
  # DEBUG pix2 => pix1_77
  # DEBUG pix1 => fenc_75
  ivtmp_203 = ivtmp_204 - 1;
  if (ivtmp_203 != 0)
    goto <bb 12>;
  else
    goto <bb 14>;

  <bb 12>:

  <bb 13>:
  # fenc_142 = PHI <fenc_75(12), fenc_2(D)(8)>
  # pix1_143 = PHI <pix1_77(12), pix1_9(D)(8)>
  # y_145 = PHI <y_79(12), 0(8)>
  # i_sum_146 = PHI <i_sum_218(12), 0(8)>
  # ivtmp_204 = PHI <ivtmp_203(12), 4(8)>
  # DEBUG y => y_145
  # DEBUG i_sum => i_sum_146
  # DEBUG pix2 => pix1_143
  # DEBUG pix1 => fenc_142
  # DEBUG x => 0
  # DEBUG i_sum => i_sum_146
  goto <bb 10>;

  <bb 14>:
  # i_sum_217 = PHI <i_sum_218(11)>
  # DEBUG pix1 => NULL
  # DEBUG i_stride_pix1 => NULL
  # DEBUG pix2 => NULL
  # DEBUG i_stride_pix2 => NULL
  # DEBUG y => NULL
  # DEBUG x => NULL
  # DEBUG i_sum => NULL
  MEM[(int *)scores_6(D) + 4B] = i_sum_217;
  # DEBUG pix1 => fenc_2(D)
  # DEBUG i_stride_pix1 => 16
  # DEBUG pix2 => pix2_13(D)
  # DEBUG i_stride_pix2 => i_stride_4(D)
  # DEBUG y => 0
  # DEBUG i_sum => 0
  # DEBUG pix2 => pix2_13(D)
  # DEBUG pix1 => fenc_2(D)
  goto <bb 19>;

  <bb 15>:

  <bb 16>:
  # x_81 = PHI <x_52(15), 0(19)>
  # i_sum_138 = PHI <i_sum_51(15), i_sum_140(19)>
  # ivtmp_210 = PHI <ivtmp_209(15), 4(19)>
  # DEBUG x => x_81
  # DEBUG i_sum => i_sum_138
  _39 = (sizetype) x_81;
  _41 = fenc_37 + _39;
  _42 = *_41;
  _43 = (int) _42;
  _45 = pix2_137 + _39;
  _46 = *_45;
  _47 = (int) _46;
  _48 = _43 - _47;
  _49 = ABS_EXPR <_48>;
  i_sum_51 = _49 + i_sum_138;
  # DEBUG i_sum => i_sum_51
  x_52 = x_81 + 1;
  # DEBUG x => x_52
  # DEBUG x => x_52
  # DEBUG i_sum => i_sum_51
  ivtmp_209 = ivtmp_210 - 1;
  if (ivtmp_209 != 0)
    goto <bb 15>;
  else
    goto <bb 17>;

  <bb 17>:
  # i_sum_220 = PHI <i_sum_51(16)>
  fenc_53 = fenc_37 + 16;
  # DEBUG pix1 => fenc_53
  pix2_55 = pix2_137 + pretmp_223;
  # DEBUG pix2 => pix2_55
  y_57 = y_139 + 1;
  # DEBUG y => y_57
  # DEBUG y => y_57
  # DEBUG i_sum => i_sum_220
  # DEBUG pix2 => pix2_55
  # DEBUG pix1 => fenc_53
  ivtmp_207 = ivtmp_208 - 1;
  if (ivtmp_207 != 0)
    goto <bb 18>;
  else
    goto <bb 20>;

  <bb 18>:

  <bb 19>:
  # fenc_37 = PHI <fenc_53(18), fenc_2(D)(14)>
  # pix2_137 = PHI <pix2_55(18), pix2_13(D)(14)>
  # y_139 = PHI <y_57(18), 0(14)>
  # i_sum_140 = PHI <i_sum_220(18), 0(14)>
  # ivtmp_208 = PHI <ivtmp_207(18), 4(14)>
  # DEBUG y => y_139
  # DEBUG i_sum => i_sum_140
  # DEBUG pix2 => pix2_137
  # DEBUG pix1 => fenc_37
  # DEBUG x => 0
  # DEBUG i_sum => i_sum_140
  goto <bb 16>;

  <bb 20>:
  # i_sum_219 = PHI <i_sum_220(17)>
  # DEBUG pix1 => NULL
  # DEBUG i_stride_pix1 => NULL
  # DEBUG pix2 => NULL
  # DEBUG i_stride_pix2 => NULL
  # DEBUG y => NULL
  # DEBUG x => NULL
  # DEBUG i_sum => NULL
  MEM[(int *)scores_6(D) + 8B] = i_sum_219;
  # DEBUG pix1 => fenc_2(D)
  # DEBUG i_stride_pix1 => 16
  # DEBUG pix2 => pix3_17(D)
  # DEBUG i_stride_pix2 => i_stride_4(D)
  # DEBUG y => 0
  # DEBUG i_sum => 0
  # DEBUG pix2 => pix3_17(D)
  # DEBUG pix1 => fenc_2(D)
  goto <bb 25>;

  <bb 21>:

  <bb 22>:
  # x_8 = PHI <x_30(21), 0(25)>
  # i_sum_59 = PHI <i_sum_29(21), i_sum_104(25)>
  # ivtmp_214 = PHI <ivtmp_213(21), 4(25)>
  # DEBUG x => x_8
  # DEBUG i_sum => i_sum_59
  _14 = (sizetype) x_8;
  _5 = fenc_16 + _14;
  _20 = *_5;
  _21 = (int) _20;
  _23 = pix3_103 + _14;
  _24 = *_23;
  _25 = (int) _24;
  _26 = _21 - _25;
  _27 = ABS_EXPR <_26>;
  i_sum_29 = _27 + i_sum_59;
  # DEBUG i_sum => i_sum_29
  x_30 = x_8 + 1;
  # DEBUG x => x_30
  # DEBUG x => x_30
  # DEBUG i_sum => i_sum_29
  ivtmp_213 = ivtmp_214 - 1;
  if (ivtmp_213 != 0)
    goto <bb 21>;
  else
    goto <bb 23>;

  <bb 23>:
  # i_sum_222 = PHI <i_sum_29(22)>
  fenc_31 = fenc_16 + 16;
  # DEBUG pix1 => fenc_31
  pix3_33 = pix3_103 + pretmp_223;
  # DEBUG pix2 => pix3_33
  y_35 = y_12 + 1;
  # DEBUG y => y_35
  # DEBUG y => y_35
  # DEBUG i_sum => i_sum_222
  # DEBUG pix2 => pix3_33
  # DEBUG pix1 => fenc_31
  ivtmp_211 = ivtmp_212 - 1;
  if (ivtmp_211 != 0)
    goto <bb 24>;
  else
    goto <bb 26>;

  <bb 24>:

  <bb 25>:
  # fenc_16 = PHI <fenc_31(24), fenc_2(D)(20)>
  # pix3_103 = PHI <pix3_33(24), pix3_17(D)(20)>
  # y_12 = PHI <y_35(24), 0(20)>
  # i_sum_104 = PHI <i_sum_222(24), 0(20)>
  # ivtmp_212 = PHI <ivtmp_211(24), 4(20)>
  # DEBUG y => y_12
  # DEBUG i_sum => i_sum_104
  # DEBUG pix2 => pix3_103
  # DEBUG pix1 => fenc_16
  # DEBUG x => 0
  # DEBUG i_sum => i_sum_104
  goto <bb 22>;

  <bb 26>:
  # i_sum_221 = PHI <i_sum_222(23)>
  # DEBUG pix1 => NULL
  # DEBUG i_stride_pix1 => NULL
  # DEBUG pix2 => NULL
  # DEBUG i_stride_pix2 => NULL
  # DEBUG y => NULL
  # DEBUG x => NULL
  # DEBUG i_sum => NULL
  MEM[(int *)scores_6(D) + 12B] = i_sum_221;
  return;

}



;; Function ssim_4x4x2_core (ssim_4x4x2_core, funcdef_no=230, decl_uid=8696, cgraph_uid=230, symbol_order=273)


Analyzing loop at common/pixel.c:444
common/pixel.c:444:5: note: ===== analyze_loop_nest =====
common/pixel.c:444:5: note: === vect_analyze_loop_form ===
common/pixel.c:444:5: note: not vectorized: multiple nested loops.
common/pixel.c:444:5: note: bad loop form.

Analyzing loop at common/pixel.c:447
common/pixel.c:447:9: note: ===== analyze_loop_nest =====
common/pixel.c:447:9: note: === vect_analyze_loop_form ===
common/pixel.c:447:9: note: ===== analyze_loop_nest_1 =====
common/pixel.c:447:9: note: === vect_analyze_loop_form ===
common/pixel.c:447:9: note: === get_loop_niters ===
Analyzing # of iterations of loop 3
  exit condition [3, + , 4294967295] != 0
  bounds on difference of bases: -3 ... -3
  result:
    # of iterations 3, bounded by 3
common/pixel.c:447:9: note: Considering outer-loop vectorization.
common/pixel.c:447:9: note: === get_loop_niters ===
Analyzing # of iterations of loop 2
  exit condition [3, + , 4294967295] != 0
  bounds on difference of bases: -3 ... -3
  result:
    # of iterations 3, bounded by 3
common/pixel.c:447:9: note: === vect_analyze_data_refs ===
Creating dr for *_23
analyze_innermost: success.
	base_address: pix1_54 + (sizetype) pretmp_202
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix1_54
	Access function 0: {{0B, +, (sizetype) stride1_19(D)}_2, +, 1}_3
Creating dr for *_30
analyze_innermost: success.
	base_address: pix2_15 + (sizetype) pretmp_203
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix2_15
	Access function 0: {{0B, +, (sizetype) stride2_26(D)}_2, +, 1}_3
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:447:9: note: analyze in outer-loop: *(pix1_54 + (sizetype) pretmp_202)
common/pixel.c:447:9: note: failed: evolution of base is not affine.
common/pixel.c:447:9: note: bad data references.

Analyzing loop at common/pixel.c:448
common/pixel.c:448:13: note: ===== analyze_loop_nest =====
common/pixel.c:448:13: note: === vect_analyze_loop_form ===
common/pixel.c:448:13: note: === get_loop_niters ===
common/pixel.c:448:13: note: === vect_analyze_data_refs ===
Creating dr for *_23
analyze_innermost: success.
	base_address: pix1_54 + (sizetype) pretmp_202
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix1_54 + (sizetype) pretmp_202
	Access function 0: {0B, +, 1}_3
Creating dr for *_30
analyze_innermost: success.
	base_address: pix2_15 + (sizetype) pretmp_203
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix2_15 + (sizetype) pretmp_203
	Access function 0: {0B, +, 1}_3
common/pixel.c:448:13: note: got vectype for stmt: _24 = *_23;
const vector(16) unsigned char
common/pixel.c:448:13: note: got vectype for stmt: _31 = *_30;
const vector(16) unsigned char
common/pixel.c:448:13: note: === vect_analyze_scalar_cycles ===
common/pixel.c:448:13: note: Analyze phi: x_66 = PHI <x_46(3), 0(7)>

common/pixel.c:448:13: note: Access function of PHI: {0, +, 1}_3
common/pixel.c:448:13: note: step: 1,  init: 0
common/pixel.c:448:13: note: Detected induction.
common/pixel.c:448:13: note: Analyze phi: s1_61 = PHI <s1_34(3), s1_60(7)>

common/pixel.c:448:13: note: Access function of PHI: {s1_60, +, a.6_33}_3
common/pixel.c:448:13: note: step: a.6_33,  init: s1_60
common/pixel.c:448:13: note: step unknown.
common/pixel.c:448:13: note: Analyze phi: s2_59 = PHI <s2_36(3), s2_56(7)>

common/pixel.c:448:13: note: Access function of PHI: {s2_56, +, b.7_35}_3
common/pixel.c:448:13: note: step: b.7_35,  init: s2_56
common/pixel.c:448:13: note: step unknown.
common/pixel.c:448:13: note: Analyze phi: ss_55 = PHI <ss_42(3), ss_94(7)>

common/pixel.c:448:13: note: Access function of PHI: {ss_94, +, _72}_3
common/pixel.c:448:13: note: step: _72,  init: ss_94
common/pixel.c:448:13: note: step unknown.
common/pixel.c:448:13: note: Analyze phi: s12_95 = PHI <s12_45(3), s12_96(7)>

common/pixel.c:448:13: note: Access function of PHI: {s12_96, +, _44}_3
common/pixel.c:448:13: note: step: _44,  init: s12_96
common/pixel.c:448:13: note: step unknown.
common/pixel.c:448:13: note: Analyze phi: ivtmp_183 = PHI <ivtmp_182(3), 4(7)>

common/pixel.c:448:13: note: Access function of PHI: {4, +, 4294967295}_3
common/pixel.c:448:13: note: step: 4294967295,  init: 4
common/pixel.c:448:13: note: Detected induction.
common/pixel.c:448:13: note: Analyze phi: s12_95 = PHI <s12_45(3), s12_96(7)>

common/pixel.c:448:13: note: detected reduction: s12_45 = _44 + s12_95;

common/pixel.c:448:13: note: Detected reduction.
common/pixel.c:448:13: note: Analyze phi: ss_55 = PHI <ss_42(3), ss_94(7)>

common/pixel.c:448:13: note: detected reduction: need to swap operands: ss_42 = ss_55 + _72;

common/pixel.c:448:13: note: Detected reduction.
common/pixel.c:448:13: note: Analyze phi: s2_59 = PHI <s2_36(3), s2_56(7)>

common/pixel.c:448:13: note: detected reduction: s2_36 = b.7_35 + s2_59;

common/pixel.c:448:13: note: Detected reduction.
common/pixel.c:448:13: note: Analyze phi: s1_61 = PHI <s1_34(3), s1_60(7)>

common/pixel.c:448:13: note: detected reduction: s1_34 = a.6_33 + s1_61;

common/pixel.c:448:13: note: Detected reduction.
common/pixel.c:448:13: note: === vect_pattern_recog ===
common/pixel.c:448:13: note: vect_is_simple_use: operand a.6_33
common/pixel.c:448:13: note: def_stmt: a.6_33 = (unsigned int) _24;
common/pixel.c:448:13: note: type of def: 3.
common/pixel.c:448:13: note: vect_is_simple_use: operand _24
common/pixel.c:448:13: note: def_stmt: _24 = *_23;
common/pixel.c:448:13: note: type of def: 3.
common/pixel.c:448:13: note: vect_recog_widen_sum_pattern: detected: patt_177 = _24 w+ s1_61;

common/pixel.c:448:13: note: vect_is_simple_use: operand a.6_33
common/pixel.c:448:13: note: def_stmt: a.6_33 = (unsigned int) _24;
common/pixel.c:448:13: note: type of def: 3.
common/pixel.c:448:13: note: vect_is_simple_use: operand _24
common/pixel.c:448:13: note: def_stmt: _24 = *_23;
common/pixel.c:448:13: note: type of def: 3.
common/pixel.c:448:13: note: vect_is_simple_use: operand a.6_33
common/pixel.c:448:13: note: def_stmt: a.6_33 = (unsigned int) _24;
common/pixel.c:448:13: note: type of def: 3.
common/pixel.c:448:13: note: vect_is_simple_use: operand _24
common/pixel.c:448:13: note: def_stmt: _24 = *_23;
common/pixel.c:448:13: note: type of def: 3.
common/pixel.c:448:13: note: vect_is_simple_use: operand b.7_35
common/pixel.c:448:13: note: def_stmt: b.7_35 = (unsigned int) _31;
common/pixel.c:448:13: note: type of def: 3.
common/pixel.c:448:13: note: vect_is_simple_use: operand _31
common/pixel.c:448:13: note: def_stmt: _31 = *_30;
common/pixel.c:448:13: note: type of def: 3.
common/pixel.c:448:13: note: vect_recog_widen_sum_pattern: detected: patt_176 = _31 w+ s2_59;

common/pixel.c:448:13: note: vect_is_simple_use: operand b.7_35
common/pixel.c:448:13: note: def_stmt: b.7_35 = (unsigned int) _31;
common/pixel.c:448:13: note: type of def: 3.
common/pixel.c:448:13: note: vect_is_simple_use: operand _31
common/pixel.c:448:13: note: def_stmt: _31 = *_30;
common/pixel.c:448:13: note: type of def: 3.
common/pixel.c:448:13: note: vect_is_simple_use: operand b.7_35
common/pixel.c:448:13: note: def_stmt: b.7_35 = (unsigned int) _31;
common/pixel.c:448:13: note: type of def: 3.
common/pixel.c:448:13: note: vect_is_simple_use: operand _31
common/pixel.c:448:13: note: def_stmt: _31 = *_30;
common/pixel.c:448:13: note: type of def: 3.
common/pixel.c:448:13: note: vect_is_simple_use: operand a_25
common/pixel.c:448:13: note: def_stmt: a_25 = (int) _24;
common/pixel.c:448:13: note: type of def: 3.
common/pixel.c:448:13: note: vect_is_simple_use: operand _24
common/pixel.c:448:13: note: def_stmt: _24 = *_23;
common/pixel.c:448:13: note: type of def: 3.
common/pixel.c:448:13: note: vect_is_simple_use: operand a_25
common/pixel.c:448:13: note: def_stmt: a_25 = (int) _24;
common/pixel.c:448:13: note: type of def: 3.
common/pixel.c:448:13: note: vect_is_simple_use: operand _24
common/pixel.c:448:13: note: def_stmt: _24 = *_23;
common/pixel.c:448:13: note: type of def: 3.
common/pixel.c:448:13: note: vect_recog_widen_mult_pattern: detected:
common/pixel.c:448:13: note: patt_174 = (unsigned int) patt_175;
common/pixel.c:448:13: note: pattern recognized: patt_174 = (unsigned int) patt_175;
common/pixel.c:448:13: note: vect_is_simple_use: operand b_32
common/pixel.c:448:13: note: def_stmt: b_32 = (int) _31;
common/pixel.c:448:13: note: type of def: 3.
common/pixel.c:448:13: note: vect_is_simple_use: operand _31
common/pixel.c:448:13: note: def_stmt: _31 = *_30;
common/pixel.c:448:13: note: type of def: 3.
common/pixel.c:448:13: note: vect_is_simple_use: operand b_32
common/pixel.c:448:13: note: def_stmt: b_32 = (int) _31;
common/pixel.c:448:13: note: type of def: 3.
common/pixel.c:448:13: note: vect_is_simple_use: operand _31
common/pixel.c:448:13: note: def_stmt: _31 = *_30;
common/pixel.c:448:13: note: type of def: 3.
common/pixel.c:448:13: note: vect_recog_widen_mult_pattern: detected:
common/pixel.c:448:13: note: patt_172 = (unsigned int) patt_173;
common/pixel.c:448:13: note: pattern recognized: patt_172 = (unsigned int) patt_173;
common/pixel.c:448:13: note: vect_is_simple_use: operand _72
common/pixel.c:448:13: note: def_stmt: _72 = _38 + _41;
common/pixel.c:448:13: note: type of def: 3.
common/pixel.c:448:13: note: vect_is_simple_use: operand _72
common/pixel.c:448:13: note: def_stmt: _72 = _38 + _41;
common/pixel.c:448:13: note: type of def: 3.
common/pixel.c:448:13: note: vect_is_simple_use: operand _72
common/pixel.c:448:13: note: def_stmt: _72 = _38 + _41;
common/pixel.c:448:13: note: type of def: 3.
common/pixel.c:448:13: note: vect_is_simple_use: operand a_25
common/pixel.c:448:13: note: def_stmt: a_25 = (int) _24;
common/pixel.c:448:13: note: type of def: 3.
common/pixel.c:448:13: note: vect_is_simple_use: operand _24
common/pixel.c:448:13: note: def_stmt: _24 = *_23;
common/pixel.c:448:13: note: type of def: 3.
common/pixel.c:448:13: note: vect_is_simple_use: operand b_32
common/pixel.c:448:13: note: def_stmt: b_32 = (int) _31;
common/pixel.c:448:13: note: type of def: 3.
common/pixel.c:448:13: note: vect_is_simple_use: operand _31
common/pixel.c:448:13: note: def_stmt: _31 = *_30;
common/pixel.c:448:13: note: type of def: 3.
common/pixel.c:448:13: note: vect_recog_widen_mult_pattern: detected:
common/pixel.c:448:13: note: patt_170 = (unsigned int) patt_171;
common/pixel.c:448:13: note: pattern recognized: patt_170 = (unsigned int) patt_171;
common/pixel.c:448:13: note: vect_is_simple_use: operand _44
common/pixel.c:448:13: note: def_stmt: _44 = (unsigned int) _43;
common/pixel.c:448:13: note: type of def: 3.
common/pixel.c:448:13: note: vect_is_simple_use: operand _44
common/pixel.c:448:13: note: def_stmt: _44 = (unsigned int) _43;
common/pixel.c:448:13: note: type of def: 3.
common/pixel.c:448:13: note: vect_is_simple_use: operand _44
common/pixel.c:448:13: note: def_stmt: _44 = (unsigned int) _43;
common/pixel.c:448:13: note: type of def: 3.
common/pixel.c:448:13: note: vect_is_simple_use: operand _43
common/pixel.c:448:13: note: def_stmt: _43 = a_25 * b_32;
common/pixel.c:448:13: note: type of def: 3.
common/pixel.c:448:13: note: === vect_analyze_data_ref_accesses ===
common/pixel.c:448:13: note: === vect_mark_stmts_to_be_vectorized ===
common/pixel.c:448:13: note: init: phi relevant? x_66 = PHI <x_46(3), 0(7)>
common/pixel.c:448:13: note: init: phi relevant? s1_61 = PHI <s1_34(3), s1_60(7)>
common/pixel.c:448:13: note: init: phi relevant? s2_59 = PHI <s2_36(3), s2_56(7)>
common/pixel.c:448:13: note: init: phi relevant? ss_55 = PHI <ss_42(3), ss_94(7)>
common/pixel.c:448:13: note: init: phi relevant? s12_95 = PHI <s12_45(3), s12_96(7)>
common/pixel.c:448:13: note: init: phi relevant? ivtmp_183 = PHI <ivtmp_182(3), 4(7)>
common/pixel.c:448:13: note: init: stmt relevant? # DEBUG s12 => s12_95
common/pixel.c:448:13: note: init: stmt relevant? # DEBUG ss => ss_55
common/pixel.c:448:13: note: init: stmt relevant? # DEBUG s2 => s2_59
common/pixel.c:448:13: note: init: stmt relevant? # DEBUG s1 => s1_61
common/pixel.c:448:13: note: init: stmt relevant? # DEBUG x => x_66
common/pixel.c:448:13: note: init: stmt relevant? _21 = x_66 + pretmp_202;
common/pixel.c:448:13: note: init: stmt relevant? _22 = (sizetype) _21;
common/pixel.c:448:13: note: init: stmt relevant? _23 = pix1_54 + _22;
common/pixel.c:448:13: note: init: stmt relevant? _24 = *_23;
common/pixel.c:448:13: note: init: stmt relevant? a_25 = (int) _24;
common/pixel.c:448:13: note: init: stmt relevant? # DEBUG a => a_25
common/pixel.c:448:13: note: init: stmt relevant? _28 = x_66 + pretmp_203;
common/pixel.c:448:13: note: init: stmt relevant? _29 = (sizetype) _28;
common/pixel.c:448:13: note: init: stmt relevant? _30 = pix2_15 + _29;
common/pixel.c:448:13: note: init: stmt relevant? _31 = *_30;
common/pixel.c:448:13: note: init: stmt relevant? b_32 = (int) _31;
common/pixel.c:448:13: note: init: stmt relevant? # DEBUG b => b_32
common/pixel.c:448:13: note: init: stmt relevant? a.6_33 = (unsigned int) _24;
common/pixel.c:448:13: note: init: stmt relevant? s1_34 = a.6_33 + s1_61;
common/pixel.c:448:13: note: vec_stmt_relevant_p: used out of loop.
common/pixel.c:448:13: note: mark relevant 0, live 1.
common/pixel.c:448:13: note: init: stmt relevant? # DEBUG s1 => s1_34
common/pixel.c:448:13: note: init: stmt relevant? b.7_35 = (unsigned int) _31;
common/pixel.c:448:13: note: init: stmt relevant? s2_36 = b.7_35 + s2_59;
common/pixel.c:448:13: note: vec_stmt_relevant_p: used out of loop.
common/pixel.c:448:13: note: mark relevant 0, live 1.
common/pixel.c:448:13: note: init: stmt relevant? # DEBUG s2 => s2_36
common/pixel.c:448:13: note: init: stmt relevant? _37 = a_25 * a_25;
common/pixel.c:448:13: note: init: stmt relevant? _38 = (unsigned int) _37;
common/pixel.c:448:13: note: init: stmt relevant? # DEBUG ss => ss_55 + _38
common/pixel.c:448:13: note: init: stmt relevant? _40 = b_32 * b_32;
common/pixel.c:448:13: note: init: stmt relevant? _41 = (unsigned int) _40;
common/pixel.c:448:13: note: init: stmt relevant? _72 = _38 + _41;
common/pixel.c:448:13: note: init: stmt relevant? ss_42 = _72 + ss_55;
common/pixel.c:448:13: note: vec_stmt_relevant_p: used out of loop.
common/pixel.c:448:13: note: mark relevant 0, live 1.
common/pixel.c:448:13: note: init: stmt relevant? # DEBUG ss => ss_42
common/pixel.c:448:13: note: init: stmt relevant? _43 = a_25 * b_32;
common/pixel.c:448:13: note: init: stmt relevant? _44 = (unsigned int) _43;
common/pixel.c:448:13: note: init: stmt relevant? s12_45 = _44 + s12_95;
common/pixel.c:448:13: note: vec_stmt_relevant_p: used out of loop.
common/pixel.c:448:13: note: mark relevant 0, live 1.
common/pixel.c:448:13: note: init: stmt relevant? # DEBUG s12 => s12_45
common/pixel.c:448:13: note: init: stmt relevant? x_46 = x_66 + 1;
common/pixel.c:448:13: note: init: stmt relevant? # DEBUG x => x_46
common/pixel.c:448:13: note: init: stmt relevant? # DEBUG s12 => s12_45
common/pixel.c:448:13: note: init: stmt relevant? # DEBUG ss => ss_42
common/pixel.c:448:13: note: init: stmt relevant? # DEBUG s2 => s2_36
common/pixel.c:448:13: note: init: stmt relevant? # DEBUG s1 => s1_34
common/pixel.c:448:13: note: init: stmt relevant? # DEBUG x => x_46
common/pixel.c:448:13: note: init: stmt relevant? ivtmp_182 = ivtmp_183 - 1;
common/pixel.c:448:13: note: init: stmt relevant? if (ivtmp_182 != 0)
common/pixel.c:448:13: note: worklist: examine stmt: s12_45 = _44 + s12_95;
common/pixel.c:448:13: note: vect_is_simple_use: operand _44
common/pixel.c:448:13: note: def_stmt: _44 = (unsigned int) _43;
common/pixel.c:448:13: note: type of def: 3.
common/pixel.c:448:13: note: mark relevant 3, live 0.
common/pixel.c:448:13: note: last stmt in pattern. don't mark relevant/live.
common/pixel.c:448:13: note: vect_is_simple_use: operand s12_95
common/pixel.c:448:13: note: def_stmt: s12_95 = PHI <s12_45(3), s12_96(7)>
common/pixel.c:448:13: note: type of def: 5.
common/pixel.c:448:13: note: mark relevant 3, live 0.
common/pixel.c:448:13: note: worklist: examine stmt: s12_95 = PHI <s12_45(3), s12_96(7)>
common/pixel.c:448:13: note: vect_is_simple_use: operand s12_45
common/pixel.c:448:13: note: def_stmt: s12_45 = _44 + s12_95;
common/pixel.c:448:13: note: type of def: 5.
common/pixel.c:448:13: note: reduc-stmt defining reduc-phi in the same nest.
common/pixel.c:448:13: note: vect_is_simple_use: operand s12_96
common/pixel.c:448:13: note: def_stmt: s12_96 = PHI <s12_185(6), 0(10)>
common/pixel.c:448:13: note: type of def: 2.
common/pixel.c:448:13: note: def_stmt is out of loop.
common/pixel.c:448:13: note: worklist: examine stmt: patt_170 = (unsigned int) patt_171;
common/pixel.c:448:13: note: vect_is_simple_use: operand patt_171
common/pixel.c:448:13: note: def_stmt: patt_171 = _24 w* _31;
common/pixel.c:448:13: note: type of def: 3.
common/pixel.c:448:13: note: mark relevant 3, live 0.
common/pixel.c:448:13: note: worklist: examine stmt: patt_171 = _24 w* _31;
common/pixel.c:448:13: note: vect_is_simple_use: operand _24
common/pixel.c:448:13: note: def_stmt: _24 = *_23;
common/pixel.c:448:13: note: type of def: 3.
common/pixel.c:448:13: note: mark relevant 3, live 0.
common/pixel.c:448:13: note: vect_is_simple_use: operand _31
common/pixel.c:448:13: note: def_stmt: _31 = *_30;
common/pixel.c:448:13: note: type of def: 3.
common/pixel.c:448:13: note: mark relevant 3, live 0.
common/pixel.c:448:13: note: worklist: examine stmt: _31 = *_30;
common/pixel.c:448:13: note: worklist: examine stmt: _24 = *_23;
common/pixel.c:448:13: note: worklist: examine stmt: ss_42 = _72 + ss_55;
common/pixel.c:448:13: note: vect_is_simple_use: operand ss_55
common/pixel.c:448:13: note: def_stmt: ss_55 = PHI <ss_42(3), ss_94(7)>
common/pixel.c:448:13: note: type of def: 5.
common/pixel.c:448:13: note: mark relevant 3, live 0.
common/pixel.c:448:13: note: vect_is_simple_use: operand _72
common/pixel.c:448:13: note: def_stmt: _72 = _38 + _41;
common/pixel.c:448:13: note: type of def: 3.
common/pixel.c:448:13: note: mark relevant 3, live 0.
common/pixel.c:448:13: note: worklist: examine stmt: _72 = _38 + _41;
common/pixel.c:448:13: note: vect_is_simple_use: operand _38
common/pixel.c:448:13: note: def_stmt: _38 = (unsigned int) _37;
common/pixel.c:448:13: note: type of def: 3.
common/pixel.c:448:13: note: mark relevant 3, live 0.
common/pixel.c:448:13: note: last stmt in pattern. don't mark relevant/live.
common/pixel.c:448:13: note: vect_is_simple_use: operand _41
common/pixel.c:448:13: note: def_stmt: _41 = (unsigned int) _40;
common/pixel.c:448:13: note: type of def: 3.
common/pixel.c:448:13: note: mark relevant 3, live 0.
common/pixel.c:448:13: note: last stmt in pattern. don't mark relevant/live.
common/pixel.c:448:13: note: worklist: examine stmt: patt_172 = (unsigned int) patt_173;
common/pixel.c:448:13: note: vect_is_simple_use: operand patt_173
common/pixel.c:448:13: note: def_stmt: patt_173 = _31 w* _31;
common/pixel.c:448:13: note: type of def: 3.
common/pixel.c:448:13: note: mark relevant 3, live 0.
common/pixel.c:448:13: note: worklist: examine stmt: patt_173 = _31 w* _31;
common/pixel.c:448:13: note: vect_is_simple_use: operand _31
common/pixel.c:448:13: note: def_stmt: _31 = *_30;
common/pixel.c:448:13: note: type of def: 3.
common/pixel.c:448:13: note: mark relevant 3, live 0.
common/pixel.c:448:13: note: already marked relevant/live.
common/pixel.c:448:13: note: vect_is_simple_use: operand _31
common/pixel.c:448:13: note: def_stmt: _31 = *_30;
common/pixel.c:448:13: note: type of def: 3.
common/pixel.c:448:13: note: mark relevant 3, live 0.
common/pixel.c:448:13: note: already marked relevant/live.
common/pixel.c:448:13: note: worklist: examine stmt: patt_174 = (unsigned int) patt_175;
common/pixel.c:448:13: note: vect_is_simple_use: operand patt_175
common/pixel.c:448:13: note: def_stmt: patt_175 = _24 w* _24;
common/pixel.c:448:13: note: type of def: 3.
common/pixel.c:448:13: note: mark relevant 3, live 0.
common/pixel.c:448:13: note: worklist: examine stmt: patt_175 = _24 w* _24;
common/pixel.c:448:13: note: vect_is_simple_use: operand _24
common/pixel.c:448:13: note: def_stmt: _24 = *_23;
common/pixel.c:448:13: note: type of def: 3.
common/pixel.c:448:13: note: mark relevant 3, live 0.
common/pixel.c:448:13: note: already marked relevant/live.
common/pixel.c:448:13: note: vect_is_simple_use: operand _24
common/pixel.c:448:13: note: def_stmt: _24 = *_23;
common/pixel.c:448:13: note: type of def: 3.
common/pixel.c:448:13: note: mark relevant 3, live 0.
common/pixel.c:448:13: note: already marked relevant/live.
common/pixel.c:448:13: note: worklist: examine stmt: ss_55 = PHI <ss_42(3), ss_94(7)>
common/pixel.c:448:13: note: vect_is_simple_use: operand ss_42
common/pixel.c:448:13: note: def_stmt: ss_42 = _72 + ss_55;
common/pixel.c:448:13: note: type of def: 5.
common/pixel.c:448:13: note: reduc-stmt defining reduc-phi in the same nest.
common/pixel.c:448:13: note: vect_is_simple_use: operand ss_94
common/pixel.c:448:13: note: def_stmt: ss_94 = PHI <ss_187(6), 0(10)>
common/pixel.c:448:13: note: type of def: 2.
common/pixel.c:448:13: note: def_stmt is out of loop.
common/pixel.c:448:13: note: worklist: examine stmt: s2_36 = b.7_35 + s2_59;
common/pixel.c:448:13: note: vect_is_simple_use: operand b.7_35
common/pixel.c:448:13: note: def_stmt: b.7_35 = (unsigned int) _31;
common/pixel.c:448:13: note: type of def: 3.
common/pixel.c:448:13: note: mark relevant 3, live 0.
common/pixel.c:448:13: note: vect_is_simple_use: operand s2_59
common/pixel.c:448:13: note: def_stmt: s2_59 = PHI <s2_36(3), s2_56(7)>
common/pixel.c:448:13: note: type of def: 5.
common/pixel.c:448:13: note: mark relevant 3, live 0.
common/pixel.c:448:13: note: worklist: examine stmt: s2_59 = PHI <s2_36(3), s2_56(7)>
common/pixel.c:448:13: note: vect_is_simple_use: operand s2_36
common/pixel.c:448:13: note: def_stmt: s2_36 = b.7_35 + s2_59;
common/pixel.c:448:13: note: type of def: 5.
common/pixel.c:448:13: note: reduc-stmt defining reduc-phi in the same nest.
common/pixel.c:448:13: note: vect_is_simple_use: operand s2_56
common/pixel.c:448:13: note: def_stmt: s2_56 = PHI <s2_189(6), 0(10)>
common/pixel.c:448:13: note: type of def: 2.
common/pixel.c:448:13: note: def_stmt is out of loop.
common/pixel.c:448:13: note: worklist: examine stmt: b.7_35 = (unsigned int) _31;
common/pixel.c:448:13: note: vect_is_simple_use: operand _31
common/pixel.c:448:13: note: def_stmt: _31 = *_30;
common/pixel.c:448:13: note: type of def: 3.
common/pixel.c:448:13: note: mark relevant 3, live 0.
common/pixel.c:448:13: note: already marked relevant/live.
common/pixel.c:448:13: note: worklist: examine stmt: s1_34 = a.6_33 + s1_61;
common/pixel.c:448:13: note: vect_is_simple_use: operand a.6_33
common/pixel.c:448:13: note: def_stmt: a.6_33 = (unsigned int) _24;
common/pixel.c:448:13: note: type of def: 3.
common/pixel.c:448:13: note: mark relevant 3, live 0.
common/pixel.c:448:13: note: vect_is_simple_use: operand s1_61
common/pixel.c:448:13: note: def_stmt: s1_61 = PHI <s1_34(3), s1_60(7)>
common/pixel.c:448:13: note: type of def: 5.
common/pixel.c:448:13: note: mark relevant 3, live 0.
common/pixel.c:448:13: note: worklist: examine stmt: s1_61 = PHI <s1_34(3), s1_60(7)>
common/pixel.c:448:13: note: vect_is_simple_use: operand s1_34
common/pixel.c:448:13: note: def_stmt: s1_34 = a.6_33 + s1_61;
common/pixel.c:448:13: note: type of def: 5.
common/pixel.c:448:13: note: reduc-stmt defining reduc-phi in the same nest.
common/pixel.c:448:13: note: vect_is_simple_use: operand s1_60
common/pixel.c:448:13: note: def_stmt: s1_60 = PHI <s1_191(6), 0(10)>
common/pixel.c:448:13: note: type of def: 2.
common/pixel.c:448:13: note: def_stmt is out of loop.
common/pixel.c:448:13: note: worklist: examine stmt: a.6_33 = (unsigned int) _24;
common/pixel.c:448:13: note: vect_is_simple_use: operand _24
common/pixel.c:448:13: note: def_stmt: _24 = *_23;
common/pixel.c:448:13: note: type of def: 3.
common/pixel.c:448:13: note: mark relevant 3, live 0.
common/pixel.c:448:13: note: already marked relevant/live.
common/pixel.c:448:13: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _24 = *_23;
  stmt_b: _31 = *_30;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _24 = *_23;
  stmt_b: _24 = *_23;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_3)
  (chrec_b = {0B, +, 1}_3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _31 = *_30;
  stmt_b: _31 = *_30;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_3)
  (chrec_b = {0B, +, 1}_3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/pixel.c:448:13: note: === vect_determine_vectorization_factor ===
common/pixel.c:448:13: note: ==> examining phi: x_66 = PHI <x_46(3), 0(7)>

common/pixel.c:448:13: note: ==> examining phi: s1_61 = PHI <s1_34(3), s1_60(7)>

common/pixel.c:448:13: note: get vectype for scalar type:  uint32_t
common/pixel.c:448:13: note: vectype: vector(4) unsigned int
common/pixel.c:448:13: note: nunits = 4
common/pixel.c:448:13: note: ==> examining phi: s2_59 = PHI <s2_36(3), s2_56(7)>

common/pixel.c:448:13: note: get vectype for scalar type:  uint32_t
common/pixel.c:448:13: note: vectype: vector(4) unsigned int
common/pixel.c:448:13: note: nunits = 4
common/pixel.c:448:13: note: ==> examining phi: ss_55 = PHI <ss_42(3), ss_94(7)>

common/pixel.c:448:13: note: get vectype for scalar type:  uint32_t
common/pixel.c:448:13: note: vectype: vector(4) unsigned int
common/pixel.c:448:13: note: nunits = 4
common/pixel.c:448:13: note: ==> examining phi: s12_95 = PHI <s12_45(3), s12_96(7)>

common/pixel.c:448:13: note: get vectype for scalar type:  uint32_t
common/pixel.c:448:13: note: vectype: vector(4) unsigned int
common/pixel.c:448:13: note: nunits = 4
common/pixel.c:448:13: note: ==> examining phi: ivtmp_183 = PHI <ivtmp_182(3), 4(7)>

common/pixel.c:448:13: note: ==> examining statement: # DEBUG s12 => s12_95

common/pixel.c:448:13: note: skip.
common/pixel.c:448:13: note: ==> examining statement: # DEBUG ss => ss_55

common/pixel.c:448:13: note: skip.
common/pixel.c:448:13: note: ==> examining statement: # DEBUG s2 => s2_59

common/pixel.c:448:13: note: skip.
common/pixel.c:448:13: note: ==> examining statement: # DEBUG s1 => s1_61

common/pixel.c:448:13: note: skip.
common/pixel.c:448:13: note: ==> examining statement: # DEBUG x => x_66

common/pixel.c:448:13: note: skip.
common/pixel.c:448:13: note: ==> examining statement: _21 = x_66 + pretmp_202;

common/pixel.c:448:13: note: skip.
common/pixel.c:448:13: note: ==> examining statement: _22 = (sizetype) _21;

common/pixel.c:448:13: note: skip.
common/pixel.c:448:13: note: ==> examining statement: _23 = pix1_54 + _22;

common/pixel.c:448:13: note: skip.
common/pixel.c:448:13: note: ==> examining statement: _24 = *_23;

common/pixel.c:448:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:448:13: note: vectype: vector(16) unsigned char
common/pixel.c:448:13: note: nunits = 16
common/pixel.c:448:13: note: ==> examining statement: a_25 = (int) _24;

common/pixel.c:448:13: note: skip.
common/pixel.c:448:13: note: ==> examining statement: # DEBUG a => a_25

common/pixel.c:448:13: note: skip.
common/pixel.c:448:13: note: ==> examining statement: _28 = x_66 + pretmp_203;

common/pixel.c:448:13: note: skip.
common/pixel.c:448:13: note: ==> examining statement: _29 = (sizetype) _28;

common/pixel.c:448:13: note: skip.
common/pixel.c:448:13: note: ==> examining statement: _30 = pix2_15 + _29;

common/pixel.c:448:13: note: skip.
common/pixel.c:448:13: note: ==> examining statement: _31 = *_30;

common/pixel.c:448:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:448:13: note: vectype: vector(16) unsigned char
common/pixel.c:448:13: note: nunits = 16
common/pixel.c:448:13: note: ==> examining statement: b_32 = (int) _31;

common/pixel.c:448:13: note: skip.
common/pixel.c:448:13: note: ==> examining statement: # DEBUG b => b_32

common/pixel.c:448:13: note: skip.
common/pixel.c:448:13: note: ==> examining statement: a.6_33 = (unsigned int) _24;

common/pixel.c:448:13: note: get vectype for scalar type:  unsigned int
common/pixel.c:448:13: note: vectype: vector(4) unsigned int
common/pixel.c:448:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:448:13: note: vectype: vector(16) unsigned char
common/pixel.c:448:13: note: nunits = 16
common/pixel.c:448:13: note: ==> examining statement: s1_34 = a.6_33 + s1_61;

common/pixel.c:448:13: note: get vectype for scalar type:  uint32_t
common/pixel.c:448:13: note: vectype: vector(4) unsigned int
common/pixel.c:448:13: note: get vectype for scalar type:  uint32_t
common/pixel.c:448:13: note: vectype: vector(4) unsigned int
common/pixel.c:448:13: note: nunits = 4
common/pixel.c:448:13: note: ==> examining statement: # DEBUG s1 => s1_34

common/pixel.c:448:13: note: skip.
common/pixel.c:448:13: note: ==> examining statement: b.7_35 = (unsigned int) _31;

common/pixel.c:448:13: note: get vectype for scalar type:  unsigned int
common/pixel.c:448:13: note: vectype: vector(4) unsigned int
common/pixel.c:448:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:448:13: note: vectype: vector(16) unsigned char
common/pixel.c:448:13: note: nunits = 16
common/pixel.c:448:13: note: ==> examining statement: s2_36 = b.7_35 + s2_59;

common/pixel.c:448:13: note: get vectype for scalar type:  uint32_t
common/pixel.c:448:13: note: vectype: vector(4) unsigned int
common/pixel.c:448:13: note: get vectype for scalar type:  uint32_t
common/pixel.c:448:13: note: vectype: vector(4) unsigned int
common/pixel.c:448:13: note: nunits = 4
common/pixel.c:448:13: note: ==> examining statement: # DEBUG s2 => s2_36

common/pixel.c:448:13: note: skip.
common/pixel.c:448:13: note: ==> examining statement: _37 = a_25 * a_25;

common/pixel.c:448:13: note: skip.
common/pixel.c:448:13: note: ==> examining statement: _38 = (unsigned int) _37;

common/pixel.c:448:13: note: ==> examining pattern statement: patt_174 = (unsigned int) patt_175;

common/pixel.c:448:13: note: ==> examining pattern def stmt: patt_175 = _24 w* _24;

common/pixel.c:448:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:448:13: note: vectype: vector(16) unsigned char
common/pixel.c:448:13: note: nunits = 16
common/pixel.c:448:13: note: ==> examining statement: _38 = (unsigned int) _37;

common/pixel.c:448:13: note: ==> examining pattern statement: patt_174 = (unsigned int) patt_175;

common/pixel.c:448:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:448:13: note: vectype: vector(8) unsigned short
common/pixel.c:448:13: note: nunits = 8
common/pixel.c:448:13: note: ==> examining statement: # DEBUG ss => ss_55 + _38

common/pixel.c:448:13: note: skip.
common/pixel.c:448:13: note: ==> examining statement: _40 = b_32 * b_32;

common/pixel.c:448:13: note: skip.
common/pixel.c:448:13: note: ==> examining statement: _41 = (unsigned int) _40;

common/pixel.c:448:13: note: ==> examining pattern statement: patt_172 = (unsigned int) patt_173;

common/pixel.c:448:13: note: ==> examining pattern def stmt: patt_173 = _31 w* _31;

common/pixel.c:448:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:448:13: note: vectype: vector(16) unsigned char
common/pixel.c:448:13: note: nunits = 16
common/pixel.c:448:13: note: ==> examining statement: _41 = (unsigned int) _40;

common/pixel.c:448:13: note: ==> examining pattern statement: patt_172 = (unsigned int) patt_173;

common/pixel.c:448:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:448:13: note: vectype: vector(8) unsigned short
common/pixel.c:448:13: note: nunits = 8
common/pixel.c:448:13: note: ==> examining statement: _72 = _38 + _41;

common/pixel.c:448:13: note: get vectype for scalar type:  unsigned int
common/pixel.c:448:13: note: vectype: vector(4) unsigned int
common/pixel.c:448:13: note: get vectype for scalar type:  unsigned int
common/pixel.c:448:13: note: vectype: vector(4) unsigned int
common/pixel.c:448:13: note: nunits = 4
common/pixel.c:448:13: note: ==> examining statement: ss_42 = _72 + ss_55;

common/pixel.c:448:13: note: get vectype for scalar type:  uint32_t
common/pixel.c:448:13: note: vectype: vector(4) unsigned int
common/pixel.c:448:13: note: get vectype for scalar type:  uint32_t
common/pixel.c:448:13: note: vectype: vector(4) unsigned int
common/pixel.c:448:13: note: nunits = 4
common/pixel.c:448:13: note: ==> examining statement: # DEBUG ss => ss_42

common/pixel.c:448:13: note: skip.
common/pixel.c:448:13: note: ==> examining statement: _43 = a_25 * b_32;

common/pixel.c:448:13: note: skip.
common/pixel.c:448:13: note: ==> examining statement: _44 = (unsigned int) _43;

common/pixel.c:448:13: note: ==> examining pattern statement: patt_170 = (unsigned int) patt_171;

common/pixel.c:448:13: note: ==> examining pattern def stmt: patt_171 = _24 w* _31;

common/pixel.c:448:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:448:13: note: vectype: vector(16) unsigned char
common/pixel.c:448:13: note: nunits = 16
common/pixel.c:448:13: note: ==> examining statement: _44 = (unsigned int) _43;

common/pixel.c:448:13: note: ==> examining pattern statement: patt_170 = (unsigned int) patt_171;

common/pixel.c:448:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:448:13: note: vectype: vector(8) unsigned short
common/pixel.c:448:13: note: nunits = 8
common/pixel.c:448:13: note: ==> examining statement: s12_45 = _44 + s12_95;

common/pixel.c:448:13: note: get vectype for scalar type:  uint32_t
common/pixel.c:448:13: note: vectype: vector(4) unsigned int
common/pixel.c:448:13: note: get vectype for scalar type:  uint32_t
common/pixel.c:448:13: note: vectype: vector(4) unsigned int
common/pixel.c:448:13: note: nunits = 4
common/pixel.c:448:13: note: ==> examining statement: # DEBUG s12 => s12_45

common/pixel.c:448:13: note: skip.
common/pixel.c:448:13: note: ==> examining statement: x_46 = x_66 + 1;

common/pixel.c:448:13: note: skip.
common/pixel.c:448:13: note: ==> examining statement: # DEBUG x => x_46

common/pixel.c:448:13: note: skip.
common/pixel.c:448:13: note: ==> examining statement: # DEBUG s12 => s12_45

common/pixel.c:448:13: note: skip.
common/pixel.c:448:13: note: ==> examining statement: # DEBUG ss => ss_42

common/pixel.c:448:13: note: skip.
common/pixel.c:448:13: note: ==> examining statement: # DEBUG s2 => s2_36

common/pixel.c:448:13: note: skip.
common/pixel.c:448:13: note: ==> examining statement: # DEBUG s1 => s1_34

common/pixel.c:448:13: note: skip.
common/pixel.c:448:13: note: ==> examining statement: # DEBUG x => x_46

common/pixel.c:448:13: note: skip.
common/pixel.c:448:13: note: ==> examining statement: ivtmp_182 = ivtmp_183 - 1;

common/pixel.c:448:13: note: skip.
common/pixel.c:448:13: note: ==> examining statement: if (ivtmp_182 != 0)

common/pixel.c:448:13: note: skip.
common/pixel.c:448:13: note: vectorization factor = 16
common/pixel.c:448:13: note: === vect_analyze_data_refs_alignment ===
common/pixel.c:448:13: note: vect_compute_data_ref_alignment:
common/pixel.c:448:13: note: can't force alignment of ref: *_23
common/pixel.c:448:13: note: vect_compute_data_ref_alignment:
common/pixel.c:448:13: note: can't force alignment of ref: *_30
common/pixel.c:448:13: note: === vect_prune_runtime_alias_test_list ===
common/pixel.c:448:13: note: === vect_enhance_data_refs_alignment ===
common/pixel.c:448:13: note: Unknown misalignment, is_packed = 0
common/pixel.c:448:13: note: Unknown misalignment, is_packed = 0
common/pixel.c:448:13: note: vect_can_advance_ivs_p:
common/pixel.c:448:13: note: Analyze phi: x_66 = PHI <x_46(3), 0(7)>

common/pixel.c:448:13: note: Analyze phi: s1_61 = PHI <s1_34(3), s1_60(7)>

common/pixel.c:448:13: note: reduc phi. skip.
common/pixel.c:448:13: note: Analyze phi: s2_59 = PHI <s2_36(3), s2_56(7)>

common/pixel.c:448:13: note: reduc phi. skip.
common/pixel.c:448:13: note: Analyze phi: ss_55 = PHI <ss_42(3), ss_94(7)>

common/pixel.c:448:13: note: reduc phi. skip.
common/pixel.c:448:13: note: Analyze phi: s12_95 = PHI <s12_45(3), s12_96(7)>

common/pixel.c:448:13: note: reduc phi. skip.
common/pixel.c:448:13: note: Analyze phi: ivtmp_183 = PHI <ivtmp_182(3), 4(7)>

common/pixel.c:448:13: note: Vectorizing an unaligned access.
common/pixel.c:448:13: note: Vectorizing an unaligned access.
common/pixel.c:448:13: note: === vect_analyze_slp ===
common/pixel.c:448:13: note: Build SLP for s12_45 = _44 + s12_95;

common/pixel.c:448:13: note: Build SLP for ss_42 = _72 + ss_55;

common/pixel.c:448:13: note: Build SLP for s2_36 = b.7_35 + s2_59;

common/pixel.c:448:13: note: Build SLP for s1_34 = a.6_33 + s1_61;

common/pixel.c:448:13: note: vect_is_simple_use: operand _44
common/pixel.c:448:13: note: def_stmt: _44 = (unsigned int) _43;
common/pixel.c:448:13: note: type of def: 3.
common/pixel.c:448:13: note: vect_is_simple_use: operand s12_95
common/pixel.c:448:13: note: def_stmt: s12_95 = PHI <s12_45(3), s12_96(7)>
common/pixel.c:448:13: note: type of def: 5.
common/pixel.c:448:13: note: vect_is_simple_use: operand _72
common/pixel.c:448:13: note: def_stmt: _72 = _38 + _41;
common/pixel.c:448:13: note: type of def: 3.
common/pixel.c:448:13: note: vect_is_simple_use: operand ss_55
common/pixel.c:448:13: note: def_stmt: ss_55 = PHI <ss_42(3), ss_94(7)>
common/pixel.c:448:13: note: type of def: 5.
common/pixel.c:448:13: note: vect_is_simple_use: operand b.7_35
common/pixel.c:448:13: note: def_stmt: b.7_35 = (unsigned int) _31;
common/pixel.c:448:13: note: type of def: 3.
common/pixel.c:448:13: note: vect_is_simple_use: operand s2_59
common/pixel.c:448:13: note: def_stmt: s2_59 = PHI <s2_36(3), s2_56(7)>
common/pixel.c:448:13: note: type of def: 5.
common/pixel.c:448:13: note: vect_is_simple_use: operand a.6_33
common/pixel.c:448:13: note: def_stmt: a.6_33 = (unsigned int) _24;
common/pixel.c:448:13: note: type of def: 3.
common/pixel.c:448:13: note: vect_is_simple_use: operand s1_61
common/pixel.c:448:13: note: def_stmt: s1_61 = PHI <s1_34(3), s1_60(7)>
common/pixel.c:448:13: note: type of def: 5.
common/pixel.c:448:13: note: Build SLP for patt_170 = (unsigned int) patt_171;

common/pixel.c:448:13: note: Build SLP for _72 = _38 + _41;

common/pixel.c:448:13: note: Build SLP failed: different operation in stmt _72 = _38 + _41;

common/pixel.c:448:13: note: Build SLP for b.7_35 = (unsigned int) _31;

common/pixel.c:448:13: note: Build SLP for a.6_33 = (unsigned int) _24;

common/pixel.c:448:13: note: === vect_make_slp_decision ===
common/pixel.c:448:13: note: === vect_detect_hybrid_slp ===
common/pixel.c:448:13: note: === vect_analyze_loop_operations ===
common/pixel.c:448:13: note: examining phi: x_66 = PHI <x_46(3), 0(7)>

common/pixel.c:448:13: note: examining phi: s1_61 = PHI <s1_34(3), s1_60(7)>

common/pixel.c:448:13: note: examining phi: s2_59 = PHI <s2_36(3), s2_56(7)>

common/pixel.c:448:13: note: examining phi: ss_55 = PHI <ss_42(3), ss_94(7)>

common/pixel.c:448:13: note: examining phi: s12_95 = PHI <s12_45(3), s12_96(7)>

common/pixel.c:448:13: note: examining phi: ivtmp_183 = PHI <ivtmp_182(3), 4(7)>

common/pixel.c:448:13: note: ==> examining statement: # DEBUG s12 => s12_95
common/pixel.c:448:13: note: irrelevant.
common/pixel.c:448:13: note: ==> examining statement: # DEBUG ss => ss_55
common/pixel.c:448:13: note: irrelevant.
common/pixel.c:448:13: note: ==> examining statement: # DEBUG s2 => s2_59
common/pixel.c:448:13: note: irrelevant.
common/pixel.c:448:13: note: ==> examining statement: # DEBUG s1 => s1_61
common/pixel.c:448:13: note: irrelevant.
common/pixel.c:448:13: note: ==> examining statement: # DEBUG x => x_66
common/pixel.c:448:13: note: irrelevant.
common/pixel.c:448:13: note: ==> examining statement: _21 = x_66 + pretmp_202;
common/pixel.c:448:13: note: irrelevant.
common/pixel.c:448:13: note: ==> examining statement: _22 = (sizetype) _21;
common/pixel.c:448:13: note: irrelevant.
common/pixel.c:448:13: note: ==> examining statement: _23 = pix1_54 + _22;
common/pixel.c:448:13: note: irrelevant.
common/pixel.c:448:13: note: ==> examining statement: _24 = *_23;
common/pixel.c:448:13: note: vect_is_simple_use: operand *_23
common/pixel.c:448:13: note: not ssa-name.
common/pixel.c:448:13: note: use not simple.
common/pixel.c:448:13: note: vect_is_simple_use: operand *_23
common/pixel.c:448:13: note: not ssa-name.
common/pixel.c:448:13: note: use not simple.
common/pixel.c:448:13: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:448:13: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:448:13: note: ==> examining statement: a_25 = (int) _24;
common/pixel.c:448:13: note: irrelevant.
common/pixel.c:448:13: note: ==> examining statement: # DEBUG a => a_25
common/pixel.c:448:13: note: irrelevant.
common/pixel.c:448:13: note: ==> examining statement: _28 = x_66 + pretmp_203;
common/pixel.c:448:13: note: irrelevant.
common/pixel.c:448:13: note: ==> examining statement: _29 = (sizetype) _28;
common/pixel.c:448:13: note: irrelevant.
common/pixel.c:448:13: note: ==> examining statement: _30 = pix2_15 + _29;
common/pixel.c:448:13: note: irrelevant.
common/pixel.c:448:13: note: ==> examining statement: _31 = *_30;
common/pixel.c:448:13: note: vect_is_simple_use: operand *_30
common/pixel.c:448:13: note: not ssa-name.
common/pixel.c:448:13: note: use not simple.
common/pixel.c:448:13: note: vect_is_simple_use: operand *_30
common/pixel.c:448:13: note: not ssa-name.
common/pixel.c:448:13: note: use not simple.
common/pixel.c:448:13: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:448:13: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:448:13: note: ==> examining statement: b_32 = (int) _31;
common/pixel.c:448:13: note: irrelevant.
common/pixel.c:448:13: note: ==> examining statement: # DEBUG b => b_32
common/pixel.c:448:13: note: irrelevant.
common/pixel.c:448:13: note: ==> examining statement: a.6_33 = (unsigned int) _24;
common/pixel.c:448:13: note: vect_is_simple_use: operand _24
common/pixel.c:448:13: note: def_stmt: _24 = *_23;
common/pixel.c:448:13: note: type of def: 3.
common/pixel.c:448:13: note: === vectorizable_conversion ===
common/pixel.c:448:13: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:448:13: note: ==> examining statement: s1_34 = a.6_33 + s1_61;
common/pixel.c:448:13: note: vect_is_simple_use: operand a.6_33
common/pixel.c:448:13: note: def_stmt: a.6_33 = (unsigned int) _24;
common/pixel.c:448:13: note: type of def: 3.
common/pixel.c:448:13: note: vect_is_simple_use: operand s1_61
common/pixel.c:448:13: note: def_stmt: s1_61 = PHI <s1_34(3), s1_60(7)>
common/pixel.c:448:13: note: type of def: 5.
common/pixel.c:448:13: note: detected reduction: s1_34 = a.6_33 + s1_61;

common/pixel.c:448:13: note: reduc op not supported by target.
vect_model_reduction_cost: inside_cost = 4, prologue_cost = 1, epilogue_cost = 5 .
common/pixel.c:448:13: note: ==> examining statement: # DEBUG s1 => s1_34
common/pixel.c:448:13: note: irrelevant.
common/pixel.c:448:13: note: ==> examining statement: b.7_35 = (unsigned int) _31;
common/pixel.c:448:13: note: vect_is_simple_use: operand _31
common/pixel.c:448:13: note: def_stmt: _31 = *_30;
common/pixel.c:448:13: note: type of def: 3.
common/pixel.c:448:13: note: === vectorizable_conversion ===
common/pixel.c:448:13: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:448:13: note: ==> examining statement: s2_36 = b.7_35 + s2_59;
common/pixel.c:448:13: note: vect_is_simple_use: operand b.7_35
common/pixel.c:448:13: note: def_stmt: b.7_35 = (unsigned int) _31;
common/pixel.c:448:13: note: type of def: 3.
common/pixel.c:448:13: note: vect_is_simple_use: operand s2_59
common/pixel.c:448:13: note: def_stmt: s2_59 = PHI <s2_36(3), s2_56(7)>
common/pixel.c:448:13: note: type of def: 5.
common/pixel.c:448:13: note: detected reduction: s2_36 = b.7_35 + s2_59;

common/pixel.c:448:13: note: reduc op not supported by target.
vect_model_reduction_cost: inside_cost = 4, prologue_cost = 1, epilogue_cost = 5 .
common/pixel.c:448:13: note: ==> examining statement: # DEBUG s2 => s2_36
common/pixel.c:448:13: note: irrelevant.
common/pixel.c:448:13: note: ==> examining statement: _37 = a_25 * a_25;
common/pixel.c:448:13: note: irrelevant.
common/pixel.c:448:13: note: ==> examining statement: _38 = (unsigned int) _37;
common/pixel.c:448:13: note: ==> examining pattern statement: patt_174 = (unsigned int) patt_175;
common/pixel.c:448:13: note: ==> examining pattern def statement: patt_175 = _24 w* _24;
common/pixel.c:448:13: note: ==> examining statement: patt_175 = _24 w* _24;
common/pixel.c:448:13: note: vect_is_simple_use: operand _24
common/pixel.c:448:13: note: def_stmt: _24 = *_23;
common/pixel.c:448:13: note: type of def: 3.
common/pixel.c:448:13: note: vect_is_simple_use: operand _24
common/pixel.c:448:13: note: def_stmt: _24 = *_23;
common/pixel.c:448:13: note: type of def: 3.
common/pixel.c:448:13: note: === vectorizable_conversion ===
common/pixel.c:448:13: note: vect_model_promotion_demotion_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:448:13: note: vect_is_simple_use: operand patt_175
common/pixel.c:448:13: note: def_stmt: patt_175 = _24 w* _24;
common/pixel.c:448:13: note: type of def: 3.
common/pixel.c:448:13: note: === vectorizable_conversion ===
common/pixel.c:448:13: note: vect_model_promotion_demotion_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:448:13: note: ==> examining statement: # DEBUG ss => ss_55 + _38
common/pixel.c:448:13: note: irrelevant.
common/pixel.c:448:13: note: ==> examining statement: _40 = b_32 * b_32;
common/pixel.c:448:13: note: irrelevant.
common/pixel.c:448:13: note: ==> examining statement: _41 = (unsigned int) _40;
common/pixel.c:448:13: note: ==> examining pattern statement: patt_172 = (unsigned int) patt_173;
common/pixel.c:448:13: note: ==> examining pattern def statement: patt_173 = _31 w* _31;
common/pixel.c:448:13: note: ==> examining statement: patt_173 = _31 w* _31;
common/pixel.c:448:13: note: vect_is_simple_use: operand _31
common/pixel.c:448:13: note: def_stmt: _31 = *_30;
common/pixel.c:448:13: note: type of def: 3.
common/pixel.c:448:13: note: vect_is_simple_use: operand _31
common/pixel.c:448:13: note: def_stmt: _31 = *_30;
common/pixel.c:448:13: note: type of def: 3.
common/pixel.c:448:13: note: === vectorizable_conversion ===
common/pixel.c:448:13: note: vect_model_promotion_demotion_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:448:13: note: vect_is_simple_use: operand patt_173
common/pixel.c:448:13: note: def_stmt: patt_173 = _31 w* _31;
common/pixel.c:448:13: note: type of def: 3.
common/pixel.c:448:13: note: === vectorizable_conversion ===
common/pixel.c:448:13: note: vect_model_promotion_demotion_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:448:13: note: ==> examining statement: _72 = _38 + _41;
common/pixel.c:448:13: note: vect_is_simple_use: operand _38
common/pixel.c:448:13: note: def_stmt: _38 = (unsigned int) _37;
common/pixel.c:448:13: note: type of def: 3.
common/pixel.c:448:13: note: vect_is_simple_use: operand _41
common/pixel.c:448:13: note: def_stmt: _41 = (unsigned int) _40;
common/pixel.c:448:13: note: type of def: 3.
common/pixel.c:448:13: note: === vectorizable_operation ===
common/pixel.c:448:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:448:13: note: ==> examining statement: ss_42 = _72 + ss_55;
common/pixel.c:448:13: note: vect_is_simple_use: operand _72
common/pixel.c:448:13: note: def_stmt: _72 = _38 + _41;
common/pixel.c:448:13: note: type of def: 3.
common/pixel.c:448:13: note: vect_is_simple_use: operand ss_55
common/pixel.c:448:13: note: def_stmt: ss_55 = PHI <ss_42(3), ss_94(7)>
common/pixel.c:448:13: note: type of def: 5.
common/pixel.c:448:13: note: detected reduction: ss_42 = _72 + ss_55;

common/pixel.c:448:13: note: reduc op not supported by target.
vect_model_reduction_cost: inside_cost = 4, prologue_cost = 1, epilogue_cost = 5 .
common/pixel.c:448:13: note: ==> examining statement: # DEBUG ss => ss_42
common/pixel.c:448:13: note: irrelevant.
common/pixel.c:448:13: note: ==> examining statement: _43 = a_25 * b_32;
common/pixel.c:448:13: note: irrelevant.
common/pixel.c:448:13: note: ==> examining statement: _44 = (unsigned int) _43;
common/pixel.c:448:13: note: ==> examining pattern statement: patt_170 = (unsigned int) patt_171;
common/pixel.c:448:13: note: ==> examining pattern def statement: patt_171 = _24 w* _31;
common/pixel.c:448:13: note: ==> examining statement: patt_171 = _24 w* _31;
common/pixel.c:448:13: note: vect_is_simple_use: operand _24
common/pixel.c:448:13: note: def_stmt: _24 = *_23;
common/pixel.c:448:13: note: type of def: 3.
common/pixel.c:448:13: note: vect_is_simple_use: operand _31
common/pixel.c:448:13: note: def_stmt: _31 = *_30;
common/pixel.c:448:13: note: type of def: 3.
common/pixel.c:448:13: note: === vectorizable_conversion ===
common/pixel.c:448:13: note: vect_model_promotion_demotion_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:448:13: note: vect_is_simple_use: operand patt_171
common/pixel.c:448:13: note: def_stmt: patt_171 = _24 w* _31;
common/pixel.c:448:13: note: type of def: 3.
common/pixel.c:448:13: note: === vectorizable_conversion ===
common/pixel.c:448:13: note: vect_model_promotion_demotion_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:448:13: note: ==> examining statement: s12_45 = _44 + s12_95;
common/pixel.c:448:13: note: vect_is_simple_use: operand _44
common/pixel.c:448:13: note: def_stmt: _44 = (unsigned int) _43;
common/pixel.c:448:13: note: type of def: 3.
common/pixel.c:448:13: note: vect_is_simple_use: operand s12_95
common/pixel.c:448:13: note: def_stmt: s12_95 = PHI <s12_45(3), s12_96(7)>
common/pixel.c:448:13: note: type of def: 5.
common/pixel.c:448:13: note: detected reduction: s12_45 = _44 + s12_95;

common/pixel.c:448:13: note: reduc op not supported by target.
vect_model_reduction_cost: inside_cost = 4, prologue_cost = 1, epilogue_cost = 5 .
common/pixel.c:448:13: note: ==> examining statement: # DEBUG s12 => s12_45
common/pixel.c:448:13: note: irrelevant.
common/pixel.c:448:13: note: ==> examining statement: x_46 = x_66 + 1;
common/pixel.c:448:13: note: irrelevant.
common/pixel.c:448:13: note: ==> examining statement: # DEBUG x => x_46
common/pixel.c:448:13: note: irrelevant.
common/pixel.c:448:13: note: ==> examining statement: # DEBUG s12 => s12_45
common/pixel.c:448:13: note: irrelevant.
common/pixel.c:448:13: note: ==> examining statement: # DEBUG ss => ss_42
common/pixel.c:448:13: note: irrelevant.
common/pixel.c:448:13: note: ==> examining statement: # DEBUG s2 => s2_36
common/pixel.c:448:13: note: irrelevant.
common/pixel.c:448:13: note: ==> examining statement: # DEBUG s1 => s1_34
common/pixel.c:448:13: note: irrelevant.
common/pixel.c:448:13: note: ==> examining statement: # DEBUG x => x_46
common/pixel.c:448:13: note: irrelevant.
common/pixel.c:448:13: note: ==> examining statement: ivtmp_182 = ivtmp_183 - 1;
common/pixel.c:448:13: note: irrelevant.
common/pixel.c:448:13: note: ==> examining statement: if (ivtmp_182 != 0)
common/pixel.c:448:13: note: irrelevant.
common/pixel.c:448:13: note: vectorization_factor = 16, niters = 4
common/pixel.c:448:13: note: not vectorized: iteration count too small.
common/pixel.c:448:13: note: not vectorized: iteration count smaller than vectorization factor.
common/pixel.c:448:13: note: bad operation or unsupported loop bound.
common/pixel.c:439:13: note: vectorized 0 loops in function.
ssim_4x4x2_core (const uint8_t * pix1, int stride1, const uint8_t * pix2, int stride2, int[4] * sums)
{
  int b;
  int a;
  uint32_t s12;
  uint32_t ss;
  uint32_t s2;
  uint32_t s1;
  int z;
  int y;
  int x;
  int _21;
  sizetype _22;
  const uint8_t * _23;
  unsigned char _24;
  int _28;
  sizetype _29;
  const uint8_t * _30;
  unsigned char _31;
  unsigned int a.6_33;
  unsigned int b.7_35;
  int _37;
  unsigned int _38;
  int _40;
  unsigned int _41;
  int _43;
  unsigned int _44;
  long unsigned int _48;
  long unsigned int _49;
  int[4] * _51;
  int s1.8_52;
  int s2.9_57;
  int ss.10_62;
  int s12.11_67;
  unsigned int _72;
  unsigned short patt_171;
  unsigned short patt_173;
  unsigned short patt_175;
  unsigned int patt_176;
  unsigned int patt_177;
  unsigned int ivtmp_178;
  unsigned int ivtmp_179;
  unsigned int ivtmp_180;
  unsigned int ivtmp_181;
  unsigned int ivtmp_182;
  unsigned int ivtmp_183;
  int pretmp_202;
  int pretmp_203;

  <bb 2>:
  # DEBUG z => 0
  # DEBUG z => 0
  # DEBUG pix2 => pix2_17(D)
  # DEBUG pix1 => pix1_16(D)
  goto <bb 10>;

  <bb 3>:

  <bb 4>:
  # x_66 = PHI <x_46(3), 0(7)>
  # s1_61 = PHI <s1_34(3), s1_60(7)>
  # s2_59 = PHI <s2_36(3), s2_56(7)>
  # ss_55 = PHI <ss_42(3), ss_94(7)>
  # s12_95 = PHI <s12_45(3), s12_96(7)>
  # ivtmp_183 = PHI <ivtmp_182(3), 4(7)>
  # DEBUG s12 => s12_95
  # DEBUG ss => ss_55
  # DEBUG s2 => s2_59
  # DEBUG s1 => s1_61
  # DEBUG x => x_66
  _21 = x_66 + pretmp_202;
  _22 = (sizetype) _21;
  _23 = pix1_54 + _22;
  _24 = *_23;
  a_25 = (int) _24;
  # DEBUG a => a_25
  _28 = x_66 + pretmp_203;
  _29 = (sizetype) _28;
  _30 = pix2_15 + _29;
  _31 = *_30;
  b_32 = (int) _31;
  # DEBUG b => b_32
  a.6_33 = (unsigned int) _24;
  s1_34 = a.6_33 + s1_61;
  # DEBUG s1 => s1_34
  b.7_35 = (unsigned int) _31;
  s2_36 = b.7_35 + s2_59;
  # DEBUG s2 => s2_36
  _37 = a_25 * a_25;
  _38 = (unsigned int) _37;
  # DEBUG ss => ss_55 + _38
  _40 = b_32 * b_32;
  _41 = (unsigned int) _40;
  _72 = _38 + _41;
  ss_42 = _72 + ss_55;
  # DEBUG ss => ss_42
  _43 = a_25 * b_32;
  _44 = (unsigned int) _43;
  s12_45 = _44 + s12_95;
  # DEBUG s12 => s12_45
  x_46 = x_66 + 1;
  # DEBUG x => x_46
  # DEBUG s12 => s12_45
  # DEBUG ss => ss_42
  # DEBUG s2 => s2_36
  # DEBUG s1 => s1_34
  # DEBUG x => x_46
  ivtmp_182 = ivtmp_183 - 1;
  if (ivtmp_182 != 0)
    goto <bb 3>;
  else
    goto <bb 5>;

  <bb 5>:
  # s1_191 = PHI <s1_34(4)>
  # s2_189 = PHI <s2_36(4)>
  # ss_187 = PHI <ss_42(4)>
  # s12_185 = PHI <s12_45(4)>
  y_47 = y_65 + 1;
  # DEBUG y => y_47
  # DEBUG s12 => s12_185
  # DEBUG ss => ss_187
  # DEBUG s2 => s2_189
  # DEBUG s1 => s1_191
  # DEBUG y => y_47
  ivtmp_180 = ivtmp_181 - 1;
  if (ivtmp_180 != 0)
    goto <bb 6>;
  else
    goto <bb 8>;

  <bb 6>:

  <bb 7>:
  # y_65 = PHI <y_47(6), 0(10)>
  # s1_60 = PHI <s1_191(6), 0(10)>
  # s2_56 = PHI <s2_189(6), 0(10)>
  # ss_94 = PHI <ss_187(6), 0(10)>
  # s12_96 = PHI <s12_185(6), 0(10)>
  # ivtmp_181 = PHI <ivtmp_180(6), 4(10)>
  # DEBUG s12 => s12_96
  # DEBUG ss => ss_94
  # DEBUG s2 => s2_56
  # DEBUG s1 => s1_60
  # DEBUG y => y_65
  # DEBUG s12 => s12_96
  # DEBUG ss => ss_94
  # DEBUG s2 => s2_56
  # DEBUG s1 => s1_60
  # DEBUG x => 0
  pretmp_202 = stride1_19(D) * y_65;
  pretmp_203 = stride2_26(D) * y_65;
  goto <bb 4>;

  <bb 8>:
  # s1_190 = PHI <s1_191(5)>
  # s2_188 = PHI <s2_189(5)>
  # ss_186 = PHI <ss_187(5)>
  # s12_184 = PHI <s12_185(5)>
  _48 = (long unsigned int) z_64;
  _49 = _48 * 16;
  _51 = sums_50(D) + _49;
  s1.8_52 = (int) s1_190;
  *_51[0] = s1.8_52;
  s2.9_57 = (int) s2_188;
  *_51[1] = s2.9_57;
  ss.10_62 = (int) ss_186;
  *_51[2] = ss.10_62;
  s12.11_67 = (int) s12_184;
  *_51[3] = s12.11_67;
  pix1_69 = pix1_54 + 4;
  # DEBUG pix1 => pix1_69
  pix2_70 = pix2_15 + 4;
  # DEBUG pix2 => pix2_70
  z_71 = z_64 + 1;
  # DEBUG z => z_71
  # DEBUG z => z_71
  # DEBUG pix2 => pix2_70
  # DEBUG pix1 => pix1_69
  ivtmp_178 = ivtmp_179 - 1;
  if (ivtmp_178 != 0)
    goto <bb 9>;
  else
    goto <bb 11>;

  <bb 9>:

  <bb 10>:
  # pix1_54 = PHI <pix1_69(9), pix1_16(D)(2)>
  # pix2_15 = PHI <pix2_70(9), pix2_17(D)(2)>
  # z_64 = PHI <z_71(9), 0(2)>
  # ivtmp_179 = PHI <ivtmp_178(9), 2(2)>
  # DEBUG z => z_64
  # DEBUG pix2 => pix2_15
  # DEBUG pix1 => pix1_54
  # DEBUG s12 => 0
  # DEBUG ss => 0
  # DEBUG s2 => 0
  # DEBUG s1 => 0
  # DEBUG y => 0
  goto <bb 7>;

  <bb 11>:
  return;

}



;; Function ssim_end4 (ssim_end4, funcdef_no=232, decl_uid=8729, cgraph_uid=232, symbol_order=275)


Analyzing loop at common/pixel.c:481
common/pixel.c:481:5: note: ===== analyze_loop_nest =====
common/pixel.c:481:5: note: === vect_analyze_loop_form ===
common/pixel.c:481:5: note: === get_loop_niters ===
Analyzing # of iterations of loop 1
  exit condition [1, + , 1](no_overflow) < width_5(D)
  bounds on difference of bases: 0 ... 2147483646
  result:
    # of iterations (unsigned int) width_5(D) + 4294967295, bounded by 2147483646
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:49, generic-match.c:3223
common/pixel.c:481:5: note: Symbolic number of iterations is (unsigned int) width_5(D)
common/pixel.c:481:5: note: === vect_analyze_data_refs ===
Creating dr for *_9[3]
analyze_innermost: success.
	base_address: sum0_8(D)
	offset from base address: 0
	constant offset from base address: 12
	step: 16
	aligned to: 128
	base_object: *sum0_8(D)
	Access function 0: 3
	Access function 1: {0B, +, 16}_1
Creating dr for *_13[3]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:4015
success.
Applying pattern match.pd:49, generic-match.c:4015
	base_address: sum0_8(D)
	offset from base address: 0
	constant offset from base address: 28
	step: 16
	aligned to: 128
	base_object: *sum0_8(D)
	Access function 0: 3
	Access function 1: {16B, +, 16}_1
Creating dr for *_17[3]
analyze_innermost: success.
	base_address: sum1_16(D)
	offset from base address: 0
	constant offset from base address: 12
	step: 16
	aligned to: 128
	base_object: *sum1_16(D)
	Access function 0: 3
	Access function 1: {0B, +, 16}_1
Creating dr for *_20[3]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:4015
success.
Applying pattern match.pd:49, generic-match.c:4015
	base_address: sum1_16(D)
	offset from base address: 0
	constant offset from base address: 28
	step: 16
	aligned to: 128
	base_object: *sum1_16(D)
	Access function 0: 3
	Access function 1: {16B, +, 16}_1
Creating dr for *_9[2]
analyze_innermost: success.
	base_address: sum0_8(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 16
	aligned to: 128
	base_object: *sum0_8(D)
	Access function 0: 2
	Access function 1: {0B, +, 16}_1
Creating dr for *_13[2]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:4015
success.
Applying pattern match.pd:49, generic-match.c:4015
	base_address: sum0_8(D)
	offset from base address: 0
	constant offset from base address: 24
	step: 16
	aligned to: 128
	base_object: *sum0_8(D)
	Access function 0: 2
	Access function 1: {16B, +, 16}_1
Creating dr for *_17[2]
analyze_innermost: success.
	base_address: sum1_16(D)
	offset from base address: 0
	constant offset from base address: 8
	step: 16
	aligned to: 128
	base_object: *sum1_16(D)
	Access function 0: 2
	Access function 1: {0B, +, 16}_1
Creating dr for *_20[2]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:4015
success.
Applying pattern match.pd:49, generic-match.c:4015
	base_address: sum1_16(D)
	offset from base address: 0
	constant offset from base address: 24
	step: 16
	aligned to: 128
	base_object: *sum1_16(D)
	Access function 0: 2
	Access function 1: {16B, +, 16}_1
Creating dr for *_9[1]
analyze_innermost: success.
	base_address: sum0_8(D)
	offset from base address: 0
	constant offset from base address: 4
	step: 16
	aligned to: 128
	base_object: *sum0_8(D)
	Access function 0: 1
	Access function 1: {0B, +, 16}_1
Creating dr for *_13[1]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:4015
success.
Applying pattern match.pd:49, generic-match.c:4015
	base_address: sum0_8(D)
	offset from base address: 0
	constant offset from base address: 20
	step: 16
	aligned to: 128
	base_object: *sum0_8(D)
	Access function 0: 1
	Access function 1: {16B, +, 16}_1
Creating dr for *_17[1]
analyze_innermost: success.
	base_address: sum1_16(D)
	offset from base address: 0
	constant offset from base address: 4
	step: 16
	aligned to: 128
	base_object: *sum1_16(D)
	Access function 0: 1
	Access function 1: {0B, +, 16}_1
Creating dr for *_20[1]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:4015
success.
Applying pattern match.pd:49, generic-match.c:4015
	base_address: sum1_16(D)
	offset from base address: 0
	constant offset from base address: 20
	step: 16
	aligned to: 128
	base_object: *sum1_16(D)
	Access function 0: 1
	Access function 1: {16B, +, 16}_1
Creating dr for *_9[0]
analyze_innermost: success.
	base_address: sum0_8(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 16
	aligned to: 128
	base_object: *sum0_8(D)
	Access function 0: 0
	Access function 1: {0B, +, 16}_1
Creating dr for *_13[0]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:4015
success.
Applying pattern match.pd:49, generic-match.c:4015
	base_address: sum0_8(D)
	offset from base address: 0
	constant offset from base address: 16
	step: 16
	aligned to: 128
	base_object: *sum0_8(D)
	Access function 0: 0
	Access function 1: {16B, +, 16}_1
Creating dr for *_17[0]
analyze_innermost: success.
	base_address: sum1_16(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 16
	aligned to: 128
	base_object: *sum1_16(D)
	Access function 0: 0
	Access function 1: {0B, +, 16}_1
Creating dr for *_20[0]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:4015
success.
Applying pattern match.pd:49, generic-match.c:4015
	base_address: sum1_16(D)
	offset from base address: 0
	constant offset from base address: 16
	step: 16
	aligned to: 128
	base_object: *sum1_16(D)
	Access function 0: 0
	Access function 1: {16B, +, 16}_1
common/pixel.c:481:5: note: got vectype for stmt: _10 = *_9[3];
vector(4) int
common/pixel.c:481:5: note: got vectype for stmt: _14 = *_13[3];
vector(4) int
common/pixel.c:481:5: note: got vectype for stmt: _18 = *_17[3];
vector(4) int
common/pixel.c:481:5: note: got vectype for stmt: _21 = *_20[3];
vector(4) int
common/pixel.c:481:5: note: got vectype for stmt: _23 = *_9[2];
vector(4) int
common/pixel.c:481:5: note: got vectype for stmt: _24 = *_13[2];
vector(4) int
common/pixel.c:481:5: note: got vectype for stmt: _26 = *_17[2];
vector(4) int
common/pixel.c:481:5: note: got vectype for stmt: _28 = *_20[2];
vector(4) int
common/pixel.c:481:5: note: got vectype for stmt: _30 = *_9[1];
vector(4) int
common/pixel.c:481:5: note: got vectype for stmt: _31 = *_13[1];
vector(4) int
common/pixel.c:481:5: note: got vectype for stmt: _33 = *_17[1];
vector(4) int
common/pixel.c:481:5: note: got vectype for stmt: _35 = *_20[1];
vector(4) int
common/pixel.c:481:5: note: got vectype for stmt: _37 = *_9[0];
vector(4) int
common/pixel.c:481:5: note: got vectype for stmt: _38 = *_13[0];
vector(4) int
common/pixel.c:481:5: note: got vectype for stmt: _40 = *_17[0];
vector(4) int
common/pixel.c:481:5: note: got vectype for stmt: _42 = *_20[0];
vector(4) int
common/pixel.c:481:5: note: === vect_analyze_scalar_cycles ===
common/pixel.c:481:5: note: Analyze phi: i_72 = PHI <0(3), i_46(5)>

common/pixel.c:481:5: note: Access function of PHI: {0, +, 1}_1
common/pixel.c:481:5: note: step: 1,  init: 0
common/pixel.c:481:5: note: Detected induction.
common/pixel.c:481:5: note: Analyze phi: ssim_71 = PHI <0.0(3), ssim_45(5)>

common/pixel.c:481:5: note: Access function of PHI: {0.0, +, _69}_1
common/pixel.c:481:5: note: step: _69,  init: 0.0
common/pixel.c:481:5: note: step unknown.
common/pixel.c:481:5: note: Analyze phi: ssim_71 = PHI <0.0(3), ssim_45(5)>

common/pixel.c:481:5: note: detected reduction: ssim_45 = _69 + ssim_71;

common/pixel.c:481:5: note: Detected reduction.
common/pixel.c:481:5: note: === vect_pattern_recog ===
common/pixel.c:481:5: note: vect_is_simple_use: operand _6
common/pixel.c:481:5: note: def_stmt: _6 = (long unsigned int) i_72;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: vect_is_simple_use: operand i_72
common/pixel.c:481:5: note: def_stmt: i_72 = PHI <0(3), i_46(5)>
common/pixel.c:481:5: note: type of def: 4.
common/pixel.c:481:5: note: vect_is_simple_use: operand 16
common/pixel.c:481:5: note: vect_is_simple_use: operand _11
common/pixel.c:481:5: note: def_stmt: _11 = _6 + 1;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: vect_is_simple_use: operand _29
common/pixel.c:481:5: note: def_stmt: _29 = _27 + _28;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: vect_is_simple_use: operand _43
common/pixel.c:481:5: note: def_stmt: _43 = _41 + _42;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: vect_is_simple_use: operand _36
common/pixel.c:481:5: note: def_stmt: _36 = _34 + _35;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: vect_is_simple_use: operand _22
common/pixel.c:481:5: note: def_stmt: _22 = _19 + _21;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: vect_is_simple_use: operand _36
common/pixel.c:481:5: note: def_stmt: _36 = _34 + _35;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: vect_is_simple_use: operand _43
common/pixel.c:481:5: note: def_stmt: _43 = _41 + _42;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: vect_is_simple_use: operand _36
common/pixel.c:481:5: note: def_stmt: _36 = _34 + _35;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: vect_is_simple_use: operand covar_54
common/pixel.c:481:5: note: def_stmt: covar_54 = _52 - _53;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: vect_is_simple_use: operand _58
common/pixel.c:481:5: note: def_stmt: _58 = (float) _57;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: vect_is_simple_use: operand _65
common/pixel.c:481:5: note: def_stmt: _65 = (float) _64;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: vect_is_simple_use: operand _69
common/pixel.c:481:5: note: def_stmt: _69 = _62 / _68;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: vect_is_simple_use: operand _69
common/pixel.c:481:5: note: def_stmt: _69 = _62 / _68;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: vect_is_simple_use: operand _69
common/pixel.c:481:5: note: def_stmt: _69 = _62 / _68;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: === vect_analyze_data_ref_accesses ===
common/pixel.c:481:5: note: Detected interleaving *_9[0] and *_9[1]
common/pixel.c:481:5: note: Detected interleaving *_9[0] and *_9[2]
common/pixel.c:481:5: note: Detected interleaving *_9[0] and *_9[3]
common/pixel.c:481:5: note: Detected interleaving *_13[0] and *_13[1]
common/pixel.c:481:5: note: Detected interleaving *_13[0] and *_13[2]
common/pixel.c:481:5: note: Detected interleaving *_13[0] and *_13[3]
common/pixel.c:481:5: note: Detected interleaving *_17[0] and *_17[1]
common/pixel.c:481:5: note: Detected interleaving *_17[0] and *_17[2]
common/pixel.c:481:5: note: Detected interleaving *_17[0] and *_17[3]
common/pixel.c:481:5: note: Detected interleaving *_20[0] and *_20[1]
common/pixel.c:481:5: note: Detected interleaving *_20[0] and *_20[2]
common/pixel.c:481:5: note: Detected interleaving *_20[0] and *_20[3]
common/pixel.c:481:5: note: Detected interleaving of size 4
common/pixel.c:481:5: note: Detected interleaving of size 4
common/pixel.c:481:5: note: Detected interleaving of size 4
common/pixel.c:481:5: note: Detected interleaving of size 4
common/pixel.c:481:5: note: === vect_mark_stmts_to_be_vectorized ===
common/pixel.c:481:5: note: init: phi relevant? i_72 = PHI <0(3), i_46(5)>
common/pixel.c:481:5: note: init: phi relevant? ssim_71 = PHI <0.0(3), ssim_45(5)>
common/pixel.c:481:5: note: init: stmt relevant? # DEBUG ssim => ssim_71
common/pixel.c:481:5: note: init: stmt relevant? # DEBUG i => i_72
common/pixel.c:481:5: note: init: stmt relevant? _6 = (long unsigned int) i_72;
common/pixel.c:481:5: note: init: stmt relevant? _7 = _6 * 16;
common/pixel.c:481:5: note: init: stmt relevant? _9 = sum0_8(D) + _7;
common/pixel.c:481:5: note: init: stmt relevant? _10 = *_9[3];
common/pixel.c:481:5: note: init: stmt relevant? _11 = _6 + 1;
common/pixel.c:481:5: note: init: stmt relevant? _12 = _11 * 16;
common/pixel.c:481:5: note: init: stmt relevant? _13 = sum0_8(D) + _12;
common/pixel.c:481:5: note: init: stmt relevant? _14 = *_13[3];
common/pixel.c:481:5: note: init: stmt relevant? _15 = _10 + _14;
common/pixel.c:481:5: note: init: stmt relevant? _17 = sum1_16(D) + _7;
common/pixel.c:481:5: note: init: stmt relevant? _18 = *_17[3];
common/pixel.c:481:5: note: init: stmt relevant? _19 = _15 + _18;
common/pixel.c:481:5: note: init: stmt relevant? _20 = sum1_16(D) + _12;
common/pixel.c:481:5: note: init: stmt relevant? _21 = *_20[3];
common/pixel.c:481:5: note: init: stmt relevant? _22 = _19 + _21;
common/pixel.c:481:5: note: init: stmt relevant? _23 = *_9[2];
common/pixel.c:481:5: note: init: stmt relevant? _24 = *_13[2];
common/pixel.c:481:5: note: init: stmt relevant? _25 = _23 + _24;
common/pixel.c:481:5: note: init: stmt relevant? _26 = *_17[2];
common/pixel.c:481:5: note: init: stmt relevant? _27 = _25 + _26;
common/pixel.c:481:5: note: init: stmt relevant? _28 = *_20[2];
common/pixel.c:481:5: note: init: stmt relevant? _29 = _27 + _28;
common/pixel.c:481:5: note: init: stmt relevant? _30 = *_9[1];
common/pixel.c:481:5: note: init: stmt relevant? _31 = *_13[1];
common/pixel.c:481:5: note: init: stmt relevant? _32 = _30 + _31;
common/pixel.c:481:5: note: init: stmt relevant? _33 = *_17[1];
common/pixel.c:481:5: note: init: stmt relevant? _34 = _32 + _33;
common/pixel.c:481:5: note: init: stmt relevant? _35 = *_20[1];
common/pixel.c:481:5: note: init: stmt relevant? _36 = _34 + _35;
common/pixel.c:481:5: note: init: stmt relevant? _37 = *_9[0];
common/pixel.c:481:5: note: init: stmt relevant? _38 = *_13[0];
common/pixel.c:481:5: note: init: stmt relevant? _39 = _37 + _38;
common/pixel.c:481:5: note: init: stmt relevant? _40 = *_17[0];
common/pixel.c:481:5: note: init: stmt relevant? _41 = _39 + _40;
common/pixel.c:481:5: note: init: stmt relevant? _42 = *_20[0];
common/pixel.c:481:5: note: init: stmt relevant? _43 = _41 + _42;
common/pixel.c:481:5: note: init: stmt relevant? # DEBUG s1 => _43
common/pixel.c:481:5: note: init: stmt relevant? # DEBUG s2 => _36
common/pixel.c:481:5: note: init: stmt relevant? # DEBUG ss => _29
common/pixel.c:481:5: note: init: stmt relevant? # DEBUG s12 => _22
common/pixel.c:481:5: note: init: stmt relevant? _47 = _29 * 64;
common/pixel.c:481:5: note: init: stmt relevant? _48 = _43 * _43;
common/pixel.c:481:5: note: init: stmt relevant? _49 = _47 - _48;
common/pixel.c:481:5: note: init: stmt relevant? _50 = _36 * _36;
common/pixel.c:481:5: note: init: stmt relevant? vars_51 = _49 - _50;
common/pixel.c:481:5: note: init: stmt relevant? # DEBUG vars => vars_51
common/pixel.c:481:5: note: init: stmt relevant? _52 = _22 * 64;
common/pixel.c:481:5: note: init: stmt relevant? _53 = _36 * _43;
common/pixel.c:481:5: note: init: stmt relevant? covar_54 = _52 - _53;
common/pixel.c:481:5: note: init: stmt relevant? # DEBUG covar => covar_54
common/pixel.c:481:5: note: init: stmt relevant? _55 = _43 * 2;
common/pixel.c:481:5: note: init: stmt relevant? _56 = _36 * _55;
common/pixel.c:481:5: note: init: stmt relevant? _57 = _56 + 416;
common/pixel.c:481:5: note: init: stmt relevant? _58 = (float) _57;
common/pixel.c:481:5: note: init: stmt relevant? _59 = covar_54 * 2;
common/pixel.c:481:5: note: init: stmt relevant? _60 = _59 + 235963;
common/pixel.c:481:5: note: init: stmt relevant? _61 = (float) _60;
common/pixel.c:481:5: note: init: stmt relevant? _62 = _58 * _61;
common/pixel.c:481:5: note: init: stmt relevant? _63 = _48 + _50;
common/pixel.c:481:5: note: init: stmt relevant? _64 = _63 + 416;
common/pixel.c:481:5: note: init: stmt relevant? _65 = (float) _64;
common/pixel.c:481:5: note: init: stmt relevant? _66 = vars_51 + 235963;
common/pixel.c:481:5: note: init: stmt relevant? _67 = (float) _66;
common/pixel.c:481:5: note: init: stmt relevant? _68 = _65 * _67;
common/pixel.c:481:5: note: init: stmt relevant? _69 = _62 / _68;
common/pixel.c:481:5: note: init: stmt relevant? # DEBUG s1 => NULL
common/pixel.c:481:5: note: init: stmt relevant? # DEBUG s2 => NULL
common/pixel.c:481:5: note: init: stmt relevant? # DEBUG ss => NULL
common/pixel.c:481:5: note: init: stmt relevant? # DEBUG s12 => NULL
common/pixel.c:481:5: note: init: stmt relevant? # DEBUG covar => NULL
common/pixel.c:481:5: note: init: stmt relevant? # DEBUG vars => NULL
common/pixel.c:481:5: note: init: stmt relevant? ssim_45 = _69 + ssim_71;
common/pixel.c:481:5: note: vec_stmt_relevant_p: used out of loop.
common/pixel.c:481:5: note: mark relevant 0, live 1.
common/pixel.c:481:5: note: init: stmt relevant? # DEBUG ssim => ssim_45
common/pixel.c:481:5: note: init: stmt relevant? i_46 = i_72 + 1;
common/pixel.c:481:5: note: init: stmt relevant? # DEBUG i => i_46
common/pixel.c:481:5: note: init: stmt relevant? # DEBUG ssim => ssim_45
common/pixel.c:481:5: note: init: stmt relevant? # DEBUG i => i_46
common/pixel.c:481:5: note: init: stmt relevant? if (width_5(D) > i_46)
common/pixel.c:481:5: note: worklist: examine stmt: ssim_45 = _69 + ssim_71;
common/pixel.c:481:5: note: vect_is_simple_use: operand _69
common/pixel.c:481:5: note: def_stmt: _69 = _62 / _68;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: mark relevant 3, live 0.
common/pixel.c:481:5: note: vect_is_simple_use: operand ssim_71
common/pixel.c:481:5: note: def_stmt: ssim_71 = PHI <0.0(3), ssim_45(5)>
common/pixel.c:481:5: note: type of def: 5.
common/pixel.c:481:5: note: mark relevant 3, live 0.
common/pixel.c:481:5: note: worklist: examine stmt: ssim_71 = PHI <0.0(3), ssim_45(5)>
common/pixel.c:481:5: note: vect_is_simple_use: operand 0.0
common/pixel.c:481:5: note: vect_is_simple_use: operand ssim_45
common/pixel.c:481:5: note: def_stmt: ssim_45 = _69 + ssim_71;
common/pixel.c:481:5: note: type of def: 5.
common/pixel.c:481:5: note: reduc-stmt defining reduc-phi in the same nest.
common/pixel.c:481:5: note: worklist: examine stmt: _69 = _62 / _68;
common/pixel.c:481:5: note: vect_is_simple_use: operand _62
common/pixel.c:481:5: note: def_stmt: _62 = _58 * _61;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: mark relevant 3, live 0.
common/pixel.c:481:5: note: vect_is_simple_use: operand _68
common/pixel.c:481:5: note: def_stmt: _68 = _65 * _67;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: mark relevant 3, live 0.
common/pixel.c:481:5: note: worklist: examine stmt: _68 = _65 * _67;
common/pixel.c:481:5: note: vect_is_simple_use: operand _65
common/pixel.c:481:5: note: def_stmt: _65 = (float) _64;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: mark relevant 3, live 0.
common/pixel.c:481:5: note: vect_is_simple_use: operand _67
common/pixel.c:481:5: note: def_stmt: _67 = (float) _66;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: mark relevant 3, live 0.
common/pixel.c:481:5: note: worklist: examine stmt: _67 = (float) _66;
common/pixel.c:481:5: note: vect_is_simple_use: operand _66
common/pixel.c:481:5: note: def_stmt: _66 = vars_51 + 235963;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: mark relevant 3, live 0.
common/pixel.c:481:5: note: worklist: examine stmt: _66 = vars_51 + 235963;
common/pixel.c:481:5: note: vect_is_simple_use: operand vars_51
common/pixel.c:481:5: note: def_stmt: vars_51 = _49 - _50;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: mark relevant 3, live 0.
common/pixel.c:481:5: note: worklist: examine stmt: vars_51 = _49 - _50;
common/pixel.c:481:5: note: vect_is_simple_use: operand _49
common/pixel.c:481:5: note: def_stmt: _49 = _47 - _48;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: mark relevant 3, live 0.
common/pixel.c:481:5: note: vect_is_simple_use: operand _50
common/pixel.c:481:5: note: def_stmt: _50 = _36 * _36;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: mark relevant 3, live 0.
common/pixel.c:481:5: note: worklist: examine stmt: _50 = _36 * _36;
common/pixel.c:481:5: note: vect_is_simple_use: operand _36
common/pixel.c:481:5: note: def_stmt: _36 = _34 + _35;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: mark relevant 3, live 0.
common/pixel.c:481:5: note: vect_is_simple_use: operand _36
common/pixel.c:481:5: note: def_stmt: _36 = _34 + _35;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: mark relevant 3, live 0.
common/pixel.c:481:5: note: already marked relevant/live.
common/pixel.c:481:5: note: worklist: examine stmt: _36 = _34 + _35;
common/pixel.c:481:5: note: vect_is_simple_use: operand _34
common/pixel.c:481:5: note: def_stmt: _34 = _32 + _33;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: mark relevant 3, live 0.
common/pixel.c:481:5: note: vect_is_simple_use: operand _35
common/pixel.c:481:5: note: def_stmt: _35 = *_20[1];
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: mark relevant 3, live 0.
common/pixel.c:481:5: note: worklist: examine stmt: _35 = *_20[1];
common/pixel.c:481:5: note: worklist: examine stmt: _34 = _32 + _33;
common/pixel.c:481:5: note: vect_is_simple_use: operand _32
common/pixel.c:481:5: note: def_stmt: _32 = _30 + _31;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: mark relevant 3, live 0.
common/pixel.c:481:5: note: vect_is_simple_use: operand _33
common/pixel.c:481:5: note: def_stmt: _33 = *_17[1];
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: mark relevant 3, live 0.
common/pixel.c:481:5: note: worklist: examine stmt: _33 = *_17[1];
common/pixel.c:481:5: note: worklist: examine stmt: _32 = _30 + _31;
common/pixel.c:481:5: note: vect_is_simple_use: operand _30
common/pixel.c:481:5: note: def_stmt: _30 = *_9[1];
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: mark relevant 3, live 0.
common/pixel.c:481:5: note: vect_is_simple_use: operand _31
common/pixel.c:481:5: note: def_stmt: _31 = *_13[1];
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: mark relevant 3, live 0.
common/pixel.c:481:5: note: worklist: examine stmt: _31 = *_13[1];
common/pixel.c:481:5: note: worklist: examine stmt: _30 = *_9[1];
common/pixel.c:481:5: note: worklist: examine stmt: _49 = _47 - _48;
common/pixel.c:481:5: note: vect_is_simple_use: operand _47
common/pixel.c:481:5: note: def_stmt: _47 = _29 * 64;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: mark relevant 3, live 0.
common/pixel.c:481:5: note: vect_is_simple_use: operand _48
common/pixel.c:481:5: note: def_stmt: _48 = _43 * _43;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: mark relevant 3, live 0.
common/pixel.c:481:5: note: worklist: examine stmt: _48 = _43 * _43;
common/pixel.c:481:5: note: vect_is_simple_use: operand _43
common/pixel.c:481:5: note: def_stmt: _43 = _41 + _42;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: mark relevant 3, live 0.
common/pixel.c:481:5: note: vect_is_simple_use: operand _43
common/pixel.c:481:5: note: def_stmt: _43 = _41 + _42;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: mark relevant 3, live 0.
common/pixel.c:481:5: note: already marked relevant/live.
common/pixel.c:481:5: note: worklist: examine stmt: _43 = _41 + _42;
common/pixel.c:481:5: note: vect_is_simple_use: operand _41
common/pixel.c:481:5: note: def_stmt: _41 = _39 + _40;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: mark relevant 3, live 0.
common/pixel.c:481:5: note: vect_is_simple_use: operand _42
common/pixel.c:481:5: note: def_stmt: _42 = *_20[0];
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: mark relevant 3, live 0.
common/pixel.c:481:5: note: worklist: examine stmt: _42 = *_20[0];
common/pixel.c:481:5: note: worklist: examine stmt: _41 = _39 + _40;
common/pixel.c:481:5: note: vect_is_simple_use: operand _39
common/pixel.c:481:5: note: def_stmt: _39 = _37 + _38;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: mark relevant 3, live 0.
common/pixel.c:481:5: note: vect_is_simple_use: operand _40
common/pixel.c:481:5: note: def_stmt: _40 = *_17[0];
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: mark relevant 3, live 0.
common/pixel.c:481:5: note: worklist: examine stmt: _40 = *_17[0];
common/pixel.c:481:5: note: worklist: examine stmt: _39 = _37 + _38;
common/pixel.c:481:5: note: vect_is_simple_use: operand _37
common/pixel.c:481:5: note: def_stmt: _37 = *_9[0];
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: mark relevant 3, live 0.
common/pixel.c:481:5: note: vect_is_simple_use: operand _38
common/pixel.c:481:5: note: def_stmt: _38 = *_13[0];
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: mark relevant 3, live 0.
common/pixel.c:481:5: note: worklist: examine stmt: _38 = *_13[0];
common/pixel.c:481:5: note: worklist: examine stmt: _37 = *_9[0];
common/pixel.c:481:5: note: worklist: examine stmt: _47 = _29 * 64;
common/pixel.c:481:5: note: vect_is_simple_use: operand _29
common/pixel.c:481:5: note: def_stmt: _29 = _27 + _28;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: mark relevant 3, live 0.
common/pixel.c:481:5: note: worklist: examine stmt: _29 = _27 + _28;
common/pixel.c:481:5: note: vect_is_simple_use: operand _27
common/pixel.c:481:5: note: def_stmt: _27 = _25 + _26;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: mark relevant 3, live 0.
common/pixel.c:481:5: note: vect_is_simple_use: operand _28
common/pixel.c:481:5: note: def_stmt: _28 = *_20[2];
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: mark relevant 3, live 0.
common/pixel.c:481:5: note: worklist: examine stmt: _28 = *_20[2];
common/pixel.c:481:5: note: worklist: examine stmt: _27 = _25 + _26;
common/pixel.c:481:5: note: vect_is_simple_use: operand _25
common/pixel.c:481:5: note: def_stmt: _25 = _23 + _24;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: mark relevant 3, live 0.
common/pixel.c:481:5: note: vect_is_simple_use: operand _26
common/pixel.c:481:5: note: def_stmt: _26 = *_17[2];
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: mark relevant 3, live 0.
common/pixel.c:481:5: note: worklist: examine stmt: _26 = *_17[2];
common/pixel.c:481:5: note: worklist: examine stmt: _25 = _23 + _24;
common/pixel.c:481:5: note: vect_is_simple_use: operand _23
common/pixel.c:481:5: note: def_stmt: _23 = *_9[2];
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: mark relevant 3, live 0.
common/pixel.c:481:5: note: vect_is_simple_use: operand _24
common/pixel.c:481:5: note: def_stmt: _24 = *_13[2];
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: mark relevant 3, live 0.
common/pixel.c:481:5: note: worklist: examine stmt: _24 = *_13[2];
common/pixel.c:481:5: note: worklist: examine stmt: _23 = *_9[2];
common/pixel.c:481:5: note: worklist: examine stmt: _65 = (float) _64;
common/pixel.c:481:5: note: vect_is_simple_use: operand _64
common/pixel.c:481:5: note: def_stmt: _64 = _63 + 416;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: mark relevant 3, live 0.
common/pixel.c:481:5: note: worklist: examine stmt: _64 = _63 + 416;
common/pixel.c:481:5: note: vect_is_simple_use: operand _63
common/pixel.c:481:5: note: def_stmt: _63 = _48 + _50;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: mark relevant 3, live 0.
common/pixel.c:481:5: note: worklist: examine stmt: _63 = _48 + _50;
common/pixel.c:481:5: note: vect_is_simple_use: operand _48
common/pixel.c:481:5: note: def_stmt: _48 = _43 * _43;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: mark relevant 3, live 0.
common/pixel.c:481:5: note: already marked relevant/live.
common/pixel.c:481:5: note: vect_is_simple_use: operand _50
common/pixel.c:481:5: note: def_stmt: _50 = _36 * _36;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: mark relevant 3, live 0.
common/pixel.c:481:5: note: already marked relevant/live.
common/pixel.c:481:5: note: worklist: examine stmt: _62 = _58 * _61;
common/pixel.c:481:5: note: vect_is_simple_use: operand _58
common/pixel.c:481:5: note: def_stmt: _58 = (float) _57;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: mark relevant 3, live 0.
common/pixel.c:481:5: note: vect_is_simple_use: operand _61
common/pixel.c:481:5: note: def_stmt: _61 = (float) _60;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: mark relevant 3, live 0.
common/pixel.c:481:5: note: worklist: examine stmt: _61 = (float) _60;
common/pixel.c:481:5: note: vect_is_simple_use: operand _60
common/pixel.c:481:5: note: def_stmt: _60 = _59 + 235963;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: mark relevant 3, live 0.
common/pixel.c:481:5: note: worklist: examine stmt: _60 = _59 + 235963;
common/pixel.c:481:5: note: vect_is_simple_use: operand _59
common/pixel.c:481:5: note: def_stmt: _59 = covar_54 * 2;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: mark relevant 3, live 0.
common/pixel.c:481:5: note: worklist: examine stmt: _59 = covar_54 * 2;
common/pixel.c:481:5: note: vect_is_simple_use: operand covar_54
common/pixel.c:481:5: note: def_stmt: covar_54 = _52 - _53;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: mark relevant 3, live 0.
common/pixel.c:481:5: note: worklist: examine stmt: covar_54 = _52 - _53;
common/pixel.c:481:5: note: vect_is_simple_use: operand _52
common/pixel.c:481:5: note: def_stmt: _52 = _22 * 64;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: mark relevant 3, live 0.
common/pixel.c:481:5: note: vect_is_simple_use: operand _53
common/pixel.c:481:5: note: def_stmt: _53 = _36 * _43;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: mark relevant 3, live 0.
common/pixel.c:481:5: note: worklist: examine stmt: _53 = _36 * _43;
common/pixel.c:481:5: note: vect_is_simple_use: operand _36
common/pixel.c:481:5: note: def_stmt: _36 = _34 + _35;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: mark relevant 3, live 0.
common/pixel.c:481:5: note: already marked relevant/live.
common/pixel.c:481:5: note: vect_is_simple_use: operand _43
common/pixel.c:481:5: note: def_stmt: _43 = _41 + _42;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: mark relevant 3, live 0.
common/pixel.c:481:5: note: already marked relevant/live.
common/pixel.c:481:5: note: worklist: examine stmt: _52 = _22 * 64;
common/pixel.c:481:5: note: vect_is_simple_use: operand _22
common/pixel.c:481:5: note: def_stmt: _22 = _19 + _21;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: mark relevant 3, live 0.
common/pixel.c:481:5: note: worklist: examine stmt: _22 = _19 + _21;
common/pixel.c:481:5: note: vect_is_simple_use: operand _19
common/pixel.c:481:5: note: def_stmt: _19 = _15 + _18;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: mark relevant 3, live 0.
common/pixel.c:481:5: note: vect_is_simple_use: operand _21
common/pixel.c:481:5: note: def_stmt: _21 = *_20[3];
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: mark relevant 3, live 0.
common/pixel.c:481:5: note: worklist: examine stmt: _21 = *_20[3];
common/pixel.c:481:5: note: worklist: examine stmt: _19 = _15 + _18;
common/pixel.c:481:5: note: vect_is_simple_use: operand _15
common/pixel.c:481:5: note: def_stmt: _15 = _10 + _14;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: mark relevant 3, live 0.
common/pixel.c:481:5: note: vect_is_simple_use: operand _18
common/pixel.c:481:5: note: def_stmt: _18 = *_17[3];
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: mark relevant 3, live 0.
common/pixel.c:481:5: note: worklist: examine stmt: _18 = *_17[3];
common/pixel.c:481:5: note: worklist: examine stmt: _15 = _10 + _14;
common/pixel.c:481:5: note: vect_is_simple_use: operand _10
common/pixel.c:481:5: note: def_stmt: _10 = *_9[3];
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: mark relevant 3, live 0.
common/pixel.c:481:5: note: vect_is_simple_use: operand _14
common/pixel.c:481:5: note: def_stmt: _14 = *_13[3];
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: mark relevant 3, live 0.
common/pixel.c:481:5: note: worklist: examine stmt: _14 = *_13[3];
common/pixel.c:481:5: note: worklist: examine stmt: _10 = *_9[3];
common/pixel.c:481:5: note: worklist: examine stmt: _58 = (float) _57;
common/pixel.c:481:5: note: vect_is_simple_use: operand _57
common/pixel.c:481:5: note: def_stmt: _57 = _56 + 416;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: mark relevant 3, live 0.
common/pixel.c:481:5: note: worklist: examine stmt: _57 = _56 + 416;
common/pixel.c:481:5: note: vect_is_simple_use: operand _56
common/pixel.c:481:5: note: def_stmt: _56 = _36 * _55;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: mark relevant 3, live 0.
common/pixel.c:481:5: note: worklist: examine stmt: _56 = _36 * _55;
common/pixel.c:481:5: note: vect_is_simple_use: operand _36
common/pixel.c:481:5: note: def_stmt: _36 = _34 + _35;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: mark relevant 3, live 0.
common/pixel.c:481:5: note: already marked relevant/live.
common/pixel.c:481:5: note: vect_is_simple_use: operand _55
common/pixel.c:481:5: note: def_stmt: _55 = _43 * 2;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: mark relevant 3, live 0.
common/pixel.c:481:5: note: worklist: examine stmt: _55 = _43 * 2;
common/pixel.c:481:5: note: vect_is_simple_use: operand _43
common/pixel.c:481:5: note: def_stmt: _43 = _41 + _42;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: mark relevant 3, live 0.
common/pixel.c:481:5: note: already marked relevant/live.
common/pixel.c:481:5: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _10 = *_9[3];
  stmt_b: _14 = *_13[3];
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 16}_1)
  (chrec_b = {16B, +, 16}_1)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = [1 + 1 * x_1])
  (overlaps_b = [0 + 1 * x_1]))
)
  (overlap_iterations_a = [1 + 1 * x_1])
  (overlap_iterations_b = [0 + 1 * x_1]))
(build_classic_dist_vector
  dist_vector = (  1 
  )
)
)
(compute_affine_dependence
  stmt_a: _10 = *_9[3];
  stmt_b: _18 = *_17[3];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _10 = *_9[3];
  stmt_b: _21 = *_20[3];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _10 = *_9[3];
  stmt_b: _23 = *_9[2];
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _10 = *_9[3];
  stmt_b: _24 = *_13[2];
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _10 = *_9[3];
  stmt_b: _26 = *_17[2];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _10 = *_9[3];
  stmt_b: _28 = *_20[2];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _10 = *_9[3];
  stmt_b: _30 = *_9[1];
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 1)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _10 = *_9[3];
  stmt_b: _31 = *_13[1];
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 1)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _10 = *_9[3];
  stmt_b: _33 = *_17[1];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _10 = *_9[3];
  stmt_b: _35 = *_20[1];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _10 = *_9[3];
  stmt_b: _37 = *_9[0];
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 0)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _10 = *_9[3];
  stmt_b: _38 = *_13[0];
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 0)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _10 = *_9[3];
  stmt_b: _40 = *_17[0];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _10 = *_9[3];
  stmt_b: _42 = *_20[0];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _14 = *_13[3];
  stmt_b: _18 = *_17[3];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _14 = *_13[3];
  stmt_b: _21 = *_20[3];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _14 = *_13[3];
  stmt_b: _23 = *_9[2];
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _14 = *_13[3];
  stmt_b: _24 = *_13[2];
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _14 = *_13[3];
  stmt_b: _26 = *_17[2];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _14 = *_13[3];
  stmt_b: _28 = *_20[2];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _14 = *_13[3];
  stmt_b: _30 = *_9[1];
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 1)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _14 = *_13[3];
  stmt_b: _31 = *_13[1];
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 1)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _14 = *_13[3];
  stmt_b: _33 = *_17[1];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _14 = *_13[3];
  stmt_b: _35 = *_20[1];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _14 = *_13[3];
  stmt_b: _37 = *_9[0];
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 0)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _14 = *_13[3];
  stmt_b: _38 = *_13[0];
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 0)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _14 = *_13[3];
  stmt_b: _40 = *_17[0];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _14 = *_13[3];
  stmt_b: _42 = *_20[0];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _18 = *_17[3];
  stmt_b: _21 = *_20[3];
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 16}_1)
  (chrec_b = {16B, +, 16}_1)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = [1 + 1 * x_1])
  (overlaps_b = [0 + 1 * x_1]))
)
  (overlap_iterations_a = [1 + 1 * x_1])
  (overlap_iterations_b = [0 + 1 * x_1]))
(build_classic_dist_vector
  dist_vector = (  1 
  )
)
)
(compute_affine_dependence
  stmt_a: _18 = *_17[3];
  stmt_b: _23 = *_9[2];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _18 = *_17[3];
  stmt_b: _24 = *_13[2];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _18 = *_17[3];
  stmt_b: _26 = *_17[2];
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _18 = *_17[3];
  stmt_b: _28 = *_20[2];
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _18 = *_17[3];
  stmt_b: _30 = *_9[1];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _18 = *_17[3];
  stmt_b: _31 = *_13[1];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _18 = *_17[3];
  stmt_b: _33 = *_17[1];
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 1)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _18 = *_17[3];
  stmt_b: _35 = *_20[1];
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 1)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _18 = *_17[3];
  stmt_b: _37 = *_9[0];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _18 = *_17[3];
  stmt_b: _38 = *_13[0];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _18 = *_17[3];
  stmt_b: _40 = *_17[0];
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 0)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _18 = *_17[3];
  stmt_b: _42 = *_20[0];
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 0)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _21 = *_20[3];
  stmt_b: _23 = *_9[2];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _21 = *_20[3];
  stmt_b: _24 = *_13[2];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _21 = *_20[3];
  stmt_b: _26 = *_17[2];
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _21 = *_20[3];
  stmt_b: _28 = *_20[2];
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _21 = *_20[3];
  stmt_b: _30 = *_9[1];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _21 = *_20[3];
  stmt_b: _31 = *_13[1];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _21 = *_20[3];
  stmt_b: _33 = *_17[1];
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 1)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _21 = *_20[3];
  stmt_b: _35 = *_20[1];
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 1)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _21 = *_20[3];
  stmt_b: _37 = *_9[0];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _21 = *_20[3];
  stmt_b: _38 = *_13[0];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _21 = *_20[3];
  stmt_b: _40 = *_17[0];
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 0)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _21 = *_20[3];
  stmt_b: _42 = *_20[0];
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 0)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _23 = *_9[2];
  stmt_b: _24 = *_13[2];
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 16}_1)
  (chrec_b = {16B, +, 16}_1)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = [1 + 1 * x_1])
  (overlaps_b = [0 + 1 * x_1]))
)
  (overlap_iterations_a = [1 + 1 * x_1])
  (overlap_iterations_b = [0 + 1 * x_1]))
(build_classic_dist_vector
  dist_vector = (  1 
  )
)
)
(compute_affine_dependence
  stmt_a: _23 = *_9[2];
  stmt_b: _26 = *_17[2];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _23 = *_9[2];
  stmt_b: _28 = *_20[2];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _23 = *_9[2];
  stmt_b: _30 = *_9[1];
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 1)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _23 = *_9[2];
  stmt_b: _31 = *_13[1];
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 1)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _23 = *_9[2];
  stmt_b: _33 = *_17[1];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _23 = *_9[2];
  stmt_b: _35 = *_20[1];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _23 = *_9[2];
  stmt_b: _37 = *_9[0];
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 0)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _23 = *_9[2];
  stmt_b: _38 = *_13[0];
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 0)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _23 = *_9[2];
  stmt_b: _40 = *_17[0];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _23 = *_9[2];
  stmt_b: _42 = *_20[0];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _24 = *_13[2];
  stmt_b: _26 = *_17[2];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _24 = *_13[2];
  stmt_b: _28 = *_20[2];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _24 = *_13[2];
  stmt_b: _30 = *_9[1];
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 1)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _24 = *_13[2];
  stmt_b: _31 = *_13[1];
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 1)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _24 = *_13[2];
  stmt_b: _33 = *_17[1];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _24 = *_13[2];
  stmt_b: _35 = *_20[1];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _24 = *_13[2];
  stmt_b: _37 = *_9[0];
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 0)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _24 = *_13[2];
  stmt_b: _38 = *_13[0];
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 0)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _24 = *_13[2];
  stmt_b: _40 = *_17[0];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _24 = *_13[2];
  stmt_b: _42 = *_20[0];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _26 = *_17[2];
  stmt_b: _28 = *_20[2];
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 16}_1)
  (chrec_b = {16B, +, 16}_1)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = [1 + 1 * x_1])
  (overlaps_b = [0 + 1 * x_1]))
)
  (overlap_iterations_a = [1 + 1 * x_1])
  (overlap_iterations_b = [0 + 1 * x_1]))
(build_classic_dist_vector
  dist_vector = (  1 
  )
)
)
(compute_affine_dependence
  stmt_a: _26 = *_17[2];
  stmt_b: _30 = *_9[1];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _26 = *_17[2];
  stmt_b: _31 = *_13[1];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _26 = *_17[2];
  stmt_b: _33 = *_17[1];
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 1)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _26 = *_17[2];
  stmt_b: _35 = *_20[1];
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 1)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _26 = *_17[2];
  stmt_b: _37 = *_9[0];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _26 = *_17[2];
  stmt_b: _38 = *_13[0];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _26 = *_17[2];
  stmt_b: _40 = *_17[0];
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 0)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _26 = *_17[2];
  stmt_b: _42 = *_20[0];
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 0)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _28 = *_20[2];
  stmt_b: _30 = *_9[1];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _28 = *_20[2];
  stmt_b: _31 = *_13[1];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _28 = *_20[2];
  stmt_b: _33 = *_17[1];
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 1)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _28 = *_20[2];
  stmt_b: _35 = *_20[1];
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 1)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _28 = *_20[2];
  stmt_b: _37 = *_9[0];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _28 = *_20[2];
  stmt_b: _38 = *_13[0];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _28 = *_20[2];
  stmt_b: _40 = *_17[0];
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 0)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _28 = *_20[2];
  stmt_b: _42 = *_20[0];
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 0)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _30 = *_9[1];
  stmt_b: _31 = *_13[1];
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 16}_1)
  (chrec_b = {16B, +, 16}_1)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = [1 + 1 * x_1])
  (overlaps_b = [0 + 1 * x_1]))
)
  (overlap_iterations_a = [1 + 1 * x_1])
  (overlap_iterations_b = [0 + 1 * x_1]))
(build_classic_dist_vector
  dist_vector = (  1 
  )
)
)
(compute_affine_dependence
  stmt_a: _30 = *_9[1];
  stmt_b: _33 = *_17[1];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _30 = *_9[1];
  stmt_b: _35 = *_20[1];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _30 = *_9[1];
  stmt_b: _37 = *_9[0];
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 0)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _30 = *_9[1];
  stmt_b: _38 = *_13[0];
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 0)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _30 = *_9[1];
  stmt_b: _40 = *_17[0];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _30 = *_9[1];
  stmt_b: _42 = *_20[0];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _31 = *_13[1];
  stmt_b: _33 = *_17[1];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _31 = *_13[1];
  stmt_b: _35 = *_20[1];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _31 = *_13[1];
  stmt_b: _37 = *_9[0];
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 0)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _31 = *_13[1];
  stmt_b: _38 = *_13[0];
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 0)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _31 = *_13[1];
  stmt_b: _40 = *_17[0];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _31 = *_13[1];
  stmt_b: _42 = *_20[0];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _33 = *_17[1];
  stmt_b: _35 = *_20[1];
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 16}_1)
  (chrec_b = {16B, +, 16}_1)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = [1 + 1 * x_1])
  (overlaps_b = [0 + 1 * x_1]))
)
  (overlap_iterations_a = [1 + 1 * x_1])
  (overlap_iterations_b = [0 + 1 * x_1]))
(build_classic_dist_vector
  dist_vector = (  1 
  )
)
)
(compute_affine_dependence
  stmt_a: _33 = *_17[1];
  stmt_b: _37 = *_9[0];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _33 = *_17[1];
  stmt_b: _38 = *_13[0];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _33 = *_17[1];
  stmt_b: _40 = *_17[0];
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 0)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _33 = *_17[1];
  stmt_b: _42 = *_20[0];
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 0)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _35 = *_20[1];
  stmt_b: _37 = *_9[0];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _35 = *_20[1];
  stmt_b: _38 = *_13[0];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _35 = *_20[1];
  stmt_b: _40 = *_17[0];
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 0)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _35 = *_20[1];
  stmt_b: _42 = *_20[0];
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 0)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _37 = *_9[0];
  stmt_b: _38 = *_13[0];
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 0)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 16}_1)
  (chrec_b = {16B, +, 16}_1)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = [1 + 1 * x_1])
  (overlaps_b = [0 + 1 * x_1]))
)
  (overlap_iterations_a = [1 + 1 * x_1])
  (overlap_iterations_b = [0 + 1 * x_1]))
(build_classic_dist_vector
  dist_vector = (  1 
  )
)
)
(compute_affine_dependence
  stmt_a: _37 = *_9[0];
  stmt_b: _40 = *_17[0];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _37 = *_9[0];
  stmt_b: _42 = *_20[0];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _38 = *_13[0];
  stmt_b: _40 = *_17[0];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _38 = *_13[0];
  stmt_b: _42 = *_20[0];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _40 = *_17[0];
  stmt_b: _42 = *_20[0];
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 0)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 16}_1)
  (chrec_b = {16B, +, 16}_1)
(analyze_siv_subscript 
(analyze_subscript_affine_affine 
  (overlaps_a = [1 + 1 * x_1])
  (overlaps_b = [0 + 1 * x_1]))
)
  (overlap_iterations_a = [1 + 1 * x_1])
  (overlap_iterations_b = [0 + 1 * x_1]))
(build_classic_dist_vector
  dist_vector = (  1 
  )
)
)
(compute_affine_dependence
  stmt_a: _10 = *_9[3];
  stmt_b: _10 = *_9[3];
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 16}_1)
  (chrec_b = {0B, +, 16}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _14 = *_13[3];
  stmt_b: _14 = *_13[3];
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {16B, +, 16}_1)
  (chrec_b = {16B, +, 16}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _18 = *_17[3];
  stmt_b: _18 = *_17[3];
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 16}_1)
  (chrec_b = {0B, +, 16}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _21 = *_20[3];
  stmt_b: _21 = *_20[3];
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {16B, +, 16}_1)
  (chrec_b = {16B, +, 16}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _23 = *_9[2];
  stmt_b: _23 = *_9[2];
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 16}_1)
  (chrec_b = {0B, +, 16}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _24 = *_13[2];
  stmt_b: _24 = *_13[2];
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {16B, +, 16}_1)
  (chrec_b = {16B, +, 16}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _26 = *_17[2];
  stmt_b: _26 = *_17[2];
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 16}_1)
  (chrec_b = {0B, +, 16}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _28 = *_20[2];
  stmt_b: _28 = *_20[2];
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {16B, +, 16}_1)
  (chrec_b = {16B, +, 16}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _30 = *_9[1];
  stmt_b: _30 = *_9[1];
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 16}_1)
  (chrec_b = {0B, +, 16}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _31 = *_13[1];
  stmt_b: _31 = *_13[1];
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {16B, +, 16}_1)
  (chrec_b = {16B, +, 16}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _33 = *_17[1];
  stmt_b: _33 = *_17[1];
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 16}_1)
  (chrec_b = {0B, +, 16}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _35 = *_20[1];
  stmt_b: _35 = *_20[1];
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {16B, +, 16}_1)
  (chrec_b = {16B, +, 16}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _37 = *_9[0];
  stmt_b: _37 = *_9[0];
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 0)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 16}_1)
  (chrec_b = {0B, +, 16}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _38 = *_13[0];
  stmt_b: _38 = *_13[0];
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 0)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {16B, +, 16}_1)
  (chrec_b = {16B, +, 16}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _40 = *_17[0];
  stmt_b: _40 = *_17[0];
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 0)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 16}_1)
  (chrec_b = {0B, +, 16}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _42 = *_20[0];
  stmt_b: _42 = *_20[0];
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 0)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {16B, +, 16}_1)
  (chrec_b = {16B, +, 16}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/pixel.c:481:5: note: === vect_determine_vectorization_factor ===
common/pixel.c:481:5: note: ==> examining phi: i_72 = PHI <0(3), i_46(5)>

common/pixel.c:481:5: note: ==> examining phi: ssim_71 = PHI <0.0(3), ssim_45(5)>

common/pixel.c:481:5: note: get vectype for scalar type:  float
common/pixel.c:481:5: note: vectype: vector(4) float
common/pixel.c:481:5: note: nunits = 4
common/pixel.c:481:5: note: ==> examining statement: # DEBUG ssim => ssim_71

common/pixel.c:481:5: note: skip.
common/pixel.c:481:5: note: ==> examining statement: # DEBUG i => i_72

common/pixel.c:481:5: note: skip.
common/pixel.c:481:5: note: ==> examining statement: _6 = (long unsigned int) i_72;

common/pixel.c:481:5: note: skip.
common/pixel.c:481:5: note: ==> examining statement: _7 = _6 * 16;

common/pixel.c:481:5: note: skip.
common/pixel.c:481:5: note: ==> examining statement: _9 = sum0_8(D) + _7;

common/pixel.c:481:5: note: skip.
common/pixel.c:481:5: note: ==> examining statement: _10 = *_9[3];

common/pixel.c:481:5: note: get vectype for scalar type:  int
common/pixel.c:481:5: note: vectype: vector(4) int
common/pixel.c:481:5: note: nunits = 4
common/pixel.c:481:5: note: ==> examining statement: _11 = _6 + 1;

common/pixel.c:481:5: note: skip.
common/pixel.c:481:5: note: ==> examining statement: _12 = _11 * 16;

common/pixel.c:481:5: note: skip.
common/pixel.c:481:5: note: ==> examining statement: _13 = sum0_8(D) + _12;

common/pixel.c:481:5: note: skip.
common/pixel.c:481:5: note: ==> examining statement: _14 = *_13[3];

common/pixel.c:481:5: note: get vectype for scalar type:  int
common/pixel.c:481:5: note: vectype: vector(4) int
common/pixel.c:481:5: note: nunits = 4
common/pixel.c:481:5: note: ==> examining statement: _15 = _10 + _14;

common/pixel.c:481:5: note: get vectype for scalar type:  int
common/pixel.c:481:5: note: vectype: vector(4) int
common/pixel.c:481:5: note: get vectype for scalar type:  int
common/pixel.c:481:5: note: vectype: vector(4) int
common/pixel.c:481:5: note: nunits = 4
common/pixel.c:481:5: note: ==> examining statement: _17 = sum1_16(D) + _7;

common/pixel.c:481:5: note: skip.
common/pixel.c:481:5: note: ==> examining statement: _18 = *_17[3];

common/pixel.c:481:5: note: get vectype for scalar type:  int
common/pixel.c:481:5: note: vectype: vector(4) int
common/pixel.c:481:5: note: nunits = 4
common/pixel.c:481:5: note: ==> examining statement: _19 = _15 + _18;

common/pixel.c:481:5: note: get vectype for scalar type:  int
common/pixel.c:481:5: note: vectype: vector(4) int
common/pixel.c:481:5: note: get vectype for scalar type:  int
common/pixel.c:481:5: note: vectype: vector(4) int
common/pixel.c:481:5: note: nunits = 4
common/pixel.c:481:5: note: ==> examining statement: _20 = sum1_16(D) + _12;

common/pixel.c:481:5: note: skip.
common/pixel.c:481:5: note: ==> examining statement: _21 = *_20[3];

common/pixel.c:481:5: note: get vectype for scalar type:  int
common/pixel.c:481:5: note: vectype: vector(4) int
common/pixel.c:481:5: note: nunits = 4
common/pixel.c:481:5: note: ==> examining statement: _22 = _19 + _21;

common/pixel.c:481:5: note: get vectype for scalar type:  int
common/pixel.c:481:5: note: vectype: vector(4) int
common/pixel.c:481:5: note: get vectype for scalar type:  int
common/pixel.c:481:5: note: vectype: vector(4) int
common/pixel.c:481:5: note: nunits = 4
common/pixel.c:481:5: note: ==> examining statement: _23 = *_9[2];

common/pixel.c:481:5: note: get vectype for scalar type:  int
common/pixel.c:481:5: note: vectype: vector(4) int
common/pixel.c:481:5: note: nunits = 4
common/pixel.c:481:5: note: ==> examining statement: _24 = *_13[2];

common/pixel.c:481:5: note: get vectype for scalar type:  int
common/pixel.c:481:5: note: vectype: vector(4) int
common/pixel.c:481:5: note: nunits = 4
common/pixel.c:481:5: note: ==> examining statement: _25 = _23 + _24;

common/pixel.c:481:5: note: get vectype for scalar type:  int
common/pixel.c:481:5: note: vectype: vector(4) int
common/pixel.c:481:5: note: get vectype for scalar type:  int
common/pixel.c:481:5: note: vectype: vector(4) int
common/pixel.c:481:5: note: nunits = 4
common/pixel.c:481:5: note: ==> examining statement: _26 = *_17[2];

common/pixel.c:481:5: note: get vectype for scalar type:  int
common/pixel.c:481:5: note: vectype: vector(4) int
common/pixel.c:481:5: note: nunits = 4
common/pixel.c:481:5: note: ==> examining statement: _27 = _25 + _26;

common/pixel.c:481:5: note: get vectype for scalar type:  int
common/pixel.c:481:5: note: vectype: vector(4) int
common/pixel.c:481:5: note: get vectype for scalar type:  int
common/pixel.c:481:5: note: vectype: vector(4) int
common/pixel.c:481:5: note: nunits = 4
common/pixel.c:481:5: note: ==> examining statement: _28 = *_20[2];

common/pixel.c:481:5: note: get vectype for scalar type:  int
common/pixel.c:481:5: note: vectype: vector(4) int
common/pixel.c:481:5: note: nunits = 4
common/pixel.c:481:5: note: ==> examining statement: _29 = _27 + _28;

common/pixel.c:481:5: note: get vectype for scalar type:  int
common/pixel.c:481:5: note: vectype: vector(4) int
common/pixel.c:481:5: note: get vectype for scalar type:  int
common/pixel.c:481:5: note: vectype: vector(4) int
common/pixel.c:481:5: note: nunits = 4
common/pixel.c:481:5: note: ==> examining statement: _30 = *_9[1];

common/pixel.c:481:5: note: get vectype for scalar type:  int
common/pixel.c:481:5: note: vectype: vector(4) int
common/pixel.c:481:5: note: nunits = 4
common/pixel.c:481:5: note: ==> examining statement: _31 = *_13[1];

common/pixel.c:481:5: note: get vectype for scalar type:  int
common/pixel.c:481:5: note: vectype: vector(4) int
common/pixel.c:481:5: note: nunits = 4
common/pixel.c:481:5: note: ==> examining statement: _32 = _30 + _31;

common/pixel.c:481:5: note: get vectype for scalar type:  int
common/pixel.c:481:5: note: vectype: vector(4) int
common/pixel.c:481:5: note: get vectype for scalar type:  int
common/pixel.c:481:5: note: vectype: vector(4) int
common/pixel.c:481:5: note: nunits = 4
common/pixel.c:481:5: note: ==> examining statement: _33 = *_17[1];

common/pixel.c:481:5: note: get vectype for scalar type:  int
common/pixel.c:481:5: note: vectype: vector(4) int
common/pixel.c:481:5: note: nunits = 4
common/pixel.c:481:5: note: ==> examining statement: _34 = _32 + _33;

common/pixel.c:481:5: note: get vectype for scalar type:  int
common/pixel.c:481:5: note: vectype: vector(4) int
common/pixel.c:481:5: note: get vectype for scalar type:  int
common/pixel.c:481:5: note: vectype: vector(4) int
common/pixel.c:481:5: note: nunits = 4
common/pixel.c:481:5: note: ==> examining statement: _35 = *_20[1];

common/pixel.c:481:5: note: get vectype for scalar type:  int
common/pixel.c:481:5: note: vectype: vector(4) int
common/pixel.c:481:5: note: nunits = 4
common/pixel.c:481:5: note: ==> examining statement: _36 = _34 + _35;

common/pixel.c:481:5: note: get vectype for scalar type:  int
common/pixel.c:481:5: note: vectype: vector(4) int
common/pixel.c:481:5: note: get vectype for scalar type:  int
common/pixel.c:481:5: note: vectype: vector(4) int
common/pixel.c:481:5: note: nunits = 4
common/pixel.c:481:5: note: ==> examining statement: _37 = *_9[0];

common/pixel.c:481:5: note: get vectype for scalar type:  int
common/pixel.c:481:5: note: vectype: vector(4) int
common/pixel.c:481:5: note: nunits = 4
common/pixel.c:481:5: note: ==> examining statement: _38 = *_13[0];

common/pixel.c:481:5: note: get vectype for scalar type:  int
common/pixel.c:481:5: note: vectype: vector(4) int
common/pixel.c:481:5: note: nunits = 4
common/pixel.c:481:5: note: ==> examining statement: _39 = _37 + _38;

common/pixel.c:481:5: note: get vectype for scalar type:  int
common/pixel.c:481:5: note: vectype: vector(4) int
common/pixel.c:481:5: note: get vectype for scalar type:  int
common/pixel.c:481:5: note: vectype: vector(4) int
common/pixel.c:481:5: note: nunits = 4
common/pixel.c:481:5: note: ==> examining statement: _40 = *_17[0];

common/pixel.c:481:5: note: get vectype for scalar type:  int
common/pixel.c:481:5: note: vectype: vector(4) int
common/pixel.c:481:5: note: nunits = 4
common/pixel.c:481:5: note: ==> examining statement: _41 = _39 + _40;

common/pixel.c:481:5: note: get vectype for scalar type:  int
common/pixel.c:481:5: note: vectype: vector(4) int
common/pixel.c:481:5: note: get vectype for scalar type:  int
common/pixel.c:481:5: note: vectype: vector(4) int
common/pixel.c:481:5: note: nunits = 4
common/pixel.c:481:5: note: ==> examining statement: _42 = *_20[0];

common/pixel.c:481:5: note: get vectype for scalar type:  int
common/pixel.c:481:5: note: vectype: vector(4) int
common/pixel.c:481:5: note: nunits = 4
common/pixel.c:481:5: note: ==> examining statement: _43 = _41 + _42;

common/pixel.c:481:5: note: get vectype for scalar type:  int
common/pixel.c:481:5: note: vectype: vector(4) int
common/pixel.c:481:5: note: get vectype for scalar type:  int
common/pixel.c:481:5: note: vectype: vector(4) int
common/pixel.c:481:5: note: nunits = 4
common/pixel.c:481:5: note: ==> examining statement: # DEBUG s1 => _43

common/pixel.c:481:5: note: skip.
common/pixel.c:481:5: note: ==> examining statement: # DEBUG s2 => _36

common/pixel.c:481:5: note: skip.
common/pixel.c:481:5: note: ==> examining statement: # DEBUG ss => _29

common/pixel.c:481:5: note: skip.
common/pixel.c:481:5: note: ==> examining statement: # DEBUG s12 => _22

common/pixel.c:481:5: note: skip.
common/pixel.c:481:5: note: ==> examining statement: _47 = _29 * 64;

common/pixel.c:481:5: note: get vectype for scalar type:  int
common/pixel.c:481:5: note: vectype: vector(4) int
common/pixel.c:481:5: note: get vectype for scalar type:  int
common/pixel.c:481:5: note: vectype: vector(4) int
common/pixel.c:481:5: note: nunits = 4
common/pixel.c:481:5: note: ==> examining statement: _48 = _43 * _43;

common/pixel.c:481:5: note: get vectype for scalar type:  int
common/pixel.c:481:5: note: vectype: vector(4) int
common/pixel.c:481:5: note: get vectype for scalar type:  int
common/pixel.c:481:5: note: vectype: vector(4) int
common/pixel.c:481:5: note: nunits = 4
common/pixel.c:481:5: note: ==> examining statement: _49 = _47 - _48;

common/pixel.c:481:5: note: get vectype for scalar type:  int
common/pixel.c:481:5: note: vectype: vector(4) int
common/pixel.c:481:5: note: get vectype for scalar type:  int
common/pixel.c:481:5: note: vectype: vector(4) int
common/pixel.c:481:5: note: nunits = 4
common/pixel.c:481:5: note: ==> examining statement: _50 = _36 * _36;

common/pixel.c:481:5: note: get vectype for scalar type:  int
common/pixel.c:481:5: note: vectype: vector(4) int
common/pixel.c:481:5: note: get vectype for scalar type:  int
common/pixel.c:481:5: note: vectype: vector(4) int
common/pixel.c:481:5: note: nunits = 4
common/pixel.c:481:5: note: ==> examining statement: vars_51 = _49 - _50;

common/pixel.c:481:5: note: get vectype for scalar type:  int
common/pixel.c:481:5: note: vectype: vector(4) int
common/pixel.c:481:5: note: get vectype for scalar type:  int
common/pixel.c:481:5: note: vectype: vector(4) int
common/pixel.c:481:5: note: nunits = 4
common/pixel.c:481:5: note: ==> examining statement: # DEBUG vars => vars_51

common/pixel.c:481:5: note: skip.
common/pixel.c:481:5: note: ==> examining statement: _52 = _22 * 64;

common/pixel.c:481:5: note: get vectype for scalar type:  int
common/pixel.c:481:5: note: vectype: vector(4) int
common/pixel.c:481:5: note: get vectype for scalar type:  int
common/pixel.c:481:5: note: vectype: vector(4) int
common/pixel.c:481:5: note: nunits = 4
common/pixel.c:481:5: note: ==> examining statement: _53 = _36 * _43;

common/pixel.c:481:5: note: get vectype for scalar type:  int
common/pixel.c:481:5: note: vectype: vector(4) int
common/pixel.c:481:5: note: get vectype for scalar type:  int
common/pixel.c:481:5: note: vectype: vector(4) int
common/pixel.c:481:5: note: nunits = 4
common/pixel.c:481:5: note: ==> examining statement: covar_54 = _52 - _53;

common/pixel.c:481:5: note: get vectype for scalar type:  int
common/pixel.c:481:5: note: vectype: vector(4) int
common/pixel.c:481:5: note: get vectype for scalar type:  int
common/pixel.c:481:5: note: vectype: vector(4) int
common/pixel.c:481:5: note: nunits = 4
common/pixel.c:481:5: note: ==> examining statement: # DEBUG covar => covar_54

common/pixel.c:481:5: note: skip.
common/pixel.c:481:5: note: ==> examining statement: _55 = _43 * 2;

common/pixel.c:481:5: note: get vectype for scalar type:  int
common/pixel.c:481:5: note: vectype: vector(4) int
common/pixel.c:481:5: note: get vectype for scalar type:  int
common/pixel.c:481:5: note: vectype: vector(4) int
common/pixel.c:481:5: note: nunits = 4
common/pixel.c:481:5: note: ==> examining statement: _56 = _36 * _55;

common/pixel.c:481:5: note: get vectype for scalar type:  int
common/pixel.c:481:5: note: vectype: vector(4) int
common/pixel.c:481:5: note: get vectype for scalar type:  int
common/pixel.c:481:5: note: vectype: vector(4) int
common/pixel.c:481:5: note: nunits = 4
common/pixel.c:481:5: note: ==> examining statement: _57 = _56 + 416;

common/pixel.c:481:5: note: get vectype for scalar type:  int
common/pixel.c:481:5: note: vectype: vector(4) int
common/pixel.c:481:5: note: get vectype for scalar type:  int
common/pixel.c:481:5: note: vectype: vector(4) int
common/pixel.c:481:5: note: nunits = 4
common/pixel.c:481:5: note: ==> examining statement: _58 = (float) _57;

common/pixel.c:481:5: note: get vectype for scalar type:  float
common/pixel.c:481:5: note: vectype: vector(4) float
common/pixel.c:481:5: note: get vectype for scalar type:  float
common/pixel.c:481:5: note: vectype: vector(4) float
common/pixel.c:481:5: note: nunits = 4
common/pixel.c:481:5: note: ==> examining statement: _59 = covar_54 * 2;

common/pixel.c:481:5: note: get vectype for scalar type:  int
common/pixel.c:481:5: note: vectype: vector(4) int
common/pixel.c:481:5: note: get vectype for scalar type:  int
common/pixel.c:481:5: note: vectype: vector(4) int
common/pixel.c:481:5: note: nunits = 4
common/pixel.c:481:5: note: ==> examining statement: _60 = _59 + 235963;

common/pixel.c:481:5: note: get vectype for scalar type:  int
common/pixel.c:481:5: note: vectype: vector(4) int
common/pixel.c:481:5: note: get vectype for scalar type:  int
common/pixel.c:481:5: note: vectype: vector(4) int
common/pixel.c:481:5: note: nunits = 4
common/pixel.c:481:5: note: ==> examining statement: _61 = (float) _60;

common/pixel.c:481:5: note: get vectype for scalar type:  float
common/pixel.c:481:5: note: vectype: vector(4) float
common/pixel.c:481:5: note: get vectype for scalar type:  float
common/pixel.c:481:5: note: vectype: vector(4) float
common/pixel.c:481:5: note: nunits = 4
common/pixel.c:481:5: note: ==> examining statement: _62 = _58 * _61;

common/pixel.c:481:5: note: get vectype for scalar type:  float
common/pixel.c:481:5: note: vectype: vector(4) float
common/pixel.c:481:5: note: get vectype for scalar type:  float
common/pixel.c:481:5: note: vectype: vector(4) float
common/pixel.c:481:5: note: nunits = 4
common/pixel.c:481:5: note: ==> examining statement: _63 = _48 + _50;

common/pixel.c:481:5: note: get vectype for scalar type:  int
common/pixel.c:481:5: note: vectype: vector(4) int
common/pixel.c:481:5: note: get vectype for scalar type:  int
common/pixel.c:481:5: note: vectype: vector(4) int
common/pixel.c:481:5: note: nunits = 4
common/pixel.c:481:5: note: ==> examining statement: _64 = _63 + 416;

common/pixel.c:481:5: note: get vectype for scalar type:  int
common/pixel.c:481:5: note: vectype: vector(4) int
common/pixel.c:481:5: note: get vectype for scalar type:  int
common/pixel.c:481:5: note: vectype: vector(4) int
common/pixel.c:481:5: note: nunits = 4
common/pixel.c:481:5: note: ==> examining statement: _65 = (float) _64;

common/pixel.c:481:5: note: get vectype for scalar type:  float
common/pixel.c:481:5: note: vectype: vector(4) float
common/pixel.c:481:5: note: get vectype for scalar type:  float
common/pixel.c:481:5: note: vectype: vector(4) float
common/pixel.c:481:5: note: nunits = 4
common/pixel.c:481:5: note: ==> examining statement: _66 = vars_51 + 235963;

common/pixel.c:481:5: note: get vectype for scalar type:  int
common/pixel.c:481:5: note: vectype: vector(4) int
common/pixel.c:481:5: note: get vectype for scalar type:  int
common/pixel.c:481:5: note: vectype: vector(4) int
common/pixel.c:481:5: note: nunits = 4
common/pixel.c:481:5: note: ==> examining statement: _67 = (float) _66;

common/pixel.c:481:5: note: get vectype for scalar type:  float
common/pixel.c:481:5: note: vectype: vector(4) float
common/pixel.c:481:5: note: get vectype for scalar type:  float
common/pixel.c:481:5: note: vectype: vector(4) float
common/pixel.c:481:5: note: nunits = 4
common/pixel.c:481:5: note: ==> examining statement: _68 = _65 * _67;

common/pixel.c:481:5: note: get vectype for scalar type:  float
common/pixel.c:481:5: note: vectype: vector(4) float
common/pixel.c:481:5: note: get vectype for scalar type:  float
common/pixel.c:481:5: note: vectype: vector(4) float
common/pixel.c:481:5: note: nunits = 4
common/pixel.c:481:5: note: ==> examining statement: _69 = _62 / _68;

common/pixel.c:481:5: note: get vectype for scalar type:  float
common/pixel.c:481:5: note: vectype: vector(4) float
common/pixel.c:481:5: note: get vectype for scalar type:  float
common/pixel.c:481:5: note: vectype: vector(4) float
common/pixel.c:481:5: note: nunits = 4
common/pixel.c:481:5: note: ==> examining statement: # DEBUG s1 => NULL

common/pixel.c:481:5: note: skip.
common/pixel.c:481:5: note: ==> examining statement: # DEBUG s2 => NULL

common/pixel.c:481:5: note: skip.
common/pixel.c:481:5: note: ==> examining statement: # DEBUG ss => NULL

common/pixel.c:481:5: note: skip.
common/pixel.c:481:5: note: ==> examining statement: # DEBUG s12 => NULL

common/pixel.c:481:5: note: skip.
common/pixel.c:481:5: note: ==> examining statement: # DEBUG covar => NULL

common/pixel.c:481:5: note: skip.
common/pixel.c:481:5: note: ==> examining statement: # DEBUG vars => NULL

common/pixel.c:481:5: note: skip.
common/pixel.c:481:5: note: ==> examining statement: ssim_45 = _69 + ssim_71;

common/pixel.c:481:5: note: get vectype for scalar type:  float
common/pixel.c:481:5: note: vectype: vector(4) float
common/pixel.c:481:5: note: get vectype for scalar type:  float
common/pixel.c:481:5: note: vectype: vector(4) float
common/pixel.c:481:5: note: nunits = 4
common/pixel.c:481:5: note: ==> examining statement: # DEBUG ssim => ssim_45

common/pixel.c:481:5: note: skip.
common/pixel.c:481:5: note: ==> examining statement: i_46 = i_72 + 1;

common/pixel.c:481:5: note: skip.
common/pixel.c:481:5: note: ==> examining statement: # DEBUG i => i_46

common/pixel.c:481:5: note: skip.
common/pixel.c:481:5: note: ==> examining statement: # DEBUG ssim => ssim_45

common/pixel.c:481:5: note: skip.
common/pixel.c:481:5: note: ==> examining statement: # DEBUG i => i_46

common/pixel.c:481:5: note: skip.
common/pixel.c:481:5: note: ==> examining statement: if (width_5(D) > i_46)

common/pixel.c:481:5: note: skip.
common/pixel.c:481:5: note: vectorization factor = 4
common/pixel.c:481:5: note: === vect_analyze_data_refs_alignment ===
common/pixel.c:481:5: note: dependence distance  = 1.
common/pixel.c:481:5: note: dependence distance  = 1.
common/pixel.c:481:5: note: dependence distance  = 1.
common/pixel.c:481:5: note: dependence distance  = 1.
common/pixel.c:481:5: note: dependence distance  = 1.
common/pixel.c:481:5: note: dependence distance  = 1.
common/pixel.c:481:5: note: dependence distance  = 1.
common/pixel.c:481:5: note: dependence distance  = 1.
common/pixel.c:481:5: note: vect_compute_data_ref_alignment:
common/pixel.c:481:5: note: can't force alignment of ref: *_9[3]
common/pixel.c:481:5: note: vect_compute_data_ref_alignment:
common/pixel.c:481:5: note: can't force alignment of ref: *_13[3]
common/pixel.c:481:5: note: vect_compute_data_ref_alignment:
common/pixel.c:481:5: note: can't force alignment of ref: *_17[3]
common/pixel.c:481:5: note: vect_compute_data_ref_alignment:
common/pixel.c:481:5: note: can't force alignment of ref: *_20[3]
common/pixel.c:481:5: note: vect_compute_data_ref_alignment:
common/pixel.c:481:5: note: can't force alignment of ref: *_9[2]
common/pixel.c:481:5: note: vect_compute_data_ref_alignment:
common/pixel.c:481:5: note: can't force alignment of ref: *_13[2]
common/pixel.c:481:5: note: vect_compute_data_ref_alignment:
common/pixel.c:481:5: note: can't force alignment of ref: *_17[2]
common/pixel.c:481:5: note: vect_compute_data_ref_alignment:
common/pixel.c:481:5: note: can't force alignment of ref: *_20[2]
common/pixel.c:481:5: note: vect_compute_data_ref_alignment:
common/pixel.c:481:5: note: can't force alignment of ref: *_9[1]
common/pixel.c:481:5: note: vect_compute_data_ref_alignment:
common/pixel.c:481:5: note: can't force alignment of ref: *_13[1]
common/pixel.c:481:5: note: vect_compute_data_ref_alignment:
common/pixel.c:481:5: note: can't force alignment of ref: *_17[1]
common/pixel.c:481:5: note: vect_compute_data_ref_alignment:
common/pixel.c:481:5: note: can't force alignment of ref: *_20[1]
common/pixel.c:481:5: note: vect_compute_data_ref_alignment:
common/pixel.c:481:5: note: can't force alignment of ref: *_9[0]
common/pixel.c:481:5: note: vect_compute_data_ref_alignment:
common/pixel.c:481:5: note: can't force alignment of ref: *_13[0]
common/pixel.c:481:5: note: vect_compute_data_ref_alignment:
common/pixel.c:481:5: note: can't force alignment of ref: *_17[0]
common/pixel.c:481:5: note: vect_compute_data_ref_alignment:
common/pixel.c:481:5: note: can't force alignment of ref: *_20[0]
common/pixel.c:481:5: note: === vect_prune_runtime_alias_test_list ===
common/pixel.c:481:5: note: === vect_enhance_data_refs_alignment ===
common/pixel.c:481:5: note: vector alignment may not be reachable
common/pixel.c:481:5: note: vect_can_advance_ivs_p:
common/pixel.c:481:5: note: Analyze phi: i_72 = PHI <0(3), i_46(5)>

common/pixel.c:481:5: note: Analyze phi: ssim_71 = PHI <0.0(3), ssim_45(5)>

common/pixel.c:481:5: note: reduc phi. skip.
common/pixel.c:481:5: note: Vectorizing an unaligned access.
common/pixel.c:481:5: note: Vectorizing an unaligned access.
common/pixel.c:481:5: note: Vectorizing an unaligned access.
common/pixel.c:481:5: note: Vectorizing an unaligned access.
common/pixel.c:481:5: note: === vect_analyze_slp ===
common/pixel.c:481:5: note: === vect_make_slp_decision ===
common/pixel.c:481:5: note: === vect_detect_hybrid_slp ===
common/pixel.c:481:5: note: === vect_analyze_loop_operations ===
common/pixel.c:481:5: note: examining phi: i_72 = PHI <0(3), i_46(5)>

common/pixel.c:481:5: note: examining phi: ssim_71 = PHI <0.0(3), ssim_45(5)>

common/pixel.c:481:5: note: ==> examining statement: # DEBUG ssim => ssim_71
common/pixel.c:481:5: note: irrelevant.
common/pixel.c:481:5: note: ==> examining statement: # DEBUG i => i_72
common/pixel.c:481:5: note: irrelevant.
common/pixel.c:481:5: note: ==> examining statement: _6 = (long unsigned int) i_72;
common/pixel.c:481:5: note: irrelevant.
common/pixel.c:481:5: note: ==> examining statement: _7 = _6 * 16;
common/pixel.c:481:5: note: irrelevant.
common/pixel.c:481:5: note: ==> examining statement: _9 = sum0_8(D) + _7;
common/pixel.c:481:5: note: irrelevant.
common/pixel.c:481:5: note: ==> examining statement: _10 = *_9[3];
common/pixel.c:481:5: note: num. args = 4 (not unary/binary/ternary op).
common/pixel.c:481:5: note: vect_is_simple_use: operand *_9[3]
common/pixel.c:481:5: note: not ssa-name.
common/pixel.c:481:5: note: use not simple.
common/pixel.c:481:5: note: no array mode for V4SI[4]
common/pixel.c:481:5: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:481:5: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:481:5: note: ==> examining statement: _11 = _6 + 1;
common/pixel.c:481:5: note: irrelevant.
common/pixel.c:481:5: note: ==> examining statement: _12 = _11 * 16;
common/pixel.c:481:5: note: irrelevant.
common/pixel.c:481:5: note: ==> examining statement: _13 = sum0_8(D) + _12;
common/pixel.c:481:5: note: irrelevant.
common/pixel.c:481:5: note: ==> examining statement: _14 = *_13[3];
common/pixel.c:481:5: note: num. args = 4 (not unary/binary/ternary op).
common/pixel.c:481:5: note: vect_is_simple_use: operand *_13[3]
common/pixel.c:481:5: note: not ssa-name.
common/pixel.c:481:5: note: use not simple.
common/pixel.c:481:5: note: no array mode for V4SI[4]
common/pixel.c:481:5: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:481:5: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:481:5: note: ==> examining statement: _15 = _10 + _14;
common/pixel.c:481:5: note: vect_is_simple_use: operand _10
common/pixel.c:481:5: note: def_stmt: _10 = *_9[3];
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: vect_is_simple_use: operand _14
common/pixel.c:481:5: note: def_stmt: _14 = *_13[3];
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: === vectorizable_operation ===
common/pixel.c:481:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
common/pixel.c:481:5: note: ==> examining statement: _17 = sum1_16(D) + _7;
common/pixel.c:481:5: note: irrelevant.
common/pixel.c:481:5: note: ==> examining statement: _18 = *_17[3];
common/pixel.c:481:5: note: num. args = 4 (not unary/binary/ternary op).
common/pixel.c:481:5: note: vect_is_simple_use: operand *_17[3]
common/pixel.c:481:5: note: not ssa-name.
common/pixel.c:481:5: note: use not simple.
common/pixel.c:481:5: note: no array mode for V4SI[4]
common/pixel.c:481:5: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:481:5: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:481:5: note: ==> examining statement: _19 = _15 + _18;
common/pixel.c:481:5: note: vect_is_simple_use: operand _15
common/pixel.c:481:5: note: def_stmt: _15 = _10 + _14;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: vect_is_simple_use: operand _18
common/pixel.c:481:5: note: def_stmt: _18 = *_17[3];
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: === vectorizable_operation ===
common/pixel.c:481:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
common/pixel.c:481:5: note: ==> examining statement: _20 = sum1_16(D) + _12;
common/pixel.c:481:5: note: irrelevant.
common/pixel.c:481:5: note: ==> examining statement: _21 = *_20[3];
common/pixel.c:481:5: note: num. args = 4 (not unary/binary/ternary op).
common/pixel.c:481:5: note: vect_is_simple_use: operand *_20[3]
common/pixel.c:481:5: note: not ssa-name.
common/pixel.c:481:5: note: use not simple.
common/pixel.c:481:5: note: no array mode for V4SI[4]
common/pixel.c:481:5: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:481:5: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:481:5: note: ==> examining statement: _22 = _19 + _21;
common/pixel.c:481:5: note: vect_is_simple_use: operand _19
common/pixel.c:481:5: note: def_stmt: _19 = _15 + _18;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: vect_is_simple_use: operand _21
common/pixel.c:481:5: note: def_stmt: _21 = *_20[3];
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: === vectorizable_operation ===
common/pixel.c:481:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
common/pixel.c:481:5: note: ==> examining statement: _23 = *_9[2];
common/pixel.c:481:5: note: num. args = 4 (not unary/binary/ternary op).
common/pixel.c:481:5: note: vect_is_simple_use: operand *_9[2]
common/pixel.c:481:5: note: not ssa-name.
common/pixel.c:481:5: note: use not simple.
common/pixel.c:481:5: note: no array mode for V4SI[4]
common/pixel.c:481:5: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:481:5: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:481:5: note: ==> examining statement: _24 = *_13[2];
common/pixel.c:481:5: note: num. args = 4 (not unary/binary/ternary op).
common/pixel.c:481:5: note: vect_is_simple_use: operand *_13[2]
common/pixel.c:481:5: note: not ssa-name.
common/pixel.c:481:5: note: use not simple.
common/pixel.c:481:5: note: no array mode for V4SI[4]
common/pixel.c:481:5: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:481:5: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:481:5: note: ==> examining statement: _25 = _23 + _24;
common/pixel.c:481:5: note: vect_is_simple_use: operand _23
common/pixel.c:481:5: note: def_stmt: _23 = *_9[2];
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: vect_is_simple_use: operand _24
common/pixel.c:481:5: note: def_stmt: _24 = *_13[2];
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: === vectorizable_operation ===
common/pixel.c:481:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
common/pixel.c:481:5: note: ==> examining statement: _26 = *_17[2];
common/pixel.c:481:5: note: num. args = 4 (not unary/binary/ternary op).
common/pixel.c:481:5: note: vect_is_simple_use: operand *_17[2]
common/pixel.c:481:5: note: not ssa-name.
common/pixel.c:481:5: note: use not simple.
common/pixel.c:481:5: note: no array mode for V4SI[4]
common/pixel.c:481:5: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:481:5: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:481:5: note: ==> examining statement: _27 = _25 + _26;
common/pixel.c:481:5: note: vect_is_simple_use: operand _25
common/pixel.c:481:5: note: def_stmt: _25 = _23 + _24;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: vect_is_simple_use: operand _26
common/pixel.c:481:5: note: def_stmt: _26 = *_17[2];
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: === vectorizable_operation ===
common/pixel.c:481:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
common/pixel.c:481:5: note: ==> examining statement: _28 = *_20[2];
common/pixel.c:481:5: note: num. args = 4 (not unary/binary/ternary op).
common/pixel.c:481:5: note: vect_is_simple_use: operand *_20[2]
common/pixel.c:481:5: note: not ssa-name.
common/pixel.c:481:5: note: use not simple.
common/pixel.c:481:5: note: no array mode for V4SI[4]
common/pixel.c:481:5: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:481:5: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:481:5: note: ==> examining statement: _29 = _27 + _28;
common/pixel.c:481:5: note: vect_is_simple_use: operand _27
common/pixel.c:481:5: note: def_stmt: _27 = _25 + _26;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: vect_is_simple_use: operand _28
common/pixel.c:481:5: note: def_stmt: _28 = *_20[2];
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: === vectorizable_operation ===
common/pixel.c:481:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
common/pixel.c:481:5: note: ==> examining statement: _30 = *_9[1];
common/pixel.c:481:5: note: num. args = 4 (not unary/binary/ternary op).
common/pixel.c:481:5: note: vect_is_simple_use: operand *_9[1]
common/pixel.c:481:5: note: not ssa-name.
common/pixel.c:481:5: note: use not simple.
common/pixel.c:481:5: note: no array mode for V4SI[4]
common/pixel.c:481:5: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:481:5: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:481:5: note: ==> examining statement: _31 = *_13[1];
common/pixel.c:481:5: note: num. args = 4 (not unary/binary/ternary op).
common/pixel.c:481:5: note: vect_is_simple_use: operand *_13[1]
common/pixel.c:481:5: note: not ssa-name.
common/pixel.c:481:5: note: use not simple.
common/pixel.c:481:5: note: no array mode for V4SI[4]
common/pixel.c:481:5: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:481:5: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:481:5: note: ==> examining statement: _32 = _30 + _31;
common/pixel.c:481:5: note: vect_is_simple_use: operand _30
common/pixel.c:481:5: note: def_stmt: _30 = *_9[1];
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: vect_is_simple_use: operand _31
common/pixel.c:481:5: note: def_stmt: _31 = *_13[1];
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: === vectorizable_operation ===
common/pixel.c:481:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
common/pixel.c:481:5: note: ==> examining statement: _33 = *_17[1];
common/pixel.c:481:5: note: num. args = 4 (not unary/binary/ternary op).
common/pixel.c:481:5: note: vect_is_simple_use: operand *_17[1]
common/pixel.c:481:5: note: not ssa-name.
common/pixel.c:481:5: note: use not simple.
common/pixel.c:481:5: note: no array mode for V4SI[4]
common/pixel.c:481:5: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:481:5: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:481:5: note: ==> examining statement: _34 = _32 + _33;
common/pixel.c:481:5: note: vect_is_simple_use: operand _32
common/pixel.c:481:5: note: def_stmt: _32 = _30 + _31;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: vect_is_simple_use: operand _33
common/pixel.c:481:5: note: def_stmt: _33 = *_17[1];
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: === vectorizable_operation ===
common/pixel.c:481:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
common/pixel.c:481:5: note: ==> examining statement: _35 = *_20[1];
common/pixel.c:481:5: note: num. args = 4 (not unary/binary/ternary op).
common/pixel.c:481:5: note: vect_is_simple_use: operand *_20[1]
common/pixel.c:481:5: note: not ssa-name.
common/pixel.c:481:5: note: use not simple.
common/pixel.c:481:5: note: no array mode for V4SI[4]
common/pixel.c:481:5: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:481:5: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:481:5: note: ==> examining statement: _36 = _34 + _35;
common/pixel.c:481:5: note: vect_is_simple_use: operand _34
common/pixel.c:481:5: note: def_stmt: _34 = _32 + _33;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: vect_is_simple_use: operand _35
common/pixel.c:481:5: note: def_stmt: _35 = *_20[1];
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: === vectorizable_operation ===
common/pixel.c:481:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
common/pixel.c:481:5: note: ==> examining statement: _37 = *_9[0];
common/pixel.c:481:5: note: num. args = 4 (not unary/binary/ternary op).
common/pixel.c:481:5: note: vect_is_simple_use: operand *_9[0]
common/pixel.c:481:5: note: not ssa-name.
common/pixel.c:481:5: note: use not simple.
common/pixel.c:481:5: note: no array mode for V4SI[4]
common/pixel.c:481:5: note: vect_model_load_cost: strided group_size = 4 .
common/pixel.c:481:5: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:481:5: note: vect_model_load_cost: inside_cost = 10, prologue_cost = 0 .
common/pixel.c:481:5: note: ==> examining statement: _38 = *_13[0];
common/pixel.c:481:5: note: num. args = 4 (not unary/binary/ternary op).
common/pixel.c:481:5: note: vect_is_simple_use: operand *_13[0]
common/pixel.c:481:5: note: not ssa-name.
common/pixel.c:481:5: note: use not simple.
common/pixel.c:481:5: note: no array mode for V4SI[4]
common/pixel.c:481:5: note: vect_model_load_cost: strided group_size = 4 .
common/pixel.c:481:5: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:481:5: note: vect_model_load_cost: inside_cost = 10, prologue_cost = 0 .
common/pixel.c:481:5: note: ==> examining statement: _39 = _37 + _38;
common/pixel.c:481:5: note: vect_is_simple_use: operand _37
common/pixel.c:481:5: note: def_stmt: _37 = *_9[0];
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: vect_is_simple_use: operand _38
common/pixel.c:481:5: note: def_stmt: _38 = *_13[0];
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: === vectorizable_operation ===
common/pixel.c:481:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
common/pixel.c:481:5: note: ==> examining statement: _40 = *_17[0];
common/pixel.c:481:5: note: num. args = 4 (not unary/binary/ternary op).
common/pixel.c:481:5: note: vect_is_simple_use: operand *_17[0]
common/pixel.c:481:5: note: not ssa-name.
common/pixel.c:481:5: note: use not simple.
common/pixel.c:481:5: note: no array mode for V4SI[4]
common/pixel.c:481:5: note: vect_model_load_cost: strided group_size = 4 .
common/pixel.c:481:5: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:481:5: note: vect_model_load_cost: inside_cost = 10, prologue_cost = 0 .
common/pixel.c:481:5: note: ==> examining statement: _41 = _39 + _40;
common/pixel.c:481:5: note: vect_is_simple_use: operand _39
common/pixel.c:481:5: note: def_stmt: _39 = _37 + _38;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: vect_is_simple_use: operand _40
common/pixel.c:481:5: note: def_stmt: _40 = *_17[0];
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: === vectorizable_operation ===
common/pixel.c:481:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
common/pixel.c:481:5: note: ==> examining statement: _42 = *_20[0];
common/pixel.c:481:5: note: num. args = 4 (not unary/binary/ternary op).
common/pixel.c:481:5: note: vect_is_simple_use: operand *_20[0]
common/pixel.c:481:5: note: not ssa-name.
common/pixel.c:481:5: note: use not simple.
common/pixel.c:481:5: note: no array mode for V4SI[4]
common/pixel.c:481:5: note: vect_model_load_cost: strided group_size = 4 .
common/pixel.c:481:5: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:481:5: note: vect_model_load_cost: inside_cost = 10, prologue_cost = 0 .
common/pixel.c:481:5: note: ==> examining statement: _43 = _41 + _42;
common/pixel.c:481:5: note: vect_is_simple_use: operand _41
common/pixel.c:481:5: note: def_stmt: _41 = _39 + _40;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: vect_is_simple_use: operand _42
common/pixel.c:481:5: note: def_stmt: _42 = *_20[0];
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: === vectorizable_operation ===
common/pixel.c:481:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
common/pixel.c:481:5: note: ==> examining statement: # DEBUG s1 => _43
common/pixel.c:481:5: note: irrelevant.
common/pixel.c:481:5: note: ==> examining statement: # DEBUG s2 => _36
common/pixel.c:481:5: note: irrelevant.
common/pixel.c:481:5: note: ==> examining statement: # DEBUG ss => _29
common/pixel.c:481:5: note: irrelevant.
common/pixel.c:481:5: note: ==> examining statement: # DEBUG s12 => _22
common/pixel.c:481:5: note: irrelevant.
common/pixel.c:481:5: note: ==> examining statement: _47 = _29 * 64;
common/pixel.c:481:5: note: vect_is_simple_use: operand _29
common/pixel.c:481:5: note: def_stmt: _29 = _27 + _28;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: vect_is_simple_use: operand 64
common/pixel.c:481:5: note: === vectorizable_operation ===
common/pixel.c:481:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
common/pixel.c:481:5: note: ==> examining statement: _48 = _43 * _43;
common/pixel.c:481:5: note: vect_is_simple_use: operand _43
common/pixel.c:481:5: note: def_stmt: _43 = _41 + _42;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: vect_is_simple_use: operand _43
common/pixel.c:481:5: note: def_stmt: _43 = _41 + _42;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: === vectorizable_operation ===
common/pixel.c:481:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
common/pixel.c:481:5: note: ==> examining statement: _49 = _47 - _48;
common/pixel.c:481:5: note: vect_is_simple_use: operand _47
common/pixel.c:481:5: note: def_stmt: _47 = _29 * 64;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: vect_is_simple_use: operand _48
common/pixel.c:481:5: note: def_stmt: _48 = _43 * _43;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: === vectorizable_operation ===
common/pixel.c:481:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
common/pixel.c:481:5: note: ==> examining statement: _50 = _36 * _36;
common/pixel.c:481:5: note: vect_is_simple_use: operand _36
common/pixel.c:481:5: note: def_stmt: _36 = _34 + _35;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: vect_is_simple_use: operand _36
common/pixel.c:481:5: note: def_stmt: _36 = _34 + _35;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: === vectorizable_operation ===
common/pixel.c:481:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
common/pixel.c:481:5: note: ==> examining statement: vars_51 = _49 - _50;
common/pixel.c:481:5: note: vect_is_simple_use: operand _49
common/pixel.c:481:5: note: def_stmt: _49 = _47 - _48;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: vect_is_simple_use: operand _50
common/pixel.c:481:5: note: def_stmt: _50 = _36 * _36;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: === vectorizable_operation ===
common/pixel.c:481:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
common/pixel.c:481:5: note: ==> examining statement: # DEBUG vars => vars_51
common/pixel.c:481:5: note: irrelevant.
common/pixel.c:481:5: note: ==> examining statement: _52 = _22 * 64;
common/pixel.c:481:5: note: vect_is_simple_use: operand _22
common/pixel.c:481:5: note: def_stmt: _22 = _19 + _21;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: vect_is_simple_use: operand 64
common/pixel.c:481:5: note: === vectorizable_operation ===
common/pixel.c:481:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
common/pixel.c:481:5: note: ==> examining statement: _53 = _36 * _43;
common/pixel.c:481:5: note: vect_is_simple_use: operand _36
common/pixel.c:481:5: note: def_stmt: _36 = _34 + _35;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: vect_is_simple_use: operand _43
common/pixel.c:481:5: note: def_stmt: _43 = _41 + _42;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: === vectorizable_operation ===
common/pixel.c:481:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
common/pixel.c:481:5: note: ==> examining statement: covar_54 = _52 - _53;
common/pixel.c:481:5: note: vect_is_simple_use: operand _52
common/pixel.c:481:5: note: def_stmt: _52 = _22 * 64;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: vect_is_simple_use: operand _53
common/pixel.c:481:5: note: def_stmt: _53 = _36 * _43;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: === vectorizable_operation ===
common/pixel.c:481:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
common/pixel.c:481:5: note: ==> examining statement: # DEBUG covar => covar_54
common/pixel.c:481:5: note: irrelevant.
common/pixel.c:481:5: note: ==> examining statement: _55 = _43 * 2;
common/pixel.c:481:5: note: vect_is_simple_use: operand _43
common/pixel.c:481:5: note: def_stmt: _43 = _41 + _42;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: vect_is_simple_use: operand 2
common/pixel.c:481:5: note: === vectorizable_operation ===
common/pixel.c:481:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
common/pixel.c:481:5: note: ==> examining statement: _56 = _36 * _55;
common/pixel.c:481:5: note: vect_is_simple_use: operand _36
common/pixel.c:481:5: note: def_stmt: _36 = _34 + _35;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: vect_is_simple_use: operand _55
common/pixel.c:481:5: note: def_stmt: _55 = _43 * 2;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: === vectorizable_operation ===
common/pixel.c:481:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
common/pixel.c:481:5: note: ==> examining statement: _57 = _56 + 416;
common/pixel.c:481:5: note: vect_is_simple_use: operand _56
common/pixel.c:481:5: note: def_stmt: _56 = _36 * _55;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: vect_is_simple_use: operand 416
common/pixel.c:481:5: note: === vectorizable_operation ===
common/pixel.c:481:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
common/pixel.c:481:5: note: ==> examining statement: _58 = (float) _57;
common/pixel.c:481:5: note: vect_is_simple_use: operand _57
common/pixel.c:481:5: note: def_stmt: _57 = _56 + 416;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: === vectorizable_conversion ===
common/pixel.c:481:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
common/pixel.c:481:5: note: ==> examining statement: _59 = covar_54 * 2;
common/pixel.c:481:5: note: vect_is_simple_use: operand covar_54
common/pixel.c:481:5: note: def_stmt: covar_54 = _52 - _53;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: vect_is_simple_use: operand 2
common/pixel.c:481:5: note: === vectorizable_operation ===
common/pixel.c:481:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
common/pixel.c:481:5: note: ==> examining statement: _60 = _59 + 235963;
common/pixel.c:481:5: note: vect_is_simple_use: operand _59
common/pixel.c:481:5: note: def_stmt: _59 = covar_54 * 2;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: vect_is_simple_use: operand 235963
common/pixel.c:481:5: note: === vectorizable_operation ===
common/pixel.c:481:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
common/pixel.c:481:5: note: ==> examining statement: _61 = (float) _60;
common/pixel.c:481:5: note: vect_is_simple_use: operand _60
common/pixel.c:481:5: note: def_stmt: _60 = _59 + 235963;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: === vectorizable_conversion ===
common/pixel.c:481:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
common/pixel.c:481:5: note: ==> examining statement: _62 = _58 * _61;
common/pixel.c:481:5: note: vect_is_simple_use: operand _58
common/pixel.c:481:5: note: def_stmt: _58 = (float) _57;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: vect_is_simple_use: operand _61
common/pixel.c:481:5: note: def_stmt: _61 = (float) _60;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: === vectorizable_operation ===
common/pixel.c:481:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
common/pixel.c:481:5: note: ==> examining statement: _63 = _48 + _50;
common/pixel.c:481:5: note: vect_is_simple_use: operand _48
common/pixel.c:481:5: note: def_stmt: _48 = _43 * _43;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: vect_is_simple_use: operand _50
common/pixel.c:481:5: note: def_stmt: _50 = _36 * _36;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: === vectorizable_operation ===
common/pixel.c:481:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
common/pixel.c:481:5: note: ==> examining statement: _64 = _63 + 416;
common/pixel.c:481:5: note: vect_is_simple_use: operand _63
common/pixel.c:481:5: note: def_stmt: _63 = _48 + _50;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: vect_is_simple_use: operand 416
common/pixel.c:481:5: note: === vectorizable_operation ===
common/pixel.c:481:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
common/pixel.c:481:5: note: ==> examining statement: _65 = (float) _64;
common/pixel.c:481:5: note: vect_is_simple_use: operand _64
common/pixel.c:481:5: note: def_stmt: _64 = _63 + 416;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: === vectorizable_conversion ===
common/pixel.c:481:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
common/pixel.c:481:5: note: ==> examining statement: _66 = vars_51 + 235963;
common/pixel.c:481:5: note: vect_is_simple_use: operand vars_51
common/pixel.c:481:5: note: def_stmt: vars_51 = _49 - _50;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: vect_is_simple_use: operand 235963
common/pixel.c:481:5: note: === vectorizable_operation ===
common/pixel.c:481:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
common/pixel.c:481:5: note: ==> examining statement: _67 = (float) _66;
common/pixel.c:481:5: note: vect_is_simple_use: operand _66
common/pixel.c:481:5: note: def_stmt: _66 = vars_51 + 235963;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: === vectorizable_conversion ===
common/pixel.c:481:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
common/pixel.c:481:5: note: ==> examining statement: _68 = _65 * _67;
common/pixel.c:481:5: note: vect_is_simple_use: operand _65
common/pixel.c:481:5: note: def_stmt: _65 = (float) _64;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: vect_is_simple_use: operand _67
common/pixel.c:481:5: note: def_stmt: _67 = (float) _66;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: === vectorizable_operation ===
common/pixel.c:481:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
common/pixel.c:481:5: note: ==> examining statement: _69 = _62 / _68;
common/pixel.c:481:5: note: vect_is_simple_use: operand _62
common/pixel.c:481:5: note: def_stmt: _62 = _58 * _61;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: vect_is_simple_use: operand _68
common/pixel.c:481:5: note: def_stmt: _68 = _65 * _67;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: === vectorizable_operation ===
common/pixel.c:481:5: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
common/pixel.c:481:5: note: ==> examining statement: # DEBUG s1 => NULL
common/pixel.c:481:5: note: irrelevant.
common/pixel.c:481:5: note: ==> examining statement: # DEBUG s2 => NULL
common/pixel.c:481:5: note: irrelevant.
common/pixel.c:481:5: note: ==> examining statement: # DEBUG ss => NULL
common/pixel.c:481:5: note: irrelevant.
common/pixel.c:481:5: note: ==> examining statement: # DEBUG s12 => NULL
common/pixel.c:481:5: note: irrelevant.
common/pixel.c:481:5: note: ==> examining statement: # DEBUG covar => NULL
common/pixel.c:481:5: note: irrelevant.
common/pixel.c:481:5: note: ==> examining statement: # DEBUG vars => NULL
common/pixel.c:481:5: note: irrelevant.
common/pixel.c:481:5: note: ==> examining statement: ssim_45 = _69 + ssim_71;
common/pixel.c:481:5: note: vect_is_simple_use: operand _69
common/pixel.c:481:5: note: def_stmt: _69 = _62 / _68;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: vect_is_simple_use: operand ssim_71
common/pixel.c:481:5: note: def_stmt: ssim_71 = PHI <0.0(3), ssim_45(5)>
common/pixel.c:481:5: note: type of def: 5.
common/pixel.c:481:5: note: detected reduction: ssim_45 = _69 + ssim_71;

vect_model_reduction_cost: inside_cost = 1, prologue_cost = 1, epilogue_cost = 2 .
common/pixel.c:481:5: note: ==> examining statement: # DEBUG ssim => ssim_45
common/pixel.c:481:5: note: irrelevant.
common/pixel.c:481:5: note: ==> examining statement: i_46 = i_72 + 1;
common/pixel.c:481:5: note: irrelevant.
common/pixel.c:481:5: note: ==> examining statement: # DEBUG i => i_46
common/pixel.c:481:5: note: irrelevant.
common/pixel.c:481:5: note: ==> examining statement: # DEBUG ssim => ssim_45
common/pixel.c:481:5: note: irrelevant.
common/pixel.c:481:5: note: ==> examining statement: # DEBUG i => i_46
common/pixel.c:481:5: note: irrelevant.
common/pixel.c:481:5: note: ==> examining statement: if (width_5(D) > i_46)
common/pixel.c:481:5: note: irrelevant.
common/pixel.c:481:5: note: === vect_update_slp_costs_according_to_vf ===
common/pixel.c:481:5: note: cost model: epilogue peel iters set to vf/2 because loop iterations are unknown .
common/pixel.c:481:5: note: Cost model analysis: 
  Vector inside of loop cost: 100
  Vector prologue cost: 15
  Vector epilogue cost: 106
  Scalar iteration cost: 52
  Scalar outside cost: 6
  Vector outside cost: 121
  prologue iterations: 0
  epilogue iterations: 2
  Calculated minimum iters for profitability: 3
common/pixel.c:481:5: note:   Runtime profitability threshold = 3
common/pixel.c:481:5: note:   Static estimate profitability threshold = 3
common/pixel.c:481:5: note: epilog loop required
common/pixel.c:481:5: note: vect_can_advance_ivs_p:
common/pixel.c:481:5: note: Analyze phi: i_72 = PHI <0(3), i_46(5)>

common/pixel.c:481:5: note: Analyze phi: ssim_71 = PHI <0.0(3), ssim_45(5)>

common/pixel.c:481:5: note: reduc phi. skip.
common/pixel.c:481:5: note: loop vectorized
common/pixel.c:481:5: note: === vec_transform_loop ===
common/pixel.c:481:5: note: Profitability threshold is 3 loop iterations.
common/pixel.c:481:5: note: === vect_do_peeling_for_loop_bound ===
Removing basic block 8
basic block 8, loop depth 0
 pred:       3
 succ:      


;; Scaling loop 1 with scale 0.666600, bounding iterations to 3 from guessed 16
;; guessed iterations are now 2
;; Scaling loop 2 with scale 0.777800, bounding iterations to 4 from guessed 13
;; guessed iterations are now 3
common/pixel.c:481:5: note: vect_update_ivs_after_vectorizer: phi: i_72 = PHI <0(12), i_46(5)>

Applying pattern match.pd:114, generic-match.c:6569
Applying pattern match.pd:49, generic-match.c:3223
common/pixel.c:481:5: note: vect_update_ivs_after_vectorizer: phi: ssim_71 = PHI <0.0(12), ssim_45(5)>

common/pixel.c:481:5: note: reduc phi. skip.
Setting upper bound of nb iterations for epilogue loop to 2
common/pixel.c:481:5: note: ------>vectorizing phi: i_72 = PHI <0(16), i_46(5)>

common/pixel.c:481:5: note: ------>vectorizing phi: ssim_71 = PHI <0.0(16), ssim_45(5)>

common/pixel.c:481:5: note: ------>vectorizing statement: # DEBUG ssim => ssim_71

common/pixel.c:481:5: note: ------>vectorizing statement: # DEBUG i => i_72

common/pixel.c:481:5: note: ------>vectorizing statement: _6 = (long unsigned int) i_72;

common/pixel.c:481:5: note: ------>vectorizing statement: _7 = _6 * 16;

common/pixel.c:481:5: note: ------>vectorizing statement: _9 = sum0_8(D) + _7;

common/pixel.c:481:5: note: ------>vectorizing statement: _10 = *_9[3];

common/pixel.c:481:5: note: transform statement.
common/pixel.c:481:5: note: no array mode for V4SI[4]
common/pixel.c:481:5: note: transform load. ncopies = 1
common/pixel.c:481:5: note: create vector_type-pointer variable to type: vector(4) int  vectorizing an array ref: *sum0_8(D)
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:481:5: note: created vectp_sum0.1215_104
common/pixel.c:481:5: note: add new stmt: vect__10.1216_101 = MEM[(int *)vectp_sum0.1214_103];
common/pixel.c:481:5: note: add new stmt: vectp_sum0.1214_100 = vectp_sum0.1214_103 + 16;
common/pixel.c:481:5: note: add new stmt: vect__10.1217_99 = MEM[(int *)vectp_sum0.1214_100];
common/pixel.c:481:5: note: add new stmt: vectp_sum0.1214_98 = vectp_sum0.1214_100 + 16;
common/pixel.c:481:5: note: add new stmt: vect__10.1218_97 = MEM[(int *)vectp_sum0.1214_98];
common/pixel.c:481:5: note: add new stmt: vectp_sum0.1214_96 = vectp_sum0.1214_98 + 16;
common/pixel.c:481:5: note: add new stmt: vect__10.1219_95 = MEM[(int *)vectp_sum0.1214_96];
common/pixel.c:481:5: note: add new stmt: vect_perm_even_94 = VEC_PERM_EXPR <vect__10.1216_101, vect__10.1217_99, { 0, 2, 4, 6 }>;
common/pixel.c:481:5: note: add new stmt: vect_perm_odd_93 = VEC_PERM_EXPR <vect__10.1216_101, vect__10.1217_99, { 1, 3, 5, 7 }>;
common/pixel.c:481:5: note: add new stmt: vect_perm_even_92 = VEC_PERM_EXPR <vect__10.1218_97, vect__10.1219_95, { 0, 2, 4, 6 }>;
common/pixel.c:481:5: note: add new stmt: vect_perm_odd_91 = VEC_PERM_EXPR <vect__10.1218_97, vect__10.1219_95, { 1, 3, 5, 7 }>;
common/pixel.c:481:5: note: add new stmt: vect_perm_even_90 = VEC_PERM_EXPR <vect_perm_even_94, vect_perm_even_92, { 0, 2, 4, 6 }>;
common/pixel.c:481:5: note: add new stmt: vect_perm_odd_89 = VEC_PERM_EXPR <vect_perm_even_94, vect_perm_even_92, { 1, 3, 5, 7 }>;
common/pixel.c:481:5: note: add new stmt: vect_perm_even_88 = VEC_PERM_EXPR <vect_perm_odd_93, vect_perm_odd_91, { 0, 2, 4, 6 }>;
common/pixel.c:481:5: note: add new stmt: vect_perm_odd_87 = VEC_PERM_EXPR <vect_perm_odd_93, vect_perm_odd_91, { 1, 3, 5, 7 }>;
common/pixel.c:481:5: note: ------>vectorizing statement: _11 = _6 + 1;

common/pixel.c:481:5: note: ------>vectorizing statement: _12 = _11 * 16;

common/pixel.c:481:5: note: ------>vectorizing statement: _13 = sum0_8(D) + _12;

common/pixel.c:481:5: note: ------>vectorizing statement: _14 = *_13[3];

common/pixel.c:481:5: note: transform statement.
common/pixel.c:481:5: note: no array mode for V4SI[4]
common/pixel.c:481:5: note: transform load. ncopies = 1
common/pixel.c:481:5: note: create vector_type-pointer variable to type: vector(4) int  vectorizing an array ref: *sum0_8(D)
common/pixel.c:481:5: note: created vectp_sum0.1221_86
common/pixel.c:481:5: note: add new stmt: vect__14.1222_83 = MEM[(int *)vectp_sum0.1220_85];
common/pixel.c:481:5: note: add new stmt: vectp_sum0.1220_82 = vectp_sum0.1220_85 + 16;
common/pixel.c:481:5: note: add new stmt: vect__14.1223_81 = MEM[(int *)vectp_sum0.1220_82];
common/pixel.c:481:5: note: add new stmt: vectp_sum0.1220_80 = vectp_sum0.1220_82 + 16;
common/pixel.c:481:5: note: add new stmt: vect__14.1224_79 = MEM[(int *)vectp_sum0.1220_80];
common/pixel.c:481:5: note: add new stmt: vectp_sum0.1220_78 = vectp_sum0.1220_80 + 16;
common/pixel.c:481:5: note: add new stmt: vect__14.1225_77 = MEM[(int *)vectp_sum0.1220_78];
common/pixel.c:481:5: note: add new stmt: vect_perm_even_76 = VEC_PERM_EXPR <vect__14.1222_83, vect__14.1223_81, { 0, 2, 4, 6 }>;
common/pixel.c:481:5: note: add new stmt: vect_perm_odd_75 = VEC_PERM_EXPR <vect__14.1222_83, vect__14.1223_81, { 1, 3, 5, 7 }>;
common/pixel.c:481:5: note: add new stmt: vect_perm_even_74 = VEC_PERM_EXPR <vect__14.1224_79, vect__14.1225_77, { 0, 2, 4, 6 }>;
common/pixel.c:481:5: note: add new stmt: vect_perm_odd_73 = VEC_PERM_EXPR <vect__14.1224_79, vect__14.1225_77, { 1, 3, 5, 7 }>;
common/pixel.c:481:5: note: add new stmt: vect_perm_even_70 = VEC_PERM_EXPR <vect_perm_even_76, vect_perm_even_74, { 0, 2, 4, 6 }>;
common/pixel.c:481:5: note: add new stmt: vect_perm_odd_3 = VEC_PERM_EXPR <vect_perm_even_76, vect_perm_even_74, { 1, 3, 5, 7 }>;
common/pixel.c:481:5: note: add new stmt: vect_perm_even_2 = VEC_PERM_EXPR <vect_perm_odd_75, vect_perm_odd_73, { 0, 2, 4, 6 }>;
common/pixel.c:481:5: note: add new stmt: vect_perm_odd_1 = VEC_PERM_EXPR <vect_perm_odd_75, vect_perm_odd_73, { 1, 3, 5, 7 }>;
common/pixel.c:481:5: note: ------>vectorizing statement: _15 = _10 + _14;

common/pixel.c:481:5: note: transform statement.
common/pixel.c:481:5: note: vect_is_simple_use: operand _10
common/pixel.c:481:5: note: def_stmt: _10 = *_9[3];
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: vect_is_simple_use: operand _14
common/pixel.c:481:5: note: def_stmt: _14 = *_13[3];
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: transform binary/unary operation.
common/pixel.c:481:5: note: vect_get_vec_def_for_operand: _10
common/pixel.c:481:5: note: vect_is_simple_use: operand _10
common/pixel.c:481:5: note: def_stmt: _10 = *_9[3];
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: def =  _10
  def_stmt =  _10 = *_9[3];
common/pixel.c:481:5: note: vect_get_vec_def_for_operand: _14
common/pixel.c:481:5: note: vect_is_simple_use: operand _14
common/pixel.c:481:5: note: def_stmt: _14 = *_13[3];
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: def =  _14
  def_stmt =  _14 = *_13[3];
common/pixel.c:481:5: note: add new stmt: vect__15.1226_187 = vect_perm_odd_87 + vect_perm_odd_1;
common/pixel.c:481:5: note: ------>vectorizing statement: _17 = sum1_16(D) + _7;

common/pixel.c:481:5: note: ------>vectorizing statement: _18 = *_17[3];

common/pixel.c:481:5: note: transform statement.
common/pixel.c:481:5: note: no array mode for V4SI[4]
common/pixel.c:481:5: note: transform load. ncopies = 1
common/pixel.c:481:5: note: create vector_type-pointer variable to type: vector(4) int  vectorizing an array ref: *sum1_16(D)
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:481:5: note: created vectp_sum1.1228_186
common/pixel.c:481:5: note: add new stmt: vect__18.1229_183 = MEM[(int *)vectp_sum1.1227_185];
common/pixel.c:481:5: note: add new stmt: vectp_sum1.1227_188 = vectp_sum1.1227_185 + 16;
common/pixel.c:481:5: note: add new stmt: vect__18.1230_189 = MEM[(int *)vectp_sum1.1227_188];
common/pixel.c:481:5: note: add new stmt: vectp_sum1.1227_190 = vectp_sum1.1227_188 + 16;
common/pixel.c:481:5: note: add new stmt: vect__18.1231_191 = MEM[(int *)vectp_sum1.1227_190];
common/pixel.c:481:5: note: add new stmt: vectp_sum1.1227_192 = vectp_sum1.1227_190 + 16;
common/pixel.c:481:5: note: add new stmt: vect__18.1232_193 = MEM[(int *)vectp_sum1.1227_192];
common/pixel.c:481:5: note: add new stmt: vect_perm_even_194 = VEC_PERM_EXPR <vect__18.1229_183, vect__18.1230_189, { 0, 2, 4, 6 }>;
common/pixel.c:481:5: note: add new stmt: vect_perm_odd_195 = VEC_PERM_EXPR <vect__18.1229_183, vect__18.1230_189, { 1, 3, 5, 7 }>;
common/pixel.c:481:5: note: add new stmt: vect_perm_even_196 = VEC_PERM_EXPR <vect__18.1231_191, vect__18.1232_193, { 0, 2, 4, 6 }>;
common/pixel.c:481:5: note: add new stmt: vect_perm_odd_197 = VEC_PERM_EXPR <vect__18.1231_191, vect__18.1232_193, { 1, 3, 5, 7 }>;
common/pixel.c:481:5: note: add new stmt: vect_perm_even_198 = VEC_PERM_EXPR <vect_perm_even_194, vect_perm_even_196, { 0, 2, 4, 6 }>;
common/pixel.c:481:5: note: add new stmt: vect_perm_odd_199 = VEC_PERM_EXPR <vect_perm_even_194, vect_perm_even_196, { 1, 3, 5, 7 }>;
common/pixel.c:481:5: note: add new stmt: vect_perm_even_200 = VEC_PERM_EXPR <vect_perm_odd_195, vect_perm_odd_197, { 0, 2, 4, 6 }>;
common/pixel.c:481:5: note: add new stmt: vect_perm_odd_201 = VEC_PERM_EXPR <vect_perm_odd_195, vect_perm_odd_197, { 1, 3, 5, 7 }>;
common/pixel.c:481:5: note: ------>vectorizing statement: _19 = _15 + _18;

common/pixel.c:481:5: note: transform statement.
common/pixel.c:481:5: note: vect_is_simple_use: operand _15
common/pixel.c:481:5: note: def_stmt: _15 = _10 + _14;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: vect_is_simple_use: operand _18
common/pixel.c:481:5: note: def_stmt: _18 = *_17[3];
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: transform binary/unary operation.
common/pixel.c:481:5: note: vect_get_vec_def_for_operand: _15
common/pixel.c:481:5: note: vect_is_simple_use: operand _15
common/pixel.c:481:5: note: def_stmt: _15 = _10 + _14;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: def =  _15
  def_stmt =  _15 = _10 + _14;
common/pixel.c:481:5: note: vect_get_vec_def_for_operand: _18
common/pixel.c:481:5: note: vect_is_simple_use: operand _18
common/pixel.c:481:5: note: def_stmt: _18 = *_17[3];
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: def =  _18
  def_stmt =  _18 = *_17[3];
common/pixel.c:481:5: note: add new stmt: vect__19.1233_202 = vect__15.1226_187 + vect_perm_odd_201;
common/pixel.c:481:5: note: ------>vectorizing statement: _20 = sum1_16(D) + _12;

common/pixel.c:481:5: note: ------>vectorizing statement: _21 = *_20[3];

common/pixel.c:481:5: note: transform statement.
common/pixel.c:481:5: note: no array mode for V4SI[4]
common/pixel.c:481:5: note: transform load. ncopies = 1
common/pixel.c:481:5: note: create vector_type-pointer variable to type: vector(4) int  vectorizing an array ref: *sum1_16(D)
common/pixel.c:481:5: note: created vectp_sum1.1235_203
common/pixel.c:481:5: note: add new stmt: vect__21.1236_206 = MEM[(int *)vectp_sum1.1234_204];
common/pixel.c:481:5: note: add new stmt: vectp_sum1.1234_207 = vectp_sum1.1234_204 + 16;
common/pixel.c:481:5: note: add new stmt: vect__21.1237_208 = MEM[(int *)vectp_sum1.1234_207];
common/pixel.c:481:5: note: add new stmt: vectp_sum1.1234_209 = vectp_sum1.1234_207 + 16;
common/pixel.c:481:5: note: add new stmt: vect__21.1238_210 = MEM[(int *)vectp_sum1.1234_209];
common/pixel.c:481:5: note: add new stmt: vectp_sum1.1234_211 = vectp_sum1.1234_209 + 16;
common/pixel.c:481:5: note: add new stmt: vect__21.1239_212 = MEM[(int *)vectp_sum1.1234_211];
common/pixel.c:481:5: note: add new stmt: vect_perm_even_213 = VEC_PERM_EXPR <vect__21.1236_206, vect__21.1237_208, { 0, 2, 4, 6 }>;
common/pixel.c:481:5: note: add new stmt: vect_perm_odd_214 = VEC_PERM_EXPR <vect__21.1236_206, vect__21.1237_208, { 1, 3, 5, 7 }>;
common/pixel.c:481:5: note: add new stmt: vect_perm_even_215 = VEC_PERM_EXPR <vect__21.1238_210, vect__21.1239_212, { 0, 2, 4, 6 }>;
common/pixel.c:481:5: note: add new stmt: vect_perm_odd_216 = VEC_PERM_EXPR <vect__21.1238_210, vect__21.1239_212, { 1, 3, 5, 7 }>;
common/pixel.c:481:5: note: add new stmt: vect_perm_even_217 = VEC_PERM_EXPR <vect_perm_even_213, vect_perm_even_215, { 0, 2, 4, 6 }>;
common/pixel.c:481:5: note: add new stmt: vect_perm_odd_218 = VEC_PERM_EXPR <vect_perm_even_213, vect_perm_even_215, { 1, 3, 5, 7 }>;
common/pixel.c:481:5: note: add new stmt: vect_perm_even_219 = VEC_PERM_EXPR <vect_perm_odd_214, vect_perm_odd_216, { 0, 2, 4, 6 }>;
common/pixel.c:481:5: note: add new stmt: vect_perm_odd_220 = VEC_PERM_EXPR <vect_perm_odd_214, vect_perm_odd_216, { 1, 3, 5, 7 }>;
common/pixel.c:481:5: note: ------>vectorizing statement: _22 = _19 + _21;

common/pixel.c:481:5: note: transform statement.
common/pixel.c:481:5: note: vect_is_simple_use: operand _19
common/pixel.c:481:5: note: def_stmt: _19 = _15 + _18;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: vect_is_simple_use: operand _21
common/pixel.c:481:5: note: def_stmt: _21 = *_20[3];
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: transform binary/unary operation.
common/pixel.c:481:5: note: vect_get_vec_def_for_operand: _19
common/pixel.c:481:5: note: vect_is_simple_use: operand _19
common/pixel.c:481:5: note: def_stmt: _19 = _15 + _18;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: def =  _19
  def_stmt =  _19 = _15 + _18;
common/pixel.c:481:5: note: vect_get_vec_def_for_operand: _21
common/pixel.c:481:5: note: vect_is_simple_use: operand _21
common/pixel.c:481:5: note: def_stmt: _21 = *_20[3];
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: def =  _21
  def_stmt =  _21 = *_20[3];
common/pixel.c:481:5: note: add new stmt: vect__22.1240_221 = vect__19.1233_202 + vect_perm_odd_220;
common/pixel.c:481:5: note: ------>vectorizing statement: _23 = *_9[2];

common/pixel.c:481:5: note: transform statement.
common/pixel.c:481:5: note: no array mode for V4SI[4]
common/pixel.c:481:5: note: transform load. ncopies = 1
common/pixel.c:481:5: note: ------>vectorizing statement: _24 = *_13[2];

common/pixel.c:481:5: note: transform statement.
common/pixel.c:481:5: note: no array mode for V4SI[4]
common/pixel.c:481:5: note: transform load. ncopies = 1
common/pixel.c:481:5: note: ------>vectorizing statement: _25 = _23 + _24;

common/pixel.c:481:5: note: transform statement.
common/pixel.c:481:5: note: vect_is_simple_use: operand _23
common/pixel.c:481:5: note: def_stmt: _23 = *_9[2];
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: vect_is_simple_use: operand _24
common/pixel.c:481:5: note: def_stmt: _24 = *_13[2];
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: transform binary/unary operation.
common/pixel.c:481:5: note: vect_get_vec_def_for_operand: _23
common/pixel.c:481:5: note: vect_is_simple_use: operand _23
common/pixel.c:481:5: note: def_stmt: _23 = *_9[2];
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: def =  _23
  def_stmt =  _23 = *_9[2];
common/pixel.c:481:5: note: vect_get_vec_def_for_operand: _24
common/pixel.c:481:5: note: vect_is_simple_use: operand _24
common/pixel.c:481:5: note: def_stmt: _24 = *_13[2];
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: def =  _24
  def_stmt =  _24 = *_13[2];
common/pixel.c:481:5: note: add new stmt: vect__25.1241_222 = vect_perm_odd_89 + vect_perm_odd_3;
common/pixel.c:481:5: note: ------>vectorizing statement: _26 = *_17[2];

common/pixel.c:481:5: note: transform statement.
common/pixel.c:481:5: note: no array mode for V4SI[4]
common/pixel.c:481:5: note: transform load. ncopies = 1
common/pixel.c:481:5: note: ------>vectorizing statement: _27 = _25 + _26;

common/pixel.c:481:5: note: transform statement.
common/pixel.c:481:5: note: vect_is_simple_use: operand _25
common/pixel.c:481:5: note: def_stmt: _25 = _23 + _24;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: vect_is_simple_use: operand _26
common/pixel.c:481:5: note: def_stmt: _26 = *_17[2];
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: transform binary/unary operation.
common/pixel.c:481:5: note: vect_get_vec_def_for_operand: _25
common/pixel.c:481:5: note: vect_is_simple_use: operand _25
common/pixel.c:481:5: note: def_stmt: _25 = _23 + _24;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: def =  _25
  def_stmt =  _25 = _23 + _24;
common/pixel.c:481:5: note: vect_get_vec_def_for_operand: _26
common/pixel.c:481:5: note: vect_is_simple_use: operand _26
common/pixel.c:481:5: note: def_stmt: _26 = *_17[2];
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: def =  _26
  def_stmt =  _26 = *_17[2];
common/pixel.c:481:5: note: add new stmt: vect__27.1242_223 = vect__25.1241_222 + vect_perm_odd_199;
common/pixel.c:481:5: note: ------>vectorizing statement: _28 = *_20[2];

common/pixel.c:481:5: note: transform statement.
common/pixel.c:481:5: note: no array mode for V4SI[4]
common/pixel.c:481:5: note: transform load. ncopies = 1
common/pixel.c:481:5: note: ------>vectorizing statement: _29 = _27 + _28;

common/pixel.c:481:5: note: transform statement.
common/pixel.c:481:5: note: vect_is_simple_use: operand _27
common/pixel.c:481:5: note: def_stmt: _27 = _25 + _26;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: vect_is_simple_use: operand _28
common/pixel.c:481:5: note: def_stmt: _28 = *_20[2];
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: transform binary/unary operation.
common/pixel.c:481:5: note: vect_get_vec_def_for_operand: _27
common/pixel.c:481:5: note: vect_is_simple_use: operand _27
common/pixel.c:481:5: note: def_stmt: _27 = _25 + _26;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: def =  _27
  def_stmt =  _27 = _25 + _26;
common/pixel.c:481:5: note: vect_get_vec_def_for_operand: _28
common/pixel.c:481:5: note: vect_is_simple_use: operand _28
common/pixel.c:481:5: note: def_stmt: _28 = *_20[2];
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: def =  _28
  def_stmt =  _28 = *_20[2];
common/pixel.c:481:5: note: add new stmt: vect__29.1243_224 = vect__27.1242_223 + vect_perm_odd_218;
common/pixel.c:481:5: note: ------>vectorizing statement: _30 = *_9[1];

common/pixel.c:481:5: note: transform statement.
common/pixel.c:481:5: note: no array mode for V4SI[4]
common/pixel.c:481:5: note: transform load. ncopies = 1
common/pixel.c:481:5: note: ------>vectorizing statement: _31 = *_13[1];

common/pixel.c:481:5: note: transform statement.
common/pixel.c:481:5: note: no array mode for V4SI[4]
common/pixel.c:481:5: note: transform load. ncopies = 1
common/pixel.c:481:5: note: ------>vectorizing statement: _32 = _30 + _31;

common/pixel.c:481:5: note: transform statement.
common/pixel.c:481:5: note: vect_is_simple_use: operand _30
common/pixel.c:481:5: note: def_stmt: _30 = *_9[1];
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: vect_is_simple_use: operand _31
common/pixel.c:481:5: note: def_stmt: _31 = *_13[1];
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: transform binary/unary operation.
common/pixel.c:481:5: note: vect_get_vec_def_for_operand: _30
common/pixel.c:481:5: note: vect_is_simple_use: operand _30
common/pixel.c:481:5: note: def_stmt: _30 = *_9[1];
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: def =  _30
  def_stmt =  _30 = *_9[1];
common/pixel.c:481:5: note: vect_get_vec_def_for_operand: _31
common/pixel.c:481:5: note: vect_is_simple_use: operand _31
common/pixel.c:481:5: note: def_stmt: _31 = *_13[1];
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: def =  _31
  def_stmt =  _31 = *_13[1];
common/pixel.c:481:5: note: add new stmt: vect__32.1244_225 = vect_perm_even_88 + vect_perm_even_2;
common/pixel.c:481:5: note: ------>vectorizing statement: _33 = *_17[1];

common/pixel.c:481:5: note: transform statement.
common/pixel.c:481:5: note: no array mode for V4SI[4]
common/pixel.c:481:5: note: transform load. ncopies = 1
common/pixel.c:481:5: note: ------>vectorizing statement: _34 = _32 + _33;

common/pixel.c:481:5: note: transform statement.
common/pixel.c:481:5: note: vect_is_simple_use: operand _32
common/pixel.c:481:5: note: def_stmt: _32 = _30 + _31;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: vect_is_simple_use: operand _33
common/pixel.c:481:5: note: def_stmt: _33 = *_17[1];
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: transform binary/unary operation.
common/pixel.c:481:5: note: vect_get_vec_def_for_operand: _32
common/pixel.c:481:5: note: vect_is_simple_use: operand _32
common/pixel.c:481:5: note: def_stmt: _32 = _30 + _31;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: def =  _32
  def_stmt =  _32 = _30 + _31;
common/pixel.c:481:5: note: vect_get_vec_def_for_operand: _33
common/pixel.c:481:5: note: vect_is_simple_use: operand _33
common/pixel.c:481:5: note: def_stmt: _33 = *_17[1];
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: def =  _33
  def_stmt =  _33 = *_17[1];
common/pixel.c:481:5: note: add new stmt: vect__34.1245_226 = vect__32.1244_225 + vect_perm_even_200;
common/pixel.c:481:5: note: ------>vectorizing statement: _35 = *_20[1];

common/pixel.c:481:5: note: transform statement.
common/pixel.c:481:5: note: no array mode for V4SI[4]
common/pixel.c:481:5: note: transform load. ncopies = 1
common/pixel.c:481:5: note: ------>vectorizing statement: _36 = _34 + _35;

common/pixel.c:481:5: note: transform statement.
common/pixel.c:481:5: note: vect_is_simple_use: operand _34
common/pixel.c:481:5: note: def_stmt: _34 = _32 + _33;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: vect_is_simple_use: operand _35
common/pixel.c:481:5: note: def_stmt: _35 = *_20[1];
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: transform binary/unary operation.
common/pixel.c:481:5: note: vect_get_vec_def_for_operand: _34
common/pixel.c:481:5: note: vect_is_simple_use: operand _34
common/pixel.c:481:5: note: def_stmt: _34 = _32 + _33;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: def =  _34
  def_stmt =  _34 = _32 + _33;
common/pixel.c:481:5: note: vect_get_vec_def_for_operand: _35
common/pixel.c:481:5: note: vect_is_simple_use: operand _35
common/pixel.c:481:5: note: def_stmt: _35 = *_20[1];
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: def =  _35
  def_stmt =  _35 = *_20[1];
common/pixel.c:481:5: note: add new stmt: vect__36.1246_227 = vect__34.1245_226 + vect_perm_even_219;
common/pixel.c:481:5: note: ------>vectorizing statement: _37 = *_9[0];

common/pixel.c:481:5: note: transform statement.
common/pixel.c:481:5: note: no array mode for V4SI[4]
common/pixel.c:481:5: note: transform load. ncopies = 1
common/pixel.c:481:5: note: ------>vectorizing statement: _38 = *_13[0];

common/pixel.c:481:5: note: transform statement.
common/pixel.c:481:5: note: no array mode for V4SI[4]
common/pixel.c:481:5: note: transform load. ncopies = 1
common/pixel.c:481:5: note: ------>vectorizing statement: _39 = _37 + _38;

common/pixel.c:481:5: note: transform statement.
common/pixel.c:481:5: note: vect_is_simple_use: operand _37
common/pixel.c:481:5: note: def_stmt: _37 = *_9[0];
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: vect_is_simple_use: operand _38
common/pixel.c:481:5: note: def_stmt: _38 = *_13[0];
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: transform binary/unary operation.
common/pixel.c:481:5: note: vect_get_vec_def_for_operand: _37
common/pixel.c:481:5: note: vect_is_simple_use: operand _37
common/pixel.c:481:5: note: def_stmt: _37 = *_9[0];
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: def =  _37
  def_stmt =  _37 = *_9[0];
common/pixel.c:481:5: note: vect_get_vec_def_for_operand: _38
common/pixel.c:481:5: note: vect_is_simple_use: operand _38
common/pixel.c:481:5: note: def_stmt: _38 = *_13[0];
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: def =  _38
  def_stmt =  _38 = *_13[0];
common/pixel.c:481:5: note: add new stmt: vect__39.1247_228 = vect_perm_even_90 + vect_perm_even_70;
common/pixel.c:481:5: note: ------>vectorizing statement: _40 = *_17[0];

common/pixel.c:481:5: note: transform statement.
common/pixel.c:481:5: note: no array mode for V4SI[4]
common/pixel.c:481:5: note: transform load. ncopies = 1
common/pixel.c:481:5: note: ------>vectorizing statement: _41 = _39 + _40;

common/pixel.c:481:5: note: transform statement.
common/pixel.c:481:5: note: vect_is_simple_use: operand _39
common/pixel.c:481:5: note: def_stmt: _39 = _37 + _38;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: vect_is_simple_use: operand _40
common/pixel.c:481:5: note: def_stmt: _40 = *_17[0];
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: transform binary/unary operation.
common/pixel.c:481:5: note: vect_get_vec_def_for_operand: _39
common/pixel.c:481:5: note: vect_is_simple_use: operand _39
common/pixel.c:481:5: note: def_stmt: _39 = _37 + _38;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: def =  _39
  def_stmt =  _39 = _37 + _38;
common/pixel.c:481:5: note: vect_get_vec_def_for_operand: _40
common/pixel.c:481:5: note: vect_is_simple_use: operand _40
common/pixel.c:481:5: note: def_stmt: _40 = *_17[0];
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: def =  _40
  def_stmt =  _40 = *_17[0];
common/pixel.c:481:5: note: add new stmt: vect__41.1248_229 = vect__39.1247_228 + vect_perm_even_198;
common/pixel.c:481:5: note: ------>vectorizing statement: _42 = *_20[0];

common/pixel.c:481:5: note: transform statement.
common/pixel.c:481:5: note: no array mode for V4SI[4]
common/pixel.c:481:5: note: transform load. ncopies = 1
common/pixel.c:481:5: note: ------>vectorizing statement: _43 = _41 + _42;

common/pixel.c:481:5: note: transform statement.
common/pixel.c:481:5: note: vect_is_simple_use: operand _41
common/pixel.c:481:5: note: def_stmt: _41 = _39 + _40;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: vect_is_simple_use: operand _42
common/pixel.c:481:5: note: def_stmt: _42 = *_20[0];
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: transform binary/unary operation.
common/pixel.c:481:5: note: vect_get_vec_def_for_operand: _41
common/pixel.c:481:5: note: vect_is_simple_use: operand _41
common/pixel.c:481:5: note: def_stmt: _41 = _39 + _40;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: def =  _41
  def_stmt =  _41 = _39 + _40;
common/pixel.c:481:5: note: vect_get_vec_def_for_operand: _42
common/pixel.c:481:5: note: vect_is_simple_use: operand _42
common/pixel.c:481:5: note: def_stmt: _42 = *_20[0];
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: def =  _42
  def_stmt =  _42 = *_20[0];
common/pixel.c:481:5: note: add new stmt: vect__43.1249_230 = vect__41.1248_229 + vect_perm_even_217;
common/pixel.c:481:5: note: ------>vectorizing statement: # DEBUG s1 => _43

common/pixel.c:481:5: note: ------>vectorizing statement: # DEBUG s2 => _36

common/pixel.c:481:5: note: ------>vectorizing statement: # DEBUG ss => _29

common/pixel.c:481:5: note: ------>vectorizing statement: # DEBUG s12 => _22

common/pixel.c:481:5: note: ------>vectorizing statement: _47 = _29 * 64;

common/pixel.c:481:5: note: transform statement.
common/pixel.c:481:5: note: vect_is_simple_use: operand _29
common/pixel.c:481:5: note: def_stmt: _29 = _27 + _28;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: vect_is_simple_use: operand 64
common/pixel.c:481:5: note: transform binary/unary operation.
common/pixel.c:481:5: note: vect_get_vec_def_for_operand: _29
common/pixel.c:481:5: note: vect_is_simple_use: operand _29
common/pixel.c:481:5: note: def_stmt: _29 = _27 + _28;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: def =  _29
  def_stmt =  _29 = _27 + _28;
common/pixel.c:481:5: note: vect_get_vec_def_for_operand: 64
common/pixel.c:481:5: note: vect_is_simple_use: operand 64
common/pixel.c:481:5: note: Create vector_cst. nunits = 4
common/pixel.c:481:5: note: created new init_stmt: vect_cst_.1251_231 = { 64, 64, 64, 64 };
common/pixel.c:481:5: note: add new stmt: vect__47.1250_232 = vect__29.1243_224 * vect_cst_.1251_231;
common/pixel.c:481:5: note: ------>vectorizing statement: _48 = _43 * _43;

common/pixel.c:481:5: note: transform statement.
common/pixel.c:481:5: note: vect_is_simple_use: operand _43
common/pixel.c:481:5: note: def_stmt: _43 = _41 + _42;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: vect_is_simple_use: operand _43
common/pixel.c:481:5: note: def_stmt: _43 = _41 + _42;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: transform binary/unary operation.
common/pixel.c:481:5: note: vect_get_vec_def_for_operand: _43
common/pixel.c:481:5: note: vect_is_simple_use: operand _43
common/pixel.c:481:5: note: def_stmt: _43 = _41 + _42;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: def =  _43
  def_stmt =  _43 = _41 + _42;
common/pixel.c:481:5: note: vect_get_vec_def_for_operand: _43
common/pixel.c:481:5: note: vect_is_simple_use: operand _43
common/pixel.c:481:5: note: def_stmt: _43 = _41 + _42;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: def =  _43
  def_stmt =  _43 = _41 + _42;
common/pixel.c:481:5: note: add new stmt: vect__48.1252_233 = vect__43.1249_230 * vect__43.1249_230;
common/pixel.c:481:5: note: ------>vectorizing statement: _49 = _47 - _48;

common/pixel.c:481:5: note: transform statement.
common/pixel.c:481:5: note: vect_is_simple_use: operand _47
common/pixel.c:481:5: note: def_stmt: _47 = _29 * 64;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: vect_is_simple_use: operand _48
common/pixel.c:481:5: note: def_stmt: _48 = _43 * _43;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: transform binary/unary operation.
common/pixel.c:481:5: note: vect_get_vec_def_for_operand: _47
common/pixel.c:481:5: note: vect_is_simple_use: operand _47
common/pixel.c:481:5: note: def_stmt: _47 = _29 * 64;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: def =  _47
  def_stmt =  _47 = _29 * 64;
common/pixel.c:481:5: note: vect_get_vec_def_for_operand: _48
common/pixel.c:481:5: note: vect_is_simple_use: operand _48
common/pixel.c:481:5: note: def_stmt: _48 = _43 * _43;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: def =  _48
  def_stmt =  _48 = _43 * _43;
common/pixel.c:481:5: note: add new stmt: vect__49.1253_234 = vect__47.1250_232 - vect__48.1252_233;
common/pixel.c:481:5: note: ------>vectorizing statement: _50 = _36 * _36;

common/pixel.c:481:5: note: transform statement.
common/pixel.c:481:5: note: vect_is_simple_use: operand _36
common/pixel.c:481:5: note: def_stmt: _36 = _34 + _35;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: vect_is_simple_use: operand _36
common/pixel.c:481:5: note: def_stmt: _36 = _34 + _35;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: transform binary/unary operation.
common/pixel.c:481:5: note: vect_get_vec_def_for_operand: _36
common/pixel.c:481:5: note: vect_is_simple_use: operand _36
common/pixel.c:481:5: note: def_stmt: _36 = _34 + _35;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: def =  _36
  def_stmt =  _36 = _34 + _35;
common/pixel.c:481:5: note: vect_get_vec_def_for_operand: _36
common/pixel.c:481:5: note: vect_is_simple_use: operand _36
common/pixel.c:481:5: note: def_stmt: _36 = _34 + _35;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: def =  _36
  def_stmt =  _36 = _34 + _35;
common/pixel.c:481:5: note: add new stmt: vect__50.1254_235 = vect__36.1246_227 * vect__36.1246_227;
common/pixel.c:481:5: note: ------>vectorizing statement: vars_51 = _49 - _50;

common/pixel.c:481:5: note: transform statement.
common/pixel.c:481:5: note: vect_is_simple_use: operand _49
common/pixel.c:481:5: note: def_stmt: _49 = _47 - _48;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: vect_is_simple_use: operand _50
common/pixel.c:481:5: note: def_stmt: _50 = _36 * _36;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: transform binary/unary operation.
common/pixel.c:481:5: note: vect_get_vec_def_for_operand: _49
common/pixel.c:481:5: note: vect_is_simple_use: operand _49
common/pixel.c:481:5: note: def_stmt: _49 = _47 - _48;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: def =  _49
  def_stmt =  _49 = _47 - _48;
common/pixel.c:481:5: note: vect_get_vec_def_for_operand: _50
common/pixel.c:481:5: note: vect_is_simple_use: operand _50
common/pixel.c:481:5: note: def_stmt: _50 = _36 * _36;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: def =  _50
  def_stmt =  _50 = _36 * _36;
common/pixel.c:481:5: note: add new stmt: vect_vars_51.1255_236 = vect__49.1253_234 - vect__50.1254_235;
common/pixel.c:481:5: note: ------>vectorizing statement: # DEBUG vars => vars_51

common/pixel.c:481:5: note: ------>vectorizing statement: _52 = _22 * 64;

common/pixel.c:481:5: note: transform statement.
common/pixel.c:481:5: note: vect_is_simple_use: operand _22
common/pixel.c:481:5: note: def_stmt: _22 = _19 + _21;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: vect_is_simple_use: operand 64
common/pixel.c:481:5: note: transform binary/unary operation.
common/pixel.c:481:5: note: vect_get_vec_def_for_operand: _22
common/pixel.c:481:5: note: vect_is_simple_use: operand _22
common/pixel.c:481:5: note: def_stmt: _22 = _19 + _21;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: def =  _22
  def_stmt =  _22 = _19 + _21;
common/pixel.c:481:5: note: vect_get_vec_def_for_operand: 64
common/pixel.c:481:5: note: vect_is_simple_use: operand 64
common/pixel.c:481:5: note: Create vector_cst. nunits = 4
common/pixel.c:481:5: note: created new init_stmt: vect_cst_.1257_237 = { 64, 64, 64, 64 };
common/pixel.c:481:5: note: add new stmt: vect__52.1256_238 = vect__22.1240_221 * vect_cst_.1257_237;
common/pixel.c:481:5: note: ------>vectorizing statement: _53 = _36 * _43;

common/pixel.c:481:5: note: transform statement.
common/pixel.c:481:5: note: vect_is_simple_use: operand _36
common/pixel.c:481:5: note: def_stmt: _36 = _34 + _35;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: vect_is_simple_use: operand _43
common/pixel.c:481:5: note: def_stmt: _43 = _41 + _42;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: transform binary/unary operation.
common/pixel.c:481:5: note: vect_get_vec_def_for_operand: _36
common/pixel.c:481:5: note: vect_is_simple_use: operand _36
common/pixel.c:481:5: note: def_stmt: _36 = _34 + _35;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: def =  _36
  def_stmt =  _36 = _34 + _35;
common/pixel.c:481:5: note: vect_get_vec_def_for_operand: _43
common/pixel.c:481:5: note: vect_is_simple_use: operand _43
common/pixel.c:481:5: note: def_stmt: _43 = _41 + _42;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: def =  _43
  def_stmt =  _43 = _41 + _42;
common/pixel.c:481:5: note: add new stmt: vect__53.1258_239 = vect__36.1246_227 * vect__43.1249_230;
common/pixel.c:481:5: note: ------>vectorizing statement: covar_54 = _52 - _53;

common/pixel.c:481:5: note: transform statement.
common/pixel.c:481:5: note: vect_is_simple_use: operand _52
common/pixel.c:481:5: note: def_stmt: _52 = _22 * 64;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: vect_is_simple_use: operand _53
common/pixel.c:481:5: note: def_stmt: _53 = _36 * _43;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: transform binary/unary operation.
common/pixel.c:481:5: note: vect_get_vec_def_for_operand: _52
common/pixel.c:481:5: note: vect_is_simple_use: operand _52
common/pixel.c:481:5: note: def_stmt: _52 = _22 * 64;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: def =  _52
  def_stmt =  _52 = _22 * 64;
common/pixel.c:481:5: note: vect_get_vec_def_for_operand: _53
common/pixel.c:481:5: note: vect_is_simple_use: operand _53
common/pixel.c:481:5: note: def_stmt: _53 = _36 * _43;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: def =  _53
  def_stmt =  _53 = _36 * _43;
common/pixel.c:481:5: note: add new stmt: vect_covar_54.1259_240 = vect__52.1256_238 - vect__53.1258_239;
common/pixel.c:481:5: note: ------>vectorizing statement: # DEBUG covar => covar_54

common/pixel.c:481:5: note: ------>vectorizing statement: _55 = _43 * 2;

common/pixel.c:481:5: note: transform statement.
common/pixel.c:481:5: note: vect_is_simple_use: operand _43
common/pixel.c:481:5: note: def_stmt: _43 = _41 + _42;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: vect_is_simple_use: operand 2
common/pixel.c:481:5: note: transform binary/unary operation.
common/pixel.c:481:5: note: vect_get_vec_def_for_operand: _43
common/pixel.c:481:5: note: vect_is_simple_use: operand _43
common/pixel.c:481:5: note: def_stmt: _43 = _41 + _42;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: def =  _43
  def_stmt =  _43 = _41 + _42;
common/pixel.c:481:5: note: vect_get_vec_def_for_operand: 2
common/pixel.c:481:5: note: vect_is_simple_use: operand 2
common/pixel.c:481:5: note: Create vector_cst. nunits = 4
common/pixel.c:481:5: note: created new init_stmt: vect_cst_.1261_241 = { 2, 2, 2, 2 };
common/pixel.c:481:5: note: add new stmt: vect__55.1260_242 = vect__43.1249_230 * vect_cst_.1261_241;
common/pixel.c:481:5: note: ------>vectorizing statement: _56 = _36 * _55;

common/pixel.c:481:5: note: transform statement.
common/pixel.c:481:5: note: vect_is_simple_use: operand _36
common/pixel.c:481:5: note: def_stmt: _36 = _34 + _35;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: vect_is_simple_use: operand _55
common/pixel.c:481:5: note: def_stmt: _55 = _43 * 2;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: transform binary/unary operation.
common/pixel.c:481:5: note: vect_get_vec_def_for_operand: _36
common/pixel.c:481:5: note: vect_is_simple_use: operand _36
common/pixel.c:481:5: note: def_stmt: _36 = _34 + _35;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: def =  _36
  def_stmt =  _36 = _34 + _35;
common/pixel.c:481:5: note: vect_get_vec_def_for_operand: _55
common/pixel.c:481:5: note: vect_is_simple_use: operand _55
common/pixel.c:481:5: note: def_stmt: _55 = _43 * 2;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: def =  _55
  def_stmt =  _55 = _43 * 2;
common/pixel.c:481:5: note: add new stmt: vect__56.1262_243 = vect__36.1246_227 * vect__55.1260_242;
common/pixel.c:481:5: note: ------>vectorizing statement: _57 = _56 + 416;

common/pixel.c:481:5: note: transform statement.
common/pixel.c:481:5: note: vect_is_simple_use: operand _56
common/pixel.c:481:5: note: def_stmt: _56 = _36 * _55;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: vect_is_simple_use: operand 416
common/pixel.c:481:5: note: transform binary/unary operation.
common/pixel.c:481:5: note: vect_get_vec_def_for_operand: _56
common/pixel.c:481:5: note: vect_is_simple_use: operand _56
common/pixel.c:481:5: note: def_stmt: _56 = _36 * _55;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: def =  _56
  def_stmt =  _56 = _36 * _55;
common/pixel.c:481:5: note: vect_get_vec_def_for_operand: 416
common/pixel.c:481:5: note: vect_is_simple_use: operand 416
common/pixel.c:481:5: note: Create vector_cst. nunits = 4
common/pixel.c:481:5: note: created new init_stmt: vect_cst_.1264_244 = { 416, 416, 416, 416 };
common/pixel.c:481:5: note: add new stmt: vect__57.1263_245 = vect__56.1262_243 + vect_cst_.1264_244;
common/pixel.c:481:5: note: ------>vectorizing statement: _58 = (float) _57;

common/pixel.c:481:5: note: transform statement.
common/pixel.c:481:5: note: vect_is_simple_use: operand _57
common/pixel.c:481:5: note: def_stmt: _57 = _56 + 416;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: transform conversion. ncopies = 1.
common/pixel.c:481:5: note: vect_get_vec_def_for_operand: _57
common/pixel.c:481:5: note: vect_is_simple_use: operand _57
common/pixel.c:481:5: note: def_stmt: _57 = _56 + 416;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: def =  _57
  def_stmt =  _57 = _56 + 416;
common/pixel.c:481:5: note: add new stmt: vect__58.1265_246 = (vector(4) float) vect__57.1263_245;
common/pixel.c:481:5: note: ------>vectorizing statement: _59 = covar_54 * 2;

common/pixel.c:481:5: note: transform statement.
common/pixel.c:481:5: note: vect_is_simple_use: operand covar_54
common/pixel.c:481:5: note: def_stmt: covar_54 = _52 - _53;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: vect_is_simple_use: operand 2
common/pixel.c:481:5: note: transform binary/unary operation.
common/pixel.c:481:5: note: vect_get_vec_def_for_operand: covar_54
common/pixel.c:481:5: note: vect_is_simple_use: operand covar_54
common/pixel.c:481:5: note: def_stmt: covar_54 = _52 - _53;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: def =  covar_54
  def_stmt =  covar_54 = _52 - _53;
common/pixel.c:481:5: note: vect_get_vec_def_for_operand: 2
common/pixel.c:481:5: note: vect_is_simple_use: operand 2
common/pixel.c:481:5: note: Create vector_cst. nunits = 4
common/pixel.c:481:5: note: created new init_stmt: vect_cst_.1267_247 = { 2, 2, 2, 2 };
common/pixel.c:481:5: note: add new stmt: vect__59.1266_248 = vect_covar_54.1259_240 * vect_cst_.1267_247;
common/pixel.c:481:5: note: ------>vectorizing statement: _60 = _59 + 235963;

common/pixel.c:481:5: note: transform statement.
common/pixel.c:481:5: note: vect_is_simple_use: operand _59
common/pixel.c:481:5: note: def_stmt: _59 = covar_54 * 2;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: vect_is_simple_use: operand 235963
common/pixel.c:481:5: note: transform binary/unary operation.
common/pixel.c:481:5: note: vect_get_vec_def_for_operand: _59
common/pixel.c:481:5: note: vect_is_simple_use: operand _59
common/pixel.c:481:5: note: def_stmt: _59 = covar_54 * 2;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: def =  _59
  def_stmt =  _59 = covar_54 * 2;
common/pixel.c:481:5: note: vect_get_vec_def_for_operand: 235963
common/pixel.c:481:5: note: vect_is_simple_use: operand 235963
common/pixel.c:481:5: note: Create vector_cst. nunits = 4
common/pixel.c:481:5: note: created new init_stmt: vect_cst_.1269_249 = { 235963, 235963, 235963, 235963 };
common/pixel.c:481:5: note: add new stmt: vect__60.1268_250 = vect__59.1266_248 + vect_cst_.1269_249;
common/pixel.c:481:5: note: ------>vectorizing statement: _61 = (float) _60;

common/pixel.c:481:5: note: transform statement.
common/pixel.c:481:5: note: vect_is_simple_use: operand _60
common/pixel.c:481:5: note: def_stmt: _60 = _59 + 235963;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: transform conversion. ncopies = 1.
common/pixel.c:481:5: note: vect_get_vec_def_for_operand: _60
common/pixel.c:481:5: note: vect_is_simple_use: operand _60
common/pixel.c:481:5: note: def_stmt: _60 = _59 + 235963;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: def =  _60
  def_stmt =  _60 = _59 + 235963;
common/pixel.c:481:5: note: add new stmt: vect__61.1270_251 = (vector(4) float) vect__60.1268_250;
common/pixel.c:481:5: note: ------>vectorizing statement: _62 = _58 * _61;

common/pixel.c:481:5: note: transform statement.
common/pixel.c:481:5: note: vect_is_simple_use: operand _58
common/pixel.c:481:5: note: def_stmt: _58 = (float) _57;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: vect_is_simple_use: operand _61
common/pixel.c:481:5: note: def_stmt: _61 = (float) _60;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: transform binary/unary operation.
common/pixel.c:481:5: note: vect_get_vec_def_for_operand: _58
common/pixel.c:481:5: note: vect_is_simple_use: operand _58
common/pixel.c:481:5: note: def_stmt: _58 = (float) _57;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: def =  _58
  def_stmt =  _58 = (float) _57;
common/pixel.c:481:5: note: vect_get_vec_def_for_operand: _61
common/pixel.c:481:5: note: vect_is_simple_use: operand _61
common/pixel.c:481:5: note: def_stmt: _61 = (float) _60;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: def =  _61
  def_stmt =  _61 = (float) _60;
common/pixel.c:481:5: note: add new stmt: vect__62.1271_252 = vect__58.1265_246 * vect__61.1270_251;
common/pixel.c:481:5: note: ------>vectorizing statement: _63 = _48 + _50;

common/pixel.c:481:5: note: transform statement.
common/pixel.c:481:5: note: vect_is_simple_use: operand _48
common/pixel.c:481:5: note: def_stmt: _48 = _43 * _43;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: vect_is_simple_use: operand _50
common/pixel.c:481:5: note: def_stmt: _50 = _36 * _36;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: transform binary/unary operation.
common/pixel.c:481:5: note: vect_get_vec_def_for_operand: _48
common/pixel.c:481:5: note: vect_is_simple_use: operand _48
common/pixel.c:481:5: note: def_stmt: _48 = _43 * _43;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: def =  _48
  def_stmt =  _48 = _43 * _43;
common/pixel.c:481:5: note: vect_get_vec_def_for_operand: _50
common/pixel.c:481:5: note: vect_is_simple_use: operand _50
common/pixel.c:481:5: note: def_stmt: _50 = _36 * _36;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: def =  _50
  def_stmt =  _50 = _36 * _36;
common/pixel.c:481:5: note: add new stmt: vect__63.1272_253 = vect__48.1252_233 + vect__50.1254_235;
common/pixel.c:481:5: note: ------>vectorizing statement: _64 = _63 + 416;

common/pixel.c:481:5: note: transform statement.
common/pixel.c:481:5: note: vect_is_simple_use: operand _63
common/pixel.c:481:5: note: def_stmt: _63 = _48 + _50;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: vect_is_simple_use: operand 416
common/pixel.c:481:5: note: transform binary/unary operation.
common/pixel.c:481:5: note: vect_get_vec_def_for_operand: _63
common/pixel.c:481:5: note: vect_is_simple_use: operand _63
common/pixel.c:481:5: note: def_stmt: _63 = _48 + _50;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: def =  _63
  def_stmt =  _63 = _48 + _50;
common/pixel.c:481:5: note: vect_get_vec_def_for_operand: 416
common/pixel.c:481:5: note: vect_is_simple_use: operand 416
common/pixel.c:481:5: note: Create vector_cst. nunits = 4
common/pixel.c:481:5: note: created new init_stmt: vect_cst_.1274_254 = { 416, 416, 416, 416 };
common/pixel.c:481:5: note: add new stmt: vect__64.1273_255 = vect__63.1272_253 + vect_cst_.1274_254;
common/pixel.c:481:5: note: ------>vectorizing statement: _65 = (float) _64;

common/pixel.c:481:5: note: transform statement.
common/pixel.c:481:5: note: vect_is_simple_use: operand _64
common/pixel.c:481:5: note: def_stmt: _64 = _63 + 416;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: transform conversion. ncopies = 1.
common/pixel.c:481:5: note: vect_get_vec_def_for_operand: _64
common/pixel.c:481:5: note: vect_is_simple_use: operand _64
common/pixel.c:481:5: note: def_stmt: _64 = _63 + 416;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: def =  _64
  def_stmt =  _64 = _63 + 416;
common/pixel.c:481:5: note: add new stmt: vect__65.1275_256 = (vector(4) float) vect__64.1273_255;
common/pixel.c:481:5: note: ------>vectorizing statement: _66 = vars_51 + 235963;

common/pixel.c:481:5: note: transform statement.
common/pixel.c:481:5: note: vect_is_simple_use: operand vars_51
common/pixel.c:481:5: note: def_stmt: vars_51 = _49 - _50;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: vect_is_simple_use: operand 235963
common/pixel.c:481:5: note: transform binary/unary operation.
common/pixel.c:481:5: note: vect_get_vec_def_for_operand: vars_51
common/pixel.c:481:5: note: vect_is_simple_use: operand vars_51
common/pixel.c:481:5: note: def_stmt: vars_51 = _49 - _50;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: def =  vars_51
  def_stmt =  vars_51 = _49 - _50;
common/pixel.c:481:5: note: vect_get_vec_def_for_operand: 235963
common/pixel.c:481:5: note: vect_is_simple_use: operand 235963
common/pixel.c:481:5: note: Create vector_cst. nunits = 4
common/pixel.c:481:5: note: created new init_stmt: vect_cst_.1277_257 = { 235963, 235963, 235963, 235963 };
common/pixel.c:481:5: note: add new stmt: vect__66.1276_258 = vect_vars_51.1255_236 + vect_cst_.1277_257;
common/pixel.c:481:5: note: ------>vectorizing statement: _67 = (float) _66;

common/pixel.c:481:5: note: transform statement.
common/pixel.c:481:5: note: vect_is_simple_use: operand _66
common/pixel.c:481:5: note: def_stmt: _66 = vars_51 + 235963;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: transform conversion. ncopies = 1.
common/pixel.c:481:5: note: vect_get_vec_def_for_operand: _66
common/pixel.c:481:5: note: vect_is_simple_use: operand _66
common/pixel.c:481:5: note: def_stmt: _66 = vars_51 + 235963;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: def =  _66
  def_stmt =  _66 = vars_51 + 235963;
common/pixel.c:481:5: note: add new stmt: vect__67.1278_259 = (vector(4) float) vect__66.1276_258;
common/pixel.c:481:5: note: ------>vectorizing statement: _68 = _65 * _67;

common/pixel.c:481:5: note: transform statement.
common/pixel.c:481:5: note: vect_is_simple_use: operand _65
common/pixel.c:481:5: note: def_stmt: _65 = (float) _64;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: vect_is_simple_use: operand _67
common/pixel.c:481:5: note: def_stmt: _67 = (float) _66;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: transform binary/unary operation.
common/pixel.c:481:5: note: vect_get_vec_def_for_operand: _65
common/pixel.c:481:5: note: vect_is_simple_use: operand _65
common/pixel.c:481:5: note: def_stmt: _65 = (float) _64;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: def =  _65
  def_stmt =  _65 = (float) _64;
common/pixel.c:481:5: note: vect_get_vec_def_for_operand: _67
common/pixel.c:481:5: note: vect_is_simple_use: operand _67
common/pixel.c:481:5: note: def_stmt: _67 = (float) _66;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: def =  _67
  def_stmt =  _67 = (float) _66;
common/pixel.c:481:5: note: add new stmt: vect__68.1279_260 = vect__65.1275_256 * vect__67.1278_259;
common/pixel.c:481:5: note: ------>vectorizing statement: _69 = _62 / _68;

common/pixel.c:481:5: note: transform statement.
common/pixel.c:481:5: note: vect_is_simple_use: operand _62
common/pixel.c:481:5: note: def_stmt: _62 = _58 * _61;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: vect_is_simple_use: operand _68
common/pixel.c:481:5: note: def_stmt: _68 = _65 * _67;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: transform binary/unary operation.
common/pixel.c:481:5: note: vect_get_vec_def_for_operand: _62
common/pixel.c:481:5: note: vect_is_simple_use: operand _62
common/pixel.c:481:5: note: def_stmt: _62 = _58 * _61;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: def =  _62
  def_stmt =  _62 = _58 * _61;
common/pixel.c:481:5: note: vect_get_vec_def_for_operand: _68
common/pixel.c:481:5: note: vect_is_simple_use: operand _68
common/pixel.c:481:5: note: def_stmt: _68 = _65 * _67;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: def =  _68
  def_stmt =  _68 = _65 * _67;
common/pixel.c:481:5: note: add new stmt: vect__69.1280_261 = vect__62.1271_252 / vect__68.1279_260;
common/pixel.c:481:5: note: ------>vectorizing statement: # DEBUG s1 => NULL

common/pixel.c:481:5: note: ------>vectorizing statement: # DEBUG s2 => NULL

common/pixel.c:481:5: note: ------>vectorizing statement: # DEBUG ss => NULL

common/pixel.c:481:5: note: ------>vectorizing statement: # DEBUG s12 => NULL

common/pixel.c:481:5: note: ------>vectorizing statement: # DEBUG covar => NULL

common/pixel.c:481:5: note: ------>vectorizing statement: # DEBUG vars => NULL

common/pixel.c:481:5: note: ------>vectorizing statement: ssim_45 = _69 + ssim_71;

common/pixel.c:481:5: note: transform statement.
common/pixel.c:481:5: note: vect_is_simple_use: operand _69
common/pixel.c:481:5: note: def_stmt: _69 = _62 / _68;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: vect_is_simple_use: operand ssim_71
common/pixel.c:481:5: note: def_stmt: ssim_71 = PHI <0.0(16), ssim_45(5)>
common/pixel.c:481:5: note: type of def: 5.
common/pixel.c:481:5: note: detected reduction: ssim_45 = _69 + ssim_71;

common/pixel.c:481:5: note: transform reduction.
common/pixel.c:481:5: note: vect_get_vec_def_for_operand: _69
common/pixel.c:481:5: note: vect_is_simple_use: operand _69
common/pixel.c:481:5: note: def_stmt: _69 = _62 / _68;
common/pixel.c:481:5: note: type of def: 3.
common/pixel.c:481:5: note: def =  _69
  def_stmt =  _69 = _62 / _68;
common/pixel.c:481:5: note: add new stmt: vect_ssim_45.1281_263 = vect__69.1280_261 + vect_ssim_45.1281_262;
common/pixel.c:481:5: note: vect_is_simple_use: operand 0.0
common/pixel.c:481:5: note: vect_get_vec_def_for_operand: ssim_71
common/pixel.c:481:5: note: vect_is_simple_use: operand ssim_71
common/pixel.c:481:5: note: def_stmt: ssim_71 = PHI <0.0(16), ssim_45(5)>
common/pixel.c:481:5: note: type of def: 5.
common/pixel.c:481:5: note: def =  ssim_71
  def_stmt =  ssim_71 = PHI <0.0(16), ssim_45(5)>
common/pixel.c:481:5: note: transform reduction: created def-use cycle: vect_ssim_45.1281_262 = PHI <{ 0.0, 0.0, 0.0, 0.0 }(16), vect_ssim_45.1281_263(5)>

vect_ssim_45.1281_263 = vect__69.1280_261 + vect_ssim_45.1281_262;

common/pixel.c:481:5: note: Reduce using direct vector reduction.
common/pixel.c:481:5: note: ------>vectorizing statement: # DEBUG ssim => ssim_45

common/pixel.c:481:5: note: ------>vectorizing statement: i_46 = i_72 + 1;

common/pixel.c:481:5: note: ------>vectorizing statement: # DEBUG i => i_46

common/pixel.c:481:5: note: ------>vectorizing statement: # DEBUG ssim => ssim_45

common/pixel.c:481:5: note: ------>vectorizing statement: # DEBUG i => i_46

common/pixel.c:481:5: note: ------>vectorizing statement: vectp_sum0.1214_102 = vectp_sum0.1214_96 + 16;

common/pixel.c:481:5: note: ------>vectorizing statement: vectp_sum0.1220_84 = vectp_sum0.1220_78 + 16;

common/pixel.c:481:5: note: ------>vectorizing statement: vectp_sum1.1227_184 = vectp_sum1.1227_192 + 16;

common/pixel.c:481:5: note: ------>vectorizing statement: vectp_sum1.1234_205 = vectp_sum1.1234_211 + 16;

common/pixel.c:481:5: note: ------>vectorizing statement: if (width_5(D) > i_46)


loop at common/pixel.c:485: if (ivtmp_268 < bnd.1211_180)

;; Scaling loop 1 with scale 0.250000, bounding iterations to 2 from guessed 2
;; guessed iterations are now 1
common/pixel.c:481:5: note: LOOP VECTORIZED

common/pixel.c:477:14: note: vectorized 1 loops in function.
Merging blocks 3 and 12
Merging blocks 14 and 6
ssim_end4 (int[4] * sum0, int[4] * sum1, int width)
{
  float vect_ssim_45.1283;
  float stmp_ssim_45.1282;
  vector(4) float vect_ssim_45.1281;
  vector(4) float vect__69.1280;
  vector(4) float vect__68.1279;
  vector(4) float vect__67.1278;
  vector(4) int vect_cst_.1277;
  vector(4) int vect__66.1276;
  vector(4) float vect__65.1275;
  vector(4) int vect_cst_.1274;
  vector(4) int vect__64.1273;
  vector(4) int vect__63.1272;
  vector(4) float vect__62.1271;
  vector(4) float vect__61.1270;
  vector(4) int vect_cst_.1269;
  vector(4) int vect__60.1268;
  vector(4) int vect_cst_.1267;
  vector(4) int vect__59.1266;
  vector(4) float vect__58.1265;
  vector(4) int vect_cst_.1264;
  vector(4) int vect__57.1263;
  vector(4) int vect__56.1262;
  vector(4) int vect_cst_.1261;
  vector(4) int vect__55.1260;
  vector(4) int vect_covar_54.1259;
  vector(4) int vect__53.1258;
  vector(4) int vect_cst_.1257;
  vector(4) int vect__52.1256;
  vector(4) int vect_vars_51.1255;
  vector(4) int vect__50.1254;
  vector(4) int vect__49.1253;
  vector(4) int vect__48.1252;
  vector(4) int vect_cst_.1251;
  vector(4) int vect__47.1250;
  vector(4) int vect__43.1249;
  vector(4) int vect__41.1248;
  vector(4) int vect__39.1247;
  vector(4) int vect__36.1246;
  vector(4) int vect__34.1245;
  vector(4) int vect__32.1244;
  vector(4) int vect__29.1243;
  vector(4) int vect__27.1242;
  vector(4) int vect__25.1241;
  vector(4) int vect__22.1240;
  vector(4) int vect__21.1239;
  vector(4) int vect__21.1238;
  vector(4) int vect__21.1237;
  vector(4) int vect__21.1236;
  vector(4) int * vectp_sum1.1235;
  vector(4) int * vectp_sum1.1234;
  vector(4) int vect__19.1233;
  vector(4) int vect__18.1232;
  vector(4) int vect__18.1231;
  vector(4) int vect__18.1230;
  vector(4) int vect__18.1229;
  vector(4) int * vectp_sum1.1228;
  vector(4) int * vectp_sum1.1227;
  vector(4) int vect__15.1226;
  vector(4) int vect__14.1225;
  vector(4) int vect__14.1224;
  vector(4) int vect__14.1223;
  vector(4) int vect__14.1222;
  vector(4) int * vectp_sum0.1221;
  vector(4) int * vectp_sum0.1220;
  vector(4) int vect__10.1219;
  vector(4) int vect__10.1218;
  vector(4) int vect__10.1217;
  vector(4) int vect__10.1216;
  vector(4) int * vectp_sum0.1215;
  vector(4) int * vectp_sum0.1214;
  int tmp.1213;
  unsigned int ratio_mult_vf.1212;
  unsigned int bnd.1211;
  unsigned int niters.1210;
  int vars;
  int covar;
  float D.12441;
  float ssim;
  int i;
  vector(4) int vect_perm_odd_1;
  vector(4) int vect_perm_even_2;
  vector(4) int vect_perm_odd_3;
  long unsigned int _6;
  long unsigned int _7;
  int[4] * _9;
  int _10;
  sizetype _11;
  sizetype _12;
  int[4] * _13;
  int _14;
  int _15;
  int[4] * _17;
  int _18;
  int _19;
  int[4] * _20;
  int _21;
  int _22;
  int _23;
  int _24;
  int _25;
  int _26;
  int _27;
  int _28;
  int _29;
  int _30;
  int _31;
  int _32;
  int _33;
  int _34;
  int _35;
  int _36;
  int _37;
  int _38;
  int _39;
  int _40;
  int _41;
  int _42;
  int _43;
  int _47;
  int _48;
  int _49;
  int _50;
  int _52;
  int _53;
  int _55;
  int _56;
  int _57;
  float _58;
  int _59;
  int _60;
  float _61;
  float _62;
  int _63;
  int _64;
  float _65;
  int _66;
  float _67;
  float _68;
  float _69;
  vector(4) int vect_perm_even_70;
  vector(4) int vect_perm_odd_73;
  vector(4) int vect_perm_even_74;
  vector(4) int vect_perm_odd_75;
  vector(4) int vect_perm_even_76;
  vector(4) int vect_perm_odd_87;
  vector(4) int vect_perm_even_88;
  vector(4) int vect_perm_odd_89;
  vector(4) int vect_perm_even_90;
  vector(4) int vect_perm_odd_91;
  vector(4) int vect_perm_even_92;
  vector(4) int vect_perm_odd_93;
  vector(4) int vect_perm_even_94;
  unsigned int _112;
  unsigned int _113;
  float _116;
  float _117;
  float _118;
  int _119;
  float _120;
  int _121;
  int _122;
  float _123;
  float _124;
  int _125;
  int _126;
  float _127;
  int _128;
  int _129;
  int _130;
  int _132;
  int _133;
  int _135;
  int _136;
  int _137;
  int _138;
  int _139;
  int _140;
  int _141;
  int _142;
  int _143;
  int _144;
  int _145;
  int _146;
  int _147;
  int _148;
  int _149;
  int _150;
  int _151;
  int _152;
  int _153;
  int _154;
  int _155;
  int _156;
  int _157;
  int _158;
  int _159;
  int _160;
  int _161;
  int[4] * _162;
  int _163;
  int _164;
  int[4] * _165;
  int _166;
  int _167;
  int[4] * _168;
  sizetype _169;
  sizetype _170;
  int _171;
  int[4] * _172;
  long unsigned int _173;
  long unsigned int _174;
  unsigned int _178;
  unsigned int _179;
  vector(4) int vect_perm_even_194;
  vector(4) int vect_perm_odd_195;
  vector(4) int vect_perm_even_196;
  vector(4) int vect_perm_odd_197;
  vector(4) int vect_perm_even_198;
  vector(4) int vect_perm_odd_199;
  vector(4) int vect_perm_even_200;
  vector(4) int vect_perm_odd_201;
  vector(4) int vect_perm_even_213;
  vector(4) int vect_perm_odd_214;
  vector(4) int vect_perm_even_215;
  vector(4) int vect_perm_odd_216;
  vector(4) int vect_perm_even_217;
  vector(4) int vect_perm_odd_218;
  vector(4) int vect_perm_even_219;
  vector(4) int vect_perm_odd_220;
  unsigned int ivtmp_267;
  unsigned int ivtmp_268;

  <bb 2>:
  # DEBUG ssim => 0.0
  # DEBUG i => 0
  # DEBUG ssim => 0.0
  # DEBUG i => 0
  if (width_5(D) > 0)
    goto <bb 3>;
  else
    goto <bb 13>;

  <bb 3>:
  niters.1210_181 = (unsigned int) width_5(D);
  _179 = niters.1210_181 + 4294967292;
  _178 = _179 >> 2;
  bnd.1211_180 = _178 + 1;
  ratio_mult_vf.1212_177 = bnd.1211_180 << 2;
  _113 = (unsigned int) width_5(D);
  _112 = _113 + 4294967295;
  if (_112 <= 2)
    goto <bb 9>;
  else
    goto <bb 4>;

  <bb 4>:
  vectp_sum0.1215_104 = sum0_8(D);
  vectp_sum0.1221_86 = sum0_8(D) + 16;
  vectp_sum1.1228_186 = sum1_16(D);
  vectp_sum1.1235_203 = sum1_16(D) + 16;
  vect_cst_.1251_231 = { 64, 64, 64, 64 };
  vect_cst_.1257_237 = { 64, 64, 64, 64 };
  vect_cst_.1261_241 = { 2, 2, 2, 2 };
  vect_cst_.1264_244 = { 416, 416, 416, 416 };
  vect_cst_.1267_247 = { 2, 2, 2, 2 };
  vect_cst_.1269_249 = { 235963, 235963, 235963, 235963 };
  vect_cst_.1274_254 = { 416, 416, 416, 416 };
  vect_cst_.1277_257 = { 235963, 235963, 235963, 235963 };

  <bb 5>:
  # i_72 = PHI <0(4), i_46(10)>
  # ssim_71 = PHI <0.0(4), ssim_45(10)>
  # vectp_sum0.1214_103 = PHI <vectp_sum0.1215_104(4), vectp_sum0.1214_102(10)>
  # vectp_sum0.1220_85 = PHI <vectp_sum0.1221_86(4), vectp_sum0.1220_84(10)>
  # vectp_sum1.1227_185 = PHI <vectp_sum1.1228_186(4), vectp_sum1.1227_184(10)>
  # vectp_sum1.1234_204 = PHI <vectp_sum1.1235_203(4), vectp_sum1.1234_205(10)>
  # vect_ssim_45.1281_262 = PHI <{ 0.0, 0.0, 0.0, 0.0 }(4), vect_ssim_45.1281_263(10)>
  # ivtmp_267 = PHI <0(4), ivtmp_268(10)>
  # DEBUG ssim => ssim_71
  # DEBUG i => i_72
  _6 = (long unsigned int) i_72;
  _7 = _6 * 16;
  _9 = sum0_8(D) + _7;
  vect__10.1216_101 = MEM[(int *)vectp_sum0.1214_103];
  vectp_sum0.1214_100 = vectp_sum0.1214_103 + 16;
  vect__10.1217_99 = MEM[(int *)vectp_sum0.1214_100];
  vectp_sum0.1214_98 = vectp_sum0.1214_100 + 16;
  vect__10.1218_97 = MEM[(int *)vectp_sum0.1214_98];
  vectp_sum0.1214_96 = vectp_sum0.1214_98 + 16;
  vect__10.1219_95 = MEM[(int *)vectp_sum0.1214_96];
  vect_perm_even_94 = VEC_PERM_EXPR <vect__10.1216_101, vect__10.1217_99, { 0, 2, 4, 6 }>;
  vect_perm_odd_93 = VEC_PERM_EXPR <vect__10.1216_101, vect__10.1217_99, { 1, 3, 5, 7 }>;
  vect_perm_even_92 = VEC_PERM_EXPR <vect__10.1218_97, vect__10.1219_95, { 0, 2, 4, 6 }>;
  vect_perm_odd_91 = VEC_PERM_EXPR <vect__10.1218_97, vect__10.1219_95, { 1, 3, 5, 7 }>;
  vect_perm_even_90 = VEC_PERM_EXPR <vect_perm_even_94, vect_perm_even_92, { 0, 2, 4, 6 }>;
  vect_perm_odd_89 = VEC_PERM_EXPR <vect_perm_even_94, vect_perm_even_92, { 1, 3, 5, 7 }>;
  vect_perm_even_88 = VEC_PERM_EXPR <vect_perm_odd_93, vect_perm_odd_91, { 0, 2, 4, 6 }>;
  vect_perm_odd_87 = VEC_PERM_EXPR <vect_perm_odd_93, vect_perm_odd_91, { 1, 3, 5, 7 }>;
  _10 = *_9[3];
  _11 = _6 + 1;
  _12 = _11 * 16;
  _13 = sum0_8(D) + _12;
  vect__14.1222_83 = MEM[(int *)vectp_sum0.1220_85];
  vectp_sum0.1220_82 = vectp_sum0.1220_85 + 16;
  vect__14.1223_81 = MEM[(int *)vectp_sum0.1220_82];
  vectp_sum0.1220_80 = vectp_sum0.1220_82 + 16;
  vect__14.1224_79 = MEM[(int *)vectp_sum0.1220_80];
  vectp_sum0.1220_78 = vectp_sum0.1220_80 + 16;
  vect__14.1225_77 = MEM[(int *)vectp_sum0.1220_78];
  vect_perm_even_76 = VEC_PERM_EXPR <vect__14.1222_83, vect__14.1223_81, { 0, 2, 4, 6 }>;
  vect_perm_odd_75 = VEC_PERM_EXPR <vect__14.1222_83, vect__14.1223_81, { 1, 3, 5, 7 }>;
  vect_perm_even_74 = VEC_PERM_EXPR <vect__14.1224_79, vect__14.1225_77, { 0, 2, 4, 6 }>;
  vect_perm_odd_73 = VEC_PERM_EXPR <vect__14.1224_79, vect__14.1225_77, { 1, 3, 5, 7 }>;
  vect_perm_even_70 = VEC_PERM_EXPR <vect_perm_even_76, vect_perm_even_74, { 0, 2, 4, 6 }>;
  vect_perm_odd_3 = VEC_PERM_EXPR <vect_perm_even_76, vect_perm_even_74, { 1, 3, 5, 7 }>;
  vect_perm_even_2 = VEC_PERM_EXPR <vect_perm_odd_75, vect_perm_odd_73, { 0, 2, 4, 6 }>;
  vect_perm_odd_1 = VEC_PERM_EXPR <vect_perm_odd_75, vect_perm_odd_73, { 1, 3, 5, 7 }>;
  _14 = *_13[3];
  vect__15.1226_187 = vect_perm_odd_87 + vect_perm_odd_1;
  _15 = _10 + _14;
  _17 = sum1_16(D) + _7;
  vect__18.1229_183 = MEM[(int *)vectp_sum1.1227_185];
  vectp_sum1.1227_188 = vectp_sum1.1227_185 + 16;
  vect__18.1230_189 = MEM[(int *)vectp_sum1.1227_188];
  vectp_sum1.1227_190 = vectp_sum1.1227_188 + 16;
  vect__18.1231_191 = MEM[(int *)vectp_sum1.1227_190];
  vectp_sum1.1227_192 = vectp_sum1.1227_190 + 16;
  vect__18.1232_193 = MEM[(int *)vectp_sum1.1227_192];
  vect_perm_even_194 = VEC_PERM_EXPR <vect__18.1229_183, vect__18.1230_189, { 0, 2, 4, 6 }>;
  vect_perm_odd_195 = VEC_PERM_EXPR <vect__18.1229_183, vect__18.1230_189, { 1, 3, 5, 7 }>;
  vect_perm_even_196 = VEC_PERM_EXPR <vect__18.1231_191, vect__18.1232_193, { 0, 2, 4, 6 }>;
  vect_perm_odd_197 = VEC_PERM_EXPR <vect__18.1231_191, vect__18.1232_193, { 1, 3, 5, 7 }>;
  vect_perm_even_198 = VEC_PERM_EXPR <vect_perm_even_194, vect_perm_even_196, { 0, 2, 4, 6 }>;
  vect_perm_odd_199 = VEC_PERM_EXPR <vect_perm_even_194, vect_perm_even_196, { 1, 3, 5, 7 }>;
  vect_perm_even_200 = VEC_PERM_EXPR <vect_perm_odd_195, vect_perm_odd_197, { 0, 2, 4, 6 }>;
  vect_perm_odd_201 = VEC_PERM_EXPR <vect_perm_odd_195, vect_perm_odd_197, { 1, 3, 5, 7 }>;
  _18 = *_17[3];
  vect__19.1233_202 = vect__15.1226_187 + vect_perm_odd_201;
  _19 = _15 + _18;
  _20 = sum1_16(D) + _12;
  vect__21.1236_206 = MEM[(int *)vectp_sum1.1234_204];
  vectp_sum1.1234_207 = vectp_sum1.1234_204 + 16;
  vect__21.1237_208 = MEM[(int *)vectp_sum1.1234_207];
  vectp_sum1.1234_209 = vectp_sum1.1234_207 + 16;
  vect__21.1238_210 = MEM[(int *)vectp_sum1.1234_209];
  vectp_sum1.1234_211 = vectp_sum1.1234_209 + 16;
  vect__21.1239_212 = MEM[(int *)vectp_sum1.1234_211];
  vect_perm_even_213 = VEC_PERM_EXPR <vect__21.1236_206, vect__21.1237_208, { 0, 2, 4, 6 }>;
  vect_perm_odd_214 = VEC_PERM_EXPR <vect__21.1236_206, vect__21.1237_208, { 1, 3, 5, 7 }>;
  vect_perm_even_215 = VEC_PERM_EXPR <vect__21.1238_210, vect__21.1239_212, { 0, 2, 4, 6 }>;
  vect_perm_odd_216 = VEC_PERM_EXPR <vect__21.1238_210, vect__21.1239_212, { 1, 3, 5, 7 }>;
  vect_perm_even_217 = VEC_PERM_EXPR <vect_perm_even_213, vect_perm_even_215, { 0, 2, 4, 6 }>;
  vect_perm_odd_218 = VEC_PERM_EXPR <vect_perm_even_213, vect_perm_even_215, { 1, 3, 5, 7 }>;
  vect_perm_even_219 = VEC_PERM_EXPR <vect_perm_odd_214, vect_perm_odd_216, { 0, 2, 4, 6 }>;
  vect_perm_odd_220 = VEC_PERM_EXPR <vect_perm_odd_214, vect_perm_odd_216, { 1, 3, 5, 7 }>;
  _21 = *_20[3];
  vect__22.1240_221 = vect__19.1233_202 + vect_perm_odd_220;
  _22 = _19 + _21;
  _23 = *_9[2];
  _24 = *_13[2];
  vect__25.1241_222 = vect_perm_odd_89 + vect_perm_odd_3;
  _25 = _23 + _24;
  _26 = *_17[2];
  vect__27.1242_223 = vect__25.1241_222 + vect_perm_odd_199;
  _27 = _25 + _26;
  _28 = *_20[2];
  vect__29.1243_224 = vect__27.1242_223 + vect_perm_odd_218;
  _29 = _27 + _28;
  _30 = *_9[1];
  _31 = *_13[1];
  vect__32.1244_225 = vect_perm_even_88 + vect_perm_even_2;
  _32 = _30 + _31;
  _33 = *_17[1];
  vect__34.1245_226 = vect__32.1244_225 + vect_perm_even_200;
  _34 = _32 + _33;
  _35 = *_20[1];
  vect__36.1246_227 = vect__34.1245_226 + vect_perm_even_219;
  _36 = _34 + _35;
  _37 = *_9[0];
  _38 = *_13[0];
  vect__39.1247_228 = vect_perm_even_90 + vect_perm_even_70;
  _39 = _37 + _38;
  _40 = *_17[0];
  vect__41.1248_229 = vect__39.1247_228 + vect_perm_even_198;
  _41 = _39 + _40;
  _42 = *_20[0];
  vect__43.1249_230 = vect__41.1248_229 + vect_perm_even_217;
  _43 = _41 + _42;
  # DEBUG s1 => _43
  # DEBUG s2 => _36
  # DEBUG ss => _29
  # DEBUG s12 => _22
  vect__47.1250_232 = vect__29.1243_224 * vect_cst_.1251_231;
  _47 = _29 * 64;
  vect__48.1252_233 = vect__43.1249_230 * vect__43.1249_230;
  _48 = _43 * _43;
  vect__49.1253_234 = vect__47.1250_232 - vect__48.1252_233;
  _49 = _47 - _48;
  vect__50.1254_235 = vect__36.1246_227 * vect__36.1246_227;
  _50 = _36 * _36;
  vect_vars_51.1255_236 = vect__49.1253_234 - vect__50.1254_235;
  vars_51 = _49 - _50;
  # DEBUG vars => vars_51
  vect__52.1256_238 = vect__22.1240_221 * vect_cst_.1257_237;
  _52 = _22 * 64;
  vect__53.1258_239 = vect__36.1246_227 * vect__43.1249_230;
  _53 = _36 * _43;
  vect_covar_54.1259_240 = vect__52.1256_238 - vect__53.1258_239;
  covar_54 = _52 - _53;
  # DEBUG covar => covar_54
  vect__55.1260_242 = vect__43.1249_230 * vect_cst_.1261_241;
  _55 = _43 * 2;
  vect__56.1262_243 = vect__36.1246_227 * vect__55.1260_242;
  _56 = _36 * _55;
  vect__57.1263_245 = vect__56.1262_243 + vect_cst_.1264_244;
  _57 = _56 + 416;
  vect__58.1265_246 = (vector(4) float) vect__57.1263_245;
  _58 = (float) _57;
  vect__59.1266_248 = vect_covar_54.1259_240 * vect_cst_.1267_247;
  _59 = covar_54 * 2;
  vect__60.1268_250 = vect__59.1266_248 + vect_cst_.1269_249;
  _60 = _59 + 235963;
  vect__61.1270_251 = (vector(4) float) vect__60.1268_250;
  _61 = (float) _60;
  vect__62.1271_252 = vect__58.1265_246 * vect__61.1270_251;
  _62 = _58 * _61;
  vect__63.1272_253 = vect__48.1252_233 + vect__50.1254_235;
  _63 = _48 + _50;
  vect__64.1273_255 = vect__63.1272_253 + vect_cst_.1274_254;
  _64 = _63 + 416;
  vect__65.1275_256 = (vector(4) float) vect__64.1273_255;
  _65 = (float) _64;
  vect__66.1276_258 = vect_vars_51.1255_236 + vect_cst_.1277_257;
  _66 = vars_51 + 235963;
  vect__67.1278_259 = (vector(4) float) vect__66.1276_258;
  _67 = (float) _66;
  vect__68.1279_260 = vect__65.1275_256 * vect__67.1278_259;
  _68 = _65 * _67;
  vect__69.1280_261 = vect__62.1271_252 / vect__68.1279_260;
  _69 = _62 / _68;
  # DEBUG s1 => NULL
  # DEBUG s2 => NULL
  # DEBUG ss => NULL
  # DEBUG s12 => NULL
  # DEBUG covar => NULL
  # DEBUG vars => NULL
  vect_ssim_45.1281_263 = vect__69.1280_261 + vect_ssim_45.1281_262;
  ssim_45 = _69 + ssim_71;
  # DEBUG ssim => ssim_45
  i_46 = i_72 + 1;
  # DEBUG i => i_46
  # DEBUG ssim => ssim_45
  # DEBUG i => i_46
  vectp_sum0.1214_102 = vectp_sum0.1214_96 + 16;
  vectp_sum0.1220_84 = vectp_sum0.1220_78 + 16;
  vectp_sum1.1227_184 = vectp_sum1.1227_192 + 16;
  vectp_sum1.1234_205 = vectp_sum1.1234_211 + 16;
  ivtmp_268 = ivtmp_267 + 1;
  if (ivtmp_268 < bnd.1211_180)
    goto <bb 10>;
  else
    goto <bb 8>;

  <bb 6>:
  # i_176 = PHI <i_114(7), i_111(9)>
  # ssim_175 = PHI <ssim_115(7), ssim_109(9)>
  # DEBUG ssim => ssim_175
  # DEBUG i => i_176
  _174 = (long unsigned int) i_176;
  _173 = _174 * 16;
  _172 = sum0_8(D) + _173;
  _171 = *_172[3];
  _170 = _174 + 1;
  _169 = _170 * 16;
  _168 = sum0_8(D) + _169;
  _167 = *_168[3];
  _166 = _171 + _167;
  _165 = sum1_16(D) + _173;
  _164 = *_165[3];
  _163 = _166 + _164;
  _162 = sum1_16(D) + _169;
  _161 = *_162[3];
  _160 = _163 + _161;
  _159 = *_172[2];
  _158 = *_168[2];
  _157 = _159 + _158;
  _156 = *_165[2];
  _155 = _157 + _156;
  _154 = *_162[2];
  _153 = _155 + _154;
  _152 = *_172[1];
  _151 = *_168[1];
  _150 = _152 + _151;
  _149 = *_165[1];
  _148 = _150 + _149;
  _147 = *_162[1];
  _146 = _148 + _147;
  _145 = *_172[0];
  _144 = *_168[0];
  _143 = _145 + _144;
  _142 = *_165[0];
  _141 = _143 + _142;
  _140 = *_162[0];
  _139 = _141 + _140;
  # DEBUG s1 => _139
  # DEBUG s2 => _146
  # DEBUG ss => _153
  # DEBUG s12 => _160
  _138 = _153 * 64;
  _137 = _139 * _139;
  _136 = _138 - _137;
  _135 = _146 * _146;
  vars_134 = _136 - _135;
  # DEBUG vars => vars_134
  _133 = _160 * 64;
  _132 = _146 * _139;
  covar_131 = _133 - _132;
  # DEBUG covar => covar_131
  _130 = _139 * 2;
  _129 = _146 * _130;
  _128 = _129 + 416;
  _127 = (float) _128;
  _126 = covar_131 * 2;
  _125 = _126 + 235963;
  _124 = (float) _125;
  _123 = _127 * _124;
  _122 = _137 + _135;
  _121 = _122 + 416;
  _120 = (float) _121;
  _119 = vars_134 + 235963;
  _118 = (float) _119;
  _117 = _120 * _118;
  _116 = _123 / _117;
  # DEBUG s1 => NULL
  # DEBUG s2 => NULL
  # DEBUG ss => NULL
  # DEBUG s12 => NULL
  # DEBUG covar => NULL
  # DEBUG vars => NULL
  ssim_115 = _116 + ssim_175;
  # DEBUG ssim => ssim_115
  i_114 = i_176 + 1;
  # DEBUG i => i_114
  # DEBUG ssim => ssim_115
  # DEBUG i => i_114
  if (width_5(D) > i_114)
    goto <bb 7>;
  else
    goto <bb 11>;

  <bb 7>:
  goto <bb 6>;

  <bb 8>:
  # i_110 = PHI <i_46(5)>
  # ssim_108 = PHI <ssim_45(5)>
  # vect_ssim_45.1281_264 = PHI <vect_ssim_45.1281_263(5)>
  stmp_ssim_45.1282_265 = [reduc_plus_expr] vect_ssim_45.1281_264;
  vect_ssim_45.1283_266 = stmp_ssim_45.1282_265 + 0.0;
  tmp.1213_105 = (int) ratio_mult_vf.1212_177;
  if (ratio_mult_vf.1212_177 == niters.1210_181)
    goto <bb 12>;
  else
    goto <bb 9>;

  <bb 9>:
  # i_111 = PHI <tmp.1213_105(8), 0(3)>
  # ssim_109 = PHI <vect_ssim_45.1283_266(8), 0.0(3)>
  goto <bb 6>;

  <bb 10>:
  goto <bb 5>;

  <bb 11>:
  # ssim_106 = PHI <ssim_115(6)>

  <bb 12>:
  # ssim_107 = PHI <ssim_106(11), vect_ssim_45.1283_266(8)>

  <bb 13>:
  # ssim_44 = PHI <ssim_107(12), 0.0(2)>
  return ssim_44;

}



;; Function x264_pixel_ads4 (x264_pixel_ads4, funcdef_no=234, decl_uid=8771, cgraph_uid=234, symbol_order=277)


Analyzing loop at common/pixel.c:525
common/pixel.c:525:5: note: ===== analyze_loop_nest =====
common/pixel.c:525:5: note: === vect_analyze_loop_form ===
common/pixel.c:525:5: note: not vectorized: control flow in loop.
common/pixel.c:525:5: note: bad loop form.
common/pixel.c:521:12: note: vectorized 0 loops in function.
x264_pixel_ads4 (int * enc_dc, uint16_t * sums, int delta, uint16_t * cost_mvx, int16_t * mvs, int width, int thresh)
{
  int ads;
  int i;
  int nmv;
  short unsigned int _12;
  int _13;
  int _14;
  int _15;
  short unsigned int _17;
  int _18;
  int _19;
  int _20;
  int _21;
  uint16_t * _26;
  short unsigned int _27;
  int _28;
  int _29;
  int _30;
  int _31;
  uint16_t * _35;
  short unsigned int _36;
  int _37;
  int _38;
  int _39;
  int _40;
  long unsigned int _41;
  long unsigned int _42;
  uint16_t * _44;
  short unsigned int _45;
  int _46;
  long unsigned int _50;
  long unsigned int _51;
  int16_t * _53;
  short int _54;
  int pretmp_110;
  int pretmp_112;
  int pretmp_114;
  long unsigned int pretmp_116;
  long unsigned int pretmp_117;
  int pretmp_118;
  sizetype pretmp_120;
  sizetype pretmp_121;

  <bb 2>:
  # DEBUG nmv => 0
  # DEBUG i => 0
  # DEBUG i => 0
  # DEBUG nmv => 0
  # DEBUG sums => sums_7(D)
  if (width_9(D) > 0)
    goto <bb 3>;
  else
    goto <bb 9>;

  <bb 3>:
  pretmp_110 = *enc_dc_10(D);
  pretmp_112 = MEM[(int *)enc_dc_10(D) + 4B];
  pretmp_114 = MEM[(int *)enc_dc_10(D) + 8B];
  pretmp_116 = (long unsigned int) delta_23(D);
  pretmp_117 = pretmp_116 * 2;
  pretmp_118 = MEM[(int *)enc_dc_10(D) + 12B];
  pretmp_120 = pretmp_116 + 8;
  pretmp_121 = pretmp_120 * 2;

  <bb 4>:
  # sums_62 = PHI <sums_7(D)(3), sums_57(8)>
  # nmv_63 = PHI <0(3), nmv_2(8)>
  # i_65 = PHI <0(3), i_56(8)>
  # DEBUG i => i_65
  # DEBUG nmv => nmv_63
  # DEBUG sums => sums_62
  _12 = *sums_62;
  _13 = (int) _12;
  _14 = pretmp_110 - _13;
  _15 = ABS_EXPR <_14>;
  _17 = MEM[(uint16_t *)sums_62 + 16B];
  _18 = (int) _17;
  _19 = pretmp_112 - _18;
  _20 = ABS_EXPR <_19>;
  _21 = _15 + _20;
  _26 = sums_62 + pretmp_117;
  _27 = *_26;
  _28 = (int) _27;
  _29 = pretmp_114 - _28;
  _30 = ABS_EXPR <_29>;
  _31 = _21 + _30;
  _35 = sums_62 + pretmp_121;
  _36 = *_35;
  _37 = (int) _36;
  _38 = pretmp_118 - _37;
  _39 = ABS_EXPR <_38>;
  _40 = _31 + _39;
  _41 = (long unsigned int) i_65;
  _42 = _41 * 2;
  _44 = cost_mvx_43(D) + _42;
  _45 = *_44;
  _46 = (int) _45;
  ads_47 = _40 + _46;
  # DEBUG ads => ads_47
  if (ads_47 < thresh_48(D))
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  nmv_49 = nmv_63 + 1;
  # DEBUG nmv => nmv_49
  _50 = (long unsigned int) nmv_63;
  _51 = _50 * 2;
  _53 = mvs_52(D) + _51;
  _54 = (short int) i_65;
  *_53 = _54;

  <bb 6>:
  # nmv_2 = PHI <nmv_63(4), nmv_49(5)>
  # DEBUG nmv => nmv_2
  i_56 = i_65 + 1;
  # DEBUG i => i_56
  sums_57 = sums_62 + 2;
  # DEBUG sums => sums_57
  # DEBUG i => i_56
  # DEBUG nmv => nmv_2
  # DEBUG sums => sums_57
  if (width_9(D) > i_56)
    goto <bb 8>;
  else
    goto <bb 7>;

  <bb 7>:
  # nmv_109 = PHI <nmv_2(6)>
  goto <bb 9>;

  <bb 8>:
  goto <bb 4>;

  <bb 9>:
  # nmv_64 = PHI <nmv_109(7), 0(2)>
  return nmv_64;

}



;; Function x264_pixel_ads2 (x264_pixel_ads2, funcdef_no=235, decl_uid=8786, cgraph_uid=235, symbol_order=278)


Analyzing loop at common/pixel.c:542
common/pixel.c:542:5: note: ===== analyze_loop_nest =====
common/pixel.c:542:5: note: === vect_analyze_loop_form ===
common/pixel.c:542:5: note: not vectorized: control flow in loop.
common/pixel.c:542:5: note: bad loop form.
common/pixel.c:538:12: note: vectorized 0 loops in function.
x264_pixel_ads2 (int * enc_dc, uint16_t * sums, int delta, uint16_t * cost_mvx, int16_t * mvs, int width, int thresh)
{
  int ads;
  int i;
  int nmv;
  short unsigned int _12;
  int _13;
  int _14;
  int _15;
  uint16_t * _20;
  short unsigned int _21;
  int _22;
  int _23;
  int _24;
  int _25;
  long unsigned int _26;
  long unsigned int _27;
  uint16_t * _29;
  short unsigned int _30;
  int _31;
  long unsigned int _35;
  long unsigned int _36;
  int16_t * _38;
  short int _39;
  int pretmp_73;
  int pretmp_75;
  long unsigned int pretmp_77;
  long unsigned int pretmp_78;

  <bb 2>:
  # DEBUG nmv => 0
  # DEBUG i => 0
  # DEBUG i => 0
  # DEBUG nmv => 0
  # DEBUG sums => sums_7(D)
  if (width_9(D) > 0)
    goto <bb 3>;
  else
    goto <bb 9>;

  <bb 3>:
  pretmp_73 = *enc_dc_10(D);
  pretmp_75 = MEM[(int *)enc_dc_10(D) + 4B];
  pretmp_77 = (long unsigned int) delta_17(D);
  pretmp_78 = pretmp_77 * 2;

  <bb 4>:
  # sums_47 = PHI <sums_7(D)(3), sums_42(8)>
  # nmv_48 = PHI <0(3), nmv_2(8)>
  # i_50 = PHI <0(3), i_41(8)>
  # DEBUG i => i_50
  # DEBUG nmv => nmv_48
  # DEBUG sums => sums_47
  _12 = *sums_47;
  _13 = (int) _12;
  _14 = pretmp_73 - _13;
  _15 = ABS_EXPR <_14>;
  _20 = sums_47 + pretmp_78;
  _21 = *_20;
  _22 = (int) _21;
  _23 = pretmp_75 - _22;
  _24 = ABS_EXPR <_23>;
  _25 = _15 + _24;
  _26 = (long unsigned int) i_50;
  _27 = _26 * 2;
  _29 = cost_mvx_28(D) + _27;
  _30 = *_29;
  _31 = (int) _30;
  ads_32 = _25 + _31;
  # DEBUG ads => ads_32
  if (ads_32 < thresh_33(D))
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  nmv_34 = nmv_48 + 1;
  # DEBUG nmv => nmv_34
  _35 = (long unsigned int) nmv_48;
  _36 = _35 * 2;
  _38 = mvs_37(D) + _36;
  _39 = (short int) i_50;
  *_38 = _39;

  <bb 6>:
  # nmv_2 = PHI <nmv_48(4), nmv_34(5)>
  # DEBUG nmv => nmv_2
  i_41 = i_50 + 1;
  # DEBUG i => i_41
  sums_42 = sums_47 + 2;
  # DEBUG sums => sums_42
  # DEBUG i => i_41
  # DEBUG nmv => nmv_2
  # DEBUG sums => sums_42
  if (width_9(D) > i_41)
    goto <bb 8>;
  else
    goto <bb 7>;

  <bb 7>:
  # nmv_72 = PHI <nmv_2(6)>
  goto <bb 9>;

  <bb 8>:
  goto <bb 4>;

  <bb 9>:
  # nmv_49 = PHI <nmv_72(7), 0(2)>
  return nmv_49;

}



;; Function x264_pixel_ads1 (x264_pixel_ads1, funcdef_no=236, decl_uid=8801, cgraph_uid=236, symbol_order=279)


Analyzing loop at common/pixel.c:557
common/pixel.c:557:5: note: ===== analyze_loop_nest =====
common/pixel.c:557:5: note: === vect_analyze_loop_form ===
common/pixel.c:557:5: note: not vectorized: control flow in loop.
common/pixel.c:557:5: note: bad loop form.
common/pixel.c:553:12: note: vectorized 0 loops in function.
x264_pixel_ads1 (int * enc_dc, uint16_t * sums, int delta, uint16_t * cost_mvx, int16_t * mvs, int width, int thresh)
{
  int ads;
  int i;
  int nmv;
  short unsigned int _12;
  int _13;
  int _14;
  int _15;
  long unsigned int _16;
  long unsigned int _17;
  uint16_t * _19;
  short unsigned int _20;
  int _21;
  long unsigned int _25;
  long unsigned int _26;
  int16_t * _28;
  short int _29;
  int pretmp_51;

  <bb 2>:
  # DEBUG nmv => 0
  # DEBUG i => 0
  # DEBUG i => 0
  # DEBUG nmv => 0
  # DEBUG sums => sums_7(D)
  if (width_9(D) > 0)
    goto <bb 3>;
  else
    goto <bb 9>;

  <bb 3>:
  pretmp_51 = *enc_dc_10(D);

  <bb 4>:
  # sums_37 = PHI <sums_7(D)(3), sums_32(8)>
  # nmv_38 = PHI <0(3), nmv_2(8)>
  # i_40 = PHI <0(3), i_31(8)>
  # DEBUG i => i_40
  # DEBUG nmv => nmv_38
  # DEBUG sums => sums_37
  _12 = *sums_37;
  _13 = (int) _12;
  _14 = pretmp_51 - _13;
  _15 = ABS_EXPR <_14>;
  _16 = (long unsigned int) i_40;
  _17 = _16 * 2;
  _19 = cost_mvx_18(D) + _17;
  _20 = *_19;
  _21 = (int) _20;
  ads_22 = _15 + _21;
  # DEBUG ads => ads_22
  if (ads_22 < thresh_23(D))
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  nmv_24 = nmv_38 + 1;
  # DEBUG nmv => nmv_24
  _25 = (long unsigned int) nmv_38;
  _26 = _25 * 2;
  _28 = mvs_27(D) + _26;
  _29 = (short int) i_40;
  *_28 = _29;

  <bb 6>:
  # nmv_2 = PHI <nmv_38(4), nmv_24(5)>
  # DEBUG nmv => nmv_2
  i_31 = i_40 + 1;
  # DEBUG i => i_31
  sums_32 = sums_37 + 2;
  # DEBUG sums => sums_32
  # DEBUG i => i_31
  # DEBUG nmv => nmv_2
  # DEBUG sums => sums_32
  if (width_9(D) > i_31)
    goto <bb 8>;
  else
    goto <bb 7>;

  <bb 7>:
  # nmv_50 = PHI <nmv_2(6)>
  goto <bb 9>;

  <bb 8>:
  goto <bb 4>;

  <bb 9>:
  # nmv_39 = PHI <nmv_50(7), 0(2)>
  return nmv_39;

}



;; Function x264_pixel_sa8d_16x16 (x264_pixel_sa8d_16x16, funcdef_no=141, decl_uid=7930, cgraph_uid=141, symbol_order=184)


Analyzing loop at common/pixel.c:253
common/pixel.c:253:5: note: ===== analyze_loop_nest =====
common/pixel.c:253:5: note: === vect_analyze_loop_form ===
common/pixel.c:253:5: note: not vectorized: multiple nested loops.
common/pixel.c:253:5: note: bad loop form.

Analyzing loop at common/pixel.c:255
common/pixel.c:255:9: note: ===== analyze_loop_nest =====
common/pixel.c:255:9: note: === vect_analyze_loop_form ===
common/pixel.c:255:9: note: not vectorized: multiple nested loops.
common/pixel.c:255:9: note: bad loop form.

Analyzing loop at common/pixel.c:279
common/pixel.c:279:13: note: ===== analyze_loop_nest =====
common/pixel.c:279:13: note: === vect_analyze_loop_form ===
common/pixel.c:279:13: note: === get_loop_niters ===
Analyzing # of iterations of loop 3
  exit condition [7, + , 4294967295] != 0
  bounds on difference of bases: -7 ... -7
  result:
    # of iterations 7, bounded by 7
common/pixel.c:279:13: note: === vect_analyze_data_refs ===
Creating dr for diff[0][i_209]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &diff
	offset from base address: 0
	constant offset from base address: 0
	step: 2
	aligned to: 128
	base_object: diff
	Access function 0: {0, +, 1}_3
	Access function 1: 0
Creating dr for diff[1][i_209]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &diff
	offset from base address: 0
	constant offset from base address: 16
	step: 2
	aligned to: 128
	base_object: diff
	Access function 0: {0, +, 1}_3
	Access function 1: 1
Creating dr for diff[2][i_209]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &diff
	offset from base address: 0
	constant offset from base address: 32
	step: 2
	aligned to: 128
	base_object: diff
	Access function 0: {0, +, 1}_3
	Access function 1: 2
Creating dr for diff[3][i_209]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &diff
	offset from base address: 0
	constant offset from base address: 48
	step: 2
	aligned to: 128
	base_object: diff
	Access function 0: {0, +, 1}_3
	Access function 1: 3
Creating dr for diff[4][i_209]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &diff
	offset from base address: 0
	constant offset from base address: 64
	step: 2
	aligned to: 128
	base_object: diff
	Access function 0: {0, +, 1}_3
	Access function 1: 4
Creating dr for diff[5][i_209]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &diff
	offset from base address: 0
	constant offset from base address: 80
	step: 2
	aligned to: 128
	base_object: diff
	Access function 0: {0, +, 1}_3
	Access function 1: 5
Creating dr for diff[6][i_209]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &diff
	offset from base address: 0
	constant offset from base address: 96
	step: 2
	aligned to: 128
	base_object: diff
	Access function 0: {0, +, 1}_3
	Access function 1: 6
Creating dr for diff[7][i_209]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &diff
	offset from base address: 0
	constant offset from base address: 112
	step: 2
	aligned to: 128
	base_object: diff
	Access function 0: {0, +, 1}_3
	Access function 1: 7
common/pixel.c:279:13: note: got vectype for stmt: _104 = diff[0][i_209];
vector(8) short int
common/pixel.c:279:13: note: got vectype for stmt: _106 = diff[1][i_209];
vector(8) short int
common/pixel.c:279:13: note: got vectype for stmt: _110 = diff[2][i_209];
vector(8) short int
common/pixel.c:279:13: note: got vectype for stmt: _112 = diff[3][i_209];
vector(8) short int
common/pixel.c:279:13: note: got vectype for stmt: _120 = diff[4][i_209];
vector(8) short int
common/pixel.c:279:13: note: got vectype for stmt: _122 = diff[5][i_209];
vector(8) short int
common/pixel.c:279:13: note: got vectype for stmt: _126 = diff[6][i_209];
vector(8) short int
common/pixel.c:279:13: note: got vectype for stmt: _128 = diff[7][i_209];
vector(8) short int
common/pixel.c:279:13: note: === vect_analyze_scalar_cycles ===
common/pixel.c:279:13: note: Analyze phi: i_209 = PHI <0(7), i_161(9)>

common/pixel.c:279:13: note: Access function of PHI: {0, +, 1}_3
common/pixel.c:279:13: note: step: 1,  init: 0
common/pixel.c:279:13: note: Detected induction.
common/pixel.c:279:13: note: Analyze phi: i_satd_210 = PHI <i_satd_213(7), i_satd_160(9)>

common/pixel.c:279:13: note: Access function of PHI: {i_satd_213, +, ((((((_156 + _159) + _153) + _150) + _147) + _144) + _141) + _137}_3
common/pixel.c:279:13: note: step: ((((((_156 + _159) + _153) + _150) + _147) + _144) + _141) + _137,  init: i_satd_213
common/pixel.c:279:13: note: step unknown.
common/pixel.c:279:13: note: Analyze phi: ivtmp_738 = PHI <8(7), ivtmp_737(9)>

common/pixel.c:279:13: note: Access function of PHI: {8, +, 4294967295}_3
common/pixel.c:279:13: note: step: 4294967295,  init: 8
common/pixel.c:279:13: note: Detected induction.
common/pixel.c:279:13: note: Analyze phi: i_satd_210 = PHI <i_satd_213(7), i_satd_160(9)>

common/pixel.c:279:13: note: swapping oprnds: i_satd_142 = i_satd_139 + _141;

common/pixel.c:279:13: note: swapping oprnds: i_satd_145 = i_satd_142 + _144;

common/pixel.c:279:13: note: swapping oprnds: i_satd_148 = i_satd_145 + _147;

common/pixel.c:279:13: note: swapping oprnds: i_satd_151 = i_satd_148 + _150;

common/pixel.c:279:13: note: swapping oprnds: i_satd_154 = i_satd_151 + _153;

common/pixel.c:279:13: note: swapping oprnds: i_satd_157 = i_satd_154 + _156;

common/pixel.c:279:13: note: swapping oprnds: i_satd_160 = i_satd_157 + _159;

common/pixel.c:279:13: note: reduction: detected reduction chain: i_satd_160 = _159 + i_satd_157;

common/pixel.c:279:13: note: Detected reduction.
common/pixel.c:279:13: note: === vect_pattern_recog ===
common/pixel.c:279:13: note: vect_is_simple_use: operand _159
common/pixel.c:279:13: note: def_stmt: _159 = ABS_EXPR <_158>;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: vect_is_simple_use: operand _159
common/pixel.c:279:13: note: def_stmt: _159 = ABS_EXPR <_158>;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: vect_is_simple_use: operand _159
common/pixel.c:279:13: note: def_stmt: _159 = ABS_EXPR <_158>;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: vect_is_simple_use: operand b3_119
common/pixel.c:279:13: note: def_stmt: b3_119 = t1_109 - t3_115;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: === vect_analyze_data_ref_accesses ===
common/pixel.c:279:13: note: === vect_mark_stmts_to_be_vectorized ===
common/pixel.c:279:13: note: init: phi relevant? i_209 = PHI <0(7), i_161(9)>
common/pixel.c:279:13: note: init: phi relevant? i_satd_210 = PHI <i_satd_213(7), i_satd_160(9)>
common/pixel.c:279:13: note: init: phi relevant? ivtmp_738 = PHI <8(7), ivtmp_737(9)>
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG i => i_209
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG i_satd => i_satd_210
common/pixel.c:279:13: note: init: stmt relevant? _104 = diff[0][i_209];
common/pixel.c:279:13: note: init: stmt relevant? _105 = (int) _104;
common/pixel.c:279:13: note: init: stmt relevant? _106 = diff[1][i_209];
common/pixel.c:279:13: note: init: stmt relevant? _107 = (int) _106;
common/pixel.c:279:13: note: init: stmt relevant? t0_108 = _105 + _107;
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG t0 => t0_108
common/pixel.c:279:13: note: init: stmt relevant? t1_109 = _105 - _107;
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG t1 => t1_109
common/pixel.c:279:13: note: init: stmt relevant? _110 = diff[2][i_209];
common/pixel.c:279:13: note: init: stmt relevant? _111 = (int) _110;
common/pixel.c:279:13: note: init: stmt relevant? _112 = diff[3][i_209];
common/pixel.c:279:13: note: init: stmt relevant? _113 = (int) _112;
common/pixel.c:279:13: note: init: stmt relevant? t2_114 = _111 + _113;
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG t2 => t2_114
common/pixel.c:279:13: note: init: stmt relevant? t3_115 = _111 - _113;
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG t3 => t3_115
common/pixel.c:279:13: note: init: stmt relevant? b0_116 = t0_108 + t2_114;
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG b0 => b0_116
common/pixel.c:279:13: note: init: stmt relevant? b2_117 = t0_108 - t2_114;
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG b2 => b2_117
common/pixel.c:279:13: note: init: stmt relevant? b1_118 = t1_109 + t3_115;
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG b1 => b1_118
common/pixel.c:279:13: note: init: stmt relevant? b3_119 = t1_109 - t3_115;
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG b3 => b3_119
common/pixel.c:279:13: note: init: stmt relevant? _120 = diff[4][i_209];
common/pixel.c:279:13: note: init: stmt relevant? _121 = (int) _120;
common/pixel.c:279:13: note: init: stmt relevant? _122 = diff[5][i_209];
common/pixel.c:279:13: note: init: stmt relevant? _123 = (int) _122;
common/pixel.c:279:13: note: init: stmt relevant? t0_124 = _121 + _123;
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG t0 => t0_124
common/pixel.c:279:13: note: init: stmt relevant? t1_125 = _121 - _123;
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG t1 => t1_125
common/pixel.c:279:13: note: init: stmt relevant? _126 = diff[6][i_209];
common/pixel.c:279:13: note: init: stmt relevant? _127 = (int) _126;
common/pixel.c:279:13: note: init: stmt relevant? _128 = diff[7][i_209];
common/pixel.c:279:13: note: init: stmt relevant? _129 = (int) _128;
common/pixel.c:279:13: note: init: stmt relevant? t2_130 = _127 + _129;
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG t2 => t2_130
common/pixel.c:279:13: note: init: stmt relevant? t3_131 = _127 - _129;
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG t3 => t3_131
common/pixel.c:279:13: note: init: stmt relevant? b4_132 = t0_124 + t2_130;
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG b4 => b4_132
common/pixel.c:279:13: note: init: stmt relevant? b6_133 = t0_124 - t2_130;
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG b6 => b6_133
common/pixel.c:279:13: note: init: stmt relevant? b5_134 = t1_125 + t3_131;
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG b5 => b5_134
common/pixel.c:279:13: note: init: stmt relevant? b7_135 = t1_125 - t3_131;
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG b7 => b7_135
common/pixel.c:279:13: note: init: stmt relevant? _136 = b0_116 + b4_132;
common/pixel.c:279:13: note: init: stmt relevant? _137 = ABS_EXPR <_136>;
common/pixel.c:279:13: note: init: stmt relevant? i_satd_139 = _137 + i_satd_210;
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG i_satd => i_satd_139
common/pixel.c:279:13: note: init: stmt relevant? _140 = b0_116 - b4_132;
common/pixel.c:279:13: note: init: stmt relevant? _141 = ABS_EXPR <_140>;
common/pixel.c:279:13: note: init: stmt relevant? i_satd_142 = _141 + i_satd_139;
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG i_satd => i_satd_142
common/pixel.c:279:13: note: init: stmt relevant? _143 = b1_118 + b5_134;
common/pixel.c:279:13: note: init: stmt relevant? _144 = ABS_EXPR <_143>;
common/pixel.c:279:13: note: init: stmt relevant? i_satd_145 = _144 + i_satd_142;
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG i_satd => i_satd_145
common/pixel.c:279:13: note: init: stmt relevant? _146 = b1_118 - b5_134;
common/pixel.c:279:13: note: init: stmt relevant? _147 = ABS_EXPR <_146>;
common/pixel.c:279:13: note: init: stmt relevant? i_satd_148 = _147 + i_satd_145;
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG i_satd => i_satd_148
common/pixel.c:279:13: note: init: stmt relevant? _149 = b2_117 + b6_133;
common/pixel.c:279:13: note: init: stmt relevant? _150 = ABS_EXPR <_149>;
common/pixel.c:279:13: note: init: stmt relevant? i_satd_151 = _150 + i_satd_148;
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG i_satd => i_satd_151
common/pixel.c:279:13: note: init: stmt relevant? _152 = b2_117 - b6_133;
common/pixel.c:279:13: note: init: stmt relevant? _153 = ABS_EXPR <_152>;
common/pixel.c:279:13: note: init: stmt relevant? i_satd_154 = _153 + i_satd_151;
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG i_satd => i_satd_154
common/pixel.c:279:13: note: init: stmt relevant? _155 = b3_119 + b7_135;
common/pixel.c:279:13: note: init: stmt relevant? _156 = ABS_EXPR <_155>;
common/pixel.c:279:13: note: init: stmt relevant? i_satd_157 = _156 + i_satd_154;
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG i_satd => i_satd_157
common/pixel.c:279:13: note: init: stmt relevant? _158 = b3_119 - b7_135;
common/pixel.c:279:13: note: init: stmt relevant? _159 = ABS_EXPR <_158>;
common/pixel.c:279:13: note: init: stmt relevant? i_satd_160 = _159 + i_satd_157;
common/pixel.c:279:13: note: vec_stmt_relevant_p: used out of loop.
common/pixel.c:279:13: note: mark relevant 0, live 1.
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG i_satd => i_satd_160
common/pixel.c:279:13: note: init: stmt relevant? i_161 = i_209 + 1;
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG i => i_161
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG i => i_161
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG i_satd => i_satd_160
common/pixel.c:279:13: note: init: stmt relevant? ivtmp_737 = ivtmp_738 - 1;
common/pixel.c:279:13: note: init: stmt relevant? if (ivtmp_737 != 0)
common/pixel.c:279:13: note: worklist: examine stmt: i_satd_160 = _159 + i_satd_157;
common/pixel.c:279:13: note: vect_is_simple_use: operand _159
common/pixel.c:279:13: note: def_stmt: _159 = ABS_EXPR <_158>;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: vect_is_simple_use: operand i_satd_157
common/pixel.c:279:13: note: def_stmt: i_satd_157 = _156 + i_satd_154;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: i_satd_157 = _156 + i_satd_154;
common/pixel.c:279:13: note: vect_is_simple_use: operand _156
common/pixel.c:279:13: note: def_stmt: _156 = ABS_EXPR <_155>;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: vect_is_simple_use: operand i_satd_154
common/pixel.c:279:13: note: def_stmt: i_satd_154 = _153 + i_satd_151;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: i_satd_154 = _153 + i_satd_151;
common/pixel.c:279:13: note: vect_is_simple_use: operand _153
common/pixel.c:279:13: note: def_stmt: _153 = ABS_EXPR <_152>;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: vect_is_simple_use: operand i_satd_151
common/pixel.c:279:13: note: def_stmt: i_satd_151 = _150 + i_satd_148;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: i_satd_151 = _150 + i_satd_148;
common/pixel.c:279:13: note: vect_is_simple_use: operand _150
common/pixel.c:279:13: note: def_stmt: _150 = ABS_EXPR <_149>;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: vect_is_simple_use: operand i_satd_148
common/pixel.c:279:13: note: def_stmt: i_satd_148 = _147 + i_satd_145;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: i_satd_148 = _147 + i_satd_145;
common/pixel.c:279:13: note: vect_is_simple_use: operand _147
common/pixel.c:279:13: note: def_stmt: _147 = ABS_EXPR <_146>;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: vect_is_simple_use: operand i_satd_145
common/pixel.c:279:13: note: def_stmt: i_satd_145 = _144 + i_satd_142;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: i_satd_145 = _144 + i_satd_142;
common/pixel.c:279:13: note: vect_is_simple_use: operand _144
common/pixel.c:279:13: note: def_stmt: _144 = ABS_EXPR <_143>;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: vect_is_simple_use: operand i_satd_142
common/pixel.c:279:13: note: def_stmt: i_satd_142 = _141 + i_satd_139;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: i_satd_142 = _141 + i_satd_139;
common/pixel.c:279:13: note: vect_is_simple_use: operand _141
common/pixel.c:279:13: note: def_stmt: _141 = ABS_EXPR <_140>;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: vect_is_simple_use: operand i_satd_139
common/pixel.c:279:13: note: def_stmt: i_satd_139 = _137 + i_satd_210;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: i_satd_139 = _137 + i_satd_210;
common/pixel.c:279:13: note: vect_is_simple_use: operand _137
common/pixel.c:279:13: note: def_stmt: _137 = ABS_EXPR <_136>;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: vect_is_simple_use: operand i_satd_210
common/pixel.c:279:13: note: def_stmt: i_satd_210 = PHI <i_satd_213(7), i_satd_160(9)>
common/pixel.c:279:13: note: type of def: 5.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: i_satd_210 = PHI <i_satd_213(7), i_satd_160(9)>
common/pixel.c:279:13: note: vect_is_simple_use: operand i_satd_213
common/pixel.c:279:13: note: def_stmt: i_satd_213 = PHI <i_satd_736(3), i_satd_212(13)>
common/pixel.c:279:13: note: type of def: 2.
common/pixel.c:279:13: note: def_stmt is out of loop.
common/pixel.c:279:13: note: vect_is_simple_use: operand i_satd_160
common/pixel.c:279:13: note: def_stmt: i_satd_160 = _159 + i_satd_157;
common/pixel.c:279:13: note: type of def: 5.
common/pixel.c:279:13: note: reduc-stmt defining reduc-phi in the same nest.
common/pixel.c:279:13: note: worklist: examine stmt: _137 = ABS_EXPR <_136>;
common/pixel.c:279:13: note: vect_is_simple_use: operand _136
common/pixel.c:279:13: note: def_stmt: _136 = b0_116 + b4_132;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: _136 = b0_116 + b4_132;
common/pixel.c:279:13: note: vect_is_simple_use: operand b0_116
common/pixel.c:279:13: note: def_stmt: b0_116 = t0_108 + t2_114;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: vect_is_simple_use: operand b4_132
common/pixel.c:279:13: note: def_stmt: b4_132 = t0_124 + t2_130;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: b4_132 = t0_124 + t2_130;
common/pixel.c:279:13: note: vect_is_simple_use: operand t0_124
common/pixel.c:279:13: note: def_stmt: t0_124 = _121 + _123;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: vect_is_simple_use: operand t2_130
common/pixel.c:279:13: note: def_stmt: t2_130 = _127 + _129;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: t2_130 = _127 + _129;
common/pixel.c:279:13: note: vect_is_simple_use: operand _127
common/pixel.c:279:13: note: def_stmt: _127 = (int) _126;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: vect_is_simple_use: operand _129
common/pixel.c:279:13: note: def_stmt: _129 = (int) _128;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: _129 = (int) _128;
common/pixel.c:279:13: note: vect_is_simple_use: operand _128
common/pixel.c:279:13: note: def_stmt: _128 = diff[7][i_209];
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: _128 = diff[7][i_209];
common/pixel.c:279:13: note: worklist: examine stmt: _127 = (int) _126;
common/pixel.c:279:13: note: vect_is_simple_use: operand _126
common/pixel.c:279:13: note: def_stmt: _126 = diff[6][i_209];
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: _126 = diff[6][i_209];
common/pixel.c:279:13: note: worklist: examine stmt: t0_124 = _121 + _123;
common/pixel.c:279:13: note: vect_is_simple_use: operand _121
common/pixel.c:279:13: note: def_stmt: _121 = (int) _120;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: vect_is_simple_use: operand _123
common/pixel.c:279:13: note: def_stmt: _123 = (int) _122;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: _123 = (int) _122;
common/pixel.c:279:13: note: vect_is_simple_use: operand _122
common/pixel.c:279:13: note: def_stmt: _122 = diff[5][i_209];
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: _122 = diff[5][i_209];
common/pixel.c:279:13: note: worklist: examine stmt: _121 = (int) _120;
common/pixel.c:279:13: note: vect_is_simple_use: operand _120
common/pixel.c:279:13: note: def_stmt: _120 = diff[4][i_209];
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: _120 = diff[4][i_209];
common/pixel.c:279:13: note: worklist: examine stmt: b0_116 = t0_108 + t2_114;
common/pixel.c:279:13: note: vect_is_simple_use: operand t0_108
common/pixel.c:279:13: note: def_stmt: t0_108 = _105 + _107;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: vect_is_simple_use: operand t2_114
common/pixel.c:279:13: note: def_stmt: t2_114 = _111 + _113;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: t2_114 = _111 + _113;
common/pixel.c:279:13: note: vect_is_simple_use: operand _111
common/pixel.c:279:13: note: def_stmt: _111 = (int) _110;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: vect_is_simple_use: operand _113
common/pixel.c:279:13: note: def_stmt: _113 = (int) _112;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: _113 = (int) _112;
common/pixel.c:279:13: note: vect_is_simple_use: operand _112
common/pixel.c:279:13: note: def_stmt: _112 = diff[3][i_209];
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: _112 = diff[3][i_209];
common/pixel.c:279:13: note: worklist: examine stmt: _111 = (int) _110;
common/pixel.c:279:13: note: vect_is_simple_use: operand _110
common/pixel.c:279:13: note: def_stmt: _110 = diff[2][i_209];
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: _110 = diff[2][i_209];
common/pixel.c:279:13: note: worklist: examine stmt: t0_108 = _105 + _107;
common/pixel.c:279:13: note: vect_is_simple_use: operand _105
common/pixel.c:279:13: note: def_stmt: _105 = (int) _104;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: vect_is_simple_use: operand _107
common/pixel.c:279:13: note: def_stmt: _107 = (int) _106;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: _107 = (int) _106;
common/pixel.c:279:13: note: vect_is_simple_use: operand _106
common/pixel.c:279:13: note: def_stmt: _106 = diff[1][i_209];
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: _106 = diff[1][i_209];
common/pixel.c:279:13: note: worklist: examine stmt: _105 = (int) _104;
common/pixel.c:279:13: note: vect_is_simple_use: operand _104
common/pixel.c:279:13: note: def_stmt: _104 = diff[0][i_209];
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: _104 = diff[0][i_209];
common/pixel.c:279:13: note: worklist: examine stmt: _141 = ABS_EXPR <_140>;
common/pixel.c:279:13: note: vect_is_simple_use: operand _140
common/pixel.c:279:13: note: def_stmt: _140 = b0_116 - b4_132;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: _140 = b0_116 - b4_132;
common/pixel.c:279:13: note: vect_is_simple_use: operand b0_116
common/pixel.c:279:13: note: def_stmt: b0_116 = t0_108 + t2_114;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: already marked relevant/live.
common/pixel.c:279:13: note: vect_is_simple_use: operand b4_132
common/pixel.c:279:13: note: def_stmt: b4_132 = t0_124 + t2_130;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: already marked relevant/live.
common/pixel.c:279:13: note: worklist: examine stmt: _144 = ABS_EXPR <_143>;
common/pixel.c:279:13: note: vect_is_simple_use: operand _143
common/pixel.c:279:13: note: def_stmt: _143 = b1_118 + b5_134;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: _143 = b1_118 + b5_134;
common/pixel.c:279:13: note: vect_is_simple_use: operand b1_118
common/pixel.c:279:13: note: def_stmt: b1_118 = t1_109 + t3_115;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: vect_is_simple_use: operand b5_134
common/pixel.c:279:13: note: def_stmt: b5_134 = t1_125 + t3_131;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: b5_134 = t1_125 + t3_131;
common/pixel.c:279:13: note: vect_is_simple_use: operand t1_125
common/pixel.c:279:13: note: def_stmt: t1_125 = _121 - _123;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: vect_is_simple_use: operand t3_131
common/pixel.c:279:13: note: def_stmt: t3_131 = _127 - _129;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: t3_131 = _127 - _129;
common/pixel.c:279:13: note: vect_is_simple_use: operand _127
common/pixel.c:279:13: note: def_stmt: _127 = (int) _126;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: already marked relevant/live.
common/pixel.c:279:13: note: vect_is_simple_use: operand _129
common/pixel.c:279:13: note: def_stmt: _129 = (int) _128;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: already marked relevant/live.
common/pixel.c:279:13: note: worklist: examine stmt: t1_125 = _121 - _123;
common/pixel.c:279:13: note: vect_is_simple_use: operand _121
common/pixel.c:279:13: note: def_stmt: _121 = (int) _120;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: already marked relevant/live.
common/pixel.c:279:13: note: vect_is_simple_use: operand _123
common/pixel.c:279:13: note: def_stmt: _123 = (int) _122;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: already marked relevant/live.
common/pixel.c:279:13: note: worklist: examine stmt: b1_118 = t1_109 + t3_115;
common/pixel.c:279:13: note: vect_is_simple_use: operand t1_109
common/pixel.c:279:13: note: def_stmt: t1_109 = _105 - _107;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: vect_is_simple_use: operand t3_115
common/pixel.c:279:13: note: def_stmt: t3_115 = _111 - _113;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: t3_115 = _111 - _113;
common/pixel.c:279:13: note: vect_is_simple_use: operand _111
common/pixel.c:279:13: note: def_stmt: _111 = (int) _110;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: already marked relevant/live.
common/pixel.c:279:13: note: vect_is_simple_use: operand _113
common/pixel.c:279:13: note: def_stmt: _113 = (int) _112;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: already marked relevant/live.
common/pixel.c:279:13: note: worklist: examine stmt: t1_109 = _105 - _107;
common/pixel.c:279:13: note: vect_is_simple_use: operand _105
common/pixel.c:279:13: note: def_stmt: _105 = (int) _104;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: already marked relevant/live.
common/pixel.c:279:13: note: vect_is_simple_use: operand _107
common/pixel.c:279:13: note: def_stmt: _107 = (int) _106;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: already marked relevant/live.
common/pixel.c:279:13: note: worklist: examine stmt: _147 = ABS_EXPR <_146>;
common/pixel.c:279:13: note: vect_is_simple_use: operand _146
common/pixel.c:279:13: note: def_stmt: _146 = b1_118 - b5_134;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: _146 = b1_118 - b5_134;
common/pixel.c:279:13: note: vect_is_simple_use: operand b1_118
common/pixel.c:279:13: note: def_stmt: b1_118 = t1_109 + t3_115;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: already marked relevant/live.
common/pixel.c:279:13: note: vect_is_simple_use: operand b5_134
common/pixel.c:279:13: note: def_stmt: b5_134 = t1_125 + t3_131;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: already marked relevant/live.
common/pixel.c:279:13: note: worklist: examine stmt: _150 = ABS_EXPR <_149>;
common/pixel.c:279:13: note: vect_is_simple_use: operand _149
common/pixel.c:279:13: note: def_stmt: _149 = b2_117 + b6_133;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: _149 = b2_117 + b6_133;
common/pixel.c:279:13: note: vect_is_simple_use: operand b2_117
common/pixel.c:279:13: note: def_stmt: b2_117 = t0_108 - t2_114;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: vect_is_simple_use: operand b6_133
common/pixel.c:279:13: note: def_stmt: b6_133 = t0_124 - t2_130;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: b6_133 = t0_124 - t2_130;
common/pixel.c:279:13: note: vect_is_simple_use: operand t0_124
common/pixel.c:279:13: note: def_stmt: t0_124 = _121 + _123;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: already marked relevant/live.
common/pixel.c:279:13: note: vect_is_simple_use: operand t2_130
common/pixel.c:279:13: note: def_stmt: t2_130 = _127 + _129;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: already marked relevant/live.
common/pixel.c:279:13: note: worklist: examine stmt: b2_117 = t0_108 - t2_114;
common/pixel.c:279:13: note: vect_is_simple_use: operand t0_108
common/pixel.c:279:13: note: def_stmt: t0_108 = _105 + _107;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: already marked relevant/live.
common/pixel.c:279:13: note: vect_is_simple_use: operand t2_114
common/pixel.c:279:13: note: def_stmt: t2_114 = _111 + _113;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: already marked relevant/live.
common/pixel.c:279:13: note: worklist: examine stmt: _153 = ABS_EXPR <_152>;
common/pixel.c:279:13: note: vect_is_simple_use: operand _152
common/pixel.c:279:13: note: def_stmt: _152 = b2_117 - b6_133;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: _152 = b2_117 - b6_133;
common/pixel.c:279:13: note: vect_is_simple_use: operand b2_117
common/pixel.c:279:13: note: def_stmt: b2_117 = t0_108 - t2_114;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: already marked relevant/live.
common/pixel.c:279:13: note: vect_is_simple_use: operand b6_133
common/pixel.c:279:13: note: def_stmt: b6_133 = t0_124 - t2_130;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: already marked relevant/live.
common/pixel.c:279:13: note: worklist: examine stmt: _156 = ABS_EXPR <_155>;
common/pixel.c:279:13: note: vect_is_simple_use: operand _155
common/pixel.c:279:13: note: def_stmt: _155 = b3_119 + b7_135;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: _155 = b3_119 + b7_135;
common/pixel.c:279:13: note: vect_is_simple_use: operand b3_119
common/pixel.c:279:13: note: def_stmt: b3_119 = t1_109 - t3_115;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: vect_is_simple_use: operand b7_135
common/pixel.c:279:13: note: def_stmt: b7_135 = t1_125 - t3_131;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: b7_135 = t1_125 - t3_131;
common/pixel.c:279:13: note: vect_is_simple_use: operand t1_125
common/pixel.c:279:13: note: def_stmt: t1_125 = _121 - _123;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: already marked relevant/live.
common/pixel.c:279:13: note: vect_is_simple_use: operand t3_131
common/pixel.c:279:13: note: def_stmt: t3_131 = _127 - _129;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: already marked relevant/live.
common/pixel.c:279:13: note: worklist: examine stmt: b3_119 = t1_109 - t3_115;
common/pixel.c:279:13: note: vect_is_simple_use: operand t1_109
common/pixel.c:279:13: note: def_stmt: t1_109 = _105 - _107;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: already marked relevant/live.
common/pixel.c:279:13: note: vect_is_simple_use: operand t3_115
common/pixel.c:279:13: note: def_stmt: t3_115 = _111 - _113;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: already marked relevant/live.
common/pixel.c:279:13: note: worklist: examine stmt: _159 = ABS_EXPR <_158>;
common/pixel.c:279:13: note: vect_is_simple_use: operand _158
common/pixel.c:279:13: note: def_stmt: _158 = b3_119 - b7_135;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: _158 = b3_119 - b7_135;
common/pixel.c:279:13: note: vect_is_simple_use: operand b3_119
common/pixel.c:279:13: note: def_stmt: b3_119 = t1_109 - t3_115;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: already marked relevant/live.
common/pixel.c:279:13: note: vect_is_simple_use: operand b7_135
common/pixel.c:279:13: note: def_stmt: b7_135 = t1_125 - t3_131;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: already marked relevant/live.
common/pixel.c:279:13: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _104 = diff[0][i_209];
  stmt_b: _106 = diff[1][i_209];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_3)
  (chrec_b = {0, +, 1}_3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 1)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _104 = diff[0][i_209];
  stmt_b: _110 = diff[2][i_209];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_3)
  (chrec_b = {0, +, 1}_3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _104 = diff[0][i_209];
  stmt_b: _112 = diff[3][i_209];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_3)
  (chrec_b = {0, +, 1}_3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _104 = diff[0][i_209];
  stmt_b: _120 = diff[4][i_209];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_3)
  (chrec_b = {0, +, 1}_3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 4)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _104 = diff[0][i_209];
  stmt_b: _122 = diff[5][i_209];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_3)
  (chrec_b = {0, +, 1}_3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 5)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _104 = diff[0][i_209];
  stmt_b: _126 = diff[6][i_209];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_3)
  (chrec_b = {0, +, 1}_3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 6)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _104 = diff[0][i_209];
  stmt_b: _128 = diff[7][i_209];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_3)
  (chrec_b = {0, +, 1}_3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _106 = diff[1][i_209];
  stmt_b: _110 = diff[2][i_209];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_3)
  (chrec_b = {0, +, 1}_3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _106 = diff[1][i_209];
  stmt_b: _112 = diff[3][i_209];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_3)
  (chrec_b = {0, +, 1}_3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _106 = diff[1][i_209];
  stmt_b: _120 = diff[4][i_209];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_3)
  (chrec_b = {0, +, 1}_3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 4)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _106 = diff[1][i_209];
  stmt_b: _122 = diff[5][i_209];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_3)
  (chrec_b = {0, +, 1}_3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 5)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _106 = diff[1][i_209];
  stmt_b: _126 = diff[6][i_209];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_3)
  (chrec_b = {0, +, 1}_3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 6)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _106 = diff[1][i_209];
  stmt_b: _128 = diff[7][i_209];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_3)
  (chrec_b = {0, +, 1}_3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _110 = diff[2][i_209];
  stmt_b: _112 = diff[3][i_209];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_3)
  (chrec_b = {0, +, 1}_3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _110 = diff[2][i_209];
  stmt_b: _120 = diff[4][i_209];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_3)
  (chrec_b = {0, +, 1}_3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 4)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _110 = diff[2][i_209];
  stmt_b: _122 = diff[5][i_209];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_3)
  (chrec_b = {0, +, 1}_3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 5)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _110 = diff[2][i_209];
  stmt_b: _126 = diff[6][i_209];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_3)
  (chrec_b = {0, +, 1}_3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 6)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _110 = diff[2][i_209];
  stmt_b: _128 = diff[7][i_209];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_3)
  (chrec_b = {0, +, 1}_3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _112 = diff[3][i_209];
  stmt_b: _120 = diff[4][i_209];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_3)
  (chrec_b = {0, +, 1}_3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 4)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _112 = diff[3][i_209];
  stmt_b: _122 = diff[5][i_209];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_3)
  (chrec_b = {0, +, 1}_3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 5)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _112 = diff[3][i_209];
  stmt_b: _126 = diff[6][i_209];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_3)
  (chrec_b = {0, +, 1}_3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 6)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _112 = diff[3][i_209];
  stmt_b: _128 = diff[7][i_209];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_3)
  (chrec_b = {0, +, 1}_3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _120 = diff[4][i_209];
  stmt_b: _122 = diff[5][i_209];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_3)
  (chrec_b = {0, +, 1}_3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 4)
  (chrec_b = 5)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _120 = diff[4][i_209];
  stmt_b: _126 = diff[6][i_209];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_3)
  (chrec_b = {0, +, 1}_3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 4)
  (chrec_b = 6)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _120 = diff[4][i_209];
  stmt_b: _128 = diff[7][i_209];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_3)
  (chrec_b = {0, +, 1}_3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 4)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _122 = diff[5][i_209];
  stmt_b: _126 = diff[6][i_209];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_3)
  (chrec_b = {0, +, 1}_3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 5)
  (chrec_b = 6)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _122 = diff[5][i_209];
  stmt_b: _128 = diff[7][i_209];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_3)
  (chrec_b = {0, +, 1}_3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 5)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _126 = diff[6][i_209];
  stmt_b: _128 = diff[7][i_209];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_3)
  (chrec_b = {0, +, 1}_3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 6)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _104 = diff[0][i_209];
  stmt_b: _104 = diff[0][i_209];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_3)
  (chrec_b = {0, +, 1}_3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 0)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _106 = diff[1][i_209];
  stmt_b: _106 = diff[1][i_209];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_3)
  (chrec_b = {0, +, 1}_3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _110 = diff[2][i_209];
  stmt_b: _110 = diff[2][i_209];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_3)
  (chrec_b = {0, +, 1}_3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _112 = diff[3][i_209];
  stmt_b: _112 = diff[3][i_209];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_3)
  (chrec_b = {0, +, 1}_3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _120 = diff[4][i_209];
  stmt_b: _120 = diff[4][i_209];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_3)
  (chrec_b = {0, +, 1}_3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 4)
  (chrec_b = 4)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _122 = diff[5][i_209];
  stmt_b: _122 = diff[5][i_209];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_3)
  (chrec_b = {0, +, 1}_3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 5)
  (chrec_b = 5)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _126 = diff[6][i_209];
  stmt_b: _126 = diff[6][i_209];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_3)
  (chrec_b = {0, +, 1}_3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 6)
  (chrec_b = 6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _128 = diff[7][i_209];
  stmt_b: _128 = diff[7][i_209];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_3)
  (chrec_b = {0, +, 1}_3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 7)
  (chrec_b = 7)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/pixel.c:279:13: note: === vect_determine_vectorization_factor ===
common/pixel.c:279:13: note: ==> examining phi: i_209 = PHI <0(7), i_161(9)>

common/pixel.c:279:13: note: ==> examining phi: i_satd_210 = PHI <i_satd_213(7), i_satd_160(9)>

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining phi: ivtmp_738 = PHI <8(7), ivtmp_737(9)>

common/pixel.c:279:13: note: ==> examining statement: # DEBUG i => i_209

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: # DEBUG i_satd => i_satd_210

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: _104 = diff[0][i_209];

common/pixel.c:279:13: note: get vectype for scalar type:  short int
common/pixel.c:279:13: note: vectype: vector(8) short int
common/pixel.c:279:13: note: nunits = 8
common/pixel.c:279:13: note: ==> examining statement: _105 = (int) _104;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  short int
common/pixel.c:279:13: note: vectype: vector(8) short int
common/pixel.c:279:13: note: nunits = 8
common/pixel.c:279:13: note: ==> examining statement: _106 = diff[1][i_209];

common/pixel.c:279:13: note: get vectype for scalar type:  short int
common/pixel.c:279:13: note: vectype: vector(8) short int
common/pixel.c:279:13: note: nunits = 8
common/pixel.c:279:13: note: ==> examining statement: _107 = (int) _106;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  short int
common/pixel.c:279:13: note: vectype: vector(8) short int
common/pixel.c:279:13: note: nunits = 8
common/pixel.c:279:13: note: ==> examining statement: t0_108 = _105 + _107;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: # DEBUG t0 => t0_108

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: t1_109 = _105 - _107;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: # DEBUG t1 => t1_109

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: _110 = diff[2][i_209];

common/pixel.c:279:13: note: get vectype for scalar type:  short int
common/pixel.c:279:13: note: vectype: vector(8) short int
common/pixel.c:279:13: note: nunits = 8
common/pixel.c:279:13: note: ==> examining statement: _111 = (int) _110;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  short int
common/pixel.c:279:13: note: vectype: vector(8) short int
common/pixel.c:279:13: note: nunits = 8
common/pixel.c:279:13: note: ==> examining statement: _112 = diff[3][i_209];

common/pixel.c:279:13: note: get vectype for scalar type:  short int
common/pixel.c:279:13: note: vectype: vector(8) short int
common/pixel.c:279:13: note: nunits = 8
common/pixel.c:279:13: note: ==> examining statement: _113 = (int) _112;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  short int
common/pixel.c:279:13: note: vectype: vector(8) short int
common/pixel.c:279:13: note: nunits = 8
common/pixel.c:279:13: note: ==> examining statement: t2_114 = _111 + _113;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: # DEBUG t2 => t2_114

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: t3_115 = _111 - _113;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: # DEBUG t3 => t3_115

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: b0_116 = t0_108 + t2_114;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: # DEBUG b0 => b0_116

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: b2_117 = t0_108 - t2_114;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: # DEBUG b2 => b2_117

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: b1_118 = t1_109 + t3_115;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: # DEBUG b1 => b1_118

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: b3_119 = t1_109 - t3_115;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: # DEBUG b3 => b3_119

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: _120 = diff[4][i_209];

common/pixel.c:279:13: note: get vectype for scalar type:  short int
common/pixel.c:279:13: note: vectype: vector(8) short int
common/pixel.c:279:13: note: nunits = 8
common/pixel.c:279:13: note: ==> examining statement: _121 = (int) _120;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  short int
common/pixel.c:279:13: note: vectype: vector(8) short int
common/pixel.c:279:13: note: nunits = 8
common/pixel.c:279:13: note: ==> examining statement: _122 = diff[5][i_209];

common/pixel.c:279:13: note: get vectype for scalar type:  short int
common/pixel.c:279:13: note: vectype: vector(8) short int
common/pixel.c:279:13: note: nunits = 8
common/pixel.c:279:13: note: ==> examining statement: _123 = (int) _122;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  short int
common/pixel.c:279:13: note: vectype: vector(8) short int
common/pixel.c:279:13: note: nunits = 8
common/pixel.c:279:13: note: ==> examining statement: t0_124 = _121 + _123;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: # DEBUG t0 => t0_124

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: t1_125 = _121 - _123;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: # DEBUG t1 => t1_125

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: _126 = diff[6][i_209];

common/pixel.c:279:13: note: get vectype for scalar type:  short int
common/pixel.c:279:13: note: vectype: vector(8) short int
common/pixel.c:279:13: note: nunits = 8
common/pixel.c:279:13: note: ==> examining statement: _127 = (int) _126;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  short int
common/pixel.c:279:13: note: vectype: vector(8) short int
common/pixel.c:279:13: note: nunits = 8
common/pixel.c:279:13: note: ==> examining statement: _128 = diff[7][i_209];

common/pixel.c:279:13: note: get vectype for scalar type:  short int
common/pixel.c:279:13: note: vectype: vector(8) short int
common/pixel.c:279:13: note: nunits = 8
common/pixel.c:279:13: note: ==> examining statement: _129 = (int) _128;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  short int
common/pixel.c:279:13: note: vectype: vector(8) short int
common/pixel.c:279:13: note: nunits = 8
common/pixel.c:279:13: note: ==> examining statement: t2_130 = _127 + _129;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: # DEBUG t2 => t2_130

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: t3_131 = _127 - _129;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: # DEBUG t3 => t3_131

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: b4_132 = t0_124 + t2_130;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: # DEBUG b4 => b4_132

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: b6_133 = t0_124 - t2_130;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: # DEBUG b6 => b6_133

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: b5_134 = t1_125 + t3_131;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: # DEBUG b5 => b5_134

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: b7_135 = t1_125 - t3_131;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: # DEBUG b7 => b7_135

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: _136 = b0_116 + b4_132;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: _137 = ABS_EXPR <_136>;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: i_satd_139 = _137 + i_satd_210;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: # DEBUG i_satd => i_satd_139

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: _140 = b0_116 - b4_132;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: _141 = ABS_EXPR <_140>;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: i_satd_142 = _141 + i_satd_139;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: # DEBUG i_satd => i_satd_142

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: _143 = b1_118 + b5_134;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: _144 = ABS_EXPR <_143>;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: i_satd_145 = _144 + i_satd_142;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: # DEBUG i_satd => i_satd_145

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: _146 = b1_118 - b5_134;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: _147 = ABS_EXPR <_146>;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: i_satd_148 = _147 + i_satd_145;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: # DEBUG i_satd => i_satd_148

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: _149 = b2_117 + b6_133;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: _150 = ABS_EXPR <_149>;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: i_satd_151 = _150 + i_satd_148;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: # DEBUG i_satd => i_satd_151

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: _152 = b2_117 - b6_133;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: _153 = ABS_EXPR <_152>;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: i_satd_154 = _153 + i_satd_151;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: # DEBUG i_satd => i_satd_154

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: _155 = b3_119 + b7_135;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: _156 = ABS_EXPR <_155>;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: i_satd_157 = _156 + i_satd_154;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: # DEBUG i_satd => i_satd_157

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: _158 = b3_119 - b7_135;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: _159 = ABS_EXPR <_158>;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: i_satd_160 = _159 + i_satd_157;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: # DEBUG i_satd => i_satd_160

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: i_161 = i_209 + 1;

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: # DEBUG i => i_161

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: # DEBUG i => i_161

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: # DEBUG i_satd => i_satd_160

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: ivtmp_737 = ivtmp_738 - 1;

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: if (ivtmp_737 != 0)

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: vectorization factor = 8
common/pixel.c:279:13: note: === vect_analyze_data_refs_alignment ===
common/pixel.c:279:13: note: vect_compute_data_ref_alignment:
common/pixel.c:279:13: note: misalign = 0 bytes of ref diff[0][i_209]
common/pixel.c:279:13: note: vect_compute_data_ref_alignment:
common/pixel.c:279:13: note: misalign = 0 bytes of ref diff[1][i_209]
common/pixel.c:279:13: note: vect_compute_data_ref_alignment:
common/pixel.c:279:13: note: misalign = 0 bytes of ref diff[2][i_209]
common/pixel.c:279:13: note: vect_compute_data_ref_alignment:
common/pixel.c:279:13: note: misalign = 0 bytes of ref diff[3][i_209]
common/pixel.c:279:13: note: vect_compute_data_ref_alignment:
common/pixel.c:279:13: note: misalign = 0 bytes of ref diff[4][i_209]
common/pixel.c:279:13: note: vect_compute_data_ref_alignment:
common/pixel.c:279:13: note: misalign = 0 bytes of ref diff[5][i_209]
common/pixel.c:279:13: note: vect_compute_data_ref_alignment:
common/pixel.c:279:13: note: misalign = 0 bytes of ref diff[6][i_209]
common/pixel.c:279:13: note: vect_compute_data_ref_alignment:
common/pixel.c:279:13: note: misalign = 0 bytes of ref diff[7][i_209]
common/pixel.c:279:13: note: === vect_prune_runtime_alias_test_list ===
common/pixel.c:279:13: note: === vect_enhance_data_refs_alignment ===
common/pixel.c:279:13: note: vect_can_advance_ivs_p:
common/pixel.c:279:13: note: Analyze phi: i_209 = PHI <0(7), i_161(9)>

common/pixel.c:279:13: note: Analyze phi: i_satd_210 = PHI <i_satd_213(7), i_satd_160(9)>

common/pixel.c:279:13: note: reduc phi. skip.
common/pixel.c:279:13: note: Analyze phi: ivtmp_738 = PHI <8(7), ivtmp_737(9)>

common/pixel.c:279:13: note: vect_model_load_cost: aligned.
common/pixel.c:279:13: note: vect_get_data_access_cost: inside_cost = 1, outside_cost = 0.
common/pixel.c:279:13: note: vect_model_load_cost: aligned.
common/pixel.c:279:13: note: vect_get_data_access_cost: inside_cost = 2, outside_cost = 0.
common/pixel.c:279:13: note: vect_model_load_cost: aligned.
common/pixel.c:279:13: note: vect_get_data_access_cost: inside_cost = 3, outside_cost = 0.
common/pixel.c:279:13: note: vect_model_load_cost: aligned.
common/pixel.c:279:13: note: vect_get_data_access_cost: inside_cost = 4, outside_cost = 0.
common/pixel.c:279:13: note: vect_model_load_cost: aligned.
common/pixel.c:279:13: note: vect_get_data_access_cost: inside_cost = 5, outside_cost = 0.
common/pixel.c:279:13: note: vect_model_load_cost: aligned.
common/pixel.c:279:13: note: vect_get_data_access_cost: inside_cost = 6, outside_cost = 0.
common/pixel.c:279:13: note: vect_model_load_cost: aligned.
common/pixel.c:279:13: note: vect_get_data_access_cost: inside_cost = 7, outside_cost = 0.
common/pixel.c:279:13: note: vect_model_load_cost: aligned.
common/pixel.c:279:13: note: vect_get_data_access_cost: inside_cost = 8, outside_cost = 0.
common/pixel.c:279:13: note: === vect_analyze_slp ===
common/pixel.c:279:13: note: Build SLP for i_satd_139 = _137 + i_satd_210;

common/pixel.c:279:13: note: Build SLP for i_satd_142 = _141 + i_satd_139;

common/pixel.c:279:13: note: Build SLP for i_satd_145 = _144 + i_satd_142;

common/pixel.c:279:13: note: Build SLP for i_satd_148 = _147 + i_satd_145;

common/pixel.c:279:13: note: Build SLP for i_satd_151 = _150 + i_satd_148;

common/pixel.c:279:13: note: Build SLP for i_satd_154 = _153 + i_satd_151;

common/pixel.c:279:13: note: Build SLP for i_satd_157 = _156 + i_satd_154;

common/pixel.c:279:13: note: Build SLP for i_satd_160 = _159 + i_satd_157;

common/pixel.c:279:13: note: vect_is_simple_use: operand _137
common/pixel.c:279:13: note: def_stmt: _137 = ABS_EXPR <_136>;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: vect_is_simple_use: operand i_satd_210
common/pixel.c:279:13: note: def_stmt: i_satd_210 = PHI <i_satd_213(7), i_satd_160(9)>
common/pixel.c:279:13: note: type of def: 5.
common/pixel.c:279:13: note: vect_is_simple_use: operand _141
common/pixel.c:279:13: note: def_stmt: _141 = ABS_EXPR <_140>;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: vect_is_simple_use: operand i_satd_139
common/pixel.c:279:13: note: def_stmt: i_satd_139 = _137 + i_satd_210;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: vect_is_simple_use: operand _144
common/pixel.c:279:13: note: def_stmt: _144 = ABS_EXPR <_143>;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: vect_is_simple_use: operand i_satd_142
common/pixel.c:279:13: note: def_stmt: i_satd_142 = _141 + i_satd_139;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: vect_is_simple_use: operand _147
common/pixel.c:279:13: note: def_stmt: _147 = ABS_EXPR <_146>;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: vect_is_simple_use: operand i_satd_145
common/pixel.c:279:13: note: def_stmt: i_satd_145 = _144 + i_satd_142;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: vect_is_simple_use: operand _150
common/pixel.c:279:13: note: def_stmt: _150 = ABS_EXPR <_149>;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: vect_is_simple_use: operand i_satd_148
common/pixel.c:279:13: note: def_stmt: i_satd_148 = _147 + i_satd_145;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: vect_is_simple_use: operand _153
common/pixel.c:279:13: note: def_stmt: _153 = ABS_EXPR <_152>;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: vect_is_simple_use: operand i_satd_151
common/pixel.c:279:13: note: def_stmt: i_satd_151 = _150 + i_satd_148;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: vect_is_simple_use: operand _156
common/pixel.c:279:13: note: def_stmt: _156 = ABS_EXPR <_155>;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: vect_is_simple_use: operand i_satd_154
common/pixel.c:279:13: note: def_stmt: i_satd_154 = _153 + i_satd_151;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: vect_is_simple_use: operand _159
common/pixel.c:279:13: note: def_stmt: _159 = ABS_EXPR <_158>;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: vect_is_simple_use: operand i_satd_157
common/pixel.c:279:13: note: def_stmt: i_satd_157 = _156 + i_satd_154;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: Build SLP for _137 = ABS_EXPR <_136>;

common/pixel.c:279:13: note: Build SLP for _141 = ABS_EXPR <_140>;

common/pixel.c:279:13: note: Build SLP for _144 = ABS_EXPR <_143>;

common/pixel.c:279:13: note: Build SLP for _147 = ABS_EXPR <_146>;

common/pixel.c:279:13: note: Build SLP for _150 = ABS_EXPR <_149>;

common/pixel.c:279:13: note: Build SLP for _153 = ABS_EXPR <_152>;

common/pixel.c:279:13: note: Build SLP for _156 = ABS_EXPR <_155>;

common/pixel.c:279:13: note: Build SLP for _159 = ABS_EXPR <_158>;

common/pixel.c:279:13: note: vect_is_simple_use: operand _136
common/pixel.c:279:13: note: def_stmt: _136 = b0_116 + b4_132;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: vect_is_simple_use: operand _140
common/pixel.c:279:13: note: def_stmt: _140 = b0_116 - b4_132;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: vect_is_simple_use: operand _143
common/pixel.c:279:13: note: def_stmt: _143 = b1_118 + b5_134;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: vect_is_simple_use: operand _146
common/pixel.c:279:13: note: def_stmt: _146 = b1_118 - b5_134;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: vect_is_simple_use: operand _149
common/pixel.c:279:13: note: def_stmt: _149 = b2_117 + b6_133;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: vect_is_simple_use: operand _152
common/pixel.c:279:13: note: def_stmt: _152 = b2_117 - b6_133;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: vect_is_simple_use: operand _155
common/pixel.c:279:13: note: def_stmt: _155 = b3_119 + b7_135;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: vect_is_simple_use: operand _158
common/pixel.c:279:13: note: def_stmt: _158 = b3_119 - b7_135;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: Build SLP for _136 = b0_116 + b4_132;

common/pixel.c:279:13: note: Build SLP for _140 = b0_116 - b4_132;

common/pixel.c:279:13: note: Build SLP failed: different operation in stmt _140 = b0_116 - b4_132;

common/pixel.c:279:13: note: Build SLP for _143 = b1_118 + b5_134;

common/pixel.c:279:13: note: Build SLP for _146 = b1_118 - b5_134;

common/pixel.c:279:13: note: Build SLP failed: different operation in stmt _146 = b1_118 - b5_134;

common/pixel.c:279:13: note: Build SLP for _149 = b2_117 + b6_133;

common/pixel.c:279:13: note: Build SLP for _152 = b2_117 - b6_133;

common/pixel.c:279:13: note: Build SLP failed: different operation in stmt _152 = b2_117 - b6_133;

common/pixel.c:279:13: note: Build SLP for _155 = b3_119 + b7_135;

common/pixel.c:279:13: note: Build SLP for _158 = b3_119 - b7_135;

common/pixel.c:279:13: note: Build SLP failed: different operation in stmt _158 = b3_119 - b7_135;


Analyzing loop at common/pixel.c:262
common/pixel.c:262:13: note: ===== analyze_loop_nest =====
common/pixel.c:262:13: note: === vect_analyze_loop_form ===
common/pixel.c:262:13: note: === get_loop_niters ===
Analyzing # of iterations of loop 4
  exit condition [7, + , 4294967295] != 0
  bounds on difference of bases: -7 ... -7
  result:
    # of iterations 7, bounded by 7
common/pixel.c:262:13: note: === vect_analyze_data_refs ===
Creating dr for *p1_206
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: pix1_175 + (sizetype) x_172
	offset from base address: 0
	constant offset from base address: 0
	step: (ssizetype) pretmp_739
	aligned to: 128
	base_object: *pix1_175 + (sizetype) x_172
	Access function 0: {0B, +, pretmp_739}_4
Creating dr for *p2_207
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: pix2_189 + (sizetype) x_172
	offset from base address: 0
	constant offset from base address: 0
	step: (ssizetype) pretmp_740
	aligned to: 128
	base_object: *pix2_189 + (sizetype) x_172
	Access function 0: {0B, +, pretmp_740}_4
Creating dr for MEM[(uint8_t *)p1_206 + 1B]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: pix1_175 + (sizetype) x_172
	offset from base address: 0
	constant offset from base address: 1
	step: (ssizetype) pretmp_739
	aligned to: 128
	base_object: *pix1_175 + (sizetype) x_172
	Access function 0: {1B, +, pretmp_739}_4
Creating dr for MEM[(uint8_t *)p2_207 + 1B]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: pix2_189 + (sizetype) x_172
	offset from base address: 0
	constant offset from base address: 1
	step: (ssizetype) pretmp_740
	aligned to: 128
	base_object: *pix2_189 + (sizetype) x_172
	Access function 0: {1B, +, pretmp_740}_4
Creating dr for MEM[(uint8_t *)p1_206 + 2B]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: pix1_175 + (sizetype) x_172
	offset from base address: 0
	constant offset from base address: 2
	step: (ssizetype) pretmp_739
	aligned to: 128
	base_object: *pix1_175 + (sizetype) x_172
	Access function 0: {2B, +, pretmp_739}_4
Creating dr for MEM[(uint8_t *)p2_207 + 2B]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: pix2_189 + (sizetype) x_172
	offset from base address: 0
	constant offset from base address: 2
	step: (ssizetype) pretmp_740
	aligned to: 128
	base_object: *pix2_189 + (sizetype) x_172
	Access function 0: {2B, +, pretmp_740}_4
Creating dr for MEM[(uint8_t *)p1_206 + 3B]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: pix1_175 + (sizetype) x_172
	offset from base address: 0
	constant offset from base address: 3
	step: (ssizetype) pretmp_739
	aligned to: 128
	base_object: *pix1_175 + (sizetype) x_172
	Access function 0: {3B, +, pretmp_739}_4
Creating dr for MEM[(uint8_t *)p2_207 + 3B]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: pix2_189 + (sizetype) x_172
	offset from base address: 0
	constant offset from base address: 3
	step: (ssizetype) pretmp_740
	aligned to: 128
	base_object: *pix2_189 + (sizetype) x_172
	Access function 0: {3B, +, pretmp_740}_4
Creating dr for MEM[(uint8_t *)p1_206 + 4B]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: pix1_175 + (sizetype) x_172
	offset from base address: 0
	constant offset from base address: 4
	step: (ssizetype) pretmp_739
	aligned to: 128
	base_object: *pix1_175 + (sizetype) x_172
	Access function 0: {4B, +, pretmp_739}_4
Creating dr for MEM[(uint8_t *)p2_207 + 4B]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: pix2_189 + (sizetype) x_172
	offset from base address: 0
	constant offset from base address: 4
	step: (ssizetype) pretmp_740
	aligned to: 128
	base_object: *pix2_189 + (sizetype) x_172
	Access function 0: {4B, +, pretmp_740}_4
Creating dr for MEM[(uint8_t *)p1_206 + 5B]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: pix1_175 + (sizetype) x_172
	offset from base address: 0
	constant offset from base address: 5
	step: (ssizetype) pretmp_739
	aligned to: 128
	base_object: *pix1_175 + (sizetype) x_172
	Access function 0: {5B, +, pretmp_739}_4
Creating dr for MEM[(uint8_t *)p2_207 + 5B]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: pix2_189 + (sizetype) x_172
	offset from base address: 0
	constant offset from base address: 5
	step: (ssizetype) pretmp_740
	aligned to: 128
	base_object: *pix2_189 + (sizetype) x_172
	Access function 0: {5B, +, pretmp_740}_4
Creating dr for MEM[(uint8_t *)p1_206 + 6B]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: pix1_175 + (sizetype) x_172
	offset from base address: 0
	constant offset from base address: 6
	step: (ssizetype) pretmp_739
	aligned to: 128
	base_object: *pix1_175 + (sizetype) x_172
	Access function 0: {6B, +, pretmp_739}_4
Creating dr for MEM[(uint8_t *)p2_207 + 6B]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: pix2_189 + (sizetype) x_172
	offset from base address: 0
	constant offset from base address: 6
	step: (ssizetype) pretmp_740
	aligned to: 128
	base_object: *pix2_189 + (sizetype) x_172
	Access function 0: {6B, +, pretmp_740}_4
Creating dr for MEM[(uint8_t *)p1_206 + 7B]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: pix1_175 + (sizetype) x_172
	offset from base address: 0
	constant offset from base address: 7
	step: (ssizetype) pretmp_739
	aligned to: 128
	base_object: *pix1_175 + (sizetype) x_172
	Access function 0: {7B, +, pretmp_739}_4
Creating dr for MEM[(uint8_t *)p2_207 + 7B]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: pix2_189 + (sizetype) x_172
	offset from base address: 0
	constant offset from base address: 7
	step: (ssizetype) pretmp_740
	aligned to: 128
	base_object: *pix2_189 + (sizetype) x_172
	Access function 0: {7B, +, pretmp_740}_4
Creating dr for diff[i_208][0]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &diff
	offset from base address: 0
	constant offset from base address: 0
	step: 16
	aligned to: 128
	base_object: diff
	Access function 0: 0
	Access function 1: {0, +, 1}_4
Creating dr for diff[i_208][4]
analyze_innermost: success.
	base_address: &diff
	offset from base address: 0
	constant offset from base address: 8
	step: 16
	aligned to: 128
	base_object: diff
	Access function 0: 4
	Access function 1: {0, +, 1}_4
Creating dr for diff[i_208][1]
analyze_innermost: success.
	base_address: &diff
	offset from base address: 0
	constant offset from base address: 2
	step: 16
	aligned to: 128
	base_object: diff
	Access function 0: 1
	Access function 1: {0, +, 1}_4
Creating dr for diff[i_208][5]
analyze_innermost: success.
	base_address: &diff
	offset from base address: 0
	constant offset from base address: 10
	step: 16
	aligned to: 128
	base_object: diff
	Access function 0: 5
	Access function 1: {0, +, 1}_4
Creating dr for diff[i_208][2]
analyze_innermost: success.
	base_address: &diff
	offset from base address: 0
	constant offset from base address: 4
	step: 16
	aligned to: 128
	base_object: diff
	Access function 0: 2
	Access function 1: {0, +, 1}_4
Creating dr for diff[i_208][6]
analyze_innermost: success.
	base_address: &diff
	offset from base address: 0
	constant offset from base address: 12
	step: 16
	aligned to: 128
	base_object: diff
	Access function 0: 6
	Access function 1: {0, +, 1}_4
Creating dr for diff[i_208][3]
analyze_innermost: success.
	base_address: &diff
	offset from base address: 0
	constant offset from base address: 6
	step: 16
	aligned to: 128
	base_object: diff
	Access function 0: 3
	Access function 1: {0, +, 1}_4
Creating dr for diff[i_208][7]
analyze_innermost: success.
	base_address: &diff
	offset from base address: 0
	constant offset from base address: 14
	step: 16
	aligned to: 128
	base_object: diff
	Access function 0: 7
	Access function 1: {0, +, 1}_4
common/pixel.c:262:13: note: got vectype for stmt: _16 = *p1_206;
vector(16) unsigned char
common/pixel.c:262:13: note: got vectype for stmt: _19 = *p2_207;
vector(16) unsigned char
common/pixel.c:262:13: note: got vectype for stmt: _22 = MEM[(uint8_t *)p1_206 + 1B];
vector(16) unsigned char
common/pixel.c:262:13: note: got vectype for stmt: _24 = MEM[(uint8_t *)p2_207 + 1B];
vector(16) unsigned char
common/pixel.c:262:13: note: got vectype for stmt: _27 = MEM[(uint8_t *)p1_206 + 2B];
vector(16) unsigned char
common/pixel.c:262:13: note: got vectype for stmt: _29 = MEM[(uint8_t *)p2_207 + 2B];
vector(16) unsigned char
common/pixel.c:262:13: note: got vectype for stmt: _32 = MEM[(uint8_t *)p1_206 + 3B];
vector(16) unsigned char
common/pixel.c:262:13: note: got vectype for stmt: _34 = MEM[(uint8_t *)p2_207 + 3B];
vector(16) unsigned char
common/pixel.c:262:13: note: got vectype for stmt: _37 = MEM[(uint8_t *)p1_206 + 4B];
vector(16) unsigned char
common/pixel.c:262:13: note: got vectype for stmt: _39 = MEM[(uint8_t *)p2_207 + 4B];
vector(16) unsigned char
common/pixel.c:262:13: note: got vectype for stmt: _42 = MEM[(uint8_t *)p1_206 + 5B];
vector(16) unsigned char
common/pixel.c:262:13: note: got vectype for stmt: _44 = MEM[(uint8_t *)p2_207 + 5B];
vector(16) unsigned char
common/pixel.c:262:13: note: got vectype for stmt: _47 = MEM[(uint8_t *)p1_206 + 6B];
vector(16) unsigned char
common/pixel.c:262:13: note: got vectype for stmt: _49 = MEM[(uint8_t *)p2_207 + 6B];
vector(16) unsigned char
common/pixel.c:262:13: note: got vectype for stmt: _52 = MEM[(uint8_t *)p1_206 + 7B];
vector(16) unsigned char
common/pixel.c:262:13: note: got vectype for stmt: _54 = MEM[(uint8_t *)p2_207 + 7B];
vector(16) unsigned char
common/pixel.c:262:13: note: got vectype for stmt: diff[i_208][0] = _76;
vector(8) short int
common/pixel.c:262:13: note: got vectype for stmt: diff[i_208][4] = _79;
vector(8) short int
common/pixel.c:262:13: note: got vectype for stmt: diff[i_208][1] = _83;
vector(8) short int
common/pixel.c:262:13: note: got vectype for stmt: diff[i_208][5] = _85;
vector(8) short int
common/pixel.c:262:13: note: got vectype for stmt: diff[i_208][2] = _89;
vector(8) short int
common/pixel.c:262:13: note: got vectype for stmt: diff[i_208][6] = _91;
vector(8) short int
common/pixel.c:262:13: note: got vectype for stmt: diff[i_208][3] = _95;
vector(8) short int
common/pixel.c:262:13: note: got vectype for stmt: diff[i_208][7] = _97;
vector(8) short int
common/pixel.c:262:13: note: === vect_analyze_scalar_cycles ===
common/pixel.c:262:13: note: Analyze phi: p1_206 = PHI <p1_100(6), p1_12(4)>

common/pixel.c:262:13: note: Access function of PHI: {p1_12, +, pretmp_739}_4
common/pixel.c:262:13: note: step: pretmp_739,  init: p1_12
common/pixel.c:262:13: note: Detected induction.
common/pixel.c:262:13: note: Analyze phi: p2_207 = PHI <p2_102(6), p2_14(4)>

common/pixel.c:262:13: note: Access function of PHI: {p2_14, +, pretmp_740}_4
common/pixel.c:262:13: note: step: pretmp_740,  init: p2_14
common/pixel.c:262:13: note: Detected induction.
common/pixel.c:262:13: note: Analyze phi: i_208 = PHI <i_98(6), 0(4)>

common/pixel.c:262:13: note: Access function of PHI: {0, +, 1}_4
common/pixel.c:262:13: note: step: 1,  init: 0
common/pixel.c:262:13: note: Detected induction.
common/pixel.c:262:13: note: Analyze phi: .MEM_214 = PHI <.MEM_187(6), .MEM_215(4)>

common/pixel.c:262:13: note: Analyze phi: ivtmp_733 = PHI <ivtmp_732(6), 8(4)>

common/pixel.c:262:13: note: Access function of PHI: {8, +, 4294967295}_4
common/pixel.c:262:13: note: step: 4294967295,  init: 8
common/pixel.c:262:13: note: Detected induction.
common/pixel.c:262:13: note: === vect_pattern_recog ===
common/pixel.c:262:13: note: === vect_analyze_data_ref_accesses ===
common/pixel.c:262:13: note: Detected interleaving diff[i_208][0] and diff[i_208][1]
common/pixel.c:262:13: note: Detected interleaving diff[i_208][0] and diff[i_208][2]
common/pixel.c:262:13: note: Detected interleaving diff[i_208][0] and diff[i_208][3]
common/pixel.c:262:13: note: Detected interleaving diff[i_208][0] and diff[i_208][4]
common/pixel.c:262:13: note: Detected interleaving diff[i_208][0] and diff[i_208][5]
common/pixel.c:262:13: note: Detected interleaving diff[i_208][0] and diff[i_208][6]
common/pixel.c:262:13: note: Detected interleaving diff[i_208][0] and diff[i_208][7]
common/pixel.c:262:13: note: Detected interleaving of size 8
common/pixel.c:262:13: note: === vect_mark_stmts_to_be_vectorized ===
common/pixel.c:262:13: note: init: phi relevant? p1_206 = PHI <p1_100(6), p1_12(4)>
common/pixel.c:262:13: note: init: phi relevant? p2_207 = PHI <p2_102(6), p2_14(4)>
common/pixel.c:262:13: note: init: phi relevant? i_208 = PHI <i_98(6), 0(4)>
common/pixel.c:262:13: note: init: phi relevant? .MEM_214 = PHI <.MEM_187(6), .MEM_215(4)>
common/pixel.c:262:13: note: init: phi relevant? ivtmp_733 = PHI <ivtmp_732(6), 8(4)>
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG p2 => p2_207
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG p1 => p1_206
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG i => i_208
common/pixel.c:262:13: note: init: stmt relevant? _16 = *p1_206;
common/pixel.c:262:13: note: init: stmt relevant? _17 = (int) _16;
common/pixel.c:262:13: note: init: stmt relevant? _19 = *p2_207;
common/pixel.c:262:13: note: init: stmt relevant? _20 = (int) _19;
common/pixel.c:262:13: note: init: stmt relevant? a0_21 = _17 - _20;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG a0 => a0_21
common/pixel.c:262:13: note: init: stmt relevant? _22 = MEM[(uint8_t *)p1_206 + 1B];
common/pixel.c:262:13: note: init: stmt relevant? _23 = (int) _22;
common/pixel.c:262:13: note: init: stmt relevant? _24 = MEM[(uint8_t *)p2_207 + 1B];
common/pixel.c:262:13: note: init: stmt relevant? _25 = (int) _24;
common/pixel.c:262:13: note: init: stmt relevant? a1_26 = _23 - _25;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG a1 => a1_26
common/pixel.c:262:13: note: init: stmt relevant? _27 = MEM[(uint8_t *)p1_206 + 2B];
common/pixel.c:262:13: note: init: stmt relevant? _28 = (int) _27;
common/pixel.c:262:13: note: init: stmt relevant? _29 = MEM[(uint8_t *)p2_207 + 2B];
common/pixel.c:262:13: note: init: stmt relevant? _30 = (int) _29;
common/pixel.c:262:13: note: init: stmt relevant? a2_31 = _28 - _30;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG a2 => a2_31
common/pixel.c:262:13: note: init: stmt relevant? _32 = MEM[(uint8_t *)p1_206 + 3B];
common/pixel.c:262:13: note: init: stmt relevant? _33 = (int) _32;
common/pixel.c:262:13: note: init: stmt relevant? _34 = MEM[(uint8_t *)p2_207 + 3B];
common/pixel.c:262:13: note: init: stmt relevant? _35 = (int) _34;
common/pixel.c:262:13: note: init: stmt relevant? a3_36 = _33 - _35;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG a3 => a3_36
common/pixel.c:262:13: note: init: stmt relevant? _37 = MEM[(uint8_t *)p1_206 + 4B];
common/pixel.c:262:13: note: init: stmt relevant? _38 = (int) _37;
common/pixel.c:262:13: note: init: stmt relevant? _39 = MEM[(uint8_t *)p2_207 + 4B];
common/pixel.c:262:13: note: init: stmt relevant? _40 = (int) _39;
common/pixel.c:262:13: note: init: stmt relevant? a4_41 = _38 - _40;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG a4 => a4_41
common/pixel.c:262:13: note: init: stmt relevant? _42 = MEM[(uint8_t *)p1_206 + 5B];
common/pixel.c:262:13: note: init: stmt relevant? _43 = (int) _42;
common/pixel.c:262:13: note: init: stmt relevant? _44 = MEM[(uint8_t *)p2_207 + 5B];
common/pixel.c:262:13: note: init: stmt relevant? _45 = (int) _44;
common/pixel.c:262:13: note: init: stmt relevant? a5_46 = _43 - _45;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG a5 => a5_46
common/pixel.c:262:13: note: init: stmt relevant? _47 = MEM[(uint8_t *)p1_206 + 6B];
common/pixel.c:262:13: note: init: stmt relevant? _48 = (int) _47;
common/pixel.c:262:13: note: init: stmt relevant? _49 = MEM[(uint8_t *)p2_207 + 6B];
common/pixel.c:262:13: note: init: stmt relevant? _50 = (int) _49;
common/pixel.c:262:13: note: init: stmt relevant? a6_51 = _48 - _50;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG a6 => a6_51
common/pixel.c:262:13: note: init: stmt relevant? _52 = MEM[(uint8_t *)p1_206 + 7B];
common/pixel.c:262:13: note: init: stmt relevant? _53 = (int) _52;
common/pixel.c:262:13: note: init: stmt relevant? _54 = MEM[(uint8_t *)p2_207 + 7B];
common/pixel.c:262:13: note: init: stmt relevant? _55 = (int) _54;
common/pixel.c:262:13: note: init: stmt relevant? a7_56 = _53 - _55;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG a7 => a7_56
common/pixel.c:262:13: note: init: stmt relevant? t0_57 = a0_21 + a1_26;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG t0 => t0_57
common/pixel.c:262:13: note: init: stmt relevant? t1_58 = a0_21 - a1_26;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG t1 => t1_58
common/pixel.c:262:13: note: init: stmt relevant? t2_59 = a2_31 + a3_36;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG t2 => t2_59
common/pixel.c:262:13: note: init: stmt relevant? t3_60 = a2_31 - a3_36;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG t3 => t3_60
common/pixel.c:262:13: note: init: stmt relevant? b0_61 = t0_57 + t2_59;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG b0 => b0_61
common/pixel.c:262:13: note: init: stmt relevant? b2_62 = t0_57 - t2_59;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG b2 => b2_62
common/pixel.c:262:13: note: init: stmt relevant? b1_63 = t1_58 + t3_60;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG b1 => b1_63
common/pixel.c:262:13: note: init: stmt relevant? b3_64 = t1_58 - t3_60;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG b3 => b3_64
common/pixel.c:262:13: note: init: stmt relevant? t0_65 = a4_41 + a5_46;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG t0 => t0_65
common/pixel.c:262:13: note: init: stmt relevant? t1_66 = a4_41 - a5_46;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG t1 => t1_66
common/pixel.c:262:13: note: init: stmt relevant? t2_67 = a6_51 + a7_56;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG t2 => t2_67
common/pixel.c:262:13: note: init: stmt relevant? t3_68 = a6_51 - a7_56;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG t3 => t3_68
common/pixel.c:262:13: note: init: stmt relevant? b4_69 = t0_65 + t2_67;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG b4 => b4_69
common/pixel.c:262:13: note: init: stmt relevant? b6_70 = t0_65 - t2_67;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG b6 => b6_70
common/pixel.c:262:13: note: init: stmt relevant? b5_71 = t1_66 + t3_68;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG b5 => b5_71
common/pixel.c:262:13: note: init: stmt relevant? b7_72 = t1_66 - t3_68;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG b7 => b7_72
common/pixel.c:262:13: note: init: stmt relevant? _73 = (unsigned short) b0_61;
common/pixel.c:262:13: note: init: stmt relevant? _74 = (unsigned short) b4_69;
common/pixel.c:262:13: note: init: stmt relevant? _75 = _73 + _74;
common/pixel.c:262:13: note: init: stmt relevant? _76 = (short int) _75;
common/pixel.c:262:13: note: init: stmt relevant? diff[i_208][0] = _76;
common/pixel.c:262:13: note: vec_stmt_relevant_p: stmt has vdefs.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: init: stmt relevant? _78 = _73 - _74;
common/pixel.c:262:13: note: init: stmt relevant? _79 = (short int) _78;
common/pixel.c:262:13: note: init: stmt relevant? diff[i_208][4] = _79;
common/pixel.c:262:13: note: vec_stmt_relevant_p: stmt has vdefs.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: init: stmt relevant? _80 = (unsigned short) b1_63;
common/pixel.c:262:13: note: init: stmt relevant? _81 = (unsigned short) b5_71;
common/pixel.c:262:13: note: init: stmt relevant? _82 = _80 + _81;
common/pixel.c:262:13: note: init: stmt relevant? _83 = (short int) _82;
common/pixel.c:262:13: note: init: stmt relevant? diff[i_208][1] = _83;
common/pixel.c:262:13: note: vec_stmt_relevant_p: stmt has vdefs.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: init: stmt relevant? _84 = _80 - _81;
common/pixel.c:262:13: note: init: stmt relevant? _85 = (short int) _84;
common/pixel.c:262:13: note: init: stmt relevant? diff[i_208][5] = _85;
common/pixel.c:262:13: note: vec_stmt_relevant_p: stmt has vdefs.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: init: stmt relevant? _86 = (unsigned short) b2_62;
common/pixel.c:262:13: note: init: stmt relevant? _87 = (unsigned short) b6_70;
common/pixel.c:262:13: note: init: stmt relevant? _88 = _86 + _87;
common/pixel.c:262:13: note: init: stmt relevant? _89 = (short int) _88;
common/pixel.c:262:13: note: init: stmt relevant? diff[i_208][2] = _89;
common/pixel.c:262:13: note: vec_stmt_relevant_p: stmt has vdefs.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: init: stmt relevant? _90 = _86 - _87;
common/pixel.c:262:13: note: init: stmt relevant? _91 = (short int) _90;
common/pixel.c:262:13: note: init: stmt relevant? diff[i_208][6] = _91;
common/pixel.c:262:13: note: vec_stmt_relevant_p: stmt has vdefs.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: init: stmt relevant? _92 = (unsigned short) b3_64;
common/pixel.c:262:13: note: init: stmt relevant? _93 = (unsigned short) b7_72;
common/pixel.c:262:13: note: init: stmt relevant? _94 = _92 + _93;
common/pixel.c:262:13: note: init: stmt relevant? _95 = (short int) _94;
common/pixel.c:262:13: note: init: stmt relevant? diff[i_208][3] = _95;
common/pixel.c:262:13: note: vec_stmt_relevant_p: stmt has vdefs.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: init: stmt relevant? _96 = _92 - _93;
common/pixel.c:262:13: note: init: stmt relevant? _97 = (short int) _96;
common/pixel.c:262:13: note: init: stmt relevant? diff[i_208][7] = _97;
common/pixel.c:262:13: note: vec_stmt_relevant_p: stmt has vdefs.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: init: stmt relevant? i_98 = i_208 + 1;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG i => i_98
common/pixel.c:262:13: note: init: stmt relevant? p1_100 = p1_206 + pretmp_739;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG p1 => p1_100
common/pixel.c:262:13: note: init: stmt relevant? p2_102 = p2_207 + pretmp_740;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG p2 => p2_102
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG p2 => p2_102
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG p1 => p1_100
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG i => i_98
common/pixel.c:262:13: note: init: stmt relevant? ivtmp_732 = ivtmp_733 - 1;
common/pixel.c:262:13: note: init: stmt relevant? if (ivtmp_732 != 0)
common/pixel.c:262:13: note: worklist: examine stmt: diff[i_208][7] = _97;
common/pixel.c:262:13: note: vect_is_simple_use: operand _97
common/pixel.c:262:13: note: def_stmt: _97 = (short int) _96;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _97 = (short int) _96;
common/pixel.c:262:13: note: vect_is_simple_use: operand _96
common/pixel.c:262:13: note: def_stmt: _96 = _92 - _93;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _96 = _92 - _93;
common/pixel.c:262:13: note: vect_is_simple_use: operand _92
common/pixel.c:262:13: note: def_stmt: _92 = (unsigned short) b3_64;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: vect_is_simple_use: operand _93
common/pixel.c:262:13: note: def_stmt: _93 = (unsigned short) b7_72;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _93 = (unsigned short) b7_72;
common/pixel.c:262:13: note: vect_is_simple_use: operand b7_72
common/pixel.c:262:13: note: def_stmt: b7_72 = t1_66 - t3_68;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: b7_72 = t1_66 - t3_68;
common/pixel.c:262:13: note: vect_is_simple_use: operand t1_66
common/pixel.c:262:13: note: def_stmt: t1_66 = a4_41 - a5_46;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: vect_is_simple_use: operand t3_68
common/pixel.c:262:13: note: def_stmt: t3_68 = a6_51 - a7_56;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: t3_68 = a6_51 - a7_56;
common/pixel.c:262:13: note: vect_is_simple_use: operand a6_51
common/pixel.c:262:13: note: def_stmt: a6_51 = _48 - _50;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: vect_is_simple_use: operand a7_56
common/pixel.c:262:13: note: def_stmt: a7_56 = _53 - _55;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: a7_56 = _53 - _55;
common/pixel.c:262:13: note: vect_is_simple_use: operand _53
common/pixel.c:262:13: note: def_stmt: _53 = (int) _52;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: vect_is_simple_use: operand _55
common/pixel.c:262:13: note: def_stmt: _55 = (int) _54;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _55 = (int) _54;
common/pixel.c:262:13: note: vect_is_simple_use: operand _54
common/pixel.c:262:13: note: def_stmt: _54 = MEM[(uint8_t *)p2_207 + 7B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _54 = MEM[(uint8_t *)p2_207 + 7B];
common/pixel.c:262:13: note: worklist: examine stmt: _53 = (int) _52;
common/pixel.c:262:13: note: vect_is_simple_use: operand _52
common/pixel.c:262:13: note: def_stmt: _52 = MEM[(uint8_t *)p1_206 + 7B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _52 = MEM[(uint8_t *)p1_206 + 7B];
common/pixel.c:262:13: note: worklist: examine stmt: a6_51 = _48 - _50;
common/pixel.c:262:13: note: vect_is_simple_use: operand _48
common/pixel.c:262:13: note: def_stmt: _48 = (int) _47;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: vect_is_simple_use: operand _50
common/pixel.c:262:13: note: def_stmt: _50 = (int) _49;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _50 = (int) _49;
common/pixel.c:262:13: note: vect_is_simple_use: operand _49
common/pixel.c:262:13: note: def_stmt: _49 = MEM[(uint8_t *)p2_207 + 6B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _49 = MEM[(uint8_t *)p2_207 + 6B];
common/pixel.c:262:13: note: worklist: examine stmt: _48 = (int) _47;
common/pixel.c:262:13: note: vect_is_simple_use: operand _47
common/pixel.c:262:13: note: def_stmt: _47 = MEM[(uint8_t *)p1_206 + 6B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _47 = MEM[(uint8_t *)p1_206 + 6B];
common/pixel.c:262:13: note: worklist: examine stmt: t1_66 = a4_41 - a5_46;
common/pixel.c:262:13: note: vect_is_simple_use: operand a4_41
common/pixel.c:262:13: note: def_stmt: a4_41 = _38 - _40;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: vect_is_simple_use: operand a5_46
common/pixel.c:262:13: note: def_stmt: a5_46 = _43 - _45;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: a5_46 = _43 - _45;
common/pixel.c:262:13: note: vect_is_simple_use: operand _43
common/pixel.c:262:13: note: def_stmt: _43 = (int) _42;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: vect_is_simple_use: operand _45
common/pixel.c:262:13: note: def_stmt: _45 = (int) _44;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _45 = (int) _44;
common/pixel.c:262:13: note: vect_is_simple_use: operand _44
common/pixel.c:262:13: note: def_stmt: _44 = MEM[(uint8_t *)p2_207 + 5B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _44 = MEM[(uint8_t *)p2_207 + 5B];
common/pixel.c:262:13: note: worklist: examine stmt: _43 = (int) _42;
common/pixel.c:262:13: note: vect_is_simple_use: operand _42
common/pixel.c:262:13: note: def_stmt: _42 = MEM[(uint8_t *)p1_206 + 5B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _42 = MEM[(uint8_t *)p1_206 + 5B];
common/pixel.c:262:13: note: worklist: examine stmt: a4_41 = _38 - _40;
common/pixel.c:262:13: note: vect_is_simple_use: operand _38
common/pixel.c:262:13: note: def_stmt: _38 = (int) _37;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: vect_is_simple_use: operand _40
common/pixel.c:262:13: note: def_stmt: _40 = (int) _39;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _40 = (int) _39;
common/pixel.c:262:13: note: vect_is_simple_use: operand _39
common/pixel.c:262:13: note: def_stmt: _39 = MEM[(uint8_t *)p2_207 + 4B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _39 = MEM[(uint8_t *)p2_207 + 4B];
common/pixel.c:262:13: note: worklist: examine stmt: _38 = (int) _37;
common/pixel.c:262:13: note: vect_is_simple_use: operand _37
common/pixel.c:262:13: note: def_stmt: _37 = MEM[(uint8_t *)p1_206 + 4B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _37 = MEM[(uint8_t *)p1_206 + 4B];
common/pixel.c:262:13: note: worklist: examine stmt: _92 = (unsigned short) b3_64;
common/pixel.c:262:13: note: vect_is_simple_use: operand b3_64
common/pixel.c:262:13: note: def_stmt: b3_64 = t1_58 - t3_60;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: b3_64 = t1_58 - t3_60;
common/pixel.c:262:13: note: vect_is_simple_use: operand t1_58
common/pixel.c:262:13: note: def_stmt: t1_58 = a0_21 - a1_26;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: vect_is_simple_use: operand t3_60
common/pixel.c:262:13: note: def_stmt: t3_60 = a2_31 - a3_36;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: t3_60 = a2_31 - a3_36;
common/pixel.c:262:13: note: vect_is_simple_use: operand a2_31
common/pixel.c:262:13: note: def_stmt: a2_31 = _28 - _30;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: vect_is_simple_use: operand a3_36
common/pixel.c:262:13: note: def_stmt: a3_36 = _33 - _35;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: a3_36 = _33 - _35;
common/pixel.c:262:13: note: vect_is_simple_use: operand _33
common/pixel.c:262:13: note: def_stmt: _33 = (int) _32;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: vect_is_simple_use: operand _35
common/pixel.c:262:13: note: def_stmt: _35 = (int) _34;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _35 = (int) _34;
common/pixel.c:262:13: note: vect_is_simple_use: operand _34
common/pixel.c:262:13: note: def_stmt: _34 = MEM[(uint8_t *)p2_207 + 3B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _34 = MEM[(uint8_t *)p2_207 + 3B];
common/pixel.c:262:13: note: worklist: examine stmt: _33 = (int) _32;
common/pixel.c:262:13: note: vect_is_simple_use: operand _32
common/pixel.c:262:13: note: def_stmt: _32 = MEM[(uint8_t *)p1_206 + 3B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _32 = MEM[(uint8_t *)p1_206 + 3B];
common/pixel.c:262:13: note: worklist: examine stmt: a2_31 = _28 - _30;
common/pixel.c:262:13: note: vect_is_simple_use: operand _28
common/pixel.c:262:13: note: def_stmt: _28 = (int) _27;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: vect_is_simple_use: operand _30
common/pixel.c:262:13: note: def_stmt: _30 = (int) _29;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _30 = (int) _29;
common/pixel.c:262:13: note: vect_is_simple_use: operand _29
common/pixel.c:262:13: note: def_stmt: _29 = MEM[(uint8_t *)p2_207 + 2B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _29 = MEM[(uint8_t *)p2_207 + 2B];
common/pixel.c:262:13: note: worklist: examine stmt: _28 = (int) _27;
common/pixel.c:262:13: note: vect_is_simple_use: operand _27
common/pixel.c:262:13: note: def_stmt: _27 = MEM[(uint8_t *)p1_206 + 2B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _27 = MEM[(uint8_t *)p1_206 + 2B];
common/pixel.c:262:13: note: worklist: examine stmt: t1_58 = a0_21 - a1_26;
common/pixel.c:262:13: note: vect_is_simple_use: operand a0_21
common/pixel.c:262:13: note: def_stmt: a0_21 = _17 - _20;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: vect_is_simple_use: operand a1_26
common/pixel.c:262:13: note: def_stmt: a1_26 = _23 - _25;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: a1_26 = _23 - _25;
common/pixel.c:262:13: note: vect_is_simple_use: operand _23
common/pixel.c:262:13: note: def_stmt: _23 = (int) _22;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: vect_is_simple_use: operand _25
common/pixel.c:262:13: note: def_stmt: _25 = (int) _24;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _25 = (int) _24;
common/pixel.c:262:13: note: vect_is_simple_use: operand _24
common/pixel.c:262:13: note: def_stmt: _24 = MEM[(uint8_t *)p2_207 + 1B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _24 = MEM[(uint8_t *)p2_207 + 1B];
common/pixel.c:262:13: note: worklist: examine stmt: _23 = (int) _22;
common/pixel.c:262:13: note: vect_is_simple_use: operand _22
common/pixel.c:262:13: note: def_stmt: _22 = MEM[(uint8_t *)p1_206 + 1B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _22 = MEM[(uint8_t *)p1_206 + 1B];
common/pixel.c:262:13: note: worklist: examine stmt: a0_21 = _17 - _20;
common/pixel.c:262:13: note: vect_is_simple_use: operand _17
common/pixel.c:262:13: note: def_stmt: _17 = (int) _16;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: vect_is_simple_use: operand _20
common/pixel.c:262:13: note: def_stmt: _20 = (int) _19;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _20 = (int) _19;
common/pixel.c:262:13: note: vect_is_simple_use: operand _19
common/pixel.c:262:13: note: def_stmt: _19 = *p2_207;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _19 = *p2_207;
common/pixel.c:262:13: note: worklist: examine stmt: _17 = (int) _16;
common/pixel.c:262:13: note: vect_is_simple_use: operand _16
common/pixel.c:262:13: note: def_stmt: _16 = *p1_206;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _16 = *p1_206;
common/pixel.c:262:13: note: worklist: examine stmt: diff[i_208][3] = _95;
common/pixel.c:262:13: note: vect_is_simple_use: operand _95
common/pixel.c:262:13: note: def_stmt: _95 = (short int) _94;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _95 = (short int) _94;
common/pixel.c:262:13: note: vect_is_simple_use: operand _94
common/pixel.c:262:13: note: def_stmt: _94 = _92 + _93;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _94 = _92 + _93;
common/pixel.c:262:13: note: vect_is_simple_use: operand _92
common/pixel.c:262:13: note: def_stmt: _92 = (unsigned short) b3_64;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: already marked relevant/live.
common/pixel.c:262:13: note: vect_is_simple_use: operand _93
common/pixel.c:262:13: note: def_stmt: _93 = (unsigned short) b7_72;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: already marked relevant/live.
common/pixel.c:262:13: note: worklist: examine stmt: diff[i_208][6] = _91;
common/pixel.c:262:13: note: vect_is_simple_use: operand _91
common/pixel.c:262:13: note: def_stmt: _91 = (short int) _90;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _91 = (short int) _90;
common/pixel.c:262:13: note: vect_is_simple_use: operand _90
common/pixel.c:262:13: note: def_stmt: _90 = _86 - _87;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _90 = _86 - _87;
common/pixel.c:262:13: note: vect_is_simple_use: operand _86
common/pixel.c:262:13: note: def_stmt: _86 = (unsigned short) b2_62;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: vect_is_simple_use: operand _87
common/pixel.c:262:13: note: def_stmt: _87 = (unsigned short) b6_70;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _87 = (unsigned short) b6_70;
common/pixel.c:262:13: note: vect_is_simple_use: operand b6_70
common/pixel.c:262:13: note: def_stmt: b6_70 = t0_65 - t2_67;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: b6_70 = t0_65 - t2_67;
common/pixel.c:262:13: note: vect_is_simple_use: operand t0_65
common/pixel.c:262:13: note: def_stmt: t0_65 = a4_41 + a5_46;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: vect_is_simple_use: operand t2_67
common/pixel.c:262:13: note: def_stmt: t2_67 = a6_51 + a7_56;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: t2_67 = a6_51 + a7_56;
common/pixel.c:262:13: note: vect_is_simple_use: operand a6_51
common/pixel.c:262:13: note: def_stmt: a6_51 = _48 - _50;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: already marked relevant/live.
common/pixel.c:262:13: note: vect_is_simple_use: operand a7_56
common/pixel.c:262:13: note: def_stmt: a7_56 = _53 - _55;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: already marked relevant/live.
common/pixel.c:262:13: note: worklist: examine stmt: t0_65 = a4_41 + a5_46;
common/pixel.c:262:13: note: vect_is_simple_use: operand a4_41
common/pixel.c:262:13: note: def_stmt: a4_41 = _38 - _40;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: already marked relevant/live.
common/pixel.c:262:13: note: vect_is_simple_use: operand a5_46
common/pixel.c:262:13: note: def_stmt: a5_46 = _43 - _45;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: already marked relevant/live.
common/pixel.c:262:13: note: worklist: examine stmt: _86 = (unsigned short) b2_62;
common/pixel.c:262:13: note: vect_is_simple_use: operand b2_62
common/pixel.c:262:13: note: def_stmt: b2_62 = t0_57 - t2_59;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: b2_62 = t0_57 - t2_59;
common/pixel.c:262:13: note: vect_is_simple_use: operand t0_57
common/pixel.c:262:13: note: def_stmt: t0_57 = a0_21 + a1_26;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: vect_is_simple_use: operand t2_59
common/pixel.c:262:13: note: def_stmt: t2_59 = a2_31 + a3_36;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: t2_59 = a2_31 + a3_36;
common/pixel.c:262:13: note: vect_is_simple_use: operand a2_31
common/pixel.c:262:13: note: def_stmt: a2_31 = _28 - _30;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: already marked relevant/live.
common/pixel.c:262:13: note: vect_is_simple_use: operand a3_36
common/pixel.c:262:13: note: def_stmt: a3_36 = _33 - _35;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: already marked relevant/live.
common/pixel.c:262:13: note: worklist: examine stmt: t0_57 = a0_21 + a1_26;
common/pixel.c:262:13: note: vect_is_simple_use: operand a0_21
common/pixel.c:262:13: note: def_stmt: a0_21 = _17 - _20;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: already marked relevant/live.
common/pixel.c:262:13: note: vect_is_simple_use: operand a1_26
common/pixel.c:262:13: note: def_stmt: a1_26 = _23 - _25;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: already marked relevant/live.
common/pixel.c:262:13: note: worklist: examine stmt: diff[i_208][2] = _89;
common/pixel.c:262:13: note: vect_is_simple_use: operand _89
common/pixel.c:262:13: note: def_stmt: _89 = (short int) _88;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _89 = (short int) _88;
common/pixel.c:262:13: note: vect_is_simple_use: operand _88
common/pixel.c:262:13: note: def_stmt: _88 = _86 + _87;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _88 = _86 + _87;
common/pixel.c:262:13: note: vect_is_simple_use: operand _86
common/pixel.c:262:13: note: def_stmt: _86 = (unsigned short) b2_62;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: already marked relevant/live.
common/pixel.c:262:13: note: vect_is_simple_use: operand _87
common/pixel.c:262:13: note: def_stmt: _87 = (unsigned short) b6_70;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: already marked relevant/live.
common/pixel.c:262:13: note: worklist: examine stmt: diff[i_208][5] = _85;
common/pixel.c:262:13: note: vect_is_simple_use: operand _85
common/pixel.c:262:13: note: def_stmt: _85 = (short int) _84;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _85 = (short int) _84;
common/pixel.c:262:13: note: vect_is_simple_use: operand _84
common/pixel.c:262:13: note: def_stmt: _84 = _80 - _81;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _84 = _80 - _81;
common/pixel.c:262:13: note: vect_is_simple_use: operand _80
common/pixel.c:262:13: note: def_stmt: _80 = (unsigned short) b1_63;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: vect_is_simple_use: operand _81
common/pixel.c:262:13: note: def_stmt: _81 = (unsigned short) b5_71;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _81 = (unsigned short) b5_71;
common/pixel.c:262:13: note: vect_is_simple_use: operand b5_71
common/pixel.c:262:13: note: def_stmt: b5_71 = t1_66 + t3_68;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: b5_71 = t1_66 + t3_68;
common/pixel.c:262:13: note: vect_is_simple_use: operand t1_66
common/pixel.c:262:13: note: def_stmt: t1_66 = a4_41 - a5_46;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: already marked relevant/live.
common/pixel.c:262:13: note: vect_is_simple_use: operand t3_68
common/pixel.c:262:13: note: def_stmt: t3_68 = a6_51 - a7_56;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: already marked relevant/live.
common/pixel.c:262:13: note: worklist: examine stmt: _80 = (unsigned short) b1_63;
common/pixel.c:262:13: note: vect_is_simple_use: operand b1_63
common/pixel.c:262:13: note: def_stmt: b1_63 = t1_58 + t3_60;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: b1_63 = t1_58 + t3_60;
common/pixel.c:262:13: note: vect_is_simple_use: operand t1_58
common/pixel.c:262:13: note: def_stmt: t1_58 = a0_21 - a1_26;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: already marked relevant/live.
common/pixel.c:262:13: note: vect_is_simple_use: operand t3_60
common/pixel.c:262:13: note: def_stmt: t3_60 = a2_31 - a3_36;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: already marked relevant/live.
common/pixel.c:262:13: note: worklist: examine stmt: diff[i_208][1] = _83;
common/pixel.c:262:13: note: vect_is_simple_use: operand _83
common/pixel.c:262:13: note: def_stmt: _83 = (short int) _82;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _83 = (short int) _82;
common/pixel.c:262:13: note: vect_is_simple_use: operand _82
common/pixel.c:262:13: note: def_stmt: _82 = _80 + _81;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _82 = _80 + _81;
common/pixel.c:262:13: note: vect_is_simple_use: operand _80
common/pixel.c:262:13: note: def_stmt: _80 = (unsigned short) b1_63;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: already marked relevant/live.
common/pixel.c:262:13: note: vect_is_simple_use: operand _81
common/pixel.c:262:13: note: def_stmt: _81 = (unsigned short) b5_71;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: already marked relevant/live.
common/pixel.c:262:13: note: worklist: examine stmt: diff[i_208][4] = _79;
common/pixel.c:262:13: note: vect_is_simple_use: operand _79
common/pixel.c:262:13: note: def_stmt: _79 = (short int) _78;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _79 = (short int) _78;
common/pixel.c:262:13: note: vect_is_simple_use: operand _78
common/pixel.c:262:13: note: def_stmt: _78 = _73 - _74;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _78 = _73 - _74;
common/pixel.c:262:13: note: vect_is_simple_use: operand _73
common/pixel.c:262:13: note: def_stmt: _73 = (unsigned short) b0_61;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: vect_is_simple_use: operand _74
common/pixel.c:262:13: note: def_stmt: _74 = (unsigned short) b4_69;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _74 = (unsigned short) b4_69;
common/pixel.c:262:13: note: vect_is_simple_use: operand b4_69
common/pixel.c:262:13: note: def_stmt: b4_69 = t0_65 + t2_67;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: b4_69 = t0_65 + t2_67;
common/pixel.c:262:13: note: vect_is_simple_use: operand t0_65
common/pixel.c:262:13: note: def_stmt: t0_65 = a4_41 + a5_46;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: already marked relevant/live.
common/pixel.c:262:13: note: vect_is_simple_use: operand t2_67
common/pixel.c:262:13: note: def_stmt: t2_67 = a6_51 + a7_56;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: already marked relevant/live.
common/pixel.c:262:13: note: worklist: examine stmt: _73 = (unsigned short) b0_61;
common/pixel.c:262:13: note: vect_is_simple_use: operand b0_61
common/pixel.c:262:13: note: def_stmt: b0_61 = t0_57 + t2_59;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: b0_61 = t0_57 + t2_59;
common/pixel.c:262:13: note: vect_is_simple_use: operand t0_57
common/pixel.c:262:13: note: def_stmt: t0_57 = a0_21 + a1_26;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: already marked relevant/live.
common/pixel.c:262:13: note: vect_is_simple_use: operand t2_59
common/pixel.c:262:13: note: def_stmt: t2_59 = a2_31 + a3_36;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: already marked relevant/live.
common/pixel.c:262:13: note: worklist: examine stmt: diff[i_208][0] = _76;
common/pixel.c:262:13: note: vect_is_simple_use: operand _76
common/pixel.c:262:13: note: def_stmt: _76 = (short int) _75;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _76 = (short int) _75;
common/pixel.c:262:13: note: vect_is_simple_use: operand _75
common/pixel.c:262:13: note: def_stmt: _75 = _73 + _74;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _75 = _73 + _74;
common/pixel.c:262:13: note: vect_is_simple_use: operand _73
common/pixel.c:262:13: note: def_stmt: _73 = (unsigned short) b0_61;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: already marked relevant/live.
common/pixel.c:262:13: note: vect_is_simple_use: operand _74
common/pixel.c:262:13: note: def_stmt: _74 = (unsigned short) b4_69;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: already marked relevant/live.
common/pixel.c:262:13: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _16 = *p1_206;
  stmt_b: _19 = *p2_207;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _16 = *p1_206;
  stmt_b: _22 = MEM[(uint8_t *)p1_206 + 1B];
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, pretmp_739}_4)
  (chrec_b = {1B, +, pretmp_739}_4)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _16 = *p1_206;
  stmt_b: _24 = MEM[(uint8_t *)p2_207 + 1B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _16 = *p1_206;
  stmt_b: _27 = MEM[(uint8_t *)p1_206 + 2B];
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, pretmp_739}_4)
  (chrec_b = {2B, +, pretmp_739}_4)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _16 = *p1_206;
  stmt_b: _29 = MEM[(uint8_t *)p2_207 + 2B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _16 = *p1_206;
  stmt_b: _32 = MEM[(uint8_t *)p1_206 + 3B];
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, pretmp_739}_4)
  (chrec_b = {3B, +, pretmp_739}_4)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _16 = *p1_206;
  stmt_b: _34 = MEM[(uint8_t *)p2_207 + 3B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _16 = *p1_206;
  stmt_b: _37 = MEM[(uint8_t *)p1_206 + 4B];
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, pretmp_739}_4)
  (chrec_b = {4B, +, pretmp_739}_4)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _16 = *p1_206;
  stmt_b: _39 = MEM[(uint8_t *)p2_207 + 4B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _16 = *p1_206;
  stmt_b: _42 = MEM[(uint8_t *)p1_206 + 5B];
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, pretmp_739}_4)
  (chrec_b = {5B, +, pretmp_739}_4)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _16 = *p1_206;
  stmt_b: _44 = MEM[(uint8_t *)p2_207 + 5B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _16 = *p1_206;
  stmt_b: _47 = MEM[(uint8_t *)p1_206 + 6B];
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, pretmp_739}_4)
  (chrec_b = {6B, +, pretmp_739}_4)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _16 = *p1_206;
  stmt_b: _49 = MEM[(uint8_t *)p2_207 + 6B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _16 = *p1_206;
  stmt_b: _52 = MEM[(uint8_t *)p1_206 + 7B];
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, pretmp_739}_4)
  (chrec_b = {7B, +, pretmp_739}_4)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _16 = *p1_206;
  stmt_b: _54 = MEM[(uint8_t *)p2_207 + 7B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _16 = *p1_206;
  stmt_b: diff[i_208][0] = _76;
) -> no dependence
(compute_affine_dependence
  stmt_a: _16 = *p1_206;
  stmt_b: diff[i_208][4] = _79;
) -> no dependence
(compute_affine_dependence
  stmt_a: _16 = *p1_206;
  stmt_b: diff[i_208][1] = _83;
) -> no dependence
(compute_affine_dependence
  stmt_a: _16 = *p1_206;
  stmt_b: diff[i_208][5] = _85;
) -> no dependence
(compute_affine_dependence
  stmt_a: _16 = *p1_206;
  stmt_b: diff[i_208][2] = _89;
) -> no dependence
(compute_affine_dependence
  stmt_a: _16 = *p1_206;
  stmt_b: diff[i_208][6] = _91;
) -> no dependence
(compute_affine_dependence
  stmt_a: _16 = *p1_206;
  stmt_b: diff[i_208][3] = _95;
) -> no dependence
(compute_affine_dependence
  stmt_a: _16 = *p1_206;
  stmt_b: diff[i_208][7] = _97;
) -> no dependence
(compute_affine_dependence
  stmt_a: _19 = *p2_207;
  stmt_b: _22 = MEM[(uint8_t *)p1_206 + 1B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _19 = *p2_207;
  stmt_b: _24 = MEM[(uint8_t *)p2_207 + 1B];
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, pretmp_740}_4)
  (chrec_b = {1B, +, pretmp_740}_4)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _19 = *p2_207;
  stmt_b: _27 = MEM[(uint8_t *)p1_206 + 2B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _19 = *p2_207;
  stmt_b: _29 = MEM[(uint8_t *)p2_207 + 2B];
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, pretmp_740}_4)
  (chrec_b = {2B, +, pretmp_740}_4)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _19 = *p2_207;
  stmt_b: _32 = MEM[(uint8_t *)p1_206 + 3B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _19 = *p2_207;
  stmt_b: _34 = MEM[(uint8_t *)p2_207 + 3B];
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, pretmp_740}_4)
  (chrec_b = {3B, +, pretmp_740}_4)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _19 = *p2_207;
  stmt_b: _37 = MEM[(uint8_t *)p1_206 + 4B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _19 = *p2_207;
  stmt_b: _39 = MEM[(uint8_t *)p2_207 + 4B];
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, pretmp_740}_4)
  (chrec_b = {4B, +, pretmp_740}_4)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _19 = *p2_207;
  stmt_b: _42 = MEM[(uint8_t *)p1_206 + 5B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _19 = *p2_207;
  stmt_b: _44 = MEM[(uint8_t *)p2_207 + 5B];
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, pretmp_740}_4)
  (chrec_b = {5B, +, pretmp_740}_4)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _19 = *p2_207;
  stmt_b: _47 = MEM[(uint8_t *)p1_206 + 6B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _19 = *p2_207;
  stmt_b: _49 = MEM[(uint8_t *)p2_207 + 6B];
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, pretmp_740}_4)
  (chrec_b = {6B, +, pretmp_740}_4)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _19 = *p2_207;
  stmt_b: _52 = MEM[(uint8_t *)p1_206 + 7B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _19 = *p2_207;
  stmt_b: _54 = MEM[(uint8_t *)p2_207 + 7B];
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, pretmp_740}_4)
  (chrec_b = {7B, +, pretmp_740}_4)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _19 = *p2_207;
  stmt_b: diff[i_208][0] = _76;
) -> no dependence
(compute_affine_dependence
  stmt_a: _19 = *p2_207;
  stmt_b: diff[i_208][4] = _79;
) -> no dependence
(compute_affine_dependence
  stmt_a: _19 = *p2_207;
  stmt_b: diff[i_208][1] = _83;
) -> no dependence
(compute_affine_dependence
  stmt_a: _19 = *p2_207;
  stmt_b: diff[i_208][5] = _85;
) -> no dependence
(compute_affine_dependence
  stmt_a: _19 = *p2_207;
  stmt_b: diff[i_208][2] = _89;
) -> no dependence
(compute_affine_dependence
  stmt_a: _19 = *p2_207;
  stmt_b: diff[i_208][6] = _91;
) -> no dependence
(compute_affine_dependence
  stmt_a: _19 = *p2_207;
  stmt_b: diff[i_208][3] = _95;
) -> no dependence
(compute_affine_dependence
  stmt_a: _19 = *p2_207;
  stmt_b: diff[i_208][7] = _97;
) -> no dependence
(compute_affine_dependence
  stmt_a: _22 = MEM[(uint8_t *)p1_206 + 1B];
  stmt_b: _24 = MEM[(uint8_t *)p2_207 + 1B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _22 = MEM[(uint8_t *)p1_206 + 1B];
  stmt_b: _27 = MEM[(uint8_t *)p1_206 + 2B];
(analyze_overlapping_iterations 
  (chrec_a = {1B, +, pretmp_739}_4)
  (chrec_b = {2B, +, pretmp_739}_4)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _22 = MEM[(uint8_t *)p1_206 + 1B];
  stmt_b: _29 = MEM[(uint8_t *)p2_207 + 2B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _22 = MEM[(uint8_t *)p1_206 + 1B];
  stmt_b: _32 = MEM[(uint8_t *)p1_206 + 3B];
(analyze_overlapping_iterations 
  (chrec_a = {1B, +, pretmp_739}_4)
  (chrec_b = {3B, +, pretmp_739}_4)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _22 = MEM[(uint8_t *)p1_206 + 1B];
  stmt_b: _34 = MEM[(uint8_t *)p2_207 + 3B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _22 = MEM[(uint8_t *)p1_206 + 1B];
  stmt_b: _37 = MEM[(uint8_t *)p1_206 + 4B];
(analyze_overlapping_iterations 
  (chrec_a = {1B, +, pretmp_739}_4)
  (chrec_b = {4B, +, pretmp_739}_4)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _22 = MEM[(uint8_t *)p1_206 + 1B];
  stmt_b: _39 = MEM[(uint8_t *)p2_207 + 4B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _22 = MEM[(uint8_t *)p1_206 + 1B];
  stmt_b: _42 = MEM[(uint8_t *)p1_206 + 5B];
(analyze_overlapping_iterations 
  (chrec_a = {1B, +, pretmp_739}_4)
  (chrec_b = {5B, +, pretmp_739}_4)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _22 = MEM[(uint8_t *)p1_206 + 1B];
  stmt_b: _44 = MEM[(uint8_t *)p2_207 + 5B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _22 = MEM[(uint8_t *)p1_206 + 1B];
  stmt_b: _47 = MEM[(uint8_t *)p1_206 + 6B];
(analyze_overlapping_iterations 
  (chrec_a = {1B, +, pretmp_739}_4)
  (chrec_b = {6B, +, pretmp_739}_4)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _22 = MEM[(uint8_t *)p1_206 + 1B];
  stmt_b: _49 = MEM[(uint8_t *)p2_207 + 6B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _22 = MEM[(uint8_t *)p1_206 + 1B];
  stmt_b: _52 = MEM[(uint8_t *)p1_206 + 7B];
(analyze_overlapping_iterations 
  (chrec_a = {1B, +, pretmp_739}_4)
  (chrec_b = {7B, +, pretmp_739}_4)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _22 = MEM[(uint8_t *)p1_206 + 1B];
  stmt_b: _54 = MEM[(uint8_t *)p2_207 + 7B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _22 = MEM[(uint8_t *)p1_206 + 1B];
  stmt_b: diff[i_208][0] = _76;
) -> no dependence
(compute_affine_dependence
  stmt_a: _22 = MEM[(uint8_t *)p1_206 + 1B];
  stmt_b: diff[i_208][4] = _79;
) -> no dependence
(compute_affine_dependence
  stmt_a: _22 = MEM[(uint8_t *)p1_206 + 1B];
  stmt_b: diff[i_208][1] = _83;
) -> no dependence
(compute_affine_dependence
  stmt_a: _22 = MEM[(uint8_t *)p1_206 + 1B];
  stmt_b: diff[i_208][5] = _85;
) -> no dependence
(compute_affine_dependence
  stmt_a: _22 = MEM[(uint8_t *)p1_206 + 1B];
  stmt_b: diff[i_208][2] = _89;
) -> no dependence
(compute_affine_dependence
  stmt_a: _22 = MEM[(uint8_t *)p1_206 + 1B];
  stmt_b: diff[i_208][6] = _91;
) -> no dependence
(compute_affine_dependence
  stmt_a: _22 = MEM[(uint8_t *)p1_206 + 1B];
  stmt_b: diff[i_208][3] = _95;
) -> no dependence
(compute_affine_dependence
  stmt_a: _22 = MEM[(uint8_t *)p1_206 + 1B];
  stmt_b: diff[i_208][7] = _97;
) -> no dependence
(compute_affine_dependence
  stmt_a: _24 = MEM[(uint8_t *)p2_207 + 1B];
  stmt_b: _27 = MEM[(uint8_t *)p1_206 + 2B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _24 = MEM[(uint8_t *)p2_207 + 1B];
  stmt_b: _29 = MEM[(uint8_t *)p2_207 + 2B];
(analyze_overlapping_iterations 
  (chrec_a = {1B, +, pretmp_740}_4)
  (chrec_b = {2B, +, pretmp_740}_4)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _24 = MEM[(uint8_t *)p2_207 + 1B];
  stmt_b: _32 = MEM[(uint8_t *)p1_206 + 3B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _24 = MEM[(uint8_t *)p2_207 + 1B];
  stmt_b: _34 = MEM[(uint8_t *)p2_207 + 3B];
(analyze_overlapping_iterations 
  (chrec_a = {1B, +, pretmp_740}_4)
  (chrec_b = {3B, +, pretmp_740}_4)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _24 = MEM[(uint8_t *)p2_207 + 1B];
  stmt_b: _37 = MEM[(uint8_t *)p1_206 + 4B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _24 = MEM[(uint8_t *)p2_207 + 1B];
  stmt_b: _39 = MEM[(uint8_t *)p2_207 + 4B];
(analyze_overlapping_iterations 
  (chrec_a = {1B, +, pretmp_740}_4)
  (chrec_b = {4B, +, pretmp_740}_4)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _24 = MEM[(uint8_t *)p2_207 + 1B];
  stmt_b: _42 = MEM[(uint8_t *)p1_206 + 5B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _24 = MEM[(uint8_t *)p2_207 + 1B];
  stmt_b: _44 = MEM[(uint8_t *)p2_207 + 5B];
(analyze_overlapping_iterations 
  (chrec_a = {1B, +, pretmp_740}_4)
  (chrec_b = {5B, +, pretmp_740}_4)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _24 = MEM[(uint8_t *)p2_207 + 1B];
  stmt_b: _47 = MEM[(uint8_t *)p1_206 + 6B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _24 = MEM[(uint8_t *)p2_207 + 1B];
  stmt_b: _49 = MEM[(uint8_t *)p2_207 + 6B];
(analyze_overlapping_iterations 
  (chrec_a = {1B, +, pretmp_740}_4)
  (chrec_b = {6B, +, pretmp_740}_4)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _24 = MEM[(uint8_t *)p2_207 + 1B];
  stmt_b: _52 = MEM[(uint8_t *)p1_206 + 7B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _24 = MEM[(uint8_t *)p2_207 + 1B];
  stmt_b: _54 = MEM[(uint8_t *)p2_207 + 7B];
(analyze_overlapping_iterations 
  (chrec_a = {1B, +, pretmp_740}_4)
  (chrec_b = {7B, +, pretmp_740}_4)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _24 = MEM[(uint8_t *)p2_207 + 1B];
  stmt_b: diff[i_208][0] = _76;
) -> no dependence
(compute_affine_dependence
  stmt_a: _24 = MEM[(uint8_t *)p2_207 + 1B];
  stmt_b: diff[i_208][4] = _79;
) -> no dependence
(compute_affine_dependence
  stmt_a: _24 = MEM[(uint8_t *)p2_207 + 1B];
  stmt_b: diff[i_208][1] = _83;
) -> no dependence
(compute_affine_dependence
  stmt_a: _24 = MEM[(uint8_t *)p2_207 + 1B];
  stmt_b: diff[i_208][5] = _85;
) -> no dependence
(compute_affine_dependence
  stmt_a: _24 = MEM[(uint8_t *)p2_207 + 1B];
  stmt_b: diff[i_208][2] = _89;
) -> no dependence
(compute_affine_dependence
  stmt_a: _24 = MEM[(uint8_t *)p2_207 + 1B];
  stmt_b: diff[i_208][6] = _91;
) -> no dependence
(compute_affine_dependence
  stmt_a: _24 = MEM[(uint8_t *)p2_207 + 1B];
  stmt_b: diff[i_208][3] = _95;
) -> no dependence
(compute_affine_dependence
  stmt_a: _24 = MEM[(uint8_t *)p2_207 + 1B];
  stmt_b: diff[i_208][7] = _97;
) -> no dependence
(compute_affine_dependence
  stmt_a: _27 = MEM[(uint8_t *)p1_206 + 2B];
  stmt_b: _29 = MEM[(uint8_t *)p2_207 + 2B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _27 = MEM[(uint8_t *)p1_206 + 2B];
  stmt_b: _32 = MEM[(uint8_t *)p1_206 + 3B];
(analyze_overlapping_iterations 
  (chrec_a = {2B, +, pretmp_739}_4)
  (chrec_b = {3B, +, pretmp_739}_4)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _27 = MEM[(uint8_t *)p1_206 + 2B];
  stmt_b: _34 = MEM[(uint8_t *)p2_207 + 3B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _27 = MEM[(uint8_t *)p1_206 + 2B];
  stmt_b: _37 = MEM[(uint8_t *)p1_206 + 4B];
(analyze_overlapping_iterations 
  (chrec_a = {2B, +, pretmp_739}_4)
  (chrec_b = {4B, +, pretmp_739}_4)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _27 = MEM[(uint8_t *)p1_206 + 2B];
  stmt_b: _39 = MEM[(uint8_t *)p2_207 + 4B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _27 = MEM[(uint8_t *)p1_206 + 2B];
  stmt_b: _42 = MEM[(uint8_t *)p1_206 + 5B];
(analyze_overlapping_iterations 
  (chrec_a = {2B, +, pretmp_739}_4)
  (chrec_b = {5B, +, pretmp_739}_4)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _27 = MEM[(uint8_t *)p1_206 + 2B];
  stmt_b: _44 = MEM[(uint8_t *)p2_207 + 5B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _27 = MEM[(uint8_t *)p1_206 + 2B];
  stmt_b: _47 = MEM[(uint8_t *)p1_206 + 6B];
(analyze_overlapping_iterations 
  (chrec_a = {2B, +, pretmp_739}_4)
  (chrec_b = {6B, +, pretmp_739}_4)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _27 = MEM[(uint8_t *)p1_206 + 2B];
  stmt_b: _49 = MEM[(uint8_t *)p2_207 + 6B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _27 = MEM[(uint8_t *)p1_206 + 2B];
  stmt_b: _52 = MEM[(uint8_t *)p1_206 + 7B];
(analyze_overlapping_iterations 
  (chrec_a = {2B, +, pretmp_739}_4)
  (chrec_b = {7B, +, pretmp_739}_4)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _27 = MEM[(uint8_t *)p1_206 + 2B];
  stmt_b: _54 = MEM[(uint8_t *)p2_207 + 7B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _27 = MEM[(uint8_t *)p1_206 + 2B];
  stmt_b: diff[i_208][0] = _76;
) -> no dependence
(compute_affine_dependence
  stmt_a: _27 = MEM[(uint8_t *)p1_206 + 2B];
  stmt_b: diff[i_208][4] = _79;
) -> no dependence
(compute_affine_dependence
  stmt_a: _27 = MEM[(uint8_t *)p1_206 + 2B];
  stmt_b: diff[i_208][1] = _83;
) -> no dependence
(compute_affine_dependence
  stmt_a: _27 = MEM[(uint8_t *)p1_206 + 2B];
  stmt_b: diff[i_208][5] = _85;
) -> no dependence
(compute_affine_dependence
  stmt_a: _27 = MEM[(uint8_t *)p1_206 + 2B];
  stmt_b: diff[i_208][2] = _89;
) -> no dependence
(compute_affine_dependence
  stmt_a: _27 = MEM[(uint8_t *)p1_206 + 2B];
  stmt_b: diff[i_208][6] = _91;
) -> no dependence
(compute_affine_dependence
  stmt_a: _27 = MEM[(uint8_t *)p1_206 + 2B];
  stmt_b: diff[i_208][3] = _95;
) -> no dependence
(compute_affine_dependence
  stmt_a: _27 = MEM[(uint8_t *)p1_206 + 2B];
  stmt_b: diff[i_208][7] = _97;
) -> no dependence
(compute_affine_dependence
  stmt_a: _29 = MEM[(uint8_t *)p2_207 + 2B];
  stmt_b: _32 = MEM[(uint8_t *)p1_206 + 3B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _29 = MEM[(uint8_t *)p2_207 + 2B];
  stmt_b: _34 = MEM[(uint8_t *)p2_207 + 3B];
(analyze_overlapping_iterations 
  (chrec_a = {2B, +, pretmp_740}_4)
  (chrec_b = {3B, +, pretmp_740}_4)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _29 = MEM[(uint8_t *)p2_207 + 2B];
  stmt_b: _37 = MEM[(uint8_t *)p1_206 + 4B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _29 = MEM[(uint8_t *)p2_207 + 2B];
  stmt_b: _39 = MEM[(uint8_t *)p2_207 + 4B];
(analyze_overlapping_iterations 
  (chrec_a = {2B, +, pretmp_740}_4)
  (chrec_b = {4B, +, pretmp_740}_4)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _29 = MEM[(uint8_t *)p2_207 + 2B];
  stmt_b: _42 = MEM[(uint8_t *)p1_206 + 5B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _29 = MEM[(uint8_t *)p2_207 + 2B];
  stmt_b: _44 = MEM[(uint8_t *)p2_207 + 5B];
(analyze_overlapping_iterations 
  (chrec_a = {2B, +, pretmp_740}_4)
  (chrec_b = {5B, +, pretmp_740}_4)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _29 = MEM[(uint8_t *)p2_207 + 2B];
  stmt_b: _47 = MEM[(uint8_t *)p1_206 + 6B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _29 = MEM[(uint8_t *)p2_207 + 2B];
  stmt_b: _49 = MEM[(uint8_t *)p2_207 + 6B];
(analyze_overlapping_iterations 
  (chrec_a = {2B, +, pretmp_740}_4)
  (chrec_b = {6B, +, pretmp_740}_4)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _29 = MEM[(uint8_t *)p2_207 + 2B];
  stmt_b: _52 = MEM[(uint8_t *)p1_206 + 7B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _29 = MEM[(uint8_t *)p2_207 + 2B];
  stmt_b: _54 = MEM[(uint8_t *)p2_207 + 7B];
(analyze_overlapping_iterations 
  (chrec_a = {2B, +, pretmp_740}_4)
  (chrec_b = {7B, +, pretmp_740}_4)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _29 = MEM[(uint8_t *)p2_207 + 2B];
  stmt_b: diff[i_208][0] = _76;
) -> no dependence
(compute_affine_dependence
  stmt_a: _29 = MEM[(uint8_t *)p2_207 + 2B];
  stmt_b: diff[i_208][4] = _79;
) -> no dependence
(compute_affine_dependence
  stmt_a: _29 = MEM[(uint8_t *)p2_207 + 2B];
  stmt_b: diff[i_208][1] = _83;
) -> no dependence
(compute_affine_dependence
  stmt_a: _29 = MEM[(uint8_t *)p2_207 + 2B];
  stmt_b: diff[i_208][5] = _85;
) -> no dependence
(compute_affine_dependence
  stmt_a: _29 = MEM[(uint8_t *)p2_207 + 2B];
  stmt_b: diff[i_208][2] = _89;
) -> no dependence
(compute_affine_dependence
  stmt_a: _29 = MEM[(uint8_t *)p2_207 + 2B];
  stmt_b: diff[i_208][6] = _91;
) -> no dependence
(compute_affine_dependence
  stmt_a: _29 = MEM[(uint8_t *)p2_207 + 2B];
  stmt_b: diff[i_208][3] = _95;
) -> no dependence
(compute_affine_dependence
  stmt_a: _29 = MEM[(uint8_t *)p2_207 + 2B];
  stmt_b: diff[i_208][7] = _97;
) -> no dependence
(compute_affine_dependence
  stmt_a: _32 = MEM[(uint8_t *)p1_206 + 3B];
  stmt_b: _34 = MEM[(uint8_t *)p2_207 + 3B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _32 = MEM[(uint8_t *)p1_206 + 3B];
  stmt_b: _37 = MEM[(uint8_t *)p1_206 + 4B];
(analyze_overlapping_iterations 
  (chrec_a = {3B, +, pretmp_739}_4)
  (chrec_b = {4B, +, pretmp_739}_4)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _32 = MEM[(uint8_t *)p1_206 + 3B];
  stmt_b: _39 = MEM[(uint8_t *)p2_207 + 4B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _32 = MEM[(uint8_t *)p1_206 + 3B];
  stmt_b: _42 = MEM[(uint8_t *)p1_206 + 5B];
(analyze_overlapping_iterations 
  (chrec_a = {3B, +, pretmp_739}_4)
  (chrec_b = {5B, +, pretmp_739}_4)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _32 = MEM[(uint8_t *)p1_206 + 3B];
  stmt_b: _44 = MEM[(uint8_t *)p2_207 + 5B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _32 = MEM[(uint8_t *)p1_206 + 3B];
  stmt_b: _47 = MEM[(uint8_t *)p1_206 + 6B];
(analyze_overlapping_iterations 
  (chrec_a = {3B, +, pretmp_739}_4)
  (chrec_b = {6B, +, pretmp_739}_4)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _32 = MEM[(uint8_t *)p1_206 + 3B];
  stmt_b: _49 = MEM[(uint8_t *)p2_207 + 6B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _32 = MEM[(uint8_t *)p1_206 + 3B];
  stmt_b: _52 = MEM[(uint8_t *)p1_206 + 7B];
(analyze_overlapping_iterations 
  (chrec_a = {3B, +, pretmp_739}_4)
  (chrec_b = {7B, +, pretmp_739}_4)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _32 = MEM[(uint8_t *)p1_206 + 3B];
  stmt_b: _54 = MEM[(uint8_t *)p2_207 + 7B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _32 = MEM[(uint8_t *)p1_206 + 3B];
  stmt_b: diff[i_208][0] = _76;
) -> no dependence
(compute_affine_dependence
  stmt_a: _32 = MEM[(uint8_t *)p1_206 + 3B];
  stmt_b: diff[i_208][4] = _79;
) -> no dependence
(compute_affine_dependence
  stmt_a: _32 = MEM[(uint8_t *)p1_206 + 3B];
  stmt_b: diff[i_208][1] = _83;
) -> no dependence
(compute_affine_dependence
  stmt_a: _32 = MEM[(uint8_t *)p1_206 + 3B];
  stmt_b: diff[i_208][5] = _85;
) -> no dependence
(compute_affine_dependence
  stmt_a: _32 = MEM[(uint8_t *)p1_206 + 3B];
  stmt_b: diff[i_208][2] = _89;
) -> no dependence
(compute_affine_dependence
  stmt_a: _32 = MEM[(uint8_t *)p1_206 + 3B];
  stmt_b: diff[i_208][6] = _91;
) -> no dependence
(compute_affine_dependence
  stmt_a: _32 = MEM[(uint8_t *)p1_206 + 3B];
  stmt_b: diff[i_208][3] = _95;
) -> no dependence
(compute_affine_dependence
  stmt_a: _32 = MEM[(uint8_t *)p1_206 + 3B];
  stmt_b: diff[i_208][7] = _97;
) -> no dependence
(compute_affine_dependence
  stmt_a: _34 = MEM[(uint8_t *)p2_207 + 3B];
  stmt_b: _37 = MEM[(uint8_t *)p1_206 + 4B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _34 = MEM[(uint8_t *)p2_207 + 3B];
  stmt_b: _39 = MEM[(uint8_t *)p2_207 + 4B];
(analyze_overlapping_iterations 
  (chrec_a = {3B, +, pretmp_740}_4)
  (chrec_b = {4B, +, pretmp_740}_4)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _34 = MEM[(uint8_t *)p2_207 + 3B];
  stmt_b: _42 = MEM[(uint8_t *)p1_206 + 5B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _34 = MEM[(uint8_t *)p2_207 + 3B];
  stmt_b: _44 = MEM[(uint8_t *)p2_207 + 5B];
(analyze_overlapping_iterations 
  (chrec_a = {3B, +, pretmp_740}_4)
  (chrec_b = {5B, +, pretmp_740}_4)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _34 = MEM[(uint8_t *)p2_207 + 3B];
  stmt_b: _47 = MEM[(uint8_t *)p1_206 + 6B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _34 = MEM[(uint8_t *)p2_207 + 3B];
  stmt_b: _49 = MEM[(uint8_t *)p2_207 + 6B];
(analyze_overlapping_iterations 
  (chrec_a = {3B, +, pretmp_740}_4)
  (chrec_b = {6B, +, pretmp_740}_4)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _34 = MEM[(uint8_t *)p2_207 + 3B];
  stmt_b: _52 = MEM[(uint8_t *)p1_206 + 7B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _34 = MEM[(uint8_t *)p2_207 + 3B];
  stmt_b: _54 = MEM[(uint8_t *)p2_207 + 7B];
(analyze_overlapping_iterations 
  (chrec_a = {3B, +, pretmp_740}_4)
  (chrec_b = {7B, +, pretmp_740}_4)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _34 = MEM[(uint8_t *)p2_207 + 3B];
  stmt_b: diff[i_208][0] = _76;
) -> no dependence
(compute_affine_dependence
  stmt_a: _34 = MEM[(uint8_t *)p2_207 + 3B];
  stmt_b: diff[i_208][4] = _79;
) -> no dependence
(compute_affine_dependence
  stmt_a: _34 = MEM[(uint8_t *)p2_207 + 3B];
  stmt_b: diff[i_208][1] = _83;
) -> no dependence
(compute_affine_dependence
  stmt_a: _34 = MEM[(uint8_t *)p2_207 + 3B];
  stmt_b: diff[i_208][5] = _85;
) -> no dependence
(compute_affine_dependence
  stmt_a: _34 = MEM[(uint8_t *)p2_207 + 3B];
  stmt_b: diff[i_208][2] = _89;
) -> no dependence
(compute_affine_dependence
  stmt_a: _34 = MEM[(uint8_t *)p2_207 + 3B];
  stmt_b: diff[i_208][6] = _91;
) -> no dependence
(compute_affine_dependence
  stmt_a: _34 = MEM[(uint8_t *)p2_207 + 3B];
  stmt_b: diff[i_208][3] = _95;
) -> no dependence
(compute_affine_dependence
  stmt_a: _34 = MEM[(uint8_t *)p2_207 + 3B];
  stmt_b: diff[i_208][7] = _97;
) -> no dependence
(compute_affine_dependence
  stmt_a: _37 = MEM[(uint8_t *)p1_206 + 4B];
  stmt_b: _39 = MEM[(uint8_t *)p2_207 + 4B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _37 = MEM[(uint8_t *)p1_206 + 4B];
  stmt_b: _42 = MEM[(uint8_t *)p1_206 + 5B];
(analyze_overlapping_iterations 
  (chrec_a = {4B, +, pretmp_739}_4)
  (chrec_b = {5B, +, pretmp_739}_4)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _37 = MEM[(uint8_t *)p1_206 + 4B];
  stmt_b: _44 = MEM[(uint8_t *)p2_207 + 5B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _37 = MEM[(uint8_t *)p1_206 + 4B];
  stmt_b: _47 = MEM[(uint8_t *)p1_206 + 6B];
(analyze_overlapping_iterations 
  (chrec_a = {4B, +, pretmp_739}_4)
  (chrec_b = {6B, +, pretmp_739}_4)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _37 = MEM[(uint8_t *)p1_206 + 4B];
  stmt_b: _49 = MEM[(uint8_t *)p2_207 + 6B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _37 = MEM[(uint8_t *)p1_206 + 4B];
  stmt_b: _52 = MEM[(uint8_t *)p1_206 + 7B];
(analyze_overlapping_iterations 
  (chrec_a = {4B, +, pretmp_739}_4)
  (chrec_b = {7B, +, pretmp_739}_4)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _37 = MEM[(uint8_t *)p1_206 + 4B];
  stmt_b: _54 = MEM[(uint8_t *)p2_207 + 7B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _37 = MEM[(uint8_t *)p1_206 + 4B];
  stmt_b: diff[i_208][0] = _76;
) -> no dependence
(compute_affine_dependence
  stmt_a: _37 = MEM[(uint8_t *)p1_206 + 4B];
  stmt_b: diff[i_208][4] = _79;
) -> no dependence
(compute_affine_dependence
  stmt_a: _37 = MEM[(uint8_t *)p1_206 + 4B];
  stmt_b: diff[i_208][1] = _83;
) -> no dependence
(compute_affine_dependence
  stmt_a: _37 = MEM[(uint8_t *)p1_206 + 4B];
  stmt_b: diff[i_208][5] = _85;
) -> no dependence
(compute_affine_dependence
  stmt_a: _37 = MEM[(uint8_t *)p1_206 + 4B];
  stmt_b: diff[i_208][2] = _89;
) -> no dependence
(compute_affine_dependence
  stmt_a: _37 = MEM[(uint8_t *)p1_206 + 4B];
  stmt_b: diff[i_208][6] = _91;
) -> no dependence
(compute_affine_dependence
  stmt_a: _37 = MEM[(uint8_t *)p1_206 + 4B];
  stmt_b: diff[i_208][3] = _95;
) -> no dependence
(compute_affine_dependence
  stmt_a: _37 = MEM[(uint8_t *)p1_206 + 4B];
  stmt_b: diff[i_208][7] = _97;
) -> no dependence
(compute_affine_dependence
  stmt_a: _39 = MEM[(uint8_t *)p2_207 + 4B];
  stmt_b: _42 = MEM[(uint8_t *)p1_206 + 5B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _39 = MEM[(uint8_t *)p2_207 + 4B];
  stmt_b: _44 = MEM[(uint8_t *)p2_207 + 5B];
(analyze_overlapping_iterations 
  (chrec_a = {4B, +, pretmp_740}_4)
  (chrec_b = {5B, +, pretmp_740}_4)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _39 = MEM[(uint8_t *)p2_207 + 4B];
  stmt_b: _47 = MEM[(uint8_t *)p1_206 + 6B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _39 = MEM[(uint8_t *)p2_207 + 4B];
  stmt_b: _49 = MEM[(uint8_t *)p2_207 + 6B];
(analyze_overlapping_iterations 
  (chrec_a = {4B, +, pretmp_740}_4)
  (chrec_b = {6B, +, pretmp_740}_4)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _39 = MEM[(uint8_t *)p2_207 + 4B];
  stmt_b: _52 = MEM[(uint8_t *)p1_206 + 7B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _39 = MEM[(uint8_t *)p2_207 + 4B];
  stmt_b: _54 = MEM[(uint8_t *)p2_207 + 7B];
(analyze_overlapping_iterations 
  (chrec_a = {4B, +, pretmp_740}_4)
  (chrec_b = {7B, +, pretmp_740}_4)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _39 = MEM[(uint8_t *)p2_207 + 4B];
  stmt_b: diff[i_208][0] = _76;
) -> no dependence
(compute_affine_dependence
  stmt_a: _39 = MEM[(uint8_t *)p2_207 + 4B];
  stmt_b: diff[i_208][4] = _79;
) -> no dependence
(compute_affine_dependence
  stmt_a: _39 = MEM[(uint8_t *)p2_207 + 4B];
  stmt_b: diff[i_208][1] = _83;
) -> no dependence
(compute_affine_dependence
  stmt_a: _39 = MEM[(uint8_t *)p2_207 + 4B];
  stmt_b: diff[i_208][5] = _85;
) -> no dependence
(compute_affine_dependence
  stmt_a: _39 = MEM[(uint8_t *)p2_207 + 4B];
  stmt_b: diff[i_208][2] = _89;
) -> no dependence
(compute_affine_dependence
  stmt_a: _39 = MEM[(uint8_t *)p2_207 + 4B];
  stmt_b: diff[i_208][6] = _91;
) -> no dependence
(compute_affine_dependence
  stmt_a: _39 = MEM[(uint8_t *)p2_207 + 4B];
  stmt_b: diff[i_208][3] = _95;
) -> no dependence
(compute_affine_dependence
  stmt_a: _39 = MEM[(uint8_t *)p2_207 + 4B];
  stmt_b: diff[i_208][7] = _97;
) -> no dependence
(compute_affine_dependence
  stmt_a: _42 = MEM[(uint8_t *)p1_206 + 5B];
  stmt_b: _44 = MEM[(uint8_t *)p2_207 + 5B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _42 = MEM[(uint8_t *)p1_206 + 5B];
  stmt_b: _47 = MEM[(uint8_t *)p1_206 + 6B];
(analyze_overlapping_iterations 
  (chrec_a = {5B, +, pretmp_739}_4)
  (chrec_b = {6B, +, pretmp_739}_4)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _42 = MEM[(uint8_t *)p1_206 + 5B];
  stmt_b: _49 = MEM[(uint8_t *)p2_207 + 6B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _42 = MEM[(uint8_t *)p1_206 + 5B];
  stmt_b: _52 = MEM[(uint8_t *)p1_206 + 7B];
(analyze_overlapping_iterations 
  (chrec_a = {5B, +, pretmp_739}_4)
  (chrec_b = {7B, +, pretmp_739}_4)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _42 = MEM[(uint8_t *)p1_206 + 5B];
  stmt_b: _54 = MEM[(uint8_t *)p2_207 + 7B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _42 = MEM[(uint8_t *)p1_206 + 5B];
  stmt_b: diff[i_208][0] = _76;
) -> no dependence
(compute_affine_dependence
  stmt_a: _42 = MEM[(uint8_t *)p1_206 + 5B];
  stmt_b: diff[i_208][4] = _79;
) -> no dependence
(compute_affine_dependence
  stmt_a: _42 = MEM[(uint8_t *)p1_206 + 5B];
  stmt_b: diff[i_208][1] = _83;
) -> no dependence
(compute_affine_dependence
  stmt_a: _42 = MEM[(uint8_t *)p1_206 + 5B];
  stmt_b: diff[i_208][5] = _85;
) -> no dependence
(compute_affine_dependence
  stmt_a: _42 = MEM[(uint8_t *)p1_206 + 5B];
  stmt_b: diff[i_208][2] = _89;
) -> no dependence
(compute_affine_dependence
  stmt_a: _42 = MEM[(uint8_t *)p1_206 + 5B];
  stmt_b: diff[i_208][6] = _91;
) -> no dependence
(compute_affine_dependence
  stmt_a: _42 = MEM[(uint8_t *)p1_206 + 5B];
  stmt_b: diff[i_208][3] = _95;
) -> no dependence
(compute_affine_dependence
  stmt_a: _42 = MEM[(uint8_t *)p1_206 + 5B];
  stmt_b: diff[i_208][7] = _97;
) -> no dependence
(compute_affine_dependence
  stmt_a: _44 = MEM[(uint8_t *)p2_207 + 5B];
  stmt_b: _47 = MEM[(uint8_t *)p1_206 + 6B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _44 = MEM[(uint8_t *)p2_207 + 5B];
  stmt_b: _49 = MEM[(uint8_t *)p2_207 + 6B];
(analyze_overlapping_iterations 
  (chrec_a = {5B, +, pretmp_740}_4)
  (chrec_b = {6B, +, pretmp_740}_4)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _44 = MEM[(uint8_t *)p2_207 + 5B];
  stmt_b: _52 = MEM[(uint8_t *)p1_206 + 7B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _44 = MEM[(uint8_t *)p2_207 + 5B];
  stmt_b: _54 = MEM[(uint8_t *)p2_207 + 7B];
(analyze_overlapping_iterations 
  (chrec_a = {5B, +, pretmp_740}_4)
  (chrec_b = {7B, +, pretmp_740}_4)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _44 = MEM[(uint8_t *)p2_207 + 5B];
  stmt_b: diff[i_208][0] = _76;
) -> no dependence
(compute_affine_dependence
  stmt_a: _44 = MEM[(uint8_t *)p2_207 + 5B];
  stmt_b: diff[i_208][4] = _79;
) -> no dependence
(compute_affine_dependence
  stmt_a: _44 = MEM[(uint8_t *)p2_207 + 5B];
  stmt_b: diff[i_208][1] = _83;
) -> no dependence
(compute_affine_dependence
  stmt_a: _44 = MEM[(uint8_t *)p2_207 + 5B];
  stmt_b: diff[i_208][5] = _85;
) -> no dependence
(compute_affine_dependence
  stmt_a: _44 = MEM[(uint8_t *)p2_207 + 5B];
  stmt_b: diff[i_208][2] = _89;
) -> no dependence
(compute_affine_dependence
  stmt_a: _44 = MEM[(uint8_t *)p2_207 + 5B];
  stmt_b: diff[i_208][6] = _91;
) -> no dependence
(compute_affine_dependence
  stmt_a: _44 = MEM[(uint8_t *)p2_207 + 5B];
  stmt_b: diff[i_208][3] = _95;
) -> no dependence
(compute_affine_dependence
  stmt_a: _44 = MEM[(uint8_t *)p2_207 + 5B];
  stmt_b: diff[i_208][7] = _97;
) -> no dependence
(compute_affine_dependence
  stmt_a: _47 = MEM[(uint8_t *)p1_206 + 6B];
  stmt_b: _49 = MEM[(uint8_t *)p2_207 + 6B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _47 = MEM[(uint8_t *)p1_206 + 6B];
  stmt_b: _52 = MEM[(uint8_t *)p1_206 + 7B];
(analyze_overlapping_iterations 
  (chrec_a = {6B, +, pretmp_739}_4)
  (chrec_b = {7B, +, pretmp_739}_4)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _47 = MEM[(uint8_t *)p1_206 + 6B];
  stmt_b: _54 = MEM[(uint8_t *)p2_207 + 7B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _47 = MEM[(uint8_t *)p1_206 + 6B];
  stmt_b: diff[i_208][0] = _76;
) -> no dependence
(compute_affine_dependence
  stmt_a: _47 = MEM[(uint8_t *)p1_206 + 6B];
  stmt_b: diff[i_208][4] = _79;
) -> no dependence
(compute_affine_dependence
  stmt_a: _47 = MEM[(uint8_t *)p1_206 + 6B];
  stmt_b: diff[i_208][1] = _83;
) -> no dependence
(compute_affine_dependence
  stmt_a: _47 = MEM[(uint8_t *)p1_206 + 6B];
  stmt_b: diff[i_208][5] = _85;
) -> no dependence
(compute_affine_dependence
  stmt_a: _47 = MEM[(uint8_t *)p1_206 + 6B];
  stmt_b: diff[i_208][2] = _89;
) -> no dependence
(compute_affine_dependence
  stmt_a: _47 = MEM[(uint8_t *)p1_206 + 6B];
  stmt_b: diff[i_208][6] = _91;
) -> no dependence
(compute_affine_dependence
  stmt_a: _47 = MEM[(uint8_t *)p1_206 + 6B];
  stmt_b: diff[i_208][3] = _95;
) -> no dependence
(compute_affine_dependence
  stmt_a: _47 = MEM[(uint8_t *)p1_206 + 6B];
  stmt_b: diff[i_208][7] = _97;
) -> no dependence
(compute_affine_dependence
  stmt_a: _49 = MEM[(uint8_t *)p2_207 + 6B];
  stmt_b: _52 = MEM[(uint8_t *)p1_206 + 7B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _49 = MEM[(uint8_t *)p2_207 + 6B];
  stmt_b: _54 = MEM[(uint8_t *)p2_207 + 7B];
(analyze_overlapping_iterations 
  (chrec_a = {6B, +, pretmp_740}_4)
  (chrec_b = {7B, +, pretmp_740}_4)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _49 = MEM[(uint8_t *)p2_207 + 6B];
  stmt_b: diff[i_208][0] = _76;
) -> no dependence
(compute_affine_dependence
  stmt_a: _49 = MEM[(uint8_t *)p2_207 + 6B];
  stmt_b: diff[i_208][4] = _79;
) -> no dependence
(compute_affine_dependence
  stmt_a: _49 = MEM[(uint8_t *)p2_207 + 6B];
  stmt_b: diff[i_208][1] = _83;
) -> no dependence
(compute_affine_dependence
  stmt_a: _49 = MEM[(uint8_t *)p2_207 + 6B];
  stmt_b: diff[i_208][5] = _85;
) -> no dependence
(compute_affine_dependence
  stmt_a: _49 = MEM[(uint8_t *)p2_207 + 6B];
  stmt_b: diff[i_208][2] = _89;
) -> no dependence
(compute_affine_dependence
  stmt_a: _49 = MEM[(uint8_t *)p2_207 + 6B];
  stmt_b: diff[i_208][6] = _91;
) -> no dependence
(compute_affine_dependence
  stmt_a: _49 = MEM[(uint8_t *)p2_207 + 6B];
  stmt_b: diff[i_208][3] = _95;
) -> no dependence
(compute_affine_dependence
  stmt_a: _49 = MEM[(uint8_t *)p2_207 + 6B];
  stmt_b: diff[i_208][7] = _97;
) -> no dependence
(compute_affine_dependence
  stmt_a: _52 = MEM[(uint8_t *)p1_206 + 7B];
  stmt_b: _54 = MEM[(uint8_t *)p2_207 + 7B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _52 = MEM[(uint8_t *)p1_206 + 7B];
  stmt_b: diff[i_208][0] = _76;
) -> no dependence
(compute_affine_dependence
  stmt_a: _52 = MEM[(uint8_t *)p1_206 + 7B];
  stmt_b: diff[i_208][4] = _79;
) -> no dependence
(compute_affine_dependence
  stmt_a: _52 = MEM[(uint8_t *)p1_206 + 7B];
  stmt_b: diff[i_208][1] = _83;
) -> no dependence
(compute_affine_dependence
  stmt_a: _52 = MEM[(uint8_t *)p1_206 + 7B];
  stmt_b: diff[i_208][5] = _85;
) -> no dependence
(compute_affine_dependence
  stmt_a: _52 = MEM[(uint8_t *)p1_206 + 7B];
  stmt_b: diff[i_208][2] = _89;
) -> no dependence
(compute_affine_dependence
  stmt_a: _52 = MEM[(uint8_t *)p1_206 + 7B];
  stmt_b: diff[i_208][6] = _91;
) -> no dependence
(compute_affine_dependence
  stmt_a: _52 = MEM[(uint8_t *)p1_206 + 7B];
  stmt_b: diff[i_208][3] = _95;
) -> no dependence
(compute_affine_dependence
  stmt_a: _52 = MEM[(uint8_t *)p1_206 + 7B];
  stmt_b: diff[i_208][7] = _97;
) -> no dependence
(compute_affine_dependence
  stmt_a: _54 = MEM[(uint8_t *)p2_207 + 7B];
  stmt_b: diff[i_208][0] = _76;
) -> no dependence
(compute_affine_dependence
  stmt_a: _54 = MEM[(uint8_t *)p2_207 + 7B];
  stmt_b: diff[i_208][4] = _79;
) -> no dependence
(compute_affine_dependence
  stmt_a: _54 = MEM[(uint8_t *)p2_207 + 7B];
  stmt_b: diff[i_208][1] = _83;
) -> no dependence
(compute_affine_dependence
  stmt_a: _54 = MEM[(uint8_t *)p2_207 + 7B];
  stmt_b: diff[i_208][5] = _85;
) -> no dependence
(compute_affine_dependence
  stmt_a: _54 = MEM[(uint8_t *)p2_207 + 7B];
  stmt_b: diff[i_208][2] = _89;
) -> no dependence
(compute_affine_dependence
  stmt_a: _54 = MEM[(uint8_t *)p2_207 + 7B];
  stmt_b: diff[i_208][6] = _91;
) -> no dependence
(compute_affine_dependence
  stmt_a: _54 = MEM[(uint8_t *)p2_207 + 7B];
  stmt_b: diff[i_208][3] = _95;
) -> no dependence
(compute_affine_dependence
  stmt_a: _54 = MEM[(uint8_t *)p2_207 + 7B];
  stmt_b: diff[i_208][7] = _97;
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_208][0] = _76;
  stmt_b: diff[i_208][4] = _79;
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 4)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_208][0] = _76;
  stmt_b: diff[i_208][1] = _83;
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 1)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_208][0] = _76;
  stmt_b: diff[i_208][5] = _85;
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 5)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_208][0] = _76;
  stmt_b: diff[i_208][2] = _89;
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_208][0] = _76;
  stmt_b: diff[i_208][6] = _91;
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 6)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_208][0] = _76;
  stmt_b: diff[i_208][3] = _95;
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_208][0] = _76;
  stmt_b: diff[i_208][7] = _97;
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_208][4] = _79;
  stmt_b: diff[i_208][1] = _83;
(analyze_overlapping_iterations 
  (chrec_a = 4)
  (chrec_b = 1)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_208][4] = _79;
  stmt_b: diff[i_208][5] = _85;
(analyze_overlapping_iterations 
  (chrec_a = 4)
  (chrec_b = 5)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_208][4] = _79;
  stmt_b: diff[i_208][2] = _89;
(analyze_overlapping_iterations 
  (chrec_a = 4)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_208][4] = _79;
  stmt_b: diff[i_208][6] = _91;
(analyze_overlapping_iterations 
  (chrec_a = 4)
  (chrec_b = 6)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_208][4] = _79;
  stmt_b: diff[i_208][3] = _95;
(analyze_overlapping_iterations 
  (chrec_a = 4)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_208][4] = _79;
  stmt_b: diff[i_208][7] = _97;
(analyze_overlapping_iterations 
  (chrec_a = 4)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_208][1] = _83;
  stmt_b: diff[i_208][5] = _85;
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 5)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_208][1] = _83;
  stmt_b: diff[i_208][2] = _89;
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_208][1] = _83;
  stmt_b: diff[i_208][6] = _91;
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 6)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_208][1] = _83;
  stmt_b: diff[i_208][3] = _95;
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_208][1] = _83;
  stmt_b: diff[i_208][7] = _97;
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_208][5] = _85;
  stmt_b: diff[i_208][2] = _89;
(analyze_overlapping_iterations 
  (chrec_a = 5)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_208][5] = _85;
  stmt_b: diff[i_208][6] = _91;
(analyze_overlapping_iterations 
  (chrec_a = 5)
  (chrec_b = 6)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_208][5] = _85;
  stmt_b: diff[i_208][3] = _95;
(analyze_overlapping_iterations 
  (chrec_a = 5)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_208][5] = _85;
  stmt_b: diff[i_208][7] = _97;
(analyze_overlapping_iterations 
  (chrec_a = 5)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_208][2] = _89;
  stmt_b: diff[i_208][6] = _91;
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 6)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_208][2] = _89;
  stmt_b: diff[i_208][3] = _95;
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_208][2] = _89;
  stmt_b: diff[i_208][7] = _97;
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_208][6] = _91;
  stmt_b: diff[i_208][3] = _95;
(analyze_overlapping_iterations 
  (chrec_a = 6)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_208][6] = _91;
  stmt_b: diff[i_208][7] = _97;
(analyze_overlapping_iterations 
  (chrec_a = 6)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_208][3] = _95;
  stmt_b: diff[i_208][7] = _97;
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _16 = *p1_206;
  stmt_b: _16 = *p1_206;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, pretmp_739}_4)
  (chrec_b = {0B, +, pretmp_739}_4)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _19 = *p2_207;
  stmt_b: _19 = *p2_207;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, pretmp_740}_4)
  (chrec_b = {0B, +, pretmp_740}_4)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _22 = MEM[(uint8_t *)p1_206 + 1B];
  stmt_b: _22 = MEM[(uint8_t *)p1_206 + 1B];
(analyze_overlapping_iterations 
  (chrec_a = {1B, +, pretmp_739}_4)
  (chrec_b = {1B, +, pretmp_739}_4)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _24 = MEM[(uint8_t *)p2_207 + 1B];
  stmt_b: _24 = MEM[(uint8_t *)p2_207 + 1B];
(analyze_overlapping_iterations 
  (chrec_a = {1B, +, pretmp_740}_4)
  (chrec_b = {1B, +, pretmp_740}_4)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _27 = MEM[(uint8_t *)p1_206 + 2B];
  stmt_b: _27 = MEM[(uint8_t *)p1_206 + 2B];
(analyze_overlapping_iterations 
  (chrec_a = {2B, +, pretmp_739}_4)
  (chrec_b = {2B, +, pretmp_739}_4)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _29 = MEM[(uint8_t *)p2_207 + 2B];
  stmt_b: _29 = MEM[(uint8_t *)p2_207 + 2B];
(analyze_overlapping_iterations 
  (chrec_a = {2B, +, pretmp_740}_4)
  (chrec_b = {2B, +, pretmp_740}_4)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _32 = MEM[(uint8_t *)p1_206 + 3B];
  stmt_b: _32 = MEM[(uint8_t *)p1_206 + 3B];
(analyze_overlapping_iterations 
  (chrec_a = {3B, +, pretmp_739}_4)
  (chrec_b = {3B, +, pretmp_739}_4)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _34 = MEM[(uint8_t *)p2_207 + 3B];
  stmt_b: _34 = MEM[(uint8_t *)p2_207 + 3B];
(analyze_overlapping_iterations 
  (chrec_a = {3B, +, pretmp_740}_4)
  (chrec_b = {3B, +, pretmp_740}_4)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _37 = MEM[(uint8_t *)p1_206 + 4B];
  stmt_b: _37 = MEM[(uint8_t *)p1_206 + 4B];
(analyze_overlapping_iterations 
  (chrec_a = {4B, +, pretmp_739}_4)
  (chrec_b = {4B, +, pretmp_739}_4)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _39 = MEM[(uint8_t *)p2_207 + 4B];
  stmt_b: _39 = MEM[(uint8_t *)p2_207 + 4B];
(analyze_overlapping_iterations 
  (chrec_a = {4B, +, pretmp_740}_4)
  (chrec_b = {4B, +, pretmp_740}_4)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _42 = MEM[(uint8_t *)p1_206 + 5B];
  stmt_b: _42 = MEM[(uint8_t *)p1_206 + 5B];
(analyze_overlapping_iterations 
  (chrec_a = {5B, +, pretmp_739}_4)
  (chrec_b = {5B, +, pretmp_739}_4)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _44 = MEM[(uint8_t *)p2_207 + 5B];
  stmt_b: _44 = MEM[(uint8_t *)p2_207 + 5B];
(analyze_overlapping_iterations 
  (chrec_a = {5B, +, pretmp_740}_4)
  (chrec_b = {5B, +, pretmp_740}_4)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _47 = MEM[(uint8_t *)p1_206 + 6B];
  stmt_b: _47 = MEM[(uint8_t *)p1_206 + 6B];
(analyze_overlapping_iterations 
  (chrec_a = {6B, +, pretmp_739}_4)
  (chrec_b = {6B, +, pretmp_739}_4)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _49 = MEM[(uint8_t *)p2_207 + 6B];
  stmt_b: _49 = MEM[(uint8_t *)p2_207 + 6B];
(analyze_overlapping_iterations 
  (chrec_a = {6B, +, pretmp_740}_4)
  (chrec_b = {6B, +, pretmp_740}_4)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _52 = MEM[(uint8_t *)p1_206 + 7B];
  stmt_b: _52 = MEM[(uint8_t *)p1_206 + 7B];
(analyze_overlapping_iterations 
  (chrec_a = {7B, +, pretmp_739}_4)
  (chrec_b = {7B, +, pretmp_739}_4)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _54 = MEM[(uint8_t *)p2_207 + 7B];
  stmt_b: _54 = MEM[(uint8_t *)p2_207 + 7B];
(analyze_overlapping_iterations 
  (chrec_a = {7B, +, pretmp_740}_4)
  (chrec_b = {7B, +, pretmp_740}_4)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: diff[i_208][0] = _76;
  stmt_b: diff[i_208][0] = _76;
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 0)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_4)
  (chrec_b = {0, +, 1}_4)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: diff[i_208][4] = _79;
  stmt_b: diff[i_208][4] = _79;
(analyze_overlapping_iterations 
  (chrec_a = 4)
  (chrec_b = 4)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_4)
  (chrec_b = {0, +, 1}_4)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: diff[i_208][1] = _83;
  stmt_b: diff[i_208][1] = _83;
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_4)
  (chrec_b = {0, +, 1}_4)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: diff[i_208][5] = _85;
  stmt_b: diff[i_208][5] = _85;
(analyze_overlapping_iterations 
  (chrec_a = 5)
  (chrec_b = 5)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_4)
  (chrec_b = {0, +, 1}_4)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: diff[i_208][2] = _89;
  stmt_b: diff[i_208][2] = _89;
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_4)
  (chrec_b = {0, +, 1}_4)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: diff[i_208][6] = _91;
  stmt_b: diff[i_208][6] = _91;
(analyze_overlapping_iterations 
  (chrec_a = 6)
  (chrec_b = 6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_4)
  (chrec_b = {0, +, 1}_4)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: diff[i_208][3] = _95;
  stmt_b: diff[i_208][3] = _95;
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_4)
  (chrec_b = {0, +, 1}_4)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: diff[i_208][7] = _97;
  stmt_b: diff[i_208][7] = _97;
(analyze_overlapping_iterations 
  (chrec_a = 7)
  (chrec_b = 7)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_4)
  (chrec_b = {0, +, 1}_4)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/pixel.c:262:13: note: === vect_determine_vectorization_factor ===
common/pixel.c:262:13: note: ==> examining phi: p1_206 = PHI <p1_100(6), p1_12(4)>

common/pixel.c:262:13: note: ==> examining phi: p2_207 = PHI <p2_102(6), p2_14(4)>

common/pixel.c:262:13: note: ==> examining phi: i_208 = PHI <i_98(6), 0(4)>

common/pixel.c:262:13: note: ==> examining phi: .MEM_214 = PHI <.MEM_187(6), .MEM_215(4)>

common/pixel.c:262:13: note: ==> examining phi: ivtmp_733 = PHI <ivtmp_732(6), 8(4)>

common/pixel.c:262:13: note: ==> examining statement: # DEBUG p2 => p2_207

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: # DEBUG p1 => p1_206

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: # DEBUG i => i_208

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: _16 = *p1_206;

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: _17 = (int) _16;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: _19 = *p2_207;

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: _20 = (int) _19;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: a0_21 = _17 - _20;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: nunits = 4
common/pixel.c:262:13: note: ==> examining statement: # DEBUG a0 => a0_21

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: _22 = MEM[(uint8_t *)p1_206 + 1B];

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: _23 = (int) _22;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: _24 = MEM[(uint8_t *)p2_207 + 1B];

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: _25 = (int) _24;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: a1_26 = _23 - _25;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: nunits = 4
common/pixel.c:262:13: note: ==> examining statement: # DEBUG a1 => a1_26

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: _27 = MEM[(uint8_t *)p1_206 + 2B];

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: _28 = (int) _27;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: _29 = MEM[(uint8_t *)p2_207 + 2B];

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: _30 = (int) _29;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: a2_31 = _28 - _30;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: nunits = 4
common/pixel.c:262:13: note: ==> examining statement: # DEBUG a2 => a2_31

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: _32 = MEM[(uint8_t *)p1_206 + 3B];

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: _33 = (int) _32;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: _34 = MEM[(uint8_t *)p2_207 + 3B];

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: _35 = (int) _34;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: a3_36 = _33 - _35;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: nunits = 4
common/pixel.c:262:13: note: ==> examining statement: # DEBUG a3 => a3_36

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: _37 = MEM[(uint8_t *)p1_206 + 4B];

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: _38 = (int) _37;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: _39 = MEM[(uint8_t *)p2_207 + 4B];

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: _40 = (int) _39;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: a4_41 = _38 - _40;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: nunits = 4
common/pixel.c:262:13: note: ==> examining statement: # DEBUG a4 => a4_41

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: _42 = MEM[(uint8_t *)p1_206 + 5B];

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: _43 = (int) _42;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: _44 = MEM[(uint8_t *)p2_207 + 5B];

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: _45 = (int) _44;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: a5_46 = _43 - _45;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: nunits = 4
common/pixel.c:262:13: note: ==> examining statement: # DEBUG a5 => a5_46

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: _47 = MEM[(uint8_t *)p1_206 + 6B];

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: _48 = (int) _47;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: _49 = MEM[(uint8_t *)p2_207 + 6B];

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: _50 = (int) _49;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: a6_51 = _48 - _50;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: nunits = 4
common/pixel.c:262:13: note: ==> examining statement: # DEBUG a6 => a6_51

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: _52 = MEM[(uint8_t *)p1_206 + 7B];

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: _53 = (int) _52;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: _54 = MEM[(uint8_t *)p2_207 + 7B];

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: _55 = (int) _54;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: a7_56 = _53 - _55;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: nunits = 4
common/pixel.c:262:13: note: ==> examining statement: # DEBUG a7 => a7_56

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: t0_57 = a0_21 + a1_26;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: nunits = 4
common/pixel.c:262:13: note: ==> examining statement: # DEBUG t0 => t0_57

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: t1_58 = a0_21 - a1_26;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: nunits = 4
common/pixel.c:262:13: note: ==> examining statement: # DEBUG t1 => t1_58

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: t2_59 = a2_31 + a3_36;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: nunits = 4
common/pixel.c:262:13: note: ==> examining statement: # DEBUG t2 => t2_59

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: t3_60 = a2_31 - a3_36;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: nunits = 4
common/pixel.c:262:13: note: ==> examining statement: # DEBUG t3 => t3_60

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: b0_61 = t0_57 + t2_59;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: nunits = 4
common/pixel.c:262:13: note: ==> examining statement: # DEBUG b0 => b0_61

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: b2_62 = t0_57 - t2_59;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: nunits = 4
common/pixel.c:262:13: note: ==> examining statement: # DEBUG b2 => b2_62

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: b1_63 = t1_58 + t3_60;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: nunits = 4
common/pixel.c:262:13: note: ==> examining statement: # DEBUG b1 => b1_63

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: b3_64 = t1_58 - t3_60;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: nunits = 4
common/pixel.c:262:13: note: ==> examining statement: # DEBUG b3 => b3_64

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: t0_65 = a4_41 + a5_46;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: nunits = 4
common/pixel.c:262:13: note: ==> examining statement: # DEBUG t0 => t0_65

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: t1_66 = a4_41 - a5_46;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: nunits = 4
common/pixel.c:262:13: note: ==> examining statement: # DEBUG t1 => t1_66

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: t2_67 = a6_51 + a7_56;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: nunits = 4
common/pixel.c:262:13: note: ==> examining statement: # DEBUG t2 => t2_67

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: t3_68 = a6_51 - a7_56;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: nunits = 4
common/pixel.c:262:13: note: ==> examining statement: # DEBUG t3 => t3_68

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: b4_69 = t0_65 + t2_67;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: nunits = 4
common/pixel.c:262:13: note: ==> examining statement: # DEBUG b4 => b4_69

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: b6_70 = t0_65 - t2_67;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: nunits = 4
common/pixel.c:262:13: note: ==> examining statement: # DEBUG b6 => b6_70

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: b5_71 = t1_66 + t3_68;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: nunits = 4
common/pixel.c:262:13: note: ==> examining statement: # DEBUG b5 => b5_71

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: b7_72 = t1_66 - t3_68;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: nunits = 4
common/pixel.c:262:13: note: ==> examining statement: # DEBUG b7 => b7_72

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: _73 = (unsigned short) b0_61;

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: _74 = (unsigned short) b4_69;

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: _75 = _73 + _74;

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: _76 = (short int) _75;

common/pixel.c:262:13: note: get vectype for scalar type:  short int
common/pixel.c:262:13: note: vectype: vector(8) short int
common/pixel.c:262:13: note: get vectype for scalar type:  short int
common/pixel.c:262:13: note: vectype: vector(8) short int
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: diff[i_208][0] = _76;

common/pixel.c:262:13: note: get vectype for scalar type:  int16_t
common/pixel.c:262:13: note: vectype: vector(8) short int
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: _78 = _73 - _74;

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: _79 = (short int) _78;

common/pixel.c:262:13: note: get vectype for scalar type:  short int
common/pixel.c:262:13: note: vectype: vector(8) short int
common/pixel.c:262:13: note: get vectype for scalar type:  short int
common/pixel.c:262:13: note: vectype: vector(8) short int
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: diff[i_208][4] = _79;

common/pixel.c:262:13: note: get vectype for scalar type:  int16_t
common/pixel.c:262:13: note: vectype: vector(8) short int
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: _80 = (unsigned short) b1_63;

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: _81 = (unsigned short) b5_71;

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: _82 = _80 + _81;

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: _83 = (short int) _82;

common/pixel.c:262:13: note: get vectype for scalar type:  short int
common/pixel.c:262:13: note: vectype: vector(8) short int
common/pixel.c:262:13: note: get vectype for scalar type:  short int
common/pixel.c:262:13: note: vectype: vector(8) short int
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: diff[i_208][1] = _83;

common/pixel.c:262:13: note: get vectype for scalar type:  int16_t
common/pixel.c:262:13: note: vectype: vector(8) short int
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: _84 = _80 - _81;

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: _85 = (short int) _84;

common/pixel.c:262:13: note: get vectype for scalar type:  short int
common/pixel.c:262:13: note: vectype: vector(8) short int
common/pixel.c:262:13: note: get vectype for scalar type:  short int
common/pixel.c:262:13: note: vectype: vector(8) short int
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: diff[i_208][5] = _85;

common/pixel.c:262:13: note: get vectype for scalar type:  int16_t
common/pixel.c:262:13: note: vectype: vector(8) short int
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: _86 = (unsigned short) b2_62;

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: _87 = (unsigned short) b6_70;

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: _88 = _86 + _87;

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: _89 = (short int) _88;

common/pixel.c:262:13: note: get vectype for scalar type:  short int
common/pixel.c:262:13: note: vectype: vector(8) short int
common/pixel.c:262:13: note: get vectype for scalar type:  short int
common/pixel.c:262:13: note: vectype: vector(8) short int
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: diff[i_208][2] = _89;

common/pixel.c:262:13: note: get vectype for scalar type:  int16_t
common/pixel.c:262:13: note: vectype: vector(8) short int
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: _90 = _86 - _87;

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: _91 = (short int) _90;

common/pixel.c:262:13: note: get vectype for scalar type:  short int
common/pixel.c:262:13: note: vectype: vector(8) short int
common/pixel.c:262:13: note: get vectype for scalar type:  short int
common/pixel.c:262:13: note: vectype: vector(8) short int
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: diff[i_208][6] = _91;

common/pixel.c:262:13: note: get vectype for scalar type:  int16_t
common/pixel.c:262:13: note: vectype: vector(8) short int
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: _92 = (unsigned short) b3_64;

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: _93 = (unsigned short) b7_72;

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: _94 = _92 + _93;

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: _95 = (short int) _94;

common/pixel.c:262:13: note: get vectype for scalar type:  short int
common/pixel.c:262:13: note: vectype: vector(8) short int
common/pixel.c:262:13: note: get vectype for scalar type:  short int
common/pixel.c:262:13: note: vectype: vector(8) short int
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: diff[i_208][3] = _95;

common/pixel.c:262:13: note: get vectype for scalar type:  int16_t
common/pixel.c:262:13: note: vectype: vector(8) short int
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: _96 = _92 - _93;

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: _97 = (short int) _96;

common/pixel.c:262:13: note: get vectype for scalar type:  short int
common/pixel.c:262:13: note: vectype: vector(8) short int
common/pixel.c:262:13: note: get vectype for scalar type:  short int
common/pixel.c:262:13: note: vectype: vector(8) short int
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: diff[i_208][7] = _97;

common/pixel.c:262:13: note: get vectype for scalar type:  int16_t
common/pixel.c:262:13: note: vectype: vector(8) short int
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: i_98 = i_208 + 1;

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: # DEBUG i => i_98

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: p1_100 = p1_206 + pretmp_739;

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: # DEBUG p1 => p1_100

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: p2_102 = p2_207 + pretmp_740;

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: # DEBUG p2 => p2_102

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: # DEBUG p2 => p2_102

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: # DEBUG p1 => p1_100

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: # DEBUG i => i_98

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: ivtmp_732 = ivtmp_733 - 1;

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: if (ivtmp_732 != 0)

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: vectorization factor = 16
common/pixel.c:262:13: note: === vect_analyze_data_refs_alignment ===
common/pixel.c:262:13: note: vect_compute_data_ref_alignment:
common/pixel.c:262:13: note: vect_compute_data_ref_alignment:
common/pixel.c:262:13: note: vect_compute_data_ref_alignment:
common/pixel.c:262:13: note: vect_compute_data_ref_alignment:
common/pixel.c:262:13: note: vect_compute_data_ref_alignment:
common/pixel.c:262:13: note: vect_compute_data_ref_alignment:
common/pixel.c:262:13: note: vect_compute_data_ref_alignment:
common/pixel.c:262:13: note: vect_compute_data_ref_alignment:
common/pixel.c:262:13: note: vect_compute_data_ref_alignment:
common/pixel.c:262:13: note: vect_compute_data_ref_alignment:
common/pixel.c:262:13: note: vect_compute_data_ref_alignment:
common/pixel.c:262:13: note: vect_compute_data_ref_alignment:
common/pixel.c:262:13: note: vect_compute_data_ref_alignment:
common/pixel.c:262:13: note: vect_compute_data_ref_alignment:
common/pixel.c:262:13: note: vect_compute_data_ref_alignment:
common/pixel.c:262:13: note: vect_compute_data_ref_alignment:
common/pixel.c:262:13: note: vect_compute_data_ref_alignment:
common/pixel.c:262:13: note: misalign = 0 bytes of ref diff[i_208][0]
common/pixel.c:262:13: note: vect_compute_data_ref_alignment:
common/pixel.c:262:13: note: misalign = 8 bytes of ref diff[i_208][4]
common/pixel.c:262:13: note: vect_compute_data_ref_alignment:
common/pixel.c:262:13: note: misalign = 2 bytes of ref diff[i_208][1]
common/pixel.c:262:13: note: vect_compute_data_ref_alignment:
common/pixel.c:262:13: note: misalign = 10 bytes of ref diff[i_208][5]
common/pixel.c:262:13: note: vect_compute_data_ref_alignment:
common/pixel.c:262:13: note: misalign = 4 bytes of ref diff[i_208][2]
common/pixel.c:262:13: note: vect_compute_data_ref_alignment:
common/pixel.c:262:13: note: misalign = 12 bytes of ref diff[i_208][6]
common/pixel.c:262:13: note: vect_compute_data_ref_alignment:
common/pixel.c:262:13: note: misalign = 6 bytes of ref diff[i_208][3]
common/pixel.c:262:13: note: vect_compute_data_ref_alignment:
common/pixel.c:262:13: note: misalign = 14 bytes of ref diff[i_208][7]
common/pixel.c:262:13: note: === vect_prune_runtime_alias_test_list ===
common/pixel.c:262:13: note: === vect_enhance_data_refs_alignment ===
common/pixel.c:262:13: note: vect_can_advance_ivs_p:
common/pixel.c:262:13: note: Analyze phi: p1_206 = PHI <p1_100(6), p1_12(4)>

common/pixel.c:262:13: note: Analyze phi: p2_207 = PHI <p2_102(6), p2_14(4)>

common/pixel.c:262:13: note: Analyze phi: i_208 = PHI <i_98(6), 0(4)>

common/pixel.c:262:13: note: Analyze phi: .MEM_214 = PHI <.MEM_187(6), .MEM_215(4)>

common/pixel.c:262:13: note: virtual phi. skip.
common/pixel.c:262:13: note: Analyze phi: ivtmp_733 = PHI <ivtmp_732(6), 8(4)>

common/pixel.c:262:13: note: Setting misalignment to -1.
common/pixel.c:262:13: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:262:13: note: vect_get_data_access_cost: inside_cost = 2, outside_cost = 0.
common/pixel.c:262:13: note: Setting misalignment to -1.
common/pixel.c:262:13: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:262:13: note: vect_get_data_access_cost: inside_cost = 4, outside_cost = 0.
common/pixel.c:262:13: note: Setting misalignment to -1.
common/pixel.c:262:13: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:262:13: note: vect_get_data_access_cost: inside_cost = 6, outside_cost = 0.
common/pixel.c:262:13: note: Setting misalignment to -1.
common/pixel.c:262:13: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:262:13: note: vect_get_data_access_cost: inside_cost = 8, outside_cost = 0.
common/pixel.c:262:13: note: Setting misalignment to -1.
common/pixel.c:262:13: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:262:13: note: vect_get_data_access_cost: inside_cost = 10, outside_cost = 0.
common/pixel.c:262:13: note: Setting misalignment to -1.
common/pixel.c:262:13: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:262:13: note: vect_get_data_access_cost: inside_cost = 12, outside_cost = 0.
common/pixel.c:262:13: note: Setting misalignment to -1.
common/pixel.c:262:13: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:262:13: note: vect_get_data_access_cost: inside_cost = 14, outside_cost = 0.
common/pixel.c:262:13: note: Setting misalignment to -1.
common/pixel.c:262:13: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:262:13: note: vect_get_data_access_cost: inside_cost = 16, outside_cost = 0.
common/pixel.c:262:13: note: Setting misalignment to -1.
common/pixel.c:262:13: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:262:13: note: vect_get_data_access_cost: inside_cost = 18, outside_cost = 0.
common/pixel.c:262:13: note: Setting misalignment to -1.
common/pixel.c:262:13: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:262:13: note: vect_get_data_access_cost: inside_cost = 20, outside_cost = 0.
common/pixel.c:262:13: note: Setting misalignment to -1.
common/pixel.c:262:13: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:262:13: note: vect_get_data_access_cost: inside_cost = 22, outside_cost = 0.
common/pixel.c:262:13: note: Setting misalignment to -1.
common/pixel.c:262:13: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:262:13: note: vect_get_data_access_cost: inside_cost = 24, outside_cost = 0.
common/pixel.c:262:13: note: Setting misalignment to -1.
common/pixel.c:262:13: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:262:13: note: vect_get_data_access_cost: inside_cost = 26, outside_cost = 0.
common/pixel.c:262:13: note: Setting misalignment to -1.
common/pixel.c:262:13: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:262:13: note: vect_get_data_access_cost: inside_cost = 28, outside_cost = 0.
common/pixel.c:262:13: note: Setting misalignment to -1.
common/pixel.c:262:13: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:262:13: note: vect_get_data_access_cost: inside_cost = 30, outside_cost = 0.
common/pixel.c:262:13: note: Setting misalignment to -1.
common/pixel.c:262:13: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:262:13: note: vect_get_data_access_cost: inside_cost = 32, outside_cost = 0.
common/pixel.c:262:13: note: vect_model_store_cost: aligned.
common/pixel.c:262:13: note: vect_get_data_access_cost: inside_cost = 34, outside_cost = 0.
common/pixel.c:262:13: note: === vect_analyze_slp ===
common/pixel.c:262:13: note: Build SLP for diff[i_208][0] = _76;

common/pixel.c:262:13: note: Build SLP for diff[i_208][1] = _83;

common/pixel.c:262:13: note: Build SLP for diff[i_208][2] = _89;

common/pixel.c:262:13: note: Build SLP for diff[i_208][3] = _95;

common/pixel.c:262:13: note: Build SLP for diff[i_208][4] = _79;

common/pixel.c:262:13: note: Build SLP for diff[i_208][5] = _85;

common/pixel.c:262:13: note: Build SLP for diff[i_208][6] = _91;

common/pixel.c:262:13: note: Build SLP for diff[i_208][7] = _97;

common/pixel.c:262:13: note: vect_is_simple_use: operand _76
common/pixel.c:262:13: note: def_stmt: _76 = (short int) _75;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _83
common/pixel.c:262:13: note: def_stmt: _83 = (short int) _82;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _89
common/pixel.c:262:13: note: def_stmt: _89 = (short int) _88;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _95
common/pixel.c:262:13: note: def_stmt: _95 = (short int) _94;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _79
common/pixel.c:262:13: note: def_stmt: _79 = (short int) _78;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _85
common/pixel.c:262:13: note: def_stmt: _85 = (short int) _84;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _91
common/pixel.c:262:13: note: def_stmt: _91 = (short int) _90;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _97
common/pixel.c:262:13: note: def_stmt: _97 = (short int) _96;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: Build SLP for _76 = (short int) _75;

common/pixel.c:262:13: note: Build SLP for _83 = (short int) _82;

common/pixel.c:262:13: note: Build SLP for _89 = (short int) _88;

common/pixel.c:262:13: note: Build SLP for _95 = (short int) _94;

common/pixel.c:262:13: note: Build SLP for _79 = (short int) _78;

common/pixel.c:262:13: note: Build SLP for _85 = (short int) _84;

common/pixel.c:262:13: note: Build SLP for _91 = (short int) _90;

common/pixel.c:262:13: note: Build SLP for _97 = (short int) _96;

common/pixel.c:262:13: note: vect_is_simple_use: operand _75
common/pixel.c:262:13: note: def_stmt: _75 = _73 + _74;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _82
common/pixel.c:262:13: note: def_stmt: _82 = _80 + _81;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _88
common/pixel.c:262:13: note: def_stmt: _88 = _86 + _87;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _94
common/pixel.c:262:13: note: def_stmt: _94 = _92 + _93;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _78
common/pixel.c:262:13: note: def_stmt: _78 = _73 - _74;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _84
common/pixel.c:262:13: note: def_stmt: _84 = _80 - _81;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _90
common/pixel.c:262:13: note: def_stmt: _90 = _86 - _87;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _96
common/pixel.c:262:13: note: def_stmt: _96 = _92 - _93;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: Build SLP for _75 = _73 + _74;

common/pixel.c:262:13: note: Build SLP for _82 = _80 + _81;

common/pixel.c:262:13: note: Build SLP for _88 = _86 + _87;

common/pixel.c:262:13: note: Build SLP for _94 = _92 + _93;

common/pixel.c:262:13: note: Build SLP for _78 = _73 - _74;

common/pixel.c:262:13: note: Build SLP failed: different operation in stmt _78 = _73 - _74;

common/pixel.c:262:13: note: Build SLP for _84 = _80 - _81;

common/pixel.c:262:13: note: Build SLP failed: different operation in stmt _84 = _80 - _81;

common/pixel.c:262:13: note: Build SLP for _90 = _86 - _87;

common/pixel.c:262:13: note: Build SLP failed: different operation in stmt _90 = _86 - _87;

common/pixel.c:262:13: note: Build SLP for _96 = _92 - _93;

common/pixel.c:262:13: note: Build SLP failed: different operation in stmt _96 = _92 - _93;

common/pixel.c:262:13: note: === vect_make_slp_decision ===
common/pixel.c:262:13: note: === vect_detect_hybrid_slp ===
common/pixel.c:262:13: note: === vect_analyze_loop_operations ===
common/pixel.c:262:13: note: examining phi: p1_206 = PHI <p1_100(6), p1_12(4)>

common/pixel.c:262:13: note: examining phi: p2_207 = PHI <p2_102(6), p2_14(4)>

common/pixel.c:262:13: note: examining phi: i_208 = PHI <i_98(6), 0(4)>

common/pixel.c:262:13: note: examining phi: .MEM_214 = PHI <.MEM_187(6), .MEM_215(4)>

common/pixel.c:262:13: note: examining phi: ivtmp_733 = PHI <ivtmp_732(6), 8(4)>

common/pixel.c:262:13: note: ==> examining statement: # DEBUG p2 => p2_207
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: # DEBUG p1 => p1_206
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: # DEBUG i => i_208
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: _16 = *p1_206;
common/pixel.c:262:13: note: vect_is_simple_use: operand *p1_206
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_is_simple_use: operand *p1_206
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_model_load_cost: inside_cost = 25, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _17 = (int) _16;
common/pixel.c:262:13: note: vect_is_simple_use: operand _16
common/pixel.c:262:13: note: def_stmt: _16 = *p1_206;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_conversion ===
common/pixel.c:262:13: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _19 = *p2_207;
common/pixel.c:262:13: note: vect_is_simple_use: operand *p2_207
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_is_simple_use: operand *p2_207
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_model_load_cost: inside_cost = 25, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _20 = (int) _19;
common/pixel.c:262:13: note: vect_is_simple_use: operand _19
common/pixel.c:262:13: note: def_stmt: _19 = *p2_207;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_conversion ===
common/pixel.c:262:13: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: a0_21 = _17 - _20;
common/pixel.c:262:13: note: vect_is_simple_use: operand _17
common/pixel.c:262:13: note: def_stmt: _17 = (int) _16;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _20
common/pixel.c:262:13: note: def_stmt: _20 = (int) _19;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: # DEBUG a0 => a0_21
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: _22 = MEM[(uint8_t *)p1_206 + 1B];
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)p1_206 + 1B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)p1_206 + 1B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_model_load_cost: inside_cost = 25, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _23 = (int) _22;
common/pixel.c:262:13: note: vect_is_simple_use: operand _22
common/pixel.c:262:13: note: def_stmt: _22 = MEM[(uint8_t *)p1_206 + 1B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_conversion ===
common/pixel.c:262:13: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _24 = MEM[(uint8_t *)p2_207 + 1B];
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)p2_207 + 1B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)p2_207 + 1B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_model_load_cost: inside_cost = 25, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _25 = (int) _24;
common/pixel.c:262:13: note: vect_is_simple_use: operand _24
common/pixel.c:262:13: note: def_stmt: _24 = MEM[(uint8_t *)p2_207 + 1B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_conversion ===
common/pixel.c:262:13: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: a1_26 = _23 - _25;
common/pixel.c:262:13: note: vect_is_simple_use: operand _23
common/pixel.c:262:13: note: def_stmt: _23 = (int) _22;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _25
common/pixel.c:262:13: note: def_stmt: _25 = (int) _24;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: # DEBUG a1 => a1_26
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: _27 = MEM[(uint8_t *)p1_206 + 2B];
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)p1_206 + 2B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)p1_206 + 2B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_model_load_cost: inside_cost = 25, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _28 = (int) _27;
common/pixel.c:262:13: note: vect_is_simple_use: operand _27
common/pixel.c:262:13: note: def_stmt: _27 = MEM[(uint8_t *)p1_206 + 2B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_conversion ===
common/pixel.c:262:13: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _29 = MEM[(uint8_t *)p2_207 + 2B];
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)p2_207 + 2B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)p2_207 + 2B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_model_load_cost: inside_cost = 25, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _30 = (int) _29;
common/pixel.c:262:13: note: vect_is_simple_use: operand _29
common/pixel.c:262:13: note: def_stmt: _29 = MEM[(uint8_t *)p2_207 + 2B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_conversion ===
common/pixel.c:262:13: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: a2_31 = _28 - _30;
common/pixel.c:262:13: note: vect_is_simple_use: operand _28
common/pixel.c:262:13: note: def_stmt: _28 = (int) _27;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _30
common/pixel.c:262:13: note: def_stmt: _30 = (int) _29;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: # DEBUG a2 => a2_31
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: _32 = MEM[(uint8_t *)p1_206 + 3B];
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)p1_206 + 3B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)p1_206 + 3B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_model_load_cost: inside_cost = 25, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _33 = (int) _32;
common/pixel.c:262:13: note: vect_is_simple_use: operand _32
common/pixel.c:262:13: note: def_stmt: _32 = MEM[(uint8_t *)p1_206 + 3B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_conversion ===
common/pixel.c:262:13: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _34 = MEM[(uint8_t *)p2_207 + 3B];
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)p2_207 + 3B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)p2_207 + 3B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_model_load_cost: inside_cost = 25, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _35 = (int) _34;
common/pixel.c:262:13: note: vect_is_simple_use: operand _34
common/pixel.c:262:13: note: def_stmt: _34 = MEM[(uint8_t *)p2_207 + 3B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_conversion ===
common/pixel.c:262:13: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: a3_36 = _33 - _35;
common/pixel.c:262:13: note: vect_is_simple_use: operand _33
common/pixel.c:262:13: note: def_stmt: _33 = (int) _32;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _35
common/pixel.c:262:13: note: def_stmt: _35 = (int) _34;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: # DEBUG a3 => a3_36
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: _37 = MEM[(uint8_t *)p1_206 + 4B];
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)p1_206 + 4B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)p1_206 + 4B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_model_load_cost: inside_cost = 25, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _38 = (int) _37;
common/pixel.c:262:13: note: vect_is_simple_use: operand _37
common/pixel.c:262:13: note: def_stmt: _37 = MEM[(uint8_t *)p1_206 + 4B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_conversion ===
common/pixel.c:262:13: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _39 = MEM[(uint8_t *)p2_207 + 4B];
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)p2_207 + 4B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)p2_207 + 4B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_model_load_cost: inside_cost = 25, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _40 = (int) _39;
common/pixel.c:262:13: note: vect_is_simple_use: operand _39
common/pixel.c:262:13: note: def_stmt: _39 = MEM[(uint8_t *)p2_207 + 4B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_conversion ===
common/pixel.c:262:13: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: a4_41 = _38 - _40;
common/pixel.c:262:13: note: vect_is_simple_use: operand _38
common/pixel.c:262:13: note: def_stmt: _38 = (int) _37;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _40
common/pixel.c:262:13: note: def_stmt: _40 = (int) _39;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: # DEBUG a4 => a4_41
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: _42 = MEM[(uint8_t *)p1_206 + 5B];
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)p1_206 + 5B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)p1_206 + 5B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_model_load_cost: inside_cost = 25, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _43 = (int) _42;
common/pixel.c:262:13: note: vect_is_simple_use: operand _42
common/pixel.c:262:13: note: def_stmt: _42 = MEM[(uint8_t *)p1_206 + 5B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_conversion ===
common/pixel.c:262:13: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _44 = MEM[(uint8_t *)p2_207 + 5B];
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)p2_207 + 5B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)p2_207 + 5B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_model_load_cost: inside_cost = 25, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _45 = (int) _44;
common/pixel.c:262:13: note: vect_is_simple_use: operand _44
common/pixel.c:262:13: note: def_stmt: _44 = MEM[(uint8_t *)p2_207 + 5B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_conversion ===
common/pixel.c:262:13: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: a5_46 = _43 - _45;
common/pixel.c:262:13: note: vect_is_simple_use: operand _43
common/pixel.c:262:13: note: def_stmt: _43 = (int) _42;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _45
common/pixel.c:262:13: note: def_stmt: _45 = (int) _44;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: # DEBUG a5 => a5_46
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: _47 = MEM[(uint8_t *)p1_206 + 6B];
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)p1_206 + 6B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)p1_206 + 6B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_model_load_cost: inside_cost = 25, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _48 = (int) _47;
common/pixel.c:262:13: note: vect_is_simple_use: operand _47
common/pixel.c:262:13: note: def_stmt: _47 = MEM[(uint8_t *)p1_206 + 6B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_conversion ===
common/pixel.c:262:13: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _49 = MEM[(uint8_t *)p2_207 + 6B];
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)p2_207 + 6B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)p2_207 + 6B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_model_load_cost: inside_cost = 25, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _50 = (int) _49;
common/pixel.c:262:13: note: vect_is_simple_use: operand _49
common/pixel.c:262:13: note: def_stmt: _49 = MEM[(uint8_t *)p2_207 + 6B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_conversion ===
common/pixel.c:262:13: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: a6_51 = _48 - _50;
common/pixel.c:262:13: note: vect_is_simple_use: operand _48
common/pixel.c:262:13: note: def_stmt: _48 = (int) _47;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _50
common/pixel.c:262:13: note: def_stmt: _50 = (int) _49;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: # DEBUG a6 => a6_51
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: _52 = MEM[(uint8_t *)p1_206 + 7B];
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)p1_206 + 7B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)p1_206 + 7B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_model_load_cost: inside_cost = 25, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _53 = (int) _52;
common/pixel.c:262:13: note: vect_is_simple_use: operand _52
common/pixel.c:262:13: note: def_stmt: _52 = MEM[(uint8_t *)p1_206 + 7B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_conversion ===
common/pixel.c:262:13: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _54 = MEM[(uint8_t *)p2_207 + 7B];
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)p2_207 + 7B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)p2_207 + 7B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_model_load_cost: inside_cost = 25, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _55 = (int) _54;
common/pixel.c:262:13: note: vect_is_simple_use: operand _54
common/pixel.c:262:13: note: def_stmt: _54 = MEM[(uint8_t *)p2_207 + 7B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_conversion ===
common/pixel.c:262:13: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: a7_56 = _53 - _55;
common/pixel.c:262:13: note: vect_is_simple_use: operand _53
common/pixel.c:262:13: note: def_stmt: _53 = (int) _52;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _55
common/pixel.c:262:13: note: def_stmt: _55 = (int) _54;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: # DEBUG a7 => a7_56
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: t0_57 = a0_21 + a1_26;
common/pixel.c:262:13: note: vect_is_simple_use: operand a0_21
common/pixel.c:262:13: note: def_stmt: a0_21 = _17 - _20;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand a1_26
common/pixel.c:262:13: note: def_stmt: a1_26 = _23 - _25;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: # DEBUG t0 => t0_57
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: t1_58 = a0_21 - a1_26;
common/pixel.c:262:13: note: vect_is_simple_use: operand a0_21
common/pixel.c:262:13: note: def_stmt: a0_21 = _17 - _20;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand a1_26
common/pixel.c:262:13: note: def_stmt: a1_26 = _23 - _25;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: # DEBUG t1 => t1_58
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: t2_59 = a2_31 + a3_36;
common/pixel.c:262:13: note: vect_is_simple_use: operand a2_31
common/pixel.c:262:13: note: def_stmt: a2_31 = _28 - _30;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand a3_36
common/pixel.c:262:13: note: def_stmt: a3_36 = _33 - _35;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: # DEBUG t2 => t2_59
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: t3_60 = a2_31 - a3_36;
common/pixel.c:262:13: note: vect_is_simple_use: operand a2_31
common/pixel.c:262:13: note: def_stmt: a2_31 = _28 - _30;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand a3_36
common/pixel.c:262:13: note: def_stmt: a3_36 = _33 - _35;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: # DEBUG t3 => t3_60
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: b0_61 = t0_57 + t2_59;
common/pixel.c:262:13: note: vect_is_simple_use: operand t0_57
common/pixel.c:262:13: note: def_stmt: t0_57 = a0_21 + a1_26;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand t2_59
common/pixel.c:262:13: note: def_stmt: t2_59 = a2_31 + a3_36;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: # DEBUG b0 => b0_61
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: b2_62 = t0_57 - t2_59;
common/pixel.c:262:13: note: vect_is_simple_use: operand t0_57
common/pixel.c:262:13: note: def_stmt: t0_57 = a0_21 + a1_26;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand t2_59
common/pixel.c:262:13: note: def_stmt: t2_59 = a2_31 + a3_36;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: # DEBUG b2 => b2_62
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: b1_63 = t1_58 + t3_60;
common/pixel.c:262:13: note: vect_is_simple_use: operand t1_58
common/pixel.c:262:13: note: def_stmt: t1_58 = a0_21 - a1_26;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand t3_60
common/pixel.c:262:13: note: def_stmt: t3_60 = a2_31 - a3_36;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: # DEBUG b1 => b1_63
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: b3_64 = t1_58 - t3_60;
common/pixel.c:262:13: note: vect_is_simple_use: operand t1_58
common/pixel.c:262:13: note: def_stmt: t1_58 = a0_21 - a1_26;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand t3_60
common/pixel.c:262:13: note: def_stmt: t3_60 = a2_31 - a3_36;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: # DEBUG b3 => b3_64
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: t0_65 = a4_41 + a5_46;
common/pixel.c:262:13: note: vect_is_simple_use: operand a4_41
common/pixel.c:262:13: note: def_stmt: a4_41 = _38 - _40;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand a5_46
common/pixel.c:262:13: note: def_stmt: a5_46 = _43 - _45;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: # DEBUG t0 => t0_65
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: t1_66 = a4_41 - a5_46;
common/pixel.c:262:13: note: vect_is_simple_use: operand a4_41
common/pixel.c:262:13: note: def_stmt: a4_41 = _38 - _40;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand a5_46
common/pixel.c:262:13: note: def_stmt: a5_46 = _43 - _45;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: # DEBUG t1 => t1_66
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: t2_67 = a6_51 + a7_56;
common/pixel.c:262:13: note: vect_is_simple_use: operand a6_51
common/pixel.c:262:13: note: def_stmt: a6_51 = _48 - _50;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand a7_56
common/pixel.c:262:13: note: def_stmt: a7_56 = _53 - _55;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: # DEBUG t2 => t2_67
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: t3_68 = a6_51 - a7_56;
common/pixel.c:262:13: note: vect_is_simple_use: operand a6_51
common/pixel.c:262:13: note: def_stmt: a6_51 = _48 - _50;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand a7_56
common/pixel.c:262:13: note: def_stmt: a7_56 = _53 - _55;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: # DEBUG t3 => t3_68
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: b4_69 = t0_65 + t2_67;
common/pixel.c:262:13: note: vect_is_simple_use: operand t0_65
common/pixel.c:262:13: note: def_stmt: t0_65 = a4_41 + a5_46;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand t2_67
common/pixel.c:262:13: note: def_stmt: t2_67 = a6_51 + a7_56;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: # DEBUG b4 => b4_69
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: b6_70 = t0_65 - t2_67;
common/pixel.c:262:13: note: vect_is_simple_use: operand t0_65
common/pixel.c:262:13: note: def_stmt: t0_65 = a4_41 + a5_46;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand t2_67
common/pixel.c:262:13: note: def_stmt: t2_67 = a6_51 + a7_56;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: # DEBUG b6 => b6_70
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: b5_71 = t1_66 + t3_68;
common/pixel.c:262:13: note: vect_is_simple_use: operand t1_66
common/pixel.c:262:13: note: def_stmt: t1_66 = a4_41 - a5_46;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand t3_68
common/pixel.c:262:13: note: def_stmt: t3_68 = a6_51 - a7_56;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: # DEBUG b5 => b5_71
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: b7_72 = t1_66 - t3_68;
common/pixel.c:262:13: note: vect_is_simple_use: operand t1_66
common/pixel.c:262:13: note: def_stmt: t1_66 = a4_41 - a5_46;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand t3_68
common/pixel.c:262:13: note: def_stmt: t3_68 = a6_51 - a7_56;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: # DEBUG b7 => b7_72
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: _73 = (unsigned short) b0_61;
common/pixel.c:262:13: note: vect_is_simple_use: operand b0_61
common/pixel.c:262:13: note: def_stmt: b0_61 = t0_57 + t2_59;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_conversion ===
common/pixel.c:262:13: note: vect_model_promotion_demotion_cost: inside_cost = 1, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _74 = (unsigned short) b4_69;
common/pixel.c:262:13: note: vect_is_simple_use: operand b4_69
common/pixel.c:262:13: note: def_stmt: b4_69 = t0_65 + t2_67;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_conversion ===
common/pixel.c:262:13: note: vect_model_promotion_demotion_cost: inside_cost = 1, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _75 = _73 + _74;
common/pixel.c:262:13: note: vect_is_simple_use: operand _73
common/pixel.c:262:13: note: def_stmt: _73 = (unsigned short) b0_61;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _74
common/pixel.c:262:13: note: def_stmt: _74 = (unsigned short) b4_69;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _76 = (short int) _75;
common/pixel.c:262:13: note: vect_is_simple_use: operand _75
common/pixel.c:262:13: note: def_stmt: _75 = _73 + _74;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _75
common/pixel.c:262:13: note: def_stmt: _75 = _73 + _74;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: no optab.
common/pixel.c:262:13: note: vect_is_simple_use: operand _75
common/pixel.c:262:13: note: def_stmt: _75 = _73 + _74;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_assignment ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: diff[i_208][0] = _76;
common/pixel.c:262:13: note: vect_is_simple_use: operand _76
common/pixel.c:262:13: note: def_stmt: _76 = (short int) _75;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: no array mode for V8HI[8]
common/pixel.c:262:13: note: vect_is_simple_use: operand _83
common/pixel.c:262:13: note: def_stmt: _83 = (short int) _82;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _89
common/pixel.c:262:13: note: def_stmt: _89 = (short int) _88;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _95
common/pixel.c:262:13: note: def_stmt: _95 = (short int) _94;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _79
common/pixel.c:262:13: note: def_stmt: _79 = (short int) _78;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _85
common/pixel.c:262:13: note: def_stmt: _85 = (short int) _84;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _91
common/pixel.c:262:13: note: def_stmt: _91 = (short int) _90;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _97
common/pixel.c:262:13: note: def_stmt: _97 = (short int) _96;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_model_store_cost: strided group_size = 8 .
common/pixel.c:262:13: note: vect_model_store_cost: aligned.
common/pixel.c:262:13: note: vect_model_store_cost: inside_cost = 50, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _78 = _73 - _74;
common/pixel.c:262:13: note: vect_is_simple_use: operand _73
common/pixel.c:262:13: note: def_stmt: _73 = (unsigned short) b0_61;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _74
common/pixel.c:262:13: note: def_stmt: _74 = (unsigned short) b4_69;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _79 = (short int) _78;
common/pixel.c:262:13: note: vect_is_simple_use: operand _78
common/pixel.c:262:13: note: def_stmt: _78 = _73 - _74;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _78
common/pixel.c:262:13: note: def_stmt: _78 = _73 - _74;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: no optab.
common/pixel.c:262:13: note: vect_is_simple_use: operand _78
common/pixel.c:262:13: note: def_stmt: _78 = _73 - _74;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_assignment ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: diff[i_208][4] = _79;
common/pixel.c:262:13: note: vect_is_simple_use: operand _79
common/pixel.c:262:13: note: def_stmt: _79 = (short int) _78;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: no array mode for V8HI[8]
common/pixel.c:262:13: note: vect_model_store_cost: aligned.
common/pixel.c:262:13: note: vect_model_store_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _80 = (unsigned short) b1_63;
common/pixel.c:262:13: note: vect_is_simple_use: operand b1_63
common/pixel.c:262:13: note: def_stmt: b1_63 = t1_58 + t3_60;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_conversion ===
common/pixel.c:262:13: note: vect_model_promotion_demotion_cost: inside_cost = 1, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _81 = (unsigned short) b5_71;
common/pixel.c:262:13: note: vect_is_simple_use: operand b5_71
common/pixel.c:262:13: note: def_stmt: b5_71 = t1_66 + t3_68;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_conversion ===
common/pixel.c:262:13: note: vect_model_promotion_demotion_cost: inside_cost = 1, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _82 = _80 + _81;
common/pixel.c:262:13: note: vect_is_simple_use: operand _80
common/pixel.c:262:13: note: def_stmt: _80 = (unsigned short) b1_63;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _81
common/pixel.c:262:13: note: def_stmt: _81 = (unsigned short) b5_71;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _83 = (short int) _82;
common/pixel.c:262:13: note: vect_is_simple_use: operand _82
common/pixel.c:262:13: note: def_stmt: _82 = _80 + _81;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _82
common/pixel.c:262:13: note: def_stmt: _82 = _80 + _81;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: no optab.
common/pixel.c:262:13: note: vect_is_simple_use: operand _82
common/pixel.c:262:13: note: def_stmt: _82 = _80 + _81;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_assignment ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: diff[i_208][1] = _83;
common/pixel.c:262:13: note: vect_is_simple_use: operand _83
common/pixel.c:262:13: note: def_stmt: _83 = (short int) _82;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: no array mode for V8HI[8]
common/pixel.c:262:13: note: vect_model_store_cost: aligned.
common/pixel.c:262:13: note: vect_model_store_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _84 = _80 - _81;
common/pixel.c:262:13: note: vect_is_simple_use: operand _80
common/pixel.c:262:13: note: def_stmt: _80 = (unsigned short) b1_63;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _81
common/pixel.c:262:13: note: def_stmt: _81 = (unsigned short) b5_71;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _85 = (short int) _84;
common/pixel.c:262:13: note: vect_is_simple_use: operand _84
common/pixel.c:262:13: note: def_stmt: _84 = _80 - _81;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _84
common/pixel.c:262:13: note: def_stmt: _84 = _80 - _81;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: no optab.
common/pixel.c:262:13: note: vect_is_simple_use: operand _84
common/pixel.c:262:13: note: def_stmt: _84 = _80 - _81;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_assignment ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: diff[i_208][5] = _85;
common/pixel.c:262:13: note: vect_is_simple_use: operand _85
common/pixel.c:262:13: note: def_stmt: _85 = (short int) _84;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: no array mode for V8HI[8]
common/pixel.c:262:13: note: vect_model_store_cost: aligned.
common/pixel.c:262:13: note: vect_model_store_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _86 = (unsigned short) b2_62;
common/pixel.c:262:13: note: vect_is_simple_use: operand b2_62
common/pixel.c:262:13: note: def_stmt: b2_62 = t0_57 - t2_59;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_conversion ===
common/pixel.c:262:13: note: vect_model_promotion_demotion_cost: inside_cost = 1, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _87 = (unsigned short) b6_70;
common/pixel.c:262:13: note: vect_is_simple_use: operand b6_70
common/pixel.c:262:13: note: def_stmt: b6_70 = t0_65 - t2_67;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_conversion ===
common/pixel.c:262:13: note: vect_model_promotion_demotion_cost: inside_cost = 1, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _88 = _86 + _87;
common/pixel.c:262:13: note: vect_is_simple_use: operand _86
common/pixel.c:262:13: note: def_stmt: _86 = (unsigned short) b2_62;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _87
common/pixel.c:262:13: note: def_stmt: _87 = (unsigned short) b6_70;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _89 = (short int) _88;
common/pixel.c:262:13: note: vect_is_simple_use: operand _88
common/pixel.c:262:13: note: def_stmt: _88 = _86 + _87;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _88
common/pixel.c:262:13: note: def_stmt: _88 = _86 + _87;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: no optab.
common/pixel.c:262:13: note: vect_is_simple_use: operand _88
common/pixel.c:262:13: note: def_stmt: _88 = _86 + _87;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_assignment ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: diff[i_208][2] = _89;
common/pixel.c:262:13: note: vect_is_simple_use: operand _89
common/pixel.c:262:13: note: def_stmt: _89 = (short int) _88;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: no array mode for V8HI[8]
common/pixel.c:262:13: note: vect_model_store_cost: aligned.
common/pixel.c:262:13: note: vect_model_store_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _90 = _86 - _87;
common/pixel.c:262:13: note: vect_is_simple_use: operand _86
common/pixel.c:262:13: note: def_stmt: _86 = (unsigned short) b2_62;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _87
common/pixel.c:262:13: note: def_stmt: _87 = (unsigned short) b6_70;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _91 = (short int) _90;
common/pixel.c:262:13: note: vect_is_simple_use: operand _90
common/pixel.c:262:13: note: def_stmt: _90 = _86 - _87;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _90
common/pixel.c:262:13: note: def_stmt: _90 = _86 - _87;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: no optab.
common/pixel.c:262:13: note: vect_is_simple_use: operand _90
common/pixel.c:262:13: note: def_stmt: _90 = _86 - _87;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_assignment ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: diff[i_208][6] = _91;
common/pixel.c:262:13: note: vect_is_simple_use: operand _91
common/pixel.c:262:13: note: def_stmt: _91 = (short int) _90;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: no array mode for V8HI[8]
common/pixel.c:262:13: note: vect_model_store_cost: aligned.
common/pixel.c:262:13: note: vect_model_store_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _92 = (unsigned short) b3_64;
common/pixel.c:262:13: note: vect_is_simple_use: operand b3_64
common/pixel.c:262:13: note: def_stmt: b3_64 = t1_58 - t3_60;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_conversion ===
common/pixel.c:262:13: note: vect_model_promotion_demotion_cost: inside_cost = 1, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _93 = (unsigned short) b7_72;
common/pixel.c:262:13: note: vect_is_simple_use: operand b7_72
common/pixel.c:262:13: note: def_stmt: b7_72 = t1_66 - t3_68;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_conversion ===
common/pixel.c:262:13: note: vect_model_promotion_demotion_cost: inside_cost = 1, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _94 = _92 + _93;
common/pixel.c:262:13: note: vect_is_simple_use: operand _92
common/pixel.c:262:13: note: def_stmt: _92 = (unsigned short) b3_64;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _93
common/pixel.c:262:13: note: def_stmt: _93 = (unsigned short) b7_72;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _95 = (short int) _94;
common/pixel.c:262:13: note: vect_is_simple_use: operand _94
common/pixel.c:262:13: note: def_stmt: _94 = _92 + _93;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _94
common/pixel.c:262:13: note: def_stmt: _94 = _92 + _93;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: no optab.
common/pixel.c:262:13: note: vect_is_simple_use: operand _94
common/pixel.c:262:13: note: def_stmt: _94 = _92 + _93;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_assignment ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: diff[i_208][3] = _95;
common/pixel.c:262:13: note: vect_is_simple_use: operand _95
common/pixel.c:262:13: note: def_stmt: _95 = (short int) _94;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: no array mode for V8HI[8]
common/pixel.c:262:13: note: vect_model_store_cost: aligned.
common/pixel.c:262:13: note: vect_model_store_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _96 = _92 - _93;
common/pixel.c:262:13: note: vect_is_simple_use: operand _92
common/pixel.c:262:13: note: def_stmt: _92 = (unsigned short) b3_64;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _93
common/pixel.c:262:13: note: def_stmt: _93 = (unsigned short) b7_72;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _97 = (short int) _96;
common/pixel.c:262:13: note: vect_is_simple_use: operand _96
common/pixel.c:262:13: note: def_stmt: _96 = _92 - _93;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _96
common/pixel.c:262:13: note: def_stmt: _96 = _92 - _93;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: no optab.
common/pixel.c:262:13: note: vect_is_simple_use: operand _96
common/pixel.c:262:13: note: def_stmt: _96 = _92 - _93;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_assignment ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: diff[i_208][7] = _97;
common/pixel.c:262:13: note: vect_is_simple_use: operand _97
common/pixel.c:262:13: note: def_stmt: _97 = (short int) _96;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: no array mode for V8HI[8]
common/pixel.c:262:13: note: vect_model_store_cost: aligned.
common/pixel.c:262:13: note: vect_model_store_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: i_98 = i_208 + 1;
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: # DEBUG i => i_98
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: p1_100 = p1_206 + pretmp_739;
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: # DEBUG p1 => p1_100
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: p2_102 = p2_207 + pretmp_740;
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: # DEBUG p2 => p2_102
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: # DEBUG p2 => p2_102
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: # DEBUG p1 => p1_100
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: # DEBUG i => i_98
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: ivtmp_732 = ivtmp_733 - 1;
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: if (ivtmp_732 != 0)
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: vectorization_factor = 16, niters = 8
common/pixel.c:262:13: note: not vectorized: iteration count too small.
common/pixel.c:262:13: note: not vectorized: iteration count smaller than vectorization factor.
common/pixel.c:262:13: note: bad operation or unsupported loop bound.
common/pixel.c:297:1: note: vectorized 0 loops in function.
x264_pixel_sa8d_16x16 (uint8_t * pix1, int i_stride_pix1, uint8_t * pix2, int i_stride_pix2)
{
  int16_t diff[8][8];
  int i_satd;
  int x;
  int y;
  int i;
  uint8_t * p1;
  uint8_t * p2;
  int a0;
  int a1;
  int a2;
  int a3;
  int a4;
  int a5;
  int a6;
  int a7;
  int b0;
  int b1;
  int b2;
  int b3;
  int b4;
  int b5;
  int b6;
  int b7;
  int t0;
  int t1;
  int t2;
  int t3;
  int t0;
  int t1;
  int t2;
  int t3;
  int b0;
  int b1;
  int b2;
  int b3;
  int b4;
  int b5;
  int b6;
  int b7;
  int t0;
  int t1;
  int t2;
  int t3;
  int t0;
  int t1;
  int t2;
  int t3;
  int D.12808;
  uint8_t * pix1;
  uint8_t * pix2;
  int _7;
  int _8;
  sizetype _10;
  unsigned char _16;
  int _17;
  unsigned char _19;
  int _20;
  unsigned char _22;
  int _23;
  unsigned char _24;
  int _25;
  unsigned char _27;
  int _28;
  unsigned char _29;
  int _30;
  unsigned char _32;
  int _33;
  unsigned char _34;
  int _35;
  unsigned char _37;
  int _38;
  unsigned char _39;
  int _40;
  unsigned char _42;
  int _43;
  unsigned char _44;
  int _45;
  unsigned char _47;
  int _48;
  unsigned char _49;
  int _50;
  unsigned char _52;
  int _53;
  unsigned char _54;
  int _55;
  unsigned short _73;
  unsigned short _74;
  unsigned short _75;
  short int _76;
  unsigned short _78;
  short int _79;
  unsigned short _80;
  unsigned short _81;
  unsigned short _82;
  short int _83;
  unsigned short _84;
  short int _85;
  unsigned short _86;
  unsigned short _87;
  unsigned short _88;
  short int _89;
  unsigned short _90;
  short int _91;
  unsigned short _92;
  unsigned short _93;
  unsigned short _94;
  short int _95;
  unsigned short _96;
  short int _97;
  short int _104;
  int _105;
  short int _106;
  int _107;
  short int _110;
  int _111;
  short int _112;
  int _113;
  short int _120;
  int _121;
  short int _122;
  int _123;
  short int _126;
  int _127;
  short int _128;
  int _129;
  int _136;
  int _137;
  int _140;
  int _141;
  int _143;
  int _144;
  int _146;
  int _147;
  int _149;
  int _150;
  int _152;
  int _153;
  int _155;
  int _156;
  int _158;
  int _159;
  unsigned int ivtmp_728;
  unsigned int ivtmp_729;
  unsigned int ivtmp_730;
  unsigned int ivtmp_731;
  unsigned int ivtmp_732;
  unsigned int ivtmp_733;
  unsigned int ivtmp_737;
  unsigned int ivtmp_738;
  sizetype pretmp_739;
  sizetype pretmp_740;
  int pretmp_741;
  sizetype pretmp_742;
  int pretmp_743;
  sizetype pretmp_744;

  <bb 2>:
  # DEBUG pix1 => pix1_2(D)
  # DEBUG i_pix1 => i_stride_pix1_3(D)
  # DEBUG pix2 => pix2_4(D)
  # DEBUG i_pix2 => i_stride_pix2_5(D)
  # DEBUG i_width => 16
  # DEBUG i_height => 16
  # DEBUG i_satd => 0
  # DEBUG y => 0
  # DEBUG y => 0
  # DEBUG i_satd => 0
  # DEBUG pix2 => pix2_4(D)
  # DEBUG pix1 => pix1_2(D)
  pretmp_739 = (sizetype) i_stride_pix1_3(D);
  pretmp_740 = (sizetype) i_stride_pix2_5(D);
  pretmp_741 = i_stride_pix1_3(D) * 8;
  pretmp_742 = (sizetype) pretmp_741;
  pretmp_743 = i_stride_pix2_5(D) * 8;
  pretmp_744 = (sizetype) pretmp_743;
  goto <bb 13>;

  <bb 3>:

  <bb 4>:
  # x_172 = PHI <x_162(3), 0(13)>
  # i_satd_213 = PHI <i_satd_736(3), i_satd_212(13)>
  # ivtmp_731 = PHI <ivtmp_730(3), 2(13)>
  # DEBUG x => x_172
  # DEBUG i_satd => i_satd_213
  _10 = (sizetype) x_172;
  p1_12 = pix1_175 + _10;
  # DEBUG p1 => p1_12
  p2_14 = pix2_189 + _10;
  # DEBUG p2 => p2_14
  # DEBUG i => 0
  # DEBUG p2 => p2_14
  # DEBUG p1 => p1_12
  # DEBUG i => 0

  <bb 5>:
  # p1_206 = PHI <p1_100(6), p1_12(4)>
  # p2_207 = PHI <p2_102(6), p2_14(4)>
  # i_208 = PHI <i_98(6), 0(4)>
  # ivtmp_733 = PHI <ivtmp_732(6), 8(4)>
  # DEBUG p2 => p2_207
  # DEBUG p1 => p1_206
  # DEBUG i => i_208
  _16 = *p1_206;
  _17 = (int) _16;
  _19 = *p2_207;
  _20 = (int) _19;
  a0_21 = _17 - _20;
  # DEBUG a0 => a0_21
  _22 = MEM[(uint8_t *)p1_206 + 1B];
  _23 = (int) _22;
  _24 = MEM[(uint8_t *)p2_207 + 1B];
  _25 = (int) _24;
  a1_26 = _23 - _25;
  # DEBUG a1 => a1_26
  _27 = MEM[(uint8_t *)p1_206 + 2B];
  _28 = (int) _27;
  _29 = MEM[(uint8_t *)p2_207 + 2B];
  _30 = (int) _29;
  a2_31 = _28 - _30;
  # DEBUG a2 => a2_31
  _32 = MEM[(uint8_t *)p1_206 + 3B];
  _33 = (int) _32;
  _34 = MEM[(uint8_t *)p2_207 + 3B];
  _35 = (int) _34;
  a3_36 = _33 - _35;
  # DEBUG a3 => a3_36
  _37 = MEM[(uint8_t *)p1_206 + 4B];
  _38 = (int) _37;
  _39 = MEM[(uint8_t *)p2_207 + 4B];
  _40 = (int) _39;
  a4_41 = _38 - _40;
  # DEBUG a4 => a4_41
  _42 = MEM[(uint8_t *)p1_206 + 5B];
  _43 = (int) _42;
  _44 = MEM[(uint8_t *)p2_207 + 5B];
  _45 = (int) _44;
  a5_46 = _43 - _45;
  # DEBUG a5 => a5_46
  _47 = MEM[(uint8_t *)p1_206 + 6B];
  _48 = (int) _47;
  _49 = MEM[(uint8_t *)p2_207 + 6B];
  _50 = (int) _49;
  a6_51 = _48 - _50;
  # DEBUG a6 => a6_51
  _52 = MEM[(uint8_t *)p1_206 + 7B];
  _53 = (int) _52;
  _54 = MEM[(uint8_t *)p2_207 + 7B];
  _55 = (int) _54;
  a7_56 = _53 - _55;
  # DEBUG a7 => a7_56
  t0_57 = a0_21 + a1_26;
  # DEBUG t0 => t0_57
  t1_58 = a0_21 - a1_26;
  # DEBUG t1 => t1_58
  t2_59 = a2_31 + a3_36;
  # DEBUG t2 => t2_59
  t3_60 = a2_31 - a3_36;
  # DEBUG t3 => t3_60
  b0_61 = t0_57 + t2_59;
  # DEBUG b0 => b0_61
  b2_62 = t0_57 - t2_59;
  # DEBUG b2 => b2_62
  b1_63 = t1_58 + t3_60;
  # DEBUG b1 => b1_63
  b3_64 = t1_58 - t3_60;
  # DEBUG b3 => b3_64
  t0_65 = a4_41 + a5_46;
  # DEBUG t0 => t0_65
  t1_66 = a4_41 - a5_46;
  # DEBUG t1 => t1_66
  t2_67 = a6_51 + a7_56;
  # DEBUG t2 => t2_67
  t3_68 = a6_51 - a7_56;
  # DEBUG t3 => t3_68
  b4_69 = t0_65 + t2_67;
  # DEBUG b4 => b4_69
  b6_70 = t0_65 - t2_67;
  # DEBUG b6 => b6_70
  b5_71 = t1_66 + t3_68;
  # DEBUG b5 => b5_71
  b7_72 = t1_66 - t3_68;
  # DEBUG b7 => b7_72
  _73 = (unsigned short) b0_61;
  _74 = (unsigned short) b4_69;
  _75 = _73 + _74;
  _76 = (short int) _75;
  diff[i_208][0] = _76;
  _78 = _73 - _74;
  _79 = (short int) _78;
  diff[i_208][4] = _79;
  _80 = (unsigned short) b1_63;
  _81 = (unsigned short) b5_71;
  _82 = _80 + _81;
  _83 = (short int) _82;
  diff[i_208][1] = _83;
  _84 = _80 - _81;
  _85 = (short int) _84;
  diff[i_208][5] = _85;
  _86 = (unsigned short) b2_62;
  _87 = (unsigned short) b6_70;
  _88 = _86 + _87;
  _89 = (short int) _88;
  diff[i_208][2] = _89;
  _90 = _86 - _87;
  _91 = (short int) _90;
  diff[i_208][6] = _91;
  _92 = (unsigned short) b3_64;
  _93 = (unsigned short) b7_72;
  _94 = _92 + _93;
  _95 = (short int) _94;
  diff[i_208][3] = _95;
  _96 = _92 - _93;
  _97 = (short int) _96;
  diff[i_208][7] = _97;
  i_98 = i_208 + 1;
  # DEBUG i => i_98
  p1_100 = p1_206 + pretmp_739;
  # DEBUG p1 => p1_100
  p2_102 = p2_207 + pretmp_740;
  # DEBUG p2 => p2_102
  # DEBUG p2 => p2_102
  # DEBUG p1 => p1_100
  # DEBUG i => i_98
  ivtmp_732 = ivtmp_733 - 1;
  if (ivtmp_732 != 0)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  goto <bb 5>;

  <bb 7>:

  <bb 8>:
  # i_209 = PHI <0(7), i_161(9)>
  # i_satd_210 = PHI <i_satd_213(7), i_satd_160(9)>
  # ivtmp_738 = PHI <8(7), ivtmp_737(9)>
  # DEBUG i => i_209
  # DEBUG i_satd => i_satd_210
  _104 = diff[0][i_209];
  _105 = (int) _104;
  _106 = diff[1][i_209];
  _107 = (int) _106;
  t0_108 = _105 + _107;
  # DEBUG t0 => t0_108
  t1_109 = _105 - _107;
  # DEBUG t1 => t1_109
  _110 = diff[2][i_209];
  _111 = (int) _110;
  _112 = diff[3][i_209];
  _113 = (int) _112;
  t2_114 = _111 + _113;
  # DEBUG t2 => t2_114
  t3_115 = _111 - _113;
  # DEBUG t3 => t3_115
  b0_116 = t0_108 + t2_114;
  # DEBUG b0 => b0_116
  b2_117 = t0_108 - t2_114;
  # DEBUG b2 => b2_117
  b1_118 = t1_109 + t3_115;
  # DEBUG b1 => b1_118
  b3_119 = t1_109 - t3_115;
  # DEBUG b3 => b3_119
  _120 = diff[4][i_209];
  _121 = (int) _120;
  _122 = diff[5][i_209];
  _123 = (int) _122;
  t0_124 = _121 + _123;
  # DEBUG t0 => t0_124
  t1_125 = _121 - _123;
  # DEBUG t1 => t1_125
  _126 = diff[6][i_209];
  _127 = (int) _126;
  _128 = diff[7][i_209];
  _129 = (int) _128;
  t2_130 = _127 + _129;
  # DEBUG t2 => t2_130
  t3_131 = _127 - _129;
  # DEBUG t3 => t3_131
  b4_132 = t0_124 + t2_130;
  # DEBUG b4 => b4_132
  b6_133 = t0_124 - t2_130;
  # DEBUG b6 => b6_133
  b5_134 = t1_125 + t3_131;
  # DEBUG b5 => b5_134
  b7_135 = t1_125 - t3_131;
  # DEBUG b7 => b7_135
  _136 = b0_116 + b4_132;
  _137 = ABS_EXPR <_136>;
  i_satd_139 = _137 + i_satd_210;
  # DEBUG i_satd => i_satd_139
  _140 = b0_116 - b4_132;
  _141 = ABS_EXPR <_140>;
  i_satd_142 = _141 + i_satd_139;
  # DEBUG i_satd => i_satd_142
  _143 = b1_118 + b5_134;
  _144 = ABS_EXPR <_143>;
  i_satd_145 = _144 + i_satd_142;
  # DEBUG i_satd => i_satd_145
  _146 = b1_118 - b5_134;
  _147 = ABS_EXPR <_146>;
  i_satd_148 = _147 + i_satd_145;
  # DEBUG i_satd => i_satd_148
  _149 = b2_117 + b6_133;
  _150 = ABS_EXPR <_149>;
  i_satd_151 = _150 + i_satd_148;
  # DEBUG i_satd => i_satd_151
  _152 = b2_117 - b6_133;
  _153 = ABS_EXPR <_152>;
  i_satd_154 = _153 + i_satd_151;
  # DEBUG i_satd => i_satd_154
  _155 = b3_119 + b7_135;
  _156 = ABS_EXPR <_155>;
  i_satd_157 = _156 + i_satd_154;
  # DEBUG i_satd => i_satd_157
  _158 = b3_119 - b7_135;
  _159 = ABS_EXPR <_158>;
  i_satd_160 = _159 + i_satd_157;
  # DEBUG i_satd => i_satd_160
  i_161 = i_209 + 1;
  # DEBUG i => i_161
  # DEBUG i => i_161
  # DEBUG i_satd => i_satd_160
  ivtmp_737 = ivtmp_738 - 1;
  if (ivtmp_737 != 0)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  goto <bb 8>;

  <bb 10>:
  # i_satd_736 = PHI <i_satd_160(8)>
  x_162 = x_172 + 8;
  # DEBUG x => x_162
  # DEBUG x => x_162
  # DEBUG i_satd => i_satd_736
  ivtmp_730 = ivtmp_731 - 1;
  if (ivtmp_730 != 0)
    goto <bb 3>;
  else
    goto <bb 11>;

  <bb 11>:
  # i_satd_735 = PHI <i_satd_736(10)>
  pix1_165 = pix1_175 + pretmp_742;
  # DEBUG pix1 => pix1_165
  pix2_168 = pix2_189 + pretmp_744;
  # DEBUG pix2 => pix2_168
  y_170 = y_211 + 8;
  # DEBUG y => y_170
  # DEBUG y => y_170
  # DEBUG i_satd => i_satd_735
  # DEBUG pix2 => pix2_168
  # DEBUG pix1 => pix1_165
  ivtmp_728 = ivtmp_729 - 1;
  if (ivtmp_728 != 0)
    goto <bb 12>;
  else
    goto <bb 14>;

  <bb 12>:

  <bb 13>:
  # pix1_175 = PHI <pix1_165(12), pix1_2(D)(2)>
  # pix2_189 = PHI <pix2_168(12), pix2_4(D)(2)>
  # y_211 = PHI <y_170(12), 0(2)>
  # i_satd_212 = PHI <i_satd_735(12), 0(2)>
  # ivtmp_729 = PHI <ivtmp_728(12), 2(2)>
  # DEBUG y => y_211
  # DEBUG i_satd => i_satd_212
  # DEBUG pix2 => pix2_189
  # DEBUG pix1 => pix1_175
  # DEBUG x => 0
  # DEBUG i_satd => i_satd_212
  goto <bb 4>;

  <bb 14>:
  # i_satd_734 = PHI <i_satd_735(11)>
  diff ={v} {CLOBBER};
  # DEBUG pix1 => NULL
  # DEBUG i_pix1 => NULL
  # DEBUG pix2 => NULL
  # DEBUG i_pix2 => NULL
  # DEBUG i_width => NULL
  # DEBUG i_height => NULL
  # DEBUG t3 => NULL
  # DEBUG t2 => NULL
  # DEBUG t1 => NULL
  # DEBUG t0 => NULL
  # DEBUG t3 => NULL
  # DEBUG t2 => NULL
  # DEBUG t1 => NULL
  # DEBUG t0 => NULL
  # DEBUG b7 => NULL
  # DEBUG b6 => NULL
  # DEBUG b5 => NULL
  # DEBUG b4 => NULL
  # DEBUG b3 => NULL
  # DEBUG b2 => NULL
  # DEBUG b1 => NULL
  # DEBUG b0 => NULL
  # DEBUG t3 => NULL
  # DEBUG t2 => NULL
  # DEBUG t1 => NULL
  # DEBUG t0 => NULL
  # DEBUG t3 => NULL
  # DEBUG t2 => NULL
  # DEBUG t1 => NULL
  # DEBUG t0 => NULL
  # DEBUG b7 => NULL
  # DEBUG b6 => NULL
  # DEBUG b5 => NULL
  # DEBUG b4 => NULL
  # DEBUG b3 => NULL
  # DEBUG b2 => NULL
  # DEBUG b1 => NULL
  # DEBUG b0 => NULL
  # DEBUG a7 => NULL
  # DEBUG a6 => NULL
  # DEBUG a5 => NULL
  # DEBUG a4 => NULL
  # DEBUG a3 => NULL
  # DEBUG a2 => NULL
  # DEBUG a1 => NULL
  # DEBUG a0 => NULL
  # DEBUG p2 => NULL
  # DEBUG p1 => NULL
  # DEBUG i => NULL
  # DEBUG y => NULL
  # DEBUG x => NULL
  # DEBUG i_satd => NULL
  _7 = i_satd_734 + 2;
  _8 = _7 >> 2;
  return _8;

}



;; Function x264_pixel_sa8d_16x8 (x264_pixel_sa8d_16x8, funcdef_no=142, decl_uid=7936, cgraph_uid=142, symbol_order=185)


Analyzing loop at common/pixel.c:255
common/pixel.c:255:9: note: ===== analyze_loop_nest =====
common/pixel.c:255:9: note: === vect_analyze_loop_form ===
common/pixel.c:255:9: note: not vectorized: multiple nested loops.
common/pixel.c:255:9: note: bad loop form.

Analyzing loop at common/pixel.c:279
common/pixel.c:279:13: note: ===== analyze_loop_nest =====
common/pixel.c:279:13: note: === vect_analyze_loop_form ===
common/pixel.c:279:13: note: === get_loop_niters ===
Analyzing # of iterations of loop 6
  exit condition [7, + , 4294967295] != 0
  bounds on difference of bases: -7 ... -7
  result:
    # of iterations 7, bounded by 7
common/pixel.c:279:13: note: === vect_analyze_data_refs ===
Creating dr for diff[0][i_165]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &diff
	offset from base address: 0
	constant offset from base address: 0
	step: 2
	aligned to: 128
	base_object: diff
	Access function 0: {0, +, 1}_6
	Access function 1: 0
Creating dr for diff[1][i_165]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &diff
	offset from base address: 0
	constant offset from base address: 16
	step: 2
	aligned to: 128
	base_object: diff
	Access function 0: {0, +, 1}_6
	Access function 1: 1
Creating dr for diff[2][i_165]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &diff
	offset from base address: 0
	constant offset from base address: 32
	step: 2
	aligned to: 128
	base_object: diff
	Access function 0: {0, +, 1}_6
	Access function 1: 2
Creating dr for diff[3][i_165]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &diff
	offset from base address: 0
	constant offset from base address: 48
	step: 2
	aligned to: 128
	base_object: diff
	Access function 0: {0, +, 1}_6
	Access function 1: 3
Creating dr for diff[4][i_165]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &diff
	offset from base address: 0
	constant offset from base address: 64
	step: 2
	aligned to: 128
	base_object: diff
	Access function 0: {0, +, 1}_6
	Access function 1: 4
Creating dr for diff[5][i_165]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &diff
	offset from base address: 0
	constant offset from base address: 80
	step: 2
	aligned to: 128
	base_object: diff
	Access function 0: {0, +, 1}_6
	Access function 1: 5
Creating dr for diff[6][i_165]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &diff
	offset from base address: 0
	constant offset from base address: 96
	step: 2
	aligned to: 128
	base_object: diff
	Access function 0: {0, +, 1}_6
	Access function 1: 6
Creating dr for diff[7][i_165]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &diff
	offset from base address: 0
	constant offset from base address: 112
	step: 2
	aligned to: 128
	base_object: diff
	Access function 0: {0, +, 1}_6
	Access function 1: 7
common/pixel.c:279:13: note: got vectype for stmt: _211 = diff[0][i_165];
vector(8) short int
common/pixel.c:279:13: note: got vectype for stmt: _213 = diff[1][i_165];
vector(8) short int
common/pixel.c:279:13: note: got vectype for stmt: _217 = diff[2][i_165];
vector(8) short int
common/pixel.c:279:13: note: got vectype for stmt: _219 = diff[3][i_165];
vector(8) short int
common/pixel.c:279:13: note: got vectype for stmt: _227 = diff[4][i_165];
vector(8) short int
common/pixel.c:279:13: note: got vectype for stmt: _229 = diff[5][i_165];
vector(8) short int
common/pixel.c:279:13: note: got vectype for stmt: _233 = diff[6][i_165];
vector(8) short int
common/pixel.c:279:13: note: got vectype for stmt: _235 = diff[7][i_165];
vector(8) short int
common/pixel.c:279:13: note: === vect_analyze_scalar_cycles ===
common/pixel.c:279:13: note: Analyze phi: i_satd_164 = PHI <i_satd_178(4), i_satd_266(6)>

common/pixel.c:279:13: note: Access function of PHI: {i_satd_178, +, ((((((_262 + _265) + _259) + _256) + _253) + _250) + _247) + _244}_6
common/pixel.c:279:13: note: step: ((((((_262 + _265) + _259) + _256) + _253) + _250) + _247) + _244,  init: i_satd_178
common/pixel.c:279:13: note: step unknown.
common/pixel.c:279:13: note: Analyze phi: i_165 = PHI <0(4), i_267(6)>

common/pixel.c:279:13: note: Access function of PHI: {0, +, 1}_6
common/pixel.c:279:13: note: step: 1,  init: 0
common/pixel.c:279:13: note: Detected induction.
common/pixel.c:279:13: note: Analyze phi: ivtmp_578 = PHI <8(4), ivtmp_577(6)>

common/pixel.c:279:13: note: Access function of PHI: {8, +, 4294967295}_6
common/pixel.c:279:13: note: step: 4294967295,  init: 8
common/pixel.c:279:13: note: Detected induction.
common/pixel.c:279:13: note: Analyze phi: i_satd_164 = PHI <i_satd_178(4), i_satd_266(6)>

common/pixel.c:279:13: note: swapping oprnds: i_satd_245 = i_satd_164 + _244;

common/pixel.c:279:13: note: swapping oprnds: i_satd_248 = i_satd_245 + _247;

common/pixel.c:279:13: note: swapping oprnds: i_satd_251 = i_satd_248 + _250;

common/pixel.c:279:13: note: swapping oprnds: i_satd_254 = i_satd_251 + _253;

common/pixel.c:279:13: note: swapping oprnds: i_satd_257 = i_satd_254 + _256;

common/pixel.c:279:13: note: swapping oprnds: i_satd_260 = i_satd_257 + _259;

common/pixel.c:279:13: note: swapping oprnds: i_satd_263 = i_satd_260 + _262;

common/pixel.c:279:13: note: swapping oprnds: i_satd_266 = i_satd_263 + _265;

common/pixel.c:279:13: note: reduction: detected reduction chain: i_satd_266 = _265 + i_satd_263;

common/pixel.c:279:13: note: Detected reduction.
common/pixel.c:279:13: note: === vect_pattern_recog ===
common/pixel.c:279:13: note: vect_is_simple_use: operand _265
common/pixel.c:279:13: note: def_stmt: _265 = ABS_EXPR <_264>;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: vect_is_simple_use: operand _265
common/pixel.c:279:13: note: def_stmt: _265 = ABS_EXPR <_264>;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: vect_is_simple_use: operand _265
common/pixel.c:279:13: note: def_stmt: _265 = ABS_EXPR <_264>;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: vect_is_simple_use: operand b3_226
common/pixel.c:279:13: note: def_stmt: b3_226 = t1_216 - t3_222;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: === vect_analyze_data_ref_accesses ===
common/pixel.c:279:13: note: === vect_mark_stmts_to_be_vectorized ===
common/pixel.c:279:13: note: init: phi relevant? i_satd_164 = PHI <i_satd_178(4), i_satd_266(6)>
common/pixel.c:279:13: note: init: phi relevant? i_165 = PHI <0(4), i_267(6)>
common/pixel.c:279:13: note: init: phi relevant? ivtmp_578 = PHI <8(4), ivtmp_577(6)>
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG i => i_165
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG i_satd => i_satd_164
common/pixel.c:279:13: note: init: stmt relevant? _211 = diff[0][i_165];
common/pixel.c:279:13: note: init: stmt relevant? _212 = (int) _211;
common/pixel.c:279:13: note: init: stmt relevant? _213 = diff[1][i_165];
common/pixel.c:279:13: note: init: stmt relevant? _214 = (int) _213;
common/pixel.c:279:13: note: init: stmt relevant? t0_215 = _212 + _214;
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG t0 => t0_215
common/pixel.c:279:13: note: init: stmt relevant? t1_216 = _212 - _214;
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG t1 => t1_216
common/pixel.c:279:13: note: init: stmt relevant? _217 = diff[2][i_165];
common/pixel.c:279:13: note: init: stmt relevant? _218 = (int) _217;
common/pixel.c:279:13: note: init: stmt relevant? _219 = diff[3][i_165];
common/pixel.c:279:13: note: init: stmt relevant? _220 = (int) _219;
common/pixel.c:279:13: note: init: stmt relevant? t2_221 = _218 + _220;
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG t2 => t2_221
common/pixel.c:279:13: note: init: stmt relevant? t3_222 = _218 - _220;
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG t3 => t3_222
common/pixel.c:279:13: note: init: stmt relevant? b0_223 = t0_215 + t2_221;
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG b0 => b0_223
common/pixel.c:279:13: note: init: stmt relevant? b2_224 = t0_215 - t2_221;
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG b2 => b2_224
common/pixel.c:279:13: note: init: stmt relevant? b1_225 = t1_216 + t3_222;
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG b1 => b1_225
common/pixel.c:279:13: note: init: stmt relevant? b3_226 = t1_216 - t3_222;
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG b3 => b3_226
common/pixel.c:279:13: note: init: stmt relevant? _227 = diff[4][i_165];
common/pixel.c:279:13: note: init: stmt relevant? _228 = (int) _227;
common/pixel.c:279:13: note: init: stmt relevant? _229 = diff[5][i_165];
common/pixel.c:279:13: note: init: stmt relevant? _230 = (int) _229;
common/pixel.c:279:13: note: init: stmt relevant? t0_231 = _228 + _230;
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG t0 => t0_231
common/pixel.c:279:13: note: init: stmt relevant? t1_232 = _228 - _230;
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG t1 => t1_232
common/pixel.c:279:13: note: init: stmt relevant? _233 = diff[6][i_165];
common/pixel.c:279:13: note: init: stmt relevant? _234 = (int) _233;
common/pixel.c:279:13: note: init: stmt relevant? _235 = diff[7][i_165];
common/pixel.c:279:13: note: init: stmt relevant? _236 = (int) _235;
common/pixel.c:279:13: note: init: stmt relevant? t2_237 = _234 + _236;
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG t2 => t2_237
common/pixel.c:279:13: note: init: stmt relevant? t3_238 = _234 - _236;
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG t3 => t3_238
common/pixel.c:279:13: note: init: stmt relevant? b4_239 = t0_231 + t2_237;
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG b4 => b4_239
common/pixel.c:279:13: note: init: stmt relevant? b6_240 = t0_231 - t2_237;
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG b6 => b6_240
common/pixel.c:279:13: note: init: stmt relevant? b5_241 = t1_232 + t3_238;
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG b5 => b5_241
common/pixel.c:279:13: note: init: stmt relevant? b7_242 = t1_232 - t3_238;
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG b7 => b7_242
common/pixel.c:279:13: note: init: stmt relevant? _243 = b0_223 + b4_239;
common/pixel.c:279:13: note: init: stmt relevant? _244 = ABS_EXPR <_243>;
common/pixel.c:279:13: note: init: stmt relevant? i_satd_245 = _244 + i_satd_164;
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG i_satd => i_satd_245
common/pixel.c:279:13: note: init: stmt relevant? _246 = b0_223 - b4_239;
common/pixel.c:279:13: note: init: stmt relevant? _247 = ABS_EXPR <_246>;
common/pixel.c:279:13: note: init: stmt relevant? i_satd_248 = _247 + i_satd_245;
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG i_satd => i_satd_248
common/pixel.c:279:13: note: init: stmt relevant? _249 = b1_225 + b5_241;
common/pixel.c:279:13: note: init: stmt relevant? _250 = ABS_EXPR <_249>;
common/pixel.c:279:13: note: init: stmt relevant? i_satd_251 = _250 + i_satd_248;
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG i_satd => i_satd_251
common/pixel.c:279:13: note: init: stmt relevant? _252 = b1_225 - b5_241;
common/pixel.c:279:13: note: init: stmt relevant? _253 = ABS_EXPR <_252>;
common/pixel.c:279:13: note: init: stmt relevant? i_satd_254 = _253 + i_satd_251;
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG i_satd => i_satd_254
common/pixel.c:279:13: note: init: stmt relevant? _255 = b2_224 + b6_240;
common/pixel.c:279:13: note: init: stmt relevant? _256 = ABS_EXPR <_255>;
common/pixel.c:279:13: note: init: stmt relevant? i_satd_257 = _256 + i_satd_254;
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG i_satd => i_satd_257
common/pixel.c:279:13: note: init: stmt relevant? _258 = b2_224 - b6_240;
common/pixel.c:279:13: note: init: stmt relevant? _259 = ABS_EXPR <_258>;
common/pixel.c:279:13: note: init: stmt relevant? i_satd_260 = _259 + i_satd_257;
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG i_satd => i_satd_260
common/pixel.c:279:13: note: init: stmt relevant? _261 = b3_226 + b7_242;
common/pixel.c:279:13: note: init: stmt relevant? _262 = ABS_EXPR <_261>;
common/pixel.c:279:13: note: init: stmt relevant? i_satd_263 = _262 + i_satd_260;
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG i_satd => i_satd_263
common/pixel.c:279:13: note: init: stmt relevant? _264 = b3_226 - b7_242;
common/pixel.c:279:13: note: init: stmt relevant? _265 = ABS_EXPR <_264>;
common/pixel.c:279:13: note: init: stmt relevant? i_satd_266 = _265 + i_satd_263;
common/pixel.c:279:13: note: vec_stmt_relevant_p: used out of loop.
common/pixel.c:279:13: note: mark relevant 0, live 1.
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG i_satd => i_satd_266
common/pixel.c:279:13: note: init: stmt relevant? i_267 = i_165 + 1;
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG i => i_267
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG i => i_267
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG i_satd => i_satd_266
common/pixel.c:279:13: note: init: stmt relevant? ivtmp_577 = ivtmp_578 - 1;
common/pixel.c:279:13: note: init: stmt relevant? if (ivtmp_577 != 0)
common/pixel.c:279:13: note: worklist: examine stmt: i_satd_266 = _265 + i_satd_263;
common/pixel.c:279:13: note: vect_is_simple_use: operand _265
common/pixel.c:279:13: note: def_stmt: _265 = ABS_EXPR <_264>;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: vect_is_simple_use: operand i_satd_263
common/pixel.c:279:13: note: def_stmt: i_satd_263 = _262 + i_satd_260;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: i_satd_263 = _262 + i_satd_260;
common/pixel.c:279:13: note: vect_is_simple_use: operand _262
common/pixel.c:279:13: note: def_stmt: _262 = ABS_EXPR <_261>;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: vect_is_simple_use: operand i_satd_260
common/pixel.c:279:13: note: def_stmt: i_satd_260 = _259 + i_satd_257;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: i_satd_260 = _259 + i_satd_257;
common/pixel.c:279:13: note: vect_is_simple_use: operand _259
common/pixel.c:279:13: note: def_stmt: _259 = ABS_EXPR <_258>;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: vect_is_simple_use: operand i_satd_257
common/pixel.c:279:13: note: def_stmt: i_satd_257 = _256 + i_satd_254;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: i_satd_257 = _256 + i_satd_254;
common/pixel.c:279:13: note: vect_is_simple_use: operand _256
common/pixel.c:279:13: note: def_stmt: _256 = ABS_EXPR <_255>;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: vect_is_simple_use: operand i_satd_254
common/pixel.c:279:13: note: def_stmt: i_satd_254 = _253 + i_satd_251;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: i_satd_254 = _253 + i_satd_251;
common/pixel.c:279:13: note: vect_is_simple_use: operand _253
common/pixel.c:279:13: note: def_stmt: _253 = ABS_EXPR <_252>;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: vect_is_simple_use: operand i_satd_251
common/pixel.c:279:13: note: def_stmt: i_satd_251 = _250 + i_satd_248;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: i_satd_251 = _250 + i_satd_248;
common/pixel.c:279:13: note: vect_is_simple_use: operand _250
common/pixel.c:279:13: note: def_stmt: _250 = ABS_EXPR <_249>;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: vect_is_simple_use: operand i_satd_248
common/pixel.c:279:13: note: def_stmt: i_satd_248 = _247 + i_satd_245;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: i_satd_248 = _247 + i_satd_245;
common/pixel.c:279:13: note: vect_is_simple_use: operand _247
common/pixel.c:279:13: note: def_stmt: _247 = ABS_EXPR <_246>;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: vect_is_simple_use: operand i_satd_245
common/pixel.c:279:13: note: def_stmt: i_satd_245 = _244 + i_satd_164;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: i_satd_245 = _244 + i_satd_164;
common/pixel.c:279:13: note: vect_is_simple_use: operand _244
common/pixel.c:279:13: note: def_stmt: _244 = ABS_EXPR <_243>;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: vect_is_simple_use: operand i_satd_164
common/pixel.c:279:13: note: def_stmt: i_satd_164 = PHI <i_satd_178(4), i_satd_266(6)>
common/pixel.c:279:13: note: type of def: 5.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: i_satd_164 = PHI <i_satd_178(4), i_satd_266(6)>
common/pixel.c:279:13: note: vect_is_simple_use: operand i_satd_178
common/pixel.c:279:13: note: def_stmt: i_satd_178 = PHI <i_satd_576(8), 0(2)>
common/pixel.c:279:13: note: type of def: 2.
common/pixel.c:279:13: note: def_stmt is out of loop.
common/pixel.c:279:13: note: vect_is_simple_use: operand i_satd_266
common/pixel.c:279:13: note: def_stmt: i_satd_266 = _265 + i_satd_263;
common/pixel.c:279:13: note: type of def: 5.
common/pixel.c:279:13: note: reduc-stmt defining reduc-phi in the same nest.
common/pixel.c:279:13: note: worklist: examine stmt: _244 = ABS_EXPR <_243>;
common/pixel.c:279:13: note: vect_is_simple_use: operand _243
common/pixel.c:279:13: note: def_stmt: _243 = b0_223 + b4_239;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: _243 = b0_223 + b4_239;
common/pixel.c:279:13: note: vect_is_simple_use: operand b0_223
common/pixel.c:279:13: note: def_stmt: b0_223 = t0_215 + t2_221;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: vect_is_simple_use: operand b4_239
common/pixel.c:279:13: note: def_stmt: b4_239 = t0_231 + t2_237;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: b4_239 = t0_231 + t2_237;
common/pixel.c:279:13: note: vect_is_simple_use: operand t0_231
common/pixel.c:279:13: note: def_stmt: t0_231 = _228 + _230;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: vect_is_simple_use: operand t2_237
common/pixel.c:279:13: note: def_stmt: t2_237 = _234 + _236;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: t2_237 = _234 + _236;
common/pixel.c:279:13: note: vect_is_simple_use: operand _234
common/pixel.c:279:13: note: def_stmt: _234 = (int) _233;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: vect_is_simple_use: operand _236
common/pixel.c:279:13: note: def_stmt: _236 = (int) _235;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: _236 = (int) _235;
common/pixel.c:279:13: note: vect_is_simple_use: operand _235
common/pixel.c:279:13: note: def_stmt: _235 = diff[7][i_165];
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: _235 = diff[7][i_165];
common/pixel.c:279:13: note: worklist: examine stmt: _234 = (int) _233;
common/pixel.c:279:13: note: vect_is_simple_use: operand _233
common/pixel.c:279:13: note: def_stmt: _233 = diff[6][i_165];
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: _233 = diff[6][i_165];
common/pixel.c:279:13: note: worklist: examine stmt: t0_231 = _228 + _230;
common/pixel.c:279:13: note: vect_is_simple_use: operand _228
common/pixel.c:279:13: note: def_stmt: _228 = (int) _227;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: vect_is_simple_use: operand _230
common/pixel.c:279:13: note: def_stmt: _230 = (int) _229;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: _230 = (int) _229;
common/pixel.c:279:13: note: vect_is_simple_use: operand _229
common/pixel.c:279:13: note: def_stmt: _229 = diff[5][i_165];
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: _229 = diff[5][i_165];
common/pixel.c:279:13: note: worklist: examine stmt: _228 = (int) _227;
common/pixel.c:279:13: note: vect_is_simple_use: operand _227
common/pixel.c:279:13: note: def_stmt: _227 = diff[4][i_165];
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: _227 = diff[4][i_165];
common/pixel.c:279:13: note: worklist: examine stmt: b0_223 = t0_215 + t2_221;
common/pixel.c:279:13: note: vect_is_simple_use: operand t0_215
common/pixel.c:279:13: note: def_stmt: t0_215 = _212 + _214;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: vect_is_simple_use: operand t2_221
common/pixel.c:279:13: note: def_stmt: t2_221 = _218 + _220;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: t2_221 = _218 + _220;
common/pixel.c:279:13: note: vect_is_simple_use: operand _218
common/pixel.c:279:13: note: def_stmt: _218 = (int) _217;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: vect_is_simple_use: operand _220
common/pixel.c:279:13: note: def_stmt: _220 = (int) _219;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: _220 = (int) _219;
common/pixel.c:279:13: note: vect_is_simple_use: operand _219
common/pixel.c:279:13: note: def_stmt: _219 = diff[3][i_165];
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: _219 = diff[3][i_165];
common/pixel.c:279:13: note: worklist: examine stmt: _218 = (int) _217;
common/pixel.c:279:13: note: vect_is_simple_use: operand _217
common/pixel.c:279:13: note: def_stmt: _217 = diff[2][i_165];
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: _217 = diff[2][i_165];
common/pixel.c:279:13: note: worklist: examine stmt: t0_215 = _212 + _214;
common/pixel.c:279:13: note: vect_is_simple_use: operand _212
common/pixel.c:279:13: note: def_stmt: _212 = (int) _211;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: vect_is_simple_use: operand _214
common/pixel.c:279:13: note: def_stmt: _214 = (int) _213;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: _214 = (int) _213;
common/pixel.c:279:13: note: vect_is_simple_use: operand _213
common/pixel.c:279:13: note: def_stmt: _213 = diff[1][i_165];
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: _213 = diff[1][i_165];
common/pixel.c:279:13: note: worklist: examine stmt: _212 = (int) _211;
common/pixel.c:279:13: note: vect_is_simple_use: operand _211
common/pixel.c:279:13: note: def_stmt: _211 = diff[0][i_165];
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: _211 = diff[0][i_165];
common/pixel.c:279:13: note: worklist: examine stmt: _247 = ABS_EXPR <_246>;
common/pixel.c:279:13: note: vect_is_simple_use: operand _246
common/pixel.c:279:13: note: def_stmt: _246 = b0_223 - b4_239;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: _246 = b0_223 - b4_239;
common/pixel.c:279:13: note: vect_is_simple_use: operand b0_223
common/pixel.c:279:13: note: def_stmt: b0_223 = t0_215 + t2_221;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: already marked relevant/live.
common/pixel.c:279:13: note: vect_is_simple_use: operand b4_239
common/pixel.c:279:13: note: def_stmt: b4_239 = t0_231 + t2_237;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: already marked relevant/live.
common/pixel.c:279:13: note: worklist: examine stmt: _250 = ABS_EXPR <_249>;
common/pixel.c:279:13: note: vect_is_simple_use: operand _249
common/pixel.c:279:13: note: def_stmt: _249 = b1_225 + b5_241;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: _249 = b1_225 + b5_241;
common/pixel.c:279:13: note: vect_is_simple_use: operand b1_225
common/pixel.c:279:13: note: def_stmt: b1_225 = t1_216 + t3_222;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: vect_is_simple_use: operand b5_241
common/pixel.c:279:13: note: def_stmt: b5_241 = t1_232 + t3_238;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: b5_241 = t1_232 + t3_238;
common/pixel.c:279:13: note: vect_is_simple_use: operand t1_232
common/pixel.c:279:13: note: def_stmt: t1_232 = _228 - _230;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: vect_is_simple_use: operand t3_238
common/pixel.c:279:13: note: def_stmt: t3_238 = _234 - _236;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: t3_238 = _234 - _236;
common/pixel.c:279:13: note: vect_is_simple_use: operand _234
common/pixel.c:279:13: note: def_stmt: _234 = (int) _233;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: already marked relevant/live.
common/pixel.c:279:13: note: vect_is_simple_use: operand _236
common/pixel.c:279:13: note: def_stmt: _236 = (int) _235;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: already marked relevant/live.
common/pixel.c:279:13: note: worklist: examine stmt: t1_232 = _228 - _230;
common/pixel.c:279:13: note: vect_is_simple_use: operand _228
common/pixel.c:279:13: note: def_stmt: _228 = (int) _227;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: already marked relevant/live.
common/pixel.c:279:13: note: vect_is_simple_use: operand _230
common/pixel.c:279:13: note: def_stmt: _230 = (int) _229;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: already marked relevant/live.
common/pixel.c:279:13: note: worklist: examine stmt: b1_225 = t1_216 + t3_222;
common/pixel.c:279:13: note: vect_is_simple_use: operand t1_216
common/pixel.c:279:13: note: def_stmt: t1_216 = _212 - _214;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: vect_is_simple_use: operand t3_222
common/pixel.c:279:13: note: def_stmt: t3_222 = _218 - _220;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: t3_222 = _218 - _220;
common/pixel.c:279:13: note: vect_is_simple_use: operand _218
common/pixel.c:279:13: note: def_stmt: _218 = (int) _217;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: already marked relevant/live.
common/pixel.c:279:13: note: vect_is_simple_use: operand _220
common/pixel.c:279:13: note: def_stmt: _220 = (int) _219;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: already marked relevant/live.
common/pixel.c:279:13: note: worklist: examine stmt: t1_216 = _212 - _214;
common/pixel.c:279:13: note: vect_is_simple_use: operand _212
common/pixel.c:279:13: note: def_stmt: _212 = (int) _211;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: already marked relevant/live.
common/pixel.c:279:13: note: vect_is_simple_use: operand _214
common/pixel.c:279:13: note: def_stmt: _214 = (int) _213;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: already marked relevant/live.
common/pixel.c:279:13: note: worklist: examine stmt: _253 = ABS_EXPR <_252>;
common/pixel.c:279:13: note: vect_is_simple_use: operand _252
common/pixel.c:279:13: note: def_stmt: _252 = b1_225 - b5_241;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: _252 = b1_225 - b5_241;
common/pixel.c:279:13: note: vect_is_simple_use: operand b1_225
common/pixel.c:279:13: note: def_stmt: b1_225 = t1_216 + t3_222;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: already marked relevant/live.
common/pixel.c:279:13: note: vect_is_simple_use: operand b5_241
common/pixel.c:279:13: note: def_stmt: b5_241 = t1_232 + t3_238;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: already marked relevant/live.
common/pixel.c:279:13: note: worklist: examine stmt: _256 = ABS_EXPR <_255>;
common/pixel.c:279:13: note: vect_is_simple_use: operand _255
common/pixel.c:279:13: note: def_stmt: _255 = b2_224 + b6_240;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: _255 = b2_224 + b6_240;
common/pixel.c:279:13: note: vect_is_simple_use: operand b2_224
common/pixel.c:279:13: note: def_stmt: b2_224 = t0_215 - t2_221;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: vect_is_simple_use: operand b6_240
common/pixel.c:279:13: note: def_stmt: b6_240 = t0_231 - t2_237;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: b6_240 = t0_231 - t2_237;
common/pixel.c:279:13: note: vect_is_simple_use: operand t0_231
common/pixel.c:279:13: note: def_stmt: t0_231 = _228 + _230;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: already marked relevant/live.
common/pixel.c:279:13: note: vect_is_simple_use: operand t2_237
common/pixel.c:279:13: note: def_stmt: t2_237 = _234 + _236;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: already marked relevant/live.
common/pixel.c:279:13: note: worklist: examine stmt: b2_224 = t0_215 - t2_221;
common/pixel.c:279:13: note: vect_is_simple_use: operand t0_215
common/pixel.c:279:13: note: def_stmt: t0_215 = _212 + _214;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: already marked relevant/live.
common/pixel.c:279:13: note: vect_is_simple_use: operand t2_221
common/pixel.c:279:13: note: def_stmt: t2_221 = _218 + _220;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: already marked relevant/live.
common/pixel.c:279:13: note: worklist: examine stmt: _259 = ABS_EXPR <_258>;
common/pixel.c:279:13: note: vect_is_simple_use: operand _258
common/pixel.c:279:13: note: def_stmt: _258 = b2_224 - b6_240;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: _258 = b2_224 - b6_240;
common/pixel.c:279:13: note: vect_is_simple_use: operand b2_224
common/pixel.c:279:13: note: def_stmt: b2_224 = t0_215 - t2_221;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: already marked relevant/live.
common/pixel.c:279:13: note: vect_is_simple_use: operand b6_240
common/pixel.c:279:13: note: def_stmt: b6_240 = t0_231 - t2_237;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: already marked relevant/live.
common/pixel.c:279:13: note: worklist: examine stmt: _262 = ABS_EXPR <_261>;
common/pixel.c:279:13: note: vect_is_simple_use: operand _261
common/pixel.c:279:13: note: def_stmt: _261 = b3_226 + b7_242;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: _261 = b3_226 + b7_242;
common/pixel.c:279:13: note: vect_is_simple_use: operand b3_226
common/pixel.c:279:13: note: def_stmt: b3_226 = t1_216 - t3_222;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: vect_is_simple_use: operand b7_242
common/pixel.c:279:13: note: def_stmt: b7_242 = t1_232 - t3_238;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: b7_242 = t1_232 - t3_238;
common/pixel.c:279:13: note: vect_is_simple_use: operand t1_232
common/pixel.c:279:13: note: def_stmt: t1_232 = _228 - _230;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: already marked relevant/live.
common/pixel.c:279:13: note: vect_is_simple_use: operand t3_238
common/pixel.c:279:13: note: def_stmt: t3_238 = _234 - _236;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: already marked relevant/live.
common/pixel.c:279:13: note: worklist: examine stmt: b3_226 = t1_216 - t3_222;
common/pixel.c:279:13: note: vect_is_simple_use: operand t1_216
common/pixel.c:279:13: note: def_stmt: t1_216 = _212 - _214;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: already marked relevant/live.
common/pixel.c:279:13: note: vect_is_simple_use: operand t3_222
common/pixel.c:279:13: note: def_stmt: t3_222 = _218 - _220;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: already marked relevant/live.
common/pixel.c:279:13: note: worklist: examine stmt: _265 = ABS_EXPR <_264>;
common/pixel.c:279:13: note: vect_is_simple_use: operand _264
common/pixel.c:279:13: note: def_stmt: _264 = b3_226 - b7_242;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: _264 = b3_226 - b7_242;
common/pixel.c:279:13: note: vect_is_simple_use: operand b3_226
common/pixel.c:279:13: note: def_stmt: b3_226 = t1_216 - t3_222;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: already marked relevant/live.
common/pixel.c:279:13: note: vect_is_simple_use: operand b7_242
common/pixel.c:279:13: note: def_stmt: b7_242 = t1_232 - t3_238;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: already marked relevant/live.
common/pixel.c:279:13: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _211 = diff[0][i_165];
  stmt_b: _213 = diff[1][i_165];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_6)
  (chrec_b = {0, +, 1}_6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 1)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _211 = diff[0][i_165];
  stmt_b: _217 = diff[2][i_165];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_6)
  (chrec_b = {0, +, 1}_6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _211 = diff[0][i_165];
  stmt_b: _219 = diff[3][i_165];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_6)
  (chrec_b = {0, +, 1}_6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _211 = diff[0][i_165];
  stmt_b: _227 = diff[4][i_165];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_6)
  (chrec_b = {0, +, 1}_6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 4)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _211 = diff[0][i_165];
  stmt_b: _229 = diff[5][i_165];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_6)
  (chrec_b = {0, +, 1}_6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 5)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _211 = diff[0][i_165];
  stmt_b: _233 = diff[6][i_165];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_6)
  (chrec_b = {0, +, 1}_6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 6)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _211 = diff[0][i_165];
  stmt_b: _235 = diff[7][i_165];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_6)
  (chrec_b = {0, +, 1}_6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _213 = diff[1][i_165];
  stmt_b: _217 = diff[2][i_165];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_6)
  (chrec_b = {0, +, 1}_6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _213 = diff[1][i_165];
  stmt_b: _219 = diff[3][i_165];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_6)
  (chrec_b = {0, +, 1}_6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _213 = diff[1][i_165];
  stmt_b: _227 = diff[4][i_165];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_6)
  (chrec_b = {0, +, 1}_6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 4)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _213 = diff[1][i_165];
  stmt_b: _229 = diff[5][i_165];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_6)
  (chrec_b = {0, +, 1}_6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 5)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _213 = diff[1][i_165];
  stmt_b: _233 = diff[6][i_165];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_6)
  (chrec_b = {0, +, 1}_6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 6)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _213 = diff[1][i_165];
  stmt_b: _235 = diff[7][i_165];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_6)
  (chrec_b = {0, +, 1}_6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _217 = diff[2][i_165];
  stmt_b: _219 = diff[3][i_165];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_6)
  (chrec_b = {0, +, 1}_6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _217 = diff[2][i_165];
  stmt_b: _227 = diff[4][i_165];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_6)
  (chrec_b = {0, +, 1}_6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 4)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _217 = diff[2][i_165];
  stmt_b: _229 = diff[5][i_165];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_6)
  (chrec_b = {0, +, 1}_6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 5)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _217 = diff[2][i_165];
  stmt_b: _233 = diff[6][i_165];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_6)
  (chrec_b = {0, +, 1}_6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 6)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _217 = diff[2][i_165];
  stmt_b: _235 = diff[7][i_165];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_6)
  (chrec_b = {0, +, 1}_6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _219 = diff[3][i_165];
  stmt_b: _227 = diff[4][i_165];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_6)
  (chrec_b = {0, +, 1}_6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 4)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _219 = diff[3][i_165];
  stmt_b: _229 = diff[5][i_165];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_6)
  (chrec_b = {0, +, 1}_6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 5)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _219 = diff[3][i_165];
  stmt_b: _233 = diff[6][i_165];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_6)
  (chrec_b = {0, +, 1}_6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 6)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _219 = diff[3][i_165];
  stmt_b: _235 = diff[7][i_165];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_6)
  (chrec_b = {0, +, 1}_6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _227 = diff[4][i_165];
  stmt_b: _229 = diff[5][i_165];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_6)
  (chrec_b = {0, +, 1}_6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 4)
  (chrec_b = 5)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _227 = diff[4][i_165];
  stmt_b: _233 = diff[6][i_165];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_6)
  (chrec_b = {0, +, 1}_6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 4)
  (chrec_b = 6)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _227 = diff[4][i_165];
  stmt_b: _235 = diff[7][i_165];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_6)
  (chrec_b = {0, +, 1}_6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 4)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _229 = diff[5][i_165];
  stmt_b: _233 = diff[6][i_165];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_6)
  (chrec_b = {0, +, 1}_6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 5)
  (chrec_b = 6)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _229 = diff[5][i_165];
  stmt_b: _235 = diff[7][i_165];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_6)
  (chrec_b = {0, +, 1}_6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 5)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _233 = diff[6][i_165];
  stmt_b: _235 = diff[7][i_165];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_6)
  (chrec_b = {0, +, 1}_6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 6)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _211 = diff[0][i_165];
  stmt_b: _211 = diff[0][i_165];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_6)
  (chrec_b = {0, +, 1}_6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 0)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _213 = diff[1][i_165];
  stmt_b: _213 = diff[1][i_165];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_6)
  (chrec_b = {0, +, 1}_6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _217 = diff[2][i_165];
  stmt_b: _217 = diff[2][i_165];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_6)
  (chrec_b = {0, +, 1}_6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _219 = diff[3][i_165];
  stmt_b: _219 = diff[3][i_165];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_6)
  (chrec_b = {0, +, 1}_6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _227 = diff[4][i_165];
  stmt_b: _227 = diff[4][i_165];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_6)
  (chrec_b = {0, +, 1}_6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 4)
  (chrec_b = 4)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _229 = diff[5][i_165];
  stmt_b: _229 = diff[5][i_165];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_6)
  (chrec_b = {0, +, 1}_6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 5)
  (chrec_b = 5)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _233 = diff[6][i_165];
  stmt_b: _233 = diff[6][i_165];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_6)
  (chrec_b = {0, +, 1}_6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 6)
  (chrec_b = 6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _235 = diff[7][i_165];
  stmt_b: _235 = diff[7][i_165];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_6)
  (chrec_b = {0, +, 1}_6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 7)
  (chrec_b = 7)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/pixel.c:279:13: note: === vect_determine_vectorization_factor ===
common/pixel.c:279:13: note: ==> examining phi: i_satd_164 = PHI <i_satd_178(4), i_satd_266(6)>

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining phi: i_165 = PHI <0(4), i_267(6)>

common/pixel.c:279:13: note: ==> examining phi: ivtmp_578 = PHI <8(4), ivtmp_577(6)>

common/pixel.c:279:13: note: ==> examining statement: # DEBUG i => i_165

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: # DEBUG i_satd => i_satd_164

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: _211 = diff[0][i_165];

common/pixel.c:279:13: note: get vectype for scalar type:  short int
common/pixel.c:279:13: note: vectype: vector(8) short int
common/pixel.c:279:13: note: nunits = 8
common/pixel.c:279:13: note: ==> examining statement: _212 = (int) _211;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  short int
common/pixel.c:279:13: note: vectype: vector(8) short int
common/pixel.c:279:13: note: nunits = 8
common/pixel.c:279:13: note: ==> examining statement: _213 = diff[1][i_165];

common/pixel.c:279:13: note: get vectype for scalar type:  short int
common/pixel.c:279:13: note: vectype: vector(8) short int
common/pixel.c:279:13: note: nunits = 8
common/pixel.c:279:13: note: ==> examining statement: _214 = (int) _213;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  short int
common/pixel.c:279:13: note: vectype: vector(8) short int
common/pixel.c:279:13: note: nunits = 8
common/pixel.c:279:13: note: ==> examining statement: t0_215 = _212 + _214;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: # DEBUG t0 => t0_215

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: t1_216 = _212 - _214;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: # DEBUG t1 => t1_216

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: _217 = diff[2][i_165];

common/pixel.c:279:13: note: get vectype for scalar type:  short int
common/pixel.c:279:13: note: vectype: vector(8) short int
common/pixel.c:279:13: note: nunits = 8
common/pixel.c:279:13: note: ==> examining statement: _218 = (int) _217;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  short int
common/pixel.c:279:13: note: vectype: vector(8) short int
common/pixel.c:279:13: note: nunits = 8
common/pixel.c:279:13: note: ==> examining statement: _219 = diff[3][i_165];

common/pixel.c:279:13: note: get vectype for scalar type:  short int
common/pixel.c:279:13: note: vectype: vector(8) short int
common/pixel.c:279:13: note: nunits = 8
common/pixel.c:279:13: note: ==> examining statement: _220 = (int) _219;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  short int
common/pixel.c:279:13: note: vectype: vector(8) short int
common/pixel.c:279:13: note: nunits = 8
common/pixel.c:279:13: note: ==> examining statement: t2_221 = _218 + _220;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: # DEBUG t2 => t2_221

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: t3_222 = _218 - _220;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: # DEBUG t3 => t3_222

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: b0_223 = t0_215 + t2_221;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: # DEBUG b0 => b0_223

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: b2_224 = t0_215 - t2_221;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: # DEBUG b2 => b2_224

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: b1_225 = t1_216 + t3_222;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: # DEBUG b1 => b1_225

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: b3_226 = t1_216 - t3_222;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: # DEBUG b3 => b3_226

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: _227 = diff[4][i_165];

common/pixel.c:279:13: note: get vectype for scalar type:  short int
common/pixel.c:279:13: note: vectype: vector(8) short int
common/pixel.c:279:13: note: nunits = 8
common/pixel.c:279:13: note: ==> examining statement: _228 = (int) _227;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  short int
common/pixel.c:279:13: note: vectype: vector(8) short int
common/pixel.c:279:13: note: nunits = 8
common/pixel.c:279:13: note: ==> examining statement: _229 = diff[5][i_165];

common/pixel.c:279:13: note: get vectype for scalar type:  short int
common/pixel.c:279:13: note: vectype: vector(8) short int
common/pixel.c:279:13: note: nunits = 8
common/pixel.c:279:13: note: ==> examining statement: _230 = (int) _229;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  short int
common/pixel.c:279:13: note: vectype: vector(8) short int
common/pixel.c:279:13: note: nunits = 8
common/pixel.c:279:13: note: ==> examining statement: t0_231 = _228 + _230;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: # DEBUG t0 => t0_231

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: t1_232 = _228 - _230;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: # DEBUG t1 => t1_232

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: _233 = diff[6][i_165];

common/pixel.c:279:13: note: get vectype for scalar type:  short int
common/pixel.c:279:13: note: vectype: vector(8) short int
common/pixel.c:279:13: note: nunits = 8
common/pixel.c:279:13: note: ==> examining statement: _234 = (int) _233;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  short int
common/pixel.c:279:13: note: vectype: vector(8) short int
common/pixel.c:279:13: note: nunits = 8
common/pixel.c:279:13: note: ==> examining statement: _235 = diff[7][i_165];

common/pixel.c:279:13: note: get vectype for scalar type:  short int
common/pixel.c:279:13: note: vectype: vector(8) short int
common/pixel.c:279:13: note: nunits = 8
common/pixel.c:279:13: note: ==> examining statement: _236 = (int) _235;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  short int
common/pixel.c:279:13: note: vectype: vector(8) short int
common/pixel.c:279:13: note: nunits = 8
common/pixel.c:279:13: note: ==> examining statement: t2_237 = _234 + _236;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: # DEBUG t2 => t2_237

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: t3_238 = _234 - _236;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: # DEBUG t3 => t3_238

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: b4_239 = t0_231 + t2_237;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: # DEBUG b4 => b4_239

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: b6_240 = t0_231 - t2_237;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: # DEBUG b6 => b6_240

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: b5_241 = t1_232 + t3_238;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: # DEBUG b5 => b5_241

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: b7_242 = t1_232 - t3_238;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: # DEBUG b7 => b7_242

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: _243 = b0_223 + b4_239;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: _244 = ABS_EXPR <_243>;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: i_satd_245 = _244 + i_satd_164;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: # DEBUG i_satd => i_satd_245

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: _246 = b0_223 - b4_239;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: _247 = ABS_EXPR <_246>;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: i_satd_248 = _247 + i_satd_245;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: # DEBUG i_satd => i_satd_248

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: _249 = b1_225 + b5_241;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: _250 = ABS_EXPR <_249>;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: i_satd_251 = _250 + i_satd_248;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: # DEBUG i_satd => i_satd_251

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: _252 = b1_225 - b5_241;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: _253 = ABS_EXPR <_252>;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: i_satd_254 = _253 + i_satd_251;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: # DEBUG i_satd => i_satd_254

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: _255 = b2_224 + b6_240;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: _256 = ABS_EXPR <_255>;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: i_satd_257 = _256 + i_satd_254;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: # DEBUG i_satd => i_satd_257

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: _258 = b2_224 - b6_240;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: _259 = ABS_EXPR <_258>;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: i_satd_260 = _259 + i_satd_257;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: # DEBUG i_satd => i_satd_260

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: _261 = b3_226 + b7_242;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: _262 = ABS_EXPR <_261>;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: i_satd_263 = _262 + i_satd_260;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: # DEBUG i_satd => i_satd_263

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: _264 = b3_226 - b7_242;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: _265 = ABS_EXPR <_264>;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: i_satd_266 = _265 + i_satd_263;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: # DEBUG i_satd => i_satd_266

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: i_267 = i_165 + 1;

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: # DEBUG i => i_267

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: # DEBUG i => i_267

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: # DEBUG i_satd => i_satd_266

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: ivtmp_577 = ivtmp_578 - 1;

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: if (ivtmp_577 != 0)

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: vectorization factor = 8
common/pixel.c:279:13: note: === vect_analyze_data_refs_alignment ===
common/pixel.c:279:13: note: vect_compute_data_ref_alignment:
common/pixel.c:279:13: note: misalign = 0 bytes of ref diff[0][i_165]
common/pixel.c:279:13: note: vect_compute_data_ref_alignment:
common/pixel.c:279:13: note: misalign = 0 bytes of ref diff[1][i_165]
common/pixel.c:279:13: note: vect_compute_data_ref_alignment:
common/pixel.c:279:13: note: misalign = 0 bytes of ref diff[2][i_165]
common/pixel.c:279:13: note: vect_compute_data_ref_alignment:
common/pixel.c:279:13: note: misalign = 0 bytes of ref diff[3][i_165]
common/pixel.c:279:13: note: vect_compute_data_ref_alignment:
common/pixel.c:279:13: note: misalign = 0 bytes of ref diff[4][i_165]
common/pixel.c:279:13: note: vect_compute_data_ref_alignment:
common/pixel.c:279:13: note: misalign = 0 bytes of ref diff[5][i_165]
common/pixel.c:279:13: note: vect_compute_data_ref_alignment:
common/pixel.c:279:13: note: misalign = 0 bytes of ref diff[6][i_165]
common/pixel.c:279:13: note: vect_compute_data_ref_alignment:
common/pixel.c:279:13: note: misalign = 0 bytes of ref diff[7][i_165]
common/pixel.c:279:13: note: === vect_prune_runtime_alias_test_list ===
common/pixel.c:279:13: note: === vect_enhance_data_refs_alignment ===
common/pixel.c:279:13: note: vect_can_advance_ivs_p:
common/pixel.c:279:13: note: Analyze phi: i_satd_164 = PHI <i_satd_178(4), i_satd_266(6)>

common/pixel.c:279:13: note: reduc phi. skip.
common/pixel.c:279:13: note: Analyze phi: i_165 = PHI <0(4), i_267(6)>

common/pixel.c:279:13: note: Analyze phi: ivtmp_578 = PHI <8(4), ivtmp_577(6)>

common/pixel.c:279:13: note: vect_model_load_cost: aligned.
common/pixel.c:279:13: note: vect_get_data_access_cost: inside_cost = 1, outside_cost = 0.
common/pixel.c:279:13: note: vect_model_load_cost: aligned.
common/pixel.c:279:13: note: vect_get_data_access_cost: inside_cost = 2, outside_cost = 0.
common/pixel.c:279:13: note: vect_model_load_cost: aligned.
common/pixel.c:279:13: note: vect_get_data_access_cost: inside_cost = 3, outside_cost = 0.
common/pixel.c:279:13: note: vect_model_load_cost: aligned.
common/pixel.c:279:13: note: vect_get_data_access_cost: inside_cost = 4, outside_cost = 0.
common/pixel.c:279:13: note: vect_model_load_cost: aligned.
common/pixel.c:279:13: note: vect_get_data_access_cost: inside_cost = 5, outside_cost = 0.
common/pixel.c:279:13: note: vect_model_load_cost: aligned.
common/pixel.c:279:13: note: vect_get_data_access_cost: inside_cost = 6, outside_cost = 0.
common/pixel.c:279:13: note: vect_model_load_cost: aligned.
common/pixel.c:279:13: note: vect_get_data_access_cost: inside_cost = 7, outside_cost = 0.
common/pixel.c:279:13: note: vect_model_load_cost: aligned.
common/pixel.c:279:13: note: vect_get_data_access_cost: inside_cost = 8, outside_cost = 0.
common/pixel.c:279:13: note: === vect_analyze_slp ===
common/pixel.c:279:13: note: Build SLP for i_satd_245 = _244 + i_satd_164;

common/pixel.c:279:13: note: Build SLP for i_satd_248 = _247 + i_satd_245;

common/pixel.c:279:13: note: Build SLP for i_satd_251 = _250 + i_satd_248;

common/pixel.c:279:13: note: Build SLP for i_satd_254 = _253 + i_satd_251;

common/pixel.c:279:13: note: Build SLP for i_satd_257 = _256 + i_satd_254;

common/pixel.c:279:13: note: Build SLP for i_satd_260 = _259 + i_satd_257;

common/pixel.c:279:13: note: Build SLP for i_satd_263 = _262 + i_satd_260;

common/pixel.c:279:13: note: Build SLP for i_satd_266 = _265 + i_satd_263;

common/pixel.c:279:13: note: vect_is_simple_use: operand _244
common/pixel.c:279:13: note: def_stmt: _244 = ABS_EXPR <_243>;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: vect_is_simple_use: operand i_satd_164
common/pixel.c:279:13: note: def_stmt: i_satd_164 = PHI <i_satd_178(4), i_satd_266(6)>
common/pixel.c:279:13: note: type of def: 5.
common/pixel.c:279:13: note: vect_is_simple_use: operand _247
common/pixel.c:279:13: note: def_stmt: _247 = ABS_EXPR <_246>;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: vect_is_simple_use: operand i_satd_245
common/pixel.c:279:13: note: def_stmt: i_satd_245 = _244 + i_satd_164;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: vect_is_simple_use: operand _250
common/pixel.c:279:13: note: def_stmt: _250 = ABS_EXPR <_249>;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: vect_is_simple_use: operand i_satd_248
common/pixel.c:279:13: note: def_stmt: i_satd_248 = _247 + i_satd_245;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: vect_is_simple_use: operand _253
common/pixel.c:279:13: note: def_stmt: _253 = ABS_EXPR <_252>;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: vect_is_simple_use: operand i_satd_251
common/pixel.c:279:13: note: def_stmt: i_satd_251 = _250 + i_satd_248;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: vect_is_simple_use: operand _256
common/pixel.c:279:13: note: def_stmt: _256 = ABS_EXPR <_255>;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: vect_is_simple_use: operand i_satd_254
common/pixel.c:279:13: note: def_stmt: i_satd_254 = _253 + i_satd_251;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: vect_is_simple_use: operand _259
common/pixel.c:279:13: note: def_stmt: _259 = ABS_EXPR <_258>;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: vect_is_simple_use: operand i_satd_257
common/pixel.c:279:13: note: def_stmt: i_satd_257 = _256 + i_satd_254;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: vect_is_simple_use: operand _262
common/pixel.c:279:13: note: def_stmt: _262 = ABS_EXPR <_261>;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: vect_is_simple_use: operand i_satd_260
common/pixel.c:279:13: note: def_stmt: i_satd_260 = _259 + i_satd_257;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: vect_is_simple_use: operand _265
common/pixel.c:279:13: note: def_stmt: _265 = ABS_EXPR <_264>;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: vect_is_simple_use: operand i_satd_263
common/pixel.c:279:13: note: def_stmt: i_satd_263 = _262 + i_satd_260;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: Build SLP for _244 = ABS_EXPR <_243>;

common/pixel.c:279:13: note: Build SLP for _247 = ABS_EXPR <_246>;

common/pixel.c:279:13: note: Build SLP for _250 = ABS_EXPR <_249>;

common/pixel.c:279:13: note: Build SLP for _253 = ABS_EXPR <_252>;

common/pixel.c:279:13: note: Build SLP for _256 = ABS_EXPR <_255>;

common/pixel.c:279:13: note: Build SLP for _259 = ABS_EXPR <_258>;

common/pixel.c:279:13: note: Build SLP for _262 = ABS_EXPR <_261>;

common/pixel.c:279:13: note: Build SLP for _265 = ABS_EXPR <_264>;

common/pixel.c:279:13: note: vect_is_simple_use: operand _243
common/pixel.c:279:13: note: def_stmt: _243 = b0_223 + b4_239;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: vect_is_simple_use: operand _246
common/pixel.c:279:13: note: def_stmt: _246 = b0_223 - b4_239;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: vect_is_simple_use: operand _249
common/pixel.c:279:13: note: def_stmt: _249 = b1_225 + b5_241;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: vect_is_simple_use: operand _252
common/pixel.c:279:13: note: def_stmt: _252 = b1_225 - b5_241;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: vect_is_simple_use: operand _255
common/pixel.c:279:13: note: def_stmt: _255 = b2_224 + b6_240;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: vect_is_simple_use: operand _258
common/pixel.c:279:13: note: def_stmt: _258 = b2_224 - b6_240;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: vect_is_simple_use: operand _261
common/pixel.c:279:13: note: def_stmt: _261 = b3_226 + b7_242;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: vect_is_simple_use: operand _264
common/pixel.c:279:13: note: def_stmt: _264 = b3_226 - b7_242;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: Build SLP for _243 = b0_223 + b4_239;

common/pixel.c:279:13: note: Build SLP for _246 = b0_223 - b4_239;

common/pixel.c:279:13: note: Build SLP failed: different operation in stmt _246 = b0_223 - b4_239;

common/pixel.c:279:13: note: Build SLP for _249 = b1_225 + b5_241;

common/pixel.c:279:13: note: Build SLP for _252 = b1_225 - b5_241;

common/pixel.c:279:13: note: Build SLP failed: different operation in stmt _252 = b1_225 - b5_241;

common/pixel.c:279:13: note: Build SLP for _255 = b2_224 + b6_240;

common/pixel.c:279:13: note: Build SLP for _258 = b2_224 - b6_240;

common/pixel.c:279:13: note: Build SLP failed: different operation in stmt _258 = b2_224 - b6_240;

common/pixel.c:279:13: note: Build SLP for _261 = b3_226 + b7_242;

common/pixel.c:279:13: note: Build SLP for _264 = b3_226 - b7_242;

common/pixel.c:279:13: note: Build SLP failed: different operation in stmt _264 = b3_226 - b7_242;


Analyzing loop at common/pixel.c:262
common/pixel.c:262:13: note: ===== analyze_loop_nest =====
common/pixel.c:262:13: note: === vect_analyze_loop_form ===
common/pixel.c:262:13: note: === get_loop_niters ===
Analyzing # of iterations of loop 7
  exit condition [7, + , 4294967295] != 0
  bounds on difference of bases: -7 ... -7
  result:
    # of iterations 7, bounded by 7
common/pixel.c:262:13: note: === vect_analyze_data_refs ===
Creating dr for *p1_12
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: pix1_2(D) + (sizetype) x_9
	offset from base address: 0
	constant offset from base address: 0
	step: (ssizetype) pretmp_581
	aligned to: 128
	base_object: *pix1_2(D) + (sizetype) x_9
	Access function 0: {0B, +, pretmp_581}_7
Creating dr for *p2_14
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: pix2_4(D) + (sizetype) x_9
	offset from base address: 0
	constant offset from base address: 0
	step: (ssizetype) pretmp_582
	aligned to: 128
	base_object: *pix2_4(D) + (sizetype) x_9
	Access function 0: {0B, +, pretmp_582}_7
Creating dr for MEM[(uint8_t *)p1_12 + 1B]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: pix1_2(D) + (sizetype) x_9
	offset from base address: 0
	constant offset from base address: 1
	step: (ssizetype) pretmp_581
	aligned to: 128
	base_object: *pix1_2(D) + (sizetype) x_9
	Access function 0: {1B, +, pretmp_581}_7
Creating dr for MEM[(uint8_t *)p2_14 + 1B]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: pix2_4(D) + (sizetype) x_9
	offset from base address: 0
	constant offset from base address: 1
	step: (ssizetype) pretmp_582
	aligned to: 128
	base_object: *pix2_4(D) + (sizetype) x_9
	Access function 0: {1B, +, pretmp_582}_7
Creating dr for MEM[(uint8_t *)p1_12 + 2B]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: pix1_2(D) + (sizetype) x_9
	offset from base address: 0
	constant offset from base address: 2
	step: (ssizetype) pretmp_581
	aligned to: 128
	base_object: *pix1_2(D) + (sizetype) x_9
	Access function 0: {2B, +, pretmp_581}_7
Creating dr for MEM[(uint8_t *)p2_14 + 2B]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: pix2_4(D) + (sizetype) x_9
	offset from base address: 0
	constant offset from base address: 2
	step: (ssizetype) pretmp_582
	aligned to: 128
	base_object: *pix2_4(D) + (sizetype) x_9
	Access function 0: {2B, +, pretmp_582}_7
Creating dr for MEM[(uint8_t *)p1_12 + 3B]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: pix1_2(D) + (sizetype) x_9
	offset from base address: 0
	constant offset from base address: 3
	step: (ssizetype) pretmp_581
	aligned to: 128
	base_object: *pix1_2(D) + (sizetype) x_9
	Access function 0: {3B, +, pretmp_581}_7
Creating dr for MEM[(uint8_t *)p2_14 + 3B]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: pix2_4(D) + (sizetype) x_9
	offset from base address: 0
	constant offset from base address: 3
	step: (ssizetype) pretmp_582
	aligned to: 128
	base_object: *pix2_4(D) + (sizetype) x_9
	Access function 0: {3B, +, pretmp_582}_7
Creating dr for MEM[(uint8_t *)p1_12 + 4B]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: pix1_2(D) + (sizetype) x_9
	offset from base address: 0
	constant offset from base address: 4
	step: (ssizetype) pretmp_581
	aligned to: 128
	base_object: *pix1_2(D) + (sizetype) x_9
	Access function 0: {4B, +, pretmp_581}_7
Creating dr for MEM[(uint8_t *)p2_14 + 4B]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: pix2_4(D) + (sizetype) x_9
	offset from base address: 0
	constant offset from base address: 4
	step: (ssizetype) pretmp_582
	aligned to: 128
	base_object: *pix2_4(D) + (sizetype) x_9
	Access function 0: {4B, +, pretmp_582}_7
Creating dr for MEM[(uint8_t *)p1_12 + 5B]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: pix1_2(D) + (sizetype) x_9
	offset from base address: 0
	constant offset from base address: 5
	step: (ssizetype) pretmp_581
	aligned to: 128
	base_object: *pix1_2(D) + (sizetype) x_9
	Access function 0: {5B, +, pretmp_581}_7
Creating dr for MEM[(uint8_t *)p2_14 + 5B]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: pix2_4(D) + (sizetype) x_9
	offset from base address: 0
	constant offset from base address: 5
	step: (ssizetype) pretmp_582
	aligned to: 128
	base_object: *pix2_4(D) + (sizetype) x_9
	Access function 0: {5B, +, pretmp_582}_7
Creating dr for MEM[(uint8_t *)p1_12 + 6B]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: pix1_2(D) + (sizetype) x_9
	offset from base address: 0
	constant offset from base address: 6
	step: (ssizetype) pretmp_581
	aligned to: 128
	base_object: *pix1_2(D) + (sizetype) x_9
	Access function 0: {6B, +, pretmp_581}_7
Creating dr for MEM[(uint8_t *)p2_14 + 6B]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: pix2_4(D) + (sizetype) x_9
	offset from base address: 0
	constant offset from base address: 6
	step: (ssizetype) pretmp_582
	aligned to: 128
	base_object: *pix2_4(D) + (sizetype) x_9
	Access function 0: {6B, +, pretmp_582}_7
Creating dr for MEM[(uint8_t *)p1_12 + 7B]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: pix1_2(D) + (sizetype) x_9
	offset from base address: 0
	constant offset from base address: 7
	step: (ssizetype) pretmp_581
	aligned to: 128
	base_object: *pix1_2(D) + (sizetype) x_9
	Access function 0: {7B, +, pretmp_581}_7
Creating dr for MEM[(uint8_t *)p2_14 + 7B]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: pix2_4(D) + (sizetype) x_9
	offset from base address: 0
	constant offset from base address: 7
	step: (ssizetype) pretmp_582
	aligned to: 128
	base_object: *pix2_4(D) + (sizetype) x_9
	Access function 0: {7B, +, pretmp_582}_7
Creating dr for diff[i_10][0]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &diff
	offset from base address: 0
	constant offset from base address: 0
	step: 16
	aligned to: 128
	base_object: diff
	Access function 0: 0
	Access function 1: {0, +, 1}_7
Creating dr for diff[i_10][4]
analyze_innermost: success.
	base_address: &diff
	offset from base address: 0
	constant offset from base address: 8
	step: 16
	aligned to: 128
	base_object: diff
	Access function 0: 4
	Access function 1: {0, +, 1}_7
Creating dr for diff[i_10][1]
analyze_innermost: success.
	base_address: &diff
	offset from base address: 0
	constant offset from base address: 2
	step: 16
	aligned to: 128
	base_object: diff
	Access function 0: 1
	Access function 1: {0, +, 1}_7
Creating dr for diff[i_10][5]
analyze_innermost: success.
	base_address: &diff
	offset from base address: 0
	constant offset from base address: 10
	step: 16
	aligned to: 128
	base_object: diff
	Access function 0: 5
	Access function 1: {0, +, 1}_7
Creating dr for diff[i_10][2]
analyze_innermost: success.
	base_address: &diff
	offset from base address: 0
	constant offset from base address: 4
	step: 16
	aligned to: 128
	base_object: diff
	Access function 0: 2
	Access function 1: {0, +, 1}_7
Creating dr for diff[i_10][6]
analyze_innermost: success.
	base_address: &diff
	offset from base address: 0
	constant offset from base address: 12
	step: 16
	aligned to: 128
	base_object: diff
	Access function 0: 6
	Access function 1: {0, +, 1}_7
Creating dr for diff[i_10][3]
analyze_innermost: success.
	base_address: &diff
	offset from base address: 0
	constant offset from base address: 6
	step: 16
	aligned to: 128
	base_object: diff
	Access function 0: 3
	Access function 1: {0, +, 1}_7
Creating dr for diff[i_10][7]
analyze_innermost: success.
	base_address: &diff
	offset from base address: 0
	constant offset from base address: 14
	step: 16
	aligned to: 128
	base_object: diff
	Access function 0: 7
	Access function 1: {0, +, 1}_7
common/pixel.c:262:13: note: got vectype for stmt: _269 = *p1_12;
vector(16) unsigned char
common/pixel.c:262:13: note: got vectype for stmt: _271 = *p2_14;
vector(16) unsigned char
common/pixel.c:262:13: note: got vectype for stmt: _274 = MEM[(uint8_t *)p1_12 + 1B];
vector(16) unsigned char
common/pixel.c:262:13: note: got vectype for stmt: _276 = MEM[(uint8_t *)p2_14 + 1B];
vector(16) unsigned char
common/pixel.c:262:13: note: got vectype for stmt: _279 = MEM[(uint8_t *)p1_12 + 2B];
vector(16) unsigned char
common/pixel.c:262:13: note: got vectype for stmt: _281 = MEM[(uint8_t *)p2_14 + 2B];
vector(16) unsigned char
common/pixel.c:262:13: note: got vectype for stmt: _284 = MEM[(uint8_t *)p1_12 + 3B];
vector(16) unsigned char
common/pixel.c:262:13: note: got vectype for stmt: _286 = MEM[(uint8_t *)p2_14 + 3B];
vector(16) unsigned char
common/pixel.c:262:13: note: got vectype for stmt: _289 = MEM[(uint8_t *)p1_12 + 4B];
vector(16) unsigned char
common/pixel.c:262:13: note: got vectype for stmt: _291 = MEM[(uint8_t *)p2_14 + 4B];
vector(16) unsigned char
common/pixel.c:262:13: note: got vectype for stmt: _294 = MEM[(uint8_t *)p1_12 + 5B];
vector(16) unsigned char
common/pixel.c:262:13: note: got vectype for stmt: _296 = MEM[(uint8_t *)p2_14 + 5B];
vector(16) unsigned char
common/pixel.c:262:13: note: got vectype for stmt: _299 = MEM[(uint8_t *)p1_12 + 6B];
vector(16) unsigned char
common/pixel.c:262:13: note: got vectype for stmt: _301 = MEM[(uint8_t *)p2_14 + 6B];
vector(16) unsigned char
common/pixel.c:262:13: note: got vectype for stmt: _304 = MEM[(uint8_t *)p1_12 + 7B];
vector(16) unsigned char
common/pixel.c:262:13: note: got vectype for stmt: _306 = MEM[(uint8_t *)p2_14 + 7B];
vector(16) unsigned char
common/pixel.c:262:13: note: got vectype for stmt: diff[i_10][0] = _328;
vector(8) short int
common/pixel.c:262:13: note: got vectype for stmt: diff[i_10][4] = _331;
vector(8) short int
common/pixel.c:262:13: note: got vectype for stmt: diff[i_10][1] = _336;
vector(8) short int
common/pixel.c:262:13: note: got vectype for stmt: diff[i_10][5] = _339;
vector(8) short int
common/pixel.c:262:13: note: got vectype for stmt: diff[i_10][2] = _344;
vector(8) short int
common/pixel.c:262:13: note: got vectype for stmt: diff[i_10][6] = _347;
vector(8) short int
common/pixel.c:262:13: note: got vectype for stmt: diff[i_10][3] = _352;
vector(8) short int
common/pixel.c:262:13: note: got vectype for stmt: diff[i_10][7] = _355;
vector(8) short int
common/pixel.c:262:13: note: === vect_analyze_scalar_cycles ===
common/pixel.c:262:13: note: Analyze phi: i_10 = PHI <i_357(9), 0(3)>

common/pixel.c:262:13: note: Access function of PHI: {0, +, 1}_7
common/pixel.c:262:13: note: step: 1,  init: 0
common/pixel.c:262:13: note: Detected induction.
common/pixel.c:262:13: note: Analyze phi: p1_12 = PHI <p1_359(9), p1_201(3)>

common/pixel.c:262:13: note: Access function of PHI: {p1_201, +, pretmp_581}_7
common/pixel.c:262:13: note: step: pretmp_581,  init: p1_201
common/pixel.c:262:13: note: Detected induction.
common/pixel.c:262:13: note: Analyze phi: p2_14 = PHI <p2_361(9), p2_202(3)>

common/pixel.c:262:13: note: Access function of PHI: {p2_202, +, pretmp_582}_7
common/pixel.c:262:13: note: step: pretmp_582,  init: p2_202
common/pixel.c:262:13: note: Detected induction.
common/pixel.c:262:13: note: Analyze phi: .MEM_163 = PHI <.MEM_356(9), .MEM_173(3)>

common/pixel.c:262:13: note: Analyze phi: ivtmp_574 = PHI <ivtmp_573(9), 8(3)>

common/pixel.c:262:13: note: Access function of PHI: {8, +, 4294967295}_7
common/pixel.c:262:13: note: step: 4294967295,  init: 8
common/pixel.c:262:13: note: Detected induction.
common/pixel.c:262:13: note: === vect_pattern_recog ===
common/pixel.c:262:13: note: === vect_analyze_data_ref_accesses ===
common/pixel.c:262:13: note: Detected interleaving diff[i_10][0] and diff[i_10][1]
common/pixel.c:262:13: note: Detected interleaving diff[i_10][0] and diff[i_10][2]
common/pixel.c:262:13: note: Detected interleaving diff[i_10][0] and diff[i_10][3]
common/pixel.c:262:13: note: Detected interleaving diff[i_10][0] and diff[i_10][4]
common/pixel.c:262:13: note: Detected interleaving diff[i_10][0] and diff[i_10][5]
common/pixel.c:262:13: note: Detected interleaving diff[i_10][0] and diff[i_10][6]
common/pixel.c:262:13: note: Detected interleaving diff[i_10][0] and diff[i_10][7]
common/pixel.c:262:13: note: Detected interleaving of size 8
common/pixel.c:262:13: note: === vect_mark_stmts_to_be_vectorized ===
common/pixel.c:262:13: note: init: phi relevant? i_10 = PHI <i_357(9), 0(3)>
common/pixel.c:262:13: note: init: phi relevant? p1_12 = PHI <p1_359(9), p1_201(3)>
common/pixel.c:262:13: note: init: phi relevant? p2_14 = PHI <p2_361(9), p2_202(3)>
common/pixel.c:262:13: note: init: phi relevant? .MEM_163 = PHI <.MEM_356(9), .MEM_173(3)>
common/pixel.c:262:13: note: init: phi relevant? ivtmp_574 = PHI <ivtmp_573(9), 8(3)>
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG p2 => p2_14
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG p1 => p1_12
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG i => i_10
common/pixel.c:262:13: note: init: stmt relevant? _269 = *p1_12;
common/pixel.c:262:13: note: init: stmt relevant? _270 = (int) _269;
common/pixel.c:262:13: note: init: stmt relevant? _271 = *p2_14;
common/pixel.c:262:13: note: init: stmt relevant? _272 = (int) _271;
common/pixel.c:262:13: note: init: stmt relevant? a0_273 = _270 - _272;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG a0 => a0_273
common/pixel.c:262:13: note: init: stmt relevant? _274 = MEM[(uint8_t *)p1_12 + 1B];
common/pixel.c:262:13: note: init: stmt relevant? _275 = (int) _274;
common/pixel.c:262:13: note: init: stmt relevant? _276 = MEM[(uint8_t *)p2_14 + 1B];
common/pixel.c:262:13: note: init: stmt relevant? _277 = (int) _276;
common/pixel.c:262:13: note: init: stmt relevant? a1_278 = _275 - _277;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG a1 => a1_278
common/pixel.c:262:13: note: init: stmt relevant? _279 = MEM[(uint8_t *)p1_12 + 2B];
common/pixel.c:262:13: note: init: stmt relevant? _280 = (int) _279;
common/pixel.c:262:13: note: init: stmt relevant? _281 = MEM[(uint8_t *)p2_14 + 2B];
common/pixel.c:262:13: note: init: stmt relevant? _282 = (int) _281;
common/pixel.c:262:13: note: init: stmt relevant? a2_283 = _280 - _282;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG a2 => a2_283
common/pixel.c:262:13: note: init: stmt relevant? _284 = MEM[(uint8_t *)p1_12 + 3B];
common/pixel.c:262:13: note: init: stmt relevant? _285 = (int) _284;
common/pixel.c:262:13: note: init: stmt relevant? _286 = MEM[(uint8_t *)p2_14 + 3B];
common/pixel.c:262:13: note: init: stmt relevant? _287 = (int) _286;
common/pixel.c:262:13: note: init: stmt relevant? a3_288 = _285 - _287;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG a3 => a3_288
common/pixel.c:262:13: note: init: stmt relevant? _289 = MEM[(uint8_t *)p1_12 + 4B];
common/pixel.c:262:13: note: init: stmt relevant? _290 = (int) _289;
common/pixel.c:262:13: note: init: stmt relevant? _291 = MEM[(uint8_t *)p2_14 + 4B];
common/pixel.c:262:13: note: init: stmt relevant? _292 = (int) _291;
common/pixel.c:262:13: note: init: stmt relevant? a4_293 = _290 - _292;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG a4 => a4_293
common/pixel.c:262:13: note: init: stmt relevant? _294 = MEM[(uint8_t *)p1_12 + 5B];
common/pixel.c:262:13: note: init: stmt relevant? _295 = (int) _294;
common/pixel.c:262:13: note: init: stmt relevant? _296 = MEM[(uint8_t *)p2_14 + 5B];
common/pixel.c:262:13: note: init: stmt relevant? _297 = (int) _296;
common/pixel.c:262:13: note: init: stmt relevant? a5_298 = _295 - _297;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG a5 => a5_298
common/pixel.c:262:13: note: init: stmt relevant? _299 = MEM[(uint8_t *)p1_12 + 6B];
common/pixel.c:262:13: note: init: stmt relevant? _300 = (int) _299;
common/pixel.c:262:13: note: init: stmt relevant? _301 = MEM[(uint8_t *)p2_14 + 6B];
common/pixel.c:262:13: note: init: stmt relevant? _302 = (int) _301;
common/pixel.c:262:13: note: init: stmt relevant? a6_303 = _300 - _302;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG a6 => a6_303
common/pixel.c:262:13: note: init: stmt relevant? _304 = MEM[(uint8_t *)p1_12 + 7B];
common/pixel.c:262:13: note: init: stmt relevant? _305 = (int) _304;
common/pixel.c:262:13: note: init: stmt relevant? _306 = MEM[(uint8_t *)p2_14 + 7B];
common/pixel.c:262:13: note: init: stmt relevant? _307 = (int) _306;
common/pixel.c:262:13: note: init: stmt relevant? a7_308 = _305 - _307;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG a7 => a7_308
common/pixel.c:262:13: note: init: stmt relevant? t0_309 = a0_273 + a1_278;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG t0 => t0_309
common/pixel.c:262:13: note: init: stmt relevant? t1_310 = a0_273 - a1_278;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG t1 => t1_310
common/pixel.c:262:13: note: init: stmt relevant? t2_311 = a2_283 + a3_288;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG t2 => t2_311
common/pixel.c:262:13: note: init: stmt relevant? t3_312 = a2_283 - a3_288;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG t3 => t3_312
common/pixel.c:262:13: note: init: stmt relevant? b0_313 = t0_309 + t2_311;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG b0 => b0_313
common/pixel.c:262:13: note: init: stmt relevant? b2_314 = t0_309 - t2_311;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG b2 => b2_314
common/pixel.c:262:13: note: init: stmt relevant? b1_315 = t1_310 + t3_312;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG b1 => b1_315
common/pixel.c:262:13: note: init: stmt relevant? b3_316 = t1_310 - t3_312;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG b3 => b3_316
common/pixel.c:262:13: note: init: stmt relevant? t0_317 = a4_293 + a5_298;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG t0 => t0_317
common/pixel.c:262:13: note: init: stmt relevant? t1_318 = a4_293 - a5_298;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG t1 => t1_318
common/pixel.c:262:13: note: init: stmt relevant? t2_319 = a6_303 + a7_308;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG t2 => t2_319
common/pixel.c:262:13: note: init: stmt relevant? t3_320 = a6_303 - a7_308;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG t3 => t3_320
common/pixel.c:262:13: note: init: stmt relevant? b4_321 = t0_317 + t2_319;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG b4 => b4_321
common/pixel.c:262:13: note: init: stmt relevant? b6_322 = t0_317 - t2_319;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG b6 => b6_322
common/pixel.c:262:13: note: init: stmt relevant? b5_323 = t1_318 + t3_320;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG b5 => b5_323
common/pixel.c:262:13: note: init: stmt relevant? b7_324 = t1_318 - t3_320;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG b7 => b7_324
common/pixel.c:262:13: note: init: stmt relevant? _325 = (unsigned short) b0_313;
common/pixel.c:262:13: note: init: stmt relevant? _326 = (unsigned short) b4_321;
common/pixel.c:262:13: note: init: stmt relevant? _327 = _325 + _326;
common/pixel.c:262:13: note: init: stmt relevant? _328 = (short int) _327;
common/pixel.c:262:13: note: init: stmt relevant? diff[i_10][0] = _328;
common/pixel.c:262:13: note: vec_stmt_relevant_p: stmt has vdefs.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: init: stmt relevant? _330 = _325 - _326;
common/pixel.c:262:13: note: init: stmt relevant? _331 = (short int) _330;
common/pixel.c:262:13: note: init: stmt relevant? diff[i_10][4] = _331;
common/pixel.c:262:13: note: vec_stmt_relevant_p: stmt has vdefs.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: init: stmt relevant? _333 = (unsigned short) b1_315;
common/pixel.c:262:13: note: init: stmt relevant? _334 = (unsigned short) b5_323;
common/pixel.c:262:13: note: init: stmt relevant? _335 = _333 + _334;
common/pixel.c:262:13: note: init: stmt relevant? _336 = (short int) _335;
common/pixel.c:262:13: note: init: stmt relevant? diff[i_10][1] = _336;
common/pixel.c:262:13: note: vec_stmt_relevant_p: stmt has vdefs.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: init: stmt relevant? _338 = _333 - _334;
common/pixel.c:262:13: note: init: stmt relevant? _339 = (short int) _338;
common/pixel.c:262:13: note: init: stmt relevant? diff[i_10][5] = _339;
common/pixel.c:262:13: note: vec_stmt_relevant_p: stmt has vdefs.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: init: stmt relevant? _341 = (unsigned short) b2_314;
common/pixel.c:262:13: note: init: stmt relevant? _342 = (unsigned short) b6_322;
common/pixel.c:262:13: note: init: stmt relevant? _343 = _341 + _342;
common/pixel.c:262:13: note: init: stmt relevant? _344 = (short int) _343;
common/pixel.c:262:13: note: init: stmt relevant? diff[i_10][2] = _344;
common/pixel.c:262:13: note: vec_stmt_relevant_p: stmt has vdefs.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: init: stmt relevant? _346 = _341 - _342;
common/pixel.c:262:13: note: init: stmt relevant? _347 = (short int) _346;
common/pixel.c:262:13: note: init: stmt relevant? diff[i_10][6] = _347;
common/pixel.c:262:13: note: vec_stmt_relevant_p: stmt has vdefs.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: init: stmt relevant? _349 = (unsigned short) b3_316;
common/pixel.c:262:13: note: init: stmt relevant? _350 = (unsigned short) b7_324;
common/pixel.c:262:13: note: init: stmt relevant? _351 = _349 + _350;
common/pixel.c:262:13: note: init: stmt relevant? _352 = (short int) _351;
common/pixel.c:262:13: note: init: stmt relevant? diff[i_10][3] = _352;
common/pixel.c:262:13: note: vec_stmt_relevant_p: stmt has vdefs.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: init: stmt relevant? _354 = _349 - _350;
common/pixel.c:262:13: note: init: stmt relevant? _355 = (short int) _354;
common/pixel.c:262:13: note: init: stmt relevant? diff[i_10][7] = _355;
common/pixel.c:262:13: note: vec_stmt_relevant_p: stmt has vdefs.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: init: stmt relevant? i_357 = i_10 + 1;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG i => i_357
common/pixel.c:262:13: note: init: stmt relevant? p1_359 = p1_12 + pretmp_581;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG p1 => p1_359
common/pixel.c:262:13: note: init: stmt relevant? p2_361 = p2_14 + pretmp_582;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG p2 => p2_361
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG p2 => p2_361
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG p1 => p1_359
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG i => i_357
common/pixel.c:262:13: note: init: stmt relevant? ivtmp_573 = ivtmp_574 - 1;
common/pixel.c:262:13: note: init: stmt relevant? if (ivtmp_573 != 0)
common/pixel.c:262:13: note: worklist: examine stmt: diff[i_10][7] = _355;
common/pixel.c:262:13: note: vect_is_simple_use: operand _355
common/pixel.c:262:13: note: def_stmt: _355 = (short int) _354;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _355 = (short int) _354;
common/pixel.c:262:13: note: vect_is_simple_use: operand _354
common/pixel.c:262:13: note: def_stmt: _354 = _349 - _350;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _354 = _349 - _350;
common/pixel.c:262:13: note: vect_is_simple_use: operand _349
common/pixel.c:262:13: note: def_stmt: _349 = (unsigned short) b3_316;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: vect_is_simple_use: operand _350
common/pixel.c:262:13: note: def_stmt: _350 = (unsigned short) b7_324;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _350 = (unsigned short) b7_324;
common/pixel.c:262:13: note: vect_is_simple_use: operand b7_324
common/pixel.c:262:13: note: def_stmt: b7_324 = t1_318 - t3_320;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: b7_324 = t1_318 - t3_320;
common/pixel.c:262:13: note: vect_is_simple_use: operand t1_318
common/pixel.c:262:13: note: def_stmt: t1_318 = a4_293 - a5_298;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: vect_is_simple_use: operand t3_320
common/pixel.c:262:13: note: def_stmt: t3_320 = a6_303 - a7_308;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: t3_320 = a6_303 - a7_308;
common/pixel.c:262:13: note: vect_is_simple_use: operand a6_303
common/pixel.c:262:13: note: def_stmt: a6_303 = _300 - _302;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: vect_is_simple_use: operand a7_308
common/pixel.c:262:13: note: def_stmt: a7_308 = _305 - _307;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: a7_308 = _305 - _307;
common/pixel.c:262:13: note: vect_is_simple_use: operand _305
common/pixel.c:262:13: note: def_stmt: _305 = (int) _304;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: vect_is_simple_use: operand _307
common/pixel.c:262:13: note: def_stmt: _307 = (int) _306;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _307 = (int) _306;
common/pixel.c:262:13: note: vect_is_simple_use: operand _306
common/pixel.c:262:13: note: def_stmt: _306 = MEM[(uint8_t *)p2_14 + 7B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _306 = MEM[(uint8_t *)p2_14 + 7B];
common/pixel.c:262:13: note: worklist: examine stmt: _305 = (int) _304;
common/pixel.c:262:13: note: vect_is_simple_use: operand _304
common/pixel.c:262:13: note: def_stmt: _304 = MEM[(uint8_t *)p1_12 + 7B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _304 = MEM[(uint8_t *)p1_12 + 7B];
common/pixel.c:262:13: note: worklist: examine stmt: a6_303 = _300 - _302;
common/pixel.c:262:13: note: vect_is_simple_use: operand _300
common/pixel.c:262:13: note: def_stmt: _300 = (int) _299;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: vect_is_simple_use: operand _302
common/pixel.c:262:13: note: def_stmt: _302 = (int) _301;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _302 = (int) _301;
common/pixel.c:262:13: note: vect_is_simple_use: operand _301
common/pixel.c:262:13: note: def_stmt: _301 = MEM[(uint8_t *)p2_14 + 6B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _301 = MEM[(uint8_t *)p2_14 + 6B];
common/pixel.c:262:13: note: worklist: examine stmt: _300 = (int) _299;
common/pixel.c:262:13: note: vect_is_simple_use: operand _299
common/pixel.c:262:13: note: def_stmt: _299 = MEM[(uint8_t *)p1_12 + 6B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _299 = MEM[(uint8_t *)p1_12 + 6B];
common/pixel.c:262:13: note: worklist: examine stmt: t1_318 = a4_293 - a5_298;
common/pixel.c:262:13: note: vect_is_simple_use: operand a4_293
common/pixel.c:262:13: note: def_stmt: a4_293 = _290 - _292;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: vect_is_simple_use: operand a5_298
common/pixel.c:262:13: note: def_stmt: a5_298 = _295 - _297;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: a5_298 = _295 - _297;
common/pixel.c:262:13: note: vect_is_simple_use: operand _295
common/pixel.c:262:13: note: def_stmt: _295 = (int) _294;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: vect_is_simple_use: operand _297
common/pixel.c:262:13: note: def_stmt: _297 = (int) _296;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _297 = (int) _296;
common/pixel.c:262:13: note: vect_is_simple_use: operand _296
common/pixel.c:262:13: note: def_stmt: _296 = MEM[(uint8_t *)p2_14 + 5B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _296 = MEM[(uint8_t *)p2_14 + 5B];
common/pixel.c:262:13: note: worklist: examine stmt: _295 = (int) _294;
common/pixel.c:262:13: note: vect_is_simple_use: operand _294
common/pixel.c:262:13: note: def_stmt: _294 = MEM[(uint8_t *)p1_12 + 5B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _294 = MEM[(uint8_t *)p1_12 + 5B];
common/pixel.c:262:13: note: worklist: examine stmt: a4_293 = _290 - _292;
common/pixel.c:262:13: note: vect_is_simple_use: operand _290
common/pixel.c:262:13: note: def_stmt: _290 = (int) _289;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: vect_is_simple_use: operand _292
common/pixel.c:262:13: note: def_stmt: _292 = (int) _291;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _292 = (int) _291;
common/pixel.c:262:13: note: vect_is_simple_use: operand _291
common/pixel.c:262:13: note: def_stmt: _291 = MEM[(uint8_t *)p2_14 + 4B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _291 = MEM[(uint8_t *)p2_14 + 4B];
common/pixel.c:262:13: note: worklist: examine stmt: _290 = (int) _289;
common/pixel.c:262:13: note: vect_is_simple_use: operand _289
common/pixel.c:262:13: note: def_stmt: _289 = MEM[(uint8_t *)p1_12 + 4B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _289 = MEM[(uint8_t *)p1_12 + 4B];
common/pixel.c:262:13: note: worklist: examine stmt: _349 = (unsigned short) b3_316;
common/pixel.c:262:13: note: vect_is_simple_use: operand b3_316
common/pixel.c:262:13: note: def_stmt: b3_316 = t1_310 - t3_312;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: b3_316 = t1_310 - t3_312;
common/pixel.c:262:13: note: vect_is_simple_use: operand t1_310
common/pixel.c:262:13: note: def_stmt: t1_310 = a0_273 - a1_278;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: vect_is_simple_use: operand t3_312
common/pixel.c:262:13: note: def_stmt: t3_312 = a2_283 - a3_288;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: t3_312 = a2_283 - a3_288;
common/pixel.c:262:13: note: vect_is_simple_use: operand a2_283
common/pixel.c:262:13: note: def_stmt: a2_283 = _280 - _282;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: vect_is_simple_use: operand a3_288
common/pixel.c:262:13: note: def_stmt: a3_288 = _285 - _287;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: a3_288 = _285 - _287;
common/pixel.c:262:13: note: vect_is_simple_use: operand _285
common/pixel.c:262:13: note: def_stmt: _285 = (int) _284;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: vect_is_simple_use: operand _287
common/pixel.c:262:13: note: def_stmt: _287 = (int) _286;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _287 = (int) _286;
common/pixel.c:262:13: note: vect_is_simple_use: operand _286
common/pixel.c:262:13: note: def_stmt: _286 = MEM[(uint8_t *)p2_14 + 3B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _286 = MEM[(uint8_t *)p2_14 + 3B];
common/pixel.c:262:13: note: worklist: examine stmt: _285 = (int) _284;
common/pixel.c:262:13: note: vect_is_simple_use: operand _284
common/pixel.c:262:13: note: def_stmt: _284 = MEM[(uint8_t *)p1_12 + 3B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _284 = MEM[(uint8_t *)p1_12 + 3B];
common/pixel.c:262:13: note: worklist: examine stmt: a2_283 = _280 - _282;
common/pixel.c:262:13: note: vect_is_simple_use: operand _280
common/pixel.c:262:13: note: def_stmt: _280 = (int) _279;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: vect_is_simple_use: operand _282
common/pixel.c:262:13: note: def_stmt: _282 = (int) _281;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _282 = (int) _281;
common/pixel.c:262:13: note: vect_is_simple_use: operand _281
common/pixel.c:262:13: note: def_stmt: _281 = MEM[(uint8_t *)p2_14 + 2B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _281 = MEM[(uint8_t *)p2_14 + 2B];
common/pixel.c:262:13: note: worklist: examine stmt: _280 = (int) _279;
common/pixel.c:262:13: note: vect_is_simple_use: operand _279
common/pixel.c:262:13: note: def_stmt: _279 = MEM[(uint8_t *)p1_12 + 2B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _279 = MEM[(uint8_t *)p1_12 + 2B];
common/pixel.c:262:13: note: worklist: examine stmt: t1_310 = a0_273 - a1_278;
common/pixel.c:262:13: note: vect_is_simple_use: operand a0_273
common/pixel.c:262:13: note: def_stmt: a0_273 = _270 - _272;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: vect_is_simple_use: operand a1_278
common/pixel.c:262:13: note: def_stmt: a1_278 = _275 - _277;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: a1_278 = _275 - _277;
common/pixel.c:262:13: note: vect_is_simple_use: operand _275
common/pixel.c:262:13: note: def_stmt: _275 = (int) _274;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: vect_is_simple_use: operand _277
common/pixel.c:262:13: note: def_stmt: _277 = (int) _276;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _277 = (int) _276;
common/pixel.c:262:13: note: vect_is_simple_use: operand _276
common/pixel.c:262:13: note: def_stmt: _276 = MEM[(uint8_t *)p2_14 + 1B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _276 = MEM[(uint8_t *)p2_14 + 1B];
common/pixel.c:262:13: note: worklist: examine stmt: _275 = (int) _274;
common/pixel.c:262:13: note: vect_is_simple_use: operand _274
common/pixel.c:262:13: note: def_stmt: _274 = MEM[(uint8_t *)p1_12 + 1B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _274 = MEM[(uint8_t *)p1_12 + 1B];
common/pixel.c:262:13: note: worklist: examine stmt: a0_273 = _270 - _272;
common/pixel.c:262:13: note: vect_is_simple_use: operand _270
common/pixel.c:262:13: note: def_stmt: _270 = (int) _269;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: vect_is_simple_use: operand _272
common/pixel.c:262:13: note: def_stmt: _272 = (int) _271;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _272 = (int) _271;
common/pixel.c:262:13: note: vect_is_simple_use: operand _271
common/pixel.c:262:13: note: def_stmt: _271 = *p2_14;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _271 = *p2_14;
common/pixel.c:262:13: note: worklist: examine stmt: _270 = (int) _269;
common/pixel.c:262:13: note: vect_is_simple_use: operand _269
common/pixel.c:262:13: note: def_stmt: _269 = *p1_12;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _269 = *p1_12;
common/pixel.c:262:13: note: worklist: examine stmt: diff[i_10][3] = _352;
common/pixel.c:262:13: note: vect_is_simple_use: operand _352
common/pixel.c:262:13: note: def_stmt: _352 = (short int) _351;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _352 = (short int) _351;
common/pixel.c:262:13: note: vect_is_simple_use: operand _351
common/pixel.c:262:13: note: def_stmt: _351 = _349 + _350;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _351 = _349 + _350;
common/pixel.c:262:13: note: vect_is_simple_use: operand _349
common/pixel.c:262:13: note: def_stmt: _349 = (unsigned short) b3_316;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: already marked relevant/live.
common/pixel.c:262:13: note: vect_is_simple_use: operand _350
common/pixel.c:262:13: note: def_stmt: _350 = (unsigned short) b7_324;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: already marked relevant/live.
common/pixel.c:262:13: note: worklist: examine stmt: diff[i_10][6] = _347;
common/pixel.c:262:13: note: vect_is_simple_use: operand _347
common/pixel.c:262:13: note: def_stmt: _347 = (short int) _346;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _347 = (short int) _346;
common/pixel.c:262:13: note: vect_is_simple_use: operand _346
common/pixel.c:262:13: note: def_stmt: _346 = _341 - _342;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _346 = _341 - _342;
common/pixel.c:262:13: note: vect_is_simple_use: operand _341
common/pixel.c:262:13: note: def_stmt: _341 = (unsigned short) b2_314;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: vect_is_simple_use: operand _342
common/pixel.c:262:13: note: def_stmt: _342 = (unsigned short) b6_322;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _342 = (unsigned short) b6_322;
common/pixel.c:262:13: note: vect_is_simple_use: operand b6_322
common/pixel.c:262:13: note: def_stmt: b6_322 = t0_317 - t2_319;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: b6_322 = t0_317 - t2_319;
common/pixel.c:262:13: note: vect_is_simple_use: operand t0_317
common/pixel.c:262:13: note: def_stmt: t0_317 = a4_293 + a5_298;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: vect_is_simple_use: operand t2_319
common/pixel.c:262:13: note: def_stmt: t2_319 = a6_303 + a7_308;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: t2_319 = a6_303 + a7_308;
common/pixel.c:262:13: note: vect_is_simple_use: operand a6_303
common/pixel.c:262:13: note: def_stmt: a6_303 = _300 - _302;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: already marked relevant/live.
common/pixel.c:262:13: note: vect_is_simple_use: operand a7_308
common/pixel.c:262:13: note: def_stmt: a7_308 = _305 - _307;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: already marked relevant/live.
common/pixel.c:262:13: note: worklist: examine stmt: t0_317 = a4_293 + a5_298;
common/pixel.c:262:13: note: vect_is_simple_use: operand a4_293
common/pixel.c:262:13: note: def_stmt: a4_293 = _290 - _292;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: already marked relevant/live.
common/pixel.c:262:13: note: vect_is_simple_use: operand a5_298
common/pixel.c:262:13: note: def_stmt: a5_298 = _295 - _297;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: already marked relevant/live.
common/pixel.c:262:13: note: worklist: examine stmt: _341 = (unsigned short) b2_314;
common/pixel.c:262:13: note: vect_is_simple_use: operand b2_314
common/pixel.c:262:13: note: def_stmt: b2_314 = t0_309 - t2_311;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: b2_314 = t0_309 - t2_311;
common/pixel.c:262:13: note: vect_is_simple_use: operand t0_309
common/pixel.c:262:13: note: def_stmt: t0_309 = a0_273 + a1_278;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: vect_is_simple_use: operand t2_311
common/pixel.c:262:13: note: def_stmt: t2_311 = a2_283 + a3_288;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: t2_311 = a2_283 + a3_288;
common/pixel.c:262:13: note: vect_is_simple_use: operand a2_283
common/pixel.c:262:13: note: def_stmt: a2_283 = _280 - _282;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: already marked relevant/live.
common/pixel.c:262:13: note: vect_is_simple_use: operand a3_288
common/pixel.c:262:13: note: def_stmt: a3_288 = _285 - _287;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: already marked relevant/live.
common/pixel.c:262:13: note: worklist: examine stmt: t0_309 = a0_273 + a1_278;
common/pixel.c:262:13: note: vect_is_simple_use: operand a0_273
common/pixel.c:262:13: note: def_stmt: a0_273 = _270 - _272;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: already marked relevant/live.
common/pixel.c:262:13: note: vect_is_simple_use: operand a1_278
common/pixel.c:262:13: note: def_stmt: a1_278 = _275 - _277;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: already marked relevant/live.
common/pixel.c:262:13: note: worklist: examine stmt: diff[i_10][2] = _344;
common/pixel.c:262:13: note: vect_is_simple_use: operand _344
common/pixel.c:262:13: note: def_stmt: _344 = (short int) _343;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _344 = (short int) _343;
common/pixel.c:262:13: note: vect_is_simple_use: operand _343
common/pixel.c:262:13: note: def_stmt: _343 = _341 + _342;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _343 = _341 + _342;
common/pixel.c:262:13: note: vect_is_simple_use: operand _341
common/pixel.c:262:13: note: def_stmt: _341 = (unsigned short) b2_314;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: already marked relevant/live.
common/pixel.c:262:13: note: vect_is_simple_use: operand _342
common/pixel.c:262:13: note: def_stmt: _342 = (unsigned short) b6_322;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: already marked relevant/live.
common/pixel.c:262:13: note: worklist: examine stmt: diff[i_10][5] = _339;
common/pixel.c:262:13: note: vect_is_simple_use: operand _339
common/pixel.c:262:13: note: def_stmt: _339 = (short int) _338;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _339 = (short int) _338;
common/pixel.c:262:13: note: vect_is_simple_use: operand _338
common/pixel.c:262:13: note: def_stmt: _338 = _333 - _334;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _338 = _333 - _334;
common/pixel.c:262:13: note: vect_is_simple_use: operand _333
common/pixel.c:262:13: note: def_stmt: _333 = (unsigned short) b1_315;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: vect_is_simple_use: operand _334
common/pixel.c:262:13: note: def_stmt: _334 = (unsigned short) b5_323;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _334 = (unsigned short) b5_323;
common/pixel.c:262:13: note: vect_is_simple_use: operand b5_323
common/pixel.c:262:13: note: def_stmt: b5_323 = t1_318 + t3_320;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: b5_323 = t1_318 + t3_320;
common/pixel.c:262:13: note: vect_is_simple_use: operand t1_318
common/pixel.c:262:13: note: def_stmt: t1_318 = a4_293 - a5_298;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: already marked relevant/live.
common/pixel.c:262:13: note: vect_is_simple_use: operand t3_320
common/pixel.c:262:13: note: def_stmt: t3_320 = a6_303 - a7_308;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: already marked relevant/live.
common/pixel.c:262:13: note: worklist: examine stmt: _333 = (unsigned short) b1_315;
common/pixel.c:262:13: note: vect_is_simple_use: operand b1_315
common/pixel.c:262:13: note: def_stmt: b1_315 = t1_310 + t3_312;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: b1_315 = t1_310 + t3_312;
common/pixel.c:262:13: note: vect_is_simple_use: operand t1_310
common/pixel.c:262:13: note: def_stmt: t1_310 = a0_273 - a1_278;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: already marked relevant/live.
common/pixel.c:262:13: note: vect_is_simple_use: operand t3_312
common/pixel.c:262:13: note: def_stmt: t3_312 = a2_283 - a3_288;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: already marked relevant/live.
common/pixel.c:262:13: note: worklist: examine stmt: diff[i_10][1] = _336;
common/pixel.c:262:13: note: vect_is_simple_use: operand _336
common/pixel.c:262:13: note: def_stmt: _336 = (short int) _335;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _336 = (short int) _335;
common/pixel.c:262:13: note: vect_is_simple_use: operand _335
common/pixel.c:262:13: note: def_stmt: _335 = _333 + _334;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _335 = _333 + _334;
common/pixel.c:262:13: note: vect_is_simple_use: operand _333
common/pixel.c:262:13: note: def_stmt: _333 = (unsigned short) b1_315;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: already marked relevant/live.
common/pixel.c:262:13: note: vect_is_simple_use: operand _334
common/pixel.c:262:13: note: def_stmt: _334 = (unsigned short) b5_323;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: already marked relevant/live.
common/pixel.c:262:13: note: worklist: examine stmt: diff[i_10][4] = _331;
common/pixel.c:262:13: note: vect_is_simple_use: operand _331
common/pixel.c:262:13: note: def_stmt: _331 = (short int) _330;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _331 = (short int) _330;
common/pixel.c:262:13: note: vect_is_simple_use: operand _330
common/pixel.c:262:13: note: def_stmt: _330 = _325 - _326;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _330 = _325 - _326;
common/pixel.c:262:13: note: vect_is_simple_use: operand _325
common/pixel.c:262:13: note: def_stmt: _325 = (unsigned short) b0_313;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: vect_is_simple_use: operand _326
common/pixel.c:262:13: note: def_stmt: _326 = (unsigned short) b4_321;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _326 = (unsigned short) b4_321;
common/pixel.c:262:13: note: vect_is_simple_use: operand b4_321
common/pixel.c:262:13: note: def_stmt: b4_321 = t0_317 + t2_319;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: b4_321 = t0_317 + t2_319;
common/pixel.c:262:13: note: vect_is_simple_use: operand t0_317
common/pixel.c:262:13: note: def_stmt: t0_317 = a4_293 + a5_298;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: already marked relevant/live.
common/pixel.c:262:13: note: vect_is_simple_use: operand t2_319
common/pixel.c:262:13: note: def_stmt: t2_319 = a6_303 + a7_308;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: already marked relevant/live.
common/pixel.c:262:13: note: worklist: examine stmt: _325 = (unsigned short) b0_313;
common/pixel.c:262:13: note: vect_is_simple_use: operand b0_313
common/pixel.c:262:13: note: def_stmt: b0_313 = t0_309 + t2_311;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: b0_313 = t0_309 + t2_311;
common/pixel.c:262:13: note: vect_is_simple_use: operand t0_309
common/pixel.c:262:13: note: def_stmt: t0_309 = a0_273 + a1_278;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: already marked relevant/live.
common/pixel.c:262:13: note: vect_is_simple_use: operand t2_311
common/pixel.c:262:13: note: def_stmt: t2_311 = a2_283 + a3_288;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: already marked relevant/live.
common/pixel.c:262:13: note: worklist: examine stmt: diff[i_10][0] = _328;
common/pixel.c:262:13: note: vect_is_simple_use: operand _328
common/pixel.c:262:13: note: def_stmt: _328 = (short int) _327;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _328 = (short int) _327;
common/pixel.c:262:13: note: vect_is_simple_use: operand _327
common/pixel.c:262:13: note: def_stmt: _327 = _325 + _326;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _327 = _325 + _326;
common/pixel.c:262:13: note: vect_is_simple_use: operand _325
common/pixel.c:262:13: note: def_stmt: _325 = (unsigned short) b0_313;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: already marked relevant/live.
common/pixel.c:262:13: note: vect_is_simple_use: operand _326
common/pixel.c:262:13: note: def_stmt: _326 = (unsigned short) b4_321;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: already marked relevant/live.
common/pixel.c:262:13: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _269 = *p1_12;
  stmt_b: _271 = *p2_14;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _269 = *p1_12;
  stmt_b: _274 = MEM[(uint8_t *)p1_12 + 1B];
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, pretmp_581}_7)
  (chrec_b = {1B, +, pretmp_581}_7)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _269 = *p1_12;
  stmt_b: _276 = MEM[(uint8_t *)p2_14 + 1B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _269 = *p1_12;
  stmt_b: _279 = MEM[(uint8_t *)p1_12 + 2B];
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, pretmp_581}_7)
  (chrec_b = {2B, +, pretmp_581}_7)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _269 = *p1_12;
  stmt_b: _281 = MEM[(uint8_t *)p2_14 + 2B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _269 = *p1_12;
  stmt_b: _284 = MEM[(uint8_t *)p1_12 + 3B];
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, pretmp_581}_7)
  (chrec_b = {3B, +, pretmp_581}_7)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _269 = *p1_12;
  stmt_b: _286 = MEM[(uint8_t *)p2_14 + 3B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _269 = *p1_12;
  stmt_b: _289 = MEM[(uint8_t *)p1_12 + 4B];
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, pretmp_581}_7)
  (chrec_b = {4B, +, pretmp_581}_7)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _269 = *p1_12;
  stmt_b: _291 = MEM[(uint8_t *)p2_14 + 4B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _269 = *p1_12;
  stmt_b: _294 = MEM[(uint8_t *)p1_12 + 5B];
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, pretmp_581}_7)
  (chrec_b = {5B, +, pretmp_581}_7)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _269 = *p1_12;
  stmt_b: _296 = MEM[(uint8_t *)p2_14 + 5B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _269 = *p1_12;
  stmt_b: _299 = MEM[(uint8_t *)p1_12 + 6B];
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, pretmp_581}_7)
  (chrec_b = {6B, +, pretmp_581}_7)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _269 = *p1_12;
  stmt_b: _301 = MEM[(uint8_t *)p2_14 + 6B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _269 = *p1_12;
  stmt_b: _304 = MEM[(uint8_t *)p1_12 + 7B];
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, pretmp_581}_7)
  (chrec_b = {7B, +, pretmp_581}_7)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _269 = *p1_12;
  stmt_b: _306 = MEM[(uint8_t *)p2_14 + 7B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _269 = *p1_12;
  stmt_b: diff[i_10][0] = _328;
) -> no dependence
(compute_affine_dependence
  stmt_a: _269 = *p1_12;
  stmt_b: diff[i_10][4] = _331;
) -> no dependence
(compute_affine_dependence
  stmt_a: _269 = *p1_12;
  stmt_b: diff[i_10][1] = _336;
) -> no dependence
(compute_affine_dependence
  stmt_a: _269 = *p1_12;
  stmt_b: diff[i_10][5] = _339;
) -> no dependence
(compute_affine_dependence
  stmt_a: _269 = *p1_12;
  stmt_b: diff[i_10][2] = _344;
) -> no dependence
(compute_affine_dependence
  stmt_a: _269 = *p1_12;
  stmt_b: diff[i_10][6] = _347;
) -> no dependence
(compute_affine_dependence
  stmt_a: _269 = *p1_12;
  stmt_b: diff[i_10][3] = _352;
) -> no dependence
(compute_affine_dependence
  stmt_a: _269 = *p1_12;
  stmt_b: diff[i_10][7] = _355;
) -> no dependence
(compute_affine_dependence
  stmt_a: _271 = *p2_14;
  stmt_b: _274 = MEM[(uint8_t *)p1_12 + 1B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _271 = *p2_14;
  stmt_b: _276 = MEM[(uint8_t *)p2_14 + 1B];
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, pretmp_582}_7)
  (chrec_b = {1B, +, pretmp_582}_7)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _271 = *p2_14;
  stmt_b: _279 = MEM[(uint8_t *)p1_12 + 2B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _271 = *p2_14;
  stmt_b: _281 = MEM[(uint8_t *)p2_14 + 2B];
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, pretmp_582}_7)
  (chrec_b = {2B, +, pretmp_582}_7)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _271 = *p2_14;
  stmt_b: _284 = MEM[(uint8_t *)p1_12 + 3B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _271 = *p2_14;
  stmt_b: _286 = MEM[(uint8_t *)p2_14 + 3B];
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, pretmp_582}_7)
  (chrec_b = {3B, +, pretmp_582}_7)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _271 = *p2_14;
  stmt_b: _289 = MEM[(uint8_t *)p1_12 + 4B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _271 = *p2_14;
  stmt_b: _291 = MEM[(uint8_t *)p2_14 + 4B];
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, pretmp_582}_7)
  (chrec_b = {4B, +, pretmp_582}_7)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _271 = *p2_14;
  stmt_b: _294 = MEM[(uint8_t *)p1_12 + 5B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _271 = *p2_14;
  stmt_b: _296 = MEM[(uint8_t *)p2_14 + 5B];
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, pretmp_582}_7)
  (chrec_b = {5B, +, pretmp_582}_7)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _271 = *p2_14;
  stmt_b: _299 = MEM[(uint8_t *)p1_12 + 6B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _271 = *p2_14;
  stmt_b: _301 = MEM[(uint8_t *)p2_14 + 6B];
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, pretmp_582}_7)
  (chrec_b = {6B, +, pretmp_582}_7)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _271 = *p2_14;
  stmt_b: _304 = MEM[(uint8_t *)p1_12 + 7B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _271 = *p2_14;
  stmt_b: _306 = MEM[(uint8_t *)p2_14 + 7B];
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, pretmp_582}_7)
  (chrec_b = {7B, +, pretmp_582}_7)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _271 = *p2_14;
  stmt_b: diff[i_10][0] = _328;
) -> no dependence
(compute_affine_dependence
  stmt_a: _271 = *p2_14;
  stmt_b: diff[i_10][4] = _331;
) -> no dependence
(compute_affine_dependence
  stmt_a: _271 = *p2_14;
  stmt_b: diff[i_10][1] = _336;
) -> no dependence
(compute_affine_dependence
  stmt_a: _271 = *p2_14;
  stmt_b: diff[i_10][5] = _339;
) -> no dependence
(compute_affine_dependence
  stmt_a: _271 = *p2_14;
  stmt_b: diff[i_10][2] = _344;
) -> no dependence
(compute_affine_dependence
  stmt_a: _271 = *p2_14;
  stmt_b: diff[i_10][6] = _347;
) -> no dependence
(compute_affine_dependence
  stmt_a: _271 = *p2_14;
  stmt_b: diff[i_10][3] = _352;
) -> no dependence
(compute_affine_dependence
  stmt_a: _271 = *p2_14;
  stmt_b: diff[i_10][7] = _355;
) -> no dependence
(compute_affine_dependence
  stmt_a: _274 = MEM[(uint8_t *)p1_12 + 1B];
  stmt_b: _276 = MEM[(uint8_t *)p2_14 + 1B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _274 = MEM[(uint8_t *)p1_12 + 1B];
  stmt_b: _279 = MEM[(uint8_t *)p1_12 + 2B];
(analyze_overlapping_iterations 
  (chrec_a = {1B, +, pretmp_581}_7)
  (chrec_b = {2B, +, pretmp_581}_7)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _274 = MEM[(uint8_t *)p1_12 + 1B];
  stmt_b: _281 = MEM[(uint8_t *)p2_14 + 2B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _274 = MEM[(uint8_t *)p1_12 + 1B];
  stmt_b: _284 = MEM[(uint8_t *)p1_12 + 3B];
(analyze_overlapping_iterations 
  (chrec_a = {1B, +, pretmp_581}_7)
  (chrec_b = {3B, +, pretmp_581}_7)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _274 = MEM[(uint8_t *)p1_12 + 1B];
  stmt_b: _286 = MEM[(uint8_t *)p2_14 + 3B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _274 = MEM[(uint8_t *)p1_12 + 1B];
  stmt_b: _289 = MEM[(uint8_t *)p1_12 + 4B];
(analyze_overlapping_iterations 
  (chrec_a = {1B, +, pretmp_581}_7)
  (chrec_b = {4B, +, pretmp_581}_7)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _274 = MEM[(uint8_t *)p1_12 + 1B];
  stmt_b: _291 = MEM[(uint8_t *)p2_14 + 4B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _274 = MEM[(uint8_t *)p1_12 + 1B];
  stmt_b: _294 = MEM[(uint8_t *)p1_12 + 5B];
(analyze_overlapping_iterations 
  (chrec_a = {1B, +, pretmp_581}_7)
  (chrec_b = {5B, +, pretmp_581}_7)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _274 = MEM[(uint8_t *)p1_12 + 1B];
  stmt_b: _296 = MEM[(uint8_t *)p2_14 + 5B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _274 = MEM[(uint8_t *)p1_12 + 1B];
  stmt_b: _299 = MEM[(uint8_t *)p1_12 + 6B];
(analyze_overlapping_iterations 
  (chrec_a = {1B, +, pretmp_581}_7)
  (chrec_b = {6B, +, pretmp_581}_7)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _274 = MEM[(uint8_t *)p1_12 + 1B];
  stmt_b: _301 = MEM[(uint8_t *)p2_14 + 6B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _274 = MEM[(uint8_t *)p1_12 + 1B];
  stmt_b: _304 = MEM[(uint8_t *)p1_12 + 7B];
(analyze_overlapping_iterations 
  (chrec_a = {1B, +, pretmp_581}_7)
  (chrec_b = {7B, +, pretmp_581}_7)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _274 = MEM[(uint8_t *)p1_12 + 1B];
  stmt_b: _306 = MEM[(uint8_t *)p2_14 + 7B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _274 = MEM[(uint8_t *)p1_12 + 1B];
  stmt_b: diff[i_10][0] = _328;
) -> no dependence
(compute_affine_dependence
  stmt_a: _274 = MEM[(uint8_t *)p1_12 + 1B];
  stmt_b: diff[i_10][4] = _331;
) -> no dependence
(compute_affine_dependence
  stmt_a: _274 = MEM[(uint8_t *)p1_12 + 1B];
  stmt_b: diff[i_10][1] = _336;
) -> no dependence
(compute_affine_dependence
  stmt_a: _274 = MEM[(uint8_t *)p1_12 + 1B];
  stmt_b: diff[i_10][5] = _339;
) -> no dependence
(compute_affine_dependence
  stmt_a: _274 = MEM[(uint8_t *)p1_12 + 1B];
  stmt_b: diff[i_10][2] = _344;
) -> no dependence
(compute_affine_dependence
  stmt_a: _274 = MEM[(uint8_t *)p1_12 + 1B];
  stmt_b: diff[i_10][6] = _347;
) -> no dependence
(compute_affine_dependence
  stmt_a: _274 = MEM[(uint8_t *)p1_12 + 1B];
  stmt_b: diff[i_10][3] = _352;
) -> no dependence
(compute_affine_dependence
  stmt_a: _274 = MEM[(uint8_t *)p1_12 + 1B];
  stmt_b: diff[i_10][7] = _355;
) -> no dependence
(compute_affine_dependence
  stmt_a: _276 = MEM[(uint8_t *)p2_14 + 1B];
  stmt_b: _279 = MEM[(uint8_t *)p1_12 + 2B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _276 = MEM[(uint8_t *)p2_14 + 1B];
  stmt_b: _281 = MEM[(uint8_t *)p2_14 + 2B];
(analyze_overlapping_iterations 
  (chrec_a = {1B, +, pretmp_582}_7)
  (chrec_b = {2B, +, pretmp_582}_7)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _276 = MEM[(uint8_t *)p2_14 + 1B];
  stmt_b: _284 = MEM[(uint8_t *)p1_12 + 3B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _276 = MEM[(uint8_t *)p2_14 + 1B];
  stmt_b: _286 = MEM[(uint8_t *)p2_14 + 3B];
(analyze_overlapping_iterations 
  (chrec_a = {1B, +, pretmp_582}_7)
  (chrec_b = {3B, +, pretmp_582}_7)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _276 = MEM[(uint8_t *)p2_14 + 1B];
  stmt_b: _289 = MEM[(uint8_t *)p1_12 + 4B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _276 = MEM[(uint8_t *)p2_14 + 1B];
  stmt_b: _291 = MEM[(uint8_t *)p2_14 + 4B];
(analyze_overlapping_iterations 
  (chrec_a = {1B, +, pretmp_582}_7)
  (chrec_b = {4B, +, pretmp_582}_7)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _276 = MEM[(uint8_t *)p2_14 + 1B];
  stmt_b: _294 = MEM[(uint8_t *)p1_12 + 5B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _276 = MEM[(uint8_t *)p2_14 + 1B];
  stmt_b: _296 = MEM[(uint8_t *)p2_14 + 5B];
(analyze_overlapping_iterations 
  (chrec_a = {1B, +, pretmp_582}_7)
  (chrec_b = {5B, +, pretmp_582}_7)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _276 = MEM[(uint8_t *)p2_14 + 1B];
  stmt_b: _299 = MEM[(uint8_t *)p1_12 + 6B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _276 = MEM[(uint8_t *)p2_14 + 1B];
  stmt_b: _301 = MEM[(uint8_t *)p2_14 + 6B];
(analyze_overlapping_iterations 
  (chrec_a = {1B, +, pretmp_582}_7)
  (chrec_b = {6B, +, pretmp_582}_7)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _276 = MEM[(uint8_t *)p2_14 + 1B];
  stmt_b: _304 = MEM[(uint8_t *)p1_12 + 7B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _276 = MEM[(uint8_t *)p2_14 + 1B];
  stmt_b: _306 = MEM[(uint8_t *)p2_14 + 7B];
(analyze_overlapping_iterations 
  (chrec_a = {1B, +, pretmp_582}_7)
  (chrec_b = {7B, +, pretmp_582}_7)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _276 = MEM[(uint8_t *)p2_14 + 1B];
  stmt_b: diff[i_10][0] = _328;
) -> no dependence
(compute_affine_dependence
  stmt_a: _276 = MEM[(uint8_t *)p2_14 + 1B];
  stmt_b: diff[i_10][4] = _331;
) -> no dependence
(compute_affine_dependence
  stmt_a: _276 = MEM[(uint8_t *)p2_14 + 1B];
  stmt_b: diff[i_10][1] = _336;
) -> no dependence
(compute_affine_dependence
  stmt_a: _276 = MEM[(uint8_t *)p2_14 + 1B];
  stmt_b: diff[i_10][5] = _339;
) -> no dependence
(compute_affine_dependence
  stmt_a: _276 = MEM[(uint8_t *)p2_14 + 1B];
  stmt_b: diff[i_10][2] = _344;
) -> no dependence
(compute_affine_dependence
  stmt_a: _276 = MEM[(uint8_t *)p2_14 + 1B];
  stmt_b: diff[i_10][6] = _347;
) -> no dependence
(compute_affine_dependence
  stmt_a: _276 = MEM[(uint8_t *)p2_14 + 1B];
  stmt_b: diff[i_10][3] = _352;
) -> no dependence
(compute_affine_dependence
  stmt_a: _276 = MEM[(uint8_t *)p2_14 + 1B];
  stmt_b: diff[i_10][7] = _355;
) -> no dependence
(compute_affine_dependence
  stmt_a: _279 = MEM[(uint8_t *)p1_12 + 2B];
  stmt_b: _281 = MEM[(uint8_t *)p2_14 + 2B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _279 = MEM[(uint8_t *)p1_12 + 2B];
  stmt_b: _284 = MEM[(uint8_t *)p1_12 + 3B];
(analyze_overlapping_iterations 
  (chrec_a = {2B, +, pretmp_581}_7)
  (chrec_b = {3B, +, pretmp_581}_7)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _279 = MEM[(uint8_t *)p1_12 + 2B];
  stmt_b: _286 = MEM[(uint8_t *)p2_14 + 3B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _279 = MEM[(uint8_t *)p1_12 + 2B];
  stmt_b: _289 = MEM[(uint8_t *)p1_12 + 4B];
(analyze_overlapping_iterations 
  (chrec_a = {2B, +, pretmp_581}_7)
  (chrec_b = {4B, +, pretmp_581}_7)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _279 = MEM[(uint8_t *)p1_12 + 2B];
  stmt_b: _291 = MEM[(uint8_t *)p2_14 + 4B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _279 = MEM[(uint8_t *)p1_12 + 2B];
  stmt_b: _294 = MEM[(uint8_t *)p1_12 + 5B];
(analyze_overlapping_iterations 
  (chrec_a = {2B, +, pretmp_581}_7)
  (chrec_b = {5B, +, pretmp_581}_7)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _279 = MEM[(uint8_t *)p1_12 + 2B];
  stmt_b: _296 = MEM[(uint8_t *)p2_14 + 5B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _279 = MEM[(uint8_t *)p1_12 + 2B];
  stmt_b: _299 = MEM[(uint8_t *)p1_12 + 6B];
(analyze_overlapping_iterations 
  (chrec_a = {2B, +, pretmp_581}_7)
  (chrec_b = {6B, +, pretmp_581}_7)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _279 = MEM[(uint8_t *)p1_12 + 2B];
  stmt_b: _301 = MEM[(uint8_t *)p2_14 + 6B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _279 = MEM[(uint8_t *)p1_12 + 2B];
  stmt_b: _304 = MEM[(uint8_t *)p1_12 + 7B];
(analyze_overlapping_iterations 
  (chrec_a = {2B, +, pretmp_581}_7)
  (chrec_b = {7B, +, pretmp_581}_7)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _279 = MEM[(uint8_t *)p1_12 + 2B];
  stmt_b: _306 = MEM[(uint8_t *)p2_14 + 7B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _279 = MEM[(uint8_t *)p1_12 + 2B];
  stmt_b: diff[i_10][0] = _328;
) -> no dependence
(compute_affine_dependence
  stmt_a: _279 = MEM[(uint8_t *)p1_12 + 2B];
  stmt_b: diff[i_10][4] = _331;
) -> no dependence
(compute_affine_dependence
  stmt_a: _279 = MEM[(uint8_t *)p1_12 + 2B];
  stmt_b: diff[i_10][1] = _336;
) -> no dependence
(compute_affine_dependence
  stmt_a: _279 = MEM[(uint8_t *)p1_12 + 2B];
  stmt_b: diff[i_10][5] = _339;
) -> no dependence
(compute_affine_dependence
  stmt_a: _279 = MEM[(uint8_t *)p1_12 + 2B];
  stmt_b: diff[i_10][2] = _344;
) -> no dependence
(compute_affine_dependence
  stmt_a: _279 = MEM[(uint8_t *)p1_12 + 2B];
  stmt_b: diff[i_10][6] = _347;
) -> no dependence
(compute_affine_dependence
  stmt_a: _279 = MEM[(uint8_t *)p1_12 + 2B];
  stmt_b: diff[i_10][3] = _352;
) -> no dependence
(compute_affine_dependence
  stmt_a: _279 = MEM[(uint8_t *)p1_12 + 2B];
  stmt_b: diff[i_10][7] = _355;
) -> no dependence
(compute_affine_dependence
  stmt_a: _281 = MEM[(uint8_t *)p2_14 + 2B];
  stmt_b: _284 = MEM[(uint8_t *)p1_12 + 3B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _281 = MEM[(uint8_t *)p2_14 + 2B];
  stmt_b: _286 = MEM[(uint8_t *)p2_14 + 3B];
(analyze_overlapping_iterations 
  (chrec_a = {2B, +, pretmp_582}_7)
  (chrec_b = {3B, +, pretmp_582}_7)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _281 = MEM[(uint8_t *)p2_14 + 2B];
  stmt_b: _289 = MEM[(uint8_t *)p1_12 + 4B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _281 = MEM[(uint8_t *)p2_14 + 2B];
  stmt_b: _291 = MEM[(uint8_t *)p2_14 + 4B];
(analyze_overlapping_iterations 
  (chrec_a = {2B, +, pretmp_582}_7)
  (chrec_b = {4B, +, pretmp_582}_7)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _281 = MEM[(uint8_t *)p2_14 + 2B];
  stmt_b: _294 = MEM[(uint8_t *)p1_12 + 5B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _281 = MEM[(uint8_t *)p2_14 + 2B];
  stmt_b: _296 = MEM[(uint8_t *)p2_14 + 5B];
(analyze_overlapping_iterations 
  (chrec_a = {2B, +, pretmp_582}_7)
  (chrec_b = {5B, +, pretmp_582}_7)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _281 = MEM[(uint8_t *)p2_14 + 2B];
  stmt_b: _299 = MEM[(uint8_t *)p1_12 + 6B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _281 = MEM[(uint8_t *)p2_14 + 2B];
  stmt_b: _301 = MEM[(uint8_t *)p2_14 + 6B];
(analyze_overlapping_iterations 
  (chrec_a = {2B, +, pretmp_582}_7)
  (chrec_b = {6B, +, pretmp_582}_7)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _281 = MEM[(uint8_t *)p2_14 + 2B];
  stmt_b: _304 = MEM[(uint8_t *)p1_12 + 7B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _281 = MEM[(uint8_t *)p2_14 + 2B];
  stmt_b: _306 = MEM[(uint8_t *)p2_14 + 7B];
(analyze_overlapping_iterations 
  (chrec_a = {2B, +, pretmp_582}_7)
  (chrec_b = {7B, +, pretmp_582}_7)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _281 = MEM[(uint8_t *)p2_14 + 2B];
  stmt_b: diff[i_10][0] = _328;
) -> no dependence
(compute_affine_dependence
  stmt_a: _281 = MEM[(uint8_t *)p2_14 + 2B];
  stmt_b: diff[i_10][4] = _331;
) -> no dependence
(compute_affine_dependence
  stmt_a: _281 = MEM[(uint8_t *)p2_14 + 2B];
  stmt_b: diff[i_10][1] = _336;
) -> no dependence
(compute_affine_dependence
  stmt_a: _281 = MEM[(uint8_t *)p2_14 + 2B];
  stmt_b: diff[i_10][5] = _339;
) -> no dependence
(compute_affine_dependence
  stmt_a: _281 = MEM[(uint8_t *)p2_14 + 2B];
  stmt_b: diff[i_10][2] = _344;
) -> no dependence
(compute_affine_dependence
  stmt_a: _281 = MEM[(uint8_t *)p2_14 + 2B];
  stmt_b: diff[i_10][6] = _347;
) -> no dependence
(compute_affine_dependence
  stmt_a: _281 = MEM[(uint8_t *)p2_14 + 2B];
  stmt_b: diff[i_10][3] = _352;
) -> no dependence
(compute_affine_dependence
  stmt_a: _281 = MEM[(uint8_t *)p2_14 + 2B];
  stmt_b: diff[i_10][7] = _355;
) -> no dependence
(compute_affine_dependence
  stmt_a: _284 = MEM[(uint8_t *)p1_12 + 3B];
  stmt_b: _286 = MEM[(uint8_t *)p2_14 + 3B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _284 = MEM[(uint8_t *)p1_12 + 3B];
  stmt_b: _289 = MEM[(uint8_t *)p1_12 + 4B];
(analyze_overlapping_iterations 
  (chrec_a = {3B, +, pretmp_581}_7)
  (chrec_b = {4B, +, pretmp_581}_7)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _284 = MEM[(uint8_t *)p1_12 + 3B];
  stmt_b: _291 = MEM[(uint8_t *)p2_14 + 4B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _284 = MEM[(uint8_t *)p1_12 + 3B];
  stmt_b: _294 = MEM[(uint8_t *)p1_12 + 5B];
(analyze_overlapping_iterations 
  (chrec_a = {3B, +, pretmp_581}_7)
  (chrec_b = {5B, +, pretmp_581}_7)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _284 = MEM[(uint8_t *)p1_12 + 3B];
  stmt_b: _296 = MEM[(uint8_t *)p2_14 + 5B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _284 = MEM[(uint8_t *)p1_12 + 3B];
  stmt_b: _299 = MEM[(uint8_t *)p1_12 + 6B];
(analyze_overlapping_iterations 
  (chrec_a = {3B, +, pretmp_581}_7)
  (chrec_b = {6B, +, pretmp_581}_7)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _284 = MEM[(uint8_t *)p1_12 + 3B];
  stmt_b: _301 = MEM[(uint8_t *)p2_14 + 6B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _284 = MEM[(uint8_t *)p1_12 + 3B];
  stmt_b: _304 = MEM[(uint8_t *)p1_12 + 7B];
(analyze_overlapping_iterations 
  (chrec_a = {3B, +, pretmp_581}_7)
  (chrec_b = {7B, +, pretmp_581}_7)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _284 = MEM[(uint8_t *)p1_12 + 3B];
  stmt_b: _306 = MEM[(uint8_t *)p2_14 + 7B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _284 = MEM[(uint8_t *)p1_12 + 3B];
  stmt_b: diff[i_10][0] = _328;
) -> no dependence
(compute_affine_dependence
  stmt_a: _284 = MEM[(uint8_t *)p1_12 + 3B];
  stmt_b: diff[i_10][4] = _331;
) -> no dependence
(compute_affine_dependence
  stmt_a: _284 = MEM[(uint8_t *)p1_12 + 3B];
  stmt_b: diff[i_10][1] = _336;
) -> no dependence
(compute_affine_dependence
  stmt_a: _284 = MEM[(uint8_t *)p1_12 + 3B];
  stmt_b: diff[i_10][5] = _339;
) -> no dependence
(compute_affine_dependence
  stmt_a: _284 = MEM[(uint8_t *)p1_12 + 3B];
  stmt_b: diff[i_10][2] = _344;
) -> no dependence
(compute_affine_dependence
  stmt_a: _284 = MEM[(uint8_t *)p1_12 + 3B];
  stmt_b: diff[i_10][6] = _347;
) -> no dependence
(compute_affine_dependence
  stmt_a: _284 = MEM[(uint8_t *)p1_12 + 3B];
  stmt_b: diff[i_10][3] = _352;
) -> no dependence
(compute_affine_dependence
  stmt_a: _284 = MEM[(uint8_t *)p1_12 + 3B];
  stmt_b: diff[i_10][7] = _355;
) -> no dependence
(compute_affine_dependence
  stmt_a: _286 = MEM[(uint8_t *)p2_14 + 3B];
  stmt_b: _289 = MEM[(uint8_t *)p1_12 + 4B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _286 = MEM[(uint8_t *)p2_14 + 3B];
  stmt_b: _291 = MEM[(uint8_t *)p2_14 + 4B];
(analyze_overlapping_iterations 
  (chrec_a = {3B, +, pretmp_582}_7)
  (chrec_b = {4B, +, pretmp_582}_7)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _286 = MEM[(uint8_t *)p2_14 + 3B];
  stmt_b: _294 = MEM[(uint8_t *)p1_12 + 5B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _286 = MEM[(uint8_t *)p2_14 + 3B];
  stmt_b: _296 = MEM[(uint8_t *)p2_14 + 5B];
(analyze_overlapping_iterations 
  (chrec_a = {3B, +, pretmp_582}_7)
  (chrec_b = {5B, +, pretmp_582}_7)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _286 = MEM[(uint8_t *)p2_14 + 3B];
  stmt_b: _299 = MEM[(uint8_t *)p1_12 + 6B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _286 = MEM[(uint8_t *)p2_14 + 3B];
  stmt_b: _301 = MEM[(uint8_t *)p2_14 + 6B];
(analyze_overlapping_iterations 
  (chrec_a = {3B, +, pretmp_582}_7)
  (chrec_b = {6B, +, pretmp_582}_7)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _286 = MEM[(uint8_t *)p2_14 + 3B];
  stmt_b: _304 = MEM[(uint8_t *)p1_12 + 7B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _286 = MEM[(uint8_t *)p2_14 + 3B];
  stmt_b: _306 = MEM[(uint8_t *)p2_14 + 7B];
(analyze_overlapping_iterations 
  (chrec_a = {3B, +, pretmp_582}_7)
  (chrec_b = {7B, +, pretmp_582}_7)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _286 = MEM[(uint8_t *)p2_14 + 3B];
  stmt_b: diff[i_10][0] = _328;
) -> no dependence
(compute_affine_dependence
  stmt_a: _286 = MEM[(uint8_t *)p2_14 + 3B];
  stmt_b: diff[i_10][4] = _331;
) -> no dependence
(compute_affine_dependence
  stmt_a: _286 = MEM[(uint8_t *)p2_14 + 3B];
  stmt_b: diff[i_10][1] = _336;
) -> no dependence
(compute_affine_dependence
  stmt_a: _286 = MEM[(uint8_t *)p2_14 + 3B];
  stmt_b: diff[i_10][5] = _339;
) -> no dependence
(compute_affine_dependence
  stmt_a: _286 = MEM[(uint8_t *)p2_14 + 3B];
  stmt_b: diff[i_10][2] = _344;
) -> no dependence
(compute_affine_dependence
  stmt_a: _286 = MEM[(uint8_t *)p2_14 + 3B];
  stmt_b: diff[i_10][6] = _347;
) -> no dependence
(compute_affine_dependence
  stmt_a: _286 = MEM[(uint8_t *)p2_14 + 3B];
  stmt_b: diff[i_10][3] = _352;
) -> no dependence
(compute_affine_dependence
  stmt_a: _286 = MEM[(uint8_t *)p2_14 + 3B];
  stmt_b: diff[i_10][7] = _355;
) -> no dependence
(compute_affine_dependence
  stmt_a: _289 = MEM[(uint8_t *)p1_12 + 4B];
  stmt_b: _291 = MEM[(uint8_t *)p2_14 + 4B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _289 = MEM[(uint8_t *)p1_12 + 4B];
  stmt_b: _294 = MEM[(uint8_t *)p1_12 + 5B];
(analyze_overlapping_iterations 
  (chrec_a = {4B, +, pretmp_581}_7)
  (chrec_b = {5B, +, pretmp_581}_7)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _289 = MEM[(uint8_t *)p1_12 + 4B];
  stmt_b: _296 = MEM[(uint8_t *)p2_14 + 5B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _289 = MEM[(uint8_t *)p1_12 + 4B];
  stmt_b: _299 = MEM[(uint8_t *)p1_12 + 6B];
(analyze_overlapping_iterations 
  (chrec_a = {4B, +, pretmp_581}_7)
  (chrec_b = {6B, +, pretmp_581}_7)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _289 = MEM[(uint8_t *)p1_12 + 4B];
  stmt_b: _301 = MEM[(uint8_t *)p2_14 + 6B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _289 = MEM[(uint8_t *)p1_12 + 4B];
  stmt_b: _304 = MEM[(uint8_t *)p1_12 + 7B];
(analyze_overlapping_iterations 
  (chrec_a = {4B, +, pretmp_581}_7)
  (chrec_b = {7B, +, pretmp_581}_7)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _289 = MEM[(uint8_t *)p1_12 + 4B];
  stmt_b: _306 = MEM[(uint8_t *)p2_14 + 7B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _289 = MEM[(uint8_t *)p1_12 + 4B];
  stmt_b: diff[i_10][0] = _328;
) -> no dependence
(compute_affine_dependence
  stmt_a: _289 = MEM[(uint8_t *)p1_12 + 4B];
  stmt_b: diff[i_10][4] = _331;
) -> no dependence
(compute_affine_dependence
  stmt_a: _289 = MEM[(uint8_t *)p1_12 + 4B];
  stmt_b: diff[i_10][1] = _336;
) -> no dependence
(compute_affine_dependence
  stmt_a: _289 = MEM[(uint8_t *)p1_12 + 4B];
  stmt_b: diff[i_10][5] = _339;
) -> no dependence
(compute_affine_dependence
  stmt_a: _289 = MEM[(uint8_t *)p1_12 + 4B];
  stmt_b: diff[i_10][2] = _344;
) -> no dependence
(compute_affine_dependence
  stmt_a: _289 = MEM[(uint8_t *)p1_12 + 4B];
  stmt_b: diff[i_10][6] = _347;
) -> no dependence
(compute_affine_dependence
  stmt_a: _289 = MEM[(uint8_t *)p1_12 + 4B];
  stmt_b: diff[i_10][3] = _352;
) -> no dependence
(compute_affine_dependence
  stmt_a: _289 = MEM[(uint8_t *)p1_12 + 4B];
  stmt_b: diff[i_10][7] = _355;
) -> no dependence
(compute_affine_dependence
  stmt_a: _291 = MEM[(uint8_t *)p2_14 + 4B];
  stmt_b: _294 = MEM[(uint8_t *)p1_12 + 5B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _291 = MEM[(uint8_t *)p2_14 + 4B];
  stmt_b: _296 = MEM[(uint8_t *)p2_14 + 5B];
(analyze_overlapping_iterations 
  (chrec_a = {4B, +, pretmp_582}_7)
  (chrec_b = {5B, +, pretmp_582}_7)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _291 = MEM[(uint8_t *)p2_14 + 4B];
  stmt_b: _299 = MEM[(uint8_t *)p1_12 + 6B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _291 = MEM[(uint8_t *)p2_14 + 4B];
  stmt_b: _301 = MEM[(uint8_t *)p2_14 + 6B];
(analyze_overlapping_iterations 
  (chrec_a = {4B, +, pretmp_582}_7)
  (chrec_b = {6B, +, pretmp_582}_7)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _291 = MEM[(uint8_t *)p2_14 + 4B];
  stmt_b: _304 = MEM[(uint8_t *)p1_12 + 7B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _291 = MEM[(uint8_t *)p2_14 + 4B];
  stmt_b: _306 = MEM[(uint8_t *)p2_14 + 7B];
(analyze_overlapping_iterations 
  (chrec_a = {4B, +, pretmp_582}_7)
  (chrec_b = {7B, +, pretmp_582}_7)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _291 = MEM[(uint8_t *)p2_14 + 4B];
  stmt_b: diff[i_10][0] = _328;
) -> no dependence
(compute_affine_dependence
  stmt_a: _291 = MEM[(uint8_t *)p2_14 + 4B];
  stmt_b: diff[i_10][4] = _331;
) -> no dependence
(compute_affine_dependence
  stmt_a: _291 = MEM[(uint8_t *)p2_14 + 4B];
  stmt_b: diff[i_10][1] = _336;
) -> no dependence
(compute_affine_dependence
  stmt_a: _291 = MEM[(uint8_t *)p2_14 + 4B];
  stmt_b: diff[i_10][5] = _339;
) -> no dependence
(compute_affine_dependence
  stmt_a: _291 = MEM[(uint8_t *)p2_14 + 4B];
  stmt_b: diff[i_10][2] = _344;
) -> no dependence
(compute_affine_dependence
  stmt_a: _291 = MEM[(uint8_t *)p2_14 + 4B];
  stmt_b: diff[i_10][6] = _347;
) -> no dependence
(compute_affine_dependence
  stmt_a: _291 = MEM[(uint8_t *)p2_14 + 4B];
  stmt_b: diff[i_10][3] = _352;
) -> no dependence
(compute_affine_dependence
  stmt_a: _291 = MEM[(uint8_t *)p2_14 + 4B];
  stmt_b: diff[i_10][7] = _355;
) -> no dependence
(compute_affine_dependence
  stmt_a: _294 = MEM[(uint8_t *)p1_12 + 5B];
  stmt_b: _296 = MEM[(uint8_t *)p2_14 + 5B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _294 = MEM[(uint8_t *)p1_12 + 5B];
  stmt_b: _299 = MEM[(uint8_t *)p1_12 + 6B];
(analyze_overlapping_iterations 
  (chrec_a = {5B, +, pretmp_581}_7)
  (chrec_b = {6B, +, pretmp_581}_7)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _294 = MEM[(uint8_t *)p1_12 + 5B];
  stmt_b: _301 = MEM[(uint8_t *)p2_14 + 6B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _294 = MEM[(uint8_t *)p1_12 + 5B];
  stmt_b: _304 = MEM[(uint8_t *)p1_12 + 7B];
(analyze_overlapping_iterations 
  (chrec_a = {5B, +, pretmp_581}_7)
  (chrec_b = {7B, +, pretmp_581}_7)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _294 = MEM[(uint8_t *)p1_12 + 5B];
  stmt_b: _306 = MEM[(uint8_t *)p2_14 + 7B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _294 = MEM[(uint8_t *)p1_12 + 5B];
  stmt_b: diff[i_10][0] = _328;
) -> no dependence
(compute_affine_dependence
  stmt_a: _294 = MEM[(uint8_t *)p1_12 + 5B];
  stmt_b: diff[i_10][4] = _331;
) -> no dependence
(compute_affine_dependence
  stmt_a: _294 = MEM[(uint8_t *)p1_12 + 5B];
  stmt_b: diff[i_10][1] = _336;
) -> no dependence
(compute_affine_dependence
  stmt_a: _294 = MEM[(uint8_t *)p1_12 + 5B];
  stmt_b: diff[i_10][5] = _339;
) -> no dependence
(compute_affine_dependence
  stmt_a: _294 = MEM[(uint8_t *)p1_12 + 5B];
  stmt_b: diff[i_10][2] = _344;
) -> no dependence
(compute_affine_dependence
  stmt_a: _294 = MEM[(uint8_t *)p1_12 + 5B];
  stmt_b: diff[i_10][6] = _347;
) -> no dependence
(compute_affine_dependence
  stmt_a: _294 = MEM[(uint8_t *)p1_12 + 5B];
  stmt_b: diff[i_10][3] = _352;
) -> no dependence
(compute_affine_dependence
  stmt_a: _294 = MEM[(uint8_t *)p1_12 + 5B];
  stmt_b: diff[i_10][7] = _355;
) -> no dependence
(compute_affine_dependence
  stmt_a: _296 = MEM[(uint8_t *)p2_14 + 5B];
  stmt_b: _299 = MEM[(uint8_t *)p1_12 + 6B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _296 = MEM[(uint8_t *)p2_14 + 5B];
  stmt_b: _301 = MEM[(uint8_t *)p2_14 + 6B];
(analyze_overlapping_iterations 
  (chrec_a = {5B, +, pretmp_582}_7)
  (chrec_b = {6B, +, pretmp_582}_7)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _296 = MEM[(uint8_t *)p2_14 + 5B];
  stmt_b: _304 = MEM[(uint8_t *)p1_12 + 7B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _296 = MEM[(uint8_t *)p2_14 + 5B];
  stmt_b: _306 = MEM[(uint8_t *)p2_14 + 7B];
(analyze_overlapping_iterations 
  (chrec_a = {5B, +, pretmp_582}_7)
  (chrec_b = {7B, +, pretmp_582}_7)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _296 = MEM[(uint8_t *)p2_14 + 5B];
  stmt_b: diff[i_10][0] = _328;
) -> no dependence
(compute_affine_dependence
  stmt_a: _296 = MEM[(uint8_t *)p2_14 + 5B];
  stmt_b: diff[i_10][4] = _331;
) -> no dependence
(compute_affine_dependence
  stmt_a: _296 = MEM[(uint8_t *)p2_14 + 5B];
  stmt_b: diff[i_10][1] = _336;
) -> no dependence
(compute_affine_dependence
  stmt_a: _296 = MEM[(uint8_t *)p2_14 + 5B];
  stmt_b: diff[i_10][5] = _339;
) -> no dependence
(compute_affine_dependence
  stmt_a: _296 = MEM[(uint8_t *)p2_14 + 5B];
  stmt_b: diff[i_10][2] = _344;
) -> no dependence
(compute_affine_dependence
  stmt_a: _296 = MEM[(uint8_t *)p2_14 + 5B];
  stmt_b: diff[i_10][6] = _347;
) -> no dependence
(compute_affine_dependence
  stmt_a: _296 = MEM[(uint8_t *)p2_14 + 5B];
  stmt_b: diff[i_10][3] = _352;
) -> no dependence
(compute_affine_dependence
  stmt_a: _296 = MEM[(uint8_t *)p2_14 + 5B];
  stmt_b: diff[i_10][7] = _355;
) -> no dependence
(compute_affine_dependence
  stmt_a: _299 = MEM[(uint8_t *)p1_12 + 6B];
  stmt_b: _301 = MEM[(uint8_t *)p2_14 + 6B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _299 = MEM[(uint8_t *)p1_12 + 6B];
  stmt_b: _304 = MEM[(uint8_t *)p1_12 + 7B];
(analyze_overlapping_iterations 
  (chrec_a = {6B, +, pretmp_581}_7)
  (chrec_b = {7B, +, pretmp_581}_7)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _299 = MEM[(uint8_t *)p1_12 + 6B];
  stmt_b: _306 = MEM[(uint8_t *)p2_14 + 7B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _299 = MEM[(uint8_t *)p1_12 + 6B];
  stmt_b: diff[i_10][0] = _328;
) -> no dependence
(compute_affine_dependence
  stmt_a: _299 = MEM[(uint8_t *)p1_12 + 6B];
  stmt_b: diff[i_10][4] = _331;
) -> no dependence
(compute_affine_dependence
  stmt_a: _299 = MEM[(uint8_t *)p1_12 + 6B];
  stmt_b: diff[i_10][1] = _336;
) -> no dependence
(compute_affine_dependence
  stmt_a: _299 = MEM[(uint8_t *)p1_12 + 6B];
  stmt_b: diff[i_10][5] = _339;
) -> no dependence
(compute_affine_dependence
  stmt_a: _299 = MEM[(uint8_t *)p1_12 + 6B];
  stmt_b: diff[i_10][2] = _344;
) -> no dependence
(compute_affine_dependence
  stmt_a: _299 = MEM[(uint8_t *)p1_12 + 6B];
  stmt_b: diff[i_10][6] = _347;
) -> no dependence
(compute_affine_dependence
  stmt_a: _299 = MEM[(uint8_t *)p1_12 + 6B];
  stmt_b: diff[i_10][3] = _352;
) -> no dependence
(compute_affine_dependence
  stmt_a: _299 = MEM[(uint8_t *)p1_12 + 6B];
  stmt_b: diff[i_10][7] = _355;
) -> no dependence
(compute_affine_dependence
  stmt_a: _301 = MEM[(uint8_t *)p2_14 + 6B];
  stmt_b: _304 = MEM[(uint8_t *)p1_12 + 7B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _301 = MEM[(uint8_t *)p2_14 + 6B];
  stmt_b: _306 = MEM[(uint8_t *)p2_14 + 7B];
(analyze_overlapping_iterations 
  (chrec_a = {6B, +, pretmp_582}_7)
  (chrec_b = {7B, +, pretmp_582}_7)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _301 = MEM[(uint8_t *)p2_14 + 6B];
  stmt_b: diff[i_10][0] = _328;
) -> no dependence
(compute_affine_dependence
  stmt_a: _301 = MEM[(uint8_t *)p2_14 + 6B];
  stmt_b: diff[i_10][4] = _331;
) -> no dependence
(compute_affine_dependence
  stmt_a: _301 = MEM[(uint8_t *)p2_14 + 6B];
  stmt_b: diff[i_10][1] = _336;
) -> no dependence
(compute_affine_dependence
  stmt_a: _301 = MEM[(uint8_t *)p2_14 + 6B];
  stmt_b: diff[i_10][5] = _339;
) -> no dependence
(compute_affine_dependence
  stmt_a: _301 = MEM[(uint8_t *)p2_14 + 6B];
  stmt_b: diff[i_10][2] = _344;
) -> no dependence
(compute_affine_dependence
  stmt_a: _301 = MEM[(uint8_t *)p2_14 + 6B];
  stmt_b: diff[i_10][6] = _347;
) -> no dependence
(compute_affine_dependence
  stmt_a: _301 = MEM[(uint8_t *)p2_14 + 6B];
  stmt_b: diff[i_10][3] = _352;
) -> no dependence
(compute_affine_dependence
  stmt_a: _301 = MEM[(uint8_t *)p2_14 + 6B];
  stmt_b: diff[i_10][7] = _355;
) -> no dependence
(compute_affine_dependence
  stmt_a: _304 = MEM[(uint8_t *)p1_12 + 7B];
  stmt_b: _306 = MEM[(uint8_t *)p2_14 + 7B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _304 = MEM[(uint8_t *)p1_12 + 7B];
  stmt_b: diff[i_10][0] = _328;
) -> no dependence
(compute_affine_dependence
  stmt_a: _304 = MEM[(uint8_t *)p1_12 + 7B];
  stmt_b: diff[i_10][4] = _331;
) -> no dependence
(compute_affine_dependence
  stmt_a: _304 = MEM[(uint8_t *)p1_12 + 7B];
  stmt_b: diff[i_10][1] = _336;
) -> no dependence
(compute_affine_dependence
  stmt_a: _304 = MEM[(uint8_t *)p1_12 + 7B];
  stmt_b: diff[i_10][5] = _339;
) -> no dependence
(compute_affine_dependence
  stmt_a: _304 = MEM[(uint8_t *)p1_12 + 7B];
  stmt_b: diff[i_10][2] = _344;
) -> no dependence
(compute_affine_dependence
  stmt_a: _304 = MEM[(uint8_t *)p1_12 + 7B];
  stmt_b: diff[i_10][6] = _347;
) -> no dependence
(compute_affine_dependence
  stmt_a: _304 = MEM[(uint8_t *)p1_12 + 7B];
  stmt_b: diff[i_10][3] = _352;
) -> no dependence
(compute_affine_dependence
  stmt_a: _304 = MEM[(uint8_t *)p1_12 + 7B];
  stmt_b: diff[i_10][7] = _355;
) -> no dependence
(compute_affine_dependence
  stmt_a: _306 = MEM[(uint8_t *)p2_14 + 7B];
  stmt_b: diff[i_10][0] = _328;
) -> no dependence
(compute_affine_dependence
  stmt_a: _306 = MEM[(uint8_t *)p2_14 + 7B];
  stmt_b: diff[i_10][4] = _331;
) -> no dependence
(compute_affine_dependence
  stmt_a: _306 = MEM[(uint8_t *)p2_14 + 7B];
  stmt_b: diff[i_10][1] = _336;
) -> no dependence
(compute_affine_dependence
  stmt_a: _306 = MEM[(uint8_t *)p2_14 + 7B];
  stmt_b: diff[i_10][5] = _339;
) -> no dependence
(compute_affine_dependence
  stmt_a: _306 = MEM[(uint8_t *)p2_14 + 7B];
  stmt_b: diff[i_10][2] = _344;
) -> no dependence
(compute_affine_dependence
  stmt_a: _306 = MEM[(uint8_t *)p2_14 + 7B];
  stmt_b: diff[i_10][6] = _347;
) -> no dependence
(compute_affine_dependence
  stmt_a: _306 = MEM[(uint8_t *)p2_14 + 7B];
  stmt_b: diff[i_10][3] = _352;
) -> no dependence
(compute_affine_dependence
  stmt_a: _306 = MEM[(uint8_t *)p2_14 + 7B];
  stmt_b: diff[i_10][7] = _355;
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_10][0] = _328;
  stmt_b: diff[i_10][4] = _331;
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 4)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_10][0] = _328;
  stmt_b: diff[i_10][1] = _336;
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 1)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_10][0] = _328;
  stmt_b: diff[i_10][5] = _339;
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 5)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_10][0] = _328;
  stmt_b: diff[i_10][2] = _344;
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_10][0] = _328;
  stmt_b: diff[i_10][6] = _347;
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 6)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_10][0] = _328;
  stmt_b: diff[i_10][3] = _352;
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_10][0] = _328;
  stmt_b: diff[i_10][7] = _355;
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_10][4] = _331;
  stmt_b: diff[i_10][1] = _336;
(analyze_overlapping_iterations 
  (chrec_a = 4)
  (chrec_b = 1)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_10][4] = _331;
  stmt_b: diff[i_10][5] = _339;
(analyze_overlapping_iterations 
  (chrec_a = 4)
  (chrec_b = 5)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_10][4] = _331;
  stmt_b: diff[i_10][2] = _344;
(analyze_overlapping_iterations 
  (chrec_a = 4)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_10][4] = _331;
  stmt_b: diff[i_10][6] = _347;
(analyze_overlapping_iterations 
  (chrec_a = 4)
  (chrec_b = 6)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_10][4] = _331;
  stmt_b: diff[i_10][3] = _352;
(analyze_overlapping_iterations 
  (chrec_a = 4)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_10][4] = _331;
  stmt_b: diff[i_10][7] = _355;
(analyze_overlapping_iterations 
  (chrec_a = 4)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_10][1] = _336;
  stmt_b: diff[i_10][5] = _339;
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 5)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_10][1] = _336;
  stmt_b: diff[i_10][2] = _344;
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_10][1] = _336;
  stmt_b: diff[i_10][6] = _347;
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 6)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_10][1] = _336;
  stmt_b: diff[i_10][3] = _352;
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_10][1] = _336;
  stmt_b: diff[i_10][7] = _355;
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_10][5] = _339;
  stmt_b: diff[i_10][2] = _344;
(analyze_overlapping_iterations 
  (chrec_a = 5)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_10][5] = _339;
  stmt_b: diff[i_10][6] = _347;
(analyze_overlapping_iterations 
  (chrec_a = 5)
  (chrec_b = 6)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_10][5] = _339;
  stmt_b: diff[i_10][3] = _352;
(analyze_overlapping_iterations 
  (chrec_a = 5)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_10][5] = _339;
  stmt_b: diff[i_10][7] = _355;
(analyze_overlapping_iterations 
  (chrec_a = 5)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_10][2] = _344;
  stmt_b: diff[i_10][6] = _347;
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 6)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_10][2] = _344;
  stmt_b: diff[i_10][3] = _352;
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_10][2] = _344;
  stmt_b: diff[i_10][7] = _355;
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_10][6] = _347;
  stmt_b: diff[i_10][3] = _352;
(analyze_overlapping_iterations 
  (chrec_a = 6)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_10][6] = _347;
  stmt_b: diff[i_10][7] = _355;
(analyze_overlapping_iterations 
  (chrec_a = 6)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_10][3] = _352;
  stmt_b: diff[i_10][7] = _355;
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _269 = *p1_12;
  stmt_b: _269 = *p1_12;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, pretmp_581}_7)
  (chrec_b = {0B, +, pretmp_581}_7)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _271 = *p2_14;
  stmt_b: _271 = *p2_14;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, pretmp_582}_7)
  (chrec_b = {0B, +, pretmp_582}_7)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _274 = MEM[(uint8_t *)p1_12 + 1B];
  stmt_b: _274 = MEM[(uint8_t *)p1_12 + 1B];
(analyze_overlapping_iterations 
  (chrec_a = {1B, +, pretmp_581}_7)
  (chrec_b = {1B, +, pretmp_581}_7)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _276 = MEM[(uint8_t *)p2_14 + 1B];
  stmt_b: _276 = MEM[(uint8_t *)p2_14 + 1B];
(analyze_overlapping_iterations 
  (chrec_a = {1B, +, pretmp_582}_7)
  (chrec_b = {1B, +, pretmp_582}_7)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _279 = MEM[(uint8_t *)p1_12 + 2B];
  stmt_b: _279 = MEM[(uint8_t *)p1_12 + 2B];
(analyze_overlapping_iterations 
  (chrec_a = {2B, +, pretmp_581}_7)
  (chrec_b = {2B, +, pretmp_581}_7)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _281 = MEM[(uint8_t *)p2_14 + 2B];
  stmt_b: _281 = MEM[(uint8_t *)p2_14 + 2B];
(analyze_overlapping_iterations 
  (chrec_a = {2B, +, pretmp_582}_7)
  (chrec_b = {2B, +, pretmp_582}_7)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _284 = MEM[(uint8_t *)p1_12 + 3B];
  stmt_b: _284 = MEM[(uint8_t *)p1_12 + 3B];
(analyze_overlapping_iterations 
  (chrec_a = {3B, +, pretmp_581}_7)
  (chrec_b = {3B, +, pretmp_581}_7)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _286 = MEM[(uint8_t *)p2_14 + 3B];
  stmt_b: _286 = MEM[(uint8_t *)p2_14 + 3B];
(analyze_overlapping_iterations 
  (chrec_a = {3B, +, pretmp_582}_7)
  (chrec_b = {3B, +, pretmp_582}_7)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _289 = MEM[(uint8_t *)p1_12 + 4B];
  stmt_b: _289 = MEM[(uint8_t *)p1_12 + 4B];
(analyze_overlapping_iterations 
  (chrec_a = {4B, +, pretmp_581}_7)
  (chrec_b = {4B, +, pretmp_581}_7)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _291 = MEM[(uint8_t *)p2_14 + 4B];
  stmt_b: _291 = MEM[(uint8_t *)p2_14 + 4B];
(analyze_overlapping_iterations 
  (chrec_a = {4B, +, pretmp_582}_7)
  (chrec_b = {4B, +, pretmp_582}_7)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _294 = MEM[(uint8_t *)p1_12 + 5B];
  stmt_b: _294 = MEM[(uint8_t *)p1_12 + 5B];
(analyze_overlapping_iterations 
  (chrec_a = {5B, +, pretmp_581}_7)
  (chrec_b = {5B, +, pretmp_581}_7)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _296 = MEM[(uint8_t *)p2_14 + 5B];
  stmt_b: _296 = MEM[(uint8_t *)p2_14 + 5B];
(analyze_overlapping_iterations 
  (chrec_a = {5B, +, pretmp_582}_7)
  (chrec_b = {5B, +, pretmp_582}_7)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _299 = MEM[(uint8_t *)p1_12 + 6B];
  stmt_b: _299 = MEM[(uint8_t *)p1_12 + 6B];
(analyze_overlapping_iterations 
  (chrec_a = {6B, +, pretmp_581}_7)
  (chrec_b = {6B, +, pretmp_581}_7)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _301 = MEM[(uint8_t *)p2_14 + 6B];
  stmt_b: _301 = MEM[(uint8_t *)p2_14 + 6B];
(analyze_overlapping_iterations 
  (chrec_a = {6B, +, pretmp_582}_7)
  (chrec_b = {6B, +, pretmp_582}_7)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _304 = MEM[(uint8_t *)p1_12 + 7B];
  stmt_b: _304 = MEM[(uint8_t *)p1_12 + 7B];
(analyze_overlapping_iterations 
  (chrec_a = {7B, +, pretmp_581}_7)
  (chrec_b = {7B, +, pretmp_581}_7)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _306 = MEM[(uint8_t *)p2_14 + 7B];
  stmt_b: _306 = MEM[(uint8_t *)p2_14 + 7B];
(analyze_overlapping_iterations 
  (chrec_a = {7B, +, pretmp_582}_7)
  (chrec_b = {7B, +, pretmp_582}_7)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: diff[i_10][0] = _328;
  stmt_b: diff[i_10][0] = _328;
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 0)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_7)
  (chrec_b = {0, +, 1}_7)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: diff[i_10][4] = _331;
  stmt_b: diff[i_10][4] = _331;
(analyze_overlapping_iterations 
  (chrec_a = 4)
  (chrec_b = 4)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_7)
  (chrec_b = {0, +, 1}_7)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: diff[i_10][1] = _336;
  stmt_b: diff[i_10][1] = _336;
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_7)
  (chrec_b = {0, +, 1}_7)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: diff[i_10][5] = _339;
  stmt_b: diff[i_10][5] = _339;
(analyze_overlapping_iterations 
  (chrec_a = 5)
  (chrec_b = 5)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_7)
  (chrec_b = {0, +, 1}_7)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: diff[i_10][2] = _344;
  stmt_b: diff[i_10][2] = _344;
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_7)
  (chrec_b = {0, +, 1}_7)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: diff[i_10][6] = _347;
  stmt_b: diff[i_10][6] = _347;
(analyze_overlapping_iterations 
  (chrec_a = 6)
  (chrec_b = 6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_7)
  (chrec_b = {0, +, 1}_7)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: diff[i_10][3] = _352;
  stmt_b: diff[i_10][3] = _352;
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_7)
  (chrec_b = {0, +, 1}_7)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: diff[i_10][7] = _355;
  stmt_b: diff[i_10][7] = _355;
(analyze_overlapping_iterations 
  (chrec_a = 7)
  (chrec_b = 7)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_7)
  (chrec_b = {0, +, 1}_7)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/pixel.c:262:13: note: === vect_determine_vectorization_factor ===
common/pixel.c:262:13: note: ==> examining phi: i_10 = PHI <i_357(9), 0(3)>

common/pixel.c:262:13: note: ==> examining phi: p1_12 = PHI <p1_359(9), p1_201(3)>

common/pixel.c:262:13: note: ==> examining phi: p2_14 = PHI <p2_361(9), p2_202(3)>

common/pixel.c:262:13: note: ==> examining phi: .MEM_163 = PHI <.MEM_356(9), .MEM_173(3)>

common/pixel.c:262:13: note: ==> examining phi: ivtmp_574 = PHI <ivtmp_573(9), 8(3)>

common/pixel.c:262:13: note: ==> examining statement: # DEBUG p2 => p2_14

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: # DEBUG p1 => p1_12

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: # DEBUG i => i_10

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: _269 = *p1_12;

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: _270 = (int) _269;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: _271 = *p2_14;

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: _272 = (int) _271;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: a0_273 = _270 - _272;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: nunits = 4
common/pixel.c:262:13: note: ==> examining statement: # DEBUG a0 => a0_273

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: _274 = MEM[(uint8_t *)p1_12 + 1B];

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: _275 = (int) _274;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: _276 = MEM[(uint8_t *)p2_14 + 1B];

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: _277 = (int) _276;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: a1_278 = _275 - _277;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: nunits = 4
common/pixel.c:262:13: note: ==> examining statement: # DEBUG a1 => a1_278

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: _279 = MEM[(uint8_t *)p1_12 + 2B];

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: _280 = (int) _279;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: _281 = MEM[(uint8_t *)p2_14 + 2B];

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: _282 = (int) _281;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: a2_283 = _280 - _282;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: nunits = 4
common/pixel.c:262:13: note: ==> examining statement: # DEBUG a2 => a2_283

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: _284 = MEM[(uint8_t *)p1_12 + 3B];

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: _285 = (int) _284;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: _286 = MEM[(uint8_t *)p2_14 + 3B];

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: _287 = (int) _286;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: a3_288 = _285 - _287;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: nunits = 4
common/pixel.c:262:13: note: ==> examining statement: # DEBUG a3 => a3_288

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: _289 = MEM[(uint8_t *)p1_12 + 4B];

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: _290 = (int) _289;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: _291 = MEM[(uint8_t *)p2_14 + 4B];

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: _292 = (int) _291;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: a4_293 = _290 - _292;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: nunits = 4
common/pixel.c:262:13: note: ==> examining statement: # DEBUG a4 => a4_293

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: _294 = MEM[(uint8_t *)p1_12 + 5B];

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: _295 = (int) _294;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: _296 = MEM[(uint8_t *)p2_14 + 5B];

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: _297 = (int) _296;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: a5_298 = _295 - _297;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: nunits = 4
common/pixel.c:262:13: note: ==> examining statement: # DEBUG a5 => a5_298

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: _299 = MEM[(uint8_t *)p1_12 + 6B];

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: _300 = (int) _299;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: _301 = MEM[(uint8_t *)p2_14 + 6B];

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: _302 = (int) _301;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: a6_303 = _300 - _302;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: nunits = 4
common/pixel.c:262:13: note: ==> examining statement: # DEBUG a6 => a6_303

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: _304 = MEM[(uint8_t *)p1_12 + 7B];

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: _305 = (int) _304;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: _306 = MEM[(uint8_t *)p2_14 + 7B];

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: _307 = (int) _306;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: a7_308 = _305 - _307;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: nunits = 4
common/pixel.c:262:13: note: ==> examining statement: # DEBUG a7 => a7_308

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: t0_309 = a0_273 + a1_278;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: nunits = 4
common/pixel.c:262:13: note: ==> examining statement: # DEBUG t0 => t0_309

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: t1_310 = a0_273 - a1_278;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: nunits = 4
common/pixel.c:262:13: note: ==> examining statement: # DEBUG t1 => t1_310

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: t2_311 = a2_283 + a3_288;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: nunits = 4
common/pixel.c:262:13: note: ==> examining statement: # DEBUG t2 => t2_311

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: t3_312 = a2_283 - a3_288;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: nunits = 4
common/pixel.c:262:13: note: ==> examining statement: # DEBUG t3 => t3_312

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: b0_313 = t0_309 + t2_311;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: nunits = 4
common/pixel.c:262:13: note: ==> examining statement: # DEBUG b0 => b0_313

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: b2_314 = t0_309 - t2_311;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: nunits = 4
common/pixel.c:262:13: note: ==> examining statement: # DEBUG b2 => b2_314

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: b1_315 = t1_310 + t3_312;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: nunits = 4
common/pixel.c:262:13: note: ==> examining statement: # DEBUG b1 => b1_315

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: b3_316 = t1_310 - t3_312;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: nunits = 4
common/pixel.c:262:13: note: ==> examining statement: # DEBUG b3 => b3_316

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: t0_317 = a4_293 + a5_298;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: nunits = 4
common/pixel.c:262:13: note: ==> examining statement: # DEBUG t0 => t0_317

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: t1_318 = a4_293 - a5_298;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: nunits = 4
common/pixel.c:262:13: note: ==> examining statement: # DEBUG t1 => t1_318

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: t2_319 = a6_303 + a7_308;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: nunits = 4
common/pixel.c:262:13: note: ==> examining statement: # DEBUG t2 => t2_319

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: t3_320 = a6_303 - a7_308;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: nunits = 4
common/pixel.c:262:13: note: ==> examining statement: # DEBUG t3 => t3_320

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: b4_321 = t0_317 + t2_319;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: nunits = 4
common/pixel.c:262:13: note: ==> examining statement: # DEBUG b4 => b4_321

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: b6_322 = t0_317 - t2_319;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: nunits = 4
common/pixel.c:262:13: note: ==> examining statement: # DEBUG b6 => b6_322

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: b5_323 = t1_318 + t3_320;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: nunits = 4
common/pixel.c:262:13: note: ==> examining statement: # DEBUG b5 => b5_323

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: b7_324 = t1_318 - t3_320;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: nunits = 4
common/pixel.c:262:13: note: ==> examining statement: # DEBUG b7 => b7_324

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: _325 = (unsigned short) b0_313;

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: _326 = (unsigned short) b4_321;

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: _327 = _325 + _326;

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: _328 = (short int) _327;

common/pixel.c:262:13: note: get vectype for scalar type:  short int
common/pixel.c:262:13: note: vectype: vector(8) short int
common/pixel.c:262:13: note: get vectype for scalar type:  short int
common/pixel.c:262:13: note: vectype: vector(8) short int
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: diff[i_10][0] = _328;

common/pixel.c:262:13: note: get vectype for scalar type:  int16_t
common/pixel.c:262:13: note: vectype: vector(8) short int
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: _330 = _325 - _326;

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: _331 = (short int) _330;

common/pixel.c:262:13: note: get vectype for scalar type:  short int
common/pixel.c:262:13: note: vectype: vector(8) short int
common/pixel.c:262:13: note: get vectype for scalar type:  short int
common/pixel.c:262:13: note: vectype: vector(8) short int
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: diff[i_10][4] = _331;

common/pixel.c:262:13: note: get vectype for scalar type:  int16_t
common/pixel.c:262:13: note: vectype: vector(8) short int
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: _333 = (unsigned short) b1_315;

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: _334 = (unsigned short) b5_323;

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: _335 = _333 + _334;

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: _336 = (short int) _335;

common/pixel.c:262:13: note: get vectype for scalar type:  short int
common/pixel.c:262:13: note: vectype: vector(8) short int
common/pixel.c:262:13: note: get vectype for scalar type:  short int
common/pixel.c:262:13: note: vectype: vector(8) short int
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: diff[i_10][1] = _336;

common/pixel.c:262:13: note: get vectype for scalar type:  int16_t
common/pixel.c:262:13: note: vectype: vector(8) short int
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: _338 = _333 - _334;

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: _339 = (short int) _338;

common/pixel.c:262:13: note: get vectype for scalar type:  short int
common/pixel.c:262:13: note: vectype: vector(8) short int
common/pixel.c:262:13: note: get vectype for scalar type:  short int
common/pixel.c:262:13: note: vectype: vector(8) short int
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: diff[i_10][5] = _339;

common/pixel.c:262:13: note: get vectype for scalar type:  int16_t
common/pixel.c:262:13: note: vectype: vector(8) short int
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: _341 = (unsigned short) b2_314;

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: _342 = (unsigned short) b6_322;

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: _343 = _341 + _342;

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: _344 = (short int) _343;

common/pixel.c:262:13: note: get vectype for scalar type:  short int
common/pixel.c:262:13: note: vectype: vector(8) short int
common/pixel.c:262:13: note: get vectype for scalar type:  short int
common/pixel.c:262:13: note: vectype: vector(8) short int
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: diff[i_10][2] = _344;

common/pixel.c:262:13: note: get vectype for scalar type:  int16_t
common/pixel.c:262:13: note: vectype: vector(8) short int
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: _346 = _341 - _342;

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: _347 = (short int) _346;

common/pixel.c:262:13: note: get vectype for scalar type:  short int
common/pixel.c:262:13: note: vectype: vector(8) short int
common/pixel.c:262:13: note: get vectype for scalar type:  short int
common/pixel.c:262:13: note: vectype: vector(8) short int
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: diff[i_10][6] = _347;

common/pixel.c:262:13: note: get vectype for scalar type:  int16_t
common/pixel.c:262:13: note: vectype: vector(8) short int
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: _349 = (unsigned short) b3_316;

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: _350 = (unsigned short) b7_324;

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: _351 = _349 + _350;

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: _352 = (short int) _351;

common/pixel.c:262:13: note: get vectype for scalar type:  short int
common/pixel.c:262:13: note: vectype: vector(8) short int
common/pixel.c:262:13: note: get vectype for scalar type:  short int
common/pixel.c:262:13: note: vectype: vector(8) short int
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: diff[i_10][3] = _352;

common/pixel.c:262:13: note: get vectype for scalar type:  int16_t
common/pixel.c:262:13: note: vectype: vector(8) short int
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: _354 = _349 - _350;

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: _355 = (short int) _354;

common/pixel.c:262:13: note: get vectype for scalar type:  short int
common/pixel.c:262:13: note: vectype: vector(8) short int
common/pixel.c:262:13: note: get vectype for scalar type:  short int
common/pixel.c:262:13: note: vectype: vector(8) short int
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: diff[i_10][7] = _355;

common/pixel.c:262:13: note: get vectype for scalar type:  int16_t
common/pixel.c:262:13: note: vectype: vector(8) short int
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: i_357 = i_10 + 1;

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: # DEBUG i => i_357

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: p1_359 = p1_12 + pretmp_581;

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: # DEBUG p1 => p1_359

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: p2_361 = p2_14 + pretmp_582;

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: # DEBUG p2 => p2_361

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: # DEBUG p2 => p2_361

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: # DEBUG p1 => p1_359

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: # DEBUG i => i_357

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: ivtmp_573 = ivtmp_574 - 1;

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: if (ivtmp_573 != 0)

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: vectorization factor = 16
common/pixel.c:262:13: note: === vect_analyze_data_refs_alignment ===
common/pixel.c:262:13: note: vect_compute_data_ref_alignment:
common/pixel.c:262:13: note: vect_compute_data_ref_alignment:
common/pixel.c:262:13: note: vect_compute_data_ref_alignment:
common/pixel.c:262:13: note: vect_compute_data_ref_alignment:
common/pixel.c:262:13: note: vect_compute_data_ref_alignment:
common/pixel.c:262:13: note: vect_compute_data_ref_alignment:
common/pixel.c:262:13: note: vect_compute_data_ref_alignment:
common/pixel.c:262:13: note: vect_compute_data_ref_alignment:
common/pixel.c:262:13: note: vect_compute_data_ref_alignment:
common/pixel.c:262:13: note: vect_compute_data_ref_alignment:
common/pixel.c:262:13: note: vect_compute_data_ref_alignment:
common/pixel.c:262:13: note: vect_compute_data_ref_alignment:
common/pixel.c:262:13: note: vect_compute_data_ref_alignment:
common/pixel.c:262:13: note: vect_compute_data_ref_alignment:
common/pixel.c:262:13: note: vect_compute_data_ref_alignment:
common/pixel.c:262:13: note: vect_compute_data_ref_alignment:
common/pixel.c:262:13: note: vect_compute_data_ref_alignment:
common/pixel.c:262:13: note: misalign = 0 bytes of ref diff[i_10][0]
common/pixel.c:262:13: note: vect_compute_data_ref_alignment:
common/pixel.c:262:13: note: misalign = 8 bytes of ref diff[i_10][4]
common/pixel.c:262:13: note: vect_compute_data_ref_alignment:
common/pixel.c:262:13: note: misalign = 2 bytes of ref diff[i_10][1]
common/pixel.c:262:13: note: vect_compute_data_ref_alignment:
common/pixel.c:262:13: note: misalign = 10 bytes of ref diff[i_10][5]
common/pixel.c:262:13: note: vect_compute_data_ref_alignment:
common/pixel.c:262:13: note: misalign = 4 bytes of ref diff[i_10][2]
common/pixel.c:262:13: note: vect_compute_data_ref_alignment:
common/pixel.c:262:13: note: misalign = 12 bytes of ref diff[i_10][6]
common/pixel.c:262:13: note: vect_compute_data_ref_alignment:
common/pixel.c:262:13: note: misalign = 6 bytes of ref diff[i_10][3]
common/pixel.c:262:13: note: vect_compute_data_ref_alignment:
common/pixel.c:262:13: note: misalign = 14 bytes of ref diff[i_10][7]
common/pixel.c:262:13: note: === vect_prune_runtime_alias_test_list ===
common/pixel.c:262:13: note: === vect_enhance_data_refs_alignment ===
common/pixel.c:262:13: note: vect_can_advance_ivs_p:
common/pixel.c:262:13: note: Analyze phi: i_10 = PHI <i_357(9), 0(3)>

common/pixel.c:262:13: note: Analyze phi: p1_12 = PHI <p1_359(9), p1_201(3)>

common/pixel.c:262:13: note: Analyze phi: p2_14 = PHI <p2_361(9), p2_202(3)>

common/pixel.c:262:13: note: Analyze phi: .MEM_163 = PHI <.MEM_356(9), .MEM_173(3)>

common/pixel.c:262:13: note: virtual phi. skip.
common/pixel.c:262:13: note: Analyze phi: ivtmp_574 = PHI <ivtmp_573(9), 8(3)>

common/pixel.c:262:13: note: Setting misalignment to -1.
common/pixel.c:262:13: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:262:13: note: vect_get_data_access_cost: inside_cost = 2, outside_cost = 0.
common/pixel.c:262:13: note: Setting misalignment to -1.
common/pixel.c:262:13: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:262:13: note: vect_get_data_access_cost: inside_cost = 4, outside_cost = 0.
common/pixel.c:262:13: note: Setting misalignment to -1.
common/pixel.c:262:13: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:262:13: note: vect_get_data_access_cost: inside_cost = 6, outside_cost = 0.
common/pixel.c:262:13: note: Setting misalignment to -1.
common/pixel.c:262:13: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:262:13: note: vect_get_data_access_cost: inside_cost = 8, outside_cost = 0.
common/pixel.c:262:13: note: Setting misalignment to -1.
common/pixel.c:262:13: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:262:13: note: vect_get_data_access_cost: inside_cost = 10, outside_cost = 0.
common/pixel.c:262:13: note: Setting misalignment to -1.
common/pixel.c:262:13: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:262:13: note: vect_get_data_access_cost: inside_cost = 12, outside_cost = 0.
common/pixel.c:262:13: note: Setting misalignment to -1.
common/pixel.c:262:13: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:262:13: note: vect_get_data_access_cost: inside_cost = 14, outside_cost = 0.
common/pixel.c:262:13: note: Setting misalignment to -1.
common/pixel.c:262:13: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:262:13: note: vect_get_data_access_cost: inside_cost = 16, outside_cost = 0.
common/pixel.c:262:13: note: Setting misalignment to -1.
common/pixel.c:262:13: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:262:13: note: vect_get_data_access_cost: inside_cost = 18, outside_cost = 0.
common/pixel.c:262:13: note: Setting misalignment to -1.
common/pixel.c:262:13: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:262:13: note: vect_get_data_access_cost: inside_cost = 20, outside_cost = 0.
common/pixel.c:262:13: note: Setting misalignment to -1.
common/pixel.c:262:13: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:262:13: note: vect_get_data_access_cost: inside_cost = 22, outside_cost = 0.
common/pixel.c:262:13: note: Setting misalignment to -1.
common/pixel.c:262:13: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:262:13: note: vect_get_data_access_cost: inside_cost = 24, outside_cost = 0.
common/pixel.c:262:13: note: Setting misalignment to -1.
common/pixel.c:262:13: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:262:13: note: vect_get_data_access_cost: inside_cost = 26, outside_cost = 0.
common/pixel.c:262:13: note: Setting misalignment to -1.
common/pixel.c:262:13: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:262:13: note: vect_get_data_access_cost: inside_cost = 28, outside_cost = 0.
common/pixel.c:262:13: note: Setting misalignment to -1.
common/pixel.c:262:13: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:262:13: note: vect_get_data_access_cost: inside_cost = 30, outside_cost = 0.
common/pixel.c:262:13: note: Setting misalignment to -1.
common/pixel.c:262:13: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:262:13: note: vect_get_data_access_cost: inside_cost = 32, outside_cost = 0.
common/pixel.c:262:13: note: vect_model_store_cost: aligned.
common/pixel.c:262:13: note: vect_get_data_access_cost: inside_cost = 34, outside_cost = 0.
common/pixel.c:262:13: note: === vect_analyze_slp ===
common/pixel.c:262:13: note: Build SLP for diff[i_10][0] = _328;

common/pixel.c:262:13: note: Build SLP for diff[i_10][1] = _336;

common/pixel.c:262:13: note: Build SLP for diff[i_10][2] = _344;

common/pixel.c:262:13: note: Build SLP for diff[i_10][3] = _352;

common/pixel.c:262:13: note: Build SLP for diff[i_10][4] = _331;

common/pixel.c:262:13: note: Build SLP for diff[i_10][5] = _339;

common/pixel.c:262:13: note: Build SLP for diff[i_10][6] = _347;

common/pixel.c:262:13: note: Build SLP for diff[i_10][7] = _355;

common/pixel.c:262:13: note: vect_is_simple_use: operand _328
common/pixel.c:262:13: note: def_stmt: _328 = (short int) _327;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _336
common/pixel.c:262:13: note: def_stmt: _336 = (short int) _335;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _344
common/pixel.c:262:13: note: def_stmt: _344 = (short int) _343;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _352
common/pixel.c:262:13: note: def_stmt: _352 = (short int) _351;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _331
common/pixel.c:262:13: note: def_stmt: _331 = (short int) _330;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _339
common/pixel.c:262:13: note: def_stmt: _339 = (short int) _338;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _347
common/pixel.c:262:13: note: def_stmt: _347 = (short int) _346;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _355
common/pixel.c:262:13: note: def_stmt: _355 = (short int) _354;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: Build SLP for _328 = (short int) _327;

common/pixel.c:262:13: note: Build SLP for _336 = (short int) _335;

common/pixel.c:262:13: note: Build SLP for _344 = (short int) _343;

common/pixel.c:262:13: note: Build SLP for _352 = (short int) _351;

common/pixel.c:262:13: note: Build SLP for _331 = (short int) _330;

common/pixel.c:262:13: note: Build SLP for _339 = (short int) _338;

common/pixel.c:262:13: note: Build SLP for _347 = (short int) _346;

common/pixel.c:262:13: note: Build SLP for _355 = (short int) _354;

common/pixel.c:262:13: note: vect_is_simple_use: operand _327
common/pixel.c:262:13: note: def_stmt: _327 = _325 + _326;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _335
common/pixel.c:262:13: note: def_stmt: _335 = _333 + _334;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _343
common/pixel.c:262:13: note: def_stmt: _343 = _341 + _342;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _351
common/pixel.c:262:13: note: def_stmt: _351 = _349 + _350;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _330
common/pixel.c:262:13: note: def_stmt: _330 = _325 - _326;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _338
common/pixel.c:262:13: note: def_stmt: _338 = _333 - _334;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _346
common/pixel.c:262:13: note: def_stmt: _346 = _341 - _342;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _354
common/pixel.c:262:13: note: def_stmt: _354 = _349 - _350;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: Build SLP for _327 = _325 + _326;

common/pixel.c:262:13: note: Build SLP for _335 = _333 + _334;

common/pixel.c:262:13: note: Build SLP for _343 = _341 + _342;

common/pixel.c:262:13: note: Build SLP for _351 = _349 + _350;

common/pixel.c:262:13: note: Build SLP for _330 = _325 - _326;

common/pixel.c:262:13: note: Build SLP failed: different operation in stmt _330 = _325 - _326;

common/pixel.c:262:13: note: Build SLP for _338 = _333 - _334;

common/pixel.c:262:13: note: Build SLP failed: different operation in stmt _338 = _333 - _334;

common/pixel.c:262:13: note: Build SLP for _346 = _341 - _342;

common/pixel.c:262:13: note: Build SLP failed: different operation in stmt _346 = _341 - _342;

common/pixel.c:262:13: note: Build SLP for _354 = _349 - _350;

common/pixel.c:262:13: note: Build SLP failed: different operation in stmt _354 = _349 - _350;

common/pixel.c:262:13: note: === vect_make_slp_decision ===
common/pixel.c:262:13: note: === vect_detect_hybrid_slp ===
common/pixel.c:262:13: note: === vect_analyze_loop_operations ===
common/pixel.c:262:13: note: examining phi: i_10 = PHI <i_357(9), 0(3)>

common/pixel.c:262:13: note: examining phi: p1_12 = PHI <p1_359(9), p1_201(3)>

common/pixel.c:262:13: note: examining phi: p2_14 = PHI <p2_361(9), p2_202(3)>

common/pixel.c:262:13: note: examining phi: .MEM_163 = PHI <.MEM_356(9), .MEM_173(3)>

common/pixel.c:262:13: note: examining phi: ivtmp_574 = PHI <ivtmp_573(9), 8(3)>

common/pixel.c:262:13: note: ==> examining statement: # DEBUG p2 => p2_14
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: # DEBUG p1 => p1_12
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: # DEBUG i => i_10
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: _269 = *p1_12;
common/pixel.c:262:13: note: vect_is_simple_use: operand *p1_12
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_is_simple_use: operand *p1_12
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_model_load_cost: inside_cost = 25, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _270 = (int) _269;
common/pixel.c:262:13: note: vect_is_simple_use: operand _269
common/pixel.c:262:13: note: def_stmt: _269 = *p1_12;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_conversion ===
common/pixel.c:262:13: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _271 = *p2_14;
common/pixel.c:262:13: note: vect_is_simple_use: operand *p2_14
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_is_simple_use: operand *p2_14
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_model_load_cost: inside_cost = 25, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _272 = (int) _271;
common/pixel.c:262:13: note: vect_is_simple_use: operand _271
common/pixel.c:262:13: note: def_stmt: _271 = *p2_14;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_conversion ===
common/pixel.c:262:13: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: a0_273 = _270 - _272;
common/pixel.c:262:13: note: vect_is_simple_use: operand _270
common/pixel.c:262:13: note: def_stmt: _270 = (int) _269;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _272
common/pixel.c:262:13: note: def_stmt: _272 = (int) _271;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: # DEBUG a0 => a0_273
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: _274 = MEM[(uint8_t *)p1_12 + 1B];
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)p1_12 + 1B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)p1_12 + 1B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_model_load_cost: inside_cost = 25, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _275 = (int) _274;
common/pixel.c:262:13: note: vect_is_simple_use: operand _274
common/pixel.c:262:13: note: def_stmt: _274 = MEM[(uint8_t *)p1_12 + 1B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_conversion ===
common/pixel.c:262:13: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _276 = MEM[(uint8_t *)p2_14 + 1B];
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)p2_14 + 1B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)p2_14 + 1B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_model_load_cost: inside_cost = 25, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _277 = (int) _276;
common/pixel.c:262:13: note: vect_is_simple_use: operand _276
common/pixel.c:262:13: note: def_stmt: _276 = MEM[(uint8_t *)p2_14 + 1B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_conversion ===
common/pixel.c:262:13: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: a1_278 = _275 - _277;
common/pixel.c:262:13: note: vect_is_simple_use: operand _275
common/pixel.c:262:13: note: def_stmt: _275 = (int) _274;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _277
common/pixel.c:262:13: note: def_stmt: _277 = (int) _276;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: # DEBUG a1 => a1_278
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: _279 = MEM[(uint8_t *)p1_12 + 2B];
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)p1_12 + 2B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)p1_12 + 2B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_model_load_cost: inside_cost = 25, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _280 = (int) _279;
common/pixel.c:262:13: note: vect_is_simple_use: operand _279
common/pixel.c:262:13: note: def_stmt: _279 = MEM[(uint8_t *)p1_12 + 2B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_conversion ===
common/pixel.c:262:13: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _281 = MEM[(uint8_t *)p2_14 + 2B];
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)p2_14 + 2B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)p2_14 + 2B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_model_load_cost: inside_cost = 25, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _282 = (int) _281;
common/pixel.c:262:13: note: vect_is_simple_use: operand _281
common/pixel.c:262:13: note: def_stmt: _281 = MEM[(uint8_t *)p2_14 + 2B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_conversion ===
common/pixel.c:262:13: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: a2_283 = _280 - _282;
common/pixel.c:262:13: note: vect_is_simple_use: operand _280
common/pixel.c:262:13: note: def_stmt: _280 = (int) _279;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _282
common/pixel.c:262:13: note: def_stmt: _282 = (int) _281;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: # DEBUG a2 => a2_283
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: _284 = MEM[(uint8_t *)p1_12 + 3B];
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)p1_12 + 3B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)p1_12 + 3B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_model_load_cost: inside_cost = 25, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _285 = (int) _284;
common/pixel.c:262:13: note: vect_is_simple_use: operand _284
common/pixel.c:262:13: note: def_stmt: _284 = MEM[(uint8_t *)p1_12 + 3B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_conversion ===
common/pixel.c:262:13: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _286 = MEM[(uint8_t *)p2_14 + 3B];
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)p2_14 + 3B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)p2_14 + 3B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_model_load_cost: inside_cost = 25, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _287 = (int) _286;
common/pixel.c:262:13: note: vect_is_simple_use: operand _286
common/pixel.c:262:13: note: def_stmt: _286 = MEM[(uint8_t *)p2_14 + 3B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_conversion ===
common/pixel.c:262:13: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: a3_288 = _285 - _287;
common/pixel.c:262:13: note: vect_is_simple_use: operand _285
common/pixel.c:262:13: note: def_stmt: _285 = (int) _284;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _287
common/pixel.c:262:13: note: def_stmt: _287 = (int) _286;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: # DEBUG a3 => a3_288
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: _289 = MEM[(uint8_t *)p1_12 + 4B];
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)p1_12 + 4B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)p1_12 + 4B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_model_load_cost: inside_cost = 25, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _290 = (int) _289;
common/pixel.c:262:13: note: vect_is_simple_use: operand _289
common/pixel.c:262:13: note: def_stmt: _289 = MEM[(uint8_t *)p1_12 + 4B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_conversion ===
common/pixel.c:262:13: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _291 = MEM[(uint8_t *)p2_14 + 4B];
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)p2_14 + 4B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)p2_14 + 4B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_model_load_cost: inside_cost = 25, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _292 = (int) _291;
common/pixel.c:262:13: note: vect_is_simple_use: operand _291
common/pixel.c:262:13: note: def_stmt: _291 = MEM[(uint8_t *)p2_14 + 4B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_conversion ===
common/pixel.c:262:13: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: a4_293 = _290 - _292;
common/pixel.c:262:13: note: vect_is_simple_use: operand _290
common/pixel.c:262:13: note: def_stmt: _290 = (int) _289;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _292
common/pixel.c:262:13: note: def_stmt: _292 = (int) _291;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: # DEBUG a4 => a4_293
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: _294 = MEM[(uint8_t *)p1_12 + 5B];
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)p1_12 + 5B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)p1_12 + 5B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_model_load_cost: inside_cost = 25, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _295 = (int) _294;
common/pixel.c:262:13: note: vect_is_simple_use: operand _294
common/pixel.c:262:13: note: def_stmt: _294 = MEM[(uint8_t *)p1_12 + 5B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_conversion ===
common/pixel.c:262:13: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _296 = MEM[(uint8_t *)p2_14 + 5B];
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)p2_14 + 5B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)p2_14 + 5B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_model_load_cost: inside_cost = 25, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _297 = (int) _296;
common/pixel.c:262:13: note: vect_is_simple_use: operand _296
common/pixel.c:262:13: note: def_stmt: _296 = MEM[(uint8_t *)p2_14 + 5B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_conversion ===
common/pixel.c:262:13: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: a5_298 = _295 - _297;
common/pixel.c:262:13: note: vect_is_simple_use: operand _295
common/pixel.c:262:13: note: def_stmt: _295 = (int) _294;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _297
common/pixel.c:262:13: note: def_stmt: _297 = (int) _296;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: # DEBUG a5 => a5_298
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: _299 = MEM[(uint8_t *)p1_12 + 6B];
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)p1_12 + 6B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)p1_12 + 6B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_model_load_cost: inside_cost = 25, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _300 = (int) _299;
common/pixel.c:262:13: note: vect_is_simple_use: operand _299
common/pixel.c:262:13: note: def_stmt: _299 = MEM[(uint8_t *)p1_12 + 6B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_conversion ===
common/pixel.c:262:13: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _301 = MEM[(uint8_t *)p2_14 + 6B];
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)p2_14 + 6B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)p2_14 + 6B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_model_load_cost: inside_cost = 25, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _302 = (int) _301;
common/pixel.c:262:13: note: vect_is_simple_use: operand _301
common/pixel.c:262:13: note: def_stmt: _301 = MEM[(uint8_t *)p2_14 + 6B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_conversion ===
common/pixel.c:262:13: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: a6_303 = _300 - _302;
common/pixel.c:262:13: note: vect_is_simple_use: operand _300
common/pixel.c:262:13: note: def_stmt: _300 = (int) _299;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _302
common/pixel.c:262:13: note: def_stmt: _302 = (int) _301;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: # DEBUG a6 => a6_303
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: _304 = MEM[(uint8_t *)p1_12 + 7B];
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)p1_12 + 7B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)p1_12 + 7B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_model_load_cost: inside_cost = 25, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _305 = (int) _304;
common/pixel.c:262:13: note: vect_is_simple_use: operand _304
common/pixel.c:262:13: note: def_stmt: _304 = MEM[(uint8_t *)p1_12 + 7B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_conversion ===
common/pixel.c:262:13: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _306 = MEM[(uint8_t *)p2_14 + 7B];
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)p2_14 + 7B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)p2_14 + 7B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_model_load_cost: inside_cost = 25, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _307 = (int) _306;
common/pixel.c:262:13: note: vect_is_simple_use: operand _306
common/pixel.c:262:13: note: def_stmt: _306 = MEM[(uint8_t *)p2_14 + 7B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_conversion ===
common/pixel.c:262:13: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: a7_308 = _305 - _307;
common/pixel.c:262:13: note: vect_is_simple_use: operand _305
common/pixel.c:262:13: note: def_stmt: _305 = (int) _304;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _307
common/pixel.c:262:13: note: def_stmt: _307 = (int) _306;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: # DEBUG a7 => a7_308
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: t0_309 = a0_273 + a1_278;
common/pixel.c:262:13: note: vect_is_simple_use: operand a0_273
common/pixel.c:262:13: note: def_stmt: a0_273 = _270 - _272;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand a1_278
common/pixel.c:262:13: note: def_stmt: a1_278 = _275 - _277;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: # DEBUG t0 => t0_309
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: t1_310 = a0_273 - a1_278;
common/pixel.c:262:13: note: vect_is_simple_use: operand a0_273
common/pixel.c:262:13: note: def_stmt: a0_273 = _270 - _272;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand a1_278
common/pixel.c:262:13: note: def_stmt: a1_278 = _275 - _277;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: # DEBUG t1 => t1_310
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: t2_311 = a2_283 + a3_288;
common/pixel.c:262:13: note: vect_is_simple_use: operand a2_283
common/pixel.c:262:13: note: def_stmt: a2_283 = _280 - _282;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand a3_288
common/pixel.c:262:13: note: def_stmt: a3_288 = _285 - _287;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: # DEBUG t2 => t2_311
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: t3_312 = a2_283 - a3_288;
common/pixel.c:262:13: note: vect_is_simple_use: operand a2_283
common/pixel.c:262:13: note: def_stmt: a2_283 = _280 - _282;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand a3_288
common/pixel.c:262:13: note: def_stmt: a3_288 = _285 - _287;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: # DEBUG t3 => t3_312
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: b0_313 = t0_309 + t2_311;
common/pixel.c:262:13: note: vect_is_simple_use: operand t0_309
common/pixel.c:262:13: note: def_stmt: t0_309 = a0_273 + a1_278;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand t2_311
common/pixel.c:262:13: note: def_stmt: t2_311 = a2_283 + a3_288;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: # DEBUG b0 => b0_313
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: b2_314 = t0_309 - t2_311;
common/pixel.c:262:13: note: vect_is_simple_use: operand t0_309
common/pixel.c:262:13: note: def_stmt: t0_309 = a0_273 + a1_278;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand t2_311
common/pixel.c:262:13: note: def_stmt: t2_311 = a2_283 + a3_288;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: # DEBUG b2 => b2_314
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: b1_315 = t1_310 + t3_312;
common/pixel.c:262:13: note: vect_is_simple_use: operand t1_310
common/pixel.c:262:13: note: def_stmt: t1_310 = a0_273 - a1_278;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand t3_312
common/pixel.c:262:13: note: def_stmt: t3_312 = a2_283 - a3_288;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: # DEBUG b1 => b1_315
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: b3_316 = t1_310 - t3_312;
common/pixel.c:262:13: note: vect_is_simple_use: operand t1_310
common/pixel.c:262:13: note: def_stmt: t1_310 = a0_273 - a1_278;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand t3_312
common/pixel.c:262:13: note: def_stmt: t3_312 = a2_283 - a3_288;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: # DEBUG b3 => b3_316
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: t0_317 = a4_293 + a5_298;
common/pixel.c:262:13: note: vect_is_simple_use: operand a4_293
common/pixel.c:262:13: note: def_stmt: a4_293 = _290 - _292;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand a5_298
common/pixel.c:262:13: note: def_stmt: a5_298 = _295 - _297;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: # DEBUG t0 => t0_317
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: t1_318 = a4_293 - a5_298;
common/pixel.c:262:13: note: vect_is_simple_use: operand a4_293
common/pixel.c:262:13: note: def_stmt: a4_293 = _290 - _292;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand a5_298
common/pixel.c:262:13: note: def_stmt: a5_298 = _295 - _297;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: # DEBUG t1 => t1_318
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: t2_319 = a6_303 + a7_308;
common/pixel.c:262:13: note: vect_is_simple_use: operand a6_303
common/pixel.c:262:13: note: def_stmt: a6_303 = _300 - _302;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand a7_308
common/pixel.c:262:13: note: def_stmt: a7_308 = _305 - _307;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: # DEBUG t2 => t2_319
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: t3_320 = a6_303 - a7_308;
common/pixel.c:262:13: note: vect_is_simple_use: operand a6_303
common/pixel.c:262:13: note: def_stmt: a6_303 = _300 - _302;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand a7_308
common/pixel.c:262:13: note: def_stmt: a7_308 = _305 - _307;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: # DEBUG t3 => t3_320
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: b4_321 = t0_317 + t2_319;
common/pixel.c:262:13: note: vect_is_simple_use: operand t0_317
common/pixel.c:262:13: note: def_stmt: t0_317 = a4_293 + a5_298;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand t2_319
common/pixel.c:262:13: note: def_stmt: t2_319 = a6_303 + a7_308;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: # DEBUG b4 => b4_321
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: b6_322 = t0_317 - t2_319;
common/pixel.c:262:13: note: vect_is_simple_use: operand t0_317
common/pixel.c:262:13: note: def_stmt: t0_317 = a4_293 + a5_298;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand t2_319
common/pixel.c:262:13: note: def_stmt: t2_319 = a6_303 + a7_308;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: # DEBUG b6 => b6_322
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: b5_323 = t1_318 + t3_320;
common/pixel.c:262:13: note: vect_is_simple_use: operand t1_318
common/pixel.c:262:13: note: def_stmt: t1_318 = a4_293 - a5_298;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand t3_320
common/pixel.c:262:13: note: def_stmt: t3_320 = a6_303 - a7_308;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: # DEBUG b5 => b5_323
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: b7_324 = t1_318 - t3_320;
common/pixel.c:262:13: note: vect_is_simple_use: operand t1_318
common/pixel.c:262:13: note: def_stmt: t1_318 = a4_293 - a5_298;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand t3_320
common/pixel.c:262:13: note: def_stmt: t3_320 = a6_303 - a7_308;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: # DEBUG b7 => b7_324
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: _325 = (unsigned short) b0_313;
common/pixel.c:262:13: note: vect_is_simple_use: operand b0_313
common/pixel.c:262:13: note: def_stmt: b0_313 = t0_309 + t2_311;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_conversion ===
common/pixel.c:262:13: note: vect_model_promotion_demotion_cost: inside_cost = 1, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _326 = (unsigned short) b4_321;
common/pixel.c:262:13: note: vect_is_simple_use: operand b4_321
common/pixel.c:262:13: note: def_stmt: b4_321 = t0_317 + t2_319;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_conversion ===
common/pixel.c:262:13: note: vect_model_promotion_demotion_cost: inside_cost = 1, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _327 = _325 + _326;
common/pixel.c:262:13: note: vect_is_simple_use: operand _325
common/pixel.c:262:13: note: def_stmt: _325 = (unsigned short) b0_313;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _326
common/pixel.c:262:13: note: def_stmt: _326 = (unsigned short) b4_321;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _328 = (short int) _327;
common/pixel.c:262:13: note: vect_is_simple_use: operand _327
common/pixel.c:262:13: note: def_stmt: _327 = _325 + _326;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _327
common/pixel.c:262:13: note: def_stmt: _327 = _325 + _326;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: no optab.
common/pixel.c:262:13: note: vect_is_simple_use: operand _327
common/pixel.c:262:13: note: def_stmt: _327 = _325 + _326;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_assignment ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: diff[i_10][0] = _328;
common/pixel.c:262:13: note: vect_is_simple_use: operand _328
common/pixel.c:262:13: note: def_stmt: _328 = (short int) _327;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: no array mode for V8HI[8]
common/pixel.c:262:13: note: vect_is_simple_use: operand _336
common/pixel.c:262:13: note: def_stmt: _336 = (short int) _335;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _344
common/pixel.c:262:13: note: def_stmt: _344 = (short int) _343;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _352
common/pixel.c:262:13: note: def_stmt: _352 = (short int) _351;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _331
common/pixel.c:262:13: note: def_stmt: _331 = (short int) _330;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _339
common/pixel.c:262:13: note: def_stmt: _339 = (short int) _338;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _347
common/pixel.c:262:13: note: def_stmt: _347 = (short int) _346;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _355
common/pixel.c:262:13: note: def_stmt: _355 = (short int) _354;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_model_store_cost: strided group_size = 8 .
common/pixel.c:262:13: note: vect_model_store_cost: aligned.
common/pixel.c:262:13: note: vect_model_store_cost: inside_cost = 50, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _330 = _325 - _326;
common/pixel.c:262:13: note: vect_is_simple_use: operand _325
common/pixel.c:262:13: note: def_stmt: _325 = (unsigned short) b0_313;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _326
common/pixel.c:262:13: note: def_stmt: _326 = (unsigned short) b4_321;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _331 = (short int) _330;
common/pixel.c:262:13: note: vect_is_simple_use: operand _330
common/pixel.c:262:13: note: def_stmt: _330 = _325 - _326;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _330
common/pixel.c:262:13: note: def_stmt: _330 = _325 - _326;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: no optab.
common/pixel.c:262:13: note: vect_is_simple_use: operand _330
common/pixel.c:262:13: note: def_stmt: _330 = _325 - _326;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_assignment ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: diff[i_10][4] = _331;
common/pixel.c:262:13: note: vect_is_simple_use: operand _331
common/pixel.c:262:13: note: def_stmt: _331 = (short int) _330;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: no array mode for V8HI[8]
common/pixel.c:262:13: note: vect_model_store_cost: aligned.
common/pixel.c:262:13: note: vect_model_store_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _333 = (unsigned short) b1_315;
common/pixel.c:262:13: note: vect_is_simple_use: operand b1_315
common/pixel.c:262:13: note: def_stmt: b1_315 = t1_310 + t3_312;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_conversion ===
common/pixel.c:262:13: note: vect_model_promotion_demotion_cost: inside_cost = 1, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _334 = (unsigned short) b5_323;
common/pixel.c:262:13: note: vect_is_simple_use: operand b5_323
common/pixel.c:262:13: note: def_stmt: b5_323 = t1_318 + t3_320;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_conversion ===
common/pixel.c:262:13: note: vect_model_promotion_demotion_cost: inside_cost = 1, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _335 = _333 + _334;
common/pixel.c:262:13: note: vect_is_simple_use: operand _333
common/pixel.c:262:13: note: def_stmt: _333 = (unsigned short) b1_315;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _334
common/pixel.c:262:13: note: def_stmt: _334 = (unsigned short) b5_323;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _336 = (short int) _335;
common/pixel.c:262:13: note: vect_is_simple_use: operand _335
common/pixel.c:262:13: note: def_stmt: _335 = _333 + _334;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _335
common/pixel.c:262:13: note: def_stmt: _335 = _333 + _334;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: no optab.
common/pixel.c:262:13: note: vect_is_simple_use: operand _335
common/pixel.c:262:13: note: def_stmt: _335 = _333 + _334;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_assignment ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: diff[i_10][1] = _336;
common/pixel.c:262:13: note: vect_is_simple_use: operand _336
common/pixel.c:262:13: note: def_stmt: _336 = (short int) _335;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: no array mode for V8HI[8]
common/pixel.c:262:13: note: vect_model_store_cost: aligned.
common/pixel.c:262:13: note: vect_model_store_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _338 = _333 - _334;
common/pixel.c:262:13: note: vect_is_simple_use: operand _333
common/pixel.c:262:13: note: def_stmt: _333 = (unsigned short) b1_315;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _334
common/pixel.c:262:13: note: def_stmt: _334 = (unsigned short) b5_323;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _339 = (short int) _338;
common/pixel.c:262:13: note: vect_is_simple_use: operand _338
common/pixel.c:262:13: note: def_stmt: _338 = _333 - _334;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _338
common/pixel.c:262:13: note: def_stmt: _338 = _333 - _334;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: no optab.
common/pixel.c:262:13: note: vect_is_simple_use: operand _338
common/pixel.c:262:13: note: def_stmt: _338 = _333 - _334;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_assignment ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: diff[i_10][5] = _339;
common/pixel.c:262:13: note: vect_is_simple_use: operand _339
common/pixel.c:262:13: note: def_stmt: _339 = (short int) _338;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: no array mode for V8HI[8]
common/pixel.c:262:13: note: vect_model_store_cost: aligned.
common/pixel.c:262:13: note: vect_model_store_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _341 = (unsigned short) b2_314;
common/pixel.c:262:13: note: vect_is_simple_use: operand b2_314
common/pixel.c:262:13: note: def_stmt: b2_314 = t0_309 - t2_311;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_conversion ===
common/pixel.c:262:13: note: vect_model_promotion_demotion_cost: inside_cost = 1, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _342 = (unsigned short) b6_322;
common/pixel.c:262:13: note: vect_is_simple_use: operand b6_322
common/pixel.c:262:13: note: def_stmt: b6_322 = t0_317 - t2_319;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_conversion ===
common/pixel.c:262:13: note: vect_model_promotion_demotion_cost: inside_cost = 1, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _343 = _341 + _342;
common/pixel.c:262:13: note: vect_is_simple_use: operand _341
common/pixel.c:262:13: note: def_stmt: _341 = (unsigned short) b2_314;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _342
common/pixel.c:262:13: note: def_stmt: _342 = (unsigned short) b6_322;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _344 = (short int) _343;
common/pixel.c:262:13: note: vect_is_simple_use: operand _343
common/pixel.c:262:13: note: def_stmt: _343 = _341 + _342;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _343
common/pixel.c:262:13: note: def_stmt: _343 = _341 + _342;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: no optab.
common/pixel.c:262:13: note: vect_is_simple_use: operand _343
common/pixel.c:262:13: note: def_stmt: _343 = _341 + _342;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_assignment ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: diff[i_10][2] = _344;
common/pixel.c:262:13: note: vect_is_simple_use: operand _344
common/pixel.c:262:13: note: def_stmt: _344 = (short int) _343;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: no array mode for V8HI[8]
common/pixel.c:262:13: note: vect_model_store_cost: aligned.
common/pixel.c:262:13: note: vect_model_store_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _346 = _341 - _342;
common/pixel.c:262:13: note: vect_is_simple_use: operand _341
common/pixel.c:262:13: note: def_stmt: _341 = (unsigned short) b2_314;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _342
common/pixel.c:262:13: note: def_stmt: _342 = (unsigned short) b6_322;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _347 = (short int) _346;
common/pixel.c:262:13: note: vect_is_simple_use: operand _346
common/pixel.c:262:13: note: def_stmt: _346 = _341 - _342;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _346
common/pixel.c:262:13: note: def_stmt: _346 = _341 - _342;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: no optab.
common/pixel.c:262:13: note: vect_is_simple_use: operand _346
common/pixel.c:262:13: note: def_stmt: _346 = _341 - _342;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_assignment ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: diff[i_10][6] = _347;
common/pixel.c:262:13: note: vect_is_simple_use: operand _347
common/pixel.c:262:13: note: def_stmt: _347 = (short int) _346;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: no array mode for V8HI[8]
common/pixel.c:262:13: note: vect_model_store_cost: aligned.
common/pixel.c:262:13: note: vect_model_store_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _349 = (unsigned short) b3_316;
common/pixel.c:262:13: note: vect_is_simple_use: operand b3_316
common/pixel.c:262:13: note: def_stmt: b3_316 = t1_310 - t3_312;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_conversion ===
common/pixel.c:262:13: note: vect_model_promotion_demotion_cost: inside_cost = 1, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _350 = (unsigned short) b7_324;
common/pixel.c:262:13: note: vect_is_simple_use: operand b7_324
common/pixel.c:262:13: note: def_stmt: b7_324 = t1_318 - t3_320;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_conversion ===
common/pixel.c:262:13: note: vect_model_promotion_demotion_cost: inside_cost = 1, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _351 = _349 + _350;
common/pixel.c:262:13: note: vect_is_simple_use: operand _349
common/pixel.c:262:13: note: def_stmt: _349 = (unsigned short) b3_316;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _350
common/pixel.c:262:13: note: def_stmt: _350 = (unsigned short) b7_324;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _352 = (short int) _351;
common/pixel.c:262:13: note: vect_is_simple_use: operand _351
common/pixel.c:262:13: note: def_stmt: _351 = _349 + _350;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _351
common/pixel.c:262:13: note: def_stmt: _351 = _349 + _350;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: no optab.
common/pixel.c:262:13: note: vect_is_simple_use: operand _351
common/pixel.c:262:13: note: def_stmt: _351 = _349 + _350;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_assignment ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: diff[i_10][3] = _352;
common/pixel.c:262:13: note: vect_is_simple_use: operand _352
common/pixel.c:262:13: note: def_stmt: _352 = (short int) _351;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: no array mode for V8HI[8]
common/pixel.c:262:13: note: vect_model_store_cost: aligned.
common/pixel.c:262:13: note: vect_model_store_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _354 = _349 - _350;
common/pixel.c:262:13: note: vect_is_simple_use: operand _349
common/pixel.c:262:13: note: def_stmt: _349 = (unsigned short) b3_316;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _350
common/pixel.c:262:13: note: def_stmt: _350 = (unsigned short) b7_324;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _355 = (short int) _354;
common/pixel.c:262:13: note: vect_is_simple_use: operand _354
common/pixel.c:262:13: note: def_stmt: _354 = _349 - _350;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _354
common/pixel.c:262:13: note: def_stmt: _354 = _349 - _350;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: no optab.
common/pixel.c:262:13: note: vect_is_simple_use: operand _354
common/pixel.c:262:13: note: def_stmt: _354 = _349 - _350;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_assignment ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: diff[i_10][7] = _355;
common/pixel.c:262:13: note: vect_is_simple_use: operand _355
common/pixel.c:262:13: note: def_stmt: _355 = (short int) _354;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: no array mode for V8HI[8]
common/pixel.c:262:13: note: vect_model_store_cost: aligned.
common/pixel.c:262:13: note: vect_model_store_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: i_357 = i_10 + 1;
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: # DEBUG i => i_357
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: p1_359 = p1_12 + pretmp_581;
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: # DEBUG p1 => p1_359
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: p2_361 = p2_14 + pretmp_582;
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: # DEBUG p2 => p2_361
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: # DEBUG p2 => p2_361
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: # DEBUG p1 => p1_359
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: # DEBUG i => i_357
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: ivtmp_573 = ivtmp_574 - 1;
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: if (ivtmp_573 != 0)
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: vectorization_factor = 16, niters = 8
common/pixel.c:262:13: note: not vectorized: iteration count too small.
common/pixel.c:262:13: note: not vectorized: iteration count smaller than vectorization factor.
common/pixel.c:262:13: note: bad operation or unsupported loop bound.
common/pixel.c:298:1: note: vectorized 0 loops in function.
x264_pixel_sa8d_16x8 (uint8_t * pix1, int i_stride_pix1, uint8_t * pix2, int i_stride_pix2)
{
  int16_t diff[8][8];
  int i_satd;
  int x;
  int y;
  int i;
  uint8_t * p1;
  uint8_t * p2;
  int a0;
  int a1;
  int a2;
  int a3;
  int a4;
  int a5;
  int a6;
  int a7;
  int b0;
  int b1;
  int b2;
  int b3;
  int b4;
  int b5;
  int b6;
  int b7;
  int t0;
  int t1;
  int t2;
  int t3;
  int t0;
  int t1;
  int t2;
  int t3;
  int b0;
  int b1;
  int b2;
  int b3;
  int b4;
  int b5;
  int b6;
  int b7;
  int t0;
  int t1;
  int t2;
  int t3;
  int t0;
  int t1;
  int t2;
  int t3;
  int D.12944;
  uint8_t * pix1;
  uint8_t * pix2;
  int _7;
  int _8;
  sizetype _200;
  short int _211;
  int _212;
  short int _213;
  int _214;
  short int _217;
  int _218;
  short int _219;
  int _220;
  short int _227;
  int _228;
  short int _229;
  int _230;
  short int _233;
  int _234;
  short int _235;
  int _236;
  int _243;
  int _244;
  int _246;
  int _247;
  int _249;
  int _250;
  int _252;
  int _253;
  int _255;
  int _256;
  int _258;
  int _259;
  int _261;
  int _262;
  int _264;
  int _265;
  unsigned char _269;
  int _270;
  unsigned char _271;
  int _272;
  unsigned char _274;
  int _275;
  unsigned char _276;
  int _277;
  unsigned char _279;
  int _280;
  unsigned char _281;
  int _282;
  unsigned char _284;
  int _285;
  unsigned char _286;
  int _287;
  unsigned char _289;
  int _290;
  unsigned char _291;
  int _292;
  unsigned char _294;
  int _295;
  unsigned char _296;
  int _297;
  unsigned char _299;
  int _300;
  unsigned char _301;
  int _302;
  unsigned char _304;
  int _305;
  unsigned char _306;
  int _307;
  unsigned short _325;
  unsigned short _326;
  unsigned short _327;
  short int _328;
  unsigned short _330;
  short int _331;
  unsigned short _333;
  unsigned short _334;
  unsigned short _335;
  short int _336;
  unsigned short _338;
  short int _339;
  unsigned short _341;
  unsigned short _342;
  unsigned short _343;
  short int _344;
  unsigned short _346;
  short int _347;
  unsigned short _349;
  unsigned short _350;
  unsigned short _351;
  short int _352;
  unsigned short _354;
  short int _355;
  unsigned int ivtmp_571;
  unsigned int ivtmp_572;
  unsigned int ivtmp_573;
  unsigned int ivtmp_574;
  unsigned int ivtmp_577;
  unsigned int ivtmp_578;
  sizetype pretmp_581;
  sizetype pretmp_582;

  <bb 2>:
  # DEBUG pix1 => pix1_2(D)
  # DEBUG i_pix1 => i_stride_pix1_3(D)
  # DEBUG pix2 => pix2_4(D)
  # DEBUG i_pix2 => i_stride_pix2_5(D)
  # DEBUG i_width => 16
  # DEBUG i_height => 8
  # DEBUG i_satd => 0
  # DEBUG y => 0
  # DEBUG y => 0
  # DEBUG i_satd => 0
  # DEBUG pix2 => pix2_4(D)
  # DEBUG pix1 => pix1_2(D)
  # DEBUG x => 0
  # DEBUG i_satd => 0
  pretmp_581 = (sizetype) i_stride_pix1_3(D);
  pretmp_582 = (sizetype) i_stride_pix2_5(D);

  <bb 3>:
  # i_satd_178 = PHI <i_satd_576(8), 0(2)>
  # x_9 = PHI <x_268(8), 0(2)>
  # ivtmp_572 = PHI <ivtmp_571(8), 2(2)>
  # DEBUG x => x_9
  # DEBUG i_satd => i_satd_178
  _200 = (sizetype) x_9;
  p1_201 = pix1_2(D) + _200;
  # DEBUG p1 => p1_201
  p2_202 = pix2_4(D) + _200;
  # DEBUG p2 => p2_202
  # DEBUG i => 0
  # DEBUG p2 => p2_202
  # DEBUG p1 => p1_201
  # DEBUG i => 0
  goto <bb 10>;

  <bb 4>:

  <bb 5>:
  # i_satd_164 = PHI <i_satd_178(4), i_satd_266(6)>
  # i_165 = PHI <0(4), i_267(6)>
  # ivtmp_578 = PHI <8(4), ivtmp_577(6)>
  # DEBUG i => i_165
  # DEBUG i_satd => i_satd_164
  _211 = diff[0][i_165];
  _212 = (int) _211;
  _213 = diff[1][i_165];
  _214 = (int) _213;
  t0_215 = _212 + _214;
  # DEBUG t0 => t0_215
  t1_216 = _212 - _214;
  # DEBUG t1 => t1_216
  _217 = diff[2][i_165];
  _218 = (int) _217;
  _219 = diff[3][i_165];
  _220 = (int) _219;
  t2_221 = _218 + _220;
  # DEBUG t2 => t2_221
  t3_222 = _218 - _220;
  # DEBUG t3 => t3_222
  b0_223 = t0_215 + t2_221;
  # DEBUG b0 => b0_223
  b2_224 = t0_215 - t2_221;
  # DEBUG b2 => b2_224
  b1_225 = t1_216 + t3_222;
  # DEBUG b1 => b1_225
  b3_226 = t1_216 - t3_222;
  # DEBUG b3 => b3_226
  _227 = diff[4][i_165];
  _228 = (int) _227;
  _229 = diff[5][i_165];
  _230 = (int) _229;
  t0_231 = _228 + _230;
  # DEBUG t0 => t0_231
  t1_232 = _228 - _230;
  # DEBUG t1 => t1_232
  _233 = diff[6][i_165];
  _234 = (int) _233;
  _235 = diff[7][i_165];
  _236 = (int) _235;
  t2_237 = _234 + _236;
  # DEBUG t2 => t2_237
  t3_238 = _234 - _236;
  # DEBUG t3 => t3_238
  b4_239 = t0_231 + t2_237;
  # DEBUG b4 => b4_239
  b6_240 = t0_231 - t2_237;
  # DEBUG b6 => b6_240
  b5_241 = t1_232 + t3_238;
  # DEBUG b5 => b5_241
  b7_242 = t1_232 - t3_238;
  # DEBUG b7 => b7_242
  _243 = b0_223 + b4_239;
  _244 = ABS_EXPR <_243>;
  i_satd_245 = _244 + i_satd_164;
  # DEBUG i_satd => i_satd_245
  _246 = b0_223 - b4_239;
  _247 = ABS_EXPR <_246>;
  i_satd_248 = _247 + i_satd_245;
  # DEBUG i_satd => i_satd_248
  _249 = b1_225 + b5_241;
  _250 = ABS_EXPR <_249>;
  i_satd_251 = _250 + i_satd_248;
  # DEBUG i_satd => i_satd_251
  _252 = b1_225 - b5_241;
  _253 = ABS_EXPR <_252>;
  i_satd_254 = _253 + i_satd_251;
  # DEBUG i_satd => i_satd_254
  _255 = b2_224 + b6_240;
  _256 = ABS_EXPR <_255>;
  i_satd_257 = _256 + i_satd_254;
  # DEBUG i_satd => i_satd_257
  _258 = b2_224 - b6_240;
  _259 = ABS_EXPR <_258>;
  i_satd_260 = _259 + i_satd_257;
  # DEBUG i_satd => i_satd_260
  _261 = b3_226 + b7_242;
  _262 = ABS_EXPR <_261>;
  i_satd_263 = _262 + i_satd_260;
  # DEBUG i_satd => i_satd_263
  _264 = b3_226 - b7_242;
  _265 = ABS_EXPR <_264>;
  i_satd_266 = _265 + i_satd_263;
  # DEBUG i_satd => i_satd_266
  i_267 = i_165 + 1;
  # DEBUG i => i_267
  # DEBUG i => i_267
  # DEBUG i_satd => i_satd_266
  ivtmp_577 = ivtmp_578 - 1;
  if (ivtmp_577 != 0)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  goto <bb 5>;

  <bb 7>:
  # i_satd_576 = PHI <i_satd_266(5)>
  x_268 = x_9 + 8;
  # DEBUG x => x_268
  # DEBUG x => x_268
  # DEBUG i_satd => i_satd_576
  ivtmp_571 = ivtmp_572 - 1;
  if (ivtmp_571 != 0)
    goto <bb 8>;
  else
    goto <bb 11>;

  <bb 8>:
  goto <bb 3>;

  <bb 9>:

  <bb 10>:
  # i_10 = PHI <i_357(9), 0(3)>
  # p1_12 = PHI <p1_359(9), p1_201(3)>
  # p2_14 = PHI <p2_361(9), p2_202(3)>
  # ivtmp_574 = PHI <ivtmp_573(9), 8(3)>
  # DEBUG p2 => p2_14
  # DEBUG p1 => p1_12
  # DEBUG i => i_10
  _269 = *p1_12;
  _270 = (int) _269;
  _271 = *p2_14;
  _272 = (int) _271;
  a0_273 = _270 - _272;
  # DEBUG a0 => a0_273
  _274 = MEM[(uint8_t *)p1_12 + 1B];
  _275 = (int) _274;
  _276 = MEM[(uint8_t *)p2_14 + 1B];
  _277 = (int) _276;
  a1_278 = _275 - _277;
  # DEBUG a1 => a1_278
  _279 = MEM[(uint8_t *)p1_12 + 2B];
  _280 = (int) _279;
  _281 = MEM[(uint8_t *)p2_14 + 2B];
  _282 = (int) _281;
  a2_283 = _280 - _282;
  # DEBUG a2 => a2_283
  _284 = MEM[(uint8_t *)p1_12 + 3B];
  _285 = (int) _284;
  _286 = MEM[(uint8_t *)p2_14 + 3B];
  _287 = (int) _286;
  a3_288 = _285 - _287;
  # DEBUG a3 => a3_288
  _289 = MEM[(uint8_t *)p1_12 + 4B];
  _290 = (int) _289;
  _291 = MEM[(uint8_t *)p2_14 + 4B];
  _292 = (int) _291;
  a4_293 = _290 - _292;
  # DEBUG a4 => a4_293
  _294 = MEM[(uint8_t *)p1_12 + 5B];
  _295 = (int) _294;
  _296 = MEM[(uint8_t *)p2_14 + 5B];
  _297 = (int) _296;
  a5_298 = _295 - _297;
  # DEBUG a5 => a5_298
  _299 = MEM[(uint8_t *)p1_12 + 6B];
  _300 = (int) _299;
  _301 = MEM[(uint8_t *)p2_14 + 6B];
  _302 = (int) _301;
  a6_303 = _300 - _302;
  # DEBUG a6 => a6_303
  _304 = MEM[(uint8_t *)p1_12 + 7B];
  _305 = (int) _304;
  _306 = MEM[(uint8_t *)p2_14 + 7B];
  _307 = (int) _306;
  a7_308 = _305 - _307;
  # DEBUG a7 => a7_308
  t0_309 = a0_273 + a1_278;
  # DEBUG t0 => t0_309
  t1_310 = a0_273 - a1_278;
  # DEBUG t1 => t1_310
  t2_311 = a2_283 + a3_288;
  # DEBUG t2 => t2_311
  t3_312 = a2_283 - a3_288;
  # DEBUG t3 => t3_312
  b0_313 = t0_309 + t2_311;
  # DEBUG b0 => b0_313
  b2_314 = t0_309 - t2_311;
  # DEBUG b2 => b2_314
  b1_315 = t1_310 + t3_312;
  # DEBUG b1 => b1_315
  b3_316 = t1_310 - t3_312;
  # DEBUG b3 => b3_316
  t0_317 = a4_293 + a5_298;
  # DEBUG t0 => t0_317
  t1_318 = a4_293 - a5_298;
  # DEBUG t1 => t1_318
  t2_319 = a6_303 + a7_308;
  # DEBUG t2 => t2_319
  t3_320 = a6_303 - a7_308;
  # DEBUG t3 => t3_320
  b4_321 = t0_317 + t2_319;
  # DEBUG b4 => b4_321
  b6_322 = t0_317 - t2_319;
  # DEBUG b6 => b6_322
  b5_323 = t1_318 + t3_320;
  # DEBUG b5 => b5_323
  b7_324 = t1_318 - t3_320;
  # DEBUG b7 => b7_324
  _325 = (unsigned short) b0_313;
  _326 = (unsigned short) b4_321;
  _327 = _325 + _326;
  _328 = (short int) _327;
  diff[i_10][0] = _328;
  _330 = _325 - _326;
  _331 = (short int) _330;
  diff[i_10][4] = _331;
  _333 = (unsigned short) b1_315;
  _334 = (unsigned short) b5_323;
  _335 = _333 + _334;
  _336 = (short int) _335;
  diff[i_10][1] = _336;
  _338 = _333 - _334;
  _339 = (short int) _338;
  diff[i_10][5] = _339;
  _341 = (unsigned short) b2_314;
  _342 = (unsigned short) b6_322;
  _343 = _341 + _342;
  _344 = (short int) _343;
  diff[i_10][2] = _344;
  _346 = _341 - _342;
  _347 = (short int) _346;
  diff[i_10][6] = _347;
  _349 = (unsigned short) b3_316;
  _350 = (unsigned short) b7_324;
  _351 = _349 + _350;
  _352 = (short int) _351;
  diff[i_10][3] = _352;
  _354 = _349 - _350;
  _355 = (short int) _354;
  diff[i_10][7] = _355;
  i_357 = i_10 + 1;
  # DEBUG i => i_357
  p1_359 = p1_12 + pretmp_581;
  # DEBUG p1 => p1_359
  p2_361 = p2_14 + pretmp_582;
  # DEBUG p2 => p2_361
  # DEBUG p2 => p2_361
  # DEBUG p1 => p1_359
  # DEBUG i => i_357
  ivtmp_573 = ivtmp_574 - 1;
  if (ivtmp_573 != 0)
    goto <bb 9>;
  else
    goto <bb 4>;

  <bb 11>:
  # i_satd_575 = PHI <i_satd_576(7)>
  # DEBUG D#1028 => i_stride_pix1_3(D) * 8
  # DEBUG D#1027 => (sizetype) D#1028
  # DEBUG D#1026 => pix1_2(D) + D#1027
  # DEBUG pix1 => D#1026
  # DEBUG D#1025 => i_stride_pix2_5(D) * 8
  # DEBUG D#1024 => (sizetype) D#1025
  # DEBUG D#1023 => pix2_4(D) + D#1024
  # DEBUG pix2 => D#1023
  # DEBUG y => 8
  # DEBUG y => 8
  # DEBUG i_satd => i_satd_575
  # DEBUG pix2 => D#1023
  # DEBUG pix1 => D#1026
  diff ={v} {CLOBBER};
  # DEBUG pix1 => NULL
  # DEBUG i_pix1 => NULL
  # DEBUG pix2 => NULL
  # DEBUG i_pix2 => NULL
  # DEBUG i_width => NULL
  # DEBUG i_height => NULL
  # DEBUG t3 => NULL
  # DEBUG t2 => NULL
  # DEBUG t1 => NULL
  # DEBUG t0 => NULL
  # DEBUG t3 => NULL
  # DEBUG t2 => NULL
  # DEBUG t1 => NULL
  # DEBUG t0 => NULL
  # DEBUG b7 => NULL
  # DEBUG b6 => NULL
  # DEBUG b5 => NULL
  # DEBUG b4 => NULL
  # DEBUG b3 => NULL
  # DEBUG b2 => NULL
  # DEBUG b1 => NULL
  # DEBUG b0 => NULL
  # DEBUG t3 => NULL
  # DEBUG t2 => NULL
  # DEBUG t1 => NULL
  # DEBUG t0 => NULL
  # DEBUG t3 => NULL
  # DEBUG t2 => NULL
  # DEBUG t1 => NULL
  # DEBUG t0 => NULL
  # DEBUG b7 => NULL
  # DEBUG b6 => NULL
  # DEBUG b5 => NULL
  # DEBUG b4 => NULL
  # DEBUG b3 => NULL
  # DEBUG b2 => NULL
  # DEBUG b1 => NULL
  # DEBUG b0 => NULL
  # DEBUG a7 => NULL
  # DEBUG a6 => NULL
  # DEBUG a5 => NULL
  # DEBUG a4 => NULL
  # DEBUG a3 => NULL
  # DEBUG a2 => NULL
  # DEBUG a1 => NULL
  # DEBUG a0 => NULL
  # DEBUG p2 => NULL
  # DEBUG p1 => NULL
  # DEBUG i => NULL
  # DEBUG y => NULL
  # DEBUG x => NULL
  # DEBUG i_satd => NULL
  _7 = i_satd_575 + 2;
  _8 = _7 >> 2;
  return _8;

}



;; Function x264_pixel_sa8d_8x16 (x264_pixel_sa8d_8x16, funcdef_no=143, decl_uid=7942, cgraph_uid=143, symbol_order=186)


Analyzing loop at common/pixel.c:253
common/pixel.c:253:5: note: ===== analyze_loop_nest =====
common/pixel.c:253:5: note: === vect_analyze_loop_form ===
common/pixel.c:253:5: note: not vectorized: multiple nested loops.
common/pixel.c:253:5: note: bad loop form.

Analyzing loop at common/pixel.c:279
common/pixel.c:279:13: note: ===== analyze_loop_nest =====
common/pixel.c:279:13: note: === vect_analyze_loop_form ===
common/pixel.c:279:13: note: === get_loop_niters ===
Analyzing # of iterations of loop 5
  exit condition [7, + , 4294967295] != 0
  bounds on difference of bases: -7 ... -7
  result:
    # of iterations 7, bounded by 7
common/pixel.c:279:13: note: === vect_analyze_data_refs ===
Creating dr for diff[0][i_27]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &diff
	offset from base address: 0
	constant offset from base address: 0
	step: 2
	aligned to: 128
	base_object: diff
	Access function 0: {0, +, 1}_5
	Access function 1: 0
Creating dr for diff[1][i_27]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &diff
	offset from base address: 0
	constant offset from base address: 16
	step: 2
	aligned to: 128
	base_object: diff
	Access function 0: {0, +, 1}_5
	Access function 1: 1
Creating dr for diff[2][i_27]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &diff
	offset from base address: 0
	constant offset from base address: 32
	step: 2
	aligned to: 128
	base_object: diff
	Access function 0: {0, +, 1}_5
	Access function 1: 2
Creating dr for diff[3][i_27]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &diff
	offset from base address: 0
	constant offset from base address: 48
	step: 2
	aligned to: 128
	base_object: diff
	Access function 0: {0, +, 1}_5
	Access function 1: 3
Creating dr for diff[4][i_27]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &diff
	offset from base address: 0
	constant offset from base address: 64
	step: 2
	aligned to: 128
	base_object: diff
	Access function 0: {0, +, 1}_5
	Access function 1: 4
Creating dr for diff[5][i_27]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &diff
	offset from base address: 0
	constant offset from base address: 80
	step: 2
	aligned to: 128
	base_object: diff
	Access function 0: {0, +, 1}_5
	Access function 1: 5
Creating dr for diff[6][i_27]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &diff
	offset from base address: 0
	constant offset from base address: 96
	step: 2
	aligned to: 128
	base_object: diff
	Access function 0: {0, +, 1}_5
	Access function 1: 6
Creating dr for diff[7][i_27]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &diff
	offset from base address: 0
	constant offset from base address: 112
	step: 2
	aligned to: 128
	base_object: diff
	Access function 0: {0, +, 1}_5
	Access function 1: 7
common/pixel.c:279:13: note: got vectype for stmt: _296 = diff[0][i_27];
vector(8) short int
common/pixel.c:279:13: note: got vectype for stmt: _298 = diff[1][i_27];
vector(8) short int
common/pixel.c:279:13: note: got vectype for stmt: _302 = diff[2][i_27];
vector(8) short int
common/pixel.c:279:13: note: got vectype for stmt: _304 = diff[3][i_27];
vector(8) short int
common/pixel.c:279:13: note: got vectype for stmt: _312 = diff[4][i_27];
vector(8) short int
common/pixel.c:279:13: note: got vectype for stmt: _314 = diff[5][i_27];
vector(8) short int
common/pixel.c:279:13: note: got vectype for stmt: _318 = diff[6][i_27];
vector(8) short int
common/pixel.c:279:13: note: got vectype for stmt: _320 = diff[7][i_27];
vector(8) short int
common/pixel.c:279:13: note: === vect_analyze_scalar_cycles ===
common/pixel.c:279:13: note: Analyze phi: i_satd_26 = PHI <i_satd_193(8), i_satd_351(10)>

common/pixel.c:279:13: note: Access function of PHI: {i_satd_193, +, ((((((_347 + _350) + _344) + _341) + _338) + _335) + _332) + _329}_5
common/pixel.c:279:13: note: step: ((((((_347 + _350) + _344) + _341) + _338) + _335) + _332) + _329,  init: i_satd_193
common/pixel.c:279:13: note: step unknown.
common/pixel.c:279:13: note: Analyze phi: i_27 = PHI <0(8), i_352(10)>

common/pixel.c:279:13: note: Access function of PHI: {0, +, 1}_5
common/pixel.c:279:13: note: step: 1,  init: 0
common/pixel.c:279:13: note: Detected induction.
common/pixel.c:279:13: note: Analyze phi: ivtmp_578 = PHI <8(8), ivtmp_577(10)>

common/pixel.c:279:13: note: Access function of PHI: {8, +, 4294967295}_5
common/pixel.c:279:13: note: step: 4294967295,  init: 8
common/pixel.c:279:13: note: Detected induction.
common/pixel.c:279:13: note: Analyze phi: i_satd_26 = PHI <i_satd_193(8), i_satd_351(10)>

common/pixel.c:279:13: note: swapping oprnds: i_satd_330 = i_satd_26 + _329;

common/pixel.c:279:13: note: swapping oprnds: i_satd_333 = i_satd_330 + _332;

common/pixel.c:279:13: note: swapping oprnds: i_satd_336 = i_satd_333 + _335;

common/pixel.c:279:13: note: swapping oprnds: i_satd_339 = i_satd_336 + _338;

common/pixel.c:279:13: note: swapping oprnds: i_satd_342 = i_satd_339 + _341;

common/pixel.c:279:13: note: swapping oprnds: i_satd_345 = i_satd_342 + _344;

common/pixel.c:279:13: note: swapping oprnds: i_satd_348 = i_satd_345 + _347;

common/pixel.c:279:13: note: swapping oprnds: i_satd_351 = i_satd_348 + _350;

common/pixel.c:279:13: note: reduction: detected reduction chain: i_satd_351 = _350 + i_satd_348;

common/pixel.c:279:13: note: Detected reduction.
common/pixel.c:279:13: note: === vect_pattern_recog ===
common/pixel.c:279:13: note: vect_is_simple_use: operand _350
common/pixel.c:279:13: note: def_stmt: _350 = ABS_EXPR <_349>;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: vect_is_simple_use: operand _350
common/pixel.c:279:13: note: def_stmt: _350 = ABS_EXPR <_349>;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: vect_is_simple_use: operand _350
common/pixel.c:279:13: note: def_stmt: _350 = ABS_EXPR <_349>;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: vect_is_simple_use: operand b3_311
common/pixel.c:279:13: note: def_stmt: b3_311 = t1_301 - t3_307;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: === vect_analyze_data_ref_accesses ===
common/pixel.c:279:13: note: === vect_mark_stmts_to_be_vectorized ===
common/pixel.c:279:13: note: init: phi relevant? i_satd_26 = PHI <i_satd_193(8), i_satd_351(10)>
common/pixel.c:279:13: note: init: phi relevant? i_27 = PHI <0(8), i_352(10)>
common/pixel.c:279:13: note: init: phi relevant? ivtmp_578 = PHI <8(8), ivtmp_577(10)>
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG i => i_27
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG i_satd => i_satd_26
common/pixel.c:279:13: note: init: stmt relevant? _296 = diff[0][i_27];
common/pixel.c:279:13: note: init: stmt relevant? _297 = (int) _296;
common/pixel.c:279:13: note: init: stmt relevant? _298 = diff[1][i_27];
common/pixel.c:279:13: note: init: stmt relevant? _299 = (int) _298;
common/pixel.c:279:13: note: init: stmt relevant? t0_300 = _297 + _299;
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG t0 => t0_300
common/pixel.c:279:13: note: init: stmt relevant? t1_301 = _297 - _299;
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG t1 => t1_301
common/pixel.c:279:13: note: init: stmt relevant? _302 = diff[2][i_27];
common/pixel.c:279:13: note: init: stmt relevant? _303 = (int) _302;
common/pixel.c:279:13: note: init: stmt relevant? _304 = diff[3][i_27];
common/pixel.c:279:13: note: init: stmt relevant? _305 = (int) _304;
common/pixel.c:279:13: note: init: stmt relevant? t2_306 = _303 + _305;
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG t2 => t2_306
common/pixel.c:279:13: note: init: stmt relevant? t3_307 = _303 - _305;
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG t3 => t3_307
common/pixel.c:279:13: note: init: stmt relevant? b0_308 = t0_300 + t2_306;
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG b0 => b0_308
common/pixel.c:279:13: note: init: stmt relevant? b2_309 = t0_300 - t2_306;
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG b2 => b2_309
common/pixel.c:279:13: note: init: stmt relevant? b1_310 = t1_301 + t3_307;
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG b1 => b1_310
common/pixel.c:279:13: note: init: stmt relevant? b3_311 = t1_301 - t3_307;
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG b3 => b3_311
common/pixel.c:279:13: note: init: stmt relevant? _312 = diff[4][i_27];
common/pixel.c:279:13: note: init: stmt relevant? _313 = (int) _312;
common/pixel.c:279:13: note: init: stmt relevant? _314 = diff[5][i_27];
common/pixel.c:279:13: note: init: stmt relevant? _315 = (int) _314;
common/pixel.c:279:13: note: init: stmt relevant? t0_316 = _313 + _315;
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG t0 => t0_316
common/pixel.c:279:13: note: init: stmt relevant? t1_317 = _313 - _315;
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG t1 => t1_317
common/pixel.c:279:13: note: init: stmt relevant? _318 = diff[6][i_27];
common/pixel.c:279:13: note: init: stmt relevant? _319 = (int) _318;
common/pixel.c:279:13: note: init: stmt relevant? _320 = diff[7][i_27];
common/pixel.c:279:13: note: init: stmt relevant? _321 = (int) _320;
common/pixel.c:279:13: note: init: stmt relevant? t2_322 = _319 + _321;
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG t2 => t2_322
common/pixel.c:279:13: note: init: stmt relevant? t3_323 = _319 - _321;
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG t3 => t3_323
common/pixel.c:279:13: note: init: stmt relevant? b4_324 = t0_316 + t2_322;
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG b4 => b4_324
common/pixel.c:279:13: note: init: stmt relevant? b6_325 = t0_316 - t2_322;
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG b6 => b6_325
common/pixel.c:279:13: note: init: stmt relevant? b5_326 = t1_317 + t3_323;
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG b5 => b5_326
common/pixel.c:279:13: note: init: stmt relevant? b7_327 = t1_317 - t3_323;
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG b7 => b7_327
common/pixel.c:279:13: note: init: stmt relevant? _328 = b0_308 + b4_324;
common/pixel.c:279:13: note: init: stmt relevant? _329 = ABS_EXPR <_328>;
common/pixel.c:279:13: note: init: stmt relevant? i_satd_330 = _329 + i_satd_26;
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG i_satd => i_satd_330
common/pixel.c:279:13: note: init: stmt relevant? _331 = b0_308 - b4_324;
common/pixel.c:279:13: note: init: stmt relevant? _332 = ABS_EXPR <_331>;
common/pixel.c:279:13: note: init: stmt relevant? i_satd_333 = _332 + i_satd_330;
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG i_satd => i_satd_333
common/pixel.c:279:13: note: init: stmt relevant? _334 = b1_310 + b5_326;
common/pixel.c:279:13: note: init: stmt relevant? _335 = ABS_EXPR <_334>;
common/pixel.c:279:13: note: init: stmt relevant? i_satd_336 = _335 + i_satd_333;
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG i_satd => i_satd_336
common/pixel.c:279:13: note: init: stmt relevant? _337 = b1_310 - b5_326;
common/pixel.c:279:13: note: init: stmt relevant? _338 = ABS_EXPR <_337>;
common/pixel.c:279:13: note: init: stmt relevant? i_satd_339 = _338 + i_satd_336;
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG i_satd => i_satd_339
common/pixel.c:279:13: note: init: stmt relevant? _340 = b2_309 + b6_325;
common/pixel.c:279:13: note: init: stmt relevant? _341 = ABS_EXPR <_340>;
common/pixel.c:279:13: note: init: stmt relevant? i_satd_342 = _341 + i_satd_339;
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG i_satd => i_satd_342
common/pixel.c:279:13: note: init: stmt relevant? _343 = b2_309 - b6_325;
common/pixel.c:279:13: note: init: stmt relevant? _344 = ABS_EXPR <_343>;
common/pixel.c:279:13: note: init: stmt relevant? i_satd_345 = _344 + i_satd_342;
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG i_satd => i_satd_345
common/pixel.c:279:13: note: init: stmt relevant? _346 = b3_311 + b7_327;
common/pixel.c:279:13: note: init: stmt relevant? _347 = ABS_EXPR <_346>;
common/pixel.c:279:13: note: init: stmt relevant? i_satd_348 = _347 + i_satd_345;
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG i_satd => i_satd_348
common/pixel.c:279:13: note: init: stmt relevant? _349 = b3_311 - b7_327;
common/pixel.c:279:13: note: init: stmt relevant? _350 = ABS_EXPR <_349>;
common/pixel.c:279:13: note: init: stmt relevant? i_satd_351 = _350 + i_satd_348;
common/pixel.c:279:13: note: vec_stmt_relevant_p: used out of loop.
common/pixel.c:279:13: note: mark relevant 0, live 1.
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG i_satd => i_satd_351
common/pixel.c:279:13: note: init: stmt relevant? i_352 = i_27 + 1;
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG i => i_352
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG i => i_352
common/pixel.c:279:13: note: init: stmt relevant? # DEBUG i_satd => i_satd_351
common/pixel.c:279:13: note: init: stmt relevant? ivtmp_577 = ivtmp_578 - 1;
common/pixel.c:279:13: note: init: stmt relevant? if (ivtmp_577 != 0)
common/pixel.c:279:13: note: worklist: examine stmt: i_satd_351 = _350 + i_satd_348;
common/pixel.c:279:13: note: vect_is_simple_use: operand _350
common/pixel.c:279:13: note: def_stmt: _350 = ABS_EXPR <_349>;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: vect_is_simple_use: operand i_satd_348
common/pixel.c:279:13: note: def_stmt: i_satd_348 = _347 + i_satd_345;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: i_satd_348 = _347 + i_satd_345;
common/pixel.c:279:13: note: vect_is_simple_use: operand _347
common/pixel.c:279:13: note: def_stmt: _347 = ABS_EXPR <_346>;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: vect_is_simple_use: operand i_satd_345
common/pixel.c:279:13: note: def_stmt: i_satd_345 = _344 + i_satd_342;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: i_satd_345 = _344 + i_satd_342;
common/pixel.c:279:13: note: vect_is_simple_use: operand _344
common/pixel.c:279:13: note: def_stmt: _344 = ABS_EXPR <_343>;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: vect_is_simple_use: operand i_satd_342
common/pixel.c:279:13: note: def_stmt: i_satd_342 = _341 + i_satd_339;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: i_satd_342 = _341 + i_satd_339;
common/pixel.c:279:13: note: vect_is_simple_use: operand _341
common/pixel.c:279:13: note: def_stmt: _341 = ABS_EXPR <_340>;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: vect_is_simple_use: operand i_satd_339
common/pixel.c:279:13: note: def_stmt: i_satd_339 = _338 + i_satd_336;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: i_satd_339 = _338 + i_satd_336;
common/pixel.c:279:13: note: vect_is_simple_use: operand _338
common/pixel.c:279:13: note: def_stmt: _338 = ABS_EXPR <_337>;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: vect_is_simple_use: operand i_satd_336
common/pixel.c:279:13: note: def_stmt: i_satd_336 = _335 + i_satd_333;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: i_satd_336 = _335 + i_satd_333;
common/pixel.c:279:13: note: vect_is_simple_use: operand _335
common/pixel.c:279:13: note: def_stmt: _335 = ABS_EXPR <_334>;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: vect_is_simple_use: operand i_satd_333
common/pixel.c:279:13: note: def_stmt: i_satd_333 = _332 + i_satd_330;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: i_satd_333 = _332 + i_satd_330;
common/pixel.c:279:13: note: vect_is_simple_use: operand _332
common/pixel.c:279:13: note: def_stmt: _332 = ABS_EXPR <_331>;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: vect_is_simple_use: operand i_satd_330
common/pixel.c:279:13: note: def_stmt: i_satd_330 = _329 + i_satd_26;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: i_satd_330 = _329 + i_satd_26;
common/pixel.c:279:13: note: vect_is_simple_use: operand _329
common/pixel.c:279:13: note: def_stmt: _329 = ABS_EXPR <_328>;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: vect_is_simple_use: operand i_satd_26
common/pixel.c:279:13: note: def_stmt: i_satd_26 = PHI <i_satd_193(8), i_satd_351(10)>
common/pixel.c:279:13: note: type of def: 5.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: i_satd_26 = PHI <i_satd_193(8), i_satd_351(10)>
common/pixel.c:279:13: note: vect_is_simple_use: operand i_satd_193
common/pixel.c:279:13: note: def_stmt: i_satd_193 = PHI <i_satd_576(4), 0(2)>
common/pixel.c:279:13: note: type of def: 2.
common/pixel.c:279:13: note: def_stmt is out of loop.
common/pixel.c:279:13: note: vect_is_simple_use: operand i_satd_351
common/pixel.c:279:13: note: def_stmt: i_satd_351 = _350 + i_satd_348;
common/pixel.c:279:13: note: type of def: 5.
common/pixel.c:279:13: note: reduc-stmt defining reduc-phi in the same nest.
common/pixel.c:279:13: note: worklist: examine stmt: _329 = ABS_EXPR <_328>;
common/pixel.c:279:13: note: vect_is_simple_use: operand _328
common/pixel.c:279:13: note: def_stmt: _328 = b0_308 + b4_324;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: _328 = b0_308 + b4_324;
common/pixel.c:279:13: note: vect_is_simple_use: operand b0_308
common/pixel.c:279:13: note: def_stmt: b0_308 = t0_300 + t2_306;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: vect_is_simple_use: operand b4_324
common/pixel.c:279:13: note: def_stmt: b4_324 = t0_316 + t2_322;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: b4_324 = t0_316 + t2_322;
common/pixel.c:279:13: note: vect_is_simple_use: operand t0_316
common/pixel.c:279:13: note: def_stmt: t0_316 = _313 + _315;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: vect_is_simple_use: operand t2_322
common/pixel.c:279:13: note: def_stmt: t2_322 = _319 + _321;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: t2_322 = _319 + _321;
common/pixel.c:279:13: note: vect_is_simple_use: operand _319
common/pixel.c:279:13: note: def_stmt: _319 = (int) _318;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: vect_is_simple_use: operand _321
common/pixel.c:279:13: note: def_stmt: _321 = (int) _320;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: _321 = (int) _320;
common/pixel.c:279:13: note: vect_is_simple_use: operand _320
common/pixel.c:279:13: note: def_stmt: _320 = diff[7][i_27];
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: _320 = diff[7][i_27];
common/pixel.c:279:13: note: worklist: examine stmt: _319 = (int) _318;
common/pixel.c:279:13: note: vect_is_simple_use: operand _318
common/pixel.c:279:13: note: def_stmt: _318 = diff[6][i_27];
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: _318 = diff[6][i_27];
common/pixel.c:279:13: note: worklist: examine stmt: t0_316 = _313 + _315;
common/pixel.c:279:13: note: vect_is_simple_use: operand _313
common/pixel.c:279:13: note: def_stmt: _313 = (int) _312;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: vect_is_simple_use: operand _315
common/pixel.c:279:13: note: def_stmt: _315 = (int) _314;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: _315 = (int) _314;
common/pixel.c:279:13: note: vect_is_simple_use: operand _314
common/pixel.c:279:13: note: def_stmt: _314 = diff[5][i_27];
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: _314 = diff[5][i_27];
common/pixel.c:279:13: note: worklist: examine stmt: _313 = (int) _312;
common/pixel.c:279:13: note: vect_is_simple_use: operand _312
common/pixel.c:279:13: note: def_stmt: _312 = diff[4][i_27];
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: _312 = diff[4][i_27];
common/pixel.c:279:13: note: worklist: examine stmt: b0_308 = t0_300 + t2_306;
common/pixel.c:279:13: note: vect_is_simple_use: operand t0_300
common/pixel.c:279:13: note: def_stmt: t0_300 = _297 + _299;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: vect_is_simple_use: operand t2_306
common/pixel.c:279:13: note: def_stmt: t2_306 = _303 + _305;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: t2_306 = _303 + _305;
common/pixel.c:279:13: note: vect_is_simple_use: operand _303
common/pixel.c:279:13: note: def_stmt: _303 = (int) _302;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: vect_is_simple_use: operand _305
common/pixel.c:279:13: note: def_stmt: _305 = (int) _304;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: _305 = (int) _304;
common/pixel.c:279:13: note: vect_is_simple_use: operand _304
common/pixel.c:279:13: note: def_stmt: _304 = diff[3][i_27];
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: _304 = diff[3][i_27];
common/pixel.c:279:13: note: worklist: examine stmt: _303 = (int) _302;
common/pixel.c:279:13: note: vect_is_simple_use: operand _302
common/pixel.c:279:13: note: def_stmt: _302 = diff[2][i_27];
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: _302 = diff[2][i_27];
common/pixel.c:279:13: note: worklist: examine stmt: t0_300 = _297 + _299;
common/pixel.c:279:13: note: vect_is_simple_use: operand _297
common/pixel.c:279:13: note: def_stmt: _297 = (int) _296;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: vect_is_simple_use: operand _299
common/pixel.c:279:13: note: def_stmt: _299 = (int) _298;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: _299 = (int) _298;
common/pixel.c:279:13: note: vect_is_simple_use: operand _298
common/pixel.c:279:13: note: def_stmt: _298 = diff[1][i_27];
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: _298 = diff[1][i_27];
common/pixel.c:279:13: note: worklist: examine stmt: _297 = (int) _296;
common/pixel.c:279:13: note: vect_is_simple_use: operand _296
common/pixel.c:279:13: note: def_stmt: _296 = diff[0][i_27];
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: _296 = diff[0][i_27];
common/pixel.c:279:13: note: worklist: examine stmt: _332 = ABS_EXPR <_331>;
common/pixel.c:279:13: note: vect_is_simple_use: operand _331
common/pixel.c:279:13: note: def_stmt: _331 = b0_308 - b4_324;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: _331 = b0_308 - b4_324;
common/pixel.c:279:13: note: vect_is_simple_use: operand b0_308
common/pixel.c:279:13: note: def_stmt: b0_308 = t0_300 + t2_306;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: already marked relevant/live.
common/pixel.c:279:13: note: vect_is_simple_use: operand b4_324
common/pixel.c:279:13: note: def_stmt: b4_324 = t0_316 + t2_322;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: already marked relevant/live.
common/pixel.c:279:13: note: worklist: examine stmt: _335 = ABS_EXPR <_334>;
common/pixel.c:279:13: note: vect_is_simple_use: operand _334
common/pixel.c:279:13: note: def_stmt: _334 = b1_310 + b5_326;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: _334 = b1_310 + b5_326;
common/pixel.c:279:13: note: vect_is_simple_use: operand b1_310
common/pixel.c:279:13: note: def_stmt: b1_310 = t1_301 + t3_307;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: vect_is_simple_use: operand b5_326
common/pixel.c:279:13: note: def_stmt: b5_326 = t1_317 + t3_323;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: b5_326 = t1_317 + t3_323;
common/pixel.c:279:13: note: vect_is_simple_use: operand t1_317
common/pixel.c:279:13: note: def_stmt: t1_317 = _313 - _315;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: vect_is_simple_use: operand t3_323
common/pixel.c:279:13: note: def_stmt: t3_323 = _319 - _321;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: t3_323 = _319 - _321;
common/pixel.c:279:13: note: vect_is_simple_use: operand _319
common/pixel.c:279:13: note: def_stmt: _319 = (int) _318;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: already marked relevant/live.
common/pixel.c:279:13: note: vect_is_simple_use: operand _321
common/pixel.c:279:13: note: def_stmt: _321 = (int) _320;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: already marked relevant/live.
common/pixel.c:279:13: note: worklist: examine stmt: t1_317 = _313 - _315;
common/pixel.c:279:13: note: vect_is_simple_use: operand _313
common/pixel.c:279:13: note: def_stmt: _313 = (int) _312;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: already marked relevant/live.
common/pixel.c:279:13: note: vect_is_simple_use: operand _315
common/pixel.c:279:13: note: def_stmt: _315 = (int) _314;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: already marked relevant/live.
common/pixel.c:279:13: note: worklist: examine stmt: b1_310 = t1_301 + t3_307;
common/pixel.c:279:13: note: vect_is_simple_use: operand t1_301
common/pixel.c:279:13: note: def_stmt: t1_301 = _297 - _299;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: vect_is_simple_use: operand t3_307
common/pixel.c:279:13: note: def_stmt: t3_307 = _303 - _305;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: t3_307 = _303 - _305;
common/pixel.c:279:13: note: vect_is_simple_use: operand _303
common/pixel.c:279:13: note: def_stmt: _303 = (int) _302;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: already marked relevant/live.
common/pixel.c:279:13: note: vect_is_simple_use: operand _305
common/pixel.c:279:13: note: def_stmt: _305 = (int) _304;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: already marked relevant/live.
common/pixel.c:279:13: note: worklist: examine stmt: t1_301 = _297 - _299;
common/pixel.c:279:13: note: vect_is_simple_use: operand _297
common/pixel.c:279:13: note: def_stmt: _297 = (int) _296;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: already marked relevant/live.
common/pixel.c:279:13: note: vect_is_simple_use: operand _299
common/pixel.c:279:13: note: def_stmt: _299 = (int) _298;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: already marked relevant/live.
common/pixel.c:279:13: note: worklist: examine stmt: _338 = ABS_EXPR <_337>;
common/pixel.c:279:13: note: vect_is_simple_use: operand _337
common/pixel.c:279:13: note: def_stmt: _337 = b1_310 - b5_326;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: _337 = b1_310 - b5_326;
common/pixel.c:279:13: note: vect_is_simple_use: operand b1_310
common/pixel.c:279:13: note: def_stmt: b1_310 = t1_301 + t3_307;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: already marked relevant/live.
common/pixel.c:279:13: note: vect_is_simple_use: operand b5_326
common/pixel.c:279:13: note: def_stmt: b5_326 = t1_317 + t3_323;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: already marked relevant/live.
common/pixel.c:279:13: note: worklist: examine stmt: _341 = ABS_EXPR <_340>;
common/pixel.c:279:13: note: vect_is_simple_use: operand _340
common/pixel.c:279:13: note: def_stmt: _340 = b2_309 + b6_325;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: _340 = b2_309 + b6_325;
common/pixel.c:279:13: note: vect_is_simple_use: operand b2_309
common/pixel.c:279:13: note: def_stmt: b2_309 = t0_300 - t2_306;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: vect_is_simple_use: operand b6_325
common/pixel.c:279:13: note: def_stmt: b6_325 = t0_316 - t2_322;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: b6_325 = t0_316 - t2_322;
common/pixel.c:279:13: note: vect_is_simple_use: operand t0_316
common/pixel.c:279:13: note: def_stmt: t0_316 = _313 + _315;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: already marked relevant/live.
common/pixel.c:279:13: note: vect_is_simple_use: operand t2_322
common/pixel.c:279:13: note: def_stmt: t2_322 = _319 + _321;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: already marked relevant/live.
common/pixel.c:279:13: note: worklist: examine stmt: b2_309 = t0_300 - t2_306;
common/pixel.c:279:13: note: vect_is_simple_use: operand t0_300
common/pixel.c:279:13: note: def_stmt: t0_300 = _297 + _299;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: already marked relevant/live.
common/pixel.c:279:13: note: vect_is_simple_use: operand t2_306
common/pixel.c:279:13: note: def_stmt: t2_306 = _303 + _305;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: already marked relevant/live.
common/pixel.c:279:13: note: worklist: examine stmt: _344 = ABS_EXPR <_343>;
common/pixel.c:279:13: note: vect_is_simple_use: operand _343
common/pixel.c:279:13: note: def_stmt: _343 = b2_309 - b6_325;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: _343 = b2_309 - b6_325;
common/pixel.c:279:13: note: vect_is_simple_use: operand b2_309
common/pixel.c:279:13: note: def_stmt: b2_309 = t0_300 - t2_306;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: already marked relevant/live.
common/pixel.c:279:13: note: vect_is_simple_use: operand b6_325
common/pixel.c:279:13: note: def_stmt: b6_325 = t0_316 - t2_322;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: already marked relevant/live.
common/pixel.c:279:13: note: worklist: examine stmt: _347 = ABS_EXPR <_346>;
common/pixel.c:279:13: note: vect_is_simple_use: operand _346
common/pixel.c:279:13: note: def_stmt: _346 = b3_311 + b7_327;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: _346 = b3_311 + b7_327;
common/pixel.c:279:13: note: vect_is_simple_use: operand b3_311
common/pixel.c:279:13: note: def_stmt: b3_311 = t1_301 - t3_307;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: vect_is_simple_use: operand b7_327
common/pixel.c:279:13: note: def_stmt: b7_327 = t1_317 - t3_323;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: b7_327 = t1_317 - t3_323;
common/pixel.c:279:13: note: vect_is_simple_use: operand t1_317
common/pixel.c:279:13: note: def_stmt: t1_317 = _313 - _315;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: already marked relevant/live.
common/pixel.c:279:13: note: vect_is_simple_use: operand t3_323
common/pixel.c:279:13: note: def_stmt: t3_323 = _319 - _321;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: already marked relevant/live.
common/pixel.c:279:13: note: worklist: examine stmt: b3_311 = t1_301 - t3_307;
common/pixel.c:279:13: note: vect_is_simple_use: operand t1_301
common/pixel.c:279:13: note: def_stmt: t1_301 = _297 - _299;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: already marked relevant/live.
common/pixel.c:279:13: note: vect_is_simple_use: operand t3_307
common/pixel.c:279:13: note: def_stmt: t3_307 = _303 - _305;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: already marked relevant/live.
common/pixel.c:279:13: note: worklist: examine stmt: _350 = ABS_EXPR <_349>;
common/pixel.c:279:13: note: vect_is_simple_use: operand _349
common/pixel.c:279:13: note: def_stmt: _349 = b3_311 - b7_327;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: worklist: examine stmt: _349 = b3_311 - b7_327;
common/pixel.c:279:13: note: vect_is_simple_use: operand b3_311
common/pixel.c:279:13: note: def_stmt: b3_311 = t1_301 - t3_307;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: already marked relevant/live.
common/pixel.c:279:13: note: vect_is_simple_use: operand b7_327
common/pixel.c:279:13: note: def_stmt: b7_327 = t1_317 - t3_323;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: mark relevant 3, live 0.
common/pixel.c:279:13: note: already marked relevant/live.
common/pixel.c:279:13: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _296 = diff[0][i_27];
  stmt_b: _298 = diff[1][i_27];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_5)
  (chrec_b = {0, +, 1}_5)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 1)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _296 = diff[0][i_27];
  stmt_b: _302 = diff[2][i_27];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_5)
  (chrec_b = {0, +, 1}_5)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _296 = diff[0][i_27];
  stmt_b: _304 = diff[3][i_27];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_5)
  (chrec_b = {0, +, 1}_5)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _296 = diff[0][i_27];
  stmt_b: _312 = diff[4][i_27];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_5)
  (chrec_b = {0, +, 1}_5)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 4)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _296 = diff[0][i_27];
  stmt_b: _314 = diff[5][i_27];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_5)
  (chrec_b = {0, +, 1}_5)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 5)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _296 = diff[0][i_27];
  stmt_b: _318 = diff[6][i_27];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_5)
  (chrec_b = {0, +, 1}_5)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 6)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _296 = diff[0][i_27];
  stmt_b: _320 = diff[7][i_27];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_5)
  (chrec_b = {0, +, 1}_5)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _298 = diff[1][i_27];
  stmt_b: _302 = diff[2][i_27];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_5)
  (chrec_b = {0, +, 1}_5)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _298 = diff[1][i_27];
  stmt_b: _304 = diff[3][i_27];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_5)
  (chrec_b = {0, +, 1}_5)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _298 = diff[1][i_27];
  stmt_b: _312 = diff[4][i_27];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_5)
  (chrec_b = {0, +, 1}_5)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 4)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _298 = diff[1][i_27];
  stmt_b: _314 = diff[5][i_27];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_5)
  (chrec_b = {0, +, 1}_5)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 5)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _298 = diff[1][i_27];
  stmt_b: _318 = diff[6][i_27];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_5)
  (chrec_b = {0, +, 1}_5)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 6)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _298 = diff[1][i_27];
  stmt_b: _320 = diff[7][i_27];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_5)
  (chrec_b = {0, +, 1}_5)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _302 = diff[2][i_27];
  stmt_b: _304 = diff[3][i_27];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_5)
  (chrec_b = {0, +, 1}_5)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _302 = diff[2][i_27];
  stmt_b: _312 = diff[4][i_27];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_5)
  (chrec_b = {0, +, 1}_5)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 4)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _302 = diff[2][i_27];
  stmt_b: _314 = diff[5][i_27];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_5)
  (chrec_b = {0, +, 1}_5)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 5)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _302 = diff[2][i_27];
  stmt_b: _318 = diff[6][i_27];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_5)
  (chrec_b = {0, +, 1}_5)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 6)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _302 = diff[2][i_27];
  stmt_b: _320 = diff[7][i_27];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_5)
  (chrec_b = {0, +, 1}_5)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _304 = diff[3][i_27];
  stmt_b: _312 = diff[4][i_27];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_5)
  (chrec_b = {0, +, 1}_5)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 4)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _304 = diff[3][i_27];
  stmt_b: _314 = diff[5][i_27];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_5)
  (chrec_b = {0, +, 1}_5)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 5)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _304 = diff[3][i_27];
  stmt_b: _318 = diff[6][i_27];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_5)
  (chrec_b = {0, +, 1}_5)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 6)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _304 = diff[3][i_27];
  stmt_b: _320 = diff[7][i_27];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_5)
  (chrec_b = {0, +, 1}_5)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _312 = diff[4][i_27];
  stmt_b: _314 = diff[5][i_27];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_5)
  (chrec_b = {0, +, 1}_5)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 4)
  (chrec_b = 5)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _312 = diff[4][i_27];
  stmt_b: _318 = diff[6][i_27];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_5)
  (chrec_b = {0, +, 1}_5)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 4)
  (chrec_b = 6)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _312 = diff[4][i_27];
  stmt_b: _320 = diff[7][i_27];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_5)
  (chrec_b = {0, +, 1}_5)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 4)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _314 = diff[5][i_27];
  stmt_b: _318 = diff[6][i_27];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_5)
  (chrec_b = {0, +, 1}_5)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 5)
  (chrec_b = 6)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _314 = diff[5][i_27];
  stmt_b: _320 = diff[7][i_27];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_5)
  (chrec_b = {0, +, 1}_5)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 5)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _318 = diff[6][i_27];
  stmt_b: _320 = diff[7][i_27];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_5)
  (chrec_b = {0, +, 1}_5)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 6)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _296 = diff[0][i_27];
  stmt_b: _296 = diff[0][i_27];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_5)
  (chrec_b = {0, +, 1}_5)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 0)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _298 = diff[1][i_27];
  stmt_b: _298 = diff[1][i_27];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_5)
  (chrec_b = {0, +, 1}_5)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _302 = diff[2][i_27];
  stmt_b: _302 = diff[2][i_27];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_5)
  (chrec_b = {0, +, 1}_5)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _304 = diff[3][i_27];
  stmt_b: _304 = diff[3][i_27];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_5)
  (chrec_b = {0, +, 1}_5)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _312 = diff[4][i_27];
  stmt_b: _312 = diff[4][i_27];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_5)
  (chrec_b = {0, +, 1}_5)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 4)
  (chrec_b = 4)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _314 = diff[5][i_27];
  stmt_b: _314 = diff[5][i_27];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_5)
  (chrec_b = {0, +, 1}_5)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 5)
  (chrec_b = 5)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _318 = diff[6][i_27];
  stmt_b: _318 = diff[6][i_27];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_5)
  (chrec_b = {0, +, 1}_5)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 6)
  (chrec_b = 6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _320 = diff[7][i_27];
  stmt_b: _320 = diff[7][i_27];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_5)
  (chrec_b = {0, +, 1}_5)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 7)
  (chrec_b = 7)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/pixel.c:279:13: note: === vect_determine_vectorization_factor ===
common/pixel.c:279:13: note: ==> examining phi: i_satd_26 = PHI <i_satd_193(8), i_satd_351(10)>

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining phi: i_27 = PHI <0(8), i_352(10)>

common/pixel.c:279:13: note: ==> examining phi: ivtmp_578 = PHI <8(8), ivtmp_577(10)>

common/pixel.c:279:13: note: ==> examining statement: # DEBUG i => i_27

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: # DEBUG i_satd => i_satd_26

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: _296 = diff[0][i_27];

common/pixel.c:279:13: note: get vectype for scalar type:  short int
common/pixel.c:279:13: note: vectype: vector(8) short int
common/pixel.c:279:13: note: nunits = 8
common/pixel.c:279:13: note: ==> examining statement: _297 = (int) _296;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  short int
common/pixel.c:279:13: note: vectype: vector(8) short int
common/pixel.c:279:13: note: nunits = 8
common/pixel.c:279:13: note: ==> examining statement: _298 = diff[1][i_27];

common/pixel.c:279:13: note: get vectype for scalar type:  short int
common/pixel.c:279:13: note: vectype: vector(8) short int
common/pixel.c:279:13: note: nunits = 8
common/pixel.c:279:13: note: ==> examining statement: _299 = (int) _298;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  short int
common/pixel.c:279:13: note: vectype: vector(8) short int
common/pixel.c:279:13: note: nunits = 8
common/pixel.c:279:13: note: ==> examining statement: t0_300 = _297 + _299;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: # DEBUG t0 => t0_300

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: t1_301 = _297 - _299;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: # DEBUG t1 => t1_301

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: _302 = diff[2][i_27];

common/pixel.c:279:13: note: get vectype for scalar type:  short int
common/pixel.c:279:13: note: vectype: vector(8) short int
common/pixel.c:279:13: note: nunits = 8
common/pixel.c:279:13: note: ==> examining statement: _303 = (int) _302;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  short int
common/pixel.c:279:13: note: vectype: vector(8) short int
common/pixel.c:279:13: note: nunits = 8
common/pixel.c:279:13: note: ==> examining statement: _304 = diff[3][i_27];

common/pixel.c:279:13: note: get vectype for scalar type:  short int
common/pixel.c:279:13: note: vectype: vector(8) short int
common/pixel.c:279:13: note: nunits = 8
common/pixel.c:279:13: note: ==> examining statement: _305 = (int) _304;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  short int
common/pixel.c:279:13: note: vectype: vector(8) short int
common/pixel.c:279:13: note: nunits = 8
common/pixel.c:279:13: note: ==> examining statement: t2_306 = _303 + _305;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: # DEBUG t2 => t2_306

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: t3_307 = _303 - _305;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: # DEBUG t3 => t3_307

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: b0_308 = t0_300 + t2_306;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: # DEBUG b0 => b0_308

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: b2_309 = t0_300 - t2_306;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: # DEBUG b2 => b2_309

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: b1_310 = t1_301 + t3_307;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: # DEBUG b1 => b1_310

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: b3_311 = t1_301 - t3_307;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: # DEBUG b3 => b3_311

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: _312 = diff[4][i_27];

common/pixel.c:279:13: note: get vectype for scalar type:  short int
common/pixel.c:279:13: note: vectype: vector(8) short int
common/pixel.c:279:13: note: nunits = 8
common/pixel.c:279:13: note: ==> examining statement: _313 = (int) _312;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  short int
common/pixel.c:279:13: note: vectype: vector(8) short int
common/pixel.c:279:13: note: nunits = 8
common/pixel.c:279:13: note: ==> examining statement: _314 = diff[5][i_27];

common/pixel.c:279:13: note: get vectype for scalar type:  short int
common/pixel.c:279:13: note: vectype: vector(8) short int
common/pixel.c:279:13: note: nunits = 8
common/pixel.c:279:13: note: ==> examining statement: _315 = (int) _314;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  short int
common/pixel.c:279:13: note: vectype: vector(8) short int
common/pixel.c:279:13: note: nunits = 8
common/pixel.c:279:13: note: ==> examining statement: t0_316 = _313 + _315;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: # DEBUG t0 => t0_316

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: t1_317 = _313 - _315;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: # DEBUG t1 => t1_317

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: _318 = diff[6][i_27];

common/pixel.c:279:13: note: get vectype for scalar type:  short int
common/pixel.c:279:13: note: vectype: vector(8) short int
common/pixel.c:279:13: note: nunits = 8
common/pixel.c:279:13: note: ==> examining statement: _319 = (int) _318;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  short int
common/pixel.c:279:13: note: vectype: vector(8) short int
common/pixel.c:279:13: note: nunits = 8
common/pixel.c:279:13: note: ==> examining statement: _320 = diff[7][i_27];

common/pixel.c:279:13: note: get vectype for scalar type:  short int
common/pixel.c:279:13: note: vectype: vector(8) short int
common/pixel.c:279:13: note: nunits = 8
common/pixel.c:279:13: note: ==> examining statement: _321 = (int) _320;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  short int
common/pixel.c:279:13: note: vectype: vector(8) short int
common/pixel.c:279:13: note: nunits = 8
common/pixel.c:279:13: note: ==> examining statement: t2_322 = _319 + _321;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: # DEBUG t2 => t2_322

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: t3_323 = _319 - _321;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: # DEBUG t3 => t3_323

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: b4_324 = t0_316 + t2_322;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: # DEBUG b4 => b4_324

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: b6_325 = t0_316 - t2_322;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: # DEBUG b6 => b6_325

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: b5_326 = t1_317 + t3_323;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: # DEBUG b5 => b5_326

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: b7_327 = t1_317 - t3_323;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: # DEBUG b7 => b7_327

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: _328 = b0_308 + b4_324;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: _329 = ABS_EXPR <_328>;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: i_satd_330 = _329 + i_satd_26;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: # DEBUG i_satd => i_satd_330

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: _331 = b0_308 - b4_324;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: _332 = ABS_EXPR <_331>;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: i_satd_333 = _332 + i_satd_330;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: # DEBUG i_satd => i_satd_333

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: _334 = b1_310 + b5_326;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: _335 = ABS_EXPR <_334>;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: i_satd_336 = _335 + i_satd_333;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: # DEBUG i_satd => i_satd_336

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: _337 = b1_310 - b5_326;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: _338 = ABS_EXPR <_337>;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: i_satd_339 = _338 + i_satd_336;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: # DEBUG i_satd => i_satd_339

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: _340 = b2_309 + b6_325;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: _341 = ABS_EXPR <_340>;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: i_satd_342 = _341 + i_satd_339;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: # DEBUG i_satd => i_satd_342

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: _343 = b2_309 - b6_325;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: _344 = ABS_EXPR <_343>;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: i_satd_345 = _344 + i_satd_342;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: # DEBUG i_satd => i_satd_345

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: _346 = b3_311 + b7_327;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: _347 = ABS_EXPR <_346>;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: i_satd_348 = _347 + i_satd_345;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: # DEBUG i_satd => i_satd_348

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: _349 = b3_311 - b7_327;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: _350 = ABS_EXPR <_349>;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: i_satd_351 = _350 + i_satd_348;

common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: get vectype for scalar type:  int
common/pixel.c:279:13: note: vectype: vector(4) int
common/pixel.c:279:13: note: nunits = 4
common/pixel.c:279:13: note: ==> examining statement: # DEBUG i_satd => i_satd_351

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: i_352 = i_27 + 1;

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: # DEBUG i => i_352

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: # DEBUG i => i_352

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: # DEBUG i_satd => i_satd_351

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: ivtmp_577 = ivtmp_578 - 1;

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: ==> examining statement: if (ivtmp_577 != 0)

common/pixel.c:279:13: note: skip.
common/pixel.c:279:13: note: vectorization factor = 8
common/pixel.c:279:13: note: === vect_analyze_data_refs_alignment ===
common/pixel.c:279:13: note: vect_compute_data_ref_alignment:
common/pixel.c:279:13: note: misalign = 0 bytes of ref diff[0][i_27]
common/pixel.c:279:13: note: vect_compute_data_ref_alignment:
common/pixel.c:279:13: note: misalign = 0 bytes of ref diff[1][i_27]
common/pixel.c:279:13: note: vect_compute_data_ref_alignment:
common/pixel.c:279:13: note: misalign = 0 bytes of ref diff[2][i_27]
common/pixel.c:279:13: note: vect_compute_data_ref_alignment:
common/pixel.c:279:13: note: misalign = 0 bytes of ref diff[3][i_27]
common/pixel.c:279:13: note: vect_compute_data_ref_alignment:
common/pixel.c:279:13: note: misalign = 0 bytes of ref diff[4][i_27]
common/pixel.c:279:13: note: vect_compute_data_ref_alignment:
common/pixel.c:279:13: note: misalign = 0 bytes of ref diff[5][i_27]
common/pixel.c:279:13: note: vect_compute_data_ref_alignment:
common/pixel.c:279:13: note: misalign = 0 bytes of ref diff[6][i_27]
common/pixel.c:279:13: note: vect_compute_data_ref_alignment:
common/pixel.c:279:13: note: misalign = 0 bytes of ref diff[7][i_27]
common/pixel.c:279:13: note: === vect_prune_runtime_alias_test_list ===
common/pixel.c:279:13: note: === vect_enhance_data_refs_alignment ===
common/pixel.c:279:13: note: vect_can_advance_ivs_p:
common/pixel.c:279:13: note: Analyze phi: i_satd_26 = PHI <i_satd_193(8), i_satd_351(10)>

common/pixel.c:279:13: note: reduc phi. skip.
common/pixel.c:279:13: note: Analyze phi: i_27 = PHI <0(8), i_352(10)>

common/pixel.c:279:13: note: Analyze phi: ivtmp_578 = PHI <8(8), ivtmp_577(10)>

common/pixel.c:279:13: note: vect_model_load_cost: aligned.
common/pixel.c:279:13: note: vect_get_data_access_cost: inside_cost = 1, outside_cost = 0.
common/pixel.c:279:13: note: vect_model_load_cost: aligned.
common/pixel.c:279:13: note: vect_get_data_access_cost: inside_cost = 2, outside_cost = 0.
common/pixel.c:279:13: note: vect_model_load_cost: aligned.
common/pixel.c:279:13: note: vect_get_data_access_cost: inside_cost = 3, outside_cost = 0.
common/pixel.c:279:13: note: vect_model_load_cost: aligned.
common/pixel.c:279:13: note: vect_get_data_access_cost: inside_cost = 4, outside_cost = 0.
common/pixel.c:279:13: note: vect_model_load_cost: aligned.
common/pixel.c:279:13: note: vect_get_data_access_cost: inside_cost = 5, outside_cost = 0.
common/pixel.c:279:13: note: vect_model_load_cost: aligned.
common/pixel.c:279:13: note: vect_get_data_access_cost: inside_cost = 6, outside_cost = 0.
common/pixel.c:279:13: note: vect_model_load_cost: aligned.
common/pixel.c:279:13: note: vect_get_data_access_cost: inside_cost = 7, outside_cost = 0.
common/pixel.c:279:13: note: vect_model_load_cost: aligned.
common/pixel.c:279:13: note: vect_get_data_access_cost: inside_cost = 8, outside_cost = 0.
common/pixel.c:279:13: note: === vect_analyze_slp ===
common/pixel.c:279:13: note: Build SLP for i_satd_330 = _329 + i_satd_26;

common/pixel.c:279:13: note: Build SLP for i_satd_333 = _332 + i_satd_330;

common/pixel.c:279:13: note: Build SLP for i_satd_336 = _335 + i_satd_333;

common/pixel.c:279:13: note: Build SLP for i_satd_339 = _338 + i_satd_336;

common/pixel.c:279:13: note: Build SLP for i_satd_342 = _341 + i_satd_339;

common/pixel.c:279:13: note: Build SLP for i_satd_345 = _344 + i_satd_342;

common/pixel.c:279:13: note: Build SLP for i_satd_348 = _347 + i_satd_345;

common/pixel.c:279:13: note: Build SLP for i_satd_351 = _350 + i_satd_348;

common/pixel.c:279:13: note: vect_is_simple_use: operand _329
common/pixel.c:279:13: note: def_stmt: _329 = ABS_EXPR <_328>;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: vect_is_simple_use: operand i_satd_26
common/pixel.c:279:13: note: def_stmt: i_satd_26 = PHI <i_satd_193(8), i_satd_351(10)>
common/pixel.c:279:13: note: type of def: 5.
common/pixel.c:279:13: note: vect_is_simple_use: operand _332
common/pixel.c:279:13: note: def_stmt: _332 = ABS_EXPR <_331>;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: vect_is_simple_use: operand i_satd_330
common/pixel.c:279:13: note: def_stmt: i_satd_330 = _329 + i_satd_26;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: vect_is_simple_use: operand _335
common/pixel.c:279:13: note: def_stmt: _335 = ABS_EXPR <_334>;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: vect_is_simple_use: operand i_satd_333
common/pixel.c:279:13: note: def_stmt: i_satd_333 = _332 + i_satd_330;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: vect_is_simple_use: operand _338
common/pixel.c:279:13: note: def_stmt: _338 = ABS_EXPR <_337>;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: vect_is_simple_use: operand i_satd_336
common/pixel.c:279:13: note: def_stmt: i_satd_336 = _335 + i_satd_333;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: vect_is_simple_use: operand _341
common/pixel.c:279:13: note: def_stmt: _341 = ABS_EXPR <_340>;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: vect_is_simple_use: operand i_satd_339
common/pixel.c:279:13: note: def_stmt: i_satd_339 = _338 + i_satd_336;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: vect_is_simple_use: operand _344
common/pixel.c:279:13: note: def_stmt: _344 = ABS_EXPR <_343>;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: vect_is_simple_use: operand i_satd_342
common/pixel.c:279:13: note: def_stmt: i_satd_342 = _341 + i_satd_339;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: vect_is_simple_use: operand _347
common/pixel.c:279:13: note: def_stmt: _347 = ABS_EXPR <_346>;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: vect_is_simple_use: operand i_satd_345
common/pixel.c:279:13: note: def_stmt: i_satd_345 = _344 + i_satd_342;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: vect_is_simple_use: operand _350
common/pixel.c:279:13: note: def_stmt: _350 = ABS_EXPR <_349>;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: vect_is_simple_use: operand i_satd_348
common/pixel.c:279:13: note: def_stmt: i_satd_348 = _347 + i_satd_345;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: Build SLP for _329 = ABS_EXPR <_328>;

common/pixel.c:279:13: note: Build SLP for _332 = ABS_EXPR <_331>;

common/pixel.c:279:13: note: Build SLP for _335 = ABS_EXPR <_334>;

common/pixel.c:279:13: note: Build SLP for _338 = ABS_EXPR <_337>;

common/pixel.c:279:13: note: Build SLP for _341 = ABS_EXPR <_340>;

common/pixel.c:279:13: note: Build SLP for _344 = ABS_EXPR <_343>;

common/pixel.c:279:13: note: Build SLP for _347 = ABS_EXPR <_346>;

common/pixel.c:279:13: note: Build SLP for _350 = ABS_EXPR <_349>;

common/pixel.c:279:13: note: vect_is_simple_use: operand _328
common/pixel.c:279:13: note: def_stmt: _328 = b0_308 + b4_324;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: vect_is_simple_use: operand _331
common/pixel.c:279:13: note: def_stmt: _331 = b0_308 - b4_324;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: vect_is_simple_use: operand _334
common/pixel.c:279:13: note: def_stmt: _334 = b1_310 + b5_326;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: vect_is_simple_use: operand _337
common/pixel.c:279:13: note: def_stmt: _337 = b1_310 - b5_326;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: vect_is_simple_use: operand _340
common/pixel.c:279:13: note: def_stmt: _340 = b2_309 + b6_325;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: vect_is_simple_use: operand _343
common/pixel.c:279:13: note: def_stmt: _343 = b2_309 - b6_325;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: vect_is_simple_use: operand _346
common/pixel.c:279:13: note: def_stmt: _346 = b3_311 + b7_327;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: vect_is_simple_use: operand _349
common/pixel.c:279:13: note: def_stmt: _349 = b3_311 - b7_327;
common/pixel.c:279:13: note: type of def: 3.
common/pixel.c:279:13: note: Build SLP for _328 = b0_308 + b4_324;

common/pixel.c:279:13: note: Build SLP for _331 = b0_308 - b4_324;

common/pixel.c:279:13: note: Build SLP failed: different operation in stmt _331 = b0_308 - b4_324;

common/pixel.c:279:13: note: Build SLP for _334 = b1_310 + b5_326;

common/pixel.c:279:13: note: Build SLP for _337 = b1_310 - b5_326;

common/pixel.c:279:13: note: Build SLP failed: different operation in stmt _337 = b1_310 - b5_326;

common/pixel.c:279:13: note: Build SLP for _340 = b2_309 + b6_325;

common/pixel.c:279:13: note: Build SLP for _343 = b2_309 - b6_325;

common/pixel.c:279:13: note: Build SLP failed: different operation in stmt _343 = b2_309 - b6_325;

common/pixel.c:279:13: note: Build SLP for _346 = b3_311 + b7_327;

common/pixel.c:279:13: note: Build SLP for _349 = b3_311 - b7_327;

common/pixel.c:279:13: note: Build SLP failed: different operation in stmt _349 = b3_311 - b7_327;


Analyzing loop at common/pixel.c:262
common/pixel.c:262:13: note: ===== analyze_loop_nest =====
common/pixel.c:262:13: note: === vect_analyze_loop_form ===
common/pixel.c:262:13: note: === get_loop_niters ===
Analyzing # of iterations of loop 6
  exit condition [7, + , 4294967295] != 0
  bounds on difference of bases: -7 ... -7
  result:
    # of iterations 7, bounded by 7
common/pixel.c:262:13: note: === vect_analyze_data_refs ===
Creating dr for *pix1_23
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: pix1_173
	offset from base address: 0
	constant offset from base address: 0
	step: (ssizetype) pretmp_584
	aligned to: 128
	base_object: *pix1_173
	Access function 0: {0B, +, pretmp_584}_6
Creating dr for *pix2_24
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: pix2_292
	offset from base address: 0
	constant offset from base address: 0
	step: (ssizetype) pretmp_585
	aligned to: 128
	base_object: *pix2_292
	Access function 0: {0B, +, pretmp_585}_6
Creating dr for MEM[(uint8_t *)pix1_23 + 1B]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: pix1_173
	offset from base address: 0
	constant offset from base address: 1
	step: (ssizetype) pretmp_584
	aligned to: 128
	base_object: *pix1_173
	Access function 0: {1B, +, pretmp_584}_6
Creating dr for MEM[(uint8_t *)pix2_24 + 1B]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: pix2_292
	offset from base address: 0
	constant offset from base address: 1
	step: (ssizetype) pretmp_585
	aligned to: 128
	base_object: *pix2_292
	Access function 0: {1B, +, pretmp_585}_6
Creating dr for MEM[(uint8_t *)pix1_23 + 2B]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: pix1_173
	offset from base address: 0
	constant offset from base address: 2
	step: (ssizetype) pretmp_584
	aligned to: 128
	base_object: *pix1_173
	Access function 0: {2B, +, pretmp_584}_6
Creating dr for MEM[(uint8_t *)pix2_24 + 2B]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: pix2_292
	offset from base address: 0
	constant offset from base address: 2
	step: (ssizetype) pretmp_585
	aligned to: 128
	base_object: *pix2_292
	Access function 0: {2B, +, pretmp_585}_6
Creating dr for MEM[(uint8_t *)pix1_23 + 3B]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: pix1_173
	offset from base address: 0
	constant offset from base address: 3
	step: (ssizetype) pretmp_584
	aligned to: 128
	base_object: *pix1_173
	Access function 0: {3B, +, pretmp_584}_6
Creating dr for MEM[(uint8_t *)pix2_24 + 3B]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: pix2_292
	offset from base address: 0
	constant offset from base address: 3
	step: (ssizetype) pretmp_585
	aligned to: 128
	base_object: *pix2_292
	Access function 0: {3B, +, pretmp_585}_6
Creating dr for MEM[(uint8_t *)pix1_23 + 4B]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: pix1_173
	offset from base address: 0
	constant offset from base address: 4
	step: (ssizetype) pretmp_584
	aligned to: 128
	base_object: *pix1_173
	Access function 0: {4B, +, pretmp_584}_6
Creating dr for MEM[(uint8_t *)pix2_24 + 4B]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: pix2_292
	offset from base address: 0
	constant offset from base address: 4
	step: (ssizetype) pretmp_585
	aligned to: 128
	base_object: *pix2_292
	Access function 0: {4B, +, pretmp_585}_6
Creating dr for MEM[(uint8_t *)pix1_23 + 5B]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: pix1_173
	offset from base address: 0
	constant offset from base address: 5
	step: (ssizetype) pretmp_584
	aligned to: 128
	base_object: *pix1_173
	Access function 0: {5B, +, pretmp_584}_6
Creating dr for MEM[(uint8_t *)pix2_24 + 5B]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: pix2_292
	offset from base address: 0
	constant offset from base address: 5
	step: (ssizetype) pretmp_585
	aligned to: 128
	base_object: *pix2_292
	Access function 0: {5B, +, pretmp_585}_6
Creating dr for MEM[(uint8_t *)pix1_23 + 6B]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: pix1_173
	offset from base address: 0
	constant offset from base address: 6
	step: (ssizetype) pretmp_584
	aligned to: 128
	base_object: *pix1_173
	Access function 0: {6B, +, pretmp_584}_6
Creating dr for MEM[(uint8_t *)pix2_24 + 6B]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: pix2_292
	offset from base address: 0
	constant offset from base address: 6
	step: (ssizetype) pretmp_585
	aligned to: 128
	base_object: *pix2_292
	Access function 0: {6B, +, pretmp_585}_6
Creating dr for MEM[(uint8_t *)pix1_23 + 7B]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: pix1_173
	offset from base address: 0
	constant offset from base address: 7
	step: (ssizetype) pretmp_584
	aligned to: 128
	base_object: *pix1_173
	Access function 0: {7B, +, pretmp_584}_6
Creating dr for MEM[(uint8_t *)pix2_24 + 7B]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: pix2_292
	offset from base address: 0
	constant offset from base address: 7
	step: (ssizetype) pretmp_585
	aligned to: 128
	base_object: *pix2_292
	Access function 0: {7B, +, pretmp_585}_6
Creating dr for diff[i_22][0]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &diff
	offset from base address: 0
	constant offset from base address: 0
	step: 16
	aligned to: 128
	base_object: diff
	Access function 0: 0
	Access function 1: {0, +, 1}_6
Creating dr for diff[i_22][4]
analyze_innermost: success.
	base_address: &diff
	offset from base address: 0
	constant offset from base address: 8
	step: 16
	aligned to: 128
	base_object: diff
	Access function 0: 4
	Access function 1: {0, +, 1}_6
Creating dr for diff[i_22][1]
analyze_innermost: success.
	base_address: &diff
	offset from base address: 0
	constant offset from base address: 2
	step: 16
	aligned to: 128
	base_object: diff
	Access function 0: 1
	Access function 1: {0, +, 1}_6
Creating dr for diff[i_22][5]
analyze_innermost: success.
	base_address: &diff
	offset from base address: 0
	constant offset from base address: 10
	step: 16
	aligned to: 128
	base_object: diff
	Access function 0: 5
	Access function 1: {0, +, 1}_6
Creating dr for diff[i_22][2]
analyze_innermost: success.
	base_address: &diff
	offset from base address: 0
	constant offset from base address: 4
	step: 16
	aligned to: 128
	base_object: diff
	Access function 0: 2
	Access function 1: {0, +, 1}_6
Creating dr for diff[i_22][6]
analyze_innermost: success.
	base_address: &diff
	offset from base address: 0
	constant offset from base address: 12
	step: 16
	aligned to: 128
	base_object: diff
	Access function 0: 6
	Access function 1: {0, +, 1}_6
Creating dr for diff[i_22][3]
analyze_innermost: success.
	base_address: &diff
	offset from base address: 0
	constant offset from base address: 6
	step: 16
	aligned to: 128
	base_object: diff
	Access function 0: 3
	Access function 1: {0, +, 1}_6
Creating dr for diff[i_22][7]
analyze_innermost: success.
	base_address: &diff
	offset from base address: 0
	constant offset from base address: 14
	step: 16
	aligned to: 128
	base_object: diff
	Access function 0: 7
	Access function 1: {0, +, 1}_6
common/pixel.c:262:13: note: got vectype for stmt: _199 = *pix1_23;
vector(16) unsigned char
common/pixel.c:262:13: note: got vectype for stmt: _201 = *pix2_24;
vector(16) unsigned char
common/pixel.c:262:13: note: got vectype for stmt: _204 = MEM[(uint8_t *)pix1_23 + 1B];
vector(16) unsigned char
common/pixel.c:262:13: note: got vectype for stmt: _206 = MEM[(uint8_t *)pix2_24 + 1B];
vector(16) unsigned char
common/pixel.c:262:13: note: got vectype for stmt: _209 = MEM[(uint8_t *)pix1_23 + 2B];
vector(16) unsigned char
common/pixel.c:262:13: note: got vectype for stmt: _211 = MEM[(uint8_t *)pix2_24 + 2B];
vector(16) unsigned char
common/pixel.c:262:13: note: got vectype for stmt: _214 = MEM[(uint8_t *)pix1_23 + 3B];
vector(16) unsigned char
common/pixel.c:262:13: note: got vectype for stmt: _216 = MEM[(uint8_t *)pix2_24 + 3B];
vector(16) unsigned char
common/pixel.c:262:13: note: got vectype for stmt: _219 = MEM[(uint8_t *)pix1_23 + 4B];
vector(16) unsigned char
common/pixel.c:262:13: note: got vectype for stmt: _221 = MEM[(uint8_t *)pix2_24 + 4B];
vector(16) unsigned char
common/pixel.c:262:13: note: got vectype for stmt: _224 = MEM[(uint8_t *)pix1_23 + 5B];
vector(16) unsigned char
common/pixel.c:262:13: note: got vectype for stmt: _226 = MEM[(uint8_t *)pix2_24 + 5B];
vector(16) unsigned char
common/pixel.c:262:13: note: got vectype for stmt: _229 = MEM[(uint8_t *)pix1_23 + 6B];
vector(16) unsigned char
common/pixel.c:262:13: note: got vectype for stmt: _231 = MEM[(uint8_t *)pix2_24 + 6B];
vector(16) unsigned char
common/pixel.c:262:13: note: got vectype for stmt: _234 = MEM[(uint8_t *)pix1_23 + 7B];
vector(16) unsigned char
common/pixel.c:262:13: note: got vectype for stmt: _236 = MEM[(uint8_t *)pix2_24 + 7B];
vector(16) unsigned char
common/pixel.c:262:13: note: got vectype for stmt: diff[i_22][0] = _258;
vector(8) short int
common/pixel.c:262:13: note: got vectype for stmt: diff[i_22][4] = _261;
vector(8) short int
common/pixel.c:262:13: note: got vectype for stmt: diff[i_22][1] = _266;
vector(8) short int
common/pixel.c:262:13: note: got vectype for stmt: diff[i_22][5] = _269;
vector(8) short int
common/pixel.c:262:13: note: got vectype for stmt: diff[i_22][2] = _274;
vector(8) short int
common/pixel.c:262:13: note: got vectype for stmt: diff[i_22][6] = _277;
vector(8) short int
common/pixel.c:262:13: note: got vectype for stmt: diff[i_22][3] = _282;
vector(8) short int
common/pixel.c:262:13: note: got vectype for stmt: diff[i_22][7] = _285;
vector(8) short int
common/pixel.c:262:13: note: === vect_analyze_scalar_cycles ===
common/pixel.c:262:13: note: Analyze phi: i_22 = PHI <i_287(7), 0(5)>

common/pixel.c:262:13: note: Access function of PHI: {0, +, 1}_6
common/pixel.c:262:13: note: step: 1,  init: 0
common/pixel.c:262:13: note: Detected induction.
common/pixel.c:262:13: note: Analyze phi: pix1_23 = PHI <pix1_289(7), pix1_173(5)>

common/pixel.c:262:13: note: Access function of PHI: {pix1_173, +, pretmp_584}_6
common/pixel.c:262:13: note: step: pretmp_584,  init: pix1_173
common/pixel.c:262:13: note: Detected induction.
common/pixel.c:262:13: note: Analyze phi: pix2_24 = PHI <pix2_291(7), pix2_292(5)>

common/pixel.c:262:13: note: Access function of PHI: {pix2_292, +, pretmp_585}_6
common/pixel.c:262:13: note: step: pretmp_585,  init: pix2_292
common/pixel.c:262:13: note: Detected induction.
common/pixel.c:262:13: note: Analyze phi: .MEM_25 = PHI <.MEM_286(7), .MEM_21(5)>

common/pixel.c:262:13: note: Analyze phi: ivtmp_574 = PHI <ivtmp_573(7), 8(5)>

common/pixel.c:262:13: note: Access function of PHI: {8, +, 4294967295}_6
common/pixel.c:262:13: note: step: 4294967295,  init: 8
common/pixel.c:262:13: note: Detected induction.
common/pixel.c:262:13: note: === vect_pattern_recog ===
common/pixel.c:262:13: note: === vect_analyze_data_ref_accesses ===
common/pixel.c:262:13: note: Detected interleaving diff[i_22][0] and diff[i_22][1]
common/pixel.c:262:13: note: Detected interleaving diff[i_22][0] and diff[i_22][2]
common/pixel.c:262:13: note: Detected interleaving diff[i_22][0] and diff[i_22][3]
common/pixel.c:262:13: note: Detected interleaving diff[i_22][0] and diff[i_22][4]
common/pixel.c:262:13: note: Detected interleaving diff[i_22][0] and diff[i_22][5]
common/pixel.c:262:13: note: Detected interleaving diff[i_22][0] and diff[i_22][6]
common/pixel.c:262:13: note: Detected interleaving diff[i_22][0] and diff[i_22][7]
common/pixel.c:262:13: note: Detected interleaving of size 8
common/pixel.c:262:13: note: === vect_mark_stmts_to_be_vectorized ===
common/pixel.c:262:13: note: init: phi relevant? i_22 = PHI <i_287(7), 0(5)>
common/pixel.c:262:13: note: init: phi relevant? pix1_23 = PHI <pix1_289(7), pix1_173(5)>
common/pixel.c:262:13: note: init: phi relevant? pix2_24 = PHI <pix2_291(7), pix2_292(5)>
common/pixel.c:262:13: note: init: phi relevant? .MEM_25 = PHI <.MEM_286(7), .MEM_21(5)>
common/pixel.c:262:13: note: init: phi relevant? ivtmp_574 = PHI <ivtmp_573(7), 8(5)>
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG p2 => pix2_24
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG p1 => pix1_23
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG i => i_22
common/pixel.c:262:13: note: init: stmt relevant? _199 = *pix1_23;
common/pixel.c:262:13: note: init: stmt relevant? _200 = (int) _199;
common/pixel.c:262:13: note: init: stmt relevant? _201 = *pix2_24;
common/pixel.c:262:13: note: init: stmt relevant? _202 = (int) _201;
common/pixel.c:262:13: note: init: stmt relevant? a0_203 = _200 - _202;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG a0 => a0_203
common/pixel.c:262:13: note: init: stmt relevant? _204 = MEM[(uint8_t *)pix1_23 + 1B];
common/pixel.c:262:13: note: init: stmt relevant? _205 = (int) _204;
common/pixel.c:262:13: note: init: stmt relevant? _206 = MEM[(uint8_t *)pix2_24 + 1B];
common/pixel.c:262:13: note: init: stmt relevant? _207 = (int) _206;
common/pixel.c:262:13: note: init: stmt relevant? a1_208 = _205 - _207;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG a1 => a1_208
common/pixel.c:262:13: note: init: stmt relevant? _209 = MEM[(uint8_t *)pix1_23 + 2B];
common/pixel.c:262:13: note: init: stmt relevant? _210 = (int) _209;
common/pixel.c:262:13: note: init: stmt relevant? _211 = MEM[(uint8_t *)pix2_24 + 2B];
common/pixel.c:262:13: note: init: stmt relevant? _212 = (int) _211;
common/pixel.c:262:13: note: init: stmt relevant? a2_213 = _210 - _212;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG a2 => a2_213
common/pixel.c:262:13: note: init: stmt relevant? _214 = MEM[(uint8_t *)pix1_23 + 3B];
common/pixel.c:262:13: note: init: stmt relevant? _215 = (int) _214;
common/pixel.c:262:13: note: init: stmt relevant? _216 = MEM[(uint8_t *)pix2_24 + 3B];
common/pixel.c:262:13: note: init: stmt relevant? _217 = (int) _216;
common/pixel.c:262:13: note: init: stmt relevant? a3_218 = _215 - _217;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG a3 => a3_218
common/pixel.c:262:13: note: init: stmt relevant? _219 = MEM[(uint8_t *)pix1_23 + 4B];
common/pixel.c:262:13: note: init: stmt relevant? _220 = (int) _219;
common/pixel.c:262:13: note: init: stmt relevant? _221 = MEM[(uint8_t *)pix2_24 + 4B];
common/pixel.c:262:13: note: init: stmt relevant? _222 = (int) _221;
common/pixel.c:262:13: note: init: stmt relevant? a4_223 = _220 - _222;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG a4 => a4_223
common/pixel.c:262:13: note: init: stmt relevant? _224 = MEM[(uint8_t *)pix1_23 + 5B];
common/pixel.c:262:13: note: init: stmt relevant? _225 = (int) _224;
common/pixel.c:262:13: note: init: stmt relevant? _226 = MEM[(uint8_t *)pix2_24 + 5B];
common/pixel.c:262:13: note: init: stmt relevant? _227 = (int) _226;
common/pixel.c:262:13: note: init: stmt relevant? a5_228 = _225 - _227;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG a5 => a5_228
common/pixel.c:262:13: note: init: stmt relevant? _229 = MEM[(uint8_t *)pix1_23 + 6B];
common/pixel.c:262:13: note: init: stmt relevant? _230 = (int) _229;
common/pixel.c:262:13: note: init: stmt relevant? _231 = MEM[(uint8_t *)pix2_24 + 6B];
common/pixel.c:262:13: note: init: stmt relevant? _232 = (int) _231;
common/pixel.c:262:13: note: init: stmt relevant? a6_233 = _230 - _232;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG a6 => a6_233
common/pixel.c:262:13: note: init: stmt relevant? _234 = MEM[(uint8_t *)pix1_23 + 7B];
common/pixel.c:262:13: note: init: stmt relevant? _235 = (int) _234;
common/pixel.c:262:13: note: init: stmt relevant? _236 = MEM[(uint8_t *)pix2_24 + 7B];
common/pixel.c:262:13: note: init: stmt relevant? _237 = (int) _236;
common/pixel.c:262:13: note: init: stmt relevant? a7_238 = _235 - _237;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG a7 => a7_238
common/pixel.c:262:13: note: init: stmt relevant? t0_239 = a0_203 + a1_208;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG t0 => t0_239
common/pixel.c:262:13: note: init: stmt relevant? t1_240 = a0_203 - a1_208;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG t1 => t1_240
common/pixel.c:262:13: note: init: stmt relevant? t2_241 = a2_213 + a3_218;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG t2 => t2_241
common/pixel.c:262:13: note: init: stmt relevant? t3_242 = a2_213 - a3_218;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG t3 => t3_242
common/pixel.c:262:13: note: init: stmt relevant? b0_243 = t0_239 + t2_241;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG b0 => b0_243
common/pixel.c:262:13: note: init: stmt relevant? b2_244 = t0_239 - t2_241;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG b2 => b2_244
common/pixel.c:262:13: note: init: stmt relevant? b1_245 = t1_240 + t3_242;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG b1 => b1_245
common/pixel.c:262:13: note: init: stmt relevant? b3_246 = t1_240 - t3_242;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG b3 => b3_246
common/pixel.c:262:13: note: init: stmt relevant? t0_247 = a4_223 + a5_228;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG t0 => t0_247
common/pixel.c:262:13: note: init: stmt relevant? t1_248 = a4_223 - a5_228;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG t1 => t1_248
common/pixel.c:262:13: note: init: stmt relevant? t2_249 = a6_233 + a7_238;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG t2 => t2_249
common/pixel.c:262:13: note: init: stmt relevant? t3_250 = a6_233 - a7_238;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG t3 => t3_250
common/pixel.c:262:13: note: init: stmt relevant? b4_251 = t0_247 + t2_249;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG b4 => b4_251
common/pixel.c:262:13: note: init: stmt relevant? b6_252 = t0_247 - t2_249;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG b6 => b6_252
common/pixel.c:262:13: note: init: stmt relevant? b5_253 = t1_248 + t3_250;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG b5 => b5_253
common/pixel.c:262:13: note: init: stmt relevant? b7_254 = t1_248 - t3_250;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG b7 => b7_254
common/pixel.c:262:13: note: init: stmt relevant? _255 = (unsigned short) b0_243;
common/pixel.c:262:13: note: init: stmt relevant? _256 = (unsigned short) b4_251;
common/pixel.c:262:13: note: init: stmt relevant? _257 = _255 + _256;
common/pixel.c:262:13: note: init: stmt relevant? _258 = (short int) _257;
common/pixel.c:262:13: note: init: stmt relevant? diff[i_22][0] = _258;
common/pixel.c:262:13: note: vec_stmt_relevant_p: stmt has vdefs.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: init: stmt relevant? _260 = _255 - _256;
common/pixel.c:262:13: note: init: stmt relevant? _261 = (short int) _260;
common/pixel.c:262:13: note: init: stmt relevant? diff[i_22][4] = _261;
common/pixel.c:262:13: note: vec_stmt_relevant_p: stmt has vdefs.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: init: stmt relevant? _263 = (unsigned short) b1_245;
common/pixel.c:262:13: note: init: stmt relevant? _264 = (unsigned short) b5_253;
common/pixel.c:262:13: note: init: stmt relevant? _265 = _263 + _264;
common/pixel.c:262:13: note: init: stmt relevant? _266 = (short int) _265;
common/pixel.c:262:13: note: init: stmt relevant? diff[i_22][1] = _266;
common/pixel.c:262:13: note: vec_stmt_relevant_p: stmt has vdefs.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: init: stmt relevant? _268 = _263 - _264;
common/pixel.c:262:13: note: init: stmt relevant? _269 = (short int) _268;
common/pixel.c:262:13: note: init: stmt relevant? diff[i_22][5] = _269;
common/pixel.c:262:13: note: vec_stmt_relevant_p: stmt has vdefs.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: init: stmt relevant? _271 = (unsigned short) b2_244;
common/pixel.c:262:13: note: init: stmt relevant? _272 = (unsigned short) b6_252;
common/pixel.c:262:13: note: init: stmt relevant? _273 = _271 + _272;
common/pixel.c:262:13: note: init: stmt relevant? _274 = (short int) _273;
common/pixel.c:262:13: note: init: stmt relevant? diff[i_22][2] = _274;
common/pixel.c:262:13: note: vec_stmt_relevant_p: stmt has vdefs.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: init: stmt relevant? _276 = _271 - _272;
common/pixel.c:262:13: note: init: stmt relevant? _277 = (short int) _276;
common/pixel.c:262:13: note: init: stmt relevant? diff[i_22][6] = _277;
common/pixel.c:262:13: note: vec_stmt_relevant_p: stmt has vdefs.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: init: stmt relevant? _279 = (unsigned short) b3_246;
common/pixel.c:262:13: note: init: stmt relevant? _280 = (unsigned short) b7_254;
common/pixel.c:262:13: note: init: stmt relevant? _281 = _279 + _280;
common/pixel.c:262:13: note: init: stmt relevant? _282 = (short int) _281;
common/pixel.c:262:13: note: init: stmt relevant? diff[i_22][3] = _282;
common/pixel.c:262:13: note: vec_stmt_relevant_p: stmt has vdefs.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: init: stmt relevant? _284 = _279 - _280;
common/pixel.c:262:13: note: init: stmt relevant? _285 = (short int) _284;
common/pixel.c:262:13: note: init: stmt relevant? diff[i_22][7] = _285;
common/pixel.c:262:13: note: vec_stmt_relevant_p: stmt has vdefs.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: init: stmt relevant? i_287 = i_22 + 1;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG i => i_287
common/pixel.c:262:13: note: init: stmt relevant? pix1_289 = pix1_23 + pretmp_584;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG p1 => pix1_289
common/pixel.c:262:13: note: init: stmt relevant? pix2_291 = pix2_24 + pretmp_585;
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG p2 => pix2_291
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG p2 => pix2_291
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG p1 => pix1_289
common/pixel.c:262:13: note: init: stmt relevant? # DEBUG i => i_287
common/pixel.c:262:13: note: init: stmt relevant? ivtmp_573 = ivtmp_574 - 1;
common/pixel.c:262:13: note: init: stmt relevant? if (ivtmp_573 != 0)
common/pixel.c:262:13: note: worklist: examine stmt: diff[i_22][7] = _285;
common/pixel.c:262:13: note: vect_is_simple_use: operand _285
common/pixel.c:262:13: note: def_stmt: _285 = (short int) _284;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _285 = (short int) _284;
common/pixel.c:262:13: note: vect_is_simple_use: operand _284
common/pixel.c:262:13: note: def_stmt: _284 = _279 - _280;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _284 = _279 - _280;
common/pixel.c:262:13: note: vect_is_simple_use: operand _279
common/pixel.c:262:13: note: def_stmt: _279 = (unsigned short) b3_246;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: vect_is_simple_use: operand _280
common/pixel.c:262:13: note: def_stmt: _280 = (unsigned short) b7_254;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _280 = (unsigned short) b7_254;
common/pixel.c:262:13: note: vect_is_simple_use: operand b7_254
common/pixel.c:262:13: note: def_stmt: b7_254 = t1_248 - t3_250;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: b7_254 = t1_248 - t3_250;
common/pixel.c:262:13: note: vect_is_simple_use: operand t1_248
common/pixel.c:262:13: note: def_stmt: t1_248 = a4_223 - a5_228;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: vect_is_simple_use: operand t3_250
common/pixel.c:262:13: note: def_stmt: t3_250 = a6_233 - a7_238;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: t3_250 = a6_233 - a7_238;
common/pixel.c:262:13: note: vect_is_simple_use: operand a6_233
common/pixel.c:262:13: note: def_stmt: a6_233 = _230 - _232;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: vect_is_simple_use: operand a7_238
common/pixel.c:262:13: note: def_stmt: a7_238 = _235 - _237;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: a7_238 = _235 - _237;
common/pixel.c:262:13: note: vect_is_simple_use: operand _235
common/pixel.c:262:13: note: def_stmt: _235 = (int) _234;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: vect_is_simple_use: operand _237
common/pixel.c:262:13: note: def_stmt: _237 = (int) _236;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _237 = (int) _236;
common/pixel.c:262:13: note: vect_is_simple_use: operand _236
common/pixel.c:262:13: note: def_stmt: _236 = MEM[(uint8_t *)pix2_24 + 7B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _236 = MEM[(uint8_t *)pix2_24 + 7B];
common/pixel.c:262:13: note: worklist: examine stmt: _235 = (int) _234;
common/pixel.c:262:13: note: vect_is_simple_use: operand _234
common/pixel.c:262:13: note: def_stmt: _234 = MEM[(uint8_t *)pix1_23 + 7B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _234 = MEM[(uint8_t *)pix1_23 + 7B];
common/pixel.c:262:13: note: worklist: examine stmt: a6_233 = _230 - _232;
common/pixel.c:262:13: note: vect_is_simple_use: operand _230
common/pixel.c:262:13: note: def_stmt: _230 = (int) _229;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: vect_is_simple_use: operand _232
common/pixel.c:262:13: note: def_stmt: _232 = (int) _231;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _232 = (int) _231;
common/pixel.c:262:13: note: vect_is_simple_use: operand _231
common/pixel.c:262:13: note: def_stmt: _231 = MEM[(uint8_t *)pix2_24 + 6B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _231 = MEM[(uint8_t *)pix2_24 + 6B];
common/pixel.c:262:13: note: worklist: examine stmt: _230 = (int) _229;
common/pixel.c:262:13: note: vect_is_simple_use: operand _229
common/pixel.c:262:13: note: def_stmt: _229 = MEM[(uint8_t *)pix1_23 + 6B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _229 = MEM[(uint8_t *)pix1_23 + 6B];
common/pixel.c:262:13: note: worklist: examine stmt: t1_248 = a4_223 - a5_228;
common/pixel.c:262:13: note: vect_is_simple_use: operand a4_223
common/pixel.c:262:13: note: def_stmt: a4_223 = _220 - _222;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: vect_is_simple_use: operand a5_228
common/pixel.c:262:13: note: def_stmt: a5_228 = _225 - _227;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: a5_228 = _225 - _227;
common/pixel.c:262:13: note: vect_is_simple_use: operand _225
common/pixel.c:262:13: note: def_stmt: _225 = (int) _224;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: vect_is_simple_use: operand _227
common/pixel.c:262:13: note: def_stmt: _227 = (int) _226;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _227 = (int) _226;
common/pixel.c:262:13: note: vect_is_simple_use: operand _226
common/pixel.c:262:13: note: def_stmt: _226 = MEM[(uint8_t *)pix2_24 + 5B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _226 = MEM[(uint8_t *)pix2_24 + 5B];
common/pixel.c:262:13: note: worklist: examine stmt: _225 = (int) _224;
common/pixel.c:262:13: note: vect_is_simple_use: operand _224
common/pixel.c:262:13: note: def_stmt: _224 = MEM[(uint8_t *)pix1_23 + 5B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _224 = MEM[(uint8_t *)pix1_23 + 5B];
common/pixel.c:262:13: note: worklist: examine stmt: a4_223 = _220 - _222;
common/pixel.c:262:13: note: vect_is_simple_use: operand _220
common/pixel.c:262:13: note: def_stmt: _220 = (int) _219;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: vect_is_simple_use: operand _222
common/pixel.c:262:13: note: def_stmt: _222 = (int) _221;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _222 = (int) _221;
common/pixel.c:262:13: note: vect_is_simple_use: operand _221
common/pixel.c:262:13: note: def_stmt: _221 = MEM[(uint8_t *)pix2_24 + 4B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _221 = MEM[(uint8_t *)pix2_24 + 4B];
common/pixel.c:262:13: note: worklist: examine stmt: _220 = (int) _219;
common/pixel.c:262:13: note: vect_is_simple_use: operand _219
common/pixel.c:262:13: note: def_stmt: _219 = MEM[(uint8_t *)pix1_23 + 4B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _219 = MEM[(uint8_t *)pix1_23 + 4B];
common/pixel.c:262:13: note: worklist: examine stmt: _279 = (unsigned short) b3_246;
common/pixel.c:262:13: note: vect_is_simple_use: operand b3_246
common/pixel.c:262:13: note: def_stmt: b3_246 = t1_240 - t3_242;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: b3_246 = t1_240 - t3_242;
common/pixel.c:262:13: note: vect_is_simple_use: operand t1_240
common/pixel.c:262:13: note: def_stmt: t1_240 = a0_203 - a1_208;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: vect_is_simple_use: operand t3_242
common/pixel.c:262:13: note: def_stmt: t3_242 = a2_213 - a3_218;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: t3_242 = a2_213 - a3_218;
common/pixel.c:262:13: note: vect_is_simple_use: operand a2_213
common/pixel.c:262:13: note: def_stmt: a2_213 = _210 - _212;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: vect_is_simple_use: operand a3_218
common/pixel.c:262:13: note: def_stmt: a3_218 = _215 - _217;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: a3_218 = _215 - _217;
common/pixel.c:262:13: note: vect_is_simple_use: operand _215
common/pixel.c:262:13: note: def_stmt: _215 = (int) _214;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: vect_is_simple_use: operand _217
common/pixel.c:262:13: note: def_stmt: _217 = (int) _216;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _217 = (int) _216;
common/pixel.c:262:13: note: vect_is_simple_use: operand _216
common/pixel.c:262:13: note: def_stmt: _216 = MEM[(uint8_t *)pix2_24 + 3B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _216 = MEM[(uint8_t *)pix2_24 + 3B];
common/pixel.c:262:13: note: worklist: examine stmt: _215 = (int) _214;
common/pixel.c:262:13: note: vect_is_simple_use: operand _214
common/pixel.c:262:13: note: def_stmt: _214 = MEM[(uint8_t *)pix1_23 + 3B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _214 = MEM[(uint8_t *)pix1_23 + 3B];
common/pixel.c:262:13: note: worklist: examine stmt: a2_213 = _210 - _212;
common/pixel.c:262:13: note: vect_is_simple_use: operand _210
common/pixel.c:262:13: note: def_stmt: _210 = (int) _209;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: vect_is_simple_use: operand _212
common/pixel.c:262:13: note: def_stmt: _212 = (int) _211;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _212 = (int) _211;
common/pixel.c:262:13: note: vect_is_simple_use: operand _211
common/pixel.c:262:13: note: def_stmt: _211 = MEM[(uint8_t *)pix2_24 + 2B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _211 = MEM[(uint8_t *)pix2_24 + 2B];
common/pixel.c:262:13: note: worklist: examine stmt: _210 = (int) _209;
common/pixel.c:262:13: note: vect_is_simple_use: operand _209
common/pixel.c:262:13: note: def_stmt: _209 = MEM[(uint8_t *)pix1_23 + 2B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _209 = MEM[(uint8_t *)pix1_23 + 2B];
common/pixel.c:262:13: note: worklist: examine stmt: t1_240 = a0_203 - a1_208;
common/pixel.c:262:13: note: vect_is_simple_use: operand a0_203
common/pixel.c:262:13: note: def_stmt: a0_203 = _200 - _202;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: vect_is_simple_use: operand a1_208
common/pixel.c:262:13: note: def_stmt: a1_208 = _205 - _207;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: a1_208 = _205 - _207;
common/pixel.c:262:13: note: vect_is_simple_use: operand _205
common/pixel.c:262:13: note: def_stmt: _205 = (int) _204;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: vect_is_simple_use: operand _207
common/pixel.c:262:13: note: def_stmt: _207 = (int) _206;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _207 = (int) _206;
common/pixel.c:262:13: note: vect_is_simple_use: operand _206
common/pixel.c:262:13: note: def_stmt: _206 = MEM[(uint8_t *)pix2_24 + 1B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _206 = MEM[(uint8_t *)pix2_24 + 1B];
common/pixel.c:262:13: note: worklist: examine stmt: _205 = (int) _204;
common/pixel.c:262:13: note: vect_is_simple_use: operand _204
common/pixel.c:262:13: note: def_stmt: _204 = MEM[(uint8_t *)pix1_23 + 1B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _204 = MEM[(uint8_t *)pix1_23 + 1B];
common/pixel.c:262:13: note: worklist: examine stmt: a0_203 = _200 - _202;
common/pixel.c:262:13: note: vect_is_simple_use: operand _200
common/pixel.c:262:13: note: def_stmt: _200 = (int) _199;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: vect_is_simple_use: operand _202
common/pixel.c:262:13: note: def_stmt: _202 = (int) _201;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _202 = (int) _201;
common/pixel.c:262:13: note: vect_is_simple_use: operand _201
common/pixel.c:262:13: note: def_stmt: _201 = *pix2_24;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _201 = *pix2_24;
common/pixel.c:262:13: note: worklist: examine stmt: _200 = (int) _199;
common/pixel.c:262:13: note: vect_is_simple_use: operand _199
common/pixel.c:262:13: note: def_stmt: _199 = *pix1_23;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _199 = *pix1_23;
common/pixel.c:262:13: note: worklist: examine stmt: diff[i_22][3] = _282;
common/pixel.c:262:13: note: vect_is_simple_use: operand _282
common/pixel.c:262:13: note: def_stmt: _282 = (short int) _281;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _282 = (short int) _281;
common/pixel.c:262:13: note: vect_is_simple_use: operand _281
common/pixel.c:262:13: note: def_stmt: _281 = _279 + _280;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _281 = _279 + _280;
common/pixel.c:262:13: note: vect_is_simple_use: operand _279
common/pixel.c:262:13: note: def_stmt: _279 = (unsigned short) b3_246;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: already marked relevant/live.
common/pixel.c:262:13: note: vect_is_simple_use: operand _280
common/pixel.c:262:13: note: def_stmt: _280 = (unsigned short) b7_254;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: already marked relevant/live.
common/pixel.c:262:13: note: worklist: examine stmt: diff[i_22][6] = _277;
common/pixel.c:262:13: note: vect_is_simple_use: operand _277
common/pixel.c:262:13: note: def_stmt: _277 = (short int) _276;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _277 = (short int) _276;
common/pixel.c:262:13: note: vect_is_simple_use: operand _276
common/pixel.c:262:13: note: def_stmt: _276 = _271 - _272;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _276 = _271 - _272;
common/pixel.c:262:13: note: vect_is_simple_use: operand _271
common/pixel.c:262:13: note: def_stmt: _271 = (unsigned short) b2_244;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: vect_is_simple_use: operand _272
common/pixel.c:262:13: note: def_stmt: _272 = (unsigned short) b6_252;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _272 = (unsigned short) b6_252;
common/pixel.c:262:13: note: vect_is_simple_use: operand b6_252
common/pixel.c:262:13: note: def_stmt: b6_252 = t0_247 - t2_249;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: b6_252 = t0_247 - t2_249;
common/pixel.c:262:13: note: vect_is_simple_use: operand t0_247
common/pixel.c:262:13: note: def_stmt: t0_247 = a4_223 + a5_228;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: vect_is_simple_use: operand t2_249
common/pixel.c:262:13: note: def_stmt: t2_249 = a6_233 + a7_238;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: t2_249 = a6_233 + a7_238;
common/pixel.c:262:13: note: vect_is_simple_use: operand a6_233
common/pixel.c:262:13: note: def_stmt: a6_233 = _230 - _232;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: already marked relevant/live.
common/pixel.c:262:13: note: vect_is_simple_use: operand a7_238
common/pixel.c:262:13: note: def_stmt: a7_238 = _235 - _237;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: already marked relevant/live.
common/pixel.c:262:13: note: worklist: examine stmt: t0_247 = a4_223 + a5_228;
common/pixel.c:262:13: note: vect_is_simple_use: operand a4_223
common/pixel.c:262:13: note: def_stmt: a4_223 = _220 - _222;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: already marked relevant/live.
common/pixel.c:262:13: note: vect_is_simple_use: operand a5_228
common/pixel.c:262:13: note: def_stmt: a5_228 = _225 - _227;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: already marked relevant/live.
common/pixel.c:262:13: note: worklist: examine stmt: _271 = (unsigned short) b2_244;
common/pixel.c:262:13: note: vect_is_simple_use: operand b2_244
common/pixel.c:262:13: note: def_stmt: b2_244 = t0_239 - t2_241;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: b2_244 = t0_239 - t2_241;
common/pixel.c:262:13: note: vect_is_simple_use: operand t0_239
common/pixel.c:262:13: note: def_stmt: t0_239 = a0_203 + a1_208;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: vect_is_simple_use: operand t2_241
common/pixel.c:262:13: note: def_stmt: t2_241 = a2_213 + a3_218;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: t2_241 = a2_213 + a3_218;
common/pixel.c:262:13: note: vect_is_simple_use: operand a2_213
common/pixel.c:262:13: note: def_stmt: a2_213 = _210 - _212;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: already marked relevant/live.
common/pixel.c:262:13: note: vect_is_simple_use: operand a3_218
common/pixel.c:262:13: note: def_stmt: a3_218 = _215 - _217;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: already marked relevant/live.
common/pixel.c:262:13: note: worklist: examine stmt: t0_239 = a0_203 + a1_208;
common/pixel.c:262:13: note: vect_is_simple_use: operand a0_203
common/pixel.c:262:13: note: def_stmt: a0_203 = _200 - _202;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: already marked relevant/live.
common/pixel.c:262:13: note: vect_is_simple_use: operand a1_208
common/pixel.c:262:13: note: def_stmt: a1_208 = _205 - _207;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: already marked relevant/live.
common/pixel.c:262:13: note: worklist: examine stmt: diff[i_22][2] = _274;
common/pixel.c:262:13: note: vect_is_simple_use: operand _274
common/pixel.c:262:13: note: def_stmt: _274 = (short int) _273;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _274 = (short int) _273;
common/pixel.c:262:13: note: vect_is_simple_use: operand _273
common/pixel.c:262:13: note: def_stmt: _273 = _271 + _272;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _273 = _271 + _272;
common/pixel.c:262:13: note: vect_is_simple_use: operand _271
common/pixel.c:262:13: note: def_stmt: _271 = (unsigned short) b2_244;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: already marked relevant/live.
common/pixel.c:262:13: note: vect_is_simple_use: operand _272
common/pixel.c:262:13: note: def_stmt: _272 = (unsigned short) b6_252;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: already marked relevant/live.
common/pixel.c:262:13: note: worklist: examine stmt: diff[i_22][5] = _269;
common/pixel.c:262:13: note: vect_is_simple_use: operand _269
common/pixel.c:262:13: note: def_stmt: _269 = (short int) _268;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _269 = (short int) _268;
common/pixel.c:262:13: note: vect_is_simple_use: operand _268
common/pixel.c:262:13: note: def_stmt: _268 = _263 - _264;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _268 = _263 - _264;
common/pixel.c:262:13: note: vect_is_simple_use: operand _263
common/pixel.c:262:13: note: def_stmt: _263 = (unsigned short) b1_245;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: vect_is_simple_use: operand _264
common/pixel.c:262:13: note: def_stmt: _264 = (unsigned short) b5_253;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _264 = (unsigned short) b5_253;
common/pixel.c:262:13: note: vect_is_simple_use: operand b5_253
common/pixel.c:262:13: note: def_stmt: b5_253 = t1_248 + t3_250;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: b5_253 = t1_248 + t3_250;
common/pixel.c:262:13: note: vect_is_simple_use: operand t1_248
common/pixel.c:262:13: note: def_stmt: t1_248 = a4_223 - a5_228;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: already marked relevant/live.
common/pixel.c:262:13: note: vect_is_simple_use: operand t3_250
common/pixel.c:262:13: note: def_stmt: t3_250 = a6_233 - a7_238;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: already marked relevant/live.
common/pixel.c:262:13: note: worklist: examine stmt: _263 = (unsigned short) b1_245;
common/pixel.c:262:13: note: vect_is_simple_use: operand b1_245
common/pixel.c:262:13: note: def_stmt: b1_245 = t1_240 + t3_242;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: b1_245 = t1_240 + t3_242;
common/pixel.c:262:13: note: vect_is_simple_use: operand t1_240
common/pixel.c:262:13: note: def_stmt: t1_240 = a0_203 - a1_208;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: already marked relevant/live.
common/pixel.c:262:13: note: vect_is_simple_use: operand t3_242
common/pixel.c:262:13: note: def_stmt: t3_242 = a2_213 - a3_218;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: already marked relevant/live.
common/pixel.c:262:13: note: worklist: examine stmt: diff[i_22][1] = _266;
common/pixel.c:262:13: note: vect_is_simple_use: operand _266
common/pixel.c:262:13: note: def_stmt: _266 = (short int) _265;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _266 = (short int) _265;
common/pixel.c:262:13: note: vect_is_simple_use: operand _265
common/pixel.c:262:13: note: def_stmt: _265 = _263 + _264;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _265 = _263 + _264;
common/pixel.c:262:13: note: vect_is_simple_use: operand _263
common/pixel.c:262:13: note: def_stmt: _263 = (unsigned short) b1_245;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: already marked relevant/live.
common/pixel.c:262:13: note: vect_is_simple_use: operand _264
common/pixel.c:262:13: note: def_stmt: _264 = (unsigned short) b5_253;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: already marked relevant/live.
common/pixel.c:262:13: note: worklist: examine stmt: diff[i_22][4] = _261;
common/pixel.c:262:13: note: vect_is_simple_use: operand _261
common/pixel.c:262:13: note: def_stmt: _261 = (short int) _260;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _261 = (short int) _260;
common/pixel.c:262:13: note: vect_is_simple_use: operand _260
common/pixel.c:262:13: note: def_stmt: _260 = _255 - _256;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _260 = _255 - _256;
common/pixel.c:262:13: note: vect_is_simple_use: operand _255
common/pixel.c:262:13: note: def_stmt: _255 = (unsigned short) b0_243;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: vect_is_simple_use: operand _256
common/pixel.c:262:13: note: def_stmt: _256 = (unsigned short) b4_251;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _256 = (unsigned short) b4_251;
common/pixel.c:262:13: note: vect_is_simple_use: operand b4_251
common/pixel.c:262:13: note: def_stmt: b4_251 = t0_247 + t2_249;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: b4_251 = t0_247 + t2_249;
common/pixel.c:262:13: note: vect_is_simple_use: operand t0_247
common/pixel.c:262:13: note: def_stmt: t0_247 = a4_223 + a5_228;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: already marked relevant/live.
common/pixel.c:262:13: note: vect_is_simple_use: operand t2_249
common/pixel.c:262:13: note: def_stmt: t2_249 = a6_233 + a7_238;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: already marked relevant/live.
common/pixel.c:262:13: note: worklist: examine stmt: _255 = (unsigned short) b0_243;
common/pixel.c:262:13: note: vect_is_simple_use: operand b0_243
common/pixel.c:262:13: note: def_stmt: b0_243 = t0_239 + t2_241;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: b0_243 = t0_239 + t2_241;
common/pixel.c:262:13: note: vect_is_simple_use: operand t0_239
common/pixel.c:262:13: note: def_stmt: t0_239 = a0_203 + a1_208;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: already marked relevant/live.
common/pixel.c:262:13: note: vect_is_simple_use: operand t2_241
common/pixel.c:262:13: note: def_stmt: t2_241 = a2_213 + a3_218;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: already marked relevant/live.
common/pixel.c:262:13: note: worklist: examine stmt: diff[i_22][0] = _258;
common/pixel.c:262:13: note: vect_is_simple_use: operand _258
common/pixel.c:262:13: note: def_stmt: _258 = (short int) _257;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _258 = (short int) _257;
common/pixel.c:262:13: note: vect_is_simple_use: operand _257
common/pixel.c:262:13: note: def_stmt: _257 = _255 + _256;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: worklist: examine stmt: _257 = _255 + _256;
common/pixel.c:262:13: note: vect_is_simple_use: operand _255
common/pixel.c:262:13: note: def_stmt: _255 = (unsigned short) b0_243;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: already marked relevant/live.
common/pixel.c:262:13: note: vect_is_simple_use: operand _256
common/pixel.c:262:13: note: def_stmt: _256 = (unsigned short) b4_251;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: mark relevant 4, live 0.
common/pixel.c:262:13: note: already marked relevant/live.
common/pixel.c:262:13: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _199 = *pix1_23;
  stmt_b: _201 = *pix2_24;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _199 = *pix1_23;
  stmt_b: _204 = MEM[(uint8_t *)pix1_23 + 1B];
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, pretmp_584}_6)
  (chrec_b = {1B, +, pretmp_584}_6)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _199 = *pix1_23;
  stmt_b: _206 = MEM[(uint8_t *)pix2_24 + 1B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _199 = *pix1_23;
  stmt_b: _209 = MEM[(uint8_t *)pix1_23 + 2B];
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, pretmp_584}_6)
  (chrec_b = {2B, +, pretmp_584}_6)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _199 = *pix1_23;
  stmt_b: _211 = MEM[(uint8_t *)pix2_24 + 2B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _199 = *pix1_23;
  stmt_b: _214 = MEM[(uint8_t *)pix1_23 + 3B];
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, pretmp_584}_6)
  (chrec_b = {3B, +, pretmp_584}_6)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _199 = *pix1_23;
  stmt_b: _216 = MEM[(uint8_t *)pix2_24 + 3B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _199 = *pix1_23;
  stmt_b: _219 = MEM[(uint8_t *)pix1_23 + 4B];
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, pretmp_584}_6)
  (chrec_b = {4B, +, pretmp_584}_6)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _199 = *pix1_23;
  stmt_b: _221 = MEM[(uint8_t *)pix2_24 + 4B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _199 = *pix1_23;
  stmt_b: _224 = MEM[(uint8_t *)pix1_23 + 5B];
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, pretmp_584}_6)
  (chrec_b = {5B, +, pretmp_584}_6)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _199 = *pix1_23;
  stmt_b: _226 = MEM[(uint8_t *)pix2_24 + 5B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _199 = *pix1_23;
  stmt_b: _229 = MEM[(uint8_t *)pix1_23 + 6B];
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, pretmp_584}_6)
  (chrec_b = {6B, +, pretmp_584}_6)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _199 = *pix1_23;
  stmt_b: _231 = MEM[(uint8_t *)pix2_24 + 6B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _199 = *pix1_23;
  stmt_b: _234 = MEM[(uint8_t *)pix1_23 + 7B];
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, pretmp_584}_6)
  (chrec_b = {7B, +, pretmp_584}_6)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _199 = *pix1_23;
  stmt_b: _236 = MEM[(uint8_t *)pix2_24 + 7B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _199 = *pix1_23;
  stmt_b: diff[i_22][0] = _258;
) -> no dependence
(compute_affine_dependence
  stmt_a: _199 = *pix1_23;
  stmt_b: diff[i_22][4] = _261;
) -> no dependence
(compute_affine_dependence
  stmt_a: _199 = *pix1_23;
  stmt_b: diff[i_22][1] = _266;
) -> no dependence
(compute_affine_dependence
  stmt_a: _199 = *pix1_23;
  stmt_b: diff[i_22][5] = _269;
) -> no dependence
(compute_affine_dependence
  stmt_a: _199 = *pix1_23;
  stmt_b: diff[i_22][2] = _274;
) -> no dependence
(compute_affine_dependence
  stmt_a: _199 = *pix1_23;
  stmt_b: diff[i_22][6] = _277;
) -> no dependence
(compute_affine_dependence
  stmt_a: _199 = *pix1_23;
  stmt_b: diff[i_22][3] = _282;
) -> no dependence
(compute_affine_dependence
  stmt_a: _199 = *pix1_23;
  stmt_b: diff[i_22][7] = _285;
) -> no dependence
(compute_affine_dependence
  stmt_a: _201 = *pix2_24;
  stmt_b: _204 = MEM[(uint8_t *)pix1_23 + 1B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _201 = *pix2_24;
  stmt_b: _206 = MEM[(uint8_t *)pix2_24 + 1B];
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, pretmp_585}_6)
  (chrec_b = {1B, +, pretmp_585}_6)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _201 = *pix2_24;
  stmt_b: _209 = MEM[(uint8_t *)pix1_23 + 2B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _201 = *pix2_24;
  stmt_b: _211 = MEM[(uint8_t *)pix2_24 + 2B];
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, pretmp_585}_6)
  (chrec_b = {2B, +, pretmp_585}_6)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _201 = *pix2_24;
  stmt_b: _214 = MEM[(uint8_t *)pix1_23 + 3B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _201 = *pix2_24;
  stmt_b: _216 = MEM[(uint8_t *)pix2_24 + 3B];
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, pretmp_585}_6)
  (chrec_b = {3B, +, pretmp_585}_6)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _201 = *pix2_24;
  stmt_b: _219 = MEM[(uint8_t *)pix1_23 + 4B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _201 = *pix2_24;
  stmt_b: _221 = MEM[(uint8_t *)pix2_24 + 4B];
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, pretmp_585}_6)
  (chrec_b = {4B, +, pretmp_585}_6)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _201 = *pix2_24;
  stmt_b: _224 = MEM[(uint8_t *)pix1_23 + 5B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _201 = *pix2_24;
  stmt_b: _226 = MEM[(uint8_t *)pix2_24 + 5B];
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, pretmp_585}_6)
  (chrec_b = {5B, +, pretmp_585}_6)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _201 = *pix2_24;
  stmt_b: _229 = MEM[(uint8_t *)pix1_23 + 6B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _201 = *pix2_24;
  stmt_b: _231 = MEM[(uint8_t *)pix2_24 + 6B];
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, pretmp_585}_6)
  (chrec_b = {6B, +, pretmp_585}_6)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _201 = *pix2_24;
  stmt_b: _234 = MEM[(uint8_t *)pix1_23 + 7B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _201 = *pix2_24;
  stmt_b: _236 = MEM[(uint8_t *)pix2_24 + 7B];
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, pretmp_585}_6)
  (chrec_b = {7B, +, pretmp_585}_6)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _201 = *pix2_24;
  stmt_b: diff[i_22][0] = _258;
) -> no dependence
(compute_affine_dependence
  stmt_a: _201 = *pix2_24;
  stmt_b: diff[i_22][4] = _261;
) -> no dependence
(compute_affine_dependence
  stmt_a: _201 = *pix2_24;
  stmt_b: diff[i_22][1] = _266;
) -> no dependence
(compute_affine_dependence
  stmt_a: _201 = *pix2_24;
  stmt_b: diff[i_22][5] = _269;
) -> no dependence
(compute_affine_dependence
  stmt_a: _201 = *pix2_24;
  stmt_b: diff[i_22][2] = _274;
) -> no dependence
(compute_affine_dependence
  stmt_a: _201 = *pix2_24;
  stmt_b: diff[i_22][6] = _277;
) -> no dependence
(compute_affine_dependence
  stmt_a: _201 = *pix2_24;
  stmt_b: diff[i_22][3] = _282;
) -> no dependence
(compute_affine_dependence
  stmt_a: _201 = *pix2_24;
  stmt_b: diff[i_22][7] = _285;
) -> no dependence
(compute_affine_dependence
  stmt_a: _204 = MEM[(uint8_t *)pix1_23 + 1B];
  stmt_b: _206 = MEM[(uint8_t *)pix2_24 + 1B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _204 = MEM[(uint8_t *)pix1_23 + 1B];
  stmt_b: _209 = MEM[(uint8_t *)pix1_23 + 2B];
(analyze_overlapping_iterations 
  (chrec_a = {1B, +, pretmp_584}_6)
  (chrec_b = {2B, +, pretmp_584}_6)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _204 = MEM[(uint8_t *)pix1_23 + 1B];
  stmt_b: _211 = MEM[(uint8_t *)pix2_24 + 2B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _204 = MEM[(uint8_t *)pix1_23 + 1B];
  stmt_b: _214 = MEM[(uint8_t *)pix1_23 + 3B];
(analyze_overlapping_iterations 
  (chrec_a = {1B, +, pretmp_584}_6)
  (chrec_b = {3B, +, pretmp_584}_6)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _204 = MEM[(uint8_t *)pix1_23 + 1B];
  stmt_b: _216 = MEM[(uint8_t *)pix2_24 + 3B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _204 = MEM[(uint8_t *)pix1_23 + 1B];
  stmt_b: _219 = MEM[(uint8_t *)pix1_23 + 4B];
(analyze_overlapping_iterations 
  (chrec_a = {1B, +, pretmp_584}_6)
  (chrec_b = {4B, +, pretmp_584}_6)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _204 = MEM[(uint8_t *)pix1_23 + 1B];
  stmt_b: _221 = MEM[(uint8_t *)pix2_24 + 4B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _204 = MEM[(uint8_t *)pix1_23 + 1B];
  stmt_b: _224 = MEM[(uint8_t *)pix1_23 + 5B];
(analyze_overlapping_iterations 
  (chrec_a = {1B, +, pretmp_584}_6)
  (chrec_b = {5B, +, pretmp_584}_6)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _204 = MEM[(uint8_t *)pix1_23 + 1B];
  stmt_b: _226 = MEM[(uint8_t *)pix2_24 + 5B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _204 = MEM[(uint8_t *)pix1_23 + 1B];
  stmt_b: _229 = MEM[(uint8_t *)pix1_23 + 6B];
(analyze_overlapping_iterations 
  (chrec_a = {1B, +, pretmp_584}_6)
  (chrec_b = {6B, +, pretmp_584}_6)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _204 = MEM[(uint8_t *)pix1_23 + 1B];
  stmt_b: _231 = MEM[(uint8_t *)pix2_24 + 6B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _204 = MEM[(uint8_t *)pix1_23 + 1B];
  stmt_b: _234 = MEM[(uint8_t *)pix1_23 + 7B];
(analyze_overlapping_iterations 
  (chrec_a = {1B, +, pretmp_584}_6)
  (chrec_b = {7B, +, pretmp_584}_6)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _204 = MEM[(uint8_t *)pix1_23 + 1B];
  stmt_b: _236 = MEM[(uint8_t *)pix2_24 + 7B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _204 = MEM[(uint8_t *)pix1_23 + 1B];
  stmt_b: diff[i_22][0] = _258;
) -> no dependence
(compute_affine_dependence
  stmt_a: _204 = MEM[(uint8_t *)pix1_23 + 1B];
  stmt_b: diff[i_22][4] = _261;
) -> no dependence
(compute_affine_dependence
  stmt_a: _204 = MEM[(uint8_t *)pix1_23 + 1B];
  stmt_b: diff[i_22][1] = _266;
) -> no dependence
(compute_affine_dependence
  stmt_a: _204 = MEM[(uint8_t *)pix1_23 + 1B];
  stmt_b: diff[i_22][5] = _269;
) -> no dependence
(compute_affine_dependence
  stmt_a: _204 = MEM[(uint8_t *)pix1_23 + 1B];
  stmt_b: diff[i_22][2] = _274;
) -> no dependence
(compute_affine_dependence
  stmt_a: _204 = MEM[(uint8_t *)pix1_23 + 1B];
  stmt_b: diff[i_22][6] = _277;
) -> no dependence
(compute_affine_dependence
  stmt_a: _204 = MEM[(uint8_t *)pix1_23 + 1B];
  stmt_b: diff[i_22][3] = _282;
) -> no dependence
(compute_affine_dependence
  stmt_a: _204 = MEM[(uint8_t *)pix1_23 + 1B];
  stmt_b: diff[i_22][7] = _285;
) -> no dependence
(compute_affine_dependence
  stmt_a: _206 = MEM[(uint8_t *)pix2_24 + 1B];
  stmt_b: _209 = MEM[(uint8_t *)pix1_23 + 2B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _206 = MEM[(uint8_t *)pix2_24 + 1B];
  stmt_b: _211 = MEM[(uint8_t *)pix2_24 + 2B];
(analyze_overlapping_iterations 
  (chrec_a = {1B, +, pretmp_585}_6)
  (chrec_b = {2B, +, pretmp_585}_6)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _206 = MEM[(uint8_t *)pix2_24 + 1B];
  stmt_b: _214 = MEM[(uint8_t *)pix1_23 + 3B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _206 = MEM[(uint8_t *)pix2_24 + 1B];
  stmt_b: _216 = MEM[(uint8_t *)pix2_24 + 3B];
(analyze_overlapping_iterations 
  (chrec_a = {1B, +, pretmp_585}_6)
  (chrec_b = {3B, +, pretmp_585}_6)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _206 = MEM[(uint8_t *)pix2_24 + 1B];
  stmt_b: _219 = MEM[(uint8_t *)pix1_23 + 4B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _206 = MEM[(uint8_t *)pix2_24 + 1B];
  stmt_b: _221 = MEM[(uint8_t *)pix2_24 + 4B];
(analyze_overlapping_iterations 
  (chrec_a = {1B, +, pretmp_585}_6)
  (chrec_b = {4B, +, pretmp_585}_6)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _206 = MEM[(uint8_t *)pix2_24 + 1B];
  stmt_b: _224 = MEM[(uint8_t *)pix1_23 + 5B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _206 = MEM[(uint8_t *)pix2_24 + 1B];
  stmt_b: _226 = MEM[(uint8_t *)pix2_24 + 5B];
(analyze_overlapping_iterations 
  (chrec_a = {1B, +, pretmp_585}_6)
  (chrec_b = {5B, +, pretmp_585}_6)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _206 = MEM[(uint8_t *)pix2_24 + 1B];
  stmt_b: _229 = MEM[(uint8_t *)pix1_23 + 6B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _206 = MEM[(uint8_t *)pix2_24 + 1B];
  stmt_b: _231 = MEM[(uint8_t *)pix2_24 + 6B];
(analyze_overlapping_iterations 
  (chrec_a = {1B, +, pretmp_585}_6)
  (chrec_b = {6B, +, pretmp_585}_6)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _206 = MEM[(uint8_t *)pix2_24 + 1B];
  stmt_b: _234 = MEM[(uint8_t *)pix1_23 + 7B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _206 = MEM[(uint8_t *)pix2_24 + 1B];
  stmt_b: _236 = MEM[(uint8_t *)pix2_24 + 7B];
(analyze_overlapping_iterations 
  (chrec_a = {1B, +, pretmp_585}_6)
  (chrec_b = {7B, +, pretmp_585}_6)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _206 = MEM[(uint8_t *)pix2_24 + 1B];
  stmt_b: diff[i_22][0] = _258;
) -> no dependence
(compute_affine_dependence
  stmt_a: _206 = MEM[(uint8_t *)pix2_24 + 1B];
  stmt_b: diff[i_22][4] = _261;
) -> no dependence
(compute_affine_dependence
  stmt_a: _206 = MEM[(uint8_t *)pix2_24 + 1B];
  stmt_b: diff[i_22][1] = _266;
) -> no dependence
(compute_affine_dependence
  stmt_a: _206 = MEM[(uint8_t *)pix2_24 + 1B];
  stmt_b: diff[i_22][5] = _269;
) -> no dependence
(compute_affine_dependence
  stmt_a: _206 = MEM[(uint8_t *)pix2_24 + 1B];
  stmt_b: diff[i_22][2] = _274;
) -> no dependence
(compute_affine_dependence
  stmt_a: _206 = MEM[(uint8_t *)pix2_24 + 1B];
  stmt_b: diff[i_22][6] = _277;
) -> no dependence
(compute_affine_dependence
  stmt_a: _206 = MEM[(uint8_t *)pix2_24 + 1B];
  stmt_b: diff[i_22][3] = _282;
) -> no dependence
(compute_affine_dependence
  stmt_a: _206 = MEM[(uint8_t *)pix2_24 + 1B];
  stmt_b: diff[i_22][7] = _285;
) -> no dependence
(compute_affine_dependence
  stmt_a: _209 = MEM[(uint8_t *)pix1_23 + 2B];
  stmt_b: _211 = MEM[(uint8_t *)pix2_24 + 2B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _209 = MEM[(uint8_t *)pix1_23 + 2B];
  stmt_b: _214 = MEM[(uint8_t *)pix1_23 + 3B];
(analyze_overlapping_iterations 
  (chrec_a = {2B, +, pretmp_584}_6)
  (chrec_b = {3B, +, pretmp_584}_6)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _209 = MEM[(uint8_t *)pix1_23 + 2B];
  stmt_b: _216 = MEM[(uint8_t *)pix2_24 + 3B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _209 = MEM[(uint8_t *)pix1_23 + 2B];
  stmt_b: _219 = MEM[(uint8_t *)pix1_23 + 4B];
(analyze_overlapping_iterations 
  (chrec_a = {2B, +, pretmp_584}_6)
  (chrec_b = {4B, +, pretmp_584}_6)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _209 = MEM[(uint8_t *)pix1_23 + 2B];
  stmt_b: _221 = MEM[(uint8_t *)pix2_24 + 4B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _209 = MEM[(uint8_t *)pix1_23 + 2B];
  stmt_b: _224 = MEM[(uint8_t *)pix1_23 + 5B];
(analyze_overlapping_iterations 
  (chrec_a = {2B, +, pretmp_584}_6)
  (chrec_b = {5B, +, pretmp_584}_6)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _209 = MEM[(uint8_t *)pix1_23 + 2B];
  stmt_b: _226 = MEM[(uint8_t *)pix2_24 + 5B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _209 = MEM[(uint8_t *)pix1_23 + 2B];
  stmt_b: _229 = MEM[(uint8_t *)pix1_23 + 6B];
(analyze_overlapping_iterations 
  (chrec_a = {2B, +, pretmp_584}_6)
  (chrec_b = {6B, +, pretmp_584}_6)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _209 = MEM[(uint8_t *)pix1_23 + 2B];
  stmt_b: _231 = MEM[(uint8_t *)pix2_24 + 6B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _209 = MEM[(uint8_t *)pix1_23 + 2B];
  stmt_b: _234 = MEM[(uint8_t *)pix1_23 + 7B];
(analyze_overlapping_iterations 
  (chrec_a = {2B, +, pretmp_584}_6)
  (chrec_b = {7B, +, pretmp_584}_6)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _209 = MEM[(uint8_t *)pix1_23 + 2B];
  stmt_b: _236 = MEM[(uint8_t *)pix2_24 + 7B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _209 = MEM[(uint8_t *)pix1_23 + 2B];
  stmt_b: diff[i_22][0] = _258;
) -> no dependence
(compute_affine_dependence
  stmt_a: _209 = MEM[(uint8_t *)pix1_23 + 2B];
  stmt_b: diff[i_22][4] = _261;
) -> no dependence
(compute_affine_dependence
  stmt_a: _209 = MEM[(uint8_t *)pix1_23 + 2B];
  stmt_b: diff[i_22][1] = _266;
) -> no dependence
(compute_affine_dependence
  stmt_a: _209 = MEM[(uint8_t *)pix1_23 + 2B];
  stmt_b: diff[i_22][5] = _269;
) -> no dependence
(compute_affine_dependence
  stmt_a: _209 = MEM[(uint8_t *)pix1_23 + 2B];
  stmt_b: diff[i_22][2] = _274;
) -> no dependence
(compute_affine_dependence
  stmt_a: _209 = MEM[(uint8_t *)pix1_23 + 2B];
  stmt_b: diff[i_22][6] = _277;
) -> no dependence
(compute_affine_dependence
  stmt_a: _209 = MEM[(uint8_t *)pix1_23 + 2B];
  stmt_b: diff[i_22][3] = _282;
) -> no dependence
(compute_affine_dependence
  stmt_a: _209 = MEM[(uint8_t *)pix1_23 + 2B];
  stmt_b: diff[i_22][7] = _285;
) -> no dependence
(compute_affine_dependence
  stmt_a: _211 = MEM[(uint8_t *)pix2_24 + 2B];
  stmt_b: _214 = MEM[(uint8_t *)pix1_23 + 3B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _211 = MEM[(uint8_t *)pix2_24 + 2B];
  stmt_b: _216 = MEM[(uint8_t *)pix2_24 + 3B];
(analyze_overlapping_iterations 
  (chrec_a = {2B, +, pretmp_585}_6)
  (chrec_b = {3B, +, pretmp_585}_6)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _211 = MEM[(uint8_t *)pix2_24 + 2B];
  stmt_b: _219 = MEM[(uint8_t *)pix1_23 + 4B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _211 = MEM[(uint8_t *)pix2_24 + 2B];
  stmt_b: _221 = MEM[(uint8_t *)pix2_24 + 4B];
(analyze_overlapping_iterations 
  (chrec_a = {2B, +, pretmp_585}_6)
  (chrec_b = {4B, +, pretmp_585}_6)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _211 = MEM[(uint8_t *)pix2_24 + 2B];
  stmt_b: _224 = MEM[(uint8_t *)pix1_23 + 5B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _211 = MEM[(uint8_t *)pix2_24 + 2B];
  stmt_b: _226 = MEM[(uint8_t *)pix2_24 + 5B];
(analyze_overlapping_iterations 
  (chrec_a = {2B, +, pretmp_585}_6)
  (chrec_b = {5B, +, pretmp_585}_6)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _211 = MEM[(uint8_t *)pix2_24 + 2B];
  stmt_b: _229 = MEM[(uint8_t *)pix1_23 + 6B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _211 = MEM[(uint8_t *)pix2_24 + 2B];
  stmt_b: _231 = MEM[(uint8_t *)pix2_24 + 6B];
(analyze_overlapping_iterations 
  (chrec_a = {2B, +, pretmp_585}_6)
  (chrec_b = {6B, +, pretmp_585}_6)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _211 = MEM[(uint8_t *)pix2_24 + 2B];
  stmt_b: _234 = MEM[(uint8_t *)pix1_23 + 7B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _211 = MEM[(uint8_t *)pix2_24 + 2B];
  stmt_b: _236 = MEM[(uint8_t *)pix2_24 + 7B];
(analyze_overlapping_iterations 
  (chrec_a = {2B, +, pretmp_585}_6)
  (chrec_b = {7B, +, pretmp_585}_6)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _211 = MEM[(uint8_t *)pix2_24 + 2B];
  stmt_b: diff[i_22][0] = _258;
) -> no dependence
(compute_affine_dependence
  stmt_a: _211 = MEM[(uint8_t *)pix2_24 + 2B];
  stmt_b: diff[i_22][4] = _261;
) -> no dependence
(compute_affine_dependence
  stmt_a: _211 = MEM[(uint8_t *)pix2_24 + 2B];
  stmt_b: diff[i_22][1] = _266;
) -> no dependence
(compute_affine_dependence
  stmt_a: _211 = MEM[(uint8_t *)pix2_24 + 2B];
  stmt_b: diff[i_22][5] = _269;
) -> no dependence
(compute_affine_dependence
  stmt_a: _211 = MEM[(uint8_t *)pix2_24 + 2B];
  stmt_b: diff[i_22][2] = _274;
) -> no dependence
(compute_affine_dependence
  stmt_a: _211 = MEM[(uint8_t *)pix2_24 + 2B];
  stmt_b: diff[i_22][6] = _277;
) -> no dependence
(compute_affine_dependence
  stmt_a: _211 = MEM[(uint8_t *)pix2_24 + 2B];
  stmt_b: diff[i_22][3] = _282;
) -> no dependence
(compute_affine_dependence
  stmt_a: _211 = MEM[(uint8_t *)pix2_24 + 2B];
  stmt_b: diff[i_22][7] = _285;
) -> no dependence
(compute_affine_dependence
  stmt_a: _214 = MEM[(uint8_t *)pix1_23 + 3B];
  stmt_b: _216 = MEM[(uint8_t *)pix2_24 + 3B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _214 = MEM[(uint8_t *)pix1_23 + 3B];
  stmt_b: _219 = MEM[(uint8_t *)pix1_23 + 4B];
(analyze_overlapping_iterations 
  (chrec_a = {3B, +, pretmp_584}_6)
  (chrec_b = {4B, +, pretmp_584}_6)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _214 = MEM[(uint8_t *)pix1_23 + 3B];
  stmt_b: _221 = MEM[(uint8_t *)pix2_24 + 4B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _214 = MEM[(uint8_t *)pix1_23 + 3B];
  stmt_b: _224 = MEM[(uint8_t *)pix1_23 + 5B];
(analyze_overlapping_iterations 
  (chrec_a = {3B, +, pretmp_584}_6)
  (chrec_b = {5B, +, pretmp_584}_6)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _214 = MEM[(uint8_t *)pix1_23 + 3B];
  stmt_b: _226 = MEM[(uint8_t *)pix2_24 + 5B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _214 = MEM[(uint8_t *)pix1_23 + 3B];
  stmt_b: _229 = MEM[(uint8_t *)pix1_23 + 6B];
(analyze_overlapping_iterations 
  (chrec_a = {3B, +, pretmp_584}_6)
  (chrec_b = {6B, +, pretmp_584}_6)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _214 = MEM[(uint8_t *)pix1_23 + 3B];
  stmt_b: _231 = MEM[(uint8_t *)pix2_24 + 6B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _214 = MEM[(uint8_t *)pix1_23 + 3B];
  stmt_b: _234 = MEM[(uint8_t *)pix1_23 + 7B];
(analyze_overlapping_iterations 
  (chrec_a = {3B, +, pretmp_584}_6)
  (chrec_b = {7B, +, pretmp_584}_6)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _214 = MEM[(uint8_t *)pix1_23 + 3B];
  stmt_b: _236 = MEM[(uint8_t *)pix2_24 + 7B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _214 = MEM[(uint8_t *)pix1_23 + 3B];
  stmt_b: diff[i_22][0] = _258;
) -> no dependence
(compute_affine_dependence
  stmt_a: _214 = MEM[(uint8_t *)pix1_23 + 3B];
  stmt_b: diff[i_22][4] = _261;
) -> no dependence
(compute_affine_dependence
  stmt_a: _214 = MEM[(uint8_t *)pix1_23 + 3B];
  stmt_b: diff[i_22][1] = _266;
) -> no dependence
(compute_affine_dependence
  stmt_a: _214 = MEM[(uint8_t *)pix1_23 + 3B];
  stmt_b: diff[i_22][5] = _269;
) -> no dependence
(compute_affine_dependence
  stmt_a: _214 = MEM[(uint8_t *)pix1_23 + 3B];
  stmt_b: diff[i_22][2] = _274;
) -> no dependence
(compute_affine_dependence
  stmt_a: _214 = MEM[(uint8_t *)pix1_23 + 3B];
  stmt_b: diff[i_22][6] = _277;
) -> no dependence
(compute_affine_dependence
  stmt_a: _214 = MEM[(uint8_t *)pix1_23 + 3B];
  stmt_b: diff[i_22][3] = _282;
) -> no dependence
(compute_affine_dependence
  stmt_a: _214 = MEM[(uint8_t *)pix1_23 + 3B];
  stmt_b: diff[i_22][7] = _285;
) -> no dependence
(compute_affine_dependence
  stmt_a: _216 = MEM[(uint8_t *)pix2_24 + 3B];
  stmt_b: _219 = MEM[(uint8_t *)pix1_23 + 4B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _216 = MEM[(uint8_t *)pix2_24 + 3B];
  stmt_b: _221 = MEM[(uint8_t *)pix2_24 + 4B];
(analyze_overlapping_iterations 
  (chrec_a = {3B, +, pretmp_585}_6)
  (chrec_b = {4B, +, pretmp_585}_6)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _216 = MEM[(uint8_t *)pix2_24 + 3B];
  stmt_b: _224 = MEM[(uint8_t *)pix1_23 + 5B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _216 = MEM[(uint8_t *)pix2_24 + 3B];
  stmt_b: _226 = MEM[(uint8_t *)pix2_24 + 5B];
(analyze_overlapping_iterations 
  (chrec_a = {3B, +, pretmp_585}_6)
  (chrec_b = {5B, +, pretmp_585}_6)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _216 = MEM[(uint8_t *)pix2_24 + 3B];
  stmt_b: _229 = MEM[(uint8_t *)pix1_23 + 6B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _216 = MEM[(uint8_t *)pix2_24 + 3B];
  stmt_b: _231 = MEM[(uint8_t *)pix2_24 + 6B];
(analyze_overlapping_iterations 
  (chrec_a = {3B, +, pretmp_585}_6)
  (chrec_b = {6B, +, pretmp_585}_6)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _216 = MEM[(uint8_t *)pix2_24 + 3B];
  stmt_b: _234 = MEM[(uint8_t *)pix1_23 + 7B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _216 = MEM[(uint8_t *)pix2_24 + 3B];
  stmt_b: _236 = MEM[(uint8_t *)pix2_24 + 7B];
(analyze_overlapping_iterations 
  (chrec_a = {3B, +, pretmp_585}_6)
  (chrec_b = {7B, +, pretmp_585}_6)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _216 = MEM[(uint8_t *)pix2_24 + 3B];
  stmt_b: diff[i_22][0] = _258;
) -> no dependence
(compute_affine_dependence
  stmt_a: _216 = MEM[(uint8_t *)pix2_24 + 3B];
  stmt_b: diff[i_22][4] = _261;
) -> no dependence
(compute_affine_dependence
  stmt_a: _216 = MEM[(uint8_t *)pix2_24 + 3B];
  stmt_b: diff[i_22][1] = _266;
) -> no dependence
(compute_affine_dependence
  stmt_a: _216 = MEM[(uint8_t *)pix2_24 + 3B];
  stmt_b: diff[i_22][5] = _269;
) -> no dependence
(compute_affine_dependence
  stmt_a: _216 = MEM[(uint8_t *)pix2_24 + 3B];
  stmt_b: diff[i_22][2] = _274;
) -> no dependence
(compute_affine_dependence
  stmt_a: _216 = MEM[(uint8_t *)pix2_24 + 3B];
  stmt_b: diff[i_22][6] = _277;
) -> no dependence
(compute_affine_dependence
  stmt_a: _216 = MEM[(uint8_t *)pix2_24 + 3B];
  stmt_b: diff[i_22][3] = _282;
) -> no dependence
(compute_affine_dependence
  stmt_a: _216 = MEM[(uint8_t *)pix2_24 + 3B];
  stmt_b: diff[i_22][7] = _285;
) -> no dependence
(compute_affine_dependence
  stmt_a: _219 = MEM[(uint8_t *)pix1_23 + 4B];
  stmt_b: _221 = MEM[(uint8_t *)pix2_24 + 4B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _219 = MEM[(uint8_t *)pix1_23 + 4B];
  stmt_b: _224 = MEM[(uint8_t *)pix1_23 + 5B];
(analyze_overlapping_iterations 
  (chrec_a = {4B, +, pretmp_584}_6)
  (chrec_b = {5B, +, pretmp_584}_6)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _219 = MEM[(uint8_t *)pix1_23 + 4B];
  stmt_b: _226 = MEM[(uint8_t *)pix2_24 + 5B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _219 = MEM[(uint8_t *)pix1_23 + 4B];
  stmt_b: _229 = MEM[(uint8_t *)pix1_23 + 6B];
(analyze_overlapping_iterations 
  (chrec_a = {4B, +, pretmp_584}_6)
  (chrec_b = {6B, +, pretmp_584}_6)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _219 = MEM[(uint8_t *)pix1_23 + 4B];
  stmt_b: _231 = MEM[(uint8_t *)pix2_24 + 6B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _219 = MEM[(uint8_t *)pix1_23 + 4B];
  stmt_b: _234 = MEM[(uint8_t *)pix1_23 + 7B];
(analyze_overlapping_iterations 
  (chrec_a = {4B, +, pretmp_584}_6)
  (chrec_b = {7B, +, pretmp_584}_6)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _219 = MEM[(uint8_t *)pix1_23 + 4B];
  stmt_b: _236 = MEM[(uint8_t *)pix2_24 + 7B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _219 = MEM[(uint8_t *)pix1_23 + 4B];
  stmt_b: diff[i_22][0] = _258;
) -> no dependence
(compute_affine_dependence
  stmt_a: _219 = MEM[(uint8_t *)pix1_23 + 4B];
  stmt_b: diff[i_22][4] = _261;
) -> no dependence
(compute_affine_dependence
  stmt_a: _219 = MEM[(uint8_t *)pix1_23 + 4B];
  stmt_b: diff[i_22][1] = _266;
) -> no dependence
(compute_affine_dependence
  stmt_a: _219 = MEM[(uint8_t *)pix1_23 + 4B];
  stmt_b: diff[i_22][5] = _269;
) -> no dependence
(compute_affine_dependence
  stmt_a: _219 = MEM[(uint8_t *)pix1_23 + 4B];
  stmt_b: diff[i_22][2] = _274;
) -> no dependence
(compute_affine_dependence
  stmt_a: _219 = MEM[(uint8_t *)pix1_23 + 4B];
  stmt_b: diff[i_22][6] = _277;
) -> no dependence
(compute_affine_dependence
  stmt_a: _219 = MEM[(uint8_t *)pix1_23 + 4B];
  stmt_b: diff[i_22][3] = _282;
) -> no dependence
(compute_affine_dependence
  stmt_a: _219 = MEM[(uint8_t *)pix1_23 + 4B];
  stmt_b: diff[i_22][7] = _285;
) -> no dependence
(compute_affine_dependence
  stmt_a: _221 = MEM[(uint8_t *)pix2_24 + 4B];
  stmt_b: _224 = MEM[(uint8_t *)pix1_23 + 5B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _221 = MEM[(uint8_t *)pix2_24 + 4B];
  stmt_b: _226 = MEM[(uint8_t *)pix2_24 + 5B];
(analyze_overlapping_iterations 
  (chrec_a = {4B, +, pretmp_585}_6)
  (chrec_b = {5B, +, pretmp_585}_6)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _221 = MEM[(uint8_t *)pix2_24 + 4B];
  stmt_b: _229 = MEM[(uint8_t *)pix1_23 + 6B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _221 = MEM[(uint8_t *)pix2_24 + 4B];
  stmt_b: _231 = MEM[(uint8_t *)pix2_24 + 6B];
(analyze_overlapping_iterations 
  (chrec_a = {4B, +, pretmp_585}_6)
  (chrec_b = {6B, +, pretmp_585}_6)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _221 = MEM[(uint8_t *)pix2_24 + 4B];
  stmt_b: _234 = MEM[(uint8_t *)pix1_23 + 7B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _221 = MEM[(uint8_t *)pix2_24 + 4B];
  stmt_b: _236 = MEM[(uint8_t *)pix2_24 + 7B];
(analyze_overlapping_iterations 
  (chrec_a = {4B, +, pretmp_585}_6)
  (chrec_b = {7B, +, pretmp_585}_6)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _221 = MEM[(uint8_t *)pix2_24 + 4B];
  stmt_b: diff[i_22][0] = _258;
) -> no dependence
(compute_affine_dependence
  stmt_a: _221 = MEM[(uint8_t *)pix2_24 + 4B];
  stmt_b: diff[i_22][4] = _261;
) -> no dependence
(compute_affine_dependence
  stmt_a: _221 = MEM[(uint8_t *)pix2_24 + 4B];
  stmt_b: diff[i_22][1] = _266;
) -> no dependence
(compute_affine_dependence
  stmt_a: _221 = MEM[(uint8_t *)pix2_24 + 4B];
  stmt_b: diff[i_22][5] = _269;
) -> no dependence
(compute_affine_dependence
  stmt_a: _221 = MEM[(uint8_t *)pix2_24 + 4B];
  stmt_b: diff[i_22][2] = _274;
) -> no dependence
(compute_affine_dependence
  stmt_a: _221 = MEM[(uint8_t *)pix2_24 + 4B];
  stmt_b: diff[i_22][6] = _277;
) -> no dependence
(compute_affine_dependence
  stmt_a: _221 = MEM[(uint8_t *)pix2_24 + 4B];
  stmt_b: diff[i_22][3] = _282;
) -> no dependence
(compute_affine_dependence
  stmt_a: _221 = MEM[(uint8_t *)pix2_24 + 4B];
  stmt_b: diff[i_22][7] = _285;
) -> no dependence
(compute_affine_dependence
  stmt_a: _224 = MEM[(uint8_t *)pix1_23 + 5B];
  stmt_b: _226 = MEM[(uint8_t *)pix2_24 + 5B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _224 = MEM[(uint8_t *)pix1_23 + 5B];
  stmt_b: _229 = MEM[(uint8_t *)pix1_23 + 6B];
(analyze_overlapping_iterations 
  (chrec_a = {5B, +, pretmp_584}_6)
  (chrec_b = {6B, +, pretmp_584}_6)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _224 = MEM[(uint8_t *)pix1_23 + 5B];
  stmt_b: _231 = MEM[(uint8_t *)pix2_24 + 6B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _224 = MEM[(uint8_t *)pix1_23 + 5B];
  stmt_b: _234 = MEM[(uint8_t *)pix1_23 + 7B];
(analyze_overlapping_iterations 
  (chrec_a = {5B, +, pretmp_584}_6)
  (chrec_b = {7B, +, pretmp_584}_6)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _224 = MEM[(uint8_t *)pix1_23 + 5B];
  stmt_b: _236 = MEM[(uint8_t *)pix2_24 + 7B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _224 = MEM[(uint8_t *)pix1_23 + 5B];
  stmt_b: diff[i_22][0] = _258;
) -> no dependence
(compute_affine_dependence
  stmt_a: _224 = MEM[(uint8_t *)pix1_23 + 5B];
  stmt_b: diff[i_22][4] = _261;
) -> no dependence
(compute_affine_dependence
  stmt_a: _224 = MEM[(uint8_t *)pix1_23 + 5B];
  stmt_b: diff[i_22][1] = _266;
) -> no dependence
(compute_affine_dependence
  stmt_a: _224 = MEM[(uint8_t *)pix1_23 + 5B];
  stmt_b: diff[i_22][5] = _269;
) -> no dependence
(compute_affine_dependence
  stmt_a: _224 = MEM[(uint8_t *)pix1_23 + 5B];
  stmt_b: diff[i_22][2] = _274;
) -> no dependence
(compute_affine_dependence
  stmt_a: _224 = MEM[(uint8_t *)pix1_23 + 5B];
  stmt_b: diff[i_22][6] = _277;
) -> no dependence
(compute_affine_dependence
  stmt_a: _224 = MEM[(uint8_t *)pix1_23 + 5B];
  stmt_b: diff[i_22][3] = _282;
) -> no dependence
(compute_affine_dependence
  stmt_a: _224 = MEM[(uint8_t *)pix1_23 + 5B];
  stmt_b: diff[i_22][7] = _285;
) -> no dependence
(compute_affine_dependence
  stmt_a: _226 = MEM[(uint8_t *)pix2_24 + 5B];
  stmt_b: _229 = MEM[(uint8_t *)pix1_23 + 6B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _226 = MEM[(uint8_t *)pix2_24 + 5B];
  stmt_b: _231 = MEM[(uint8_t *)pix2_24 + 6B];
(analyze_overlapping_iterations 
  (chrec_a = {5B, +, pretmp_585}_6)
  (chrec_b = {6B, +, pretmp_585}_6)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _226 = MEM[(uint8_t *)pix2_24 + 5B];
  stmt_b: _234 = MEM[(uint8_t *)pix1_23 + 7B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _226 = MEM[(uint8_t *)pix2_24 + 5B];
  stmt_b: _236 = MEM[(uint8_t *)pix2_24 + 7B];
(analyze_overlapping_iterations 
  (chrec_a = {5B, +, pretmp_585}_6)
  (chrec_b = {7B, +, pretmp_585}_6)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _226 = MEM[(uint8_t *)pix2_24 + 5B];
  stmt_b: diff[i_22][0] = _258;
) -> no dependence
(compute_affine_dependence
  stmt_a: _226 = MEM[(uint8_t *)pix2_24 + 5B];
  stmt_b: diff[i_22][4] = _261;
) -> no dependence
(compute_affine_dependence
  stmt_a: _226 = MEM[(uint8_t *)pix2_24 + 5B];
  stmt_b: diff[i_22][1] = _266;
) -> no dependence
(compute_affine_dependence
  stmt_a: _226 = MEM[(uint8_t *)pix2_24 + 5B];
  stmt_b: diff[i_22][5] = _269;
) -> no dependence
(compute_affine_dependence
  stmt_a: _226 = MEM[(uint8_t *)pix2_24 + 5B];
  stmt_b: diff[i_22][2] = _274;
) -> no dependence
(compute_affine_dependence
  stmt_a: _226 = MEM[(uint8_t *)pix2_24 + 5B];
  stmt_b: diff[i_22][6] = _277;
) -> no dependence
(compute_affine_dependence
  stmt_a: _226 = MEM[(uint8_t *)pix2_24 + 5B];
  stmt_b: diff[i_22][3] = _282;
) -> no dependence
(compute_affine_dependence
  stmt_a: _226 = MEM[(uint8_t *)pix2_24 + 5B];
  stmt_b: diff[i_22][7] = _285;
) -> no dependence
(compute_affine_dependence
  stmt_a: _229 = MEM[(uint8_t *)pix1_23 + 6B];
  stmt_b: _231 = MEM[(uint8_t *)pix2_24 + 6B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _229 = MEM[(uint8_t *)pix1_23 + 6B];
  stmt_b: _234 = MEM[(uint8_t *)pix1_23 + 7B];
(analyze_overlapping_iterations 
  (chrec_a = {6B, +, pretmp_584}_6)
  (chrec_b = {7B, +, pretmp_584}_6)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _229 = MEM[(uint8_t *)pix1_23 + 6B];
  stmt_b: _236 = MEM[(uint8_t *)pix2_24 + 7B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _229 = MEM[(uint8_t *)pix1_23 + 6B];
  stmt_b: diff[i_22][0] = _258;
) -> no dependence
(compute_affine_dependence
  stmt_a: _229 = MEM[(uint8_t *)pix1_23 + 6B];
  stmt_b: diff[i_22][4] = _261;
) -> no dependence
(compute_affine_dependence
  stmt_a: _229 = MEM[(uint8_t *)pix1_23 + 6B];
  stmt_b: diff[i_22][1] = _266;
) -> no dependence
(compute_affine_dependence
  stmt_a: _229 = MEM[(uint8_t *)pix1_23 + 6B];
  stmt_b: diff[i_22][5] = _269;
) -> no dependence
(compute_affine_dependence
  stmt_a: _229 = MEM[(uint8_t *)pix1_23 + 6B];
  stmt_b: diff[i_22][2] = _274;
) -> no dependence
(compute_affine_dependence
  stmt_a: _229 = MEM[(uint8_t *)pix1_23 + 6B];
  stmt_b: diff[i_22][6] = _277;
) -> no dependence
(compute_affine_dependence
  stmt_a: _229 = MEM[(uint8_t *)pix1_23 + 6B];
  stmt_b: diff[i_22][3] = _282;
) -> no dependence
(compute_affine_dependence
  stmt_a: _229 = MEM[(uint8_t *)pix1_23 + 6B];
  stmt_b: diff[i_22][7] = _285;
) -> no dependence
(compute_affine_dependence
  stmt_a: _231 = MEM[(uint8_t *)pix2_24 + 6B];
  stmt_b: _234 = MEM[(uint8_t *)pix1_23 + 7B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _231 = MEM[(uint8_t *)pix2_24 + 6B];
  stmt_b: _236 = MEM[(uint8_t *)pix2_24 + 7B];
(analyze_overlapping_iterations 
  (chrec_a = {6B, +, pretmp_585}_6)
  (chrec_b = {7B, +, pretmp_585}_6)
(analyze_siv_subscript 
  siv test failed: unimplemented)
  (overlap_iterations_a = not known)
  (overlap_iterations_b = not known))
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _231 = MEM[(uint8_t *)pix2_24 + 6B];
  stmt_b: diff[i_22][0] = _258;
) -> no dependence
(compute_affine_dependence
  stmt_a: _231 = MEM[(uint8_t *)pix2_24 + 6B];
  stmt_b: diff[i_22][4] = _261;
) -> no dependence
(compute_affine_dependence
  stmt_a: _231 = MEM[(uint8_t *)pix2_24 + 6B];
  stmt_b: diff[i_22][1] = _266;
) -> no dependence
(compute_affine_dependence
  stmt_a: _231 = MEM[(uint8_t *)pix2_24 + 6B];
  stmt_b: diff[i_22][5] = _269;
) -> no dependence
(compute_affine_dependence
  stmt_a: _231 = MEM[(uint8_t *)pix2_24 + 6B];
  stmt_b: diff[i_22][2] = _274;
) -> no dependence
(compute_affine_dependence
  stmt_a: _231 = MEM[(uint8_t *)pix2_24 + 6B];
  stmt_b: diff[i_22][6] = _277;
) -> no dependence
(compute_affine_dependence
  stmt_a: _231 = MEM[(uint8_t *)pix2_24 + 6B];
  stmt_b: diff[i_22][3] = _282;
) -> no dependence
(compute_affine_dependence
  stmt_a: _231 = MEM[(uint8_t *)pix2_24 + 6B];
  stmt_b: diff[i_22][7] = _285;
) -> no dependence
(compute_affine_dependence
  stmt_a: _234 = MEM[(uint8_t *)pix1_23 + 7B];
  stmt_b: _236 = MEM[(uint8_t *)pix2_24 + 7B];
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _234 = MEM[(uint8_t *)pix1_23 + 7B];
  stmt_b: diff[i_22][0] = _258;
) -> no dependence
(compute_affine_dependence
  stmt_a: _234 = MEM[(uint8_t *)pix1_23 + 7B];
  stmt_b: diff[i_22][4] = _261;
) -> no dependence
(compute_affine_dependence
  stmt_a: _234 = MEM[(uint8_t *)pix1_23 + 7B];
  stmt_b: diff[i_22][1] = _266;
) -> no dependence
(compute_affine_dependence
  stmt_a: _234 = MEM[(uint8_t *)pix1_23 + 7B];
  stmt_b: diff[i_22][5] = _269;
) -> no dependence
(compute_affine_dependence
  stmt_a: _234 = MEM[(uint8_t *)pix1_23 + 7B];
  stmt_b: diff[i_22][2] = _274;
) -> no dependence
(compute_affine_dependence
  stmt_a: _234 = MEM[(uint8_t *)pix1_23 + 7B];
  stmt_b: diff[i_22][6] = _277;
) -> no dependence
(compute_affine_dependence
  stmt_a: _234 = MEM[(uint8_t *)pix1_23 + 7B];
  stmt_b: diff[i_22][3] = _282;
) -> no dependence
(compute_affine_dependence
  stmt_a: _234 = MEM[(uint8_t *)pix1_23 + 7B];
  stmt_b: diff[i_22][7] = _285;
) -> no dependence
(compute_affine_dependence
  stmt_a: _236 = MEM[(uint8_t *)pix2_24 + 7B];
  stmt_b: diff[i_22][0] = _258;
) -> no dependence
(compute_affine_dependence
  stmt_a: _236 = MEM[(uint8_t *)pix2_24 + 7B];
  stmt_b: diff[i_22][4] = _261;
) -> no dependence
(compute_affine_dependence
  stmt_a: _236 = MEM[(uint8_t *)pix2_24 + 7B];
  stmt_b: diff[i_22][1] = _266;
) -> no dependence
(compute_affine_dependence
  stmt_a: _236 = MEM[(uint8_t *)pix2_24 + 7B];
  stmt_b: diff[i_22][5] = _269;
) -> no dependence
(compute_affine_dependence
  stmt_a: _236 = MEM[(uint8_t *)pix2_24 + 7B];
  stmt_b: diff[i_22][2] = _274;
) -> no dependence
(compute_affine_dependence
  stmt_a: _236 = MEM[(uint8_t *)pix2_24 + 7B];
  stmt_b: diff[i_22][6] = _277;
) -> no dependence
(compute_affine_dependence
  stmt_a: _236 = MEM[(uint8_t *)pix2_24 + 7B];
  stmt_b: diff[i_22][3] = _282;
) -> no dependence
(compute_affine_dependence
  stmt_a: _236 = MEM[(uint8_t *)pix2_24 + 7B];
  stmt_b: diff[i_22][7] = _285;
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_22][0] = _258;
  stmt_b: diff[i_22][4] = _261;
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 4)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_22][0] = _258;
  stmt_b: diff[i_22][1] = _266;
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 1)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_22][0] = _258;
  stmt_b: diff[i_22][5] = _269;
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 5)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_22][0] = _258;
  stmt_b: diff[i_22][2] = _274;
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_22][0] = _258;
  stmt_b: diff[i_22][6] = _277;
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 6)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_22][0] = _258;
  stmt_b: diff[i_22][3] = _282;
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_22][0] = _258;
  stmt_b: diff[i_22][7] = _285;
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_22][4] = _261;
  stmt_b: diff[i_22][1] = _266;
(analyze_overlapping_iterations 
  (chrec_a = 4)
  (chrec_b = 1)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_22][4] = _261;
  stmt_b: diff[i_22][5] = _269;
(analyze_overlapping_iterations 
  (chrec_a = 4)
  (chrec_b = 5)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_22][4] = _261;
  stmt_b: diff[i_22][2] = _274;
(analyze_overlapping_iterations 
  (chrec_a = 4)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_22][4] = _261;
  stmt_b: diff[i_22][6] = _277;
(analyze_overlapping_iterations 
  (chrec_a = 4)
  (chrec_b = 6)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_22][4] = _261;
  stmt_b: diff[i_22][3] = _282;
(analyze_overlapping_iterations 
  (chrec_a = 4)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_22][4] = _261;
  stmt_b: diff[i_22][7] = _285;
(analyze_overlapping_iterations 
  (chrec_a = 4)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_22][1] = _266;
  stmt_b: diff[i_22][5] = _269;
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 5)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_22][1] = _266;
  stmt_b: diff[i_22][2] = _274;
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_22][1] = _266;
  stmt_b: diff[i_22][6] = _277;
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 6)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_22][1] = _266;
  stmt_b: diff[i_22][3] = _282;
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_22][1] = _266;
  stmt_b: diff[i_22][7] = _285;
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_22][5] = _269;
  stmt_b: diff[i_22][2] = _274;
(analyze_overlapping_iterations 
  (chrec_a = 5)
  (chrec_b = 2)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_22][5] = _269;
  stmt_b: diff[i_22][6] = _277;
(analyze_overlapping_iterations 
  (chrec_a = 5)
  (chrec_b = 6)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_22][5] = _269;
  stmt_b: diff[i_22][3] = _282;
(analyze_overlapping_iterations 
  (chrec_a = 5)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_22][5] = _269;
  stmt_b: diff[i_22][7] = _285;
(analyze_overlapping_iterations 
  (chrec_a = 5)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_22][2] = _274;
  stmt_b: diff[i_22][6] = _277;
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 6)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_22][2] = _274;
  stmt_b: diff[i_22][3] = _282;
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_22][2] = _274;
  stmt_b: diff[i_22][7] = _285;
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_22][6] = _277;
  stmt_b: diff[i_22][3] = _282;
(analyze_overlapping_iterations 
  (chrec_a = 6)
  (chrec_b = 3)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_22][6] = _277;
  stmt_b: diff[i_22][7] = _285;
(analyze_overlapping_iterations 
  (chrec_a = 6)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: diff[i_22][3] = _282;
  stmt_b: diff[i_22][7] = _285;
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 7)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _199 = *pix1_23;
  stmt_b: _199 = *pix1_23;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, pretmp_584}_6)
  (chrec_b = {0B, +, pretmp_584}_6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _201 = *pix2_24;
  stmt_b: _201 = *pix2_24;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, pretmp_585}_6)
  (chrec_b = {0B, +, pretmp_585}_6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _204 = MEM[(uint8_t *)pix1_23 + 1B];
  stmt_b: _204 = MEM[(uint8_t *)pix1_23 + 1B];
(analyze_overlapping_iterations 
  (chrec_a = {1B, +, pretmp_584}_6)
  (chrec_b = {1B, +, pretmp_584}_6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _206 = MEM[(uint8_t *)pix2_24 + 1B];
  stmt_b: _206 = MEM[(uint8_t *)pix2_24 + 1B];
(analyze_overlapping_iterations 
  (chrec_a = {1B, +, pretmp_585}_6)
  (chrec_b = {1B, +, pretmp_585}_6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _209 = MEM[(uint8_t *)pix1_23 + 2B];
  stmt_b: _209 = MEM[(uint8_t *)pix1_23 + 2B];
(analyze_overlapping_iterations 
  (chrec_a = {2B, +, pretmp_584}_6)
  (chrec_b = {2B, +, pretmp_584}_6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _211 = MEM[(uint8_t *)pix2_24 + 2B];
  stmt_b: _211 = MEM[(uint8_t *)pix2_24 + 2B];
(analyze_overlapping_iterations 
  (chrec_a = {2B, +, pretmp_585}_6)
  (chrec_b = {2B, +, pretmp_585}_6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _214 = MEM[(uint8_t *)pix1_23 + 3B];
  stmt_b: _214 = MEM[(uint8_t *)pix1_23 + 3B];
(analyze_overlapping_iterations 
  (chrec_a = {3B, +, pretmp_584}_6)
  (chrec_b = {3B, +, pretmp_584}_6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _216 = MEM[(uint8_t *)pix2_24 + 3B];
  stmt_b: _216 = MEM[(uint8_t *)pix2_24 + 3B];
(analyze_overlapping_iterations 
  (chrec_a = {3B, +, pretmp_585}_6)
  (chrec_b = {3B, +, pretmp_585}_6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _219 = MEM[(uint8_t *)pix1_23 + 4B];
  stmt_b: _219 = MEM[(uint8_t *)pix1_23 + 4B];
(analyze_overlapping_iterations 
  (chrec_a = {4B, +, pretmp_584}_6)
  (chrec_b = {4B, +, pretmp_584}_6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _221 = MEM[(uint8_t *)pix2_24 + 4B];
  stmt_b: _221 = MEM[(uint8_t *)pix2_24 + 4B];
(analyze_overlapping_iterations 
  (chrec_a = {4B, +, pretmp_585}_6)
  (chrec_b = {4B, +, pretmp_585}_6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _224 = MEM[(uint8_t *)pix1_23 + 5B];
  stmt_b: _224 = MEM[(uint8_t *)pix1_23 + 5B];
(analyze_overlapping_iterations 
  (chrec_a = {5B, +, pretmp_584}_6)
  (chrec_b = {5B, +, pretmp_584}_6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _226 = MEM[(uint8_t *)pix2_24 + 5B];
  stmt_b: _226 = MEM[(uint8_t *)pix2_24 + 5B];
(analyze_overlapping_iterations 
  (chrec_a = {5B, +, pretmp_585}_6)
  (chrec_b = {5B, +, pretmp_585}_6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _229 = MEM[(uint8_t *)pix1_23 + 6B];
  stmt_b: _229 = MEM[(uint8_t *)pix1_23 + 6B];
(analyze_overlapping_iterations 
  (chrec_a = {6B, +, pretmp_584}_6)
  (chrec_b = {6B, +, pretmp_584}_6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _231 = MEM[(uint8_t *)pix2_24 + 6B];
  stmt_b: _231 = MEM[(uint8_t *)pix2_24 + 6B];
(analyze_overlapping_iterations 
  (chrec_a = {6B, +, pretmp_585}_6)
  (chrec_b = {6B, +, pretmp_585}_6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _234 = MEM[(uint8_t *)pix1_23 + 7B];
  stmt_b: _234 = MEM[(uint8_t *)pix1_23 + 7B];
(analyze_overlapping_iterations 
  (chrec_a = {7B, +, pretmp_584}_6)
  (chrec_b = {7B, +, pretmp_584}_6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _236 = MEM[(uint8_t *)pix2_24 + 7B];
  stmt_b: _236 = MEM[(uint8_t *)pix2_24 + 7B];
(analyze_overlapping_iterations 
  (chrec_a = {7B, +, pretmp_585}_6)
  (chrec_b = {7B, +, pretmp_585}_6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: diff[i_22][0] = _258;
  stmt_b: diff[i_22][0] = _258;
(analyze_overlapping_iterations 
  (chrec_a = 0)
  (chrec_b = 0)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_6)
  (chrec_b = {0, +, 1}_6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: diff[i_22][4] = _261;
  stmt_b: diff[i_22][4] = _261;
(analyze_overlapping_iterations 
  (chrec_a = 4)
  (chrec_b = 4)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_6)
  (chrec_b = {0, +, 1}_6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: diff[i_22][1] = _266;
  stmt_b: diff[i_22][1] = _266;
(analyze_overlapping_iterations 
  (chrec_a = 1)
  (chrec_b = 1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_6)
  (chrec_b = {0, +, 1}_6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: diff[i_22][5] = _269;
  stmt_b: diff[i_22][5] = _269;
(analyze_overlapping_iterations 
  (chrec_a = 5)
  (chrec_b = 5)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_6)
  (chrec_b = {0, +, 1}_6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: diff[i_22][2] = _274;
  stmt_b: diff[i_22][2] = _274;
(analyze_overlapping_iterations 
  (chrec_a = 2)
  (chrec_b = 2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_6)
  (chrec_b = {0, +, 1}_6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: diff[i_22][6] = _277;
  stmt_b: diff[i_22][6] = _277;
(analyze_overlapping_iterations 
  (chrec_a = 6)
  (chrec_b = 6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_6)
  (chrec_b = {0, +, 1}_6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: diff[i_22][3] = _282;
  stmt_b: diff[i_22][3] = _282;
(analyze_overlapping_iterations 
  (chrec_a = 3)
  (chrec_b = 3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_6)
  (chrec_b = {0, +, 1}_6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: diff[i_22][7] = _285;
  stmt_b: diff[i_22][7] = _285;
(analyze_overlapping_iterations 
  (chrec_a = 7)
  (chrec_b = 7)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_6)
  (chrec_b = {0, +, 1}_6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/pixel.c:262:13: note: === vect_determine_vectorization_factor ===
common/pixel.c:262:13: note: ==> examining phi: i_22 = PHI <i_287(7), 0(5)>

common/pixel.c:262:13: note: ==> examining phi: pix1_23 = PHI <pix1_289(7), pix1_173(5)>

common/pixel.c:262:13: note: ==> examining phi: pix2_24 = PHI <pix2_291(7), pix2_292(5)>

common/pixel.c:262:13: note: ==> examining phi: .MEM_25 = PHI <.MEM_286(7), .MEM_21(5)>

common/pixel.c:262:13: note: ==> examining phi: ivtmp_574 = PHI <ivtmp_573(7), 8(5)>

common/pixel.c:262:13: note: ==> examining statement: # DEBUG p2 => pix2_24

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: # DEBUG p1 => pix1_23

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: # DEBUG i => i_22

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: _199 = *pix1_23;

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: _200 = (int) _199;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: _201 = *pix2_24;

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: _202 = (int) _201;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: a0_203 = _200 - _202;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: nunits = 4
common/pixel.c:262:13: note: ==> examining statement: # DEBUG a0 => a0_203

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: _204 = MEM[(uint8_t *)pix1_23 + 1B];

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: _205 = (int) _204;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: _206 = MEM[(uint8_t *)pix2_24 + 1B];

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: _207 = (int) _206;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: a1_208 = _205 - _207;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: nunits = 4
common/pixel.c:262:13: note: ==> examining statement: # DEBUG a1 => a1_208

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: _209 = MEM[(uint8_t *)pix1_23 + 2B];

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: _210 = (int) _209;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: _211 = MEM[(uint8_t *)pix2_24 + 2B];

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: _212 = (int) _211;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: a2_213 = _210 - _212;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: nunits = 4
common/pixel.c:262:13: note: ==> examining statement: # DEBUG a2 => a2_213

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: _214 = MEM[(uint8_t *)pix1_23 + 3B];

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: _215 = (int) _214;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: _216 = MEM[(uint8_t *)pix2_24 + 3B];

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: _217 = (int) _216;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: a3_218 = _215 - _217;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: nunits = 4
common/pixel.c:262:13: note: ==> examining statement: # DEBUG a3 => a3_218

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: _219 = MEM[(uint8_t *)pix1_23 + 4B];

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: _220 = (int) _219;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: _221 = MEM[(uint8_t *)pix2_24 + 4B];

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: _222 = (int) _221;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: a4_223 = _220 - _222;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: nunits = 4
common/pixel.c:262:13: note: ==> examining statement: # DEBUG a4 => a4_223

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: _224 = MEM[(uint8_t *)pix1_23 + 5B];

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: _225 = (int) _224;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: _226 = MEM[(uint8_t *)pix2_24 + 5B];

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: _227 = (int) _226;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: a5_228 = _225 - _227;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: nunits = 4
common/pixel.c:262:13: note: ==> examining statement: # DEBUG a5 => a5_228

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: _229 = MEM[(uint8_t *)pix1_23 + 6B];

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: _230 = (int) _229;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: _231 = MEM[(uint8_t *)pix2_24 + 6B];

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: _232 = (int) _231;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: a6_233 = _230 - _232;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: nunits = 4
common/pixel.c:262:13: note: ==> examining statement: # DEBUG a6 => a6_233

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: _234 = MEM[(uint8_t *)pix1_23 + 7B];

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: _235 = (int) _234;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: _236 = MEM[(uint8_t *)pix2_24 + 7B];

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: _237 = (int) _236;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:262:13: note: vectype: vector(16) unsigned char
common/pixel.c:262:13: note: nunits = 16
common/pixel.c:262:13: note: ==> examining statement: a7_238 = _235 - _237;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: nunits = 4
common/pixel.c:262:13: note: ==> examining statement: # DEBUG a7 => a7_238

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: t0_239 = a0_203 + a1_208;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: nunits = 4
common/pixel.c:262:13: note: ==> examining statement: # DEBUG t0 => t0_239

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: t1_240 = a0_203 - a1_208;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: nunits = 4
common/pixel.c:262:13: note: ==> examining statement: # DEBUG t1 => t1_240

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: t2_241 = a2_213 + a3_218;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: nunits = 4
common/pixel.c:262:13: note: ==> examining statement: # DEBUG t2 => t2_241

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: t3_242 = a2_213 - a3_218;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: nunits = 4
common/pixel.c:262:13: note: ==> examining statement: # DEBUG t3 => t3_242

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: b0_243 = t0_239 + t2_241;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: nunits = 4
common/pixel.c:262:13: note: ==> examining statement: # DEBUG b0 => b0_243

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: b2_244 = t0_239 - t2_241;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: nunits = 4
common/pixel.c:262:13: note: ==> examining statement: # DEBUG b2 => b2_244

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: b1_245 = t1_240 + t3_242;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: nunits = 4
common/pixel.c:262:13: note: ==> examining statement: # DEBUG b1 => b1_245

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: b3_246 = t1_240 - t3_242;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: nunits = 4
common/pixel.c:262:13: note: ==> examining statement: # DEBUG b3 => b3_246

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: t0_247 = a4_223 + a5_228;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: nunits = 4
common/pixel.c:262:13: note: ==> examining statement: # DEBUG t0 => t0_247

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: t1_248 = a4_223 - a5_228;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: nunits = 4
common/pixel.c:262:13: note: ==> examining statement: # DEBUG t1 => t1_248

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: t2_249 = a6_233 + a7_238;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: nunits = 4
common/pixel.c:262:13: note: ==> examining statement: # DEBUG t2 => t2_249

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: t3_250 = a6_233 - a7_238;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: nunits = 4
common/pixel.c:262:13: note: ==> examining statement: # DEBUG t3 => t3_250

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: b4_251 = t0_247 + t2_249;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: nunits = 4
common/pixel.c:262:13: note: ==> examining statement: # DEBUG b4 => b4_251

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: b6_252 = t0_247 - t2_249;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: nunits = 4
common/pixel.c:262:13: note: ==> examining statement: # DEBUG b6 => b6_252

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: b5_253 = t1_248 + t3_250;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: nunits = 4
common/pixel.c:262:13: note: ==> examining statement: # DEBUG b5 => b5_253

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: b7_254 = t1_248 - t3_250;

common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: get vectype for scalar type:  int
common/pixel.c:262:13: note: vectype: vector(4) int
common/pixel.c:262:13: note: nunits = 4
common/pixel.c:262:13: note: ==> examining statement: # DEBUG b7 => b7_254

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: _255 = (unsigned short) b0_243;

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: _256 = (unsigned short) b4_251;

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: _257 = _255 + _256;

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: _258 = (short int) _257;

common/pixel.c:262:13: note: get vectype for scalar type:  short int
common/pixel.c:262:13: note: vectype: vector(8) short int
common/pixel.c:262:13: note: get vectype for scalar type:  short int
common/pixel.c:262:13: note: vectype: vector(8) short int
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: diff[i_22][0] = _258;

common/pixel.c:262:13: note: get vectype for scalar type:  int16_t
common/pixel.c:262:13: note: vectype: vector(8) short int
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: _260 = _255 - _256;

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: _261 = (short int) _260;

common/pixel.c:262:13: note: get vectype for scalar type:  short int
common/pixel.c:262:13: note: vectype: vector(8) short int
common/pixel.c:262:13: note: get vectype for scalar type:  short int
common/pixel.c:262:13: note: vectype: vector(8) short int
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: diff[i_22][4] = _261;

common/pixel.c:262:13: note: get vectype for scalar type:  int16_t
common/pixel.c:262:13: note: vectype: vector(8) short int
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: _263 = (unsigned short) b1_245;

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: _264 = (unsigned short) b5_253;

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: _265 = _263 + _264;

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: _266 = (short int) _265;

common/pixel.c:262:13: note: get vectype for scalar type:  short int
common/pixel.c:262:13: note: vectype: vector(8) short int
common/pixel.c:262:13: note: get vectype for scalar type:  short int
common/pixel.c:262:13: note: vectype: vector(8) short int
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: diff[i_22][1] = _266;

common/pixel.c:262:13: note: get vectype for scalar type:  int16_t
common/pixel.c:262:13: note: vectype: vector(8) short int
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: _268 = _263 - _264;

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: _269 = (short int) _268;

common/pixel.c:262:13: note: get vectype for scalar type:  short int
common/pixel.c:262:13: note: vectype: vector(8) short int
common/pixel.c:262:13: note: get vectype for scalar type:  short int
common/pixel.c:262:13: note: vectype: vector(8) short int
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: diff[i_22][5] = _269;

common/pixel.c:262:13: note: get vectype for scalar type:  int16_t
common/pixel.c:262:13: note: vectype: vector(8) short int
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: _271 = (unsigned short) b2_244;

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: _272 = (unsigned short) b6_252;

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: _273 = _271 + _272;

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: _274 = (short int) _273;

common/pixel.c:262:13: note: get vectype for scalar type:  short int
common/pixel.c:262:13: note: vectype: vector(8) short int
common/pixel.c:262:13: note: get vectype for scalar type:  short int
common/pixel.c:262:13: note: vectype: vector(8) short int
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: diff[i_22][2] = _274;

common/pixel.c:262:13: note: get vectype for scalar type:  int16_t
common/pixel.c:262:13: note: vectype: vector(8) short int
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: _276 = _271 - _272;

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: _277 = (short int) _276;

common/pixel.c:262:13: note: get vectype for scalar type:  short int
common/pixel.c:262:13: note: vectype: vector(8) short int
common/pixel.c:262:13: note: get vectype for scalar type:  short int
common/pixel.c:262:13: note: vectype: vector(8) short int
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: diff[i_22][6] = _277;

common/pixel.c:262:13: note: get vectype for scalar type:  int16_t
common/pixel.c:262:13: note: vectype: vector(8) short int
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: _279 = (unsigned short) b3_246;

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: _280 = (unsigned short) b7_254;

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: _281 = _279 + _280;

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: _282 = (short int) _281;

common/pixel.c:262:13: note: get vectype for scalar type:  short int
common/pixel.c:262:13: note: vectype: vector(8) short int
common/pixel.c:262:13: note: get vectype for scalar type:  short int
common/pixel.c:262:13: note: vectype: vector(8) short int
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: diff[i_22][3] = _282;

common/pixel.c:262:13: note: get vectype for scalar type:  int16_t
common/pixel.c:262:13: note: vectype: vector(8) short int
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: _284 = _279 - _280;

common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: get vectype for scalar type:  unsigned short
common/pixel.c:262:13: note: vectype: vector(8) unsigned short
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: _285 = (short int) _284;

common/pixel.c:262:13: note: get vectype for scalar type:  short int
common/pixel.c:262:13: note: vectype: vector(8) short int
common/pixel.c:262:13: note: get vectype for scalar type:  short int
common/pixel.c:262:13: note: vectype: vector(8) short int
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: diff[i_22][7] = _285;

common/pixel.c:262:13: note: get vectype for scalar type:  int16_t
common/pixel.c:262:13: note: vectype: vector(8) short int
common/pixel.c:262:13: note: nunits = 8
common/pixel.c:262:13: note: ==> examining statement: i_287 = i_22 + 1;

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: # DEBUG i => i_287

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: pix1_289 = pix1_23 + pretmp_584;

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: # DEBUG p1 => pix1_289

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: pix2_291 = pix2_24 + pretmp_585;

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: # DEBUG p2 => pix2_291

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: # DEBUG p2 => pix2_291

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: # DEBUG p1 => pix1_289

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: # DEBUG i => i_287

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: ivtmp_573 = ivtmp_574 - 1;

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: ==> examining statement: if (ivtmp_573 != 0)

common/pixel.c:262:13: note: skip.
common/pixel.c:262:13: note: vectorization factor = 16
common/pixel.c:262:13: note: === vect_analyze_data_refs_alignment ===
common/pixel.c:262:13: note: vect_compute_data_ref_alignment:
common/pixel.c:262:13: note: vect_compute_data_ref_alignment:
common/pixel.c:262:13: note: vect_compute_data_ref_alignment:
common/pixel.c:262:13: note: vect_compute_data_ref_alignment:
common/pixel.c:262:13: note: vect_compute_data_ref_alignment:
common/pixel.c:262:13: note: vect_compute_data_ref_alignment:
common/pixel.c:262:13: note: vect_compute_data_ref_alignment:
common/pixel.c:262:13: note: vect_compute_data_ref_alignment:
common/pixel.c:262:13: note: vect_compute_data_ref_alignment:
common/pixel.c:262:13: note: vect_compute_data_ref_alignment:
common/pixel.c:262:13: note: vect_compute_data_ref_alignment:
common/pixel.c:262:13: note: vect_compute_data_ref_alignment:
common/pixel.c:262:13: note: vect_compute_data_ref_alignment:
common/pixel.c:262:13: note: vect_compute_data_ref_alignment:
common/pixel.c:262:13: note: vect_compute_data_ref_alignment:
common/pixel.c:262:13: note: vect_compute_data_ref_alignment:
common/pixel.c:262:13: note: vect_compute_data_ref_alignment:
common/pixel.c:262:13: note: misalign = 0 bytes of ref diff[i_22][0]
common/pixel.c:262:13: note: vect_compute_data_ref_alignment:
common/pixel.c:262:13: note: misalign = 8 bytes of ref diff[i_22][4]
common/pixel.c:262:13: note: vect_compute_data_ref_alignment:
common/pixel.c:262:13: note: misalign = 2 bytes of ref diff[i_22][1]
common/pixel.c:262:13: note: vect_compute_data_ref_alignment:
common/pixel.c:262:13: note: misalign = 10 bytes of ref diff[i_22][5]
common/pixel.c:262:13: note: vect_compute_data_ref_alignment:
common/pixel.c:262:13: note: misalign = 4 bytes of ref diff[i_22][2]
common/pixel.c:262:13: note: vect_compute_data_ref_alignment:
common/pixel.c:262:13: note: misalign = 12 bytes of ref diff[i_22][6]
common/pixel.c:262:13: note: vect_compute_data_ref_alignment:
common/pixel.c:262:13: note: misalign = 6 bytes of ref diff[i_22][3]
common/pixel.c:262:13: note: vect_compute_data_ref_alignment:
common/pixel.c:262:13: note: misalign = 14 bytes of ref diff[i_22][7]
common/pixel.c:262:13: note: === vect_prune_runtime_alias_test_list ===
common/pixel.c:262:13: note: === vect_enhance_data_refs_alignment ===
common/pixel.c:262:13: note: vect_can_advance_ivs_p:
common/pixel.c:262:13: note: Analyze phi: i_22 = PHI <i_287(7), 0(5)>

common/pixel.c:262:13: note: Analyze phi: pix1_23 = PHI <pix1_289(7), pix1_173(5)>

common/pixel.c:262:13: note: Analyze phi: pix2_24 = PHI <pix2_291(7), pix2_292(5)>

common/pixel.c:262:13: note: Analyze phi: .MEM_25 = PHI <.MEM_286(7), .MEM_21(5)>

common/pixel.c:262:13: note: virtual phi. skip.
common/pixel.c:262:13: note: Analyze phi: ivtmp_574 = PHI <ivtmp_573(7), 8(5)>

common/pixel.c:262:13: note: Setting misalignment to -1.
common/pixel.c:262:13: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:262:13: note: vect_get_data_access_cost: inside_cost = 2, outside_cost = 0.
common/pixel.c:262:13: note: Setting misalignment to -1.
common/pixel.c:262:13: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:262:13: note: vect_get_data_access_cost: inside_cost = 4, outside_cost = 0.
common/pixel.c:262:13: note: Setting misalignment to -1.
common/pixel.c:262:13: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:262:13: note: vect_get_data_access_cost: inside_cost = 6, outside_cost = 0.
common/pixel.c:262:13: note: Setting misalignment to -1.
common/pixel.c:262:13: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:262:13: note: vect_get_data_access_cost: inside_cost = 8, outside_cost = 0.
common/pixel.c:262:13: note: Setting misalignment to -1.
common/pixel.c:262:13: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:262:13: note: vect_get_data_access_cost: inside_cost = 10, outside_cost = 0.
common/pixel.c:262:13: note: Setting misalignment to -1.
common/pixel.c:262:13: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:262:13: note: vect_get_data_access_cost: inside_cost = 12, outside_cost = 0.
common/pixel.c:262:13: note: Setting misalignment to -1.
common/pixel.c:262:13: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:262:13: note: vect_get_data_access_cost: inside_cost = 14, outside_cost = 0.
common/pixel.c:262:13: note: Setting misalignment to -1.
common/pixel.c:262:13: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:262:13: note: vect_get_data_access_cost: inside_cost = 16, outside_cost = 0.
common/pixel.c:262:13: note: Setting misalignment to -1.
common/pixel.c:262:13: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:262:13: note: vect_get_data_access_cost: inside_cost = 18, outside_cost = 0.
common/pixel.c:262:13: note: Setting misalignment to -1.
common/pixel.c:262:13: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:262:13: note: vect_get_data_access_cost: inside_cost = 20, outside_cost = 0.
common/pixel.c:262:13: note: Setting misalignment to -1.
common/pixel.c:262:13: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:262:13: note: vect_get_data_access_cost: inside_cost = 22, outside_cost = 0.
common/pixel.c:262:13: note: Setting misalignment to -1.
common/pixel.c:262:13: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:262:13: note: vect_get_data_access_cost: inside_cost = 24, outside_cost = 0.
common/pixel.c:262:13: note: Setting misalignment to -1.
common/pixel.c:262:13: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:262:13: note: vect_get_data_access_cost: inside_cost = 26, outside_cost = 0.
common/pixel.c:262:13: note: Setting misalignment to -1.
common/pixel.c:262:13: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:262:13: note: vect_get_data_access_cost: inside_cost = 28, outside_cost = 0.
common/pixel.c:262:13: note: Setting misalignment to -1.
common/pixel.c:262:13: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:262:13: note: vect_get_data_access_cost: inside_cost = 30, outside_cost = 0.
common/pixel.c:262:13: note: Setting misalignment to -1.
common/pixel.c:262:13: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:262:13: note: vect_get_data_access_cost: inside_cost = 32, outside_cost = 0.
common/pixel.c:262:13: note: vect_model_store_cost: aligned.
common/pixel.c:262:13: note: vect_get_data_access_cost: inside_cost = 34, outside_cost = 0.
common/pixel.c:262:13: note: === vect_analyze_slp ===
common/pixel.c:262:13: note: Build SLP for diff[i_22][0] = _258;

common/pixel.c:262:13: note: Build SLP for diff[i_22][1] = _266;

common/pixel.c:262:13: note: Build SLP for diff[i_22][2] = _274;

common/pixel.c:262:13: note: Build SLP for diff[i_22][3] = _282;

common/pixel.c:262:13: note: Build SLP for diff[i_22][4] = _261;

common/pixel.c:262:13: note: Build SLP for diff[i_22][5] = _269;

common/pixel.c:262:13: note: Build SLP for diff[i_22][6] = _277;

common/pixel.c:262:13: note: Build SLP for diff[i_22][7] = _285;

common/pixel.c:262:13: note: vect_is_simple_use: operand _258
common/pixel.c:262:13: note: def_stmt: _258 = (short int) _257;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _266
common/pixel.c:262:13: note: def_stmt: _266 = (short int) _265;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _274
common/pixel.c:262:13: note: def_stmt: _274 = (short int) _273;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _282
common/pixel.c:262:13: note: def_stmt: _282 = (short int) _281;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _261
common/pixel.c:262:13: note: def_stmt: _261 = (short int) _260;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _269
common/pixel.c:262:13: note: def_stmt: _269 = (short int) _268;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _277
common/pixel.c:262:13: note: def_stmt: _277 = (short int) _276;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _285
common/pixel.c:262:13: note: def_stmt: _285 = (short int) _284;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: Build SLP for _258 = (short int) _257;

common/pixel.c:262:13: note: Build SLP for _266 = (short int) _265;

common/pixel.c:262:13: note: Build SLP for _274 = (short int) _273;

common/pixel.c:262:13: note: Build SLP for _282 = (short int) _281;

common/pixel.c:262:13: note: Build SLP for _261 = (short int) _260;

common/pixel.c:262:13: note: Build SLP for _269 = (short int) _268;

common/pixel.c:262:13: note: Build SLP for _277 = (short int) _276;

common/pixel.c:262:13: note: Build SLP for _285 = (short int) _284;

common/pixel.c:262:13: note: vect_is_simple_use: operand _257
common/pixel.c:262:13: note: def_stmt: _257 = _255 + _256;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _265
common/pixel.c:262:13: note: def_stmt: _265 = _263 + _264;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _273
common/pixel.c:262:13: note: def_stmt: _273 = _271 + _272;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _281
common/pixel.c:262:13: note: def_stmt: _281 = _279 + _280;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _260
common/pixel.c:262:13: note: def_stmt: _260 = _255 - _256;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _268
common/pixel.c:262:13: note: def_stmt: _268 = _263 - _264;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _276
common/pixel.c:262:13: note: def_stmt: _276 = _271 - _272;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _284
common/pixel.c:262:13: note: def_stmt: _284 = _279 - _280;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: Build SLP for _257 = _255 + _256;

common/pixel.c:262:13: note: Build SLP for _265 = _263 + _264;

common/pixel.c:262:13: note: Build SLP for _273 = _271 + _272;

common/pixel.c:262:13: note: Build SLP for _281 = _279 + _280;

common/pixel.c:262:13: note: Build SLP for _260 = _255 - _256;

common/pixel.c:262:13: note: Build SLP failed: different operation in stmt _260 = _255 - _256;

common/pixel.c:262:13: note: Build SLP for _268 = _263 - _264;

common/pixel.c:262:13: note: Build SLP failed: different operation in stmt _268 = _263 - _264;

common/pixel.c:262:13: note: Build SLP for _276 = _271 - _272;

common/pixel.c:262:13: note: Build SLP failed: different operation in stmt _276 = _271 - _272;

common/pixel.c:262:13: note: Build SLP for _284 = _279 - _280;

common/pixel.c:262:13: note: Build SLP failed: different operation in stmt _284 = _279 - _280;

common/pixel.c:262:13: note: === vect_make_slp_decision ===
common/pixel.c:262:13: note: === vect_detect_hybrid_slp ===
common/pixel.c:262:13: note: === vect_analyze_loop_operations ===
common/pixel.c:262:13: note: examining phi: i_22 = PHI <i_287(7), 0(5)>

common/pixel.c:262:13: note: examining phi: pix1_23 = PHI <pix1_289(7), pix1_173(5)>

common/pixel.c:262:13: note: examining phi: pix2_24 = PHI <pix2_291(7), pix2_292(5)>

common/pixel.c:262:13: note: examining phi: .MEM_25 = PHI <.MEM_286(7), .MEM_21(5)>

common/pixel.c:262:13: note: examining phi: ivtmp_574 = PHI <ivtmp_573(7), 8(5)>

common/pixel.c:262:13: note: ==> examining statement: # DEBUG p2 => pix2_24
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: # DEBUG p1 => pix1_23
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: # DEBUG i => i_22
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: _199 = *pix1_23;
common/pixel.c:262:13: note: vect_is_simple_use: operand *pix1_23
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_is_simple_use: operand *pix1_23
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_model_load_cost: inside_cost = 25, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _200 = (int) _199;
common/pixel.c:262:13: note: vect_is_simple_use: operand _199
common/pixel.c:262:13: note: def_stmt: _199 = *pix1_23;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_conversion ===
common/pixel.c:262:13: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _201 = *pix2_24;
common/pixel.c:262:13: note: vect_is_simple_use: operand *pix2_24
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_is_simple_use: operand *pix2_24
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_model_load_cost: inside_cost = 25, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _202 = (int) _201;
common/pixel.c:262:13: note: vect_is_simple_use: operand _201
common/pixel.c:262:13: note: def_stmt: _201 = *pix2_24;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_conversion ===
common/pixel.c:262:13: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: a0_203 = _200 - _202;
common/pixel.c:262:13: note: vect_is_simple_use: operand _200
common/pixel.c:262:13: note: def_stmt: _200 = (int) _199;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _202
common/pixel.c:262:13: note: def_stmt: _202 = (int) _201;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: # DEBUG a0 => a0_203
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: _204 = MEM[(uint8_t *)pix1_23 + 1B];
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)pix1_23 + 1B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)pix1_23 + 1B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_model_load_cost: inside_cost = 25, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _205 = (int) _204;
common/pixel.c:262:13: note: vect_is_simple_use: operand _204
common/pixel.c:262:13: note: def_stmt: _204 = MEM[(uint8_t *)pix1_23 + 1B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_conversion ===
common/pixel.c:262:13: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _206 = MEM[(uint8_t *)pix2_24 + 1B];
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)pix2_24 + 1B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)pix2_24 + 1B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_model_load_cost: inside_cost = 25, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _207 = (int) _206;
common/pixel.c:262:13: note: vect_is_simple_use: operand _206
common/pixel.c:262:13: note: def_stmt: _206 = MEM[(uint8_t *)pix2_24 + 1B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_conversion ===
common/pixel.c:262:13: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: a1_208 = _205 - _207;
common/pixel.c:262:13: note: vect_is_simple_use: operand _205
common/pixel.c:262:13: note: def_stmt: _205 = (int) _204;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _207
common/pixel.c:262:13: note: def_stmt: _207 = (int) _206;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: # DEBUG a1 => a1_208
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: _209 = MEM[(uint8_t *)pix1_23 + 2B];
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)pix1_23 + 2B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)pix1_23 + 2B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_model_load_cost: inside_cost = 25, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _210 = (int) _209;
common/pixel.c:262:13: note: vect_is_simple_use: operand _209
common/pixel.c:262:13: note: def_stmt: _209 = MEM[(uint8_t *)pix1_23 + 2B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_conversion ===
common/pixel.c:262:13: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _211 = MEM[(uint8_t *)pix2_24 + 2B];
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)pix2_24 + 2B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)pix2_24 + 2B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_model_load_cost: inside_cost = 25, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _212 = (int) _211;
common/pixel.c:262:13: note: vect_is_simple_use: operand _211
common/pixel.c:262:13: note: def_stmt: _211 = MEM[(uint8_t *)pix2_24 + 2B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_conversion ===
common/pixel.c:262:13: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: a2_213 = _210 - _212;
common/pixel.c:262:13: note: vect_is_simple_use: operand _210
common/pixel.c:262:13: note: def_stmt: _210 = (int) _209;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _212
common/pixel.c:262:13: note: def_stmt: _212 = (int) _211;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: # DEBUG a2 => a2_213
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: _214 = MEM[(uint8_t *)pix1_23 + 3B];
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)pix1_23 + 3B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)pix1_23 + 3B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_model_load_cost: inside_cost = 25, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _215 = (int) _214;
common/pixel.c:262:13: note: vect_is_simple_use: operand _214
common/pixel.c:262:13: note: def_stmt: _214 = MEM[(uint8_t *)pix1_23 + 3B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_conversion ===
common/pixel.c:262:13: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _216 = MEM[(uint8_t *)pix2_24 + 3B];
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)pix2_24 + 3B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)pix2_24 + 3B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_model_load_cost: inside_cost = 25, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _217 = (int) _216;
common/pixel.c:262:13: note: vect_is_simple_use: operand _216
common/pixel.c:262:13: note: def_stmt: _216 = MEM[(uint8_t *)pix2_24 + 3B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_conversion ===
common/pixel.c:262:13: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: a3_218 = _215 - _217;
common/pixel.c:262:13: note: vect_is_simple_use: operand _215
common/pixel.c:262:13: note: def_stmt: _215 = (int) _214;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _217
common/pixel.c:262:13: note: def_stmt: _217 = (int) _216;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: # DEBUG a3 => a3_218
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: _219 = MEM[(uint8_t *)pix1_23 + 4B];
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)pix1_23 + 4B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)pix1_23 + 4B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_model_load_cost: inside_cost = 25, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _220 = (int) _219;
common/pixel.c:262:13: note: vect_is_simple_use: operand _219
common/pixel.c:262:13: note: def_stmt: _219 = MEM[(uint8_t *)pix1_23 + 4B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_conversion ===
common/pixel.c:262:13: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _221 = MEM[(uint8_t *)pix2_24 + 4B];
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)pix2_24 + 4B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)pix2_24 + 4B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_model_load_cost: inside_cost = 25, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _222 = (int) _221;
common/pixel.c:262:13: note: vect_is_simple_use: operand _221
common/pixel.c:262:13: note: def_stmt: _221 = MEM[(uint8_t *)pix2_24 + 4B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_conversion ===
common/pixel.c:262:13: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: a4_223 = _220 - _222;
common/pixel.c:262:13: note: vect_is_simple_use: operand _220
common/pixel.c:262:13: note: def_stmt: _220 = (int) _219;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _222
common/pixel.c:262:13: note: def_stmt: _222 = (int) _221;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: # DEBUG a4 => a4_223
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: _224 = MEM[(uint8_t *)pix1_23 + 5B];
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)pix1_23 + 5B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)pix1_23 + 5B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_model_load_cost: inside_cost = 25, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _225 = (int) _224;
common/pixel.c:262:13: note: vect_is_simple_use: operand _224
common/pixel.c:262:13: note: def_stmt: _224 = MEM[(uint8_t *)pix1_23 + 5B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_conversion ===
common/pixel.c:262:13: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _226 = MEM[(uint8_t *)pix2_24 + 5B];
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)pix2_24 + 5B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)pix2_24 + 5B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_model_load_cost: inside_cost = 25, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _227 = (int) _226;
common/pixel.c:262:13: note: vect_is_simple_use: operand _226
common/pixel.c:262:13: note: def_stmt: _226 = MEM[(uint8_t *)pix2_24 + 5B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_conversion ===
common/pixel.c:262:13: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: a5_228 = _225 - _227;
common/pixel.c:262:13: note: vect_is_simple_use: operand _225
common/pixel.c:262:13: note: def_stmt: _225 = (int) _224;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _227
common/pixel.c:262:13: note: def_stmt: _227 = (int) _226;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: # DEBUG a5 => a5_228
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: _229 = MEM[(uint8_t *)pix1_23 + 6B];
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)pix1_23 + 6B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)pix1_23 + 6B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_model_load_cost: inside_cost = 25, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _230 = (int) _229;
common/pixel.c:262:13: note: vect_is_simple_use: operand _229
common/pixel.c:262:13: note: def_stmt: _229 = MEM[(uint8_t *)pix1_23 + 6B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_conversion ===
common/pixel.c:262:13: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _231 = MEM[(uint8_t *)pix2_24 + 6B];
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)pix2_24 + 6B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)pix2_24 + 6B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_model_load_cost: inside_cost = 25, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _232 = (int) _231;
common/pixel.c:262:13: note: vect_is_simple_use: operand _231
common/pixel.c:262:13: note: def_stmt: _231 = MEM[(uint8_t *)pix2_24 + 6B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_conversion ===
common/pixel.c:262:13: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: a6_233 = _230 - _232;
common/pixel.c:262:13: note: vect_is_simple_use: operand _230
common/pixel.c:262:13: note: def_stmt: _230 = (int) _229;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _232
common/pixel.c:262:13: note: def_stmt: _232 = (int) _231;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: # DEBUG a6 => a6_233
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: _234 = MEM[(uint8_t *)pix1_23 + 7B];
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)pix1_23 + 7B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)pix1_23 + 7B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_model_load_cost: inside_cost = 25, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _235 = (int) _234;
common/pixel.c:262:13: note: vect_is_simple_use: operand _234
common/pixel.c:262:13: note: def_stmt: _234 = MEM[(uint8_t *)pix1_23 + 7B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_conversion ===
common/pixel.c:262:13: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _236 = MEM[(uint8_t *)pix2_24 + 7B];
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)pix2_24 + 7B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_is_simple_use: operand MEM[(uint8_t *)pix2_24 + 7B]
common/pixel.c:262:13: note: not ssa-name.
common/pixel.c:262:13: note: use not simple.
common/pixel.c:262:13: note: vect_model_load_cost: inside_cost = 25, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _237 = (int) _236;
common/pixel.c:262:13: note: vect_is_simple_use: operand _236
common/pixel.c:262:13: note: def_stmt: _236 = MEM[(uint8_t *)pix2_24 + 7B];
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_conversion ===
common/pixel.c:262:13: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: a7_238 = _235 - _237;
common/pixel.c:262:13: note: vect_is_simple_use: operand _235
common/pixel.c:262:13: note: def_stmt: _235 = (int) _234;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _237
common/pixel.c:262:13: note: def_stmt: _237 = (int) _236;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: # DEBUG a7 => a7_238
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: t0_239 = a0_203 + a1_208;
common/pixel.c:262:13: note: vect_is_simple_use: operand a0_203
common/pixel.c:262:13: note: def_stmt: a0_203 = _200 - _202;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand a1_208
common/pixel.c:262:13: note: def_stmt: a1_208 = _205 - _207;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: # DEBUG t0 => t0_239
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: t1_240 = a0_203 - a1_208;
common/pixel.c:262:13: note: vect_is_simple_use: operand a0_203
common/pixel.c:262:13: note: def_stmt: a0_203 = _200 - _202;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand a1_208
common/pixel.c:262:13: note: def_stmt: a1_208 = _205 - _207;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: # DEBUG t1 => t1_240
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: t2_241 = a2_213 + a3_218;
common/pixel.c:262:13: note: vect_is_simple_use: operand a2_213
common/pixel.c:262:13: note: def_stmt: a2_213 = _210 - _212;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand a3_218
common/pixel.c:262:13: note: def_stmt: a3_218 = _215 - _217;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: # DEBUG t2 => t2_241
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: t3_242 = a2_213 - a3_218;
common/pixel.c:262:13: note: vect_is_simple_use: operand a2_213
common/pixel.c:262:13: note: def_stmt: a2_213 = _210 - _212;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand a3_218
common/pixel.c:262:13: note: def_stmt: a3_218 = _215 - _217;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: # DEBUG t3 => t3_242
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: b0_243 = t0_239 + t2_241;
common/pixel.c:262:13: note: vect_is_simple_use: operand t0_239
common/pixel.c:262:13: note: def_stmt: t0_239 = a0_203 + a1_208;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand t2_241
common/pixel.c:262:13: note: def_stmt: t2_241 = a2_213 + a3_218;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: # DEBUG b0 => b0_243
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: b2_244 = t0_239 - t2_241;
common/pixel.c:262:13: note: vect_is_simple_use: operand t0_239
common/pixel.c:262:13: note: def_stmt: t0_239 = a0_203 + a1_208;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand t2_241
common/pixel.c:262:13: note: def_stmt: t2_241 = a2_213 + a3_218;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: # DEBUG b2 => b2_244
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: b1_245 = t1_240 + t3_242;
common/pixel.c:262:13: note: vect_is_simple_use: operand t1_240
common/pixel.c:262:13: note: def_stmt: t1_240 = a0_203 - a1_208;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand t3_242
common/pixel.c:262:13: note: def_stmt: t3_242 = a2_213 - a3_218;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: # DEBUG b1 => b1_245
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: b3_246 = t1_240 - t3_242;
common/pixel.c:262:13: note: vect_is_simple_use: operand t1_240
common/pixel.c:262:13: note: def_stmt: t1_240 = a0_203 - a1_208;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand t3_242
common/pixel.c:262:13: note: def_stmt: t3_242 = a2_213 - a3_218;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: # DEBUG b3 => b3_246
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: t0_247 = a4_223 + a5_228;
common/pixel.c:262:13: note: vect_is_simple_use: operand a4_223
common/pixel.c:262:13: note: def_stmt: a4_223 = _220 - _222;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand a5_228
common/pixel.c:262:13: note: def_stmt: a5_228 = _225 - _227;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: # DEBUG t0 => t0_247
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: t1_248 = a4_223 - a5_228;
common/pixel.c:262:13: note: vect_is_simple_use: operand a4_223
common/pixel.c:262:13: note: def_stmt: a4_223 = _220 - _222;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand a5_228
common/pixel.c:262:13: note: def_stmt: a5_228 = _225 - _227;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: # DEBUG t1 => t1_248
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: t2_249 = a6_233 + a7_238;
common/pixel.c:262:13: note: vect_is_simple_use: operand a6_233
common/pixel.c:262:13: note: def_stmt: a6_233 = _230 - _232;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand a7_238
common/pixel.c:262:13: note: def_stmt: a7_238 = _235 - _237;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: # DEBUG t2 => t2_249
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: t3_250 = a6_233 - a7_238;
common/pixel.c:262:13: note: vect_is_simple_use: operand a6_233
common/pixel.c:262:13: note: def_stmt: a6_233 = _230 - _232;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand a7_238
common/pixel.c:262:13: note: def_stmt: a7_238 = _235 - _237;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: # DEBUG t3 => t3_250
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: b4_251 = t0_247 + t2_249;
common/pixel.c:262:13: note: vect_is_simple_use: operand t0_247
common/pixel.c:262:13: note: def_stmt: t0_247 = a4_223 + a5_228;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand t2_249
common/pixel.c:262:13: note: def_stmt: t2_249 = a6_233 + a7_238;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: # DEBUG b4 => b4_251
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: b6_252 = t0_247 - t2_249;
common/pixel.c:262:13: note: vect_is_simple_use: operand t0_247
common/pixel.c:262:13: note: def_stmt: t0_247 = a4_223 + a5_228;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand t2_249
common/pixel.c:262:13: note: def_stmt: t2_249 = a6_233 + a7_238;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: # DEBUG b6 => b6_252
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: b5_253 = t1_248 + t3_250;
common/pixel.c:262:13: note: vect_is_simple_use: operand t1_248
common/pixel.c:262:13: note: def_stmt: t1_248 = a4_223 - a5_228;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand t3_250
common/pixel.c:262:13: note: def_stmt: t3_250 = a6_233 - a7_238;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: # DEBUG b5 => b5_253
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: b7_254 = t1_248 - t3_250;
common/pixel.c:262:13: note: vect_is_simple_use: operand t1_248
common/pixel.c:262:13: note: def_stmt: t1_248 = a4_223 - a5_228;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand t3_250
common/pixel.c:262:13: note: def_stmt: t3_250 = a6_233 - a7_238;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: # DEBUG b7 => b7_254
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: _255 = (unsigned short) b0_243;
common/pixel.c:262:13: note: vect_is_simple_use: operand b0_243
common/pixel.c:262:13: note: def_stmt: b0_243 = t0_239 + t2_241;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_conversion ===
common/pixel.c:262:13: note: vect_model_promotion_demotion_cost: inside_cost = 1, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _256 = (unsigned short) b4_251;
common/pixel.c:262:13: note: vect_is_simple_use: operand b4_251
common/pixel.c:262:13: note: def_stmt: b4_251 = t0_247 + t2_249;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_conversion ===
common/pixel.c:262:13: note: vect_model_promotion_demotion_cost: inside_cost = 1, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _257 = _255 + _256;
common/pixel.c:262:13: note: vect_is_simple_use: operand _255
common/pixel.c:262:13: note: def_stmt: _255 = (unsigned short) b0_243;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _256
common/pixel.c:262:13: note: def_stmt: _256 = (unsigned short) b4_251;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _258 = (short int) _257;
common/pixel.c:262:13: note: vect_is_simple_use: operand _257
common/pixel.c:262:13: note: def_stmt: _257 = _255 + _256;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _257
common/pixel.c:262:13: note: def_stmt: _257 = _255 + _256;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: no optab.
common/pixel.c:262:13: note: vect_is_simple_use: operand _257
common/pixel.c:262:13: note: def_stmt: _257 = _255 + _256;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_assignment ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: diff[i_22][0] = _258;
common/pixel.c:262:13: note: vect_is_simple_use: operand _258
common/pixel.c:262:13: note: def_stmt: _258 = (short int) _257;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: no array mode for V8HI[8]
common/pixel.c:262:13: note: vect_is_simple_use: operand _266
common/pixel.c:262:13: note: def_stmt: _266 = (short int) _265;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _274
common/pixel.c:262:13: note: def_stmt: _274 = (short int) _273;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _282
common/pixel.c:262:13: note: def_stmt: _282 = (short int) _281;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _261
common/pixel.c:262:13: note: def_stmt: _261 = (short int) _260;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _269
common/pixel.c:262:13: note: def_stmt: _269 = (short int) _268;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _277
common/pixel.c:262:13: note: def_stmt: _277 = (short int) _276;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _285
common/pixel.c:262:13: note: def_stmt: _285 = (short int) _284;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_model_store_cost: strided group_size = 8 .
common/pixel.c:262:13: note: vect_model_store_cost: aligned.
common/pixel.c:262:13: note: vect_model_store_cost: inside_cost = 50, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _260 = _255 - _256;
common/pixel.c:262:13: note: vect_is_simple_use: operand _255
common/pixel.c:262:13: note: def_stmt: _255 = (unsigned short) b0_243;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _256
common/pixel.c:262:13: note: def_stmt: _256 = (unsigned short) b4_251;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _261 = (short int) _260;
common/pixel.c:262:13: note: vect_is_simple_use: operand _260
common/pixel.c:262:13: note: def_stmt: _260 = _255 - _256;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _260
common/pixel.c:262:13: note: def_stmt: _260 = _255 - _256;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: no optab.
common/pixel.c:262:13: note: vect_is_simple_use: operand _260
common/pixel.c:262:13: note: def_stmt: _260 = _255 - _256;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_assignment ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: diff[i_22][4] = _261;
common/pixel.c:262:13: note: vect_is_simple_use: operand _261
common/pixel.c:262:13: note: def_stmt: _261 = (short int) _260;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: no array mode for V8HI[8]
common/pixel.c:262:13: note: vect_model_store_cost: aligned.
common/pixel.c:262:13: note: vect_model_store_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _263 = (unsigned short) b1_245;
common/pixel.c:262:13: note: vect_is_simple_use: operand b1_245
common/pixel.c:262:13: note: def_stmt: b1_245 = t1_240 + t3_242;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_conversion ===
common/pixel.c:262:13: note: vect_model_promotion_demotion_cost: inside_cost = 1, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _264 = (unsigned short) b5_253;
common/pixel.c:262:13: note: vect_is_simple_use: operand b5_253
common/pixel.c:262:13: note: def_stmt: b5_253 = t1_248 + t3_250;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_conversion ===
common/pixel.c:262:13: note: vect_model_promotion_demotion_cost: inside_cost = 1, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _265 = _263 + _264;
common/pixel.c:262:13: note: vect_is_simple_use: operand _263
common/pixel.c:262:13: note: def_stmt: _263 = (unsigned short) b1_245;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _264
common/pixel.c:262:13: note: def_stmt: _264 = (unsigned short) b5_253;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _266 = (short int) _265;
common/pixel.c:262:13: note: vect_is_simple_use: operand _265
common/pixel.c:262:13: note: def_stmt: _265 = _263 + _264;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _265
common/pixel.c:262:13: note: def_stmt: _265 = _263 + _264;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: no optab.
common/pixel.c:262:13: note: vect_is_simple_use: operand _265
common/pixel.c:262:13: note: def_stmt: _265 = _263 + _264;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_assignment ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: diff[i_22][1] = _266;
common/pixel.c:262:13: note: vect_is_simple_use: operand _266
common/pixel.c:262:13: note: def_stmt: _266 = (short int) _265;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: no array mode for V8HI[8]
common/pixel.c:262:13: note: vect_model_store_cost: aligned.
common/pixel.c:262:13: note: vect_model_store_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _268 = _263 - _264;
common/pixel.c:262:13: note: vect_is_simple_use: operand _263
common/pixel.c:262:13: note: def_stmt: _263 = (unsigned short) b1_245;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _264
common/pixel.c:262:13: note: def_stmt: _264 = (unsigned short) b5_253;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _269 = (short int) _268;
common/pixel.c:262:13: note: vect_is_simple_use: operand _268
common/pixel.c:262:13: note: def_stmt: _268 = _263 - _264;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _268
common/pixel.c:262:13: note: def_stmt: _268 = _263 - _264;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: no optab.
common/pixel.c:262:13: note: vect_is_simple_use: operand _268
common/pixel.c:262:13: note: def_stmt: _268 = _263 - _264;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_assignment ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: diff[i_22][5] = _269;
common/pixel.c:262:13: note: vect_is_simple_use: operand _269
common/pixel.c:262:13: note: def_stmt: _269 = (short int) _268;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: no array mode for V8HI[8]
common/pixel.c:262:13: note: vect_model_store_cost: aligned.
common/pixel.c:262:13: note: vect_model_store_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _271 = (unsigned short) b2_244;
common/pixel.c:262:13: note: vect_is_simple_use: operand b2_244
common/pixel.c:262:13: note: def_stmt: b2_244 = t0_239 - t2_241;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_conversion ===
common/pixel.c:262:13: note: vect_model_promotion_demotion_cost: inside_cost = 1, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _272 = (unsigned short) b6_252;
common/pixel.c:262:13: note: vect_is_simple_use: operand b6_252
common/pixel.c:262:13: note: def_stmt: b6_252 = t0_247 - t2_249;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_conversion ===
common/pixel.c:262:13: note: vect_model_promotion_demotion_cost: inside_cost = 1, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _273 = _271 + _272;
common/pixel.c:262:13: note: vect_is_simple_use: operand _271
common/pixel.c:262:13: note: def_stmt: _271 = (unsigned short) b2_244;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _272
common/pixel.c:262:13: note: def_stmt: _272 = (unsigned short) b6_252;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _274 = (short int) _273;
common/pixel.c:262:13: note: vect_is_simple_use: operand _273
common/pixel.c:262:13: note: def_stmt: _273 = _271 + _272;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _273
common/pixel.c:262:13: note: def_stmt: _273 = _271 + _272;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: no optab.
common/pixel.c:262:13: note: vect_is_simple_use: operand _273
common/pixel.c:262:13: note: def_stmt: _273 = _271 + _272;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_assignment ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: diff[i_22][2] = _274;
common/pixel.c:262:13: note: vect_is_simple_use: operand _274
common/pixel.c:262:13: note: def_stmt: _274 = (short int) _273;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: no array mode for V8HI[8]
common/pixel.c:262:13: note: vect_model_store_cost: aligned.
common/pixel.c:262:13: note: vect_model_store_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _276 = _271 - _272;
common/pixel.c:262:13: note: vect_is_simple_use: operand _271
common/pixel.c:262:13: note: def_stmt: _271 = (unsigned short) b2_244;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _272
common/pixel.c:262:13: note: def_stmt: _272 = (unsigned short) b6_252;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _277 = (short int) _276;
common/pixel.c:262:13: note: vect_is_simple_use: operand _276
common/pixel.c:262:13: note: def_stmt: _276 = _271 - _272;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _276
common/pixel.c:262:13: note: def_stmt: _276 = _271 - _272;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: no optab.
common/pixel.c:262:13: note: vect_is_simple_use: operand _276
common/pixel.c:262:13: note: def_stmt: _276 = _271 - _272;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_assignment ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: diff[i_22][6] = _277;
common/pixel.c:262:13: note: vect_is_simple_use: operand _277
common/pixel.c:262:13: note: def_stmt: _277 = (short int) _276;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: no array mode for V8HI[8]
common/pixel.c:262:13: note: vect_model_store_cost: aligned.
common/pixel.c:262:13: note: vect_model_store_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _279 = (unsigned short) b3_246;
common/pixel.c:262:13: note: vect_is_simple_use: operand b3_246
common/pixel.c:262:13: note: def_stmt: b3_246 = t1_240 - t3_242;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_conversion ===
common/pixel.c:262:13: note: vect_model_promotion_demotion_cost: inside_cost = 1, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _280 = (unsigned short) b7_254;
common/pixel.c:262:13: note: vect_is_simple_use: operand b7_254
common/pixel.c:262:13: note: def_stmt: b7_254 = t1_248 - t3_250;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_conversion ===
common/pixel.c:262:13: note: vect_model_promotion_demotion_cost: inside_cost = 1, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _281 = _279 + _280;
common/pixel.c:262:13: note: vect_is_simple_use: operand _279
common/pixel.c:262:13: note: def_stmt: _279 = (unsigned short) b3_246;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _280
common/pixel.c:262:13: note: def_stmt: _280 = (unsigned short) b7_254;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _282 = (short int) _281;
common/pixel.c:262:13: note: vect_is_simple_use: operand _281
common/pixel.c:262:13: note: def_stmt: _281 = _279 + _280;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _281
common/pixel.c:262:13: note: def_stmt: _281 = _279 + _280;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: no optab.
common/pixel.c:262:13: note: vect_is_simple_use: operand _281
common/pixel.c:262:13: note: def_stmt: _281 = _279 + _280;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_assignment ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: diff[i_22][3] = _282;
common/pixel.c:262:13: note: vect_is_simple_use: operand _282
common/pixel.c:262:13: note: def_stmt: _282 = (short int) _281;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: no array mode for V8HI[8]
common/pixel.c:262:13: note: vect_model_store_cost: aligned.
common/pixel.c:262:13: note: vect_model_store_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _284 = _279 - _280;
common/pixel.c:262:13: note: vect_is_simple_use: operand _279
common/pixel.c:262:13: note: def_stmt: _279 = (unsigned short) b3_246;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _280
common/pixel.c:262:13: note: def_stmt: _280 = (unsigned short) b7_254;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_operation ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: _285 = (short int) _284;
common/pixel.c:262:13: note: vect_is_simple_use: operand _284
common/pixel.c:262:13: note: def_stmt: _284 = _279 - _280;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: vect_is_simple_use: operand _284
common/pixel.c:262:13: note: def_stmt: _284 = _279 - _280;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: no optab.
common/pixel.c:262:13: note: vect_is_simple_use: operand _284
common/pixel.c:262:13: note: def_stmt: _284 = _279 - _280;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: === vectorizable_assignment ===
common/pixel.c:262:13: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: diff[i_22][7] = _285;
common/pixel.c:262:13: note: vect_is_simple_use: operand _285
common/pixel.c:262:13: note: def_stmt: _285 = (short int) _284;
common/pixel.c:262:13: note: type of def: 3.
common/pixel.c:262:13: note: no array mode for V8HI[8]
common/pixel.c:262:13: note: vect_model_store_cost: aligned.
common/pixel.c:262:13: note: vect_model_store_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:262:13: note: ==> examining statement: i_287 = i_22 + 1;
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: # DEBUG i => i_287
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: pix1_289 = pix1_23 + pretmp_584;
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: # DEBUG p1 => pix1_289
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: pix2_291 = pix2_24 + pretmp_585;
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: # DEBUG p2 => pix2_291
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: # DEBUG p2 => pix2_291
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: # DEBUG p1 => pix1_289
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: # DEBUG i => i_287
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: ivtmp_573 = ivtmp_574 - 1;
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: ==> examining statement: if (ivtmp_573 != 0)
common/pixel.c:262:13: note: irrelevant.
common/pixel.c:262:13: note: vectorization_factor = 16, niters = 8
common/pixel.c:262:13: note: not vectorized: iteration count too small.
common/pixel.c:262:13: note: not vectorized: iteration count smaller than vectorization factor.
common/pixel.c:262:13: note: bad operation or unsupported loop bound.
common/pixel.c:299:1: note: vectorized 0 loops in function.
x264_pixel_sa8d_8x16 (uint8_t * pix1, int i_stride_pix1, uint8_t * pix2, int i_stride_pix2)
{
  int16_t diff[8][8];
  int i_satd;
  int x;
  int y;
  int i;
  uint8_t * p1;
  uint8_t * p2;
  int a0;
  int a1;
  int a2;
  int a3;
  int a4;
  int a5;
  int a6;
  int a7;
  int b0;
  int b1;
  int b2;
  int b3;
  int b4;
  int b5;
  int b6;
  int b7;
  int t0;
  int t1;
  int t2;
  int t3;
  int t0;
  int t1;
  int t2;
  int t3;
  int b0;
  int b1;
  int b2;
  int b3;
  int b4;
  int b5;
  int b6;
  int b7;
  int t0;
  int t1;
  int t2;
  int t3;
  int t0;
  int t1;
  int t2;
  int t3;
  int D.13068;
  uint8_t * pix1;
  uint8_t * pix2;
  int _7;
  int _8;
  unsigned char _199;
  int _200;
  unsigned char _201;
  int _202;
  unsigned char _204;
  int _205;
  unsigned char _206;
  int _207;
  unsigned char _209;
  int _210;
  unsigned char _211;
  int _212;
  unsigned char _214;
  int _215;
  unsigned char _216;
  int _217;
  unsigned char _219;
  int _220;
  unsigned char _221;
  int _222;
  unsigned char _224;
  int _225;
  unsigned char _226;
  int _227;
  unsigned char _229;
  int _230;
  unsigned char _231;
  int _232;
  unsigned char _234;
  int _235;
  unsigned char _236;
  int _237;
  unsigned short _255;
  unsigned short _256;
  unsigned short _257;
  short int _258;
  unsigned short _260;
  short int _261;
  unsigned short _263;
  unsigned short _264;
  unsigned short _265;
  short int _266;
  unsigned short _268;
  short int _269;
  unsigned short _271;
  unsigned short _272;
  unsigned short _273;
  short int _274;
  unsigned short _276;
  short int _277;
  unsigned short _279;
  unsigned short _280;
  unsigned short _281;
  short int _282;
  unsigned short _284;
  short int _285;
  short int _296;
  int _297;
  short int _298;
  int _299;
  short int _302;
  int _303;
  short int _304;
  int _305;
  short int _312;
  int _313;
  short int _314;
  int _315;
  short int _318;
  int _319;
  short int _320;
  int _321;
  int _328;
  int _329;
  int _331;
  int _332;
  int _334;
  int _335;
  int _337;
  int _338;
  int _340;
  int _341;
  int _343;
  int _344;
  int _346;
  int _347;
  int _349;
  int _350;
  unsigned int ivtmp_571;
  unsigned int ivtmp_572;
  unsigned int ivtmp_573;
  unsigned int ivtmp_574;
  unsigned int ivtmp_577;
  unsigned int ivtmp_578;
  int pretmp_579;
  sizetype pretmp_580;
  int pretmp_581;
  sizetype pretmp_582;
  sizetype pretmp_584;
  sizetype pretmp_585;

  <bb 2>:
  # DEBUG pix1 => pix1_2(D)
  # DEBUG i_pix1 => i_stride_pix1_3(D)
  # DEBUG pix2 => pix2_4(D)
  # DEBUG i_pix2 => i_stride_pix2_5(D)
  # DEBUG i_width => 8
  # DEBUG i_height => 16
  # DEBUG i_satd => 0
  # DEBUG y => 0
  # DEBUG y => 0
  # DEBUG i_satd => 0
  # DEBUG pix2 => pix2_4(D)
  # DEBUG pix1 => pix1_2(D)
  pretmp_579 = i_stride_pix1_3(D) * 8;
  pretmp_580 = (sizetype) pretmp_579;
  pretmp_581 = i_stride_pix2_5(D) * 8;
  pretmp_582 = (sizetype) pretmp_581;
  pretmp_584 = (sizetype) i_stride_pix1_3(D);
  pretmp_585 = (sizetype) i_stride_pix2_5(D);
  goto <bb 5>;

  <bb 3>:
  # i_satd_576 = PHI <i_satd_351(9)>
  # DEBUG x => 8
  # DEBUG x => 8
  # DEBUG i_satd => i_satd_576
  pix1_165 = pix1_173 + pretmp_580;
  # DEBUG pix1 => pix1_165
  pix2_168 = pix2_292 + pretmp_582;
  # DEBUG pix2 => pix2_168
  y_170 = y_194 + 8;
  # DEBUG y => y_170
  # DEBUG y => y_170
  # DEBUG i_satd => i_satd_576
  # DEBUG pix2 => pix2_168
  # DEBUG pix1 => pix1_165
  ivtmp_571 = ivtmp_572 - 1;
  if (ivtmp_571 != 0)
    goto <bb 4>;
  else
    goto <bb 11>;

  <bb 4>:

  <bb 5>:
  # pix1_173 = PHI <pix1_165(4), pix1_2(D)(2)>
  # pix2_292 = PHI <pix2_168(4), pix2_4(D)(2)>
  # y_194 = PHI <y_170(4), 0(2)>
  # i_satd_193 = PHI <i_satd_576(4), 0(2)>
  # ivtmp_572 = PHI <ivtmp_571(4), 2(2)>
  # DEBUG y => y_194
  # DEBUG i_satd => i_satd_193
  # DEBUG pix2 => pix2_292
  # DEBUG pix1 => pix1_173
  # DEBUG p2 => pix2_292
  # DEBUG p1 => pix1_173
  # DEBUG i => 0

  <bb 6>:
  # i_22 = PHI <i_287(7), 0(5)>
  # pix1_23 = PHI <pix1_289(7), pix1_173(5)>
  # pix2_24 = PHI <pix2_291(7), pix2_292(5)>
  # ivtmp_574 = PHI <ivtmp_573(7), 8(5)>
  # DEBUG p2 => pix2_24
  # DEBUG p1 => pix1_23
  # DEBUG i => i_22
  _199 = *pix1_23;
  _200 = (int) _199;
  _201 = *pix2_24;
  _202 = (int) _201;
  a0_203 = _200 - _202;
  # DEBUG a0 => a0_203
  _204 = MEM[(uint8_t *)pix1_23 + 1B];
  _205 = (int) _204;
  _206 = MEM[(uint8_t *)pix2_24 + 1B];
  _207 = (int) _206;
  a1_208 = _205 - _207;
  # DEBUG a1 => a1_208
  _209 = MEM[(uint8_t *)pix1_23 + 2B];
  _210 = (int) _209;
  _211 = MEM[(uint8_t *)pix2_24 + 2B];
  _212 = (int) _211;
  a2_213 = _210 - _212;
  # DEBUG a2 => a2_213
  _214 = MEM[(uint8_t *)pix1_23 + 3B];
  _215 = (int) _214;
  _216 = MEM[(uint8_t *)pix2_24 + 3B];
  _217 = (int) _216;
  a3_218 = _215 - _217;
  # DEBUG a3 => a3_218
  _219 = MEM[(uint8_t *)pix1_23 + 4B];
  _220 = (int) _219;
  _221 = MEM[(uint8_t *)pix2_24 + 4B];
  _222 = (int) _221;
  a4_223 = _220 - _222;
  # DEBUG a4 => a4_223
  _224 = MEM[(uint8_t *)pix1_23 + 5B];
  _225 = (int) _224;
  _226 = MEM[(uint8_t *)pix2_24 + 5B];
  _227 = (int) _226;
  a5_228 = _225 - _227;
  # DEBUG a5 => a5_228
  _229 = MEM[(uint8_t *)pix1_23 + 6B];
  _230 = (int) _229;
  _231 = MEM[(uint8_t *)pix2_24 + 6B];
  _232 = (int) _231;
  a6_233 = _230 - _232;
  # DEBUG a6 => a6_233
  _234 = MEM[(uint8_t *)pix1_23 + 7B];
  _235 = (int) _234;
  _236 = MEM[(uint8_t *)pix2_24 + 7B];
  _237 = (int) _236;
  a7_238 = _235 - _237;
  # DEBUG a7 => a7_238
  t0_239 = a0_203 + a1_208;
  # DEBUG t0 => t0_239
  t1_240 = a0_203 - a1_208;
  # DEBUG t1 => t1_240
  t2_241 = a2_213 + a3_218;
  # DEBUG t2 => t2_241
  t3_242 = a2_213 - a3_218;
  # DEBUG t3 => t3_242
  b0_243 = t0_239 + t2_241;
  # DEBUG b0 => b0_243
  b2_244 = t0_239 - t2_241;
  # DEBUG b2 => b2_244
  b1_245 = t1_240 + t3_242;
  # DEBUG b1 => b1_245
  b3_246 = t1_240 - t3_242;
  # DEBUG b3 => b3_246
  t0_247 = a4_223 + a5_228;
  # DEBUG t0 => t0_247
  t1_248 = a4_223 - a5_228;
  # DEBUG t1 => t1_248
  t2_249 = a6_233 + a7_238;
  # DEBUG t2 => t2_249
  t3_250 = a6_233 - a7_238;
  # DEBUG t3 => t3_250
  b4_251 = t0_247 + t2_249;
  # DEBUG b4 => b4_251
  b6_252 = t0_247 - t2_249;
  # DEBUG b6 => b6_252
  b5_253 = t1_248 + t3_250;
  # DEBUG b5 => b5_253
  b7_254 = t1_248 - t3_250;
  # DEBUG b7 => b7_254
  _255 = (unsigned short) b0_243;
  _256 = (unsigned short) b4_251;
  _257 = _255 + _256;
  _258 = (short int) _257;
  diff[i_22][0] = _258;
  _260 = _255 - _256;
  _261 = (short int) _260;
  diff[i_22][4] = _261;
  _263 = (unsigned short) b1_245;
  _264 = (unsigned short) b5_253;
  _265 = _263 + _264;
  _266 = (short int) _265;
  diff[i_22][1] = _266;
  _268 = _263 - _264;
  _269 = (short int) _268;
  diff[i_22][5] = _269;
  _271 = (unsigned short) b2_244;
  _272 = (unsigned short) b6_252;
  _273 = _271 + _272;
  _274 = (short int) _273;
  diff[i_22][2] = _274;
  _276 = _271 - _272;
  _277 = (short int) _276;
  diff[i_22][6] = _277;
  _279 = (unsigned short) b3_246;
  _280 = (unsigned short) b7_254;
  _281 = _279 + _280;
  _282 = (short int) _281;
  diff[i_22][3] = _282;
  _284 = _279 - _280;
  _285 = (short int) _284;
  diff[i_22][7] = _285;
  i_287 = i_22 + 1;
  # DEBUG i => i_287
  pix1_289 = pix1_23 + pretmp_584;
  # DEBUG p1 => pix1_289
  pix2_291 = pix2_24 + pretmp_585;
  # DEBUG p2 => pix2_291
  # DEBUG p2 => pix2_291
  # DEBUG p1 => pix1_289
  # DEBUG i => i_287
  ivtmp_573 = ivtmp_574 - 1;
  if (ivtmp_573 != 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  goto <bb 6>;

  <bb 8>:

  <bb 9>:
  # i_satd_26 = PHI <i_satd_193(8), i_satd_351(10)>
  # i_27 = PHI <0(8), i_352(10)>
  # ivtmp_578 = PHI <8(8), ivtmp_577(10)>
  # DEBUG i => i_27
  # DEBUG i_satd => i_satd_26
  _296 = diff[0][i_27];
  _297 = (int) _296;
  _298 = diff[1][i_27];
  _299 = (int) _298;
  t0_300 = _297 + _299;
  # DEBUG t0 => t0_300
  t1_301 = _297 - _299;
  # DEBUG t1 => t1_301
  _302 = diff[2][i_27];
  _303 = (int) _302;
  _304 = diff[3][i_27];
  _305 = (int) _304;
  t2_306 = _303 + _305;
  # DEBUG t2 => t2_306
  t3_307 = _303 - _305;
  # DEBUG t3 => t3_307
  b0_308 = t0_300 + t2_306;
  # DEBUG b0 => b0_308
  b2_309 = t0_300 - t2_306;
  # DEBUG b2 => b2_309
  b1_310 = t1_301 + t3_307;
  # DEBUG b1 => b1_310
  b3_311 = t1_301 - t3_307;
  # DEBUG b3 => b3_311
  _312 = diff[4][i_27];
  _313 = (int) _312;
  _314 = diff[5][i_27];
  _315 = (int) _314;
  t0_316 = _313 + _315;
  # DEBUG t0 => t0_316
  t1_317 = _313 - _315;
  # DEBUG t1 => t1_317
  _318 = diff[6][i_27];
  _319 = (int) _318;
  _320 = diff[7][i_27];
  _321 = (int) _320;
  t2_322 = _319 + _321;
  # DEBUG t2 => t2_322
  t3_323 = _319 - _321;
  # DEBUG t3 => t3_323
  b4_324 = t0_316 + t2_322;
  # DEBUG b4 => b4_324
  b6_325 = t0_316 - t2_322;
  # DEBUG b6 => b6_325
  b5_326 = t1_317 + t3_323;
  # DEBUG b5 => b5_326
  b7_327 = t1_317 - t3_323;
  # DEBUG b7 => b7_327
  _328 = b0_308 + b4_324;
  _329 = ABS_EXPR <_328>;
  i_satd_330 = _329 + i_satd_26;
  # DEBUG i_satd => i_satd_330
  _331 = b0_308 - b4_324;
  _332 = ABS_EXPR <_331>;
  i_satd_333 = _332 + i_satd_330;
  # DEBUG i_satd => i_satd_333
  _334 = b1_310 + b5_326;
  _335 = ABS_EXPR <_334>;
  i_satd_336 = _335 + i_satd_333;
  # DEBUG i_satd => i_satd_336
  _337 = b1_310 - b5_326;
  _338 = ABS_EXPR <_337>;
  i_satd_339 = _338 + i_satd_336;
  # DEBUG i_satd => i_satd_339
  _340 = b2_309 + b6_325;
  _341 = ABS_EXPR <_340>;
  i_satd_342 = _341 + i_satd_339;
  # DEBUG i_satd => i_satd_342
  _343 = b2_309 - b6_325;
  _344 = ABS_EXPR <_343>;
  i_satd_345 = _344 + i_satd_342;
  # DEBUG i_satd => i_satd_345
  _346 = b3_311 + b7_327;
  _347 = ABS_EXPR <_346>;
  i_satd_348 = _347 + i_satd_345;
  # DEBUG i_satd => i_satd_348
  _349 = b3_311 - b7_327;
  _350 = ABS_EXPR <_349>;
  i_satd_351 = _350 + i_satd_348;
  # DEBUG i_satd => i_satd_351
  i_352 = i_27 + 1;
  # DEBUG i => i_352
  # DEBUG i => i_352
  # DEBUG i_satd => i_satd_351
  ivtmp_577 = ivtmp_578 - 1;
  if (ivtmp_577 != 0)
    goto <bb 10>;
  else
    goto <bb 3>;

  <bb 10>:
  goto <bb 9>;

  <bb 11>:
  # i_satd_575 = PHI <i_satd_576(3)>
  diff ={v} {CLOBBER};
  # DEBUG pix1 => NULL
  # DEBUG i_pix1 => NULL
  # DEBUG pix2 => NULL
  # DEBUG i_pix2 => NULL
  # DEBUG i_width => NULL
  # DEBUG i_height => NULL
  # DEBUG t3 => NULL
  # DEBUG t2 => NULL
  # DEBUG t1 => NULL
  # DEBUG t0 => NULL
  # DEBUG t3 => NULL
  # DEBUG t2 => NULL
  # DEBUG t1 => NULL
  # DEBUG t0 => NULL
  # DEBUG b7 => NULL
  # DEBUG b6 => NULL
  # DEBUG b5 => NULL
  # DEBUG b4 => NULL
  # DEBUG b3 => NULL
  # DEBUG b2 => NULL
  # DEBUG b1 => NULL
  # DEBUG b0 => NULL
  # DEBUG t3 => NULL
  # DEBUG t2 => NULL
  # DEBUG t1 => NULL
  # DEBUG t0 => NULL
  # DEBUG t3 => NULL
  # DEBUG t2 => NULL
  # DEBUG t1 => NULL
  # DEBUG t0 => NULL
  # DEBUG b7 => NULL
  # DEBUG b6 => NULL
  # DEBUG b5 => NULL
  # DEBUG b4 => NULL
  # DEBUG b3 => NULL
  # DEBUG b2 => NULL
  # DEBUG b1 => NULL
  # DEBUG b0 => NULL
  # DEBUG a7 => NULL
  # DEBUG a6 => NULL
  # DEBUG a5 => NULL
  # DEBUG a4 => NULL
  # DEBUG a3 => NULL
  # DEBUG a2 => NULL
  # DEBUG a1 => NULL
  # DEBUG a0 => NULL
  # DEBUG p2 => NULL
  # DEBUG p1 => NULL
  # DEBUG i => NULL
  # DEBUG y => NULL
  # DEBUG x => NULL
  # DEBUG i_satd => NULL
  _7 = i_satd_575 + 2;
  _8 = _7 >> 2;
  return _8;

}



;; Function x264_pixel_ssd_wxh (x264_pixel_ssd_wxh, funcdef_no=129, decl_uid=4720, cgraph_uid=129, symbol_order=172)


Analyzing loop at common/pixel.c:129
common/pixel.c:129:9: note: ===== analyze_loop_nest =====
common/pixel.c:129:9: note: === vect_analyze_loop_form ===
common/pixel.c:129:9: note: ===== analyze_loop_nest_1 =====
common/pixel.c:129:9: note: === vect_analyze_loop_form ===
common/pixel.c:129:9: note: === get_loop_niters ===
Analyzing # of iterations of loop 5
  exit condition [1, + , 1](no_overflow) < i_width_44(D)
  bounds on difference of bases: 0 ... 2147483646
  result:
    # of iterations (unsigned int) i_width_44(D) + 4294967295, bounded by 2147483646
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:49, generic-match.c:3223
common/pixel.c:129:9: note: Symbolic number of iterations is (unsigned int) i_width_44(D)
common/pixel.c:129:9: note: not vectorized: control flow in loop.
common/pixel.c:129:9: note: bad loop form.

Analyzing loop at common/pixel.c:130
common/pixel.c:130:13: note: ===== analyze_loop_nest =====
common/pixel.c:130:13: note: === vect_analyze_loop_form ===
common/pixel.c:130:13: note: === get_loop_niters ===
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:49, generic-match.c:3223
common/pixel.c:130:13: note: Symbolic number of iterations is (unsigned int) i_width_44(D)
common/pixel.c:130:13: note: === vect_analyze_data_refs ===
Creating dr for *_130
analyze_innermost: success.
	base_address: pix1_25(D) + (sizetype) pretmp_214
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix1_25(D) + (sizetype) pretmp_214
	Access function 0: {0B, +, 1}_5
Creating dr for *_136
analyze_innermost: success.
	base_address: pix2_27(D) + (sizetype) pretmp_215
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix2_27(D) + (sizetype) pretmp_215
	Access function 0: {0B, +, 1}_5
common/pixel.c:130:13: note: got vectype for stmt: _131 = *_130;
vector(16) unsigned char
common/pixel.c:130:13: note: got vectype for stmt: _137 = *_136;
vector(16) unsigned char
common/pixel.c:130:13: note: === vect_analyze_scalar_cycles ===
common/pixel.c:130:13: note: Analyze phi: i_ssd_182 = PHI <i_ssd_55(45), i_ssd_142(37)>

common/pixel.c:130:13: note: Access function of PHI: {i_ssd_55, +, _141}_5
common/pixel.c:130:13: note: step: _141,  init: i_ssd_55
common/pixel.c:130:13: note: step unknown.
common/pixel.c:130:13: note: Analyze phi: x_188 = PHI <0(45), x_143(37)>

common/pixel.c:130:13: note: Access function of PHI: {0, +, 1}_5
common/pixel.c:130:13: note: step: 1,  init: 0
common/pixel.c:130:13: note: Detected induction.
common/pixel.c:130:13: note: Analyze phi: i_ssd_182 = PHI <i_ssd_55(45), i_ssd_142(37)>

common/pixel.c:130:13: note: detected reduction: i_ssd_142 = _141 + i_ssd_182;

common/pixel.c:130:13: note: Detected reduction.
common/pixel.c:130:13: note: === vect_pattern_recog ===
common/pixel.c:130:13: note: vect_is_simple_use: operand d_139
common/pixel.c:130:13: note: def_stmt: d_139 = _132 - _138;
common/pixel.c:130:13: note: type of def: 3.
common/pixel.c:130:13: note: vect_is_simple_use: operand _141
common/pixel.c:130:13: note: def_stmt: _141 = (long int) _140;
common/pixel.c:130:13: note: type of def: 3.
common/pixel.c:130:13: note: vect_is_simple_use: operand _140
common/pixel.c:130:13: note: def_stmt: _140 = d_139 * d_139;
common/pixel.c:130:13: note: type of def: 3.
common/pixel.c:130:13: note: vect_recog_widen_sum_pattern: detected: patt_168 = _140 w+ i_ssd_182;

common/pixel.c:130:13: note: vect_is_simple_use: operand _141
common/pixel.c:130:13: note: def_stmt: _141 = (long int) _140;
common/pixel.c:130:13: note: type of def: 3.
common/pixel.c:130:13: note: vect_is_simple_use: operand _140
common/pixel.c:130:13: note: def_stmt: _140 = d_139 * d_139;
common/pixel.c:130:13: note: type of def: 3.
common/pixel.c:130:13: note: vect_is_simple_use: operand d_139
common/pixel.c:130:13: note: def_stmt: d_139 = _132 - _138;
common/pixel.c:130:13: note: type of def: 3.
common/pixel.c:130:13: note: vect_is_simple_use: operand _141
common/pixel.c:130:13: note: def_stmt: _141 = (long int) _140;
common/pixel.c:130:13: note: type of def: 3.
common/pixel.c:130:13: note: vect_is_simple_use: operand _140
common/pixel.c:130:13: note: def_stmt: _140 = d_139 * d_139;
common/pixel.c:130:13: note: type of def: 3.
common/pixel.c:130:13: note: === vect_analyze_data_ref_accesses ===
common/pixel.c:130:13: note: === vect_mark_stmts_to_be_vectorized ===
common/pixel.c:130:13: note: init: phi relevant? i_ssd_182 = PHI <i_ssd_55(45), i_ssd_142(37)>
common/pixel.c:130:13: note: init: phi relevant? x_188 = PHI <0(45), x_143(37)>
common/pixel.c:130:13: note: init: stmt relevant? # DEBUG x => x_188
common/pixel.c:130:13: note: init: stmt relevant? # DEBUG i_ssd => i_ssd_182
common/pixel.c:130:13: note: init: stmt relevant? _128 = x_188 + pretmp_214;
common/pixel.c:130:13: note: init: stmt relevant? _129 = (sizetype) _128;
common/pixel.c:130:13: note: init: stmt relevant? _130 = pix1_25(D) + _129;
common/pixel.c:130:13: note: init: stmt relevant? _131 = *_130;
common/pixel.c:130:13: note: init: stmt relevant? _132 = (int) _131;
common/pixel.c:130:13: note: init: stmt relevant? _134 = x_188 + pretmp_215;
common/pixel.c:130:13: note: init: stmt relevant? _135 = (sizetype) _134;
common/pixel.c:130:13: note: init: stmt relevant? _136 = pix2_27(D) + _135;
common/pixel.c:130:13: note: init: stmt relevant? _137 = *_136;
common/pixel.c:130:13: note: init: stmt relevant? _138 = (int) _137;
common/pixel.c:130:13: note: init: stmt relevant? d_139 = _132 - _138;
common/pixel.c:130:13: note: init: stmt relevant? # DEBUG d => d_139
common/pixel.c:130:13: note: init: stmt relevant? _140 = d_139 * d_139;
common/pixel.c:130:13: note: init: stmt relevant? _141 = (long int) _140;
common/pixel.c:130:13: note: init: stmt relevant? i_ssd_142 = _141 + i_ssd_182;
common/pixel.c:130:13: note: vec_stmt_relevant_p: used out of loop.
common/pixel.c:130:13: note: mark relevant 0, live 1.
common/pixel.c:130:13: note: init: stmt relevant? # DEBUG i_ssd => i_ssd_142
common/pixel.c:130:13: note: init: stmt relevant? x_143 = x_188 + 1;
common/pixel.c:130:13: note: init: stmt relevant? # DEBUG x => x_143
common/pixel.c:130:13: note: init: stmt relevant? # DEBUG x => x_143
common/pixel.c:130:13: note: init: stmt relevant? # DEBUG i_ssd => i_ssd_142
common/pixel.c:130:13: note: init: stmt relevant? if (i_width_44(D) > x_143)
common/pixel.c:130:13: note: worklist: examine stmt: i_ssd_142 = _141 + i_ssd_182;
common/pixel.c:130:13: note: vect_is_simple_use: operand _141
common/pixel.c:130:13: note: def_stmt: _141 = (long int) _140;
common/pixel.c:130:13: note: type of def: 3.
common/pixel.c:130:13: note: mark relevant 3, live 0.
common/pixel.c:130:13: note: vect_is_simple_use: operand i_ssd_182
common/pixel.c:130:13: note: def_stmt: i_ssd_182 = PHI <i_ssd_55(45), i_ssd_142(37)>
common/pixel.c:130:13: note: type of def: 5.
common/pixel.c:130:13: note: mark relevant 3, live 0.
common/pixel.c:130:13: note: worklist: examine stmt: i_ssd_182 = PHI <i_ssd_55(45), i_ssd_142(37)>
common/pixel.c:130:13: note: vect_is_simple_use: operand i_ssd_55
common/pixel.c:130:13: note: def_stmt: i_ssd_55 = PHI <i_ssd_8(43), i_ssd_183(42)>
common/pixel.c:130:13: note: type of def: 2.
common/pixel.c:130:13: note: def_stmt is out of loop.
common/pixel.c:130:13: note: vect_is_simple_use: operand i_ssd_142
common/pixel.c:130:13: note: def_stmt: i_ssd_142 = _141 + i_ssd_182;
common/pixel.c:130:13: note: type of def: 5.
common/pixel.c:130:13: note: reduc-stmt defining reduc-phi in the same nest.
common/pixel.c:130:13: note: worklist: examine stmt: _141 = (long int) _140;
common/pixel.c:130:13: note: vect_is_simple_use: operand _140
common/pixel.c:130:13: note: def_stmt: _140 = d_139 * d_139;
common/pixel.c:130:13: note: type of def: 3.
common/pixel.c:130:13: note: mark relevant 3, live 0.
common/pixel.c:130:13: note: worklist: examine stmt: _140 = d_139 * d_139;
common/pixel.c:130:13: note: vect_is_simple_use: operand d_139
common/pixel.c:130:13: note: def_stmt: d_139 = _132 - _138;
common/pixel.c:130:13: note: type of def: 3.
common/pixel.c:130:13: note: mark relevant 3, live 0.
common/pixel.c:130:13: note: vect_is_simple_use: operand d_139
common/pixel.c:130:13: note: def_stmt: d_139 = _132 - _138;
common/pixel.c:130:13: note: type of def: 3.
common/pixel.c:130:13: note: mark relevant 3, live 0.
common/pixel.c:130:13: note: already marked relevant/live.
common/pixel.c:130:13: note: worklist: examine stmt: d_139 = _132 - _138;
common/pixel.c:130:13: note: vect_is_simple_use: operand _132
common/pixel.c:130:13: note: def_stmt: _132 = (int) _131;
common/pixel.c:130:13: note: type of def: 3.
common/pixel.c:130:13: note: mark relevant 3, live 0.
common/pixel.c:130:13: note: vect_is_simple_use: operand _138
common/pixel.c:130:13: note: def_stmt: _138 = (int) _137;
common/pixel.c:130:13: note: type of def: 3.
common/pixel.c:130:13: note: mark relevant 3, live 0.
common/pixel.c:130:13: note: worklist: examine stmt: _138 = (int) _137;
common/pixel.c:130:13: note: vect_is_simple_use: operand _137
common/pixel.c:130:13: note: def_stmt: _137 = *_136;
common/pixel.c:130:13: note: type of def: 3.
common/pixel.c:130:13: note: mark relevant 3, live 0.
common/pixel.c:130:13: note: worklist: examine stmt: _137 = *_136;
common/pixel.c:130:13: note: worklist: examine stmt: _132 = (int) _131;
common/pixel.c:130:13: note: vect_is_simple_use: operand _131
common/pixel.c:130:13: note: def_stmt: _131 = *_130;
common/pixel.c:130:13: note: type of def: 3.
common/pixel.c:130:13: note: mark relevant 3, live 0.
common/pixel.c:130:13: note: worklist: examine stmt: _131 = *_130;
common/pixel.c:130:13: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _131 = *_130;
  stmt_b: _137 = *_136;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _131 = *_130;
  stmt_b: _131 = *_130;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_5)
  (chrec_b = {0B, +, 1}_5)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _137 = *_136;
  stmt_b: _137 = *_136;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_5)
  (chrec_b = {0B, +, 1}_5)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/pixel.c:130:13: note: === vect_determine_vectorization_factor ===
common/pixel.c:130:13: note: ==> examining phi: i_ssd_182 = PHI <i_ssd_55(45), i_ssd_142(37)>

common/pixel.c:130:13: note: get vectype for scalar type:  int64_t
common/pixel.c:130:13: note: vectype: vector(2) long int
common/pixel.c:130:13: note: nunits = 2
common/pixel.c:130:13: note: ==> examining phi: x_188 = PHI <0(45), x_143(37)>

common/pixel.c:130:13: note: ==> examining statement: # DEBUG x => x_188

common/pixel.c:130:13: note: skip.
common/pixel.c:130:13: note: ==> examining statement: # DEBUG i_ssd => i_ssd_182

common/pixel.c:130:13: note: skip.
common/pixel.c:130:13: note: ==> examining statement: _128 = x_188 + pretmp_214;

common/pixel.c:130:13: note: skip.
common/pixel.c:130:13: note: ==> examining statement: _129 = (sizetype) _128;

common/pixel.c:130:13: note: skip.
common/pixel.c:130:13: note: ==> examining statement: _130 = pix1_25(D) + _129;

common/pixel.c:130:13: note: skip.
common/pixel.c:130:13: note: ==> examining statement: _131 = *_130;

common/pixel.c:130:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:130:13: note: vectype: vector(16) unsigned char
common/pixel.c:130:13: note: nunits = 16
common/pixel.c:130:13: note: ==> examining statement: _132 = (int) _131;

common/pixel.c:130:13: note: get vectype for scalar type:  int
common/pixel.c:130:13: note: vectype: vector(4) int
common/pixel.c:130:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:130:13: note: vectype: vector(16) unsigned char
common/pixel.c:130:13: note: nunits = 16
common/pixel.c:130:13: note: ==> examining statement: _134 = x_188 + pretmp_215;

common/pixel.c:130:13: note: skip.
common/pixel.c:130:13: note: ==> examining statement: _135 = (sizetype) _134;

common/pixel.c:130:13: note: skip.
common/pixel.c:130:13: note: ==> examining statement: _136 = pix2_27(D) + _135;

common/pixel.c:130:13: note: skip.
common/pixel.c:130:13: note: ==> examining statement: _137 = *_136;

common/pixel.c:130:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:130:13: note: vectype: vector(16) unsigned char
common/pixel.c:130:13: note: nunits = 16
common/pixel.c:130:13: note: ==> examining statement: _138 = (int) _137;

common/pixel.c:130:13: note: get vectype for scalar type:  int
common/pixel.c:130:13: note: vectype: vector(4) int
common/pixel.c:130:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:130:13: note: vectype: vector(16) unsigned char
common/pixel.c:130:13: note: nunits = 16
common/pixel.c:130:13: note: ==> examining statement: d_139 = _132 - _138;

common/pixel.c:130:13: note: get vectype for scalar type:  int
common/pixel.c:130:13: note: vectype: vector(4) int
common/pixel.c:130:13: note: get vectype for scalar type:  int
common/pixel.c:130:13: note: vectype: vector(4) int
common/pixel.c:130:13: note: nunits = 4
common/pixel.c:130:13: note: ==> examining statement: # DEBUG d => d_139

common/pixel.c:130:13: note: skip.
common/pixel.c:130:13: note: ==> examining statement: _140 = d_139 * d_139;

common/pixel.c:130:13: note: get vectype for scalar type:  int
common/pixel.c:130:13: note: vectype: vector(4) int
common/pixel.c:130:13: note: get vectype for scalar type:  int
common/pixel.c:130:13: note: vectype: vector(4) int
common/pixel.c:130:13: note: nunits = 4
common/pixel.c:130:13: note: ==> examining statement: _141 = (long int) _140;

common/pixel.c:130:13: note: get vectype for scalar type:  long int
common/pixel.c:130:13: note: vectype: vector(2) long int
common/pixel.c:130:13: note: get vectype for scalar type:  int
common/pixel.c:130:13: note: vectype: vector(4) int
common/pixel.c:130:13: note: nunits = 4
common/pixel.c:130:13: note: ==> examining statement: i_ssd_142 = _141 + i_ssd_182;

common/pixel.c:130:13: note: get vectype for scalar type:  int64_t
common/pixel.c:130:13: note: vectype: vector(2) long int
common/pixel.c:130:13: note: get vectype for scalar type:  int64_t
common/pixel.c:130:13: note: vectype: vector(2) long int
common/pixel.c:130:13: note: nunits = 2
common/pixel.c:130:13: note: ==> examining statement: # DEBUG i_ssd => i_ssd_142

common/pixel.c:130:13: note: skip.
common/pixel.c:130:13: note: ==> examining statement: x_143 = x_188 + 1;

common/pixel.c:130:13: note: skip.
common/pixel.c:130:13: note: ==> examining statement: # DEBUG x => x_143

common/pixel.c:130:13: note: skip.
common/pixel.c:130:13: note: ==> examining statement: # DEBUG x => x_143

common/pixel.c:130:13: note: skip.
common/pixel.c:130:13: note: ==> examining statement: # DEBUG i_ssd => i_ssd_142

common/pixel.c:130:13: note: skip.
common/pixel.c:130:13: note: ==> examining statement: if (i_width_44(D) > x_143)

common/pixel.c:130:13: note: skip.
common/pixel.c:130:13: note: vectorization factor = 16
common/pixel.c:130:13: note: === vect_analyze_data_refs_alignment ===
common/pixel.c:130:13: note: vect_compute_data_ref_alignment:
common/pixel.c:130:13: note: can't force alignment of ref: *_130
common/pixel.c:130:13: note: vect_compute_data_ref_alignment:
common/pixel.c:130:13: note: can't force alignment of ref: *_136
common/pixel.c:130:13: note: === vect_prune_runtime_alias_test_list ===
common/pixel.c:130:13: note: === vect_enhance_data_refs_alignment ===
common/pixel.c:130:13: note: Unknown misalignment, is_packed = 0
common/pixel.c:130:13: note: Unknown misalignment, is_packed = 0
common/pixel.c:130:13: note: vect_can_advance_ivs_p:
common/pixel.c:130:13: note: Analyze phi: i_ssd_182 = PHI <i_ssd_55(45), i_ssd_142(37)>

common/pixel.c:130:13: note: reduc phi. skip.
common/pixel.c:130:13: note: Analyze phi: x_188 = PHI <0(45), x_143(37)>

common/pixel.c:130:13: note: Setting misalignment to -1.
common/pixel.c:130:13: note: Disable peeling, max peels reached: 15
common/pixel.c:130:13: note: Vectorizing an unaligned access.
common/pixel.c:130:13: note: Vectorizing an unaligned access.
common/pixel.c:130:13: note: === vect_analyze_slp ===
common/pixel.c:130:13: note: === vect_make_slp_decision ===
common/pixel.c:130:13: note: === vect_detect_hybrid_slp ===
common/pixel.c:130:13: note: === vect_analyze_loop_operations ===
common/pixel.c:130:13: note: examining phi: i_ssd_182 = PHI <i_ssd_55(45), i_ssd_142(37)>

common/pixel.c:130:13: note: examining phi: x_188 = PHI <0(45), x_143(37)>

common/pixel.c:130:13: note: ==> examining statement: # DEBUG x => x_188
common/pixel.c:130:13: note: irrelevant.
common/pixel.c:130:13: note: ==> examining statement: # DEBUG i_ssd => i_ssd_182
common/pixel.c:130:13: note: irrelevant.
common/pixel.c:130:13: note: ==> examining statement: _128 = x_188 + pretmp_214;
common/pixel.c:130:13: note: irrelevant.
common/pixel.c:130:13: note: ==> examining statement: _129 = (sizetype) _128;
common/pixel.c:130:13: note: irrelevant.
common/pixel.c:130:13: note: ==> examining statement: _130 = pix1_25(D) + _129;
common/pixel.c:130:13: note: irrelevant.
common/pixel.c:130:13: note: ==> examining statement: _131 = *_130;
common/pixel.c:130:13: note: vect_is_simple_use: operand *_130
common/pixel.c:130:13: note: not ssa-name.
common/pixel.c:130:13: note: use not simple.
common/pixel.c:130:13: note: vect_is_simple_use: operand *_130
common/pixel.c:130:13: note: not ssa-name.
common/pixel.c:130:13: note: use not simple.
common/pixel.c:130:13: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:130:13: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:130:13: note: ==> examining statement: _132 = (int) _131;
common/pixel.c:130:13: note: vect_is_simple_use: operand _131
common/pixel.c:130:13: note: def_stmt: _131 = *_130;
common/pixel.c:130:13: note: type of def: 3.
common/pixel.c:130:13: note: === vectorizable_conversion ===
common/pixel.c:130:13: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:130:13: note: ==> examining statement: _134 = x_188 + pretmp_215;
common/pixel.c:130:13: note: irrelevant.
common/pixel.c:130:13: note: ==> examining statement: _135 = (sizetype) _134;
common/pixel.c:130:13: note: irrelevant.
common/pixel.c:130:13: note: ==> examining statement: _136 = pix2_27(D) + _135;
common/pixel.c:130:13: note: irrelevant.
common/pixel.c:130:13: note: ==> examining statement: _137 = *_136;
common/pixel.c:130:13: note: vect_is_simple_use: operand *_136
common/pixel.c:130:13: note: not ssa-name.
common/pixel.c:130:13: note: use not simple.
common/pixel.c:130:13: note: vect_is_simple_use: operand *_136
common/pixel.c:130:13: note: not ssa-name.
common/pixel.c:130:13: note: use not simple.
common/pixel.c:130:13: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:130:13: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:130:13: note: ==> examining statement: _138 = (int) _137;
common/pixel.c:130:13: note: vect_is_simple_use: operand _137
common/pixel.c:130:13: note: def_stmt: _137 = *_136;
common/pixel.c:130:13: note: type of def: 3.
common/pixel.c:130:13: note: === vectorizable_conversion ===
common/pixel.c:130:13: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:130:13: note: ==> examining statement: d_139 = _132 - _138;
common/pixel.c:130:13: note: vect_is_simple_use: operand _132
common/pixel.c:130:13: note: def_stmt: _132 = (int) _131;
common/pixel.c:130:13: note: type of def: 3.
common/pixel.c:130:13: note: vect_is_simple_use: operand _138
common/pixel.c:130:13: note: def_stmt: _138 = (int) _137;
common/pixel.c:130:13: note: type of def: 3.
common/pixel.c:130:13: note: === vectorizable_operation ===
common/pixel.c:130:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:130:13: note: ==> examining statement: # DEBUG d => d_139
common/pixel.c:130:13: note: irrelevant.
common/pixel.c:130:13: note: ==> examining statement: _140 = d_139 * d_139;
common/pixel.c:130:13: note: vect_is_simple_use: operand d_139
common/pixel.c:130:13: note: def_stmt: d_139 = _132 - _138;
common/pixel.c:130:13: note: type of def: 3.
common/pixel.c:130:13: note: vect_is_simple_use: operand d_139
common/pixel.c:130:13: note: def_stmt: d_139 = _132 - _138;
common/pixel.c:130:13: note: type of def: 3.
common/pixel.c:130:13: note: === vectorizable_operation ===
common/pixel.c:130:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:130:13: note: ==> examining statement: _141 = (long int) _140;
common/pixel.c:130:13: note: vect_is_simple_use: operand _140
common/pixel.c:130:13: note: def_stmt: _140 = d_139 * d_139;
common/pixel.c:130:13: note: type of def: 3.
common/pixel.c:130:13: note: === vectorizable_conversion ===
common/pixel.c:130:13: note: vect_model_promotion_demotion_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:130:13: note: ==> examining statement: i_ssd_142 = _141 + i_ssd_182;
common/pixel.c:130:13: note: vect_is_simple_use: operand _141
common/pixel.c:130:13: note: def_stmt: _141 = (long int) _140;
common/pixel.c:130:13: note: type of def: 3.
common/pixel.c:130:13: note: vect_is_simple_use: operand i_ssd_182
common/pixel.c:130:13: note: def_stmt: i_ssd_182 = PHI <i_ssd_55(45), i_ssd_142(37)>
common/pixel.c:130:13: note: type of def: 5.
common/pixel.c:130:13: note: detected reduction: i_ssd_142 = _141 + i_ssd_182;

common/pixel.c:130:13: note: reduc op not supported by target.
vect_model_reduction_cost: inside_cost = 8, prologue_cost = 1, epilogue_cost = 3 .
common/pixel.c:130:13: note: ==> examining statement: # DEBUG i_ssd => i_ssd_142
common/pixel.c:130:13: note: irrelevant.
common/pixel.c:130:13: note: ==> examining statement: x_143 = x_188 + 1;
common/pixel.c:130:13: note: irrelevant.
common/pixel.c:130:13: note: ==> examining statement: # DEBUG x => x_143
common/pixel.c:130:13: note: irrelevant.
common/pixel.c:130:13: note: ==> examining statement: # DEBUG x => x_143
common/pixel.c:130:13: note: irrelevant.
common/pixel.c:130:13: note: ==> examining statement: # DEBUG i_ssd => i_ssd_142
common/pixel.c:130:13: note: irrelevant.
common/pixel.c:130:13: note: ==> examining statement: if (i_width_44(D) > x_143)
common/pixel.c:130:13: note: irrelevant.
common/pixel.c:130:13: note: === vect_update_slp_costs_according_to_vf ===
common/pixel.c:130:13: note: cost model: epilogue peel iters set to vf/2 because loop iterations are unknown .
common/pixel.c:130:13: note: Cost model analysis: 
  Vector inside of loop cost: 34
  Vector prologue cost: 7
  Vector epilogue cost: 67
  Scalar iteration cost: 8
  Scalar outside cost: 6
  Vector outside cost: 74
  prologue iterations: 0
  epilogue iterations: 8
  Calculated minimum iters for profitability: 9
common/pixel.c:130:13: note:   Runtime profitability threshold = 15
common/pixel.c:130:13: note:   Static estimate profitability threshold = 15
common/pixel.c:130:13: note: epilog loop required
common/pixel.c:130:13: note: vect_can_advance_ivs_p:
common/pixel.c:130:13: note: Analyze phi: i_ssd_182 = PHI <i_ssd_55(45), i_ssd_142(37)>

common/pixel.c:130:13: note: reduc phi. skip.
common/pixel.c:130:13: note: Analyze phi: x_188 = PHI <0(45), x_143(37)>

common/pixel.c:130:13: note: loop vectorized
common/pixel.c:130:13: note: === vec_transform_loop ===
common/pixel.c:130:13: note: Profitability threshold is 15 loop iterations.
common/pixel.c:130:13: note: === vect_do_peeling_for_loop_bound ===
Removing basic block 47
basic block 47, loop depth 1
 pred:       45
 succ:      


;; Scaling loop 5 with scale 0.666600, bounding iterations to 15 from guessed 16
;; guessed iterations are now 11
;; Scaling loop 9 with scale 0.777800, bounding iterations to 16 from guessed 13
;; guessed iterations are now 11
common/pixel.c:130:13: note: vect_update_ivs_after_vectorizer: phi: i_ssd_182 = PHI <i_ssd_55(51), i_ssd_142(37)>

common/pixel.c:130:13: note: reduc phi. skip.
common/pixel.c:130:13: note: vect_update_ivs_after_vectorizer: phi: x_188 = PHI <0(51), x_143(37)>

Applying pattern match.pd:114, generic-match.c:6569
Applying pattern match.pd:49, generic-match.c:3223
Setting upper bound of nb iterations for epilogue loop to 14
common/pixel.c:130:13: note: ------>vectorizing phi: i_ssd_182 = PHI <i_ssd_55(55), i_ssd_142(37)>

common/pixel.c:130:13: note: multiple-types.
common/pixel.c:130:13: note: ------>vectorizing phi: x_188 = PHI <0(55), x_143(37)>

common/pixel.c:130:13: note: ------>vectorizing statement: # DEBUG x => x_188

common/pixel.c:130:13: note: ------>vectorizing statement: # DEBUG i_ssd => i_ssd_182

common/pixel.c:130:13: note: ------>vectorizing statement: _128 = x_188 + pretmp_214;

common/pixel.c:130:13: note: ------>vectorizing statement: _129 = (sizetype) _128;

common/pixel.c:130:13: note: ------>vectorizing statement: _130 = pix1_25(D) + _129;

common/pixel.c:130:13: note: ------>vectorizing statement: _131 = *_130;

common/pixel.c:130:13: note: transform statement.
common/pixel.c:130:13: note: transform load. ncopies = 1
common/pixel.c:130:13: note: create vector_type-pointer variable to type: vector(16) unsigned char  vectorizing a pointer ref: *pix1_25(D) + (sizetype) pretmp_214
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:130:13: note: created vectp.1646_22
common/pixel.c:130:13: note: add new stmt: vect__131.1647_18 = MEM[(uint8_t *)vectp.1645_20];
common/pixel.c:130:13: note: ------>vectorizing statement: _132 = (int) _131;

common/pixel.c:130:13: note: multiple-types.
common/pixel.c:130:13: note: transform statement.
common/pixel.c:130:13: note: vect_is_simple_use: operand _131
common/pixel.c:130:13: note: def_stmt: _131 = *_130;
common/pixel.c:130:13: note: type of def: 3.
common/pixel.c:130:13: note: transform conversion. ncopies = 1.
common/pixel.c:130:13: note: vect_get_vec_def_for_operand: _131
common/pixel.c:130:13: note: vect_is_simple_use: operand _131
common/pixel.c:130:13: note: def_stmt: _131 = *_130;
common/pixel.c:130:13: note: type of def: 3.
common/pixel.c:130:13: note: def =  _131
  def_stmt =  _131 = *_130;
common/pixel.c:130:13: note: add new stmt: vect__132.1649_17 = [vec_unpack_lo_expr] vect__131.1647_18;
common/pixel.c:130:13: note: add new stmt: vect__132.1649_15 = [vec_unpack_hi_expr] vect__131.1647_18;
common/pixel.c:130:13: note: add new stmt: vect__132.1648_14 = [vec_unpack_lo_expr] vect__132.1649_17;
common/pixel.c:130:13: note: add new stmt: vect__132.1648_13 = [vec_unpack_hi_expr] vect__132.1649_17;
common/pixel.c:130:13: note: add new stmt: vect__132.1648_12 = [vec_unpack_lo_expr] vect__132.1649_15;
common/pixel.c:130:13: note: add new stmt: vect__132.1648_10 = [vec_unpack_hi_expr] vect__132.1649_15;
common/pixel.c:130:13: note: ------>vectorizing statement: _134 = x_188 + pretmp_215;

common/pixel.c:130:13: note: ------>vectorizing statement: _135 = (sizetype) _134;

common/pixel.c:130:13: note: ------>vectorizing statement: _136 = pix2_27(D) + _135;

common/pixel.c:130:13: note: ------>vectorizing statement: _137 = *_136;

common/pixel.c:130:13: note: transform statement.
common/pixel.c:130:13: note: transform load. ncopies = 1
common/pixel.c:130:13: note: create vector_type-pointer variable to type: vector(16) unsigned char  vectorizing a pointer ref: *pix2_27(D) + (sizetype) pretmp_215
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:130:13: note: created vectp.1651_9
common/pixel.c:130:13: note: add new stmt: vect__137.1652_3 = MEM[(uint8_t *)vectp.1650_6];
common/pixel.c:130:13: note: ------>vectorizing statement: _138 = (int) _137;

common/pixel.c:130:13: note: multiple-types.
common/pixel.c:130:13: note: transform statement.
common/pixel.c:130:13: note: vect_is_simple_use: operand _137
common/pixel.c:130:13: note: def_stmt: _137 = *_136;
common/pixel.c:130:13: note: type of def: 3.
common/pixel.c:130:13: note: transform conversion. ncopies = 1.
common/pixel.c:130:13: note: vect_get_vec_def_for_operand: _137
common/pixel.c:130:13: note: vect_is_simple_use: operand _137
common/pixel.c:130:13: note: def_stmt: _137 = *_136;
common/pixel.c:130:13: note: type of def: 3.
common/pixel.c:130:13: note: def =  _137
  def_stmt =  _137 = *_136;
common/pixel.c:130:13: note: add new stmt: vect__138.1654_2 = [vec_unpack_lo_expr] vect__137.1652_3;
common/pixel.c:130:13: note: add new stmt: vect__138.1654_1 = [vec_unpack_hi_expr] vect__137.1652_3;
common/pixel.c:130:13: note: add new stmt: vect__138.1653_234 = [vec_unpack_lo_expr] vect__138.1654_2;
common/pixel.c:130:13: note: add new stmt: vect__138.1653_233 = [vec_unpack_hi_expr] vect__138.1654_2;
common/pixel.c:130:13: note: add new stmt: vect__138.1653_227 = [vec_unpack_lo_expr] vect__138.1654_1;
common/pixel.c:130:13: note: add new stmt: vect__138.1653_226 = [vec_unpack_hi_expr] vect__138.1654_1;
common/pixel.c:130:13: note: ------>vectorizing statement: d_139 = _132 - _138;

common/pixel.c:130:13: note: multiple-types.
common/pixel.c:130:13: note: transform statement.
common/pixel.c:130:13: note: vect_is_simple_use: operand _132
common/pixel.c:130:13: note: def_stmt: _132 = (int) _131;
common/pixel.c:130:13: note: type of def: 3.
common/pixel.c:130:13: note: vect_is_simple_use: operand _138
common/pixel.c:130:13: note: def_stmt: _138 = (int) _137;
common/pixel.c:130:13: note: type of def: 3.
common/pixel.c:130:13: note: transform binary/unary operation.
common/pixel.c:130:13: note: vect_get_vec_def_for_operand: _132
common/pixel.c:130:13: note: vect_is_simple_use: operand _132
common/pixel.c:130:13: note: def_stmt: _132 = (int) _131;
common/pixel.c:130:13: note: type of def: 3.
common/pixel.c:130:13: note: def =  _132
  def_stmt =  _132 = (int) _131;
common/pixel.c:130:13: note: vect_get_vec_def_for_operand: _138
common/pixel.c:130:13: note: vect_is_simple_use: operand _138
common/pixel.c:130:13: note: def_stmt: _138 = (int) _137;
common/pixel.c:130:13: note: type of def: 3.
common/pixel.c:130:13: note: def =  _138
  def_stmt =  _138 = (int) _137;
common/pixel.c:130:13: note: add new stmt: vect_d_139.1655_223 = vect__132.1648_14 - vect__138.1653_234;
common/pixel.c:130:13: note: add new stmt: vect_d_139.1655_218 = vect__132.1648_13 - vect__138.1653_233;
common/pixel.c:130:13: note: add new stmt: vect_d_139.1655_216 = vect__132.1648_12 - vect__138.1653_227;
common/pixel.c:130:13: note: add new stmt: vect_d_139.1655_48 = vect__132.1648_10 - vect__138.1653_226;
common/pixel.c:130:13: note: ------>vectorizing statement: # DEBUG d => d_139

common/pixel.c:130:13: note: ------>vectorizing statement: _140 = d_139 * d_139;

common/pixel.c:130:13: note: multiple-types.
common/pixel.c:130:13: note: transform statement.
common/pixel.c:130:13: note: vect_is_simple_use: operand d_139
common/pixel.c:130:13: note: def_stmt: d_139 = _132 - _138;
common/pixel.c:130:13: note: type of def: 3.
common/pixel.c:130:13: note: vect_is_simple_use: operand d_139
common/pixel.c:130:13: note: def_stmt: d_139 = _132 - _138;
common/pixel.c:130:13: note: type of def: 3.
common/pixel.c:130:13: note: transform binary/unary operation.
common/pixel.c:130:13: note: vect_get_vec_def_for_operand: d_139
common/pixel.c:130:13: note: vect_is_simple_use: operand d_139
common/pixel.c:130:13: note: def_stmt: d_139 = _132 - _138;
common/pixel.c:130:13: note: type of def: 3.
common/pixel.c:130:13: note: def =  d_139
  def_stmt =  d_139 = _132 - _138;
common/pixel.c:130:13: note: vect_get_vec_def_for_operand: d_139
common/pixel.c:130:13: note: vect_is_simple_use: operand d_139
common/pixel.c:130:13: note: def_stmt: d_139 = _132 - _138;
common/pixel.c:130:13: note: type of def: 3.
common/pixel.c:130:13: note: def =  d_139
  def_stmt =  d_139 = _132 - _138;
common/pixel.c:130:13: note: add new stmt: vect__140.1656_49 = vect_d_139.1655_223 * vect_d_139.1655_223;
common/pixel.c:130:13: note: add new stmt: vect__140.1656_53 = vect_d_139.1655_218 * vect_d_139.1655_218;
common/pixel.c:130:13: note: add new stmt: vect__140.1656_54 = vect_d_139.1655_216 * vect_d_139.1655_216;
common/pixel.c:130:13: note: add new stmt: vect__140.1656_159 = vect_d_139.1655_48 * vect_d_139.1655_48;
common/pixel.c:130:13: note: ------>vectorizing statement: _141 = (long int) _140;

common/pixel.c:130:13: note: multiple-types.
common/pixel.c:130:13: note: transform statement.
common/pixel.c:130:13: note: vect_is_simple_use: operand _140
common/pixel.c:130:13: note: def_stmt: _140 = d_139 * d_139;
common/pixel.c:130:13: note: type of def: 3.
common/pixel.c:130:13: note: transform conversion. ncopies = 4.
common/pixel.c:130:13: note: vect_get_vec_def_for_operand: _140
common/pixel.c:130:13: note: vect_is_simple_use: operand _140
common/pixel.c:130:13: note: def_stmt: _140 = d_139 * d_139;
common/pixel.c:130:13: note: type of def: 3.
common/pixel.c:130:13: note: def =  _140
  def_stmt =  _140 = d_139 * d_139;
common/pixel.c:130:13: note: add new stmt: vect__141.1657_65 = [vec_unpack_lo_expr] vect__140.1656_49;
common/pixel.c:130:13: note: add new stmt: vect__141.1657_66 = [vec_unpack_hi_expr] vect__140.1656_49;
common/pixel.c:130:13: note: add new stmt: vect__141.1657_70 = [vec_unpack_lo_expr] vect__140.1656_53;
common/pixel.c:130:13: note: add new stmt: vect__141.1657_71 = [vec_unpack_hi_expr] vect__140.1656_53;
common/pixel.c:130:13: note: add new stmt: vect__141.1657_85 = [vec_unpack_lo_expr] vect__140.1656_54;
common/pixel.c:130:13: note: add new stmt: vect__141.1657_86 = [vec_unpack_hi_expr] vect__140.1656_54;
common/pixel.c:130:13: note: add new stmt: vect__141.1657_90 = [vec_unpack_lo_expr] vect__140.1656_159;
common/pixel.c:130:13: note: add new stmt: vect__141.1657_91 = [vec_unpack_hi_expr] vect__140.1656_159;
common/pixel.c:130:13: note: ------>vectorizing statement: i_ssd_142 = _141 + i_ssd_182;

common/pixel.c:130:13: note: multiple-types.
common/pixel.c:130:13: note: transform statement.
common/pixel.c:130:13: note: vect_is_simple_use: operand _141
common/pixel.c:130:13: note: def_stmt: _141 = (long int) _140;
common/pixel.c:130:13: note: type of def: 3.
common/pixel.c:130:13: note: vect_is_simple_use: operand i_ssd_182
common/pixel.c:130:13: note: def_stmt: i_ssd_182 = PHI <i_ssd_55(55), i_ssd_142(37)>
common/pixel.c:130:13: note: type of def: 5.
common/pixel.c:130:13: note: detected reduction: i_ssd_142 = _141 + i_ssd_182;

common/pixel.c:130:13: note: reduc op not supported by target.
common/pixel.c:130:13: note: transform reduction.
common/pixel.c:130:13: note: vect_get_vec_def_for_operand: _141
common/pixel.c:130:13: note: vect_is_simple_use: operand _141
common/pixel.c:130:13: note: def_stmt: _141 = (long int) _140;
common/pixel.c:130:13: note: type of def: 3.
common/pixel.c:130:13: note: def =  _141
  def_stmt =  _141 = (long int) _140;
common/pixel.c:130:13: note: add new stmt: vect_i_ssd_142.1658_105 = vect__141.1657_65 + vect_i_ssd_142.1658_104;
common/pixel.c:130:13: note: vect_is_simple_use: operand _141
common/pixel.c:130:13: note: def_stmt: _141 = (long int) _140;
common/pixel.c:130:13: note: type of def: 3.
common/pixel.c:130:13: note: add new stmt: vect_i_ssd_142.1658_111 = vect__141.1657_66 + vect_i_ssd_142.1658_105;
common/pixel.c:130:13: note: vect_is_simple_use: operand _141
common/pixel.c:130:13: note: def_stmt: _141 = (long int) _140;
common/pixel.c:130:13: note: type of def: 3.
common/pixel.c:130:13: note: add new stmt: vect_i_ssd_142.1658_127 = vect__141.1657_70 + vect_i_ssd_142.1658_111;
common/pixel.c:130:13: note: vect_is_simple_use: operand _141
common/pixel.c:130:13: note: def_stmt: _141 = (long int) _140;
common/pixel.c:130:13: note: type of def: 3.
common/pixel.c:130:13: note: add new stmt: vect_i_ssd_142.1658_133 = vect__141.1657_71 + vect_i_ssd_142.1658_127;
common/pixel.c:130:13: note: vect_is_simple_use: operand _141
common/pixel.c:130:13: note: def_stmt: _141 = (long int) _140;
common/pixel.c:130:13: note: type of def: 3.
common/pixel.c:130:13: note: add new stmt: vect_i_ssd_142.1658_239 = vect__141.1657_85 + vect_i_ssd_142.1658_133;
common/pixel.c:130:13: note: vect_is_simple_use: operand _141
common/pixel.c:130:13: note: def_stmt: _141 = (long int) _140;
common/pixel.c:130:13: note: type of def: 3.
common/pixel.c:130:13: note: add new stmt: vect_i_ssd_142.1658_240 = vect__141.1657_86 + vect_i_ssd_142.1658_239;
common/pixel.c:130:13: note: vect_is_simple_use: operand _141
common/pixel.c:130:13: note: def_stmt: _141 = (long int) _140;
common/pixel.c:130:13: note: type of def: 3.
common/pixel.c:130:13: note: add new stmt: vect_i_ssd_142.1658_241 = vect__141.1657_90 + vect_i_ssd_142.1658_240;
common/pixel.c:130:13: note: vect_is_simple_use: operand _141
common/pixel.c:130:13: note: def_stmt: _141 = (long int) _140;
common/pixel.c:130:13: note: type of def: 3.
common/pixel.c:130:13: note: add new stmt: vect_i_ssd_142.1658_242 = vect__141.1657_91 + vect_i_ssd_142.1658_241;
common/pixel.c:130:13: note: vect_is_simple_use: operand i_ssd_55
common/pixel.c:130:13: note: def_stmt: i_ssd_55 = PHI <i_ssd_8(43), i_ssd_183(42)>
common/pixel.c:130:13: note: type of def: 2.
common/pixel.c:130:13: note: vect_get_vec_def_for_operand: i_ssd_182
common/pixel.c:130:13: note: vect_is_simple_use: operand i_ssd_182
common/pixel.c:130:13: note: def_stmt: i_ssd_182 = PHI <i_ssd_55(55), i_ssd_142(37)>
common/pixel.c:130:13: note: type of def: 5.
common/pixel.c:130:13: note: def =  i_ssd_182
  def_stmt =  i_ssd_182 = PHI <i_ssd_55(55), i_ssd_142(37)>
common/pixel.c:130:13: note: transform reduction: created def-use cycle: vect_i_ssd_142.1658_104 = PHI <{ 0, 0 }(55), vect_i_ssd_142.1658_242(37)>

vect_i_ssd_142.1658_242 = vect__141.1657_91 + vect_i_ssd_142.1658_241;

common/pixel.c:130:13: note: Reduce using vector shifts
common/pixel.c:130:13: note: extract scalar result
common/pixel.c:130:13: note: ------>vectorizing statement: # DEBUG i_ssd => i_ssd_142

common/pixel.c:130:13: note: ------>vectorizing statement: x_143 = x_188 + 1;

common/pixel.c:130:13: note: ------>vectorizing statement: # DEBUG x => x_143

common/pixel.c:130:13: note: ------>vectorizing statement: # DEBUG x => x_143

common/pixel.c:130:13: note: ------>vectorizing statement: # DEBUG i_ssd => i_ssd_142

common/pixel.c:130:13: note: ------>vectorizing statement: vectp.1645_19 = vectp.1645_20 + 16;

common/pixel.c:130:13: note: ------>vectorizing statement: vectp.1650_4 = vectp.1650_6 + 16;

common/pixel.c:130:13: note: ------>vectorizing statement: if (i_width_44(D) > x_143)


loop at common/pixel.c:131: if (ivtmp_249 < bnd.1642_166)

;; Scaling loop 5 with scale 0.062500, bounding iterations to 0 from guessed 11
;; guessed iterations are now 1
common/pixel.c:130:13: note: LOOP VECTORIZED


Analyzing loop at common/pixel.c:123
common/pixel.c:123:9: note: ===== analyze_loop_nest =====
common/pixel.c:123:9: note: === vect_analyze_loop_form ===
common/pixel.c:123:9: note: ===== analyze_loop_nest_1 =====
common/pixel.c:123:9: note: === vect_analyze_loop_form ===
common/pixel.c:123:9: note: === get_loop_niters ===
Analyzing # of iterations of loop 6
  exit condition [pretmp_217 + 1, + , 1](no_overflow) < i_width_44(D)
  bounds on difference of bases: 0 ... 4294967294
Applying pattern match.pd:442, generic-match.c:3412
Applying pattern match.pd:628, generic-match.c:1309
  result:
    # of iterations ((unsigned int) i_width_44(D) - (unsigned int) pretmp_217) - 1, bounded by 4294967294
Applying pattern match.pd:475, generic-match.c:3649
common/pixel.c:123:9: note: Symbolic number of iterations is (unsigned int) i_width_44(D) - (unsigned int) pretmp_217
common/pixel.c:123:9: note: not vectorized: control flow in loop.
common/pixel.c:123:9: note: bad loop form.

Analyzing loop at common/pixel.c:124
common/pixel.c:124:13: note: ===== analyze_loop_nest =====
common/pixel.c:124:13: note: === vect_analyze_loop_form ===
common/pixel.c:124:13: note: === get_loop_niters ===
Applying pattern match.pd:475, generic-match.c:3649
common/pixel.c:124:13: note: Symbolic number of iterations is (unsigned int) i_width_44(D) - (unsigned int) pretmp_217
common/pixel.c:124:13: note: === vect_analyze_data_refs ===
Creating dr for *_108
analyze_innermost: success.
	base_address: pix1_25(D) + ((sizetype) pretmp_217 + (sizetype) pretmp_219)
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix1_25(D) + ((sizetype) pretmp_217 + (sizetype) pretmp_219)
	Access function 0: {0B, +, 1}_6
Creating dr for *_114
analyze_innermost: success.
	base_address: pix2_27(D) + ((sizetype) pretmp_217 + (sizetype) pretmp_220)
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *pix2_27(D) + ((sizetype) pretmp_217 + (sizetype) pretmp_220)
	Access function 0: {0B, +, 1}_6
common/pixel.c:124:13: note: got vectype for stmt: _109 = *_108;
vector(16) unsigned char
common/pixel.c:124:13: note: got vectype for stmt: _115 = *_114;
vector(16) unsigned char
common/pixel.c:124:13: note: === vect_analyze_scalar_cycles ===
common/pixel.c:124:13: note: Analyze phi: i_ssd_179 = PHI <i_ssd_181(28), i_ssd_120(31)>

common/pixel.c:124:13: note: Access function of PHI: {i_ssd_181, +, _119}_6
common/pixel.c:124:13: note: step: _119,  init: i_ssd_181
common/pixel.c:124:13: note: step unknown.
common/pixel.c:124:13: note: Analyze phi: x_187 = PHI <pretmp_217(28), x_121(31)>

common/pixel.c:124:13: note: Access function of PHI: {pretmp_217, +, 1}_6
common/pixel.c:124:13: note: step: 1,  init: pretmp_217
common/pixel.c:124:13: note: Detected induction.
common/pixel.c:124:13: note: Analyze phi: i_ssd_179 = PHI <i_ssd_181(28), i_ssd_120(31)>

common/pixel.c:124:13: note: detected reduction: i_ssd_120 = _119 + i_ssd_179;

common/pixel.c:124:13: note: Detected reduction.
common/pixel.c:124:13: note: === vect_pattern_recog ===
common/pixel.c:124:13: note: vect_is_simple_use: operand d_117
common/pixel.c:124:13: note: def_stmt: d_117 = _110 - _116;
common/pixel.c:124:13: note: type of def: 3.
common/pixel.c:124:13: note: vect_is_simple_use: operand _119
common/pixel.c:124:13: note: def_stmt: _119 = (long int) _118;
common/pixel.c:124:13: note: type of def: 3.
common/pixel.c:124:13: note: vect_is_simple_use: operand _118
common/pixel.c:124:13: note: def_stmt: _118 = d_117 * d_117;
common/pixel.c:124:13: note: type of def: 3.
common/pixel.c:124:13: note: vect_recog_widen_sum_pattern: detected: patt_250 = _118 w+ i_ssd_179;

common/pixel.c:124:13: note: vect_is_simple_use: operand _119
common/pixel.c:124:13: note: def_stmt: _119 = (long int) _118;
common/pixel.c:124:13: note: type of def: 3.
common/pixel.c:124:13: note: vect_is_simple_use: operand _118
common/pixel.c:124:13: note: def_stmt: _118 = d_117 * d_117;
common/pixel.c:124:13: note: type of def: 3.
common/pixel.c:124:13: note: vect_is_simple_use: operand d_117
common/pixel.c:124:13: note: def_stmt: d_117 = _110 - _116;
common/pixel.c:124:13: note: type of def: 3.
common/pixel.c:124:13: note: vect_is_simple_use: operand _119
common/pixel.c:124:13: note: def_stmt: _119 = (long int) _118;
common/pixel.c:124:13: note: type of def: 3.
common/pixel.c:124:13: note: vect_is_simple_use: operand _118
common/pixel.c:124:13: note: def_stmt: _118 = d_117 * d_117;
common/pixel.c:124:13: note: type of def: 3.
common/pixel.c:124:13: note: === vect_analyze_data_ref_accesses ===
common/pixel.c:124:13: note: === vect_mark_stmts_to_be_vectorized ===
common/pixel.c:124:13: note: init: phi relevant? i_ssd_179 = PHI <i_ssd_181(28), i_ssd_120(31)>
common/pixel.c:124:13: note: init: phi relevant? x_187 = PHI <pretmp_217(28), x_121(31)>
common/pixel.c:124:13: note: init: stmt relevant? # DEBUG x => x_187
common/pixel.c:124:13: note: init: stmt relevant? # DEBUG i_ssd => i_ssd_179
common/pixel.c:124:13: note: init: stmt relevant? _106 = x_187 + pretmp_219;
common/pixel.c:124:13: note: init: stmt relevant? _107 = (sizetype) _106;
common/pixel.c:124:13: note: init: stmt relevant? _108 = pix1_25(D) + _107;
common/pixel.c:124:13: note: init: stmt relevant? _109 = *_108;
common/pixel.c:124:13: note: init: stmt relevant? _110 = (int) _109;
common/pixel.c:124:13: note: init: stmt relevant? _112 = x_187 + pretmp_220;
common/pixel.c:124:13: note: init: stmt relevant? _113 = (sizetype) _112;
common/pixel.c:124:13: note: init: stmt relevant? _114 = pix2_27(D) + _113;
common/pixel.c:124:13: note: init: stmt relevant? _115 = *_114;
common/pixel.c:124:13: note: init: stmt relevant? _116 = (int) _115;
common/pixel.c:124:13: note: init: stmt relevant? d_117 = _110 - _116;
common/pixel.c:124:13: note: init: stmt relevant? # DEBUG d => d_117
common/pixel.c:124:13: note: init: stmt relevant? _118 = d_117 * d_117;
common/pixel.c:124:13: note: init: stmt relevant? _119 = (long int) _118;
common/pixel.c:124:13: note: init: stmt relevant? i_ssd_120 = _119 + i_ssd_179;
common/pixel.c:124:13: note: vec_stmt_relevant_p: used out of loop.
common/pixel.c:124:13: note: mark relevant 0, live 1.
common/pixel.c:124:13: note: init: stmt relevant? # DEBUG i_ssd => i_ssd_120
common/pixel.c:124:13: note: init: stmt relevant? x_121 = x_187 + 1;
common/pixel.c:124:13: note: init: stmt relevant? # DEBUG x => x_121
common/pixel.c:124:13: note: init: stmt relevant? # DEBUG x => x_121
common/pixel.c:124:13: note: init: stmt relevant? # DEBUG i_ssd => i_ssd_120
common/pixel.c:124:13: note: init: stmt relevant? if (i_width_44(D) > x_121)
common/pixel.c:124:13: note: worklist: examine stmt: i_ssd_120 = _119 + i_ssd_179;
common/pixel.c:124:13: note: vect_is_simple_use: operand _119
common/pixel.c:124:13: note: def_stmt: _119 = (long int) _118;
common/pixel.c:124:13: note: type of def: 3.
common/pixel.c:124:13: note: mark relevant 3, live 0.
common/pixel.c:124:13: note: vect_is_simple_use: operand i_ssd_179
common/pixel.c:124:13: note: def_stmt: i_ssd_179 = PHI <i_ssd_181(28), i_ssd_120(31)>
common/pixel.c:124:13: note: type of def: 5.
common/pixel.c:124:13: note: mark relevant 3, live 0.
common/pixel.c:124:13: note: worklist: examine stmt: i_ssd_179 = PHI <i_ssd_181(28), i_ssd_120(31)>
common/pixel.c:124:13: note: vect_is_simple_use: operand i_ssd_181
common/pixel.c:124:13: note: def_stmt: i_ssd_181 = PHI <i_ssd_5(26), i_ssd_180(34)>
common/pixel.c:124:13: note: type of def: 2.
common/pixel.c:124:13: note: def_stmt is out of loop.
common/pixel.c:124:13: note: vect_is_simple_use: operand i_ssd_120
common/pixel.c:124:13: note: def_stmt: i_ssd_120 = _119 + i_ssd_179;
common/pixel.c:124:13: note: type of def: 5.
common/pixel.c:124:13: note: reduc-stmt defining reduc-phi in the same nest.
common/pixel.c:124:13: note: worklist: examine stmt: _119 = (long int) _118;
common/pixel.c:124:13: note: vect_is_simple_use: operand _118
common/pixel.c:124:13: note: def_stmt: _118 = d_117 * d_117;
common/pixel.c:124:13: note: type of def: 3.
common/pixel.c:124:13: note: mark relevant 3, live 0.
common/pixel.c:124:13: note: worklist: examine stmt: _118 = d_117 * d_117;
common/pixel.c:124:13: note: vect_is_simple_use: operand d_117
common/pixel.c:124:13: note: def_stmt: d_117 = _110 - _116;
common/pixel.c:124:13: note: type of def: 3.
common/pixel.c:124:13: note: mark relevant 3, live 0.
common/pixel.c:124:13: note: vect_is_simple_use: operand d_117
common/pixel.c:124:13: note: def_stmt: d_117 = _110 - _116;
common/pixel.c:124:13: note: type of def: 3.
common/pixel.c:124:13: note: mark relevant 3, live 0.
common/pixel.c:124:13: note: already marked relevant/live.
common/pixel.c:124:13: note: worklist: examine stmt: d_117 = _110 - _116;
common/pixel.c:124:13: note: vect_is_simple_use: operand _110
common/pixel.c:124:13: note: def_stmt: _110 = (int) _109;
common/pixel.c:124:13: note: type of def: 3.
common/pixel.c:124:13: note: mark relevant 3, live 0.
common/pixel.c:124:13: note: vect_is_simple_use: operand _116
common/pixel.c:124:13: note: def_stmt: _116 = (int) _115;
common/pixel.c:124:13: note: type of def: 3.
common/pixel.c:124:13: note: mark relevant 3, live 0.
common/pixel.c:124:13: note: worklist: examine stmt: _116 = (int) _115;
common/pixel.c:124:13: note: vect_is_simple_use: operand _115
common/pixel.c:124:13: note: def_stmt: _115 = *_114;
common/pixel.c:124:13: note: type of def: 3.
common/pixel.c:124:13: note: mark relevant 3, live 0.
common/pixel.c:124:13: note: worklist: examine stmt: _115 = *_114;
common/pixel.c:124:13: note: worklist: examine stmt: _110 = (int) _109;
common/pixel.c:124:13: note: vect_is_simple_use: operand _109
common/pixel.c:124:13: note: def_stmt: _109 = *_108;
common/pixel.c:124:13: note: type of def: 3.
common/pixel.c:124:13: note: mark relevant 3, live 0.
common/pixel.c:124:13: note: worklist: examine stmt: _109 = *_108;
common/pixel.c:124:13: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _109 = *_108;
  stmt_b: _115 = *_114;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _109 = *_108;
  stmt_b: _109 = *_108;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_6)
  (chrec_b = {0B, +, 1}_6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _115 = *_114;
  stmt_b: _115 = *_114;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_6)
  (chrec_b = {0B, +, 1}_6)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/pixel.c:124:13: note: === vect_determine_vectorization_factor ===
common/pixel.c:124:13: note: ==> examining phi: i_ssd_179 = PHI <i_ssd_181(28), i_ssd_120(31)>

common/pixel.c:124:13: note: get vectype for scalar type:  int64_t
common/pixel.c:124:13: note: vectype: vector(2) long int
common/pixel.c:124:13: note: nunits = 2
common/pixel.c:124:13: note: ==> examining phi: x_187 = PHI <pretmp_217(28), x_121(31)>

common/pixel.c:124:13: note: ==> examining statement: # DEBUG x => x_187

common/pixel.c:124:13: note: skip.
common/pixel.c:124:13: note: ==> examining statement: # DEBUG i_ssd => i_ssd_179

common/pixel.c:124:13: note: skip.
common/pixel.c:124:13: note: ==> examining statement: _106 = x_187 + pretmp_219;

common/pixel.c:124:13: note: skip.
common/pixel.c:124:13: note: ==> examining statement: _107 = (sizetype) _106;

common/pixel.c:124:13: note: skip.
common/pixel.c:124:13: note: ==> examining statement: _108 = pix1_25(D) + _107;

common/pixel.c:124:13: note: skip.
common/pixel.c:124:13: note: ==> examining statement: _109 = *_108;

common/pixel.c:124:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:124:13: note: vectype: vector(16) unsigned char
common/pixel.c:124:13: note: nunits = 16
common/pixel.c:124:13: note: ==> examining statement: _110 = (int) _109;

common/pixel.c:124:13: note: get vectype for scalar type:  int
common/pixel.c:124:13: note: vectype: vector(4) int
common/pixel.c:124:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:124:13: note: vectype: vector(16) unsigned char
common/pixel.c:124:13: note: nunits = 16
common/pixel.c:124:13: note: ==> examining statement: _112 = x_187 + pretmp_220;

common/pixel.c:124:13: note: skip.
common/pixel.c:124:13: note: ==> examining statement: _113 = (sizetype) _112;

common/pixel.c:124:13: note: skip.
common/pixel.c:124:13: note: ==> examining statement: _114 = pix2_27(D) + _113;

common/pixel.c:124:13: note: skip.
common/pixel.c:124:13: note: ==> examining statement: _115 = *_114;

common/pixel.c:124:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:124:13: note: vectype: vector(16) unsigned char
common/pixel.c:124:13: note: nunits = 16
common/pixel.c:124:13: note: ==> examining statement: _116 = (int) _115;

common/pixel.c:124:13: note: get vectype for scalar type:  int
common/pixel.c:124:13: note: vectype: vector(4) int
common/pixel.c:124:13: note: get vectype for scalar type:  unsigned char
common/pixel.c:124:13: note: vectype: vector(16) unsigned char
common/pixel.c:124:13: note: nunits = 16
common/pixel.c:124:13: note: ==> examining statement: d_117 = _110 - _116;

common/pixel.c:124:13: note: get vectype for scalar type:  int
common/pixel.c:124:13: note: vectype: vector(4) int
common/pixel.c:124:13: note: get vectype for scalar type:  int
common/pixel.c:124:13: note: vectype: vector(4) int
common/pixel.c:124:13: note: nunits = 4
common/pixel.c:124:13: note: ==> examining statement: # DEBUG d => d_117

common/pixel.c:124:13: note: skip.
common/pixel.c:124:13: note: ==> examining statement: _118 = d_117 * d_117;

common/pixel.c:124:13: note: get vectype for scalar type:  int
common/pixel.c:124:13: note: vectype: vector(4) int
common/pixel.c:124:13: note: get vectype for scalar type:  int
common/pixel.c:124:13: note: vectype: vector(4) int
common/pixel.c:124:13: note: nunits = 4
common/pixel.c:124:13: note: ==> examining statement: _119 = (long int) _118;

common/pixel.c:124:13: note: get vectype for scalar type:  long int
common/pixel.c:124:13: note: vectype: vector(2) long int
common/pixel.c:124:13: note: get vectype for scalar type:  int
common/pixel.c:124:13: note: vectype: vector(4) int
common/pixel.c:124:13: note: nunits = 4
common/pixel.c:124:13: note: ==> examining statement: i_ssd_120 = _119 + i_ssd_179;

common/pixel.c:124:13: note: get vectype for scalar type:  int64_t
common/pixel.c:124:13: note: vectype: vector(2) long int
common/pixel.c:124:13: note: get vectype for scalar type:  int64_t
common/pixel.c:124:13: note: vectype: vector(2) long int
common/pixel.c:124:13: note: nunits = 2
common/pixel.c:124:13: note: ==> examining statement: # DEBUG i_ssd => i_ssd_120

common/pixel.c:124:13: note: skip.
common/pixel.c:124:13: note: ==> examining statement: x_121 = x_187 + 1;

common/pixel.c:124:13: note: skip.
common/pixel.c:124:13: note: ==> examining statement: # DEBUG x => x_121

common/pixel.c:124:13: note: skip.
common/pixel.c:124:13: note: ==> examining statement: # DEBUG x => x_121

common/pixel.c:124:13: note: skip.
common/pixel.c:124:13: note: ==> examining statement: # DEBUG i_ssd => i_ssd_120

common/pixel.c:124:13: note: skip.
common/pixel.c:124:13: note: ==> examining statement: if (i_width_44(D) > x_121)

common/pixel.c:124:13: note: skip.
common/pixel.c:124:13: note: vectorization factor = 16
common/pixel.c:124:13: note: === vect_analyze_data_refs_alignment ===
common/pixel.c:124:13: note: vect_compute_data_ref_alignment:
common/pixel.c:124:13: note: can't force alignment of ref: *_108
common/pixel.c:124:13: note: vect_compute_data_ref_alignment:
common/pixel.c:124:13: note: can't force alignment of ref: *_114
common/pixel.c:124:13: note: === vect_prune_runtime_alias_test_list ===
common/pixel.c:124:13: note: === vect_enhance_data_refs_alignment ===
common/pixel.c:124:13: note: Unknown misalignment, is_packed = 0
common/pixel.c:124:13: note: Unknown misalignment, is_packed = 0
common/pixel.c:124:13: note: vect_can_advance_ivs_p:
common/pixel.c:124:13: note: Analyze phi: i_ssd_179 = PHI <i_ssd_181(28), i_ssd_120(31)>

common/pixel.c:124:13: note: reduc phi. skip.
common/pixel.c:124:13: note: Analyze phi: x_187 = PHI <pretmp_217(28), x_121(31)>

common/pixel.c:124:13: note: Setting misalignment to -1.
common/pixel.c:124:13: note: Disable peeling, max peels reached: 15
common/pixel.c:124:13: note: Vectorizing an unaligned access.
common/pixel.c:124:13: note: Vectorizing an unaligned access.
common/pixel.c:124:13: note: === vect_analyze_slp ===
common/pixel.c:124:13: note: === vect_make_slp_decision ===
common/pixel.c:124:13: note: === vect_detect_hybrid_slp ===
common/pixel.c:124:13: note: === vect_analyze_loop_operations ===
common/pixel.c:124:13: note: examining phi: i_ssd_179 = PHI <i_ssd_181(28), i_ssd_120(31)>

common/pixel.c:124:13: note: examining phi: x_187 = PHI <pretmp_217(28), x_121(31)>

common/pixel.c:124:13: note: ==> examining statement: # DEBUG x => x_187
common/pixel.c:124:13: note: irrelevant.
common/pixel.c:124:13: note: ==> examining statement: # DEBUG i_ssd => i_ssd_179
common/pixel.c:124:13: note: irrelevant.
common/pixel.c:124:13: note: ==> examining statement: _106 = x_187 + pretmp_219;
common/pixel.c:124:13: note: irrelevant.
common/pixel.c:124:13: note: ==> examining statement: _107 = (sizetype) _106;
common/pixel.c:124:13: note: irrelevant.
common/pixel.c:124:13: note: ==> examining statement: _108 = pix1_25(D) + _107;
common/pixel.c:124:13: note: irrelevant.
common/pixel.c:124:13: note: ==> examining statement: _109 = *_108;
common/pixel.c:124:13: note: vect_is_simple_use: operand *_108
common/pixel.c:124:13: note: not ssa-name.
common/pixel.c:124:13: note: use not simple.
common/pixel.c:124:13: note: vect_is_simple_use: operand *_108
common/pixel.c:124:13: note: not ssa-name.
common/pixel.c:124:13: note: use not simple.
common/pixel.c:124:13: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:124:13: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:124:13: note: ==> examining statement: _110 = (int) _109;
common/pixel.c:124:13: note: vect_is_simple_use: operand _109
common/pixel.c:124:13: note: def_stmt: _109 = *_108;
common/pixel.c:124:13: note: type of def: 3.
common/pixel.c:124:13: note: === vectorizable_conversion ===
common/pixel.c:124:13: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:124:13: note: ==> examining statement: _112 = x_187 + pretmp_220;
common/pixel.c:124:13: note: irrelevant.
common/pixel.c:124:13: note: ==> examining statement: _113 = (sizetype) _112;
common/pixel.c:124:13: note: irrelevant.
common/pixel.c:124:13: note: ==> examining statement: _114 = pix2_27(D) + _113;
common/pixel.c:124:13: note: irrelevant.
common/pixel.c:124:13: note: ==> examining statement: _115 = *_114;
common/pixel.c:124:13: note: vect_is_simple_use: operand *_114
common/pixel.c:124:13: note: not ssa-name.
common/pixel.c:124:13: note: use not simple.
common/pixel.c:124:13: note: vect_is_simple_use: operand *_114
common/pixel.c:124:13: note: not ssa-name.
common/pixel.c:124:13: note: use not simple.
common/pixel.c:124:13: note: vect_model_load_cost: unaligned supported by hardware.
common/pixel.c:124:13: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:124:13: note: ==> examining statement: _116 = (int) _115;
common/pixel.c:124:13: note: vect_is_simple_use: operand _115
common/pixel.c:124:13: note: def_stmt: _115 = *_114;
common/pixel.c:124:13: note: type of def: 3.
common/pixel.c:124:13: note: === vectorizable_conversion ===
common/pixel.c:124:13: note: vect_model_promotion_demotion_cost: inside_cost = 6, prologue_cost = 0 .
common/pixel.c:124:13: note: ==> examining statement: d_117 = _110 - _116;
common/pixel.c:124:13: note: vect_is_simple_use: operand _110
common/pixel.c:124:13: note: def_stmt: _110 = (int) _109;
common/pixel.c:124:13: note: type of def: 3.
common/pixel.c:124:13: note: vect_is_simple_use: operand _116
common/pixel.c:124:13: note: def_stmt: _116 = (int) _115;
common/pixel.c:124:13: note: type of def: 3.
common/pixel.c:124:13: note: === vectorizable_operation ===
common/pixel.c:124:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:124:13: note: ==> examining statement: # DEBUG d => d_117
common/pixel.c:124:13: note: irrelevant.
common/pixel.c:124:13: note: ==> examining statement: _118 = d_117 * d_117;
common/pixel.c:124:13: note: vect_is_simple_use: operand d_117
common/pixel.c:124:13: note: def_stmt: d_117 = _110 - _116;
common/pixel.c:124:13: note: type of def: 3.
common/pixel.c:124:13: note: vect_is_simple_use: operand d_117
common/pixel.c:124:13: note: def_stmt: d_117 = _110 - _116;
common/pixel.c:124:13: note: type of def: 3.
common/pixel.c:124:13: note: === vectorizable_operation ===
common/pixel.c:124:13: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 0 .
common/pixel.c:124:13: note: ==> examining statement: _119 = (long int) _118;
common/pixel.c:124:13: note: vect_is_simple_use: operand _118
common/pixel.c:124:13: note: def_stmt: _118 = d_117 * d_117;
common/pixel.c:124:13: note: type of def: 3.
common/pixel.c:124:13: note: === vectorizable_conversion ===
common/pixel.c:124:13: note: vect_model_promotion_demotion_cost: inside_cost = 2, prologue_cost = 0 .
common/pixel.c:124:13: note: ==> examining statement: i_ssd_120 = _119 + i_ssd_179;
common/pixel.c:124:13: note: vect_is_simple_use: operand _119
common/pixel.c:124:13: note: def_stmt: _119 = (long int) _118;
common/pixel.c:124:13: note: type of def: 3.
common/pixel.c:124:13: note: vect_is_simple_use: operand i_ssd_179
common/pixel.c:124:13: note: def_stmt: i_ssd_179 = PHI <i_ssd_181(28), i_ssd_120(31)>
common/pixel.c:124:13: note: type of def: 5.
common/pixel.c:124:13: note: detected reduction: i_ssd_120 = _119 + i_ssd_179;

common/pixel.c:124:13: note: reduc op not supported by target.
vect_model_reduction_cost: inside_cost = 8, prologue_cost = 1, epilogue_cost = 3 .
common/pixel.c:124:13: note: ==> examining statement: # DEBUG i_ssd => i_ssd_120
common/pixel.c:124:13: note: irrelevant.
common/pixel.c:124:13: note: ==> examining statement: x_121 = x_187 + 1;
common/pixel.c:124:13: note: irrelevant.
common/pixel.c:124:13: note: ==> examining statement: # DEBUG x => x_121
common/pixel.c:124:13: note: irrelevant.
common/pixel.c:124:13: note: ==> examining statement: # DEBUG x => x_121
common/pixel.c:124:13: note: irrelevant.
common/pixel.c:124:13: note: ==> examining statement: # DEBUG i_ssd => i_ssd_120
common/pixel.c:124:13: note: irrelevant.
common/pixel.c:124:13: note: ==> examining statement: if (i_width_44(D) > x_121)
common/pixel.c:124:13: note: irrelevant.
common/pixel.c:124:13: note: === vect_update_slp_costs_according_to_vf ===
common/pixel.c:124:13: note: cost model: epilogue peel iters set to vf/2 because loop iterations are unknown .
common/pixel.c:124:13: note: Cost model analysis: 
  Vector inside of loop cost: 34
  Vector prologue cost: 7
  Vector epilogue cost: 67
  Scalar iteration cost: 8
  Scalar outside cost: 6
  Vector outside cost: 74
  prologue iterations: 0
  epilogue iterations: 8
  Calculated minimum iters for profitability: 9
common/pixel.c:124:13: note:   Runtime profitability threshold = 15
common/pixel.c:124:13: note:   Static estimate profitability threshold = 15
common/pixel.c:124:13: note: epilog loop required
common/pixel.c:124:13: note: vect_can_advance_ivs_p:
common/pixel.c:124:13: note: Analyze phi: i_ssd_179 = PHI <i_ssd_181(28), i_ssd_120(31)>

common/pixel.c:124:13: note: reduc phi. skip.
common/pixel.c:124:13: note: Analyze phi: x_187 = PHI <pretmp_217(28), x_121(31)>

common/pixel.c:124:13: note: loop vectorized
common/pixel.c:124:13: note: === vec_transform_loop ===
common/pixel.c:124:13: note: Profitability threshold is 15 loop iterations.
common/pixel.c:124:13: note: === vect_do_peeling_for_loop_bound ===
Removing basic block 56
basic block 56, loop depth 1
 pred:       28
 succ:      


;; Scaling loop 6 with scale 0.666600, bounding iterations to 15 from guessed 16
;; guessed iterations are now 11
;; Scaling loop 10 with scale 0.777800, bounding iterations to 16 from guessed 13
;; guessed iterations are now 11
common/pixel.c:124:13: note: vect_update_ivs_after_vectorizer: phi: i_ssd_179 = PHI <i_ssd_181(60), i_ssd_120(31)>

common/pixel.c:124:13: note: reduc phi. skip.
common/pixel.c:124:13: note: vect_update_ivs_after_vectorizer: phi: x_187 = PHI <pretmp_217(60), x_121(31)>

Applying pattern match.pd:114, generic-match.c:6569
Setting upper bound of nb iterations for epilogue loop to 14
common/pixel.c:124:13: note: ------>vectorizing phi: i_ssd_179 = PHI <i_ssd_181(64), i_ssd_120(31)>

common/pixel.c:124:13: note: multiple-types.
common/pixel.c:124:13: note: ------>vectorizing phi: x_187 = PHI <pretmp_217(64), x_121(31)>

common/pixel.c:124:13: note: ------>vectorizing statement: # DEBUG x => x_187

common/pixel.c:124:13: note: ------>vectorizing statement: # DEBUG i_ssd => i_ssd_179

common/pixel.c:124:13: note: ------>vectorizing statement: _106 = x_187 + pretmp_219;

common/pixel.c:124:13: note: ------>vectorizing statement: _107 = (sizetype) _106;

common/pixel.c:124:13: note: ------>vectorizing statement: _108 = pix1_25(D) + _107;

common/pixel.c:124:13: note: ------>vectorizing statement: _109 = *_108;

common/pixel.c:124:13: note: transform statement.
common/pixel.c:124:13: note: transform load. ncopies = 1
common/pixel.c:124:13: note: create vector_type-pointer variable to type: vector(16) unsigned char  vectorizing a pointer ref: *pix1_25(D) + ((sizetype) pretmp_217 + (sizetype) pretmp_219)
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:124:13: note: created vectp.1667_287
common/pixel.c:124:13: note: add new stmt: vect__109.1668_293 = MEM[(uint8_t *)vectp.1666_291];
common/pixel.c:124:13: note: ------>vectorizing statement: _110 = (int) _109;

common/pixel.c:124:13: note: multiple-types.
common/pixel.c:124:13: note: transform statement.
common/pixel.c:124:13: note: vect_is_simple_use: operand _109
common/pixel.c:124:13: note: def_stmt: _109 = *_108;
common/pixel.c:124:13: note: type of def: 3.
common/pixel.c:124:13: note: transform conversion. ncopies = 1.
common/pixel.c:124:13: note: vect_get_vec_def_for_operand: _109
common/pixel.c:124:13: note: vect_is_simple_use: operand _109
common/pixel.c:124:13: note: def_stmt: _109 = *_108;
common/pixel.c:124:13: note: type of def: 3.
common/pixel.c:124:13: note: def =  _109
  def_stmt =  _109 = *_108;
common/pixel.c:124:13: note: add new stmt: vect__110.1670_294 = [vec_unpack_lo_expr] vect__109.1668_293;
common/pixel.c:124:13: note: add new stmt: vect__110.1670_295 = [vec_unpack_hi_expr] vect__109.1668_293;
common/pixel.c:124:13: note: add new stmt: vect__110.1669_296 = [vec_unpack_lo_expr] vect__110.1670_294;
common/pixel.c:124:13: note: add new stmt: vect__110.1669_297 = [vec_unpack_hi_expr] vect__110.1670_294;
common/pixel.c:124:13: note: add new stmt: vect__110.1669_298 = [vec_unpack_lo_expr] vect__110.1670_295;
common/pixel.c:124:13: note: add new stmt: vect__110.1669_299 = [vec_unpack_hi_expr] vect__110.1670_295;
common/pixel.c:124:13: note: ------>vectorizing statement: _112 = x_187 + pretmp_220;

common/pixel.c:124:13: note: ------>vectorizing statement: _113 = (sizetype) _112;

common/pixel.c:124:13: note: ------>vectorizing statement: _114 = pix2_27(D) + _113;

common/pixel.c:124:13: note: ------>vectorizing statement: _115 = *_114;

common/pixel.c:124:13: note: transform statement.
common/pixel.c:124:13: note: transform load. ncopies = 1
common/pixel.c:124:13: note: create vector_type-pointer variable to type: vector(16) unsigned char  vectorizing a pointer ref: *pix2_27(D) + ((sizetype) pretmp_217 + (sizetype) pretmp_220)
Applying pattern match.pd:49, generic-match.c:4015
common/pixel.c:124:13: note: created vectp.1672_300
common/pixel.c:124:13: note: add new stmt: vect__115.1673_306 = MEM[(uint8_t *)vectp.1671_304];
common/pixel.c:124:13: note: ------>vectorizing statement: _116 = (int) _115;

common/pixel.c:124:13: note: multiple-types.
common/pixel.c:124:13: note: transform statement.
common/pixel.c:124:13: note: vect_is_simple_use: operand _115
common/pixel.c:124:13: note: def_stmt: _115 = *_114;
common/pixel.c:124:13: note: type of def: 3.
common/pixel.c:124:13: note: transform conversion. ncopies = 1.
common/pixel.c:124:13: note: vect_get_vec_def_for_operand: _115
common/pixel.c:124:13: note: vect_is_simple_use: operand _115
common/pixel.c:124:13: note: def_stmt: _115 = *_114;
common/pixel.c:124:13: note: type of def: 3.
common/pixel.c:124:13: note: def =  _115
  def_stmt =  _115 = *_114;
common/pixel.c:124:13: note: add new stmt: vect__116.1675_307 = [vec_unpack_lo_expr] vect__115.1673_306;
common/pixel.c:124:13: note: add new stmt: vect__116.1675_308 = [vec_unpack_hi_expr] vect__115.1673_306;
common/pixel.c:124:13: note: add new stmt: vect__116.1674_309 = [vec_unpack_lo_expr] vect__116.1675_307;
common/pixel.c:124:13: note: add new stmt: vect__116.1674_310 = [vec_unpack_hi_expr] vect__116.1675_307;
common/pixel.c:124:13: note: add new stmt: vect__116.1674_311 = [vec_unpack_lo_expr] vect__116.1675_308;
common/pixel.c:124:13: note: add new stmt: vect__116.1674_312 = [vec_unpack_hi_expr] vect__116.1675_308;
common/pixel.c:124:13: note: ------>vectorizing statement: d_117 = _110 - _116;

common/pixel.c:124:13: note: multiple-types.
common/pixel.c:124:13: note: transform statement.
common/pixel.c:124:13: note: vect_is_simple_use: operand _110
common/pixel.c:124:13: note: def_stmt: _110 = (int) _109;
common/pixel.c:124:13: note: type of def: 3.
common/pixel.c:124:13: note: vect_is_simple_use: operand _116
common/pixel.c:124:13: note: def_stmt: _116 = (int) _115;
common/pixel.c:124:13: note: type of def: 3.
common/pixel.c:124:13: note: transform binary/unary operation.
common/pixel.c:124:13: note: vect_get_vec_def_for_operand: _110
common/pixel.c:124:13: note: vect_is_simple_use: operand _110
common/pixel.c:124:13: note: def_stmt: _110 = (int) _109;
common/pixel.c:124:13: note: type of def: 3.
common/pixel.c:124:13: note: def =  _110
  def_stmt =  _110 = (int) _109;
common/pixel.c:124:13: note: vect_get_vec_def_for_operand: _116
common/pixel.c:124:13: note: vect_is_simple_use: operand _116
common/pixel.c:124:13: note: def_stmt: _116 = (int) _115;
common/pixel.c:124:13: note: type of def: 3.
common/pixel.c:124:13: note: def =  _116
  def_stmt =  _116 = (int) _115;
common/pixel.c:124:13: note: add new stmt: vect_d_117.1676_313 = vect__110.1669_296 - vect__116.1674_309;
common/pixel.c:124:13: note: add new stmt: vect_d_117.1676_314 = vect__110.1669_297 - vect__116.1674_310;
common/pixel.c:124:13: note: add new stmt: vect_d_117.1676_315 = vect__110.1669_298 - vect__116.1674_311;
common/pixel.c:124:13: note: add new stmt: vect_d_117.1676_316 = vect__110.1669_299 - vect__116.1674_312;
common/pixel.c:124:13: note: ------>vectorizing statement: # DEBUG d => d_117

common/pixel.c:124:13: note: ------>vectorizing statement: _118 = d_117 * d_117;

common/pixel.c:124:13: note: multiple-types.
common/pixel.c:124:13: note: transform statement.
common/pixel.c:124:13: note: vect_is_simple_use: operand d_117
common/pixel.c:124:13: note: def_stmt: d_117 = _110 - _116;
common/pixel.c:124:13: note: type of def: 3.
common/pixel.c:124:13: note: vect_is_simple_use: operand d_117
common/pixel.c:124:13: note: def_stmt: d_117 = _110 - _116;
common/pixel.c:124:13: note: type of def: 3.
common/pixel.c:124:13: note: transform binary/unary operation.
common/pixel.c:124:13: note: vect_get_vec_def_for_operand: d_117
common/pixel.c:124:13: note: vect_is_simple_use: operand d_117
common/pixel.c:124:13: note: def_stmt: d_117 = _110 - _116;
common/pixel.c:124:13: note: type of def: 3.
common/pixel.c:124:13: note: def =  d_117
  def_stmt =  d_117 = _110 - _116;
common/pixel.c:124:13: note: vect_get_vec_def_for_operand: d_117
common/pixel.c:124:13: note: vect_is_simple_use: operand d_117
common/pixel.c:124:13: note: def_stmt: d_117 = _110 - _116;
common/pixel.c:124:13: note: type of def: 3.
common/pixel.c:124:13: note: def =  d_117
  def_stmt =  d_117 = _110 - _116;
common/pixel.c:124:13: note: add new stmt: vect__118.1677_317 = vect_d_117.1676_313 * vect_d_117.1676_313;
common/pixel.c:124:13: note: add new stmt: vect__118.1677_318 = vect_d_117.1676_314 * vect_d_117.1676_314;
common/pixel.c:124:13: note: add new stmt: vect__118.1677_319 = vect_d_117.1676_315 * vect_d_117.1676_315;
common/pixel.c:124:13: note: add new stmt: vect__118.1677_320 = vect_d_117.1676_316 * vect_d_117.1676_316;
common/pixel.c:124:13: note: ------>vectorizing statement: _119 = (long int) _118;

common/pixel.c:124:13: note: multiple-types.
common/pixel.c:124:13: note: transform statement.
common/pixel.c:124:13: note: vect_is_simple_use: operand _118
common/pixel.c:124:13: note: def_stmt: _118 = d_117 * d_117;
common/pixel.c:124:13: note: type of def: 3.
common/pixel.c:124:13: note: transform conversion. ncopies = 4.
common/pixel.c:124:13: note: vect_get_vec_def_for_operand: _118
common/pixel.c:124:13: note: vect_is_simple_use: operand _118
common/pixel.c:124:13: note: def_stmt: _118 = d_117 * d_117;
common/pixel.c:124:13: note: type of def: 3.
common/pixel.c:124:13: note: def =  _118
  def_stmt =  _118 = d_117 * d_117;
common/pixel.c:124:13: note: add new stmt: vect__119.1678_321 = [vec_unpack_lo_expr] vect__118.1677_317;
common/pixel.c:124:13: note: add new stmt: vect__119.1678_322 = [vec_unpack_hi_expr] vect__118.1677_317;
common/pixel.c:124:13: note: add new stmt: vect__119.1678_323 = [vec_unpack_lo_expr] vect__118.1677_318;
common/pixel.c:124:13: note: add new stmt: vect__119.1678_324 = [vec_unpack_hi_expr] vect__118.1677_318;
common/pixel.c:124:13: note: add new stmt: vect__119.1678_325 = [vec_unpack_lo_expr] vect__118.1677_319;
common/pixel.c:124:13: note: add new stmt: vect__119.1678_326 = [vec_unpack_hi_expr] vect__118.1677_319;
common/pixel.c:124:13: note: add new stmt: vect__119.1678_327 = [vec_unpack_lo_expr] vect__118.1677_320;
common/pixel.c:124:13: note: add new stmt: vect__119.1678_328 = [vec_unpack_hi_expr] vect__118.1677_320;
common/pixel.c:124:13: note: ------>vectorizing statement: i_ssd_120 = _119 + i_ssd_179;

common/pixel.c:124:13: note: multiple-types.
common/pixel.c:124:13: note: transform statement.
common/pixel.c:124:13: note: vect_is_simple_use: operand _119
common/pixel.c:124:13: note: def_stmt: _119 = (long int) _118;
common/pixel.c:124:13: note: type of def: 3.
common/pixel.c:124:13: note: vect_is_simple_use: operand i_ssd_179
common/pixel.c:124:13: note: def_stmt: i_ssd_179 = PHI <i_ssd_181(64), i_ssd_120(31)>
common/pixel.c:124:13: note: type of def: 5.
common/pixel.c:124:13: note: detected reduction: i_ssd_120 = _119 + i_ssd_179;

common/pixel.c:124:13: note: reduc op not supported by target.
common/pixel.c:124:13: note: transform reduction.
common/pixel.c:124:13: note: vect_get_vec_def_for_operand: _119
common/pixel.c:124:13: note: vect_is_simple_use: operand _119
common/pixel.c:124:13: note: def_stmt: _119 = (long int) _118;
common/pixel.c:124:13: note: type of def: 3.
common/pixel.c:124:13: note: def =  _119
  def_stmt =  _119 = (long int) _118;
common/pixel.c:124:13: note: add new stmt: vect_i_ssd_120.1679_330 = vect__119.1678_321 + vect_i_ssd_120.1679_329;
common/pixel.c:124:13: note: vect_is_simple_use: operand _119
common/pixel.c:124:13: note: def_stmt: _119 = (long int) _118;
common/pixel.c:124:13: note: type of def: 3.
common/pixel.c:124:13: note: add new stmt: vect_i_ssd_120.1679_331 = vect__119.1678_322 + vect_i_ssd_120.1679_330;
common/pixel.c:124:13: note: vect_is_simple_use: operand _119
common/pixel.c:124:13: note: def_stmt: _119 = (long int) _118;
common/pixel.c:124:13: note: type of def: 3.
common/pixel.c:124:13: note: add new stmt: vect_i_ssd_120.1679_332 = vect__119.1678_323 + vect_i_ssd_120.1679_331;
common/pixel.c:124:13: note: vect_is_simple_use: operand _119
common/pixel.c:124:13: note: def_stmt: _119 = (long int) _118;
common/pixel.c:124:13: note: type of def: 3.
common/pixel.c:124:13: note: add new stmt: vect_i_ssd_120.1679_333 = vect__119.1678_324 + vect_i_ssd_120.1679_332;
common/pixel.c:124:13: note: vect_is_simple_use: operand _119
common/pixel.c:124:13: note: def_stmt: _119 = (long int) _118;
common/pixel.c:124:13: note: type of def: 3.
common/pixel.c:124:13: note: add new stmt: vect_i_ssd_120.1679_334 = vect__119.1678_325 + vect_i_ssd_120.1679_333;
common/pixel.c:124:13: note: vect_is_simple_use: operand _119
common/pixel.c:124:13: note: def_stmt: _119 = (long int) _118;
common/pixel.c:124:13: note: type of def: 3.
common/pixel.c:124:13: note: add new stmt: vect_i_ssd_120.1679_335 = vect__119.1678_326 + vect_i_ssd_120.1679_334;
common/pixel.c:124:13: note: vect_is_simple_use: operand _119
common/pixel.c:124:13: note: def_stmt: _119 = (long int) _118;
common/pixel.c:124:13: note: type of def: 3.
common/pixel.c:124:13: note: add new stmt: vect_i_ssd_120.1679_336 = vect__119.1678_327 + vect_i_ssd_120.1679_335;
common/pixel.c:124:13: note: vect_is_simple_use: operand _119
common/pixel.c:124:13: note: def_stmt: _119 = (long int) _118;
common/pixel.c:124:13: note: type of def: 3.
common/pixel.c:124:13: note: add new stmt: vect_i_ssd_120.1679_337 = vect__119.1678_328 + vect_i_ssd_120.1679_336;
common/pixel.c:124:13: note: vect_is_simple_use: operand i_ssd_181
common/pixel.c:124:13: note: def_stmt: i_ssd_181 = PHI <i_ssd_5(26), i_ssd_180(34)>
common/pixel.c:124:13: note: type of def: 2.
common/pixel.c:124:13: note: vect_get_vec_def_for_operand: i_ssd_179
common/pixel.c:124:13: note: vect_is_simple_use: operand i_ssd_179
common/pixel.c:124:13: note: def_stmt: i_ssd_179 = PHI <i_ssd_181(64), i_ssd_120(31)>
common/pixel.c:124:13: note: type of def: 5.
common/pixel.c:124:13: note: def =  i_ssd_179
  def_stmt =  i_ssd_179 = PHI <i_ssd_181(64), i_ssd_120(31)>
common/pixel.c:124:13: note: transform reduction: created def-use cycle: vect_i_ssd_120.1679_329 = PHI <{ 0, 0 }(64), vect_i_ssd_120.1679_337(31)>

vect_i_ssd_120.1679_337 = vect__119.1678_328 + vect_i_ssd_120.1679_336;

common/pixel.c:124:13: note: Reduce using vector shifts
common/pixel.c:124:13: note: extract scalar result
common/pixel.c:124:13: note: ------>vectorizing statement: # DEBUG i_ssd => i_ssd_120

common/pixel.c:124:13: note: ------>vectorizing statement: x_121 = x_187 + 1;

common/pixel.c:124:13: note: ------>vectorizing statement: # DEBUG x => x_121

common/pixel.c:124:13: note: ------>vectorizing statement: # DEBUG x => x_121

common/pixel.c:124:13: note: ------>vectorizing statement: # DEBUG i_ssd => i_ssd_120

common/pixel.c:124:13: note: ------>vectorizing statement: vectp.1666_292 = vectp.1666_291 + 16;

common/pixel.c:124:13: note: ------>vectorizing statement: vectp.1671_305 = vectp.1671_304 + 16;

common/pixel.c:124:13: note: ------>vectorizing statement: if (i_width_44(D) > x_121)


loop at common/pixel.c:125: if (ivtmp_344 < bnd.1663_254)

;; Scaling loop 6 with scale 0.062500, bounding iterations to 0 from guessed 11
;; guessed iterations are now 1
common/pixel.c:124:13: note: LOOP VECTORIZED


Analyzing loop at common/pixel.c:116
common/pixel.c:116:9: note: ===== analyze_loop_nest =====
common/pixel.c:116:9: note: === vect_analyze_loop_form ===
common/pixel.c:116:9: note: === get_loop_niters ===
Analyzing # of iterations of loop 2
  exit condition [8, + , 8](no_overflow) < i_width_44(D) + -7
  bounds on difference of bases: -7 ... 2147483632
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:129, generic-match.c:6863
  result:
    # of iterations ((unsigned int) i_width_44(D) + 4294967288) / 8, bounded by 268435454
common/pixel.c:116:9: note: Symbolic number of iterations is ((unsigned int) i_width_44(D) + 4294967288) / 8 + 1
common/pixel.c:116:9: note: === vect_analyze_data_refs ===
Creating dr for pf_46(D)->ssd[3]
analyze_innermost: success.
	base_address: pf_46(D)
	offset from base address: 0
	constant offset from base address: 80
	step: 0
	aligned to: 128
	base_object: *pf_46(D)
	Access function 0: 3
	Access function 1: 448
common/pixel.c:116:9: note: not vectorized: loop contains function calls or data references that cannot be analyzed
common/pixel.c:116:9: note: bad data references.

Analyzing loop at common/pixel.c:106
common/pixel.c:106:5: note: ===== analyze_loop_nest =====
common/pixel.c:106:5: note: === vect_analyze_loop_form ===
common/pixel.c:106:5: note: not vectorized: multiple nested loops.
common/pixel.c:106:5: note: bad loop form.

Analyzing loop at common/pixel.c:112
common/pixel.c:112:9: note: ===== analyze_loop_nest =====
common/pixel.c:112:9: note: === vect_analyze_loop_form ===
common/pixel.c:112:9: note: === get_loop_niters ===
Analyzing # of iterations of loop 8
  exit condition [x_38 + 8, + , 8](no_overflow) < i_width_44(D) + -7
  bounds on difference of bases: -7 ... 4294967280
Applying pattern match.pd:442, generic-match.c:3412
Applying pattern match.pd:628, generic-match.c:1309
Applying pattern match.pd:494, generic-match.c:3762
Applying pattern match.pd:129, generic-match.c:6863
  result:
    # of iterations (((unsigned int) i_width_44(D) - (unsigned int) x_38) + 4294967288) / 8, bounded by 536870910
common/pixel.c:112:9: note: Symbolic number of iterations is (((unsigned int) i_width_44(D) - (unsigned int) x_38) + 4294967288) / 8 + 1
common/pixel.c:112:9: note: === vect_analyze_data_refs ===
Creating dr for pf_46(D)->ssd[2]
analyze_innermost: success.
	base_address: pf_46(D)
	offset from base address: 0
	constant offset from base address: 72
	step: 0
	aligned to: 128
	base_object: *pf_46(D)
	Access function 0: 2
	Access function 1: 448
common/pixel.c:112:9: note: not vectorized: loop contains function calls or data references that cannot be analyzed
common/pixel.c:112:9: note: bad data references.

Analyzing loop at common/pixel.c:110
common/pixel.c:110:13: note: ===== analyze_loop_nest =====
common/pixel.c:110:13: note: === vect_analyze_loop_form ===
common/pixel.c:110:13: note: === get_loop_niters ===
Analyzing # of iterations of loop 7
  exit condition [16, + , 16](no_overflow) < i_width_44(D) + -15
  bounds on difference of bases: -15 ... 2147483616
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:129, generic-match.c:6863
  result:
    # of iterations ((unsigned int) i_width_44(D) + 4294967280) / 16, bounded by 134217726
common/pixel.c:110:13: note: Symbolic number of iterations is ((unsigned int) i_width_44(D) + 4294967280) / 16 + 1
common/pixel.c:110:13: note: === vect_analyze_data_refs ===
Creating dr for pf_46(D)->ssd[0]
analyze_innermost: success.
	base_address: pf_46(D)
	offset from base address: 0
	constant offset from base address: 56
	step: 0
	aligned to: 128
	base_object: *pf_46(D)
	Access function 0: 0
	Access function 1: 448
common/pixel.c:110:13: note: not vectorized: loop contains function calls or data references that cannot be analyzed
common/pixel.c:110:13: note: bad data references.
common/pixel.c:98:9: note: vectorized 2 loops in function.
Merging blocks 28 and 60
Merging blocks 45 and 51
Merging blocks 53 and 39
Merging blocks 62 and 30
x264_pixel_ssd_wxh (struct x264_pixel_function_t * pf, uint8_t * pix1, int i_pix1, uint8_t * pix2, int i_pix2, int i_width, int i_height)
{
  int64_t vect_i_ssd_120.1682;
  vector(2) long int vect_i_ssd_120.1681;
  int64_t stmp_i_ssd_120.1680;
  vector(2) long int vect_i_ssd_120.1679;
  vector(2) long int vect__119.1678;
  vector(4) int vect__118.1677;
  vector(4) int vect_d_117.1676;
  vector(8) short unsigned int vect__116.1675;
  vector(4) int vect__116.1674;
  vector(16) unsigned char vect__115.1673;
  vector(16) unsigned char * vectp.1672;
  vector(16) unsigned char * vectp.1671;
  vector(8) short unsigned int vect__110.1670;
  vector(4) int vect__110.1669;
  vector(16) unsigned char vect__109.1668;
  vector(16) unsigned char * vectp.1667;
  vector(16) unsigned char * vectp.1666;
  int tmp.1665;
  unsigned int ratio_mult_vf.1664;
  unsigned int bnd.1663;
  unsigned int niters.1662;
  int64_t vect_i_ssd_142.1661;
  vector(2) long int vect_i_ssd_142.1660;
  int64_t stmp_i_ssd_142.1659;
  vector(2) long int vect_i_ssd_142.1658;
  vector(2) long int vect__141.1657;
  vector(4) int vect__140.1656;
  vector(4) int vect_d_139.1655;
  vector(8) short unsigned int vect__138.1654;
  vector(4) int vect__138.1653;
  vector(16) unsigned char vect__137.1652;
  vector(16) unsigned char * vectp.1651;
  vector(16) unsigned char * vectp.1650;
  vector(8) short unsigned int vect__132.1649;
  vector(4) int vect__132.1648;
  vector(16) unsigned char vect__131.1647;
  vector(16) unsigned char * vectp.1646;
  vector(16) unsigned char * vectp.1645;
  int tmp.1644;
  unsigned int ratio_mult_vf.1643;
  unsigned int bnd.1642;
  unsigned int niters.1641;
  int d;
  int d;
  int y;
  int x;
  int64_t i_ssd;
  sizetype _7;
  long int _16;
  sizetype _21;
  long int pix1.0_26;
  long int pix2.1_28;
  unsigned int _31;
  unsigned int _34;
  long int _35;
  long int _36;
  unsigned int _45;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _47;
  sizetype _50;
  sizetype _51;
  uint8_t * _52;
  sizetype _56;
  uint8_t * _57;
  int _59;
  long int _60;
  int _63;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _64;
  sizetype _67;
  sizetype _68;
  uint8_t * _69;
  long int _72;
  sizetype _73;
  uint8_t * _74;
  int _76;
  long int _77;
  int _81;
  unsigned int _82;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _84;
  sizetype _87;
  sizetype _88;
  uint8_t * _89;
  sizetype _93;
  uint8_t * _94;
  int _96;
  long int _97;
  unsigned int i_width.2_100;
  unsigned int _101;
  long int _103;
  int _106;
  sizetype _107;
  uint8_t * _108;
  unsigned char _109;
  int _110;
  int _112;
  sizetype _113;
  uint8_t * _114;
  unsigned char _115;
  int _116;
  int _118;
  long int _119;
  unsigned int i_height.3_123;
  unsigned int _124;
  int _128;
  sizetype _129;
  uint8_t * _130;
  unsigned char _131;
  int _132;
  int _134;
  sizetype _135;
  uint8_t * _136;
  unsigned char _137;
  int _138;
  int _140;
  long int _141;
  int _145;
  int _147;
  unsigned char _148;
  uint8_t * _149;
  sizetype _150;
  int _151;
  int _152;
  unsigned char _153;
  uint8_t * _154;
  sizetype _155;
  int _156;
  int _158;
  int _160;
  unsigned int _163;
  unsigned int _164;
  int _165;
  long int patt_168;
  int _169;
  int _170;
  unsigned int _171;
  int _172;
  unsigned int _199;
  unsigned int _200;
  int _201;
  int _212;
  unsigned int _213;
  int pretmp_214;
  int pretmp_215;
  int pretmp_217;
  int pretmp_219;
  int pretmp_220;
  int pretmp_221;
  sizetype pretmp_222;
  int pretmp_224;
  sizetype pretmp_225;
  int pretmp_228;
  int pretmp_229;
  sizetype pretmp_230;
  int pretmp_231;
  sizetype pretmp_232;
  int pretmp_235;
  sizetype pretmp_236;
  int pretmp_237;
  sizetype pretmp_238;
  unsigned int ivtmp_248;
  unsigned int ivtmp_249;
  long int patt_250;
  unsigned int _252;
  unsigned int _253;
  unsigned int _255;
  unsigned int _256;
  int _260;
  sizetype _261;
  uint8_t * _262;
  unsigned char _263;
  int _264;
  int _265;
  sizetype _266;
  uint8_t * _267;
  unsigned char _268;
  int _269;
  int _271;
  long int _272;
  unsigned int _275;
  unsigned int _276;
  unsigned int _277;
  unsigned int _278;
  int _286;
  sizetype _288;
  sizetype _289;
  sizetype _290;
  sizetype _301;
  sizetype _302;
  sizetype _303;
  unsigned int ivtmp_343;
  unsigned int ivtmp_344;

  <bb 2>:
  # DEBUG i_ssd => 0
  pix1.0_26 = (long int) pix1_25(D);
  pix2.1_28 = (long int) pix2_27(D);
  _63 = i_pix1_30(D) | i_pix2_33(D);
  _16 = (long int) _63;
  _72 = _16 | pix2.1_28;
  _35 = pix1.0_26 | _72;
  _36 = _35 & 15;
  # DEBUG D#1 => _36 == 0
  # DEBUG align => (int) D#1
  # DEBUG y => 0
  # DEBUG y => 0
  # DEBUG i_ssd => 0
  _160 = i_height_41(D) + -15;
  if (_160 > 0)
    goto <bb 3>;
  else
    goto <bb 18>;

  <bb 3>:
  pretmp_228 = i_width_44(D) + -7;

  <bb 4>:
  # i_ssd_176 = PHI <0(3), i_ssd_175(17)>
  # y_189 = PHI <0(3), y_80(17)>
  # DEBUG y => y_189
  # DEBUG i_ssd => i_ssd_176
  # DEBUG x => 0
  if (_36 == 0)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  # DEBUG x => 0
  # DEBUG i_ssd => i_ssd_176
  _172 = i_width_44(D) + -15;
  if (_172 > 0)
    goto <bb 7>;
  else
    goto <bb 6>;

  <bb 6>:
  # i_ssd_126 = PHI <i_ssd_176(4), i_ssd_211(9), i_ssd_176(5)>
  # x_38 = PHI <0(4), x_210(9), 0(5)>
  # DEBUG x => x_38
  # DEBUG i_ssd => i_ssd_126
  if (x_38 < pretmp_228)
    goto <bb 11>;
  else
    goto <bb 15>;

  <bb 7>:
  pretmp_235 = i_pix2_33(D) * y_189;
  pretmp_236 = (sizetype) pretmp_235;
  pretmp_237 = i_pix1_30(D) * y_189;
  pretmp_238 = (sizetype) pretmp_237;

  <bb 8>:
  # i_ssd_173 = PHI <i_ssd_176(7), i_ssd_61(10)>
  # x_184 = PHI <0(7), x_62(10)>
  # DEBUG x => x_184
  # DEBUG i_ssd => i_ssd_173
  _47 = pf_46(D)->ssd[0];
  _50 = (sizetype) x_184;
  _51 = _50 + pretmp_236;
  _52 = pix2_27(D) + _51;
  _56 = _50 + pretmp_238;
  _57 = pix1_25(D) + _56;
  _59 = _47 (_57, i_pix1_30(D), _52, i_pix2_33(D));
  _60 = (long int) _59;
  i_ssd_61 = _60 + i_ssd_173;
  # DEBUG i_ssd => i_ssd_61
  x_62 = x_184 + 16;
  # DEBUG x => x_62
  # DEBUG x => x_62
  # DEBUG i_ssd => i_ssd_61
  if (x_62 < _172)
    goto <bb 10>;
  else
    goto <bb 9>;

  <bb 9>:
  # i_ssd_211 = PHI <i_ssd_61(8)>
  _31 = (unsigned int) i_width_44(D);
  _34 = _31 + 4294967280;
  _213 = _34 / 16;
  _212 = (int) _213;
  _201 = _212 + 1;
  x_210 = _201 * 16;
  goto <bb 6>;

  <bb 10>:
  goto <bb 8>;

  <bb 11>:
  pretmp_229 = i_pix2_33(D) * y_189;
  pretmp_230 = (sizetype) pretmp_229;
  pretmp_231 = i_pix1_30(D) * y_189;
  pretmp_232 = (sizetype) pretmp_231;

  <bb 12>:
  # i_ssd_174 = PHI <i_ssd_126(11), i_ssd_78(14)>
  # x_185 = PHI <x_38(11), x_79(14)>
  # DEBUG x => x_185
  # DEBUG i_ssd => i_ssd_174
  _64 = pf_46(D)->ssd[2];
  _67 = (sizetype) x_185;
  _68 = _67 + pretmp_230;
  _69 = pix2_27(D) + _68;
  _73 = _67 + pretmp_232;
  _74 = pix1_25(D) + _73;
  _76 = _64 (_74, i_pix1_30(D), _69, i_pix2_33(D));
  _77 = (long int) _76;
  i_ssd_78 = _77 + i_ssd_174;
  # DEBUG i_ssd => i_ssd_78
  x_79 = x_185 + 8;
  # DEBUG x => x_79
  # DEBUG x => x_79
  # DEBUG i_ssd => i_ssd_78
  if (x_79 < pretmp_228)
    goto <bb 14>;
  else
    goto <bb 13>;

  <bb 13>:
  # i_ssd_209 = PHI <i_ssd_78(12)>
  goto <bb 15>;

  <bb 14>:
  goto <bb 12>;

  <bb 15>:
  # i_ssd_175 = PHI <i_ssd_209(13), i_ssd_126(6)>
  y_80 = y_189 + 16;
  # DEBUG y => y_80
  # DEBUG y => y_80
  # DEBUG i_ssd => i_ssd_175
  if (y_80 < _160)
    goto <bb 17>;
  else
    goto <bb 16>;

  <bb 16>:
  # i_ssd_204 = PHI <i_ssd_175(15)>
  _200 = (unsigned int) i_height_41(D);
  _199 = _200 + 4294967280;
  _171 = _199 / 16;
  _170 = (int) _171;
  _169 = _170 + 1;
  y_208 = _169 * 16;
  goto <bb 18>;

  <bb 17>:
  goto <bb 4>;

  <bb 18>:
  # i_ssd_177 = PHI <i_ssd_204(16), 0(2)>
  # y_190 = PHI <y_208(16), 0(2)>
  _81 = i_height_41(D) + -7;
  if (_81 > y_190)
    goto <bb 19>;
  else
    goto <bb 24>;

  <bb 19>:
  # DEBUG x => 0
  # DEBUG i_ssd => i_ssd_177
  _165 = i_width_44(D) + -7;
  if (_165 > 0)
    goto <bb 20>;
  else
    goto <bb 24>;

  <bb 20>:
  pretmp_221 = i_pix2_33(D) * y_190;
  pretmp_222 = (sizetype) pretmp_221;
  pretmp_224 = i_pix1_30(D) * y_190;
  pretmp_225 = (sizetype) pretmp_224;

  <bb 21>:
  # i_ssd_178 = PHI <i_ssd_177(20), i_ssd_98(23)>
  # x_186 = PHI <0(20), x_99(23)>
  # DEBUG x => x_186
  # DEBUG i_ssd => i_ssd_178
  _84 = pf_46(D)->ssd[3];
  _87 = (sizetype) x_186;
  _88 = _87 + pretmp_222;
  _89 = pix2_27(D) + _88;
  _93 = _87 + pretmp_225;
  _94 = pix1_25(D) + _93;
  _96 = _84 (_94, i_pix1_30(D), _89, i_pix2_33(D));
  _97 = (long int) _96;
  i_ssd_98 = _97 + i_ssd_178;
  # DEBUG i_ssd => i_ssd_98
  x_99 = x_186 + 8;
  # DEBUG x => x_99
  # DEBUG x => x_99
  # DEBUG i_ssd => i_ssd_98
  if (x_99 < _165)
    goto <bb 23>;
  else
    goto <bb 22>;

  <bb 22>:
  # i_ssd_207 = PHI <i_ssd_98(21)>
  goto <bb 24>;

  <bb 23>:
  goto <bb 21>;

  <bb 24>:
  # i_ssd_5 = PHI <i_ssd_177(18), i_ssd_207(22), i_ssd_177(19)>
  # DEBUG i_ssd => i_ssd_5
  i_width.2_100 = (unsigned int) i_width_44(D);
  _101 = i_width.2_100 & 7;
  if (_101 != 0)
    goto <bb 25>;
  else
    goto <bb 41>;

  <bb 25>:
  # DEBUG y => 0
  # DEBUG i_ssd => i_ssd_5
  _158 = i_height_41(D) & -8;
  if (_158 > 0)
    goto <bb 26>;
  else
    goto <bb 41>;

  <bb 26>:
  pretmp_217 = i_width_44(D) & -8;

  <bb 27>:
  # i_ssd_181 = PHI <i_ssd_5(26), i_ssd_180(40)>
  # y_191 = PHI <0(26), y_122(40)>
  # DEBUG y => y_191
  # DEBUG i_ssd => i_ssd_181
  # DEBUG D#1037 => i_width_44(D) & -8
  # DEBUG x => D#1037
  # DEBUG x => D#1037
  # DEBUG i_ssd => i_ssd_181
  if (i_width_44(D) > pretmp_217)
    goto <bb 28>;
  else
    goto <bb 38>;

  <bb 28>:
  pretmp_219 = i_pix1_30(D) * y_191;
  pretmp_220 = i_pix2_33(D) * y_191;
  _252 = (unsigned int) i_width_44(D);
  _253 = (unsigned int) pretmp_217;
  niters.1662_251 = _252 - _253;
  _255 = niters.1662_251 + 4294967280;
  _256 = _255 >> 4;
  bnd.1663_254 = _256 + 1;
  ratio_mult_vf.1664_257 = bnd.1663_254 << 4;
  _275 = (unsigned int) i_width_44(D);
  _276 = (unsigned int) pretmp_217;
  _277 = _275 - _276;
  _278 = _277 + 4294967295;
  if (_278 <= 14)
    goto <bb 34>;
  else
    goto <bb 29>;

  <bb 29>:
  _288 = (sizetype) pretmp_217;
  _289 = (sizetype) pretmp_219;
  _290 = _288 + _289;
  vectp.1667_287 = pix1_25(D) + _290;
  _301 = (sizetype) pretmp_217;
  _302 = (sizetype) pretmp_220;
  _303 = _301 + _302;
  vectp.1672_300 = pix2_27(D) + _303;

  <bb 30>:
  # i_ssd_179 = PHI <i_ssd_181(29), i_ssd_120(37)>
  # x_187 = PHI <pretmp_217(29), x_121(37)>
  # vectp.1666_291 = PHI <vectp.1667_287(29), vectp.1666_292(37)>
  # vectp.1671_304 = PHI <vectp.1672_300(29), vectp.1671_305(37)>
  # vect_i_ssd_120.1679_329 = PHI <{ 0, 0 }(29), vect_i_ssd_120.1679_337(37)>
  # ivtmp_343 = PHI <0(29), ivtmp_344(37)>
  # DEBUG x => x_187
  # DEBUG i_ssd => i_ssd_179
  _106 = x_187 + pretmp_219;
  _107 = (sizetype) _106;
  _108 = pix1_25(D) + _107;
  vect__109.1668_293 = MEM[(uint8_t *)vectp.1666_291];
  _109 = *_108;
  vect__110.1670_294 = [vec_unpack_lo_expr] vect__109.1668_293;
  vect__110.1670_295 = [vec_unpack_hi_expr] vect__109.1668_293;
  vect__110.1669_296 = [vec_unpack_lo_expr] vect__110.1670_294;
  vect__110.1669_297 = [vec_unpack_hi_expr] vect__110.1670_294;
  vect__110.1669_298 = [vec_unpack_lo_expr] vect__110.1670_295;
  vect__110.1669_299 = [vec_unpack_hi_expr] vect__110.1670_295;
  _110 = (int) _109;
  _112 = x_187 + pretmp_220;
  _113 = (sizetype) _112;
  _114 = pix2_27(D) + _113;
  vect__115.1673_306 = MEM[(uint8_t *)vectp.1671_304];
  _115 = *_114;
  vect__116.1675_307 = [vec_unpack_lo_expr] vect__115.1673_306;
  vect__116.1675_308 = [vec_unpack_hi_expr] vect__115.1673_306;
  vect__116.1674_309 = [vec_unpack_lo_expr] vect__116.1675_307;
  vect__116.1674_310 = [vec_unpack_hi_expr] vect__116.1675_307;
  vect__116.1674_311 = [vec_unpack_lo_expr] vect__116.1675_308;
  vect__116.1674_312 = [vec_unpack_hi_expr] vect__116.1675_308;
  _116 = (int) _115;
  vect_d_117.1676_313 = vect__110.1669_296 - vect__116.1674_309;
  vect_d_117.1676_314 = vect__110.1669_297 - vect__116.1674_310;
  vect_d_117.1676_315 = vect__110.1669_298 - vect__116.1674_311;
  vect_d_117.1676_316 = vect__110.1669_299 - vect__116.1674_312;
  d_117 = _110 - _116;
  # DEBUG d => d_117
  vect__118.1677_317 = vect_d_117.1676_313 * vect_d_117.1676_313;
  vect__118.1677_318 = vect_d_117.1676_314 * vect_d_117.1676_314;
  vect__118.1677_319 = vect_d_117.1676_315 * vect_d_117.1676_315;
  vect__118.1677_320 = vect_d_117.1676_316 * vect_d_117.1676_316;
  _118 = d_117 * d_117;
  vect__119.1678_321 = [vec_unpack_lo_expr] vect__118.1677_317;
  vect__119.1678_322 = [vec_unpack_hi_expr] vect__118.1677_317;
  vect__119.1678_323 = [vec_unpack_lo_expr] vect__118.1677_318;
  vect__119.1678_324 = [vec_unpack_hi_expr] vect__118.1677_318;
  vect__119.1678_325 = [vec_unpack_lo_expr] vect__118.1677_319;
  vect__119.1678_326 = [vec_unpack_hi_expr] vect__118.1677_319;
  vect__119.1678_327 = [vec_unpack_lo_expr] vect__118.1677_320;
  vect__119.1678_328 = [vec_unpack_hi_expr] vect__118.1677_320;
  _119 = (long int) _118;
  vect_i_ssd_120.1679_330 = vect__119.1678_321 + vect_i_ssd_120.1679_329;
  vect_i_ssd_120.1679_331 = vect__119.1678_322 + vect_i_ssd_120.1679_330;
  vect_i_ssd_120.1679_332 = vect__119.1678_323 + vect_i_ssd_120.1679_331;
  vect_i_ssd_120.1679_333 = vect__119.1678_324 + vect_i_ssd_120.1679_332;
  vect_i_ssd_120.1679_334 = vect__119.1678_325 + vect_i_ssd_120.1679_333;
  vect_i_ssd_120.1679_335 = vect__119.1678_326 + vect_i_ssd_120.1679_334;
  vect_i_ssd_120.1679_336 = vect__119.1678_327 + vect_i_ssd_120.1679_335;
  vect_i_ssd_120.1679_337 = vect__119.1678_328 + vect_i_ssd_120.1679_336;
  i_ssd_120 = _119 + i_ssd_179;
  # DEBUG i_ssd => i_ssd_120
  x_121 = x_187 + 1;
  # DEBUG x => x_121
  # DEBUG x => x_121
  # DEBUG i_ssd => i_ssd_120
  vectp.1666_292 = vectp.1666_291 + 16;
  vectp.1671_305 = vectp.1671_304 + 16;
  ivtmp_344 = ivtmp_343 + 1;
  if (ivtmp_344 < bnd.1663_254)
    goto <bb 37>;
  else
    goto <bb 33>;

  <bb 31>:
  # i_ssd_258 = PHI <i_ssd_273(32), i_ssd_279(34)>
  # x_259 = PHI <x_274(32), x_281(34)>
  # DEBUG x => x_259
  # DEBUG i_ssd => i_ssd_258
  _260 = x_259 + pretmp_219;
  _261 = (sizetype) _260;
  _262 = pix1_25(D) + _261;
  _263 = *_262;
  _264 = (int) _263;
  _265 = x_259 + pretmp_220;
  _266 = (sizetype) _265;
  _267 = pix2_27(D) + _266;
  _268 = *_267;
  _269 = (int) _268;
  d_270 = _264 - _269;
  # DEBUG d => d_270
  _271 = d_270 * d_270;
  _272 = (long int) _271;
  i_ssd_273 = _272 + i_ssd_258;
  # DEBUG i_ssd => i_ssd_273
  x_274 = x_259 + 1;
  # DEBUG x => x_274
  # DEBUG x => x_274
  # DEBUG i_ssd => i_ssd_273
  if (i_width_44(D) > x_274)
    goto <bb 32>;
  else
    goto <bb 35>;

  <bb 32>:
  goto <bb 31>;

  <bb 33>:
  # i_ssd_280 = PHI <i_ssd_120(30)>
  # x_282 = PHI <x_121(30)>
  # vect_i_ssd_120.1679_338 = PHI <vect_i_ssd_120.1679_337(30)>
  vect_i_ssd_120.1681_339 = VEC_PERM_EXPR <vect_i_ssd_120.1679_338, { 0, 0 }, { 1, 2 }>;
  vect_i_ssd_120.1681_340 = vect_i_ssd_120.1681_339 + vect_i_ssd_120.1679_338;
  stmp_i_ssd_120.1680_341 = BIT_FIELD_REF <vect_i_ssd_120.1681_340, 64, 0>;
  vect_i_ssd_120.1682_342 = stmp_i_ssd_120.1680_341 + i_ssd_181;
  _286 = (int) ratio_mult_vf.1664_257;
  tmp.1665_285 = pretmp_217 + _286;
  if (niters.1662_251 == ratio_mult_vf.1664_257)
    goto <bb 36>;
  else
    goto <bb 34>;

  <bb 34>:
  # i_ssd_279 = PHI <vect_i_ssd_120.1682_342(33), i_ssd_181(28)>
  # x_281 = PHI <tmp.1665_285(33), pretmp_217(28)>
  goto <bb 31>;

  <bb 35>:
  # i_ssd_284 = PHI <i_ssd_273(31)>

  <bb 36>:
  # i_ssd_283 = PHI <i_ssd_284(35), vect_i_ssd_120.1682_342(33)>
  goto <bb 38>;

  <bb 37>:
  goto <bb 30>;

  <bb 38>:
  # i_ssd_180 = PHI <i_ssd_283(36), i_ssd_181(27)>
  y_122 = y_191 + 1;
  # DEBUG y => y_122
  # DEBUG y => y_122
  # DEBUG i_ssd => i_ssd_180
  if (y_122 < _158)
    goto <bb 40>;
  else
    goto <bb 39>;

  <bb 39>:
  # i_ssd_203 = PHI <i_ssd_180(38)>
  goto <bb 41>;

  <bb 40>:
  goto <bb 27>;

  <bb 41>:
  # i_ssd_8 = PHI <i_ssd_5(24), i_ssd_203(39), i_ssd_5(25)>
  # DEBUG i_ssd => i_ssd_8
  i_height.3_123 = (unsigned int) i_height_41(D);
  _124 = i_height.3_123 & 7;
  if (_124 != 0)
    goto <bb 42>;
  else
    goto <bb 58>;

  <bb 42>:
  y_125 = i_height_41(D) & -8;
  # DEBUG y => y_125
  # DEBUG y => y_125
  # DEBUG i_ssd => i_ssd_8
  if (i_height_41(D) > y_125)
    goto <bb 54>;
  else
    goto <bb 58>;

  <bb 43>:

  <bb 44>:
  # i_ssd_182 = PHI <i_ssd_55(57), i_ssd_142(43)>
  # x_188 = PHI <0(57), x_143(43)>
  # vectp.1645_20 = PHI <vectp.1646_22(57), vectp.1645_19(43)>
  # vectp.1650_6 = PHI <vectp.1651_9(57), vectp.1650_4(43)>
  # vect_i_ssd_142.1658_104 = PHI <{ 0, 0 }(57), vect_i_ssd_142.1658_242(43)>
  # ivtmp_248 = PHI <0(57), ivtmp_249(43)>
  # DEBUG x => x_188
  # DEBUG i_ssd => i_ssd_182
  _128 = x_188 + pretmp_214;
  _129 = (sizetype) _128;
  _130 = pix1_25(D) + _129;
  vect__131.1647_18 = MEM[(uint8_t *)vectp.1645_20];
  _131 = *_130;
  vect__132.1649_17 = [vec_unpack_lo_expr] vect__131.1647_18;
  vect__132.1649_15 = [vec_unpack_hi_expr] vect__131.1647_18;
  vect__132.1648_14 = [vec_unpack_lo_expr] vect__132.1649_17;
  vect__132.1648_13 = [vec_unpack_hi_expr] vect__132.1649_17;
  vect__132.1648_12 = [vec_unpack_lo_expr] vect__132.1649_15;
  vect__132.1648_10 = [vec_unpack_hi_expr] vect__132.1649_15;
  _132 = (int) _131;
  _134 = x_188 + pretmp_215;
  _135 = (sizetype) _134;
  _136 = pix2_27(D) + _135;
  vect__137.1652_3 = MEM[(uint8_t *)vectp.1650_6];
  _137 = *_136;
  vect__138.1654_2 = [vec_unpack_lo_expr] vect__137.1652_3;
  vect__138.1654_1 = [vec_unpack_hi_expr] vect__137.1652_3;
  vect__138.1653_234 = [vec_unpack_lo_expr] vect__138.1654_2;
  vect__138.1653_233 = [vec_unpack_hi_expr] vect__138.1654_2;
  vect__138.1653_227 = [vec_unpack_lo_expr] vect__138.1654_1;
  vect__138.1653_226 = [vec_unpack_hi_expr] vect__138.1654_1;
  _138 = (int) _137;
  vect_d_139.1655_223 = vect__132.1648_14 - vect__138.1653_234;
  vect_d_139.1655_218 = vect__132.1648_13 - vect__138.1653_233;
  vect_d_139.1655_216 = vect__132.1648_12 - vect__138.1653_227;
  vect_d_139.1655_48 = vect__132.1648_10 - vect__138.1653_226;
  d_139 = _132 - _138;
  # DEBUG d => d_139
  vect__140.1656_49 = vect_d_139.1655_223 * vect_d_139.1655_223;
  vect__140.1656_53 = vect_d_139.1655_218 * vect_d_139.1655_218;
  vect__140.1656_54 = vect_d_139.1655_216 * vect_d_139.1655_216;
  vect__140.1656_159 = vect_d_139.1655_48 * vect_d_139.1655_48;
  _140 = d_139 * d_139;
  vect__141.1657_65 = [vec_unpack_lo_expr] vect__140.1656_49;
  vect__141.1657_66 = [vec_unpack_hi_expr] vect__140.1656_49;
  vect__141.1657_70 = [vec_unpack_lo_expr] vect__140.1656_53;
  vect__141.1657_71 = [vec_unpack_hi_expr] vect__140.1656_53;
  vect__141.1657_85 = [vec_unpack_lo_expr] vect__140.1656_54;
  vect__141.1657_86 = [vec_unpack_hi_expr] vect__140.1656_54;
  vect__141.1657_90 = [vec_unpack_lo_expr] vect__140.1656_159;
  vect__141.1657_91 = [vec_unpack_hi_expr] vect__140.1656_159;
  _141 = (long int) _140;
  vect_i_ssd_142.1658_105 = vect__141.1657_65 + vect_i_ssd_142.1658_104;
  vect_i_ssd_142.1658_111 = vect__141.1657_66 + vect_i_ssd_142.1658_105;
  vect_i_ssd_142.1658_127 = vect__141.1657_70 + vect_i_ssd_142.1658_111;
  vect_i_ssd_142.1658_133 = vect__141.1657_71 + vect_i_ssd_142.1658_127;
  vect_i_ssd_142.1658_239 = vect__141.1657_85 + vect_i_ssd_142.1658_133;
  vect_i_ssd_142.1658_240 = vect__141.1657_86 + vect_i_ssd_142.1658_239;
  vect_i_ssd_142.1658_241 = vect__141.1657_90 + vect_i_ssd_142.1658_240;
  vect_i_ssd_142.1658_242 = vect__141.1657_91 + vect_i_ssd_142.1658_241;
  i_ssd_142 = _141 + i_ssd_182;
  # DEBUG i_ssd => i_ssd_142
  x_143 = x_188 + 1;
  # DEBUG x => x_143
  # DEBUG x => x_143
  # DEBUG i_ssd => i_ssd_142
  vectp.1645_19 = vectp.1645_20 + 16;
  vectp.1650_4 = vectp.1650_6 + 16;
  ivtmp_249 = ivtmp_248 + 1;
  if (ivtmp_249 < bnd.1642_166)
    goto <bb 43>;
  else
    goto <bb 47>;

  <bb 45>:
  # i_ssd_161 = PHI <i_ssd_102(46), i_ssd_43(48)>
  # x_157 = PHI <x_83(46), x_39(48)>
  # DEBUG x => x_157
  # DEBUG i_ssd => i_ssd_161
  _156 = x_157 + pretmp_214;
  _155 = (sizetype) _156;
  _154 = pix1_25(D) + _155;
  _153 = *_154;
  _152 = (int) _153;
  _151 = x_157 + pretmp_215;
  _150 = (sizetype) _151;
  _149 = pix2_27(D) + _150;
  _148 = *_149;
  _147 = (int) _148;
  d_146 = _152 - _147;
  # DEBUG d => d_146
  _145 = d_146 * d_146;
  _103 = (long int) _145;
  i_ssd_102 = _103 + i_ssd_161;
  # DEBUG i_ssd => i_ssd_102
  x_83 = x_157 + 1;
  # DEBUG x => x_83
  # DEBUG x => x_83
  # DEBUG i_ssd => i_ssd_102
  if (i_width_44(D) > x_83)
    goto <bb 46>;
  else
    goto <bb 49>;

  <bb 46>:
  goto <bb 45>;

  <bb 47>:
  # i_ssd_42 = PHI <i_ssd_142(44)>
  # x_37 = PHI <x_143(44)>
  # vect_i_ssd_142.1658_243 = PHI <vect_i_ssd_142.1658_242(44)>
  vect_i_ssd_142.1660_244 = VEC_PERM_EXPR <vect_i_ssd_142.1658_243, { 0, 0 }, { 1, 2 }>;
  vect_i_ssd_142.1660_245 = vect_i_ssd_142.1660_244 + vect_i_ssd_142.1658_243;
  stmp_i_ssd_142.1659_246 = BIT_FIELD_REF <vect_i_ssd_142.1660_245, 64, 0>;
  vect_i_ssd_142.1661_247 = stmp_i_ssd_142.1659_246 + i_ssd_55;
  tmp.1644_23 = (int) ratio_mult_vf.1643_162;
  if (ratio_mult_vf.1643_162 == niters.1641_167)
    goto <bb 50>;
  else
    goto <bb 48>;

  <bb 48>:
  # i_ssd_43 = PHI <vect_i_ssd_142.1661_247(47), i_ssd_55(56)>
  # x_39 = PHI <tmp.1644_23(47), 0(56)>
  goto <bb 45>;

  <bb 49>:
  # i_ssd_29 = PHI <i_ssd_102(45)>

  <bb 50>:
  # i_ssd_32 = PHI <i_ssd_29(49), vect_i_ssd_142.1661_247(47)>

  <bb 51>:
  # i_ssd_183 = PHI <i_ssd_32(50), i_ssd_55(55)>
  y_144 = y_192 + 1;
  # DEBUG y => y_144
  # DEBUG y => y_144
  # DEBUG i_ssd => i_ssd_183
  if (i_height_41(D) > y_144)
    goto <bb 53>;
  else
    goto <bb 52>;

  <bb 52>:
  # i_ssd_202 = PHI <i_ssd_183(51)>
  goto <bb 58>;

  <bb 53>:
  goto <bb 55>;

  <bb 54>:

  <bb 55>:
  # i_ssd_55 = PHI <i_ssd_8(54), i_ssd_183(53)>
  # y_192 = PHI <y_125(54), y_144(53)>
  # DEBUG y => y_192
  # DEBUG i_ssd => i_ssd_8
  # DEBUG x => 0
  # DEBUG i_ssd => i_ssd_55
  if (i_width_44(D) > 0)
    goto <bb 56>;
  else
    goto <bb 51>;

  <bb 56>:
  pretmp_214 = i_pix1_30(D) * y_192;
  pretmp_215 = i_pix2_33(D) * y_192;
  niters.1641_167 = (unsigned int) i_width_44(D);
  _164 = niters.1641_167 + 4294967280;
  _163 = _164 >> 4;
  bnd.1642_166 = _163 + 1;
  ratio_mult_vf.1643_162 = bnd.1642_166 << 4;
  _82 = (unsigned int) i_width_44(D);
  _45 = _82 + 4294967295;
  if (_45 <= 14)
    goto <bb 48>;
  else
    goto <bb 57>;

  <bb 57>:
  _21 = (sizetype) pretmp_214;
  vectp.1646_22 = pix1_25(D) + _21;
  _7 = (sizetype) pretmp_215;
  vectp.1651_9 = pix2_27(D) + _7;
  goto <bb 44>;

  <bb 58>:
  # i_ssd_11 = PHI <i_ssd_8(41), i_ssd_202(52), i_ssd_8(42)>
  # DEBUG i_ssd => i_ssd_11
  return i_ssd_11;

}



;; Function x264_pixel_ssim_wxh (x264_pixel_ssim_wxh, funcdef_no=233, decl_uid=4728, cgraph_uid=233, symbol_order=276)


Analyzing loop at common/pixel.c:501
common/pixel.c:501:5: note: ===== analyze_loop_nest =====
common/pixel.c:501:5: note: === vect_analyze_loop_form ===
common/pixel.c:501:5: note: not vectorized: multiple nested loops.
common/pixel.c:501:5: note: bad loop form.

Analyzing loop at common/pixel.c:509
common/pixel.c:509:9: note: ===== analyze_loop_nest =====
common/pixel.c:509:9: note: === vect_analyze_loop_form ===
common/pixel.c:509:9: note: not vectorized: control flow in loop.
common/pixel.c:509:9: note: bad loop form.

Analyzing loop at common/pixel.c:503
common/pixel.c:503:9: note: ===== analyze_loop_nest =====
common/pixel.c:503:9: note: === vect_analyze_loop_form ===
common/pixel.c:503:9: note: ===== analyze_loop_nest_1 =====
common/pixel.c:503:9: note: === vect_analyze_loop_form ===
common/pixel.c:503:9: note: === get_loop_niters ===
Analyzing # of iterations of loop 4
  exit condition [2, + , 2](no_overflow) < width_33
  bounds on difference of bases: -1 ... 536870909
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:129, generic-match.c:6863
  result:
    # of iterations ((unsigned int) width_33 + 4294967295) / 2, bounded by 268435455
common/pixel.c:503:9: note: Symbolic number of iterations is ((unsigned int) width_33 + 4294967295) / 2 + 1
common/pixel.c:503:9: note: not vectorized: control flow in loop.
common/pixel.c:503:9: note: bad loop form.

Analyzing loop at common/pixel.c:506
common/pixel.c:506:13: note: ===== analyze_loop_nest =====
common/pixel.c:506:13: note: === vect_analyze_loop_form ===
common/pixel.c:506:13: note: === get_loop_niters ===
common/pixel.c:506:13: note: Symbolic number of iterations is ((unsigned int) width_33 + 4294967295) / 2 + 1
common/pixel.c:506:13: note: === vect_analyze_data_refs ===
Creating dr for pf_38(D)->ssim_4x4x2_core
analyze_innermost: success.
	base_address: pf_38(D)
	offset from base address: 0
	constant offset from base address: 656
	step: 0
	aligned to: 128
	base_object: *pf_38(D)
	Access function 0: 5248
common/pixel.c:506:13: note: not vectorized: loop contains function calls or data references that cannot be analyzed
common/pixel.c:506:13: note: bad data references.
common/pixel.c:489:7: note: vectorized 0 loops in function.
x264_pixel_ssim_wxh (struct x264_pixel_function_t * pf, uint8_t * pix1, int stride1, uint8_t * pix2, int stride2, int width, int height)
{
  int[4] * sum1;
  float ssim;
  int z;
  int y;
  int x;
  int iftmp.4_12;
  int pretmp_14;
  int pretmp_16;
  int _18;
  int _19;
  unsigned int _20;
  unsigned int _21;
  int _22;
  void (*<Tf35>) (const uint8_t *, int, const uint8_t *, int, int[4] *) _39;
  long unsigned int _40;
  long unsigned int _41;
  int[4] * _42;
  int _45;
  int _46;
  sizetype _47;
  const uint8_t * _49;
  int _52;
  int _53;
  sizetype _54;
  const uint8_t * _56;
  float (*<Tf40>) (int[4] *, int[4] *, int) _61;
  int _62;
  int iftmp.4_63;
  long unsigned int _64;
  long unsigned int _65;
  int[4] * _66;
  int[4] * _67;
  float _69;
  int pretmp_85;

  <bb 2>:
  # DEBUG ssim => 0.0
  _18 = width_17(D) / 4;
  _19 = _18 + 3;
  _20 = (unsigned int) _19;
  _21 = _20 * 16;
  _22 = (int) _21;
  sum1_25 = x264_malloc (_22);
  # DEBUG sum0 => sum1_25
  sum1_32 = x264_malloc (_22);
  # DEBUG sum1 => sum1_32
  width_33 = width_17(D) >> 2;
  # DEBUG width => width_33
  height_35 = height_34(D) >> 2;
  # DEBUG height => height_35
  # DEBUG z => 0
  # DEBUG y => 1
  # DEBUG sum1 => sum1_32
  # DEBUG sum0 => sum1_25
  # DEBUG ssim => 0.0
  # DEBUG z => 0
  # DEBUG y => 1
  if (height_35 > 1)
    goto <bb 3>;
  else
    goto <bb 24>;

  <bb 3>:
  pretmp_16 = width_33 + -1;
  goto <bb 23>;

  <bb 4>:

  <bb 5>:
  # x_92 = PHI <0(13), x_58(4)>
  # DEBUG x => x_92
  _39 = pf_38(D)->ssim_4x4x2_core;
  _40 = (long unsigned int) x_92;
  _41 = _40 * 16;
  _42 = sum1_104 + _41;
  _45 = pretmp_85 + x_92;
  _46 = _45 * 4;
  _47 = (sizetype) _46;
  _49 = pix2_48(D) + _47;
  _52 = pretmp_14 + x_92;
  _53 = _52 * 4;
  _54 = (sizetype) _53;
  _56 = pix1_55(D) + _54;
  _39 (_56, stride1_50(D), _49, stride2_43(D), _42);
  x_58 = x_92 + 2;
  # DEBUG x => x_58
  # DEBUG x => x_58
  if (width_33 > x_58)
    goto <bb 4>;
  else
    goto <bb 6>;

  <bb 6>:

  <bb 7>:
  z_59 = z_95 + 1;
  # DEBUG z => z_59
  # DEBUG sum1 => sum1_101
  # DEBUG sum0 => sum1_104
  # DEBUG z => z_59
  if (z_59 <= y_94)
    goto <bb 8>;
  else
    goto <bb 9>;

  <bb 8>:
  goto <bb 12>;

  <bb 9>:
  # z_30 = PHI <z_59(7)>
  # sum1_9 = PHI <sum1_101(7)>
  # sum1_6 = PHI <sum1_104(7)>

  <bb 10>:
  # z_96 = PHI <z_30(9), z_29(23)>
  # sum1_102 = PHI <sum1_6(9), sum1_28(23)>
  # sum1_105 = PHI <sum1_9(9), sum1_77(23)>
  # DEBUG ssim => ssim_99
  # DEBUG x => 0
  if (pretmp_16 > 0)
    goto <bb 14>;
  else
    goto <bb 20>;

  <bb 11>:

  <bb 12>:
  # z_95 = PHI <z_29(11), z_59(8)>
  # sum1_101 = PHI <sum1_28(11), sum1_104(8)>
  # sum1_104 = PHI <sum1_77(11), sum1_101(8)>
  # DEBUG sum1 => sum1_104
  # DEBUG sum0 => sum1_101
  # DEBUG z => z_95
  # DEBUG x => 0
  if (width_33 > 0)
    goto <bb 13>;
  else
    goto <bb 7>;

  <bb 13>:
  pretmp_85 = stride2_43(D) * z_95;
  pretmp_14 = stride1_50(D) * z_95;
  goto <bb 5>;

  <bb 14>:

  <bb 15>:
  # x_93 = PHI <0(14), x_71(19)>
  # ssim_97 = PHI <ssim_99(14), ssim_70(19)>
  # DEBUG ssim => ssim_97
  # DEBUG x => x_93
  _61 = pf_38(D)->ssim_end4;
  _62 = width_33 - x_93;
  if (_62 <= 5)
    goto <bb 16>;
  else
    goto <bb 17>;

  <bb 16>:
  iftmp.4_63 = _62 + -1;

  <bb 17>:
  # iftmp.4_12 = PHI <iftmp.4_63(16), 4(15)>
  _64 = (long unsigned int) x_93;
  _65 = _64 * 16;
  _66 = sum1_105 + _65;
  _67 = sum1_102 + _65;
  _69 = _61 (_67, _66, iftmp.4_12);
  ssim_70 = _69 + ssim_97;
  # DEBUG ssim => ssim_70
  x_71 = x_93 + 4;
  # DEBUG x => x_71
  # DEBUG ssim => ssim_70
  # DEBUG x => x_71
  if (pretmp_16 > x_71)
    goto <bb 19>;
  else
    goto <bb 18>;

  <bb 18>:
  # ssim_27 = PHI <ssim_70(17)>
  goto <bb 20>;

  <bb 19>:
  goto <bb 15>;

  <bb 20>:
  # ssim_98 = PHI <ssim_27(18), ssim_99(10)>
  y_72 = y_94 + 1;
  # DEBUG y => y_72
  # DEBUG sum1 => sum1_105
  # DEBUG sum0 => sum1_102
  # DEBUG ssim => ssim_98
  # DEBUG z => z_96
  # DEBUG y => y_72
  if (height_35 > y_72)
    goto <bb 22>;
  else
    goto <bb 21>;

  <bb 21>:
  # ssim_15 = PHI <ssim_98(20)>
  # sum1_7 = PHI <sum1_102(20)>
  # sum1_5 = PHI <sum1_105(20)>
  goto <bb 24>;

  <bb 22>:

  <bb 23>:
  # z_29 = PHI <0(3), z_96(22)>
  # sum1_28 = PHI <sum1_25(3), sum1_102(22)>
  # sum1_77 = PHI <sum1_32(3), sum1_105(22)>
  # y_94 = PHI <1(3), y_72(22)>
  # ssim_99 = PHI <0.0(3), ssim_98(22)>
  # DEBUG sum1 => sum1_32
  # DEBUG sum0 => sum1_25
  # DEBUG ssim => ssim_99
  # DEBUG z => 0
  # DEBUG y => y_94
  # DEBUG sum1 => sum1_77
  # DEBUG sum0 => sum1_28
  # DEBUG z => z_29
  if (z_29 <= y_94)
    goto <bb 11>;
  else
    goto <bb 10>;

  <bb 24>:
  # ssim_100 = PHI <ssim_15(21), 0.0(2)>
  # sum1_103 = PHI <sum1_7(21), sum1_25(2)>
  # sum1_106 = PHI <sum1_5(21), sum1_32(2)>
  x264_free (sum1_103);
  x264_free (sum1_106);
  return ssim_100;

}


