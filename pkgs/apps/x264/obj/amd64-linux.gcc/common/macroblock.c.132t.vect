
;; Function copy_column8 (copy_column8, funcdef_no=134, decl_uid=6066, cgraph_uid=134, symbol_order=177)


Analyzing loop at common/macroblock.c:926
common/macroblock.c:926:5: note: ===== analyze_loop_nest =====
common/macroblock.c:926:5: note: === vect_analyze_loop_form ===
common/macroblock.c:926:5: note: === get_loop_niters ===
Analyzing # of iterations of loop 1
  exit condition [7, + , 4294967295] != 0
  bounds on difference of bases: -7 ... -7
  result:
    # of iterations 7, bounded by 7
common/macroblock.c:926:5: note: === vect_analyze_data_refs ===
Creating dr for *_9
analyze_innermost: success.
	base_address: src_8(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 32
	aligned to: 128
	base_object: *src_8(D)
	Access function 0: {0B, +, 32}_1
Creating dr for *_7
analyze_innermost: success.
	base_address: dst_6(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 32
	aligned to: 128
	base_object: *dst_6(D)
	Access function 0: {0B, +, 32}_1
common/macroblock.c:926:5: note: got vectype for stmt: _10 = *_9;
vector(16) unsigned char
common/macroblock.c:926:5: note: got vectype for stmt: *_7 = _10;
vector(16) unsigned char
common/macroblock.c:926:5: note: === vect_analyze_scalar_cycles ===
common/macroblock.c:926:5: note: Analyze phi: i_15 = PHI <i_12(4), 0(2)>

common/macroblock.c:926:5: note: Access function of PHI: {0, +, 1}_1
common/macroblock.c:926:5: note: step: 1,  init: 0
common/macroblock.c:926:5: note: Detected induction.
common/macroblock.c:926:5: note: Analyze phi: .MEM_16 = PHI <.MEM_11(4), .MEM_3(D)(2)>

common/macroblock.c:926:5: note: Analyze phi: ivtmp_14 = PHI <ivtmp_13(4), 8(2)>

common/macroblock.c:926:5: note: Access function of PHI: {8, +, 4294967295}_1
common/macroblock.c:926:5: note: step: 4294967295,  init: 8
common/macroblock.c:926:5: note: Detected induction.
common/macroblock.c:926:5: note: === vect_pattern_recog ===
common/macroblock.c:926:5: note: vect_is_simple_use: operand i_15
common/macroblock.c:926:5: note: def_stmt: i_15 = PHI <i_12(4), 0(2)>
common/macroblock.c:926:5: note: type of def: 4.
common/macroblock.c:926:5: note: === vect_analyze_data_ref_accesses ===
common/macroblock.c:926:5: note: not consecutive access *_7 = _10;

common/macroblock.c:926:5: note: not vectorized: complicated access pattern.
common/macroblock.c:926:5: note: bad data access.
common/macroblock.c:923:22: note: vectorized 0 loops in function.
copy_column8 (uint8_t * dst, uint8_t * src)
{
  int i;
  int _4;
  sizetype _5;
  uint8_t * _7;
  uint8_t * _9;
  unsigned char _10;
  unsigned int ivtmp_13;
  unsigned int ivtmp_14;

  <bb 2>:
  # DEBUG i => 0
  # DEBUG i => 0

  <bb 3>:
  # i_15 = PHI <i_12(4), 0(2)>
  # ivtmp_14 = PHI <ivtmp_13(4), 8(2)>
  # DEBUG i => i_15
  _4 = i_15 * 32;
  _5 = (sizetype) _4;
  _7 = dst_6(D) + _5;
  _9 = src_8(D) + _5;
  _10 = *_9;
  *_7 = _10;
  i_12 = i_15 + 1;
  # DEBUG i => i_12
  # DEBUG i => i_12
  ivtmp_13 = ivtmp_14 - 1;
  if (ivtmp_13 != 0)
    goto <bb 4>;
  else
    goto <bb 5>;

  <bb 4>:
  goto <bb 3>;

  <bb 5>:
  return;

}



;; Function x264_mb_predict_mv_direct16x16 (x264_mb_predict_mv_direct16x16, funcdef_no=120, decl_uid=5568, cgraph_uid=120, symbol_order=163)


Analyzing loop at common/macroblock.c:393
common/macroblock.c:393:9: note: ===== analyze_loop_nest =====
common/macroblock.c:393:9: note: === vect_analyze_loop_form ===
common/macroblock.c:393:9: note: === get_loop_niters ===
Analyzing # of iterations of loop 3
  exit condition [1, + , 4294967295] != 0
  bounds on difference of bases: -1 ... -1
  result:
    # of iterations 1, bounded by 1
common/macroblock.c:393:9: note: === vect_analyze_data_refs ===
Creating dr for h_19(D)->mb.cache.ref[l_972][12]
analyze_innermost: Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:494, generic-match.c:3721
success.
	base_address: h_19(D)
	offset from base address: 0
	constant offset from base address: 19116
	step: 48
	aligned to: 128
	base_object: *h_19(D)
	Access function 0: 12
	Access function 1: {0, +, 1}_3
	Access function 2: 768
	Access function 3: 65024
	Access function 4: 87040
Creating dr for h_19(D)->mb.cache.direct_ref[l_972][0]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:494, generic-match.c:3721
success.
	base_address: h_19(D)
	offset from base address: 0
	constant offset from base address: 20400
	step: 48
	aligned to: 128
	base_object: *h_19(D)
	Access function 0: 0
	Access function 1: {0, +, 1}_3
	Access function 2: 11136
	Access function 3: 65024
	Access function 4: 87040
Creating dr for h_19(D)->mb.cache.ref[l_972][14]
analyze_innermost: Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:494, generic-match.c:3721
success.
	base_address: h_19(D)
	offset from base address: 0
	constant offset from base address: 19118
	step: 48
	aligned to: 128
	base_object: *h_19(D)
	Access function 0: 14
	Access function 1: {0, +, 1}_3
	Access function 2: 768
	Access function 3: 65024
	Access function 4: 87040
Creating dr for h_19(D)->mb.cache.direct_ref[l_972][1]
analyze_innermost: Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:494, generic-match.c:3721
success.
	base_address: h_19(D)
	offset from base address: 0
	constant offset from base address: 20401
	step: 48
	aligned to: 128
	base_object: *h_19(D)
	Access function 0: 1
	Access function 1: {0, +, 1}_3
	Access function 2: 11136
	Access function 3: 65024
	Access function 4: 87040
Creating dr for h_19(D)->mb.cache.ref[l_972][28]
analyze_innermost: Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:494, generic-match.c:3721
success.
	base_address: h_19(D)
	offset from base address: 0
	constant offset from base address: 19132
	step: 48
	aligned to: 128
	base_object: *h_19(D)
	Access function 0: 28
	Access function 1: {0, +, 1}_3
	Access function 2: 768
	Access function 3: 65024
	Access function 4: 87040
Creating dr for h_19(D)->mb.cache.direct_ref[l_972][2]
analyze_innermost: Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:494, generic-match.c:3721
success.
	base_address: h_19(D)
	offset from base address: 0
	constant offset from base address: 20402
	step: 48
	aligned to: 128
	base_object: *h_19(D)
	Access function 0: 2
	Access function 1: {0, +, 1}_3
	Access function 2: 11136
	Access function 3: 65024
	Access function 4: 87040
Creating dr for h_19(D)->mb.cache.ref[l_972][30]
analyze_innermost: Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:494, generic-match.c:3721
success.
	base_address: h_19(D)
	offset from base address: 0
	constant offset from base address: 19134
	step: 48
	aligned to: 128
	base_object: *h_19(D)
	Access function 0: 30
	Access function 1: {0, +, 1}_3
	Access function 2: 768
	Access function 3: 65024
	Access function 4: 87040
Creating dr for h_19(D)->mb.cache.direct_ref[l_972][3]
analyze_innermost: Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:494, generic-match.c:3721
success.
	base_address: h_19(D)
	offset from base address: 0
	constant offset from base address: 20403
	step: 48
	aligned to: 128
	base_object: *h_19(D)
	Access function 0: 3
	Access function 1: {0, +, 1}_3
	Access function 2: 11136
	Access function 3: 65024
	Access function 4: 87040
common/macroblock.c:393:9: note: got vectype for stmt: _617 = h_19(D)->mb.cache.ref[l_972][12];
vector(16) signed char
common/macroblock.c:393:9: note: got vectype for stmt: h_19(D)->mb.cache.direct_ref[l_972][0] = _617;
vector(16) signed char
common/macroblock.c:393:9: note: got vectype for stmt: _624 = h_19(D)->mb.cache.ref[l_972][14];
vector(16) signed char
common/macroblock.c:393:9: note: got vectype for stmt: h_19(D)->mb.cache.direct_ref[l_972][1] = _624;
vector(16) signed char
common/macroblock.c:393:9: note: got vectype for stmt: _631 = h_19(D)->mb.cache.ref[l_972][28];
vector(16) signed char
common/macroblock.c:393:9: note: got vectype for stmt: h_19(D)->mb.cache.direct_ref[l_972][2] = _631;
vector(16) signed char
common/macroblock.c:393:9: note: got vectype for stmt: _638 = h_19(D)->mb.cache.ref[l_972][30];
vector(16) signed char
common/macroblock.c:393:9: note: got vectype for stmt: h_19(D)->mb.cache.direct_ref[l_972][3] = _638;
vector(16) signed char
common/macroblock.c:393:9: note: === vect_analyze_scalar_cycles ===
common/macroblock.c:393:9: note: Analyze phi: l_972 = PHI <l_73(109), 0(107)>

common/macroblock.c:393:9: note: Access function of PHI: {0, +, 1}_3
common/macroblock.c:393:9: note: step: 1,  init: 0
common/macroblock.c:393:9: note: Detected induction.
common/macroblock.c:393:9: note: Analyze phi: .MEM_992 = PHI <.MEM_639(109), .MEM_958(107)>

common/macroblock.c:393:9: note: Analyze phi: ivtmp_314 = PHI <ivtmp_912(109), 2(107)>

common/macroblock.c:393:9: note: Access function of PHI: {2, +, 4294967295}_3
common/macroblock.c:393:9: note: step: 4294967295,  init: 2
common/macroblock.c:393:9: note: Detected induction.
common/macroblock.c:393:9: note: === vect_pattern_recog ===
common/macroblock.c:393:9: note: === vect_analyze_data_ref_accesses ===
common/macroblock.c:393:9: note: Detected interleaving h_19(D)->mb.cache.ref[l_972][12] and h_19(D)->mb.cache.ref[l_972][14]
common/macroblock.c:393:9: note: Detected interleaving h_19(D)->mb.cache.ref[l_972][12] and h_19(D)->mb.cache.ref[l_972][28]
common/macroblock.c:393:9: note: Detected interleaving h_19(D)->mb.cache.ref[l_972][12] and h_19(D)->mb.cache.ref[l_972][30]
common/macroblock.c:393:9: note: Detected interleaving h_19(D)->mb.cache.direct_ref[l_972][0] and h_19(D)->mb.cache.direct_ref[l_972][1]
common/macroblock.c:393:9: note: Detected interleaving h_19(D)->mb.cache.direct_ref[l_972][0] and h_19(D)->mb.cache.direct_ref[l_972][2]
common/macroblock.c:393:9: note: Detected interleaving h_19(D)->mb.cache.direct_ref[l_972][0] and h_19(D)->mb.cache.direct_ref[l_972][3]
common/macroblock.c:393:9: note: Detected interleaving of size 48
common/macroblock.c:393:9: note: Data access with gaps requires scalar epilogue loop
common/macroblock.c:393:9: note: interleaved store with gaps
common/macroblock.c:393:9: note: not vectorized: complicated access pattern.
common/macroblock.c:393:9: note: bad data access.

Analyzing loop at common/macroblock.c:380
common/macroblock.c:380:13: note: ===== analyze_loop_nest =====
common/macroblock.c:380:13: note: === vect_analyze_loop_form ===
common/macroblock.c:380:13: note: ===== analyze_loop_nest_1 =====
common/macroblock.c:380:13: note: === vect_analyze_loop_form ===
common/macroblock.c:380:13: note: === get_loop_niters ===
Analyzing # of iterations of loop 2
  exit condition [3, + , 4294967295] != 0
  bounds on difference of bases: -3 ... -3
  result:
    # of iterations 3, bounded by 3
common/macroblock.c:380:13: note: Considering outer-loop vectorization.
common/macroblock.c:380:13: note: === get_loop_niters ===
Analyzing # of iterations of loop 1
  exit condition [1, + , 4294967295] != 0
  bounds on difference of bases: -1 ... -1
  result:
    # of iterations 1, bounded by 1
common/macroblock.c:380:13: note: === vect_analyze_data_refs ===
Creating dr for h_19(D)->mb.cache.direct_ref[l_25][i_608]
analyze_innermost: Applying pattern match.pd:114, generic-match.c:6569
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: h_19(D)
	offset from base address: (ssizetype) ((sizetype) l_25 * 48)
	constant offset from base address: 20400
	step: 1
	aligned to: 16
	base_object: *h_19(D)
	Access function 0: {0, +, 1}_2
	Access function 1: {0, +, 1}_1
	Access function 2: 11136
	Access function 3: 65024
	Access function 4: 87040
Creating dr for x264_scan8[_53]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &x264_scan8
	offset from base address: 0
	constant offset from base address: 0
	step: 16
	aligned to: 128
	base_object: MEM[(int[27] *)&x264_scan8]
	Access function 0: {0, +, 4}_2
Creating dr for h_19(D)->mb.cache.ref[l_25][_54]
analyze_innermost: Applying pattern match.pd:114, generic-match.c:6569
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:494, generic-match.c:3721
failed: evolution of offset is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *h_19(D)
	Access function 0: scev_not_known;
	Access function 1: {0, +, 1}_1
	Access function 2: 768
	Access function 3: 65024
	Access function 4: 87040
Creating dr for *b_changed_26(D)
analyze_innermost: success.
	base_address: b_changed_26(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 128
	base_object: *b_changed_26(D)
common/macroblock.c:380:13: note: analyze in outer-loop: *(h_19(D) + 20400)
Applying pattern match.pd:49, generic-match.c:4015
common/macroblock.c:380:13: note: 	outer base_address: h_19(D)
	outer offset from base address: 0
	outer constant offset from base address: 20400
	outer step: 48
	outer aligned to: 128
common/macroblock.c:380:13: note: got vectype for stmt: _52 = h_19(D)->mb.cache.direct_ref[l_25][i_608];
vector(16) signed char
Applying pattern match.pd:49, generic-match.c:4015
common/macroblock.c:380:13: note: analyze in outer-loop: x264_scan8
common/macroblock.c:380:13: note: 	outer base_address: &x264_scan8
	outer offset from base address: 0
	outer constant offset from base address: 0
	outer step: 0
	outer aligned to: 128
common/macroblock.c:380:13: note: got vectype for stmt: _54 = x264_scan8[_53];
const vector(4) int
common/macroblock.c:380:13: note: not vectorized: data ref analysis failed _55 = h_19(D)->mb.cache.ref[l_25][_54];

common/macroblock.c:380:13: note: bad data references.

Analyzing loop at common/macroblock.c:381
common/macroblock.c:381:17: note: ===== analyze_loop_nest =====
common/macroblock.c:381:17: note: === vect_analyze_loop_form ===
common/macroblock.c:381:17: note: === get_loop_niters ===
common/macroblock.c:381:17: note: === vect_analyze_data_refs ===
Creating dr for h_19(D)->mb.cache.direct_ref[l_25][i_608]
analyze_innermost: Applying pattern match.pd:114, generic-match.c:6569
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: h_19(D)
	offset from base address: (ssizetype) ((sizetype) l_25 * 48)
	constant offset from base address: 20400
	step: 1
	aligned to: 16
	base_object: *h_19(D)
	Access function 0: {0, +, 1}_2
	Access function 1: l_25
	Access function 2: 11136
	Access function 3: 65024
	Access function 4: 87040
Creating dr for x264_scan8[_53]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &x264_scan8
	offset from base address: 0
	constant offset from base address: 0
	step: 16
	aligned to: 128
	base_object: MEM[(int[27] *)&x264_scan8]
	Access function 0: {0, +, 4}_2
Creating dr for h_19(D)->mb.cache.ref[l_25][_54]
analyze_innermost: Applying pattern match.pd:114, generic-match.c:6569
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:494, generic-match.c:3721
failed: evolution of offset is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *h_19(D)
	Access function 0: scev_not_known;
	Access function 1: l_25
	Access function 2: 768
	Access function 3: 65024
	Access function 4: 87040
Creating dr for *b_changed_26(D)
analyze_innermost: success.
	base_address: b_changed_26(D)
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 128
	base_object: *b_changed_26(D)
common/macroblock.c:381:17: note: got vectype for stmt: _52 = h_19(D)->mb.cache.direct_ref[l_25][i_608];
vector(16) signed char
common/macroblock.c:381:17: note: got vectype for stmt: _54 = x264_scan8[_53];
const vector(4) int
Creating dr for h_19(D)->mb.cache.ref[l_25][_54]
analyze_innermost: Applying pattern match.pd:114, generic-match.c:6569
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: h_19(D)
	offset from base address: (ssizetype) ((sizetype) _54 + (sizetype) l_25 * 48)
	constant offset from base address: 19104
	step: 0
	aligned to: 1
	base_object: h_19(D)->mb.cache.ref[l_25][_54]
common/macroblock.c:381:17: note: got vectype for stmt: _55 = h_19(D)->mb.cache.ref[l_25][_54];
vector(16) signed char
Applying pattern match.pd:114, generic-match.c:6569
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:49, generic-match.c:3223
common/macroblock.c:381:17: note: not vectorized: not suitable for gather load _55 = h_19(D)->mb.cache.ref[l_25][_54];

common/macroblock.c:381:17: note: bad data references.

Analyzing loop at common/macroblock.c:315
common/macroblock.c:315:5: note: ===== analyze_loop_nest =====
common/macroblock.c:315:5: note: === vect_analyze_loop_form ===
common/macroblock.c:315:5: note: ===== analyze_loop_nest_1 =====
common/macroblock.c:315:5: note: === vect_analyze_loop_form ===
common/macroblock.c:315:5: note: not vectorized: control flow in loop.
common/macroblock.c:315:5: note: bad inner-loop form.
common/macroblock.c:315:5: note: not vectorized: Bad inner loop.
common/macroblock.c:315:5: note: bad loop form.

Analyzing loop at common/macroblock.c:336
common/macroblock.c:336:17: note: ===== analyze_loop_nest =====
common/macroblock.c:336:17: note: === vect_analyze_loop_form ===
common/macroblock.c:336:17: note: not vectorized: control flow in loop.
common/macroblock.c:336:17: note: bad loop form.

Analyzing loop at common/macroblock.c:282
common/macroblock.c:282:9: note: ===== analyze_loop_nest =====
common/macroblock.c:282:9: note: === vect_analyze_loop_form ===
common/macroblock.c:282:9: note: not vectorized: control flow in loop.
common/macroblock.c:282:9: note: bad loop form.

Analyzing loop at common/macroblock.c:257
common/macroblock.c:257:5: note: ===== analyze_loop_nest =====
common/macroblock.c:257:5: note: === vect_analyze_loop_form ===
common/macroblock.c:257:5: note: not vectorized: control flow in loop.
common/macroblock.c:257:5: note: bad loop form.

Analyzing loop at common/macroblock.c:225
common/macroblock.c:225:45: note: ===== analyze_loop_nest =====
common/macroblock.c:225:45: note: === vect_analyze_loop_form ===
common/macroblock.c:225:45: note: not vectorized: control flow in loop.
common/macroblock.c:225:45: note: bad loop form.

Analyzing loop at common/macroblock.c:176
common/macroblock.c:176:19: note: ===== analyze_loop_nest =====
common/macroblock.c:176:19: note: === vect_analyze_loop_form ===
common/macroblock.c:176:19: note: ===== analyze_loop_nest_1 =====
common/macroblock.c:176:19: note: === vect_analyze_loop_form ===
common/macroblock.c:176:19: note: === get_loop_niters ===
Analyzing # of iterations of loop 34
  exit condition [3, + , 4294967295] != 0
  bounds on difference of bases: -3 ... -3
  result:
    # of iterations 3, bounded by 3
common/macroblock.c:176:19: note: not vectorized: control flow in loop.
common/macroblock.c:176:19: note: bad loop form.

Analyzing loop at common/macroblock.c:197
common/macroblock.c:197:17: note: ===== analyze_loop_nest =====
common/macroblock.c:197:17: note: === vect_analyze_loop_form ===
common/macroblock.c:197:17: note: === get_loop_niters ===
common/macroblock.c:197:17: note: === vect_analyze_data_refs ===
Creating dr for h_19(D)->mb.i_b4_stride
analyze_innermost: success.
	base_address: h_19(D)
	offset from base address: 0
	constant offset from base address: 10892
	step: 0
	aligned to: 128
	base_object: *h_19(D)
	Access function 0: 96
	Access function 1: 87040
Creating dr for *mv_col_459
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *mv_col_459
Creating dr for MEM[(const int16_t *)mv_col_459 + 2B]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(const int16_t *)mv_col_459 + 2B]
Creating dr for MEM[(uint32_t *)_477]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:494, generic-match.c:3721
failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(uint32_t *)_477]
Creating dr for MEM[(uint32_t *)_493]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:494, generic-match.c:3721
failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: MEM[(uint32_t *)_493]
common/macroblock.c:197:17: note: got vectype for stmt: _454 = h_19(D)->mb.i_b4_stride;
vector(4) int
Creating dr for *mv_col_459
analyze_innermost: success.
	base_address: pretmp_594 + (long unsigned int) (((_300 * 4 + _299) + (x8_358 * 2 + _448)) + _455) * 4
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 128
	base_object: *mv_col_459
common/macroblock.c:197:17: note: got vectype for stmt: _460 = *mv_col_459;
const vector(8) short int
Applying pattern match.pd:49, generic-match.c:3223
common/macroblock.c:197:17: note: not vectorized: not suitable for gather load _460 = *mv_col_459;

common/macroblock.c:197:17: note: bad data references.
common/macroblock.c:356:5: note: vectorized 0 loops in function.
x264_mb_predict_mv_direct16x16 (struct x264_t * h, int * b_changed)
{
  int i_mb_4x4;
  int i_mb_8x8;
  int i8;
  int i4;
  int b8x8;
  const int type_col;
  const int x8;
  const int y8;
  const int i_part_8x8;
  const int i_ref;
  const int dist_scale_factor;
  const int16_t * mv_col;
  const int l0x;
  const int l0y;
  const int x4;
  const int y4;
  const int16_t * mv_col;
  const int l0x;
  const int l0y;
  int di;
  int dy;
  int dy;
  int dx;
  int dy;
  int dx;
  int dy;
  uint8_t ref;
  int dy;
  int dy;
  int dx;
  uint64_t val64;
  int dy;
  int dx;
  uint64_t val64;
  int dy;
  int dx;
  int dy;
  int dx;
  int D.9295;
  int ref[2];
  int16_t mv[2][2];
  int i_list;
  int i8;
  int i4;
  int b8x8;
  const int8_t * l1ref0;
  const int16_t[2] * l1mv0;
  const int16_t[2] * l1mv1;
  const int type_col;
  int i_refa;
  int i_refb;
  int i_refc;
  const int x8;
  const int y8;
  const int o8;
  const int16_t[2] * l1mv;
  const int16_t * mvcol;
  const int x4;
  const int y4;
  const int16_t * mvcol;
  int dy;
  int dx;
  uint64_t val64;
  int dy;
  int dx;
  uint64_t val64;
  int dy;
  uint32_t val2;
  int dy;
  uint32_t val2;
  int dy;
  int dx;
  int dy;
  int dx;
  int dy;
  int dx;
  int dy;
  int dx;
  int D.9144;
  int l;
  int i;
  int l;
  int i;
  int b_available;
  _Bool _2;
  int _3;
  _Bool _5;
  int _6;
  int iftmp.1_7;
  int iftmp.2_8;
  int _20;
  int _21;
  int _22;
  unsigned char _24;
  struct x264_frame_t * _30;
  int8_t * _31;
  int _32;
  sizetype _33;
  int8_t * _34;
  signed char _35;
  unsigned int type_col.0_36;
  _Bool _37;
  _Bool _38;
  _Bool _39;
  signed char _40;
  signed char _41;
  signed char _42;
  signed char _43;
  unsigned int _44;
  unsigned int _45;
  unsigned int _47;
  unsigned int _48;
  signed char _52;
  int _53;
  int _54;
  signed char _55;
  _Bool _56;
  int _57;
  int _58;
  int16_t[2][48][2] * _63;
  int16_t[2][48][2] * _64;
  int _65;
  void * (*<Tfad>) (void *, const void *, size_t, void, ...) _74;
  int16_t[2][48][2] * _75;
  int16_t[2][48][2] * _76;
  struct x264_frame_t * _79;
  int8_t * _80;
  int _81;
  sizetype _82;
  int8_t * _84;
  int16_t[2] * _85;
  int _86;
  long unsigned int _87;
  long unsigned int _88;
  int16_t[2] * _90;
  int8_t * _92;
  int _93;
  sizetype _94;
  int8_t * _95;
  signed char _96;
  signed char _99;
  signed char _101;
  signed char _103;
  signed char _105;
  int _111;
  int _112;
  int _114;
  int16_t[2] * _115;
  int16_t[2] * _116;
  struct x264_frame_t * pretmp_139;
  unsigned int _140;
  long unsigned int _142;
  long unsigned int _143;
  int pretmp_151;
  unsigned int _154;
  long unsigned int _156;
  long unsigned int _157;
  unsigned int pretmp_163;
  unsigned int prephitmp_166;
  unsigned int type_col.3_168;
  int _169;
  short int _170;
  int _171;
  int _172;
  short int _173;
  int _174;
  struct x264_sps_t * _175;
  int _176;
  unsigned char _179;
  unsigned char _182;
  signed char _183;
  int _186;
  int _187;
  sizetype _189;
  const int8_t * _190;
  signed char _191;
  const int8_t * _193;
  signed char _194;
  int _196;
  int _197;
  int _198;
  int _199;
  int _200;
  long unsigned int _201;
  long unsigned int _202;
  short int _205;
  unsigned short _206;
  unsigned short _207;
  short int _208;
  unsigned short _209;
  unsigned short _210;
  int _211;
  int _212;
  int _213;
  int _214;
  int _215;
  int16_t[2] * _216;
  int _226;
  int _227;
  int _228;
  int _229;
  int _230;
  int16_t[2] * _231;
  unsigned char _241;
  int _242;
  int _245;
  int _248;
  int _249;
  int _250;
  long unsigned int _251;
  long unsigned int _252;
  short int _254;
  unsigned short _255;
  unsigned short _256;
  short int _257;
  unsigned short _258;
  unsigned short _259;
  int _260;
  int _261;
  int _262;
  int16_t[2] * _263;
  int prephitmp_265;
  int pretmp_267;
  _Bool prephitmp_268;
  int pretmp_271;
  int _273;
  int _274;
  int _275;
  int16_t[2] * _276;
  _Bool pretmp_280;
  unsigned int pretmp_283;
  int _296;
  int _297;
  int _298;
  int _299;
  int _300;
  int _301;
  int _303;
  int _304;
  int _305;
  struct x264_frame_t * _307;
  int8_t * _308;
  int _309;
  sizetype _310;
  int8_t * _311;
  signed char _312;
  unsigned int ivtmp_314;
  int prephitmp_319;
  unsigned int type_col.6_321;
  unsigned int ivtmp_322;
  int prephitmp_328;
  unsigned int ivtmp_329;
  int pretmp_333;
  int prephitmp_334;
  unsigned int ivtmp_339;
  int pretmp_347;
  struct x264_sps_t * _349;
  int _350;
  int _360;
  int _361;
  int _362;
  int8_t * _365;
  sizetype _366;
  int8_t * _367;
  signed char _368;
  int _369;
  signed char _370;
  short int _372;
  int _374;
  int _375;
  int _377;
  int _378;
  int _379;
  int8_t * _380;
  int _381;
  int _382;
  int _386;
  int16_t[2] * _391;
  int _392;
  int _393;
  int _394;
  int _395;
  int _396;
  int _397;
  long unsigned int _398;
  long unsigned int _399;
  short int _401;
  int _402;
  int _403;
  int _404;
  short int _406;
  int _407;
  int _408;
  int _409;
  int _411;
  int _412;
  int _413;
  unsigned int _414;
  int16_t[2] * _415;
  long unsigned int _416;
  long unsigned int _417;
  int _423;
  int _428;
  int _429;
  int _430;
  int _431;
  int _432;
  unsigned int _433;
  int16_t[2] * _434;
  long unsigned int _435;
  long unsigned int _436;
  int _448;
  int _450;
  int _453;
  int _454;
  int _455;
  int _456;
  long unsigned int _457;
  long unsigned int _458;
  short int _460;
  int _461;
  int _462;
  int _463;
  short int _465;
  int _466;
  int _467;
  int _468;
  int _470;
  int _471;
  int _472;
  unsigned int _473;
  int _474;
  int _475;
  int _476;
  int16_t[2] * _477;
  _Bool pretmp_481;
  int _487;
  int _488;
  int _489;
  int _490;
  int _491;
  unsigned int _492;
  int16_t[2] * _493;
  struct x264_frame_t * prephitmp_495;
  int pretmp_499;
  int _505;
  int _507;
  short int _508;
  int _509;
  short int _511;
  int _512;
  signed char _523;
  _Bool pretmp_557;
  sizetype _564;
  _Bool _588;
  int prephitmp_592;
  int16_t[2] * pretmp_594;
  unsigned int ivtmp_598;
  signed char _617;
  unsigned int ivtmp_622;
  _Bool prephitmp_623;
  signed char _624;
  signed char _631;
  signed char _638;
  unsigned int ivtmp_640;
  _Bool _718;
  _Bool _725;
  _Bool _733;
  int prephitmp_813;
  int pretmp_825;
  unsigned int ivtmp_826;
  int pretmp_833;
  unsigned int ivtmp_834;
  _Bool _837;
  unsigned int ivtmp_842;
  _Bool _864;
  short unsigned int _887;
  unsigned int ivtmp_892;
  unsigned int ivtmp_912;
  unsigned int ivtmp_920;
  unsigned int ivtmp_928;
  unsigned int prephitmp_939;
  unsigned int ivtmp_940;
  unsigned int ivtmp_946;
  unsigned int ivtmp_956;
  unsigned int ivtmp_962;
  int _1002;

  <bb 2>:
  _20 = h_19(D)->param.analyse.i_direct_mv_pred;
  if (_20 == 0)
    goto <bb 114>;
  else
    goto <bb 3>;

  <bb 3>:
  _21 = h_19(D)->sh.b_direct_spatial_mv_pred;
  if (_21 != 0)
    goto <bb 4>;
  else
    goto <bb 65>;

  <bb 4>:
  # DEBUG h => h_19(D)
  _79 = h_19(D)->fref1[0];
  _80 = _79->ref[0];
  _81 = h_19(D)->mb.i_b8_xy;
  # DEBUG D#28 => (sizetype) _81
  # DEBUG l1ref0 => _80 + D#28
  _84 = _79->ref[1];
  # DEBUG l1ref1 => _84 + D#28
  _85 = _79->mv[0];
  _86 = h_19(D)->mb.i_b4_xy;
  # DEBUG D#27 => (long unsigned int) _86
  # DEBUG D#26 => D#27 * 4
  # DEBUG l1mv0 => _85 + D#26
  _90 = _79->mv[1];
  # DEBUG l1mv1 => _90 + D#26
  _92 = _79->mb_type;
  _93 = h_19(D)->mb.i_mb_xy;
  _94 = (sizetype) _93;
  _95 = _92 + _94;
  _96 = *_95;
  # DEBUG type_col => (const int) _96
  # DEBUG i_list => 0
  # DEBUG i_list => 0

  <bb 5>:
  # i_list_896 = PHI <i_list_110(17), 0(4)>
  # ivtmp_940 = PHI <ivtmp_946(17), 2(4)>
  # DEBUG i_list => i_list_896
  _99 = h_19(D)->mb.cache.ref[i_list_896][11];
  i_refa_100 = (int) _99;
  # DEBUG i_refa => i_refa_100
  _101 = h_19(D)->mb.cache.ref[i_list_896][4];
  i_refb_102 = (int) _101;
  # DEBUG i_refb => i_refb_102
  _103 = h_19(D)->mb.cache.ref[i_list_896][8];
  i_refc_104 = (int) _103;
  # DEBUG i_refc => i_refc_104
  if (i_refc_104 == -2)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  _105 = h_19(D)->mb.cache.ref[i_list_896][3];
  i_refc_106 = (int) _105;
  # DEBUG i_refc => i_refc_106

  <bb 7>:
  # i_refc_108 = PHI <i_refc_104(5), i_refc_106(6)>
  # DEBUG i_refc => i_refc_108
  if (i_refa_100 < 0)
    goto <bb 9>;
  else
    goto <bb 8>;

  <bb 8>:
  _837 = i_refb_102 >= 0;
  _718 = i_refa_100 > i_refb_102;
  _588 = _718 & _837;
  if (_588 != 0)
    goto <bb 9>;
  else
    goto <bb 12>;

  <bb 9>:
  ref[i_list_896] = i_refb_102;
  if (i_refb_102 < 0)
    goto <bb 10>;
  else
    goto <bb 13>;

  <bb 10>:
  if (i_refc_108 < 0)
    goto <bb 15>;
  else
    goto <bb 11>;

  <bb 11>:
  ref[i_list_896] = i_refc_108;
  goto <bb 14>;

  <bb 12>:
  ref[i_list_896] = i_refa_100;

  <bb 13>:
  # _423 = PHI <i_refb_102(9), i_refa_100(12)>
  _864 = i_refc_108 >= 0;
  _5 = i_refc_108 < _423;
  _733 = _5 & _864;
  if (_733 != 0)
    goto <bb 10>;
  else
    goto <bb 14>;

  <bb 14>:
  goto <bb 16>;

  <bb 15>:
  ref[i_list_896] = -1;

  <bb 16>:
  i_list_110 = i_list_896 + 1;
  # DEBUG i_list => i_list_110
  # DEBUG i_list => i_list_110
  ivtmp_946 = ivtmp_940 - 1;
  if (ivtmp_946 != 0)
    goto <bb 17>;
  else
    goto <bb 18>;

  <bb 17>:
  goto <bb 5>;

  <bb 18>:
  _111 = ref[0];
  if (_111 < 0)
    goto <bb 19>;
  else
    goto <bb 22>;

  <bb 19>:
  _112 = ref[1];
  if (_112 < 0)
    goto <bb 21>;
  else
    goto <bb 20>;

  <bb 20>:
  # prephitmp_334 = PHI <pretmp_333(22), _112(19)>
  goto <bb 23>;

  <bb 21>:
  MEM[(uint64_t *)&mv] = 0;
  goto <bb 29>;

  <bb 22>:
  pretmp_333 = ref[1];
  goto <bb 20>;

  <bb 23>:
  # i_list_886 = PHI <0(20), i_list_117(27)>
  # ivtmp_622 = PHI <2(20), ivtmp_598(27)>
  # DEBUG i_list => i_list_886
  _114 = ref[i_list_886];
  if (_114 >= 0)
    goto <bb 24>;
  else
    goto <bb 25>;

  <bb 24>:
  # DEBUG i_list => i_list_886
  _115 = &mv[i_list_886];
  x264_mb_predict_mv_16x16 (h_19(D), i_list_886, _114, _115);
  goto <bb 26>;

  <bb 25>:
  # DEBUG i_list => i_list_886
  _116 = &mv[i_list_886];
  MEM[(uint32_t *)_116] = 0;

  <bb 26>:
  i_list_117 = i_list_886 + 1;
  # DEBUG i_list => i_list_117
  # DEBUG i_list => i_list_117
  ivtmp_598 = ivtmp_622 - 1;
  if (ivtmp_598 != 0)
    goto <bb 27>;
  else
    goto <bb 28>;

  <bb 27>:
  goto <bb 23>;

  <bb 28>:
  pretmp_347 = _111 & 255;
  pretmp_151 = pretmp_347 * 16843009;
  pretmp_163 = (unsigned int) pretmp_151;
  pretmp_267 = prephitmp_334 & 255;
  pretmp_271 = pretmp_267 * 16843009;
  pretmp_283 = (unsigned int) pretmp_271;

  <bb 29>:
  # prephitmp_592 = PHI <0(21), _111(28)>
  # prephitmp_166 = PHI <0(21), pretmp_163(28)>
  # prephitmp_265 = PHI <0(21), prephitmp_334(28)>
  # prephitmp_939 = PHI <0(21), pretmp_283(28)>
  # DEBUG D#25 => ref[0]
  # DEBUG h => h_19(D)
  # DEBUG x => 0
  # DEBUG y => 0
  # DEBUG width => 4
  # DEBUG height => 4
  # DEBUG i_list => 0
  # DEBUG D#2 => (uint8_t) D#25
  # DEBUG ref => D#2
  # DEBUG D#38 => &h_19(D)->mb.cache.ref[0][12]
  # DEBUG dst => D#38
  # DEBUG width => 4
  # DEBUG height => 4
  # DEBUG val => D#2
  # DEBUG D#24 => D#25 & 255
  # DEBUG D#23 => D#24 * 16843009
  # DEBUG val2 => (uint32_t) D#23
  # DEBUG dy => 0
  # DEBUG dy => 0
  MEM[(uint32_t *)h_19(D) + 19116B] = prephitmp_166;
  # DEBUG dy => 1
  # DEBUG dy => 1
  MEM[(uint32_t *)h_19(D) + 19124B] = prephitmp_166;
  # DEBUG dy => 2
  # DEBUG dy => 2
  MEM[(uint32_t *)h_19(D) + 19132B] = prephitmp_166;
  # DEBUG dy => 3
  # DEBUG dy => 3
  MEM[(uint32_t *)h_19(D) + 19140B] = prephitmp_166;
  # DEBUG dy => 4
  # DEBUG dy => 4
  # DEBUG dst => NULL
  # DEBUG width => NULL
  # DEBUG height => NULL
  # DEBUG val => NULL
  # DEBUG val2 => NULL
  # DEBUG dy => NULL
  # DEBUG h => NULL
  # DEBUG x => NULL
  # DEBUG y => NULL
  # DEBUG width => NULL
  # DEBUG height => NULL
  # DEBUG i_list => NULL
  # DEBUG ref => NULL
  # DEBUG dy => NULL
  # DEBUG val2 => NULL
  # DEBUG D#22 => ref[1]
  # DEBUG h => h_19(D)
  # DEBUG x => 0
  # DEBUG y => 0
  # DEBUG width => 4
  # DEBUG height => 4
  # DEBUG i_list => 1
  # DEBUG D#1 => (uint8_t) D#22
  # DEBUG ref => D#1
  # DEBUG D#37 => &h_19(D)->mb.cache.ref[1][12]
  # DEBUG dst => D#37
  # DEBUG width => 4
  # DEBUG height => 4
  # DEBUG val => D#1
  # DEBUG D#21 => D#22 & 255
  # DEBUG D#20 => D#21 * 16843009
  # DEBUG val2 => (uint32_t) D#20
  # DEBUG dy => 0
  # DEBUG dy => 0
  MEM[(uint32_t *)h_19(D) + 19164B] = prephitmp_939;
  # DEBUG dy => 1
  # DEBUG dy => 1
  MEM[(uint32_t *)h_19(D) + 19172B] = prephitmp_939;
  # DEBUG dy => 2
  # DEBUG dy => 2
  MEM[(uint32_t *)h_19(D) + 19180B] = prephitmp_939;
  # DEBUG dy => 3
  # DEBUG dy => 3
  MEM[(uint32_t *)h_19(D) + 19188B] = prephitmp_939;
  # DEBUG dy => 4
  # DEBUG dy => 4
  # DEBUG dst => NULL
  # DEBUG width => NULL
  # DEBUG height => NULL
  # DEBUG val => NULL
  # DEBUG val2 => NULL
  # DEBUG dy => NULL
  # DEBUG h => NULL
  # DEBUG x => NULL
  # DEBUG y => NULL
  # DEBUG width => NULL
  # DEBUG height => NULL
  # DEBUG i_list => NULL
  # DEBUG ref => NULL
  # DEBUG dy => NULL
  # DEBUG val2 => NULL
  _140 = MEM[(uint32_t *)&mv];
  # DEBUG h => h_19(D)
  # DEBUG x => 0
  # DEBUG y => 0
  # DEBUG width => 4
  # DEBUG height => 4
  # DEBUG i_list => 0
  # DEBUG mv => _140
  # DEBUG D#36 => &h_19(D)->mb.cache.mv[0][12]
  # DEBUG dst => D#36
  # DEBUG width => 4
  # DEBUG height => 4
  # DEBUG val => _140
  _142 = (long unsigned int) _140;
  _143 = _142 << 32;
  val64_144 = _142 + _143;
  # DEBUG val64 => val64_144
  # DEBUG dy => 0
  # DEBUG dy => 0
  # DEBUG dx => 0
  MEM[(uint64_t *)h_19(D) + 19248B] = val64_144;
  # DEBUG dx => 1
  # DEBUG dx => 1
  MEM[(uint64_t *)h_19(D) + 19256B] = val64_144;
  # DEBUG dx => 2
  # DEBUG dx => 2
  # DEBUG dy => 1
  # DEBUG dy => 1
  # DEBUG dx => 0
  MEM[(uint64_t *)h_19(D) + 19280B] = val64_144;
  # DEBUG dx => 1
  # DEBUG dx => 1
  MEM[(uint64_t *)h_19(D) + 19288B] = val64_144;
  # DEBUG dx => 2
  # DEBUG dx => 2
  # DEBUG dy => 2
  # DEBUG dy => 2
  # DEBUG dx => 0
  MEM[(uint64_t *)h_19(D) + 19312B] = val64_144;
  # DEBUG dx => 1
  # DEBUG dx => 1
  MEM[(uint64_t *)h_19(D) + 19320B] = val64_144;
  # DEBUG dx => 2
  # DEBUG dx => 2
  # DEBUG dy => 3
  # DEBUG dy => 3
  # DEBUG dx => 0
  MEM[(uint64_t *)h_19(D) + 19344B] = val64_144;
  # DEBUG dx => 1
  # DEBUG dx => 1
  MEM[(uint64_t *)h_19(D) + 19352B] = val64_144;
  # DEBUG dx => 2
  # DEBUG dx => 2
  # DEBUG dy => 4
  # DEBUG dy => 4
  # DEBUG dst => NULL
  # DEBUG width => NULL
  # DEBUG height => NULL
  # DEBUG val => NULL
  # DEBUG val64 => NULL
  # DEBUG dx => NULL
  # DEBUG dy => NULL
  # DEBUG h => NULL
  # DEBUG x => NULL
  # DEBUG y => NULL
  # DEBUG width => NULL
  # DEBUG height => NULL
  # DEBUG i_list => NULL
  # DEBUG mv => NULL
  # DEBUG dy => NULL
  # DEBUG dx => NULL
  # DEBUG val64 => NULL
  _154 = MEM[(uint32_t *)&mv + 4B];
  # DEBUG h => h_19(D)
  # DEBUG x => 0
  # DEBUG y => 0
  # DEBUG width => 4
  # DEBUG height => 4
  # DEBUG i_list => 1
  # DEBUG mv => _154
  # DEBUG D#35 => &h_19(D)->mb.cache.mv[1][12]
  # DEBUG dst => D#35
  # DEBUG width => 4
  # DEBUG height => 4
  # DEBUG val => _154
  _156 = (long unsigned int) _154;
  _157 = _156 << 32;
  val64_158 = _156 + _157;
  # DEBUG val64 => val64_158
  # DEBUG dy => 0
  # DEBUG dy => 0
  # DEBUG dx => 0
  MEM[(uint64_t *)h_19(D) + 19440B] = val64_158;
  # DEBUG dx => 1
  # DEBUG dx => 1
  MEM[(uint64_t *)h_19(D) + 19448B] = val64_158;
  # DEBUG dx => 2
  # DEBUG dx => 2
  # DEBUG dy => 1
  # DEBUG dy => 1
  # DEBUG dx => 0
  MEM[(uint64_t *)h_19(D) + 19472B] = val64_158;
  # DEBUG dx => 1
  # DEBUG dx => 1
  MEM[(uint64_t *)h_19(D) + 19480B] = val64_158;
  # DEBUG dx => 2
  # DEBUG dx => 2
  # DEBUG dy => 2
  # DEBUG dy => 2
  # DEBUG dx => 0
  MEM[(uint64_t *)h_19(D) + 19504B] = val64_158;
  # DEBUG dx => 1
  # DEBUG dx => 1
  MEM[(uint64_t *)h_19(D) + 19512B] = val64_158;
  # DEBUG dx => 2
  # DEBUG dx => 2
  # DEBUG dy => 3
  # DEBUG dy => 3
  # DEBUG dx => 0
  MEM[(uint64_t *)h_19(D) + 19536B] = val64_158;
  # DEBUG dx => 1
  # DEBUG dx => 1
  MEM[(uint64_t *)h_19(D) + 19544B] = val64_158;
  # DEBUG dx => 2
  # DEBUG dx => 2
  # DEBUG dy => 4
  # DEBUG dy => 4
  # DEBUG dst => NULL
  # DEBUG width => NULL
  # DEBUG height => NULL
  # DEBUG val => NULL
  # DEBUG val64 => NULL
  # DEBUG dx => NULL
  # DEBUG dy => NULL
  # DEBUG h => NULL
  # DEBUG x => NULL
  # DEBUG y => NULL
  # DEBUG width => NULL
  # DEBUG height => NULL
  # DEBUG i_list => NULL
  # DEBUG mv => NULL
  # DEBUG dy => NULL
  # DEBUG dx => NULL
  # DEBUG val64 => NULL
  type_col.3_168 = (unsigned int) _96;
  if (type_col.3_168 <= 3)
    goto <bb 30>;
  else
    goto <bb 31>;

  <bb 30>:
  pretmp_280 = b_changed_26(D) != 0B;
  goto <bb 64>;

  <bb 31>:
  _169 = h_19(D)->param.i_threads;
  if (_169 > 1)
    goto <bb 32>;
  else
    goto <bb 34>;

  <bb 32>:
  _170 = mv[0][1];
  _171 = (int) _170;
  _172 = h_19(D)->mb.mv_max_spel[1];
  if (_171 > _172)
    goto <bb 64>;
  else
    goto <bb 33>;

  <bb 33>:
  _173 = mv[1][1];
  _174 = (int) _173;
  if (_172 < _174)
    goto <bb 64>;
  else
    goto <bb 34>;

  <bb 34>:
  _175 = h_19(D)->sps;
  _176 = _175->b_direct8x8_inference;
  if (_176 != 0)
    goto <bb 38>;
  else
    goto <bb 35>;

  <bb 35>:
  _523 = _96 & -3;
  if (_523 != 5)
    goto <bb 36>;
  else
    goto <bb 38>;

  <bb 36>:
  _241 = (unsigned char) _96;
  _24 = _241 + 239;
  if (_24 > 1)
    goto <bb 38>;
  else
    goto <bb 37>;

  <bb 37>:

  <bb 38>:
  # b8x8_195 = PHI <1(36), 0(37), 1(34), 0(35)>
  _87 = (long unsigned int) _86;
  _88 = _87 * 4;
  l1mv_89 = _85 + _88;
  l1mv_91 = _90 + _88;
  # DEBUG b8x8 => b8x8_195
  # DEBUG i8 => 0
  # DEBUG i8 => 0

  <bb 39>:
  # i8_266 = PHI <i8_287(63), 0(38)>
  # ivtmp_329 = PHI <ivtmp_640(63), 4(38)>
  # DEBUG i8 => i8_266
  x8_184 = i8_266 & 1;
  # DEBUG x8 => x8_184
  y8_185 = i8_266 >> 1;
  # DEBUG y8 => y8_185
  _186 = h_19(D)->mb.i_b8_stride;
  _187 = y8_185 * _186;
  o8_188 = x8_184 + _187;
  # DEBUG o8 => o8_188
  _189 = (sizetype) o8_188;
  _82 = (sizetype) _81;
  _564 = _82 + _189;
  _190 = _80 + _564;
  _191 = *_190;
  if (_191 == 0)
    goto <bb 43>;
  else
    goto <bb 40>;

  <bb 40>:
  if (_191 < 0)
    goto <bb 42>;
  else
    goto <bb 41>;

  <bb 41>:
  goto <bb 61>;

  <bb 42>:
  _193 = _84 + _564;
  _194 = *_193;
  if (_194 == 0)
    goto <bb 43>;
  else
    goto <bb 41>;

  <bb 43>:
  # l1mv_203 = PHI <l1mv_91(42), l1mv_89(39)>
  # DEBUG l1mv => l1mv_203
  if (b8x8_195 != 0)
    goto <bb 44>;
  else
    goto <bb 50>;

  <bb 44>:
  _196 = x8_184 * 3;
  _197 = y8_185 * 3;
  _198 = h_19(D)->mb.i_b4_stride;
  _199 = _197 * _198;
  _200 = _196 + _199;
  _201 = (long unsigned int) _200;
  _202 = _201 * 4;
  mvcol_204 = l1mv_203 + _202;
  # DEBUG mvcol => mvcol_204
  _205 = *mvcol_204;
  _206 = (unsigned short) _205;
  _207 = _206 + 1;
  if (_207 <= 2)
    goto <bb 45>;
  else
    goto <bb 41>;

  <bb 45>:
  _208 = MEM[(const int16_t *)mvcol_204 + 2B];
  _209 = (unsigned short) _208;
  _210 = _209 + 1;
  if (_210 <= 2)
    goto <bb 46>;
  else
    goto <bb 41>;

  <bb 46>:
  if (prephitmp_592 == 0)
    goto <bb 47>;
  else
    goto <bb 48>;

  <bb 47>:
  _211 = y8_185 * 2;
  _212 = x8_184 * 2;
  # DEBUG h => h_19(D)
  # DEBUG x => _212
  # DEBUG y => _211
  # DEBUG width => 2
  # DEBUG height => 2
  # DEBUG i_list => 0
  # DEBUG mv => 0
  _213 = _212 + 12;
  _214 = _211 * 8;
  _215 = _213 + _214;
  _216 = &h_19(D)->mb.cache.mv[0][_215];
  # DEBUG dst => _216
  # DEBUG width => 2
  # DEBUG height => 2
  # DEBUG val => 0
  # DEBUG val64 => 0
  # DEBUG dy => 0
  # DEBUG dy => 0
  # DEBUG dx => 0
  MEM[(uint64_t *)_216] = 0;
  # DEBUG dx => 1
  # DEBUG dx => 1
  # DEBUG dy => 1
  # DEBUG dy => 1
  # DEBUG dx => 0
  MEM[(uint64_t *)_216 + 32B] = 0;
  # DEBUG dx => 1
  # DEBUG dx => 1
  # DEBUG dy => 2
  # DEBUG dy => 2

  <bb 48>:
  if (prephitmp_265 == 0)
    goto <bb 49>;
  else
    goto <bb 41>;

  <bb 49>:
  _226 = y8_185 * 2;
  _227 = x8_184 * 2;
  # DEBUG h => h_19(D)
  # DEBUG x => _227
  # DEBUG y => _226
  # DEBUG width => 2
  # DEBUG height => 2
  # DEBUG i_list => 1
  # DEBUG mv => 0
  _228 = _227 + 12;
  _229 = _226 * 8;
  _230 = _228 + _229;
  _231 = &h_19(D)->mb.cache.mv[1][_230];
  # DEBUG dst => _231
  # DEBUG width => 2
  # DEBUG height => 2
  # DEBUG val => 0
  # DEBUG val64 => 0
  # DEBUG dy => 0
  # DEBUG dy => 0
  # DEBUG dx => 0
  MEM[(uint64_t *)_231] = 0;
  # DEBUG dx => 1
  # DEBUG dx => 1
  # DEBUG dy => 1
  # DEBUG dy => 1
  # DEBUG dx => 0
  MEM[(uint64_t *)_231 + 32B] = 0;
  # DEBUG dx => 1
  # DEBUG dx => 1
  # DEBUG dy => 2
  # DEBUG dy => 2
  goto <bb 61>;

  <bb 50>:
  pretmp_833 = y8_185 * 2;
  pretmp_825 = x8_184 * 2;

  <bb 51>:
  # i4_500 = PHI <0(50), i4_286(60)>
  # ivtmp_834 = PHI <4(50), ivtmp_842(60)>
  # DEBUG i4 => i4_500
  _242 = i4_500 & 1;
  x4_244 = _242 + pretmp_825;
  # DEBUG x4 => x4_244
  _245 = i4_500 >> 1;
  y4_247 = _245 + pretmp_833;
  # DEBUG y4 => y4_247
  _248 = h_19(D)->mb.i_b4_stride;
  _249 = y4_247 * _248;
  _250 = x4_244 + _249;
  _251 = (long unsigned int) _250;
  _252 = _251 * 4;
  mvcol_253 = l1mv_203 + _252;
  # DEBUG mvcol => mvcol_253
  _254 = *mvcol_253;
  _255 = (unsigned short) _254;
  _256 = _255 + 1;
  if (_256 <= 2)
    goto <bb 53>;
  else
    goto <bb 52>;

  <bb 52>:
  goto <bb 58>;

  <bb 53>:
  _257 = MEM[(const int16_t *)mvcol_253 + 2B];
  _258 = (unsigned short) _257;
  _259 = _258 + 1;
  if (_259 <= 2)
    goto <bb 54>;
  else
    goto <bb 52>;

  <bb 54>:
  if (prephitmp_592 == 0)
    goto <bb 55>;
  else
    goto <bb 56>;

  <bb 55>:
  # DEBUG h => h_19(D)
  # DEBUG x => x4_244
  # DEBUG y => y4_247
  # DEBUG width => 1
  # DEBUG height => 1
  # DEBUG i_list => 0
  # DEBUG mv => 0
  _260 = x4_244 + 12;
  _261 = y4_247 * 8;
  _262 = _260 + _261;
  _263 = &h_19(D)->mb.cache.mv[0][_262];
  # DEBUG dst => _263
  # DEBUG width => 1
  # DEBUG height => 1
  # DEBUG val => 0
  # DEBUG dy => 0
  # DEBUG dx => 0
  MEM[(uint32_t *)_263] = 0;
  # DEBUG dx => 1
  # DEBUG dx => 1
  # DEBUG dy => 1
  # DEBUG dy => 1

  <bb 56>:
  if (prephitmp_265 == 0)
    goto <bb 57>;
  else
    goto <bb 52>;

  <bb 57>:
  # DEBUG h => h_19(D)
  # DEBUG x => x4_244
  # DEBUG y => y4_247
  # DEBUG width => 1
  # DEBUG height => 1
  # DEBUG i_list => 1
  # DEBUG mv => 0
  _273 = x4_244 + 12;
  _274 = y4_247 * 8;
  _275 = _273 + _274;
  _276 = &h_19(D)->mb.cache.mv[1][_275];
  # DEBUG dst => _276
  # DEBUG width => 1
  # DEBUG height => 1
  # DEBUG val => 0
  # DEBUG dy => 0
  # DEBUG dx => 0
  MEM[(uint32_t *)_276] = 0;
  # DEBUG dx => 1
  # DEBUG dx => 1
  # DEBUG dy => 1
  # DEBUG dy => 1

  <bb 58>:
  i4_286 = i4_500 + 1;
  # DEBUG i4 => i4_286
  # DEBUG i4 => i4_286
  ivtmp_842 = ivtmp_834 - 1;
  if (ivtmp_842 != 0)
    goto <bb 60>;
  else
    goto <bb 59>;

  <bb 59>:
  goto <bb 41>;

  <bb 60>:
  goto <bb 51>;

  <bb 61>:
  i8_287 = i8_266 + 1;
  # DEBUG i8 => i8_287
  # DEBUG i8 => i8_287
  ivtmp_640 = ivtmp_329 - 1;
  if (ivtmp_640 != 0)
    goto <bb 63>;
  else
    goto <bb 62>;

  <bb 62>:
  goto <bb 30>;

  <bb 63>:
  goto <bb 39>;

  <bb 64>:
  # b_available_288 = PHI <1(30), 0(33), 0(32)>
  # prephitmp_623 = PHI <pretmp_280(30), 0(33), 0(32)>
  ref ={v} {CLOBBER};
  mv ={v} {CLOBBER};
  # DEBUG h => NULL
  # DEBUG dx => NULL
  # DEBUG dy => NULL
  # DEBUG dx => NULL
  # DEBUG dy => NULL
  # DEBUG dx => NULL
  # DEBUG dy => NULL
  # DEBUG dx => NULL
  # DEBUG dy => NULL
  # DEBUG val2 => NULL
  # DEBUG dy => NULL
  # DEBUG val2 => NULL
  # DEBUG dy => NULL
  # DEBUG val64 => NULL
  # DEBUG dx => NULL
  # DEBUG dy => NULL
  # DEBUG val64 => NULL
  # DEBUG dx => NULL
  # DEBUG dy => NULL
  # DEBUG mvcol => NULL
  # DEBUG y4 => NULL
  # DEBUG x4 => NULL
  # DEBUG mvcol => NULL
  # DEBUG l1mv => NULL
  # DEBUG o8 => NULL
  # DEBUG y8 => NULL
  # DEBUG x8 => NULL
  # DEBUG i_refc => NULL
  # DEBUG i_refb => NULL
  # DEBUG i_refa => NULL
  # DEBUG type_col => NULL
  # DEBUG l1mv1 => NULL
  # DEBUG l1mv0 => NULL
  # DEBUG l1ref0 => NULL
  # DEBUG b8x8 => NULL
  # DEBUG i4 => NULL
  # DEBUG i8 => NULL
  # DEBUG i_list => NULL
  # DEBUG b_available => NULL
  goto <bb 90>;

  <bb 65>:
  # DEBUG h => h_19(D)
  _22 = h_19(D)->mb.i_mb_stride;
  # DEBUG D#34 => _22 * 16
  _298 = h_19(D)->mb.i_mb_y;
  # DEBUG D#33 => D#34 * _298
  _300 = h_19(D)->mb.i_mb_x;
  # DEBUG D#32 => _300 * 4
  # DEBUG i_mb_4x4 => D#33 + D#32
  # DEBUG D#31 => _22 * 4
  # DEBUG D#30 => _298 * D#31
  # DEBUG D#29 => _300 * 2
  # DEBUG i_mb_8x8 => D#30 + D#29
  _307 = h_19(D)->fref1[0];
  _308 = _307->mb_type;
  _309 = h_19(D)->mb.i_mb_xy;
  _310 = (sizetype) _309;
  _311 = _308 + _310;
  _312 = *_311;
  # DEBUG type_col => (const int) _312
  # DEBUG h => h_19(D)
  # DEBUG x => 0
  # DEBUG y => 0
  # DEBUG width => 4
  # DEBUG height => 4
  # DEBUG i_list => 1
  # DEBUG ref => 0
  # DEBUG D#42 => &h_19(D)->mb.cache.ref[1][12]
  # DEBUG dst => D#42
  # DEBUG width => 4
  # DEBUG height => 4
  # DEBUG val => 0
  # DEBUG val2 => 0
  # DEBUG dy => 0
  # DEBUG dy => 0
  MEM[(uint32_t *)h_19(D) + 19164B] = 0;
  # DEBUG dy => 1
  # DEBUG dy => 1
  MEM[(uint32_t *)h_19(D) + 19172B] = 0;
  # DEBUG dy => 2
  # DEBUG dy => 2
  MEM[(uint32_t *)h_19(D) + 19180B] = 0;
  # DEBUG dy => 3
  # DEBUG dy => 3
  MEM[(uint32_t *)h_19(D) + 19188B] = 0;
  # DEBUG dy => 4
  # DEBUG dy => 4
  # DEBUG dst => NULL
  # DEBUG width => NULL
  # DEBUG height => NULL
  # DEBUG val => NULL
  # DEBUG val2 => NULL
  # DEBUG dy => NULL
  # DEBUG h => NULL
  # DEBUG x => NULL
  # DEBUG y => NULL
  # DEBUG width => NULL
  # DEBUG height => NULL
  # DEBUG i_list => NULL
  # DEBUG ref => NULL
  # DEBUG dy => NULL
  # DEBUG val2 => NULL
  type_col.6_321 = (unsigned int) _312;
  if (type_col.6_321 <= 3)
    goto <bb 66>;
  else
    goto <bb 67>;

  <bb 66>:
  # DEBUG h => h_19(D)
  # DEBUG x => 0
  # DEBUG y => 0
  # DEBUG width => 4
  # DEBUG height => 4
  # DEBUG i_list => 0
  # DEBUG ref => 0
  # DEBUG D#41 => &h_19(D)->mb.cache.ref[0][12]
  # DEBUG dst => D#41
  # DEBUG width => 4
  # DEBUG height => 4
  # DEBUG val => 0
  # DEBUG val2 => 0
  # DEBUG dy => 0
  # DEBUG dy => 0
  MEM[(uint32_t *)h_19(D) + 19116B] = 0;
  # DEBUG dy => 1
  # DEBUG dy => 1
  MEM[(uint32_t *)h_19(D) + 19124B] = 0;
  # DEBUG dy => 2
  # DEBUG dy => 2
  MEM[(uint32_t *)h_19(D) + 19132B] = 0;
  # DEBUG dy => 3
  # DEBUG dy => 3
  MEM[(uint32_t *)h_19(D) + 19140B] = 0;
  # DEBUG dy => 4
  # DEBUG dy => 4
  # DEBUG dst => NULL
  # DEBUG width => NULL
  # DEBUG height => NULL
  # DEBUG val => NULL
  # DEBUG val2 => NULL
  # DEBUG dy => NULL
  # DEBUG h => NULL
  # DEBUG x => NULL
  # DEBUG y => NULL
  # DEBUG width => NULL
  # DEBUG height => NULL
  # DEBUG i_list => NULL
  # DEBUG ref => NULL
  # DEBUG dy => NULL
  # DEBUG val2 => NULL
  # DEBUG h => h_19(D)
  # DEBUG x => 0
  # DEBUG y => 0
  # DEBUG width => 4
  # DEBUG height => 4
  # DEBUG i_list => 0
  # DEBUG mv => 0
  # DEBUG D#40 => &h_19(D)->mb.cache.mv[0][12]
  # DEBUG dst => D#40
  # DEBUG width => 4
  # DEBUG height => 4
  # DEBUG val => 0
  # DEBUG val64 => 0
  # DEBUG dy => 0
  # DEBUG dy => 0
  # DEBUG dx => 0
  MEM[(uint64_t *)h_19(D) + 19248B] = 0;
  # DEBUG dx => 1
  # DEBUG dx => 1
  MEM[(uint64_t *)h_19(D) + 19256B] = 0;
  # DEBUG dx => 2
  # DEBUG dx => 2
  # DEBUG dy => 1
  # DEBUG dy => 1
  # DEBUG dx => 0
  MEM[(uint64_t *)h_19(D) + 19280B] = 0;
  # DEBUG dx => 1
  # DEBUG dx => 1
  MEM[(uint64_t *)h_19(D) + 19288B] = 0;
  # DEBUG dx => 2
  # DEBUG dx => 2
  # DEBUG dy => 2
  # DEBUG dy => 2
  # DEBUG dx => 0
  MEM[(uint64_t *)h_19(D) + 19312B] = 0;
  # DEBUG dx => 1
  # DEBUG dx => 1
  MEM[(uint64_t *)h_19(D) + 19320B] = 0;
  # DEBUG dx => 2
  # DEBUG dx => 2
  # DEBUG dy => 3
  # DEBUG dy => 3
  # DEBUG dx => 0
  MEM[(uint64_t *)h_19(D) + 19344B] = 0;
  # DEBUG dx => 1
  # DEBUG dx => 1
  MEM[(uint64_t *)h_19(D) + 19352B] = 0;
  # DEBUG dx => 2
  # DEBUG dx => 2
  # DEBUG dy => 4
  # DEBUG dy => 4
  # DEBUG dst => NULL
  # DEBUG width => NULL
  # DEBUG height => NULL
  # DEBUG val => NULL
  # DEBUG val64 => NULL
  # DEBUG dx => NULL
  # DEBUG dy => NULL
  # DEBUG h => NULL
  # DEBUG x => NULL
  # DEBUG y => NULL
  # DEBUG width => NULL
  # DEBUG height => NULL
  # DEBUG i_list => NULL
  # DEBUG mv => NULL
  # DEBUG dy => NULL
  # DEBUG dx => NULL
  # DEBUG val64 => NULL
  # DEBUG h => h_19(D)
  # DEBUG x => 0
  # DEBUG y => 0
  # DEBUG width => 4
  # DEBUG height => 4
  # DEBUG i_list => 1
  # DEBUG mv => 0
  # DEBUG D#39 => &h_19(D)->mb.cache.mv[1][12]
  # DEBUG dst => D#39
  # DEBUG width => 4
  # DEBUG height => 4
  # DEBUG val => 0
  # DEBUG val64 => 0
  # DEBUG dy => 0
  # DEBUG dy => 0
  # DEBUG dx => 0
  MEM[(uint64_t *)h_19(D) + 19440B] = 0;
  # DEBUG dx => 1
  # DEBUG dx => 1
  MEM[(uint64_t *)h_19(D) + 19448B] = 0;
  # DEBUG dx => 2
  # DEBUG dx => 2
  # DEBUG dy => 1
  # DEBUG dy => 1
  # DEBUG dx => 0
  MEM[(uint64_t *)h_19(D) + 19472B] = 0;
  # DEBUG dx => 1
  # DEBUG dx => 1
  MEM[(uint64_t *)h_19(D) + 19480B] = 0;
  # DEBUG dx => 2
  # DEBUG dx => 2
  # DEBUG dy => 2
  # DEBUG dy => 2
  # DEBUG dx => 0
  MEM[(uint64_t *)h_19(D) + 19504B] = 0;
  # DEBUG dx => 1
  # DEBUG dx => 1
  MEM[(uint64_t *)h_19(D) + 19512B] = 0;
  # DEBUG dx => 2
  # DEBUG dx => 2
  # DEBUG dy => 3
  # DEBUG dy => 3
  # DEBUG dx => 0
  MEM[(uint64_t *)h_19(D) + 19536B] = 0;
  # DEBUG dx => 1
  # DEBUG dx => 1
  MEM[(uint64_t *)h_19(D) + 19544B] = 0;
  # DEBUG dx => 2
  # DEBUG dx => 2
  # DEBUG dy => 4
  # DEBUG dy => 4
  pretmp_557 = b_changed_26(D) != 0B;
  goto <bb 90>;

  <bb 67>:
  _349 = h_19(D)->sps;
  _350 = _349->b_direct8x8_inference;
  if (_350 != 0)
    goto <bb 71>;
  else
    goto <bb 68>;

  <bb 68>:
  _183 = _312 & -3;
  if (_183 != 5)
    goto <bb 69>;
  else
    goto <bb 71>;

  <bb 69>:
  _179 = (unsigned char) _312;
  _182 = _179 + 239;
  if (_182 > 1)
    goto <bb 71>;
  else
    goto <bb 70>;

  <bb 70>:

  <bb 71>:
  # b8x8_390 = PHI <1(69), 0(70), 1(67), 0(68)>
  _301 = _300 * 4;
  _297 = _22 * 16;
  _299 = _297 * _298;
  i_mb_4x4_302 = _299 + _301;
  # DEBUG b8x8 => b8x8_390
  # DEBUG i8 => 0
  # DEBUG i8 => 0
  _305 = _300 * 2;
  _303 = _22 * 4;
  _304 = _298 * _303;
  i_mb_8x8_306 = _304 + _305;

  <bb 72>:
  # i8_804 = PHI <i8_504(80), 0(71)>
  # prephitmp_495 = PHI <pretmp_139(80), _307(71)>
  # ivtmp_339 = PHI <ivtmp_892(80), 4(71)>
  # DEBUG i8 => i8_804
  x8_358 = i8_804 & 1;
  # DEBUG x8 => x8_358
  y8_359 = i8_804 >> 1;
  # DEBUG y8 => y8_359
  _360 = i_mb_8x8_306 + x8_358;
  _361 = h_19(D)->mb.i_b8_stride;
  _362 = y8_359 * _361;
  i_part_8x8_363 = _360 + _362;
  # DEBUG i_part_8x8 => i_part_8x8_363
  _365 = prephitmp_495->ref[0];
  _366 = (sizetype) i_part_8x8_363;
  _367 = _365 + _366;
  _368 = *_367;
  _369 = (int) _368;
  _370 = h_19(D)->mb.map_col_to_list0[_369];
  i_ref_371 = (const int) _370;
  # DEBUG i_ref => i_ref_371
  if (i_ref_371 >= 0)
    goto <bb 73>;
  else
    goto <bb 113>;

  <bb 73>:
  _372 = h_19(D)->mb.dist_scale_factor[i_ref_371][0];
  dist_scale_factor_373 = (const int) _372;
  # DEBUG dist_scale_factor => dist_scale_factor_373
  _374 = y8_359 * 2;
  _375 = x8_358 * 2;
  # DEBUG h => h_19(D)
  # DEBUG x => _375
  # DEBUG y => _374
  # DEBUG width => 2
  # DEBUG height => 2
  # DEBUG i_list => 0
  ref_376 = (uint8_t) _370;
  # DEBUG ref => ref_376
  _377 = _375 + 12;
  _378 = _374 * 8;
  _379 = _377 + _378;
  _380 = &h_19(D)->mb.cache.ref[0][_379];
  # DEBUG dst => _380
  # DEBUG width => 2
  # DEBUG height => 2
  # DEBUG val => ref_376
  _381 = (int) ref_376;
  _382 = _381 * 257;
  # DEBUG val2 => (uint32_t) _382
  # DEBUG dy => 0
  # DEBUG dy => 0
  _887 = (short unsigned int) _382;
  MEM[(uint16_t *)_380] = _887;
  # DEBUG dy => 1
  # DEBUG dy => 1
  MEM[(uint16_t *)_380 + 8B] = _887;
  # DEBUG dy => 2
  # DEBUG dy => 2
  # DEBUG dst => NULL
  # DEBUG width => NULL
  # DEBUG height => NULL
  # DEBUG val => NULL
  # DEBUG val2 => NULL
  # DEBUG dy => NULL
  # DEBUG h => NULL
  # DEBUG x => NULL
  # DEBUG y => NULL
  # DEBUG width => NULL
  # DEBUG height => NULL
  # DEBUG i_list => NULL
  # DEBUG ref => NULL
  # DEBUG dy => NULL
  # DEBUG val2 => NULL
  if (b8x8_390 != 0)
    goto <bb 74>;
  else
    goto <bb 75>;

  <bb 74>:
  _391 = prephitmp_495->mv[0];
  _392 = x8_358 * 3;
  _393 = i_mb_4x4_302 + _392;
  _394 = y8_359 * 3;
  _395 = h_19(D)->mb.i_b4_stride;
  _396 = _394 * _395;
  _397 = _393 + _396;
  _398 = (long unsigned int) _397;
  _399 = _398 * 4;
  mv_col_400 = _391 + _399;
  # DEBUG mv_col => mv_col_400
  _401 = *mv_col_400;
  _402 = (int) _401;
  _403 = dist_scale_factor_373 * _402;
  _404 = _403 + 128;
  l0x_405 = _404 >> 8;
  # DEBUG l0x => l0x_405
  _406 = MEM[(const int16_t *)mv_col_400 + 2B];
  _407 = (int) _406;
  _408 = dist_scale_factor_373 * _407;
  _409 = _408 + 128;
  l0y_410 = _409 >> 8;
  # DEBUG l0y => l0y_410
  # DEBUG a => l0x_405
  # DEBUG b => l0y_410
  _411 = l0x_405 & 65535;
  _412 = l0y_410 << 16;
  _413 = _411 + _412;
  _414 = (unsigned int) _413;
  # DEBUG a => NULL
  # DEBUG b => NULL
  # DEBUG h => h_19(D)
  # DEBUG x => _375
  # DEBUG y => _374
  # DEBUG width => 2
  # DEBUG height => 2
  # DEBUG i_list => 0
  # DEBUG mv => NULL
  _415 = &h_19(D)->mb.cache.mv[0][_379];
  # DEBUG dst => _415
  # DEBUG width => 2
  # DEBUG height => 2
  # DEBUG val => NULL
  _416 = (long unsigned int) _414;
  _417 = _416 << 32;
  val64_418 = _416 + _417;
  # DEBUG val64 => val64_418
  # DEBUG dy => 0
  # DEBUG dy => 0
  # DEBUG dx => 0
  MEM[(uint64_t *)_415] = val64_418;
  # DEBUG dx => 1
  # DEBUG dx => 1
  # DEBUG dy => 1
  # DEBUG dy => 1
  # DEBUG dx => 0
  MEM[(uint64_t *)_415 + 32B] = val64_418;
  # DEBUG dx => 1
  # DEBUG dx => 1
  # DEBUG dy => 2
  # DEBUG dy => 2
  # DEBUG dst => NULL
  # DEBUG width => NULL
  # DEBUG height => NULL
  # DEBUG val => NULL
  # DEBUG val64 => NULL
  # DEBUG dx => NULL
  # DEBUG dy => NULL
  # DEBUG h => NULL
  # DEBUG x => NULL
  # DEBUG y => NULL
  # DEBUG width => NULL
  # DEBUG height => NULL
  # DEBUG i_list => NULL
  # DEBUG mv => NULL
  # DEBUG dy => NULL
  # DEBUG dx => NULL
  # DEBUG val64 => NULL
  _428 = l0y_410 - _407;
  _429 = l0x_405 - _402;
  # DEBUG a => _429
  # DEBUG b => _428
  _430 = _429 & 65535;
  _431 = _428 << 16;
  _432 = _430 + _431;
  _433 = (unsigned int) _432;
  # DEBUG a => NULL
  # DEBUG b => NULL
  # DEBUG h => h_19(D)
  # DEBUG x => _375
  # DEBUG y => _374
  # DEBUG width => 2
  # DEBUG height => 2
  # DEBUG i_list => 1
  # DEBUG mv => NULL
  _434 = &h_19(D)->mb.cache.mv[1][_379];
  # DEBUG dst => _434
  # DEBUG width => 2
  # DEBUG height => 2
  # DEBUG val => NULL
  _435 = (long unsigned int) _433;
  _436 = _435 << 32;
  val64_437 = _435 + _436;
  # DEBUG val64 => val64_437
  # DEBUG dy => 0
  # DEBUG dy => 0
  # DEBUG dx => 0
  MEM[(uint64_t *)_434] = val64_437;
  # DEBUG dx => 1
  # DEBUG dx => 1
  # DEBUG dy => 1
  # DEBUG dy => 1
  # DEBUG dx => 0
  MEM[(uint64_t *)_434 + 32B] = val64_437;
  # DEBUG dx => 1
  # DEBUG dx => 1
  # DEBUG dy => 2
  # DEBUG dy => 2
  goto <bb 79>;

  <bb 75>:
  pretmp_594 = prephitmp_495->mv[0];

  <bb 76>:
  # i4_642 = PHI <0(75), i4_503(77)>
  # ivtmp_956 = PHI <4(75), ivtmp_962(77)>
  # DEBUG i4 => i4_642
  _448 = i4_642 & 1;
  x4_449 = _375 + _448;
  # DEBUG x4 => x4_449
  _450 = i4_642 >> 1;
  y4_451 = _374 + _450;
  # DEBUG y4 => y4_451
  _453 = i_mb_4x4_302 + x4_449;
  _454 = h_19(D)->mb.i_b4_stride;
  _455 = y4_451 * _454;
  _456 = _453 + _455;
  _457 = (long unsigned int) _456;
  _458 = _457 * 4;
  mv_col_459 = pretmp_594 + _458;
  # DEBUG mv_col => mv_col_459
  _460 = *mv_col_459;
  _461 = (int) _460;
  _462 = dist_scale_factor_373 * _461;
  _463 = _462 + 128;
  l0x_464 = _463 >> 8;
  # DEBUG l0x => l0x_464
  _465 = MEM[(const int16_t *)mv_col_459 + 2B];
  _466 = (int) _465;
  _467 = dist_scale_factor_373 * _466;
  _468 = _467 + 128;
  l0y_469 = _468 >> 8;
  # DEBUG l0y => l0y_469
  # DEBUG a => l0x_464
  # DEBUG b => l0y_469
  _470 = l0x_464 & 65535;
  _471 = l0y_469 << 16;
  _472 = _470 + _471;
  _473 = (unsigned int) _472;
  # DEBUG a => NULL
  # DEBUG b => NULL
  # DEBUG h => h_19(D)
  # DEBUG x => x4_449
  # DEBUG y => y4_451
  # DEBUG width => 1
  # DEBUG height => 1
  # DEBUG i_list => 0
  # DEBUG mv => NULL
  _474 = x4_449 + 12;
  _475 = y4_451 * 8;
  _476 = _474 + _475;
  _477 = &h_19(D)->mb.cache.mv[0][_476];
  # DEBUG dst => _477
  # DEBUG width => 1
  # DEBUG height => 1
  # DEBUG val => NULL
  # DEBUG dy => 0
  # DEBUG dx => 0
  MEM[(uint32_t *)_477] = _473;
  # DEBUG dx => 1
  # DEBUG dx => 1
  # DEBUG dy => 1
  # DEBUG dy => 1
  # DEBUG dst => NULL
  # DEBUG width => NULL
  # DEBUG height => NULL
  # DEBUG val => NULL
  # DEBUG val64 => NULL
  # DEBUG dx => NULL
  # DEBUG dy => NULL
  # DEBUG h => NULL
  # DEBUG x => NULL
  # DEBUG y => NULL
  # DEBUG width => NULL
  # DEBUG height => NULL
  # DEBUG i_list => NULL
  # DEBUG mv => NULL
  # DEBUG dy => NULL
  # DEBUG dx => NULL
  # DEBUG val64 => NULL
  _487 = l0y_469 - _466;
  _488 = l0x_464 - _461;
  # DEBUG a => _488
  # DEBUG b => _487
  _489 = _488 & 65535;
  _490 = _487 << 16;
  _491 = _489 + _490;
  _492 = (unsigned int) _491;
  # DEBUG a => NULL
  # DEBUG b => NULL
  # DEBUG h => h_19(D)
  # DEBUG x => x4_449
  # DEBUG y => y4_451
  # DEBUG width => 1
  # DEBUG height => 1
  # DEBUG i_list => 1
  # DEBUG mv => NULL
  _493 = &h_19(D)->mb.cache.mv[1][_476];
  # DEBUG dst => _493
  # DEBUG width => 1
  # DEBUG height => 1
  # DEBUG val => NULL
  # DEBUG dy => 0
  # DEBUG dx => 0
  MEM[(uint32_t *)_493] = _492;
  # DEBUG dx => 1
  # DEBUG dx => 1
  # DEBUG dy => 1
  # DEBUG dy => 1
  # DEBUG dst => NULL
  # DEBUG width => NULL
  # DEBUG height => NULL
  # DEBUG val => NULL
  # DEBUG val64 => NULL
  # DEBUG dx => NULL
  # DEBUG dy => NULL
  # DEBUG h => NULL
  # DEBUG x => NULL
  # DEBUG y => NULL
  # DEBUG width => NULL
  # DEBUG height => NULL
  # DEBUG i_list => NULL
  # DEBUG mv => NULL
  # DEBUG dy => NULL
  # DEBUG dx => NULL
  # DEBUG val64 => NULL
  i4_503 = i4_642 + 1;
  # DEBUG i4 => i4_503
  # DEBUG i4 => i4_503
  ivtmp_962 = ivtmp_956 - 1;
  if (ivtmp_962 != 0)
    goto <bb 77>;
  else
    goto <bb 78>;

  <bb 77>:
  goto <bb 76>;

  <bb 78>:

  <bb 79>:
  i8_504 = i8_804 + 1;
  # DEBUG i8 => i8_504
  # DEBUG i8 => i8_504
  ivtmp_892 = ivtmp_339 - 1;
  if (ivtmp_892 != 0)
    goto <bb 80>;
  else
    goto <bb 81>;

  <bb 80>:
  pretmp_139 = h_19(D)->fref1[0];
  goto <bb 72>;

  <bb 81>:
  _505 = h_19(D)->param.i_threads;
  if (_505 > 1)
    goto <bb 83>;
  else
    goto <bb 82>;

  <bb 82>:
  pretmp_481 = b_changed_26(D) != 0B;
  goto <bb 90>;

  <bb 83>:
  if (b8x8_390 != 0)
    goto <bb 85>;
  else
    goto <bb 84>;

  <bb 84>:

  <bb 85>:
  # di_513 = PHI <4(83), 1(84)>
  # DEBUG di => di_513
  # DEBUG i4 => 0
  # DEBUG i4 => 0
  pretmp_499 = h_19(D)->mb.mv_max_spel[1];

  <bb 86>:
  # i4_421 = PHI <i4_514(89), 0(85)>
  # DEBUG i4 => i4_421
  _507 = x264_scan8[i4_421];
  _508 = h_19(D)->mb.cache.mv[0][_507][1];
  _509 = (int) _508;
  if (pretmp_499 < _509)
    goto <bb 113>;
  else
    goto <bb 87>;

  <bb 87>:
  _511 = h_19(D)->mb.cache.mv[1][_507][1];
  _512 = (int) _511;
  if (pretmp_499 < _512)
    goto <bb 113>;
  else
    goto <bb 88>;

  <bb 88>:
  i4_514 = i4_421 + di_513;
  # DEBUG i4 => i4_514
  # DEBUG i4 => i4_514
  if (i4_514 <= 15)
    goto <bb 89>;
  else
    goto <bb 82>;

  <bb 89>:
  goto <bb 86>;

  <bb 90>:
  # b_available_1 = PHI <b_available_288(64), 1(82), 1(66)>
  # prephitmp_268 = PHI <prephitmp_623(64), pretmp_481(82), pretmp_557(66)>
  # DEBUG b_available => b_available_1
  if (prephitmp_268 != 0)
    goto <bb 91>;
  else
    goto <bb 108>;

  <bb 91>:
  _30 = h_19(D)->fref1[0];
  _31 = _30->mb_type;
  _32 = h_19(D)->mb.i_mb_xy;
  _33 = (sizetype) _32;
  _34 = _31 + _33;
  _35 = *_34;
  # DEBUG type_col => (int) _35
  type_col.0_36 = (unsigned int) _35;
  _37 = type_col.0_36 <= 3;
  _38 = _35 == 6;
  _39 = _37 | _38;
  if (_39 != 0)
    goto <bb 92>;
  else
    goto <bb 97>;

  <bb 92>:
  _40 = h_19(D)->mb.cache.direct_ref[0][0];
  _41 = h_19(D)->mb.cache.ref[0][12];
  if (_40 != _41)
    goto <bb 96>;
  else
    goto <bb 93>;

  <bb 93>:
  _42 = h_19(D)->mb.cache.direct_ref[1][0];
  _43 = h_19(D)->mb.cache.ref[1][12];
  if (_42 != _43)
    goto <bb 96>;
  else
    goto <bb 94>;

  <bb 94>:
  _44 = MEM[(uint32_t *)h_19(D) + 20064B];
  _45 = MEM[(uint32_t *)h_19(D) + 19248B];
  if (_44 != _45)
    goto <bb 96>;
  else
    goto <bb 95>;

  <bb 95>:
  _47 = MEM[(uint32_t *)h_19(D) + 20256B];
  _48 = MEM[(uint32_t *)h_19(D) + 19440B];
  _2 = _47 != _48;
  _386 = (int) _2;

  <bb 96>:
  # iftmp.1_7 = PHI <_386(95), 1(93), 1(92), 1(94)>
  *b_changed_26(D) = iftmp.1_7;
  goto <bb 106>;

  <bb 97>:
  *b_changed_26(D) = 0;
  # DEBUG l => 0
  # DEBUG l => 0
  goto <bb 102>;

  <bb 98>:

  <bb 99>:
  # i_608 = PHI <i_60(98), 0(102)>
  # prephitmp_319 = PHI <_58(98), prephitmp_813(102)>
  # ivtmp_920 = PHI <ivtmp_928(98), 4(102)>
  # DEBUG i => i_608
  _52 = h_19(D)->mb.cache.direct_ref[l_25][i_608];
  _53 = i_608 * 4;
  _54 = x264_scan8[_53];
  _55 = h_19(D)->mb.cache.ref[l_25][_54];
  _56 = _52 != _55;
  _57 = (int) _56;
  _58 = _57 | prephitmp_319;
  *b_changed_26(D) = _58;
  i_60 = i_608 + 1;
  # DEBUG i => i_60
  # DEBUG i => i_60
  ivtmp_928 = ivtmp_920 - 1;
  if (ivtmp_928 != 0)
    goto <bb 98>;
  else
    goto <bb 100>;

  <bb 100>:
  # _296 = PHI <_58(99)>
  l_61 = l_25 + 1;
  # DEBUG l => l_61
  # DEBUG l => l_61
  ivtmp_826 = ivtmp_322 - 1;
  if (ivtmp_826 != 0)
    goto <bb 101>;
  else
    goto <bb 103>;

  <bb 101>:

  <bb 102>:
  # l_25 = PHI <l_61(101), 0(97)>
  # prephitmp_813 = PHI <_296(101), 0(97)>
  # ivtmp_322 = PHI <ivtmp_826(101), 2(97)>
  # DEBUG l => l_25
  # DEBUG i => 0
  goto <bb 99>;

  <bb 103>:
  # _1002 = PHI <_296(100)>
  if (_1002 != 0)
    goto <bb 105>;
  else
    goto <bb 104>;

  <bb 104>:
  _63 = &h_19(D)->mb.cache.mv;
  _64 = &h_19(D)->mb.cache.direct_mv;
  _65 = memcmp (_64, _63, 384);
  _725 = _65 != 0;
  _3 = (int) _725;

  <bb 105>:
  # iftmp.2_8 = PHI <_3(104), 1(103)>
  *b_changed_26(D) = iftmp.2_8;

  <bb 106>:
  # prephitmp_328 = PHI <iftmp.1_7(96), iftmp.2_8(105)>
  if (prephitmp_328 == 0)
    goto <bb 112>;
  else
    goto <bb 107>;

  <bb 107>:
  # DEBUG l => 0
  goto <bb 110>;

  <bb 108>:
  if (b_available_1 != 0)
    goto <bb 107>;
  else
    goto <bb 114>;

  <bb 109>:

  <bb 110>:
  # l_972 = PHI <l_73(109), 0(107)>
  # ivtmp_314 = PHI <ivtmp_912(109), 2(107)>
  # DEBUG l => l_972
  # DEBUG i => 0
  _617 = h_19(D)->mb.cache.ref[l_972][12];
  h_19(D)->mb.cache.direct_ref[l_972][0] = _617;
  # DEBUG i => 1
  # DEBUG i => 1
  _624 = h_19(D)->mb.cache.ref[l_972][14];
  h_19(D)->mb.cache.direct_ref[l_972][1] = _624;
  # DEBUG i => 2
  # DEBUG i => 2
  _631 = h_19(D)->mb.cache.ref[l_972][28];
  h_19(D)->mb.cache.direct_ref[l_972][2] = _631;
  # DEBUG i => 3
  # DEBUG i => 3
  _638 = h_19(D)->mb.cache.ref[l_972][30];
  h_19(D)->mb.cache.direct_ref[l_972][3] = _638;
  # DEBUG i => 4
  # DEBUG i => 4
  l_73 = l_972 + 1;
  # DEBUG l => l_73
  # DEBUG l => l_73
  ivtmp_912 = ivtmp_314 - 1;
  if (ivtmp_912 != 0)
    goto <bb 109>;
  else
    goto <bb 111>;

  <bb 111>:
  _74 = h_19(D)->mc.memcpy_aligned;
  _75 = &h_19(D)->mb.cache.mv;
  _76 = &h_19(D)->mb.cache.direct_mv;
  _74 (_76, _75, 384);

  <bb 112>:
  # _6 = PHI <0(114), 1(106), 1(111)>
  return _6;

  <bb 113>:

  <bb 114>:
  # DEBUG b_available => 0
  goto <bb 112>;

}



;; Function x264_mb_load_mv_direct8x8 (x264_mb_load_mv_direct8x8, funcdef_no=121, decl_uid=5571, cgraph_uid=121, symbol_order=164)

common/macroblock.c:402:6: note: vectorized 0 loops in function.
x264_mb_load_mv_direct8x8 (struct x264_t * h, int idx)
{
  int dy;
  int dy;
  const int y;
  const int x;
  int _2;
  int _4;
  signed char _8;
  unsigned char _9;
  signed char _10;
  unsigned char _11;
  int _12;
  int _13;
  int16_t[2] * _14;
  int16_t[2] * _15;
  long unsigned int _16;
  int _18;
  int16_t[2] * _19;
  int16_t[2] * _20;
  long unsigned int _21;
  int16_t[2] * _23;
  int16_t[2] * _24;
  long unsigned int _25;
  int16_t[2] * _27;
  int16_t[2] * _28;
  long unsigned int _29;
  int8_t * _31;
  int _32;
  int _33;
  int _41;
  int _42;
  int _43;
  int8_t * _44;
  int _49;
  int _50;
  short unsigned int _64;
  short unsigned int _82;

  <bb 2>:
  _2 = idx_1(D) % 2;
  x_3 = _2 * 2;
  # DEBUG x => x_3
  _4 = idx_1(D) / 2;
  y_5 = _4 * 2;
  # DEBUG y => y_5
  _8 = h_7(D)->mb.cache.direct_ref[0][idx_1(D)];
  _9 = (unsigned char) _8;
  # DEBUG h => h_7(D)
  # DEBUG x => x_3
  # DEBUG y => y_5
  # DEBUG width => 2
  # DEBUG height => 2
  # DEBUG i_list => 0
  # DEBUG ref => _9
  _41 = x_3 + 12;
  _42 = y_5 * 8;
  _43 = _41 + _42;
  _44 = &h_7(D)->mb.cache.ref[0][_43];
  # DEBUG dst => _44
  # DEBUG width => 2
  # DEBUG height => 2
  # DEBUG val => _9
  _49 = (int) _9;
  _50 = _49 * 257;
  # DEBUG val2 => (uint32_t) _50
  # DEBUG dy => 0
  # DEBUG dy => 0
  _82 = (short unsigned int) _50;
  MEM[(uint16_t *)_44] = _82;
  # DEBUG dy => 1
  # DEBUG dy => 1
  MEM[(uint16_t *)_44 + 8B] = _82;
  # DEBUG dy => 2
  # DEBUG dy => 2
  # DEBUG dst => NULL
  # DEBUG width => NULL
  # DEBUG height => NULL
  # DEBUG val => NULL
  # DEBUG val2 => NULL
  # DEBUG dy => NULL
  # DEBUG h => NULL
  # DEBUG x => NULL
  # DEBUG y => NULL
  # DEBUG width => NULL
  # DEBUG height => NULL
  # DEBUG i_list => NULL
  # DEBUG ref => NULL
  # DEBUG dy => NULL
  # DEBUG val2 => NULL
  _10 = h_7(D)->mb.cache.direct_ref[1][idx_1(D)];
  _11 = (unsigned char) _10;
  # DEBUG h => h_7(D)
  # DEBUG x => x_3
  # DEBUG y => y_5
  # DEBUG width => 2
  # DEBUG height => 2
  # DEBUG i_list => 1
  # DEBUG ref => _11
  _31 = &h_7(D)->mb.cache.ref[1][_43];
  # DEBUG dst => _31
  # DEBUG width => 2
  # DEBUG height => 2
  # DEBUG val => _11
  _32 = (int) _11;
  _33 = _32 * 257;
  # DEBUG val2 => (uint32_t) _33
  # DEBUG dy => 0
  # DEBUG dy => 0
  _64 = (short unsigned int) _33;
  MEM[(uint16_t *)_31] = _64;
  # DEBUG dy => 1
  # DEBUG dy => 1
  MEM[(uint16_t *)_31 + 8B] = _64;
  # DEBUG dy => 2
  # DEBUG dy => 2
  # DEBUG dst => NULL
  # DEBUG width => NULL
  # DEBUG height => NULL
  # DEBUG val => NULL
  # DEBUG val2 => NULL
  # DEBUG dy => NULL
  # DEBUG h => NULL
  # DEBUG x => NULL
  # DEBUG y => NULL
  # DEBUG width => NULL
  # DEBUG height => NULL
  # DEBUG i_list => NULL
  # DEBUG ref => NULL
  # DEBUG dy => NULL
  # DEBUG val2 => NULL
  _12 = idx_1(D) * 4;
  _13 = x264_scan8[_12];
  _14 = &h_7(D)->mb.cache.mv[0][_13];
  _15 = &h_7(D)->mb.cache.direct_mv[0][_13];
  _16 = MEM[(uint64_t *)_15];
  MEM[(uint64_t *)_14] = _16;
  _18 = _13 + 8;
  _19 = &h_7(D)->mb.cache.mv[0][_18];
  _20 = &h_7(D)->mb.cache.direct_mv[0][_18];
  _21 = MEM[(uint64_t *)_20];
  MEM[(uint64_t *)_19] = _21;
  _23 = &h_7(D)->mb.cache.mv[1][_13];
  _24 = &h_7(D)->mb.cache.direct_mv[1][_13];
  _25 = MEM[(uint64_t *)_24];
  MEM[(uint64_t *)_23] = _25;
  _27 = &h_7(D)->mb.cache.mv[1][_18];
  _28 = &h_7(D)->mb.cache.direct_mv[1][_18];
  _29 = MEM[(uint64_t *)_28];
  MEM[(uint64_t *)_27] = _29;
  return;

}



;; Function x264_mb_mc (x264_mb_mc, funcdef_no=129, decl_uid=5579, cgraph_uid=129, symbol_order=172)


Analyzing loop at common/macroblock.c:720
common/macroblock.c:720:9: note: ===== analyze_loop_nest =====
common/macroblock.c:720:9: note: === vect_analyze_loop_form ===
split exit edge.
common/macroblock.c:720:9: note: === get_loop_niters ===
Analyzing # of iterations of loop 2
  exit condition [3, + , 4294967295] != 0
  bounds on difference of bases: -3 ... -3
  result:
    # of iterations 3, bounded by 3
common/macroblock.c:720:9: note: === vect_analyze_data_refs ===
common/macroblock.c:720:9: note: not vectorized: loop contains function calls or data references that cannot be analyzed
common/macroblock.c:720:9: note: bad data references.
common/macroblock.c:698:6: note: vectorized 0 loops in function.
x264_mb_mc (struct x264_t * h)
{
  const int i8;
  const int i_ref;
  int mvy;
  const int i8;
  const int i_ref;
  int mvy;
  const int i8;
  const int i_ref;
  int mvy;
  const int i8;
  const int i_ref;
  int mvy;
  const int i8;
  const int i_ref;
  int mvy;
  const int i8;
  const int i_ref;
  int mvy;
  const int i8;
  const int i_ref;
  int mvy;
  const int i8;
  const int i_ref;
  int mvy;
  const int i8;
  const int i_ref;
  int mvy;
  const int i8;
  const int i_ref;
  int mvy;
  const int i8;
  const int i_ref;
  int mvy;
  const int i8;
  const int i_ref;
  int mvy;
  const int i8;
  const int i_ref;
  int mvy;
  const int i8;
  const int i_ref;
  int mvy;
  const int i8;
  const int i_ref;
  int mvy;
  int i;
  int b_list1[2];
  int b_list0[2];
  int i;
  int _11;
  int _12;
  _Bool _20;
  _Bool _21;
  _Bool _22;
  _Bool _25;
  _Bool _26;
  _Bool _27;
  int _39;
  signed char _75;
  int _77;
  int _78;
  short int _79;
  int _80;
  int iftmp.11_81;
  int _82;
  short int _84;
  int _85;
  void (*<Tf7f>) (uint8_t *, int, uint8_t * *, int, int, int, int, int) _87;
  unsigned char _92;
  int iftmp.11_94;
  int _95;
  int _96;
  uint8_t *[6] * _97;
  uint8_t * _98;
  int _104;
  int _105;
  int _106;
  int _107;
  int _108;
  int _109;
  void (*<Tf87>) (uint8_t *, int, uint8_t *, int, int, int, int, int) _111;
  uint8_t * _114;
  int _116;
  uint8_t * _122;
  void (*<Tf87>) (uint8_t *, int, uint8_t *, int, int, int, int, int) _127;
  uint8_t * _128;
  int _129;
  uint8_t * _134;
  signed char _138;
  int _140;
  int _141;
  short int _142;
  int _143;
  int iftmp.11_144;
  int _145;
  short int _147;
  int _148;
  void (*<Tf7f>) (uint8_t *, int, uint8_t * *, int, int, int, int, int) _150;
  int _155;
  int iftmp.11_157;
  int _158;
  int _159;
  uint8_t *[6] * _160;
  uint8_t * _161;
  uint8_t * _166;
  int _167;
  int _168;
  int _169;
  int _170;
  int _171;
  int _172;
  void (*<Tf87>) (uint8_t *, int, uint8_t *, int, int, int, int, int) _174;
  uint8_t * _177;
  int _179;
  int _180;
  sizetype _183;
  uint8_t * _184;
  uint8_t * _185;
  uint8_t * _188;
  void (*<Tf87>) (uint8_t *, int, uint8_t *, int, int, int, int, int) _190;
  uint8_t * _191;
  int _192;
  int _193;
  unsigned char _194;
  sizetype _195;
  uint8_t * _196;
  uint8_t * _197;
  uint8_t * _198;
  signed char _201;
  int _203;
  int _204;
  short int _205;
  int _206;
  int iftmp.11_207;
  int _208;
  short int _210;
  int _211;
  void (*<Tf7f>) (uint8_t *, int, uint8_t * *, int, int, int, int, int) _213;
  int iftmp.11_220;
  int _222;
  uint8_t *[6] * _223;
  uint8_t * _224;
  int _230;
  int _231;
  int _232;
  int _233;
  int _234;
  int _235;
  void (*<Tf87>) (uint8_t *, int, uint8_t *, int, int, int, int, int) _237;
  uint8_t * _240;
  int _242;
  unsigned int ivtmp_247;
  uint8_t * _248;
  void (*<Tf87>) (uint8_t *, int, uint8_t *, int, int, int, int, int) _253;
  uint8_t * _254;
  int _255;
  uint8_t * _260;
  unsigned char _261;
  signed char _264;
  int _266;
  int _267;
  short int _268;
  int _269;
  int iftmp.11_270;
  int _271;
  short int _273;
  int _274;
  void (*<Tf7f>) (uint8_t *, int, uint8_t * *, int, int, int, int, int) _276;
  unsigned int ivtmp_279;
  int iftmp.11_283;
  int _284;
  int _285;
  uint8_t *[6] * _286;
  uint8_t * _287;
  uint8_t * _292;
  int _293;
  int _294;
  int _295;
  int _296;
  int _297;
  int _298;
  void (*<Tf87>) (uint8_t *, int, uint8_t *, int, int, int, int, int) _300;
  uint8_t * _303;
  int _305;
  uint8_t * _310;
  uint8_t * _311;
  uint8_t * _314;
  void (*<Tf87>) (uint8_t *, int, uint8_t *, int, int, int, int, int) _316;
  uint8_t * _317;
  int _318;
  uint8_t * _322;
  uint8_t * _323;
  uint8_t * _324;
  signed char _327;
  int _329;
  int _330;
  short int _331;
  int _332;
  int iftmp.11_333;
  int _334;
  short int _336;
  int _337;
  void (*<Tf7f>) (uint8_t *, int, uint8_t * *, int, int, int, int, int) _339;
  int _344;
  int iftmp.11_346;
  int _348;
  uint8_t *[6] * _349;
  uint8_t * _350;
  int _356;
  int _357;
  int _358;
  int _359;
  int _360;
  int _361;
  void (*<Tf87>) (uint8_t *, int, uint8_t *, int, int, int, int, int) _363;
  uint8_t * _366;
  int _368;
  uint8_t * _374;
  void (*<Tf87>) (uint8_t *, int, uint8_t *, int, int, int, int, int) _379;
  uint8_t * _380;
  int _381;
  unsigned char _385;
  uint8_t * _386;
  int _387;
  signed char _390;
  int _392;
  int _393;
  short int _394;
  int _395;
  int iftmp.11_396;
  int _397;
  short int _399;
  int _400;
  void (*<Tf7f>) (uint8_t *, int, uint8_t * *, int, int, int, int, int) _402;
  int iftmp.11_409;
  int _411;
  uint8_t *[6] * _412;
  uint8_t * _413;
  int _419;
  int _420;
  int _421;
  int _422;
  int _423;
  int _424;
  void (*<Tf87>) (uint8_t *, int, uint8_t *, int, int, int, int, int) _426;
  uint8_t * _429;
  int _431;
  uint8_t * _437;
  void (*<Tf87>) (uint8_t *, int, uint8_t *, int, int, int, int, int) _442;
  uint8_t * _443;
  int _444;
  uint8_t * _449;
  signed char _453;
  int _455;
  int _456;
  short int _457;
  int _458;
  int iftmp.11_459;
  int _460;
  short int _462;
  int _463;
  void (*<Tf7f>) (uint8_t *, int, uint8_t * *, int, int, int, int, int) _465;
  int iftmp.11_472;
  int _474;
  uint8_t *[6] * _475;
  uint8_t * _476;
  int _482;
  int _483;
  int _484;
  int _485;
  int _486;
  int _487;
  void (*<Tf87>) (uint8_t *, int, uint8_t *, int, int, int, int, int) _489;
  uint8_t * _492;
  int _494;
  uint8_t * _500;
  void (*<Tf87>) (uint8_t *, int, uint8_t *, int, int, int, int, int) _505;
  uint8_t * _506;
  int _507;
  uint8_t * _512;
  signed char _516;
  int _518;
  int _519;
  short int _520;
  int _521;
  int iftmp.11_522;
  int _523;
  short int _525;
  int _526;
  void (*<Tf7f>) (uint8_t *, int, uint8_t * *, int, int, int, int, int) _528;
  int iftmp.11_535;
  int _537;
  uint8_t *[6] * _538;
  uint8_t * _539;
  int _545;
  int _546;
  int _547;
  int _548;
  int _549;
  int _550;
  void (*<Tf87>) (uint8_t *, int, uint8_t *, int, int, int, int, int) _552;
  uint8_t * _555;
  int _557;
  uint8_t * _563;
  void (*<Tf87>) (uint8_t *, int, uint8_t *, int, int, int, int, int) _568;
  uint8_t * _569;
  int _570;
  uint8_t * _575;
  signed char _579;
  int _581;
  int _582;
  short int _583;
  int _584;
  int iftmp.11_585;
  int _586;
  short int _588;
  int _589;
  void (*<Tf7f>) (uint8_t *, int, uint8_t * *, int, int, int, int, int) _591;
  int iftmp.11_598;
  int _600;
  uint8_t *[6] * _601;
  uint8_t * _602;
  int _608;
  int _609;
  int _610;
  int _611;
  int _612;
  int _613;
  void (*<Tf87>) (uint8_t *, int, uint8_t *, int, int, int, int, int) _615;
  uint8_t * _618;
  int _620;
  uint8_t * _626;
  void (*<Tf87>) (uint8_t *, int, uint8_t *, int, int, int, int, int) _631;
  uint8_t * _632;
  int _633;
  uint8_t * _638;
  signed char _642;
  int _644;
  int _645;
  short int _646;
  int _647;
  int iftmp.11_648;
  int _649;
  short int _651;
  int _652;
  void (*<Tf7f>) (uint8_t *, int, uint8_t * *, int, int, int, int, int) _654;
  int _659;
  int iftmp.11_661;
  int _663;
  uint8_t *[6] * _664;
  uint8_t * _665;
  uint8_t * _670;
  int _671;
  int _672;
  int _673;
  int _674;
  int _675;
  int _676;
  void (*<Tf87>) (uint8_t *, int, uint8_t *, int, int, int, int, int) _678;
  uint8_t * _681;
  int _683;
  int _684;
  sizetype _687;
  uint8_t * _688;
  uint8_t * _689;
  uint8_t * _692;
  void (*<Tf87>) (uint8_t *, int, uint8_t *, int, int, int, int, int) _694;
  uint8_t * _695;
  int _696;
  int _697;
  sizetype _699;
  uint8_t * _700;
  uint8_t * _701;
  uint8_t * _702;
  signed char _705;
  int _707;
  int _708;
  short int _709;
  int _710;
  int iftmp.11_711;
  int _712;
  short int _714;
  int _715;
  void (*<Tf7f>) (uint8_t *, int, uint8_t * *, int, int, int, int, int) _717;
  int _722;
  int iftmp.11_724;
  int _726;
  uint8_t *[6] * _727;
  uint8_t * _728;
  uint8_t * _733;
  int _734;
  int _735;
  int _736;
  int _737;
  int _738;
  int _739;
  void (*<Tf87>) (uint8_t *, int, uint8_t *, int, int, int, int, int) _741;
  uint8_t * _744;
  int _746;
  int _747;
  sizetype _750;
  uint8_t * _751;
  uint8_t * _752;
  uint8_t * _755;
  void (*<Tf87>) (uint8_t *, int, uint8_t *, int, int, int, int, int) _757;
  uint8_t * _758;
  int _759;
  int _760;
  sizetype _762;
  uint8_t * _763;
  uint8_t * _764;
  uint8_t * _765;
  signed char _768;
  int _770;
  int _771;
  short int _772;
  int _773;
  int iftmp.11_774;
  int _775;
  short int _777;
  int _778;
  void (*<Tf7f>) (uint8_t *, int, uint8_t * *, int, int, int, int, int) _780;
  int iftmp.11_787;
  int _789;
  uint8_t *[6] * _790;
  uint8_t * _791;
  int _797;
  int _798;
  int _799;
  int _800;
  int _801;
  int _802;
  void (*<Tf87>) (uint8_t *, int, uint8_t *, int, int, int, int, int) _804;
  uint8_t * _807;
  int _809;
  uint8_t * _815;
  void (*<Tf87>) (uint8_t *, int, uint8_t *, int, int, int, int, int) _820;
  uint8_t * _821;
  int _822;
  uint8_t * _827;
  signed char _831;
  int _833;
  int _834;
  short int _835;
  int _836;
  int iftmp.11_837;
  int _838;
  short int _840;
  int _841;
  void (*<Tf7f>) (uint8_t *, int, uint8_t * *, int, int, int, int, int) _843;
  int iftmp.11_850;
  int _852;
  uint8_t *[6] * _853;
  uint8_t * _854;
  int _860;
  int _861;
  int _862;
  int _863;
  int _864;
  int _865;
  void (*<Tf87>) (uint8_t *, int, uint8_t *, int, int, int, int, int) _867;
  uint8_t * _870;
  int _872;
  uint8_t * _878;
  void (*<Tf87>) (uint8_t *, int, uint8_t *, int, int, int, int, int) _883;
  uint8_t * _884;
  int _885;
  uint8_t * _890;
  signed char _894;
  int _896;
  int _897;
  short int _898;
  int _899;
  int iftmp.11_900;
  int _901;
  short int _903;
  int _904;
  void (*<Tf7f>) (uint8_t *, int, uint8_t * *, int, int, int, int, int) _906;
  int iftmp.11_913;
  int _914;
  int _915;
  uint8_t *[6] * _916;
  uint8_t * _917;
  uint8_t * _922;
  int _923;
  int _924;
  int _925;
  int _926;
  int _927;
  int _928;
  void (*<Tf87>) (uint8_t *, int, uint8_t *, int, int, int, int, int) _930;
  uint8_t * _933;
  int _935;
  uint8_t * _940;
  uint8_t * _941;
  uint8_t * _944;
  void (*<Tf87>) (uint8_t *, int, uint8_t *, int, int, int, int, int) _946;
  uint8_t * _947;
  int _948;
  uint8_t * _952;
  uint8_t * _953;
  uint8_t * _954;
  signed char _957;
  int _959;
  int _960;
  short int _961;
  int _962;
  int iftmp.11_963;
  int _964;
  short int _966;
  int _967;
  void (*<Tf7f>) (uint8_t *, int, uint8_t * *, int, int, int, int, int) _969;
  int iftmp.11_976;
  int _977;
  int _978;
  uint8_t *[6] * _979;
  uint8_t * _980;
  uint8_t * _985;
  int _986;
  int _987;
  int _988;
  int _989;
  int _990;
  int _991;
  void (*<Tf87>) (uint8_t *, int, uint8_t *, int, int, int, int, int) _993;
  uint8_t * _996;
  int _998;
  uint8_t * _1003;
  uint8_t * _1004;
  uint8_t * _1007;
  void (*<Tf87>) (uint8_t *, int, uint8_t *, int, int, int, int, int) _1009;
  uint8_t * _1010;
  int _1011;
  uint8_t * _1015;
  uint8_t * _1016;
  uint8_t * _1017;

  <bb 2>:
  _11 = h_10(D)->mb.i_type;
  if (_11 == 4)
    goto <bb 3>;
  else
    goto <bb 40>;

  <bb 3>:
  _12 = h_10(D)->mb.i_partition;
  if (_12 == 16)
    goto <bb 4>;
  else
    goto <bb 11>;

  <bb 4>:
  # DEBUG h => h_10(D)
  # DEBUG x => 0
  # DEBUG y => 0
  # DEBUG width => 4
  # DEBUG height => 4
  # DEBUG i8 => 12
  _75 = h_10(D)->mb.cache.ref[0][12];
  i_ref_76 = (const int) _75;
  # DEBUG i_ref => i_ref_76
  _77 = h_10(D)->mb.mv_max[0];
  _78 = h_10(D)->mb.mv_min[0];
  _79 = h_10(D)->mb.cache.mv[0][12][0];
  _80 = (int) _79;
  # DEBUG v => _80
  # DEBUG i_min => _78
  # DEBUG i_max => _77
  if (_78 <= _80)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  iftmp.11_81 = MIN_EXPR <_77, _80>;

  <bb 6>:
  # iftmp.11_94 = PHI <_78(4), iftmp.11_81(5)>
  # DEBUG v => NULL
  # DEBUG i_min => NULL
  # DEBUG i_max => NULL
  # DEBUG mvx => NULL
  _82 = h_10(D)->mb.mv_max[1];
  mvy_83 = h_10(D)->mb.mv_min[1];
  _84 = h_10(D)->mb.cache.mv[0][12][1];
  _85 = (int) _84;
  # DEBUG v => _85
  # DEBUG i_min => mvy_83
  # DEBUG i_max => _82
  if (mvy_83 <= _85)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  mvy_86 = MIN_EXPR <_82, _85>;

  <bb 8>:
  # mvy_91 = PHI <mvy_83(6), mvy_86(7)>
  # DEBUG v => NULL
  # DEBUG i_min => NULL
  # DEBUG i_max => NULL
  # DEBUG mvy => NULL
  _87 = h_10(D)->mc.mc_luma;
  _96 = h_10(D)->mb.pic.i_stride[0];
  _97 = &h_10(D)->mb.pic.p_fref[0][i_ref_76];
  _98 = h_10(D)->mb.pic.p_fdec[0];
  _87 (_98, 32, _97, _96, iftmp.11_94, mvy_91, 16, 16);
  _104 = h_10(D)->mb.b_interlaced;
  _105 = i_ref_76 & _104;
  if (_105 != 0)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  _106 = h_10(D)->mb.i_mb_y;
  _107 = _106 & 1;
  _108 = _107 * 4;
  _109 = _108 + -2;
  mvy_110 = mvy_91 + _109;
  # DEBUG mvy => mvy_110

  <bb 10>:
  # mvy_126 = PHI <mvy_91(8), mvy_110(9)>
  # DEBUG mvy => mvy_126
  _111 = h_10(D)->mc.mc_chroma;
  _114 = h_10(D)->mb.pic.p_fref[0][i_ref_76][4];
  _116 = h_10(D)->mb.pic.i_stride[1];
  _122 = h_10(D)->mb.pic.p_fdec[1];
  _111 (_122, 32, _114, _116, iftmp.11_94, mvy_126, 8, 8);
  _127 = h_10(D)->mc.mc_chroma;
  _128 = h_10(D)->mb.pic.p_fref[0][i_ref_76][5];
  _129 = h_10(D)->mb.pic.i_stride[2];
  _134 = h_10(D)->mb.pic.p_fdec[2];
  _127 (_134, 32, _128, _129, iftmp.11_94, mvy_126, 8, 8);
  goto <bb 141>;

  <bb 11>:
  if (_12 == 14)
    goto <bb 12>;
  else
    goto <bb 25>;

  <bb 12>:
  # DEBUG h => h_10(D)
  # DEBUG x => 0
  # DEBUG y => 0
  # DEBUG width => 4
  # DEBUG height => 2
  # DEBUG i8 => 12
  _201 = h_10(D)->mb.cache.ref[0][12];
  i_ref_202 = (const int) _201;
  # DEBUG i_ref => i_ref_202
  _203 = h_10(D)->mb.mv_max[0];
  _204 = h_10(D)->mb.mv_min[0];
  _205 = h_10(D)->mb.cache.mv[0][12][0];
  _206 = (int) _205;
  # DEBUG v => _206
  # DEBUG i_min => _204
  # DEBUG i_max => _203
  if (_204 <= _206)
    goto <bb 13>;
  else
    goto <bb 14>;

  <bb 13>:
  iftmp.11_207 = MIN_EXPR <_203, _206>;

  <bb 14>:
  # iftmp.11_220 = PHI <_204(12), iftmp.11_207(13)>
  # DEBUG v => NULL
  # DEBUG i_min => NULL
  # DEBUG i_max => NULL
  # DEBUG mvx => NULL
  _208 = h_10(D)->mb.mv_max[1];
  mvy_209 = h_10(D)->mb.mv_min[1];
  _210 = h_10(D)->mb.cache.mv[0][12][1];
  _211 = (int) _210;
  # DEBUG v => _211
  # DEBUG i_min => mvy_209
  # DEBUG i_max => _208
  if (mvy_209 <= _211)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 15>:
  mvy_212 = MIN_EXPR <_208, _211>;

  <bb 16>:
  # mvy_217 = PHI <mvy_209(14), mvy_212(15)>
  # DEBUG v => NULL
  # DEBUG i_min => NULL
  # DEBUG i_max => NULL
  # DEBUG mvy => NULL
  _213 = h_10(D)->mc.mc_luma;
  _222 = h_10(D)->mb.pic.i_stride[0];
  _223 = &h_10(D)->mb.pic.p_fref[0][i_ref_202];
  _224 = h_10(D)->mb.pic.p_fdec[0];
  _213 (_224, 32, _223, _222, iftmp.11_220, mvy_217, 16, 8);
  _230 = h_10(D)->mb.b_interlaced;
  _231 = i_ref_202 & _230;
  if (_231 != 0)
    goto <bb 17>;
  else
    goto <bb 18>;

  <bb 17>:
  _232 = h_10(D)->mb.i_mb_y;
  _233 = _232 & 1;
  _234 = _233 * 4;
  _235 = _234 + -2;
  mvy_236 = mvy_217 + _235;
  # DEBUG mvy => mvy_236

  <bb 18>:
  # mvy_252 = PHI <mvy_217(16), mvy_236(17)>
  # DEBUG mvy => mvy_252
  _237 = h_10(D)->mc.mc_chroma;
  _240 = h_10(D)->mb.pic.p_fref[0][i_ref_202][4];
  _242 = h_10(D)->mb.pic.i_stride[1];
  _248 = h_10(D)->mb.pic.p_fdec[1];
  _237 (_248, 32, _240, _242, iftmp.11_220, mvy_252, 8, 4);
  _253 = h_10(D)->mc.mc_chroma;
  _254 = h_10(D)->mb.pic.p_fref[0][i_ref_202][5];
  _255 = h_10(D)->mb.pic.i_stride[2];
  _260 = h_10(D)->mb.pic.p_fdec[2];
  _253 (_260, 32, _254, _255, iftmp.11_220, mvy_252, 8, 4);
  # DEBUG h => NULL
  # DEBUG x => NULL
  # DEBUG y => NULL
  # DEBUG width => NULL
  # DEBUG height => NULL
  # DEBUG mvy => NULL
  # DEBUG i_ref => NULL
  # DEBUG i8 => NULL
  # DEBUG h => h_10(D)
  # DEBUG x => 0
  # DEBUG y => 2
  # DEBUG width => 4
  # DEBUG height => 2
  # DEBUG i8 => 28
  _138 = h_10(D)->mb.cache.ref[0][28];
  i_ref_139 = (const int) _138;
  # DEBUG i_ref => i_ref_139
  _140 = h_10(D)->mb.mv_max[0];
  _141 = h_10(D)->mb.mv_min[0];
  _142 = h_10(D)->mb.cache.mv[0][28][0];
  _143 = (int) _142;
  # DEBUG v => _143
  # DEBUG i_min => _141
  # DEBUG i_max => _140
  if (_141 <= _143)
    goto <bb 19>;
  else
    goto <bb 20>;

  <bb 19>:
  iftmp.11_144 = MIN_EXPR <_140, _143>;

  <bb 20>:
  # iftmp.11_157 = PHI <_141(18), iftmp.11_144(19)>
  # DEBUG v => NULL
  # DEBUG i_min => NULL
  # DEBUG i_max => NULL
  # DEBUG mvx => NULL
  _145 = h_10(D)->mb.mv_max[1];
  mvy_146 = h_10(D)->mb.mv_min[1];
  _147 = h_10(D)->mb.cache.mv[0][28][1];
  _148 = (int) _147;
  # DEBUG v => _148
  # DEBUG i_min => mvy_146
  # DEBUG i_max => _145
  if (mvy_146 <= _148)
    goto <bb 21>;
  else
    goto <bb 22>;

  <bb 21>:
  mvy_149 = MIN_EXPR <_145, _148>;

  <bb 22>:
  # mvy_154 = PHI <mvy_146(20), mvy_149(21)>
  # DEBUG v => NULL
  # DEBUG i_min => NULL
  # DEBUG i_max => NULL
  # DEBUG mvy => NULL
  _150 = h_10(D)->mc.mc_luma;
  _155 = mvy_154 + 32;
  _159 = h_10(D)->mb.pic.i_stride[0];
  _160 = &h_10(D)->mb.pic.p_fref[0][i_ref_139];
  _161 = h_10(D)->mb.pic.p_fdec[0];
  _166 = _161 + 256;
  _150 (_166, 32, _160, _159, iftmp.11_157, _155, 16, 8);
  _167 = h_10(D)->mb.b_interlaced;
  _168 = i_ref_139 & _167;
  if (_168 != 0)
    goto <bb 23>;
  else
    goto <bb 24>;

  <bb 23>:
  _169 = h_10(D)->mb.i_mb_y;
  _170 = _169 & 1;
  _171 = _170 * 4;
  _172 = _171 + -2;
  mvy_173 = mvy_154 + _172;
  # DEBUG mvy => mvy_173

  <bb 24>:
  # mvy_189 = PHI <mvy_154(22), mvy_173(23)>
  # DEBUG mvy => mvy_189
  _174 = h_10(D)->mc.mc_chroma;
  _177 = h_10(D)->mb.pic.p_fref[0][i_ref_139][4];
  _179 = h_10(D)->mb.pic.i_stride[1];
  _180 = _179 * 4;
  _183 = (sizetype) _180;
  _184 = _177 + _183;
  _185 = h_10(D)->mb.pic.p_fdec[1];
  _188 = _185 + 128;
  _174 (_188, 32, _184, _179, iftmp.11_157, mvy_189, 8, 4);
  _190 = h_10(D)->mc.mc_chroma;
  _191 = h_10(D)->mb.pic.p_fref[0][i_ref_139][5];
  _192 = h_10(D)->mb.pic.i_stride[2];
  _193 = _192 * 4;
  _195 = (sizetype) _193;
  _196 = _191 + _195;
  _197 = h_10(D)->mb.pic.p_fdec[2];
  _198 = _197 + 128;
  _190 (_198, 32, _196, _192, iftmp.11_157, mvy_189, 8, 4);
  goto <bb 141>;

  <bb 25>:
  if (_12 == 15)
    goto <bb 27>;
  else
    goto <bb 26>;

  <bb 26>:
  goto <bb 141>;

  <bb 27>:
  # DEBUG h => h_10(D)
  # DEBUG x => 0
  # DEBUG y => 0
  # DEBUG width => 2
  # DEBUG height => 4
  # DEBUG i8 => 12
  _327 = h_10(D)->mb.cache.ref[0][12];
  i_ref_328 = (const int) _327;
  # DEBUG i_ref => i_ref_328
  _329 = h_10(D)->mb.mv_max[0];
  _330 = h_10(D)->mb.mv_min[0];
  _331 = h_10(D)->mb.cache.mv[0][12][0];
  _332 = (int) _331;
  # DEBUG v => _332
  # DEBUG i_min => _330
  # DEBUG i_max => _329
  if (_330 <= _332)
    goto <bb 28>;
  else
    goto <bb 29>;

  <bb 28>:
  iftmp.11_333 = MIN_EXPR <_329, _332>;

  <bb 29>:
  # iftmp.11_346 = PHI <_330(27), iftmp.11_333(28)>
  # DEBUG v => NULL
  # DEBUG i_min => NULL
  # DEBUG i_max => NULL
  # DEBUG mvx => NULL
  _334 = h_10(D)->mb.mv_max[1];
  mvy_335 = h_10(D)->mb.mv_min[1];
  _336 = h_10(D)->mb.cache.mv[0][12][1];
  _337 = (int) _336;
  # DEBUG v => _337
  # DEBUG i_min => mvy_335
  # DEBUG i_max => _334
  if (mvy_335 <= _337)
    goto <bb 30>;
  else
    goto <bb 31>;

  <bb 30>:
  mvy_338 = MIN_EXPR <_334, _337>;

  <bb 31>:
  # mvy_343 = PHI <mvy_335(29), mvy_338(30)>
  # DEBUG v => NULL
  # DEBUG i_min => NULL
  # DEBUG i_max => NULL
  # DEBUG mvy => NULL
  _339 = h_10(D)->mc.mc_luma;
  _348 = h_10(D)->mb.pic.i_stride[0];
  _349 = &h_10(D)->mb.pic.p_fref[0][i_ref_328];
  _350 = h_10(D)->mb.pic.p_fdec[0];
  _339 (_350, 32, _349, _348, iftmp.11_346, mvy_343, 8, 16);
  _356 = h_10(D)->mb.b_interlaced;
  _357 = i_ref_328 & _356;
  if (_357 != 0)
    goto <bb 32>;
  else
    goto <bb 33>;

  <bb 32>:
  _358 = h_10(D)->mb.i_mb_y;
  _359 = _358 & 1;
  _360 = _359 * 4;
  _361 = _360 + -2;
  mvy_362 = mvy_343 + _361;
  # DEBUG mvy => mvy_362

  <bb 33>:
  # mvy_378 = PHI <mvy_343(31), mvy_362(32)>
  # DEBUG mvy => mvy_378
  _363 = h_10(D)->mc.mc_chroma;
  _366 = h_10(D)->mb.pic.p_fref[0][i_ref_328][4];
  _368 = h_10(D)->mb.pic.i_stride[1];
  _374 = h_10(D)->mb.pic.p_fdec[1];
  _363 (_374, 32, _366, _368, iftmp.11_346, mvy_378, 4, 8);
  _379 = h_10(D)->mc.mc_chroma;
  _380 = h_10(D)->mb.pic.p_fref[0][i_ref_328][5];
  _381 = h_10(D)->mb.pic.i_stride[2];
  _386 = h_10(D)->mb.pic.p_fdec[2];
  _379 (_386, 32, _380, _381, iftmp.11_346, mvy_378, 4, 8);
  # DEBUG h => NULL
  # DEBUG x => NULL
  # DEBUG y => NULL
  # DEBUG width => NULL
  # DEBUG height => NULL
  # DEBUG mvy => NULL
  # DEBUG i_ref => NULL
  # DEBUG i8 => NULL
  # DEBUG h => h_10(D)
  # DEBUG x => 2
  # DEBUG y => 0
  # DEBUG width => 2
  # DEBUG height => 4
  # DEBUG i8 => 14
  _264 = h_10(D)->mb.cache.ref[0][14];
  i_ref_265 = (const int) _264;
  # DEBUG i_ref => i_ref_265
  _266 = h_10(D)->mb.mv_max[0];
  _267 = h_10(D)->mb.mv_min[0];
  _268 = h_10(D)->mb.cache.mv[0][14][0];
  _269 = (int) _268;
  # DEBUG v => _269
  # DEBUG i_min => _267
  # DEBUG i_max => _266
  if (_267 <= _269)
    goto <bb 34>;
  else
    goto <bb 35>;

  <bb 34>:
  iftmp.11_270 = MIN_EXPR <_266, _269>;

  <bb 35>:
  # iftmp.11_283 = PHI <_267(33), iftmp.11_270(34)>
  # DEBUG v => NULL
  # DEBUG i_min => NULL
  # DEBUG i_max => NULL
  # DEBUG mvx => NULL
  _271 = h_10(D)->mb.mv_max[1];
  mvy_272 = h_10(D)->mb.mv_min[1];
  _273 = h_10(D)->mb.cache.mv[0][14][1];
  _274 = (int) _273;
  # DEBUG v => _274
  # DEBUG i_min => mvy_272
  # DEBUG i_max => _271
  if (mvy_272 <= _274)
    goto <bb 36>;
  else
    goto <bb 37>;

  <bb 36>:
  mvy_275 = MIN_EXPR <_271, _274>;

  <bb 37>:
  # mvy_280 = PHI <mvy_272(35), mvy_275(36)>
  # DEBUG v => NULL
  # DEBUG i_min => NULL
  # DEBUG i_max => NULL
  # DEBUG mvy => NULL
  _276 = h_10(D)->mc.mc_luma;
  _284 = iftmp.11_283 + 32;
  _285 = h_10(D)->mb.pic.i_stride[0];
  _286 = &h_10(D)->mb.pic.p_fref[0][i_ref_265];
  _287 = h_10(D)->mb.pic.p_fdec[0];
  _292 = _287 + 8;
  _276 (_292, 32, _286, _285, _284, mvy_280, 8, 16);
  _293 = h_10(D)->mb.b_interlaced;
  _294 = i_ref_265 & _293;
  if (_294 != 0)
    goto <bb 38>;
  else
    goto <bb 39>;

  <bb 38>:
  _295 = h_10(D)->mb.i_mb_y;
  _296 = _295 & 1;
  _297 = _296 * 4;
  _298 = _297 + -2;
  mvy_299 = mvy_280 + _298;
  # DEBUG mvy => mvy_299

  <bb 39>:
  # mvy_315 = PHI <mvy_280(37), mvy_299(38)>
  # DEBUG mvy => mvy_315
  _300 = h_10(D)->mc.mc_chroma;
  _303 = h_10(D)->mb.pic.p_fref[0][i_ref_265][4];
  _305 = h_10(D)->mb.pic.i_stride[1];
  _310 = _303 + 4;
  _311 = h_10(D)->mb.pic.p_fdec[1];
  _314 = _311 + 4;
  _300 (_314, 32, _310, _305, iftmp.11_283, mvy_315, 4, 8);
  _316 = h_10(D)->mc.mc_chroma;
  _317 = h_10(D)->mb.pic.p_fref[0][i_ref_265][5];
  _318 = h_10(D)->mb.pic.i_stride[2];
  _322 = _317 + 4;
  _323 = h_10(D)->mb.pic.p_fdec[2];
  _324 = _323 + 4;
  _316 (_324, 32, _322, _318, iftmp.11_283, mvy_315, 4, 8);
  goto <bb 141>;

  <bb 40>:
  _20 = _11 == 5;
  _21 = _11 == 17;
  _22 = _20 | _21;
  if (_22 != 0)
    goto <bb 41>;
  else
    goto <bb 44>;

  <bb 41>:

  <bb 42>:
  # i_301 = PHI <0(41), i_24(43)>
  # ivtmp_279 = PHI <4(41), ivtmp_247(43)>
  # DEBUG i => i_301
  x264_mb_mc_8x8 (h_10(D), i_301);
  i_24 = i_301 + 1;
  # DEBUG i => i_24
  # DEBUG i => i_24
  ivtmp_247 = ivtmp_279 - 1;
  if (ivtmp_247 != 0)
    goto <bb 43>;
  else
    goto <bb 142>;

  <bb 142>:
  goto <bb 26>;

  <bb 43>:
  goto <bb 42>;

  <bb 44>:
  _25 = _11 == 18;
  _26 = _11 == 7;
  _27 = _25 | _26;
  if (_27 != 0)
    goto <bb 46>;
  else
    goto <bb 45>;

  <bb 45>:
  # DEBUG i => 0
  _261 = x264_mb_type_list0_table[_11][0];
  _158 = (int) _261;
  _194 = x264_mb_type_list1_table[_11][0];
  _344 = (int) _194;
  # DEBUG i => 1
  # DEBUG i => 1
  # DEBUG i => 2
  # DEBUG i => 2
  _39 = h_10(D)->mb.i_partition;
  if (_39 == 16)
    goto <bb 47>;
  else
    goto <bb 66>;

  <bb 46>:
  x264_mb_mc_direct8x8 (h_10(D), 0, 0);
  x264_mb_mc_direct8x8 (h_10(D), 2, 0);
  x264_mb_mc_direct8x8 (h_10(D), 0, 2);
  x264_mb_mc_direct8x8 (h_10(D), 2, 2);
  goto <bb 141>;

  <bb 47>:
  if (_158 != 0)
    goto <bb 48>;
  else
    goto <bb 57>;

  <bb 48>:
  if (_344 != 0)
    goto <bb 49>;
  else
    goto <bb 50>;

  <bb 49>:
  x264_mb_mc_01xywh (h_10(D), 0, 0, 4, 4);
  goto <bb 140>;

  <bb 50>:
  # DEBUG h => h_10(D)
  # DEBUG x => 0
  # DEBUG y => 0
  # DEBUG width => 4
  # DEBUG height => 4
  # DEBUG i8 => 12
  _390 = h_10(D)->mb.cache.ref[0][12];
  i_ref_391 = (const int) _390;
  # DEBUG i_ref => i_ref_391
  _392 = h_10(D)->mb.mv_max[0];
  _393 = h_10(D)->mb.mv_min[0];
  _394 = h_10(D)->mb.cache.mv[0][12][0];
  _395 = (int) _394;
  # DEBUG v => _395
  # DEBUG i_min => _393
  # DEBUG i_max => _392
  if (_393 <= _395)
    goto <bb 51>;
  else
    goto <bb 52>;

  <bb 51>:
  iftmp.11_396 = MIN_EXPR <_392, _395>;

  <bb 52>:
  # iftmp.11_409 = PHI <_393(50), iftmp.11_396(51)>
  # DEBUG v => NULL
  # DEBUG i_min => NULL
  # DEBUG i_max => NULL
  # DEBUG mvx => NULL
  _397 = h_10(D)->mb.mv_max[1];
  mvy_398 = h_10(D)->mb.mv_min[1];
  _399 = h_10(D)->mb.cache.mv[0][12][1];
  _400 = (int) _399;
  # DEBUG v => _400
  # DEBUG i_min => mvy_398
  # DEBUG i_max => _397
  if (mvy_398 <= _400)
    goto <bb 53>;
  else
    goto <bb 54>;

  <bb 53>:
  mvy_401 = MIN_EXPR <_397, _400>;

  <bb 54>:
  # mvy_406 = PHI <mvy_398(52), mvy_401(53)>
  # DEBUG v => NULL
  # DEBUG i_min => NULL
  # DEBUG i_max => NULL
  # DEBUG mvy => NULL
  _402 = h_10(D)->mc.mc_luma;
  _411 = h_10(D)->mb.pic.i_stride[0];
  _412 = &h_10(D)->mb.pic.p_fref[0][i_ref_391];
  _413 = h_10(D)->mb.pic.p_fdec[0];
  _402 (_413, 32, _412, _411, iftmp.11_409, mvy_406, 16, 16);
  _419 = h_10(D)->mb.b_interlaced;
  _420 = i_ref_391 & _419;
  if (_420 != 0)
    goto <bb 55>;
  else
    goto <bb 56>;

  <bb 55>:
  _421 = h_10(D)->mb.i_mb_y;
  _422 = _421 & 1;
  _423 = _422 * 4;
  _424 = _423 + -2;
  mvy_425 = mvy_406 + _424;
  # DEBUG mvy => mvy_425

  <bb 56>:
  # mvy_441 = PHI <mvy_406(54), mvy_425(55)>
  # DEBUG mvy => mvy_441
  _426 = h_10(D)->mc.mc_chroma;
  _429 = h_10(D)->mb.pic.p_fref[0][i_ref_391][4];
  _431 = h_10(D)->mb.pic.i_stride[1];
  _437 = h_10(D)->mb.pic.p_fdec[1];
  _426 (_437, 32, _429, _431, iftmp.11_409, mvy_441, 8, 8);
  _442 = h_10(D)->mc.mc_chroma;
  _443 = h_10(D)->mb.pic.p_fref[0][i_ref_391][5];
  _444 = h_10(D)->mb.pic.i_stride[2];
  _449 = h_10(D)->mb.pic.p_fdec[2];
  _442 (_449, 32, _443, _444, iftmp.11_409, mvy_441, 8, 8);
  goto <bb 140>;

  <bb 57>:
  if (_344 != 0)
    goto <bb 59>;
  else
    goto <bb 58>;

  <bb 58>:
  goto <bb 140>;

  <bb 59>:
  # DEBUG h => h_10(D)
  # DEBUG x => 0
  # DEBUG y => 0
  # DEBUG width => 4
  # DEBUG height => 4
  # DEBUG i8 => 12
  _453 = h_10(D)->mb.cache.ref[1][12];
  i_ref_454 = (const int) _453;
  # DEBUG i_ref => i_ref_454
  _455 = h_10(D)->mb.mv_max[0];
  _456 = h_10(D)->mb.mv_min[0];
  _457 = h_10(D)->mb.cache.mv[1][12][0];
  _458 = (int) _457;
  # DEBUG v => _458
  # DEBUG i_min => _456
  # DEBUG i_max => _455
  if (_456 <= _458)
    goto <bb 60>;
  else
    goto <bb 61>;

  <bb 60>:
  iftmp.11_459 = MIN_EXPR <_455, _458>;

  <bb 61>:
  # iftmp.11_472 = PHI <_456(59), iftmp.11_459(60)>
  # DEBUG v => NULL
  # DEBUG i_min => NULL
  # DEBUG i_max => NULL
  # DEBUG mvx => NULL
  _460 = h_10(D)->mb.mv_max[1];
  mvy_461 = h_10(D)->mb.mv_min[1];
  _462 = h_10(D)->mb.cache.mv[1][12][1];
  _463 = (int) _462;
  # DEBUG v => _463
  # DEBUG i_min => mvy_461
  # DEBUG i_max => _460
  if (mvy_461 <= _463)
    goto <bb 62>;
  else
    goto <bb 63>;

  <bb 62>:
  mvy_464 = MIN_EXPR <_460, _463>;

  <bb 63>:
  # mvy_469 = PHI <mvy_461(61), mvy_464(62)>
  # DEBUG v => NULL
  # DEBUG i_min => NULL
  # DEBUG i_max => NULL
  # DEBUG mvy => NULL
  _465 = h_10(D)->mc.mc_luma;
  _474 = h_10(D)->mb.pic.i_stride[0];
  _475 = &h_10(D)->mb.pic.p_fref[1][i_ref_454];
  _476 = h_10(D)->mb.pic.p_fdec[0];
  _465 (_476, 32, _475, _474, iftmp.11_472, mvy_469, 16, 16);
  _482 = h_10(D)->mb.b_interlaced;
  _483 = i_ref_454 & _482;
  if (_483 != 0)
    goto <bb 64>;
  else
    goto <bb 65>;

  <bb 64>:
  _484 = h_10(D)->mb.i_mb_y;
  _485 = _484 & 1;
  _486 = _485 * 4;
  _487 = _486 + -2;
  mvy_488 = mvy_469 + _487;
  # DEBUG mvy => mvy_488

  <bb 65>:
  # mvy_504 = PHI <mvy_469(63), mvy_488(64)>
  # DEBUG mvy => mvy_504
  _489 = h_10(D)->mc.mc_chroma;
  _492 = h_10(D)->mb.pic.p_fref[1][i_ref_454][4];
  _494 = h_10(D)->mb.pic.i_stride[1];
  _500 = h_10(D)->mb.pic.p_fdec[1];
  _489 (_500, 32, _492, _494, iftmp.11_472, mvy_504, 8, 8);
  _505 = h_10(D)->mc.mc_chroma;
  _506 = h_10(D)->mb.pic.p_fref[1][i_ref_454][5];
  _507 = h_10(D)->mb.pic.i_stride[2];
  _512 = h_10(D)->mb.pic.p_fdec[2];
  _505 (_512, 32, _506, _507, iftmp.11_472, mvy_504, 8, 8);
  goto <bb 140>;

  <bb 66>:
  _385 = x264_mb_type_list0_table[_11][1];
  _387 = (int) _385;
  _92 = x264_mb_type_list1_table[_11][1];
  _95 = (int) _92;
  if (_39 == 14)
    goto <bb 67>;
  else
    goto <bb 103>;

  <bb 67>:
  if (_158 != 0)
    goto <bb 68>;
  else
    goto <bb 77>;

  <bb 68>:
  if (_344 != 0)
    goto <bb 69>;
  else
    goto <bb 70>;

  <bb 69>:
  x264_mb_mc_01xywh (h_10(D), 0, 0, 4, 2);
  goto <bb 85>;

  <bb 70>:
  # DEBUG h => h_10(D)
  # DEBUG x => 0
  # DEBUG y => 0
  # DEBUG width => 4
  # DEBUG height => 2
  # DEBUG i8 => 12
  _516 = h_10(D)->mb.cache.ref[0][12];
  i_ref_517 = (const int) _516;
  # DEBUG i_ref => i_ref_517
  _518 = h_10(D)->mb.mv_max[0];
  _519 = h_10(D)->mb.mv_min[0];
  _520 = h_10(D)->mb.cache.mv[0][12][0];
  _521 = (int) _520;
  # DEBUG v => _521
  # DEBUG i_min => _519
  # DEBUG i_max => _518
  if (_519 <= _521)
    goto <bb 71>;
  else
    goto <bb 72>;

  <bb 71>:
  iftmp.11_522 = MIN_EXPR <_518, _521>;

  <bb 72>:
  # iftmp.11_535 = PHI <_519(70), iftmp.11_522(71)>
  # DEBUG v => NULL
  # DEBUG i_min => NULL
  # DEBUG i_max => NULL
  # DEBUG mvx => NULL
  _523 = h_10(D)->mb.mv_max[1];
  mvy_524 = h_10(D)->mb.mv_min[1];
  _525 = h_10(D)->mb.cache.mv[0][12][1];
  _526 = (int) _525;
  # DEBUG v => _526
  # DEBUG i_min => mvy_524
  # DEBUG i_max => _523
  if (mvy_524 <= _526)
    goto <bb 73>;
  else
    goto <bb 74>;

  <bb 73>:
  mvy_527 = MIN_EXPR <_523, _526>;

  <bb 74>:
  # mvy_532 = PHI <mvy_524(72), mvy_527(73)>
  # DEBUG v => NULL
  # DEBUG i_min => NULL
  # DEBUG i_max => NULL
  # DEBUG mvy => NULL
  _528 = h_10(D)->mc.mc_luma;
  _537 = h_10(D)->mb.pic.i_stride[0];
  _538 = &h_10(D)->mb.pic.p_fref[0][i_ref_517];
  _539 = h_10(D)->mb.pic.p_fdec[0];
  _528 (_539, 32, _538, _537, iftmp.11_535, mvy_532, 16, 8);
  _545 = h_10(D)->mb.b_interlaced;
  _546 = i_ref_517 & _545;
  if (_546 != 0)
    goto <bb 75>;
  else
    goto <bb 76>;

  <bb 75>:
  _547 = h_10(D)->mb.i_mb_y;
  _548 = _547 & 1;
  _549 = _548 * 4;
  _550 = _549 + -2;
  mvy_551 = mvy_532 + _550;
  # DEBUG mvy => mvy_551

  <bb 76>:
  # mvy_567 = PHI <mvy_532(74), mvy_551(75)>
  # DEBUG mvy => mvy_567
  _552 = h_10(D)->mc.mc_chroma;
  _555 = h_10(D)->mb.pic.p_fref[0][i_ref_517][4];
  _557 = h_10(D)->mb.pic.i_stride[1];
  _563 = h_10(D)->mb.pic.p_fdec[1];
  _552 (_563, 32, _555, _557, iftmp.11_535, mvy_567, 8, 4);
  _568 = h_10(D)->mc.mc_chroma;
  _569 = h_10(D)->mb.pic.p_fref[0][i_ref_517][5];
  _570 = h_10(D)->mb.pic.i_stride[2];
  _575 = h_10(D)->mb.pic.p_fdec[2];
  _568 (_575, 32, _569, _570, iftmp.11_535, mvy_567, 8, 4);
  goto <bb 85>;

  <bb 77>:
  if (_344 != 0)
    goto <bb 78>;
  else
    goto <bb 85>;

  <bb 78>:
  # DEBUG h => h_10(D)
  # DEBUG x => 0
  # DEBUG y => 0
  # DEBUG width => 4
  # DEBUG height => 2
  # DEBUG i8 => 12
  _579 = h_10(D)->mb.cache.ref[1][12];
  i_ref_580 = (const int) _579;
  # DEBUG i_ref => i_ref_580
  _581 = h_10(D)->mb.mv_max[0];
  _582 = h_10(D)->mb.mv_min[0];
  _583 = h_10(D)->mb.cache.mv[1][12][0];
  _584 = (int) _583;
  # DEBUG v => _584
  # DEBUG i_min => _582
  # DEBUG i_max => _581
  if (_582 <= _584)
    goto <bb 79>;
  else
    goto <bb 80>;

  <bb 79>:
  iftmp.11_585 = MIN_EXPR <_581, _584>;

  <bb 80>:
  # iftmp.11_598 = PHI <_582(78), iftmp.11_585(79)>
  # DEBUG v => NULL
  # DEBUG i_min => NULL
  # DEBUG i_max => NULL
  # DEBUG mvx => NULL
  _586 = h_10(D)->mb.mv_max[1];
  mvy_587 = h_10(D)->mb.mv_min[1];
  _588 = h_10(D)->mb.cache.mv[1][12][1];
  _589 = (int) _588;
  # DEBUG v => _589
  # DEBUG i_min => mvy_587
  # DEBUG i_max => _586
  if (mvy_587 <= _589)
    goto <bb 81>;
  else
    goto <bb 82>;

  <bb 81>:
  mvy_590 = MIN_EXPR <_586, _589>;

  <bb 82>:
  # mvy_595 = PHI <mvy_587(80), mvy_590(81)>
  # DEBUG v => NULL
  # DEBUG i_min => NULL
  # DEBUG i_max => NULL
  # DEBUG mvy => NULL
  _591 = h_10(D)->mc.mc_luma;
  _600 = h_10(D)->mb.pic.i_stride[0];
  _601 = &h_10(D)->mb.pic.p_fref[1][i_ref_580];
  _602 = h_10(D)->mb.pic.p_fdec[0];
  _591 (_602, 32, _601, _600, iftmp.11_598, mvy_595, 16, 8);
  _608 = h_10(D)->mb.b_interlaced;
  _609 = i_ref_580 & _608;
  if (_609 != 0)
    goto <bb 83>;
  else
    goto <bb 84>;

  <bb 83>:
  _610 = h_10(D)->mb.i_mb_y;
  _611 = _610 & 1;
  _612 = _611 * 4;
  _613 = _612 + -2;
  mvy_614 = mvy_595 + _613;
  # DEBUG mvy => mvy_614

  <bb 84>:
  # mvy_630 = PHI <mvy_595(82), mvy_614(83)>
  # DEBUG mvy => mvy_630
  _615 = h_10(D)->mc.mc_chroma;
  _618 = h_10(D)->mb.pic.p_fref[1][i_ref_580][4];
  _620 = h_10(D)->mb.pic.i_stride[1];
  _626 = h_10(D)->mb.pic.p_fdec[1];
  _615 (_626, 32, _618, _620, iftmp.11_598, mvy_630, 8, 4);
  _631 = h_10(D)->mc.mc_chroma;
  _632 = h_10(D)->mb.pic.p_fref[1][i_ref_580][5];
  _633 = h_10(D)->mb.pic.i_stride[2];
  _638 = h_10(D)->mb.pic.p_fdec[2];
  _631 (_638, 32, _632, _633, iftmp.11_598, mvy_630, 8, 4);

  <bb 85>:
  if (_387 != 0)
    goto <bb 86>;
  else
    goto <bb 95>;

  <bb 86>:
  if (_95 != 0)
    goto <bb 87>;
  else
    goto <bb 88>;

  <bb 87>:
  x264_mb_mc_01xywh (h_10(D), 0, 2, 4, 2);
  goto <bb 140>;

  <bb 88>:
  # DEBUG h => h_10(D)
  # DEBUG x => 0
  # DEBUG y => 2
  # DEBUG width => 4
  # DEBUG height => 2
  # DEBUG i8 => 28
  _642 = h_10(D)->mb.cache.ref[0][28];
  i_ref_643 = (const int) _642;
  # DEBUG i_ref => i_ref_643
  _644 = h_10(D)->mb.mv_max[0];
  _645 = h_10(D)->mb.mv_min[0];
  _646 = h_10(D)->mb.cache.mv[0][28][0];
  _647 = (int) _646;
  # DEBUG v => _647
  # DEBUG i_min => _645
  # DEBUG i_max => _644
  if (_645 <= _647)
    goto <bb 89>;
  else
    goto <bb 90>;

  <bb 89>:
  iftmp.11_648 = MIN_EXPR <_644, _647>;

  <bb 90>:
  # iftmp.11_661 = PHI <_645(88), iftmp.11_648(89)>
  # DEBUG v => NULL
  # DEBUG i_min => NULL
  # DEBUG i_max => NULL
  # DEBUG mvx => NULL
  _649 = h_10(D)->mb.mv_max[1];
  mvy_650 = h_10(D)->mb.mv_min[1];
  _651 = h_10(D)->mb.cache.mv[0][28][1];
  _652 = (int) _651;
  # DEBUG v => _652
  # DEBUG i_min => mvy_650
  # DEBUG i_max => _649
  if (mvy_650 <= _652)
    goto <bb 91>;
  else
    goto <bb 92>;

  <bb 91>:
  mvy_653 = MIN_EXPR <_649, _652>;

  <bb 92>:
  # mvy_658 = PHI <mvy_650(90), mvy_653(91)>
  # DEBUG v => NULL
  # DEBUG i_min => NULL
  # DEBUG i_max => NULL
  # DEBUG mvy => NULL
  _654 = h_10(D)->mc.mc_luma;
  _659 = mvy_658 + 32;
  _663 = h_10(D)->mb.pic.i_stride[0];
  _664 = &h_10(D)->mb.pic.p_fref[0][i_ref_643];
  _665 = h_10(D)->mb.pic.p_fdec[0];
  _670 = _665 + 256;
  _654 (_670, 32, _664, _663, iftmp.11_661, _659, 16, 8);
  _671 = h_10(D)->mb.b_interlaced;
  _672 = i_ref_643 & _671;
  if (_672 != 0)
    goto <bb 93>;
  else
    goto <bb 94>;

  <bb 93>:
  _673 = h_10(D)->mb.i_mb_y;
  _674 = _673 & 1;
  _675 = _674 * 4;
  _676 = _675 + -2;
  mvy_677 = mvy_658 + _676;
  # DEBUG mvy => mvy_677

  <bb 94>:
  # mvy_693 = PHI <mvy_658(92), mvy_677(93)>
  # DEBUG mvy => mvy_693
  _678 = h_10(D)->mc.mc_chroma;
  _681 = h_10(D)->mb.pic.p_fref[0][i_ref_643][4];
  _683 = h_10(D)->mb.pic.i_stride[1];
  _684 = _683 * 4;
  _687 = (sizetype) _684;
  _688 = _681 + _687;
  _689 = h_10(D)->mb.pic.p_fdec[1];
  _692 = _689 + 128;
  _678 (_692, 32, _688, _683, iftmp.11_661, mvy_693, 8, 4);
  _694 = h_10(D)->mc.mc_chroma;
  _695 = h_10(D)->mb.pic.p_fref[0][i_ref_643][5];
  _696 = h_10(D)->mb.pic.i_stride[2];
  _697 = _696 * 4;
  _699 = (sizetype) _697;
  _700 = _695 + _699;
  _701 = h_10(D)->mb.pic.p_fdec[2];
  _702 = _701 + 128;
  _694 (_702, 32, _700, _696, iftmp.11_661, mvy_693, 8, 4);
  goto <bb 140>;

  <bb 95>:
  if (_95 != 0)
    goto <bb 96>;
  else
    goto <bb 58>;

  <bb 96>:
  # DEBUG h => h_10(D)
  # DEBUG x => 0
  # DEBUG y => 2
  # DEBUG width => 4
  # DEBUG height => 2
  # DEBUG i8 => 28
  _705 = h_10(D)->mb.cache.ref[1][28];
  i_ref_706 = (const int) _705;
  # DEBUG i_ref => i_ref_706
  _707 = h_10(D)->mb.mv_max[0];
  _708 = h_10(D)->mb.mv_min[0];
  _709 = h_10(D)->mb.cache.mv[1][28][0];
  _710 = (int) _709;
  # DEBUG v => _710
  # DEBUG i_min => _708
  # DEBUG i_max => _707
  if (_708 <= _710)
    goto <bb 97>;
  else
    goto <bb 98>;

  <bb 97>:
  iftmp.11_711 = MIN_EXPR <_707, _710>;

  <bb 98>:
  # iftmp.11_724 = PHI <_708(96), iftmp.11_711(97)>
  # DEBUG v => NULL
  # DEBUG i_min => NULL
  # DEBUG i_max => NULL
  # DEBUG mvx => NULL
  _712 = h_10(D)->mb.mv_max[1];
  mvy_713 = h_10(D)->mb.mv_min[1];
  _714 = h_10(D)->mb.cache.mv[1][28][1];
  _715 = (int) _714;
  # DEBUG v => _715
  # DEBUG i_min => mvy_713
  # DEBUG i_max => _712
  if (mvy_713 <= _715)
    goto <bb 99>;
  else
    goto <bb 100>;

  <bb 99>:
  mvy_716 = MIN_EXPR <_712, _715>;

  <bb 100>:
  # mvy_721 = PHI <mvy_713(98), mvy_716(99)>
  # DEBUG v => NULL
  # DEBUG i_min => NULL
  # DEBUG i_max => NULL
  # DEBUG mvy => NULL
  _717 = h_10(D)->mc.mc_luma;
  _722 = mvy_721 + 32;
  _726 = h_10(D)->mb.pic.i_stride[0];
  _727 = &h_10(D)->mb.pic.p_fref[1][i_ref_706];
  _728 = h_10(D)->mb.pic.p_fdec[0];
  _733 = _728 + 256;
  _717 (_733, 32, _727, _726, iftmp.11_724, _722, 16, 8);
  _734 = h_10(D)->mb.b_interlaced;
  _735 = i_ref_706 & _734;
  if (_735 != 0)
    goto <bb 101>;
  else
    goto <bb 102>;

  <bb 101>:
  _736 = h_10(D)->mb.i_mb_y;
  _737 = _736 & 1;
  _738 = _737 * 4;
  _739 = _738 + -2;
  mvy_740 = mvy_721 + _739;
  # DEBUG mvy => mvy_740

  <bb 102>:
  # mvy_756 = PHI <mvy_721(100), mvy_740(101)>
  # DEBUG mvy => mvy_756
  _741 = h_10(D)->mc.mc_chroma;
  _744 = h_10(D)->mb.pic.p_fref[1][i_ref_706][4];
  _746 = h_10(D)->mb.pic.i_stride[1];
  _747 = _746 * 4;
  _750 = (sizetype) _747;
  _751 = _744 + _750;
  _752 = h_10(D)->mb.pic.p_fdec[1];
  _755 = _752 + 128;
  _741 (_755, 32, _751, _746, iftmp.11_724, mvy_756, 8, 4);
  _757 = h_10(D)->mc.mc_chroma;
  _758 = h_10(D)->mb.pic.p_fref[1][i_ref_706][5];
  _759 = h_10(D)->mb.pic.i_stride[2];
  _760 = _759 * 4;
  _762 = (sizetype) _760;
  _763 = _758 + _762;
  _764 = h_10(D)->mb.pic.p_fdec[2];
  _765 = _764 + 128;
  _757 (_765, 32, _763, _759, iftmp.11_724, mvy_756, 8, 4);
  goto <bb 140>;

  <bb 103>:
  if (_39 == 15)
    goto <bb 104>;
  else
    goto <bb 58>;

  <bb 104>:
  if (_158 != 0)
    goto <bb 105>;
  else
    goto <bb 114>;

  <bb 105>:
  if (_344 != 0)
    goto <bb 106>;
  else
    goto <bb 107>;

  <bb 106>:
  x264_mb_mc_01xywh (h_10(D), 0, 0, 2, 4);
  goto <bb 122>;

  <bb 107>:
  # DEBUG h => h_10(D)
  # DEBUG x => 0
  # DEBUG y => 0
  # DEBUG width => 2
  # DEBUG height => 4
  # DEBUG i8 => 12
  _768 = h_10(D)->mb.cache.ref[0][12];
  i_ref_769 = (const int) _768;
  # DEBUG i_ref => i_ref_769
  _770 = h_10(D)->mb.mv_max[0];
  _771 = h_10(D)->mb.mv_min[0];
  _772 = h_10(D)->mb.cache.mv[0][12][0];
  _773 = (int) _772;
  # DEBUG v => _773
  # DEBUG i_min => _771
  # DEBUG i_max => _770
  if (_771 <= _773)
    goto <bb 108>;
  else
    goto <bb 109>;

  <bb 108>:
  iftmp.11_774 = MIN_EXPR <_770, _773>;

  <bb 109>:
  # iftmp.11_787 = PHI <_771(107), iftmp.11_774(108)>
  # DEBUG v => NULL
  # DEBUG i_min => NULL
  # DEBUG i_max => NULL
  # DEBUG mvx => NULL
  _775 = h_10(D)->mb.mv_max[1];
  mvy_776 = h_10(D)->mb.mv_min[1];
  _777 = h_10(D)->mb.cache.mv[0][12][1];
  _778 = (int) _777;
  # DEBUG v => _778
  # DEBUG i_min => mvy_776
  # DEBUG i_max => _775
  if (mvy_776 <= _778)
    goto <bb 110>;
  else
    goto <bb 111>;

  <bb 110>:
  mvy_779 = MIN_EXPR <_775, _778>;

  <bb 111>:
  # mvy_784 = PHI <mvy_776(109), mvy_779(110)>
  # DEBUG v => NULL
  # DEBUG i_min => NULL
  # DEBUG i_max => NULL
  # DEBUG mvy => NULL
  _780 = h_10(D)->mc.mc_luma;
  _789 = h_10(D)->mb.pic.i_stride[0];
  _790 = &h_10(D)->mb.pic.p_fref[0][i_ref_769];
  _791 = h_10(D)->mb.pic.p_fdec[0];
  _780 (_791, 32, _790, _789, iftmp.11_787, mvy_784, 8, 16);
  _797 = h_10(D)->mb.b_interlaced;
  _798 = i_ref_769 & _797;
  if (_798 != 0)
    goto <bb 112>;
  else
    goto <bb 113>;

  <bb 112>:
  _799 = h_10(D)->mb.i_mb_y;
  _800 = _799 & 1;
  _801 = _800 * 4;
  _802 = _801 + -2;
  mvy_803 = mvy_784 + _802;
  # DEBUG mvy => mvy_803

  <bb 113>:
  # mvy_819 = PHI <mvy_784(111), mvy_803(112)>
  # DEBUG mvy => mvy_819
  _804 = h_10(D)->mc.mc_chroma;
  _807 = h_10(D)->mb.pic.p_fref[0][i_ref_769][4];
  _809 = h_10(D)->mb.pic.i_stride[1];
  _815 = h_10(D)->mb.pic.p_fdec[1];
  _804 (_815, 32, _807, _809, iftmp.11_787, mvy_819, 4, 8);
  _820 = h_10(D)->mc.mc_chroma;
  _821 = h_10(D)->mb.pic.p_fref[0][i_ref_769][5];
  _822 = h_10(D)->mb.pic.i_stride[2];
  _827 = h_10(D)->mb.pic.p_fdec[2];
  _820 (_827, 32, _821, _822, iftmp.11_787, mvy_819, 4, 8);
  goto <bb 122>;

  <bb 114>:
  if (_344 != 0)
    goto <bb 115>;
  else
    goto <bb 122>;

  <bb 115>:
  # DEBUG h => h_10(D)
  # DEBUG x => 0
  # DEBUG y => 0
  # DEBUG width => 2
  # DEBUG height => 4
  # DEBUG i8 => 12
  _831 = h_10(D)->mb.cache.ref[1][12];
  i_ref_832 = (const int) _831;
  # DEBUG i_ref => i_ref_832
  _833 = h_10(D)->mb.mv_max[0];
  _834 = h_10(D)->mb.mv_min[0];
  _835 = h_10(D)->mb.cache.mv[1][12][0];
  _836 = (int) _835;
  # DEBUG v => _836
  # DEBUG i_min => _834
  # DEBUG i_max => _833
  if (_834 <= _836)
    goto <bb 116>;
  else
    goto <bb 117>;

  <bb 116>:
  iftmp.11_837 = MIN_EXPR <_833, _836>;

  <bb 117>:
  # iftmp.11_850 = PHI <_834(115), iftmp.11_837(116)>
  # DEBUG v => NULL
  # DEBUG i_min => NULL
  # DEBUG i_max => NULL
  # DEBUG mvx => NULL
  _838 = h_10(D)->mb.mv_max[1];
  mvy_839 = h_10(D)->mb.mv_min[1];
  _840 = h_10(D)->mb.cache.mv[1][12][1];
  _841 = (int) _840;
  # DEBUG v => _841
  # DEBUG i_min => mvy_839
  # DEBUG i_max => _838
  if (mvy_839 <= _841)
    goto <bb 118>;
  else
    goto <bb 119>;

  <bb 118>:
  mvy_842 = MIN_EXPR <_838, _841>;

  <bb 119>:
  # mvy_847 = PHI <mvy_839(117), mvy_842(118)>
  # DEBUG v => NULL
  # DEBUG i_min => NULL
  # DEBUG i_max => NULL
  # DEBUG mvy => NULL
  _843 = h_10(D)->mc.mc_luma;
  _852 = h_10(D)->mb.pic.i_stride[0];
  _853 = &h_10(D)->mb.pic.p_fref[1][i_ref_832];
  _854 = h_10(D)->mb.pic.p_fdec[0];
  _843 (_854, 32, _853, _852, iftmp.11_850, mvy_847, 8, 16);
  _860 = h_10(D)->mb.b_interlaced;
  _861 = i_ref_832 & _860;
  if (_861 != 0)
    goto <bb 120>;
  else
    goto <bb 121>;

  <bb 120>:
  _862 = h_10(D)->mb.i_mb_y;
  _863 = _862 & 1;
  _864 = _863 * 4;
  _865 = _864 + -2;
  mvy_866 = mvy_847 + _865;
  # DEBUG mvy => mvy_866

  <bb 121>:
  # mvy_882 = PHI <mvy_847(119), mvy_866(120)>
  # DEBUG mvy => mvy_882
  _867 = h_10(D)->mc.mc_chroma;
  _870 = h_10(D)->mb.pic.p_fref[1][i_ref_832][4];
  _872 = h_10(D)->mb.pic.i_stride[1];
  _878 = h_10(D)->mb.pic.p_fdec[1];
  _867 (_878, 32, _870, _872, iftmp.11_850, mvy_882, 4, 8);
  _883 = h_10(D)->mc.mc_chroma;
  _884 = h_10(D)->mb.pic.p_fref[1][i_ref_832][5];
  _885 = h_10(D)->mb.pic.i_stride[2];
  _890 = h_10(D)->mb.pic.p_fdec[2];
  _883 (_890, 32, _884, _885, iftmp.11_850, mvy_882, 4, 8);

  <bb 122>:
  if (_387 != 0)
    goto <bb 123>;
  else
    goto <bb 132>;

  <bb 123>:
  if (_95 != 0)
    goto <bb 124>;
  else
    goto <bb 125>;

  <bb 124>:
  x264_mb_mc_01xywh (h_10(D), 2, 0, 2, 4);
  goto <bb 140>;

  <bb 125>:
  # DEBUG h => h_10(D)
  # DEBUG x => 2
  # DEBUG y => 0
  # DEBUG width => 2
  # DEBUG height => 4
  # DEBUG i8 => 14
  _894 = h_10(D)->mb.cache.ref[0][14];
  i_ref_895 = (const int) _894;
  # DEBUG i_ref => i_ref_895
  _896 = h_10(D)->mb.mv_max[0];
  _897 = h_10(D)->mb.mv_min[0];
  _898 = h_10(D)->mb.cache.mv[0][14][0];
  _899 = (int) _898;
  # DEBUG v => _899
  # DEBUG i_min => _897
  # DEBUG i_max => _896
  if (_897 <= _899)
    goto <bb 126>;
  else
    goto <bb 127>;

  <bb 126>:
  iftmp.11_900 = MIN_EXPR <_896, _899>;

  <bb 127>:
  # iftmp.11_913 = PHI <_897(125), iftmp.11_900(126)>
  # DEBUG v => NULL
  # DEBUG i_min => NULL
  # DEBUG i_max => NULL
  # DEBUG mvx => NULL
  _901 = h_10(D)->mb.mv_max[1];
  mvy_902 = h_10(D)->mb.mv_min[1];
  _903 = h_10(D)->mb.cache.mv[0][14][1];
  _904 = (int) _903;
  # DEBUG v => _904
  # DEBUG i_min => mvy_902
  # DEBUG i_max => _901
  if (mvy_902 <= _904)
    goto <bb 128>;
  else
    goto <bb 129>;

  <bb 128>:
  mvy_905 = MIN_EXPR <_901, _904>;

  <bb 129>:
  # mvy_910 = PHI <mvy_902(127), mvy_905(128)>
  # DEBUG v => NULL
  # DEBUG i_min => NULL
  # DEBUG i_max => NULL
  # DEBUG mvy => NULL
  _906 = h_10(D)->mc.mc_luma;
  _914 = iftmp.11_913 + 32;
  _915 = h_10(D)->mb.pic.i_stride[0];
  _916 = &h_10(D)->mb.pic.p_fref[0][i_ref_895];
  _917 = h_10(D)->mb.pic.p_fdec[0];
  _922 = _917 + 8;
  _906 (_922, 32, _916, _915, _914, mvy_910, 8, 16);
  _923 = h_10(D)->mb.b_interlaced;
  _924 = i_ref_895 & _923;
  if (_924 != 0)
    goto <bb 130>;
  else
    goto <bb 131>;

  <bb 130>:
  _925 = h_10(D)->mb.i_mb_y;
  _926 = _925 & 1;
  _927 = _926 * 4;
  _928 = _927 + -2;
  mvy_929 = mvy_910 + _928;
  # DEBUG mvy => mvy_929

  <bb 131>:
  # mvy_945 = PHI <mvy_910(129), mvy_929(130)>
  # DEBUG mvy => mvy_945
  _930 = h_10(D)->mc.mc_chroma;
  _933 = h_10(D)->mb.pic.p_fref[0][i_ref_895][4];
  _935 = h_10(D)->mb.pic.i_stride[1];
  _940 = _933 + 4;
  _941 = h_10(D)->mb.pic.p_fdec[1];
  _944 = _941 + 4;
  _930 (_944, 32, _940, _935, iftmp.11_913, mvy_945, 4, 8);
  _946 = h_10(D)->mc.mc_chroma;
  _947 = h_10(D)->mb.pic.p_fref[0][i_ref_895][5];
  _948 = h_10(D)->mb.pic.i_stride[2];
  _952 = _947 + 4;
  _953 = h_10(D)->mb.pic.p_fdec[2];
  _954 = _953 + 4;
  _946 (_954, 32, _952, _948, iftmp.11_913, mvy_945, 4, 8);
  goto <bb 140>;

  <bb 132>:
  if (_95 != 0)
    goto <bb 133>;
  else
    goto <bb 58>;

  <bb 133>:
  # DEBUG h => h_10(D)
  # DEBUG x => 2
  # DEBUG y => 0
  # DEBUG width => 2
  # DEBUG height => 4
  # DEBUG i8 => 14
  _957 = h_10(D)->mb.cache.ref[1][14];
  i_ref_958 = (const int) _957;
  # DEBUG i_ref => i_ref_958
  _959 = h_10(D)->mb.mv_max[0];
  _960 = h_10(D)->mb.mv_min[0];
  _961 = h_10(D)->mb.cache.mv[1][14][0];
  _962 = (int) _961;
  # DEBUG v => _962
  # DEBUG i_min => _960
  # DEBUG i_max => _959
  if (_960 <= _962)
    goto <bb 134>;
  else
    goto <bb 135>;

  <bb 134>:
  iftmp.11_963 = MIN_EXPR <_959, _962>;

  <bb 135>:
  # iftmp.11_976 = PHI <_960(133), iftmp.11_963(134)>
  # DEBUG v => NULL
  # DEBUG i_min => NULL
  # DEBUG i_max => NULL
  # DEBUG mvx => NULL
  _964 = h_10(D)->mb.mv_max[1];
  mvy_965 = h_10(D)->mb.mv_min[1];
  _966 = h_10(D)->mb.cache.mv[1][14][1];
  _967 = (int) _966;
  # DEBUG v => _967
  # DEBUG i_min => mvy_965
  # DEBUG i_max => _964
  if (mvy_965 <= _967)
    goto <bb 136>;
  else
    goto <bb 137>;

  <bb 136>:
  mvy_968 = MIN_EXPR <_964, _967>;

  <bb 137>:
  # mvy_973 = PHI <mvy_965(135), mvy_968(136)>
  # DEBUG v => NULL
  # DEBUG i_min => NULL
  # DEBUG i_max => NULL
  # DEBUG mvy => NULL
  _969 = h_10(D)->mc.mc_luma;
  _977 = iftmp.11_976 + 32;
  _978 = h_10(D)->mb.pic.i_stride[0];
  _979 = &h_10(D)->mb.pic.p_fref[1][i_ref_958];
  _980 = h_10(D)->mb.pic.p_fdec[0];
  _985 = _980 + 8;
  _969 (_985, 32, _979, _978, _977, mvy_973, 8, 16);
  _986 = h_10(D)->mb.b_interlaced;
  _987 = i_ref_958 & _986;
  if (_987 != 0)
    goto <bb 138>;
  else
    goto <bb 139>;

  <bb 138>:
  _988 = h_10(D)->mb.i_mb_y;
  _989 = _988 & 1;
  _990 = _989 * 4;
  _991 = _990 + -2;
  mvy_992 = mvy_973 + _991;
  # DEBUG mvy => mvy_992

  <bb 139>:
  # mvy_1008 = PHI <mvy_973(137), mvy_992(138)>
  # DEBUG mvy => mvy_1008
  _993 = h_10(D)->mc.mc_chroma;
  _996 = h_10(D)->mb.pic.p_fref[1][i_ref_958][4];
  _998 = h_10(D)->mb.pic.i_stride[1];
  _1003 = _996 + 4;
  _1004 = h_10(D)->mb.pic.p_fdec[1];
  _1007 = _1004 + 4;
  _993 (_1007, 32, _1003, _998, iftmp.11_976, mvy_1008, 4, 8);
  _1009 = h_10(D)->mc.mc_chroma;
  _1010 = h_10(D)->mb.pic.p_fref[1][i_ref_958][5];
  _1011 = h_10(D)->mb.pic.i_stride[2];
  _1015 = _1010 + 4;
  _1016 = h_10(D)->mb.pic.p_fdec[2];
  _1017 = _1016 + 4;
  _1009 (_1017, 32, _1015, _1011, iftmp.11_976, mvy_1008, 4, 8);

  <bb 140>:
  b_list0 ={v} {CLOBBER};
  b_list1 ={v} {CLOBBER};

  <bb 141>:
  return;

}



;; Function x264_macroblock_cache_init (x264_macroblock_cache_init, funcdef_no=130, decl_uid=5534, cgraph_uid=130, symbol_order=173)

common/macroblock.c:772:5: note: ===== analyze_loop_nest =====
common/macroblock.c:772:5: note: === vect_analyze_loop_form ===
common/macroblock.c:772:5: note: ===== analyze_loop_nest_1 =====
common/macroblock.c:772:5: note: === vect_analyze_loop_form ===
common/macroblock.c:772:5: note: not vectorized: control flow in loop.
common/macroblock.c:772:5: note: bad inner-loop form.
common/macroblock.c:772:5: note: not vectorized: Bad inner loop.
common/macroblock.c:772:5: note: bad loop form.

Analyzing loop at common/macroblock.c:812
common/macroblock.c:812:13: note: ===== analyze_loop_nest =====
common/macroblock.c:812:13: note: === vect_analyze_loop_form ===
common/macroblock.c:812:13: note: not vectorized: control flow in loop.
common/macroblock.c:812:13: note: bad loop form.

Analyzing loop at common/macroblock.c:804
common/macroblock.c:804:22: note: ===== analyze_loop_nest =====
common/macroblock.c:804:22: note: === vect_analyze_loop_form ===
common/macroblock.c:804:22: note: ===== analyze_loop_nest_1 =====
common/macroblock.c:804:22: note: === vect_analyze_loop_form ===
common/macroblock.c:804:22: note: not vectorized: control flow in loop.
common/macroblock.c:804:22: note: bad inner-loop form.
common/macroblock.c:804:22: note: not vectorized: Bad inner loop.
common/macroblock.c:804:22: note: bad loop form.

Analyzing loop at common/macroblock.c:806
common/macroblock.c:806:13: note: ===== analyze_loop_nest =====
common/macroblock.c:806:13: note: === vect_analyze_loop_form ===
common/macroblock.c:806:13: note: not vectorized: control flow in loop.
common/macroblock.c:806:13: note: bad loop form.
common/macroblock.c:772:5: note: vectorized 0 loops in function.
x264_macroblock_cache_init (struct x264_t * h)
{
  int i_refs;
  int i_mb_count;
  int j;
  int i;
  int _6;
  struct x264_sps_t * _16;
  int _17;
  int _21;
  unsigned int ivtmp_23;
  int _24;
  int _26;
  void * _29;
  unsigned int ivtmp_31;
  unsigned int i_mb_count.14_32;
  unsigned int _33;
  int _34;
  void * _36;
  void * _40;
  void * _43;
  int _45;
  void * _47;
  int _49;
  void * _51;
  struct x264_sps_t * _53;
  int _54;
  int _55;
  void * _57;
  int _59;
  void * _61;
  unsigned int _63;
  int _64;
  void * _66;
  void * _69;
  int iftmp.15_74;
  int _76;
  int _77;
  void * _83;
  int _88;
  struct x264_frame_t * _89;
  int _90;
  void * _92;
  uint8_t * _94;
  int8_t[48] * _99;
  int8_t[48] * _101;
  uint8_t[384] * _103;
  uint8_t * _105;
  uint8_t * _107;
  uint8_t * _109;
  uint8_t * _111;
  uint8_t * _113;
  int _132;
  int _135;
  int prephitmp_153;
  void * _155;
  int pretmp_160;
  int prephitmp_161;
  int prephitmp_163;
  unsigned int pretmp_164;
  int pretmp_165;
  int pretmp_166;
  int prephitmp_167;
  int pretmp_168;
  int prephitmp_169;
  int pretmp_170;
  int prephitmp_171;

  <bb 2>:
  i_mb_count_15 = h_14(D)->mb.i_mb_count;
  # DEBUG i_mb_count => i_mb_count_15
  _16 = h_14(D)->sps;
  _17 = _16->i_mb_width;
  h_14(D)->mb.i_mb_stride = _17;
  _21 = _17 * 2;
  h_14(D)->mb.i_b8_stride = _21;
  _24 = _17 * 4;
  h_14(D)->mb.i_b4_stride = _24;
  _26 = h_14(D)->param.b_interlaced;
  h_14(D)->mb.b_interlaced = _26;
  _29 = x264_malloc (i_mb_count_15);
  h_14(D)->mb.qp = _29;
  if (_29 == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  x264_log (h_14(D), 0, "malloc failed\n");
  goto <bb 36>;

  <bb 4>:
  i_mb_count.14_32 = (unsigned int) i_mb_count_15;
  _33 = i_mb_count.14_32 * 2;
  _34 = (int) _33;
  _36 = x264_malloc (_34);
  h_14(D)->mb.cbp = _36;
  if (_36 == 0B)
    goto <bb 3>;
  else
    goto <bb 5>;

  <bb 5>:
  _40 = x264_malloc (i_mb_count_15);
  h_14(D)->mb.skipbp = _40;
  if (_40 == 0B)
    goto <bb 3>;
  else
    goto <bb 6>;

  <bb 6>:
  _43 = x264_malloc (i_mb_count_15);
  h_14(D)->mb.mb_transform_size = _43;
  if (_43 == 0B)
    goto <bb 3>;
  else
    goto <bb 7>;

  <bb 7>:
  _45 = i_mb_count_15 * 8;
  _47 = x264_malloc (_45);
  h_14(D)->mb.intra4x4_pred_mode = _47;
  if (_47 == 0B)
    goto <bb 3>;
  else
    goto <bb 8>;

  <bb 8>:
  _49 = i_mb_count_15 * 24;
  _51 = x264_malloc (_49);
  h_14(D)->mb.non_zero_count = _51;
  if (_51 == 0B)
    goto <bb 3>;
  else
    goto <bb 9>;

  <bb 9>:
  _53 = h_14(D)->sps;
  _54 = _53->i_mb_width;
  _55 = _54 * 64;
  _57 = x264_malloc (_55);
  h_14(D)->mb.nnz_backup = _57;
  if (_57 == 0B)
    goto <bb 3>;
  else
    goto <bb 10>;

  <bb 10>:
  _59 = h_14(D)->param.b_cabac;
  if (_59 != 0)
    goto <bb 12>;
  else
    goto <bb 11>;

  <bb 11>:
  # DEBUG i => 0
  pretmp_168 = h_14(D)->param.b_bframe_pyramid;
  pretmp_170 = h_14(D)->param.b_interlaced;
  pretmp_164 = i_mb_count.14_32 * 4;
  pretmp_165 = (int) pretmp_164;
  goto <bb 17>;

  <bb 12>:
  _61 = x264_malloc (i_mb_count_15);
  h_14(D)->mb.chroma_pred_mode = _61;
  if (_61 == 0B)
    goto <bb 3>;
  else
    goto <bb 13>;

  <bb 13>:
  _63 = i_mb_count.14_32 * 64;
  _64 = (int) _63;
  _66 = x264_malloc (_64);
  h_14(D)->mb.mvd[0] = _66;
  if (_66 == 0B)
    goto <bb 3>;
  else
    goto <bb 14>;

  <bb 14>:
  _69 = x264_malloc (_64);
  h_14(D)->mb.mvd[1] = _69;
  if (_69 == 0B)
    goto <bb 3>;
  else
    goto <bb 11>;

  <bb 15>:
  pretmp_160 = h_14(D)->param.b_bframe_pyramid;

  <bb 16>:
  # i_3 = PHI <i_87(15), i_134(37)>
  # prephitmp_161 = PHI <pretmp_160(15), prephitmp_169(37)>
  # prephitmp_163 = PHI <prephitmp_167(15), prephitmp_171(37)>

  <bb 17>:
  # i_139 = PHI <i_3(16), 0(11)>
  # prephitmp_169 = PHI <prephitmp_161(16), pretmp_168(11)>
  # prephitmp_171 = PHI <prephitmp_163(16), pretmp_170(11)>
  # DEBUG i => i_139
  if (i_139 == 0)
    goto <bb 18>;
  else
    goto <bb 19>;

  <bb 18>:
  # DEBUG i => 0
  iftmp.15_74 = h_14(D)->param.i_frame_reference;
  _132 = iftmp.15_74 + prephitmp_169;
  _135 = MIN_EXPR <_132, 16>;
  i_refs_144 = _135 << prephitmp_171;
  # DEBUG i_refs => i_refs_144
  # DEBUG j => 0
  # DEBUG j => 0
  if (i_refs_144 > 0)
    goto <bb 20>;
  else
    goto <bb 37>;

  <bb 19>:
  _76 = prephitmp_169 + 1;
  _77 = MIN_EXPR <_76, 16>;
  i_refs_79 = _77 << prephitmp_171;
  # DEBUG i_refs => i_refs_79
  # DEBUG j => 0
  # DEBUG j => 0
  if (i_refs_79 > 0)
    goto <bb 20>;
  else
    goto <bb 25>;

  <bb 20>:
  # i_refs_140 = PHI <i_refs_79(19), i_refs_144(18)>

  <bb 21>:
  # j_7 = PHI <0(20), j_85(23)>
  # DEBUG j => j_7
  _83 = x264_malloc (pretmp_165);
  h_14(D)->mb.mvr[i_139][j_7] = _83;
  if (_83 == 0B)
    goto <bb 3>;
  else
    goto <bb 22>;

  <bb 22>:
  j_85 = j_7 + 1;
  # DEBUG j => j_85
  # DEBUG j => j_85
  if (j_85 < i_refs_140)
    goto <bb 23>;
  else
    goto <bb 24>;

  <bb 23>:
  goto <bb 21>;

  <bb 24>:
  pretmp_166 = h_14(D)->param.b_interlaced;

  <bb 25>:
  # prephitmp_167 = PHI <pretmp_166(24), prephitmp_171(19)>
  i_87 = i_139 + 1;
  # DEBUG i => i_87
  # DEBUG i => i_87
  if (i_87 != 2)
    goto <bb 15>;
  else
    goto <bb 26>;

  <bb 26>:
  # prephitmp_153 = PHI <prephitmp_167(25)>
  # DEBUG i => 0
  if (prephitmp_153 >= 0)
    goto <bb 28>;
  else
    goto <bb 27>;

  <bb 27>:
  _99 = &h_14(D)->mb.cache.ref[0];
  # DEBUG __dest => _99
  # DEBUG __ch => -2
  # DEBUG __len => 48
  __builtin_memset (_99, -2, 48);
  # DEBUG __dest => NULL
  # DEBUG __ch => NULL
  # DEBUG __len => NULL
  _101 = &h_14(D)->mb.cache.ref[1];
  # DEBUG __dest => _101
  # DEBUG __ch => -2
  # DEBUG __len => 48
  __builtin_memset (_101, -2, 48);
  # DEBUG __dest => NULL
  # DEBUG __ch => NULL
  # DEBUG __len => NULL
  _103 = &h_14(D)->mb.pic.fenc_buf;
  h_14(D)->mb.pic.p_fenc[0] = _103;
  _105 = &MEM[(void *)h_14(D) + 12096B];
  h_14(D)->mb.pic.p_fenc[1] = _105;
  _107 = &MEM[(void *)h_14(D) + 12104B];
  h_14(D)->mb.pic.p_fenc[2] = _107;
  _109 = &MEM[(void *)h_14(D) + 12288B];
  h_14(D)->mb.pic.p_fdec[0] = _109;
  _111 = &MEM[(void *)h_14(D) + 12832B];
  h_14(D)->mb.pic.p_fdec[1] = _111;
  _113 = &MEM[(void *)h_14(D) + 12848B];
  h_14(D)->mb.pic.p_fdec[2] = _113;
  h_14(D)->mb.i_neighbour4[14] = 15;
  h_14(D)->mb.i_neighbour4[12] = 15;
  h_14(D)->mb.i_neighbour4[9] = 15;
  h_14(D)->mb.i_neighbour4[6] = 15;
  h_14(D)->mb.i_neighbour8[3] = 11;
  h_14(D)->mb.i_neighbour4[15] = 11;
  h_14(D)->mb.i_neighbour4[13] = 11;
  h_14(D)->mb.i_neighbour4[11] = 11;
  h_14(D)->mb.i_neighbour4[7] = 11;
  h_14(D)->mb.i_neighbour4[3] = 11;
  goto <bb 36>;

  <bb 28>:

  <bb 29>:
  # i_10 = PHI <0(28), i_98(35)>
  # DEBUG i => i_10

  <bb 30>:
  # j_138 = PHI <0(29), j_96(33)>
  # ivtmp_23 = PHI <3(29), ivtmp_31(33)>
  # DEBUG j => j_138
  _89 = h_14(D)->fdec;
  _90 = _89->i_stride[j_138];
  _92 = x264_malloc (_90);
  if (_92 == 0B)
    goto <bb 31>;
  else
    goto <bb 32>;

  <bb 31>:
  # i_156 = PHI <i_10(30)>
  # _155 = PHI <_92(30)>
  # j_154 = PHI <j_138(30)>
  h_14(D)->mb.intra_border_backup[i_156][j_154] = _155;
  goto <bb 3>;

  <bb 32>:
  _94 = _92 + 8;
  h_14(D)->mb.intra_border_backup[i_10][j_138] = _94;
  j_96 = j_138 + 1;
  # DEBUG j => j_96
  # DEBUG j => j_96
  ivtmp_31 = ivtmp_23 - 1;
  if (ivtmp_31 != 0)
    goto <bb 33>;
  else
    goto <bb 34>;

  <bb 33>:
  goto <bb 30>;

  <bb 34>:
  i_98 = i_10 + 1;
  # DEBUG i => i_98
  # DEBUG i => i_98
  _88 = h_14(D)->param.b_interlaced;
  if (_88 >= i_98)
    goto <bb 35>;
  else
    goto <bb 27>;

  <bb 35>:
  goto <bb 29>;

  <bb 36>:
  # _6 = PHI <0(27), -1(3)>
  return _6;

  <bb 37>:
  i_134 = i_139 + 1;
  # DEBUG i => i_134
  # DEBUG i => i_134
  goto <bb 16>;

}



;; Function x264_macroblock_cache_end (x264_macroblock_cache_end, funcdef_no=131, decl_uid=5544, cgraph_uid=131, symbol_order=174)


Analyzing loop at common/macroblock.c:858
common/macroblock.c:858:9: note: ===== analyze_loop_nest =====
common/macroblock.c:858:9: note: === vect_analyze_loop_form ===
common/macroblock.c:858:9: note: === get_loop_niters ===
Analyzing # of iterations of loop 6
  exit condition [31, + , 4294967295] != 0
  bounds on difference of bases: -31 ... -31
  result:
    # of iterations 31, bounded by 31
common/macroblock.c:858:9: note: === vect_analyze_data_refs ===
Creating dr for h_12(D)->mb.mvr[1][j_4]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:494, generic-match.c:3721
success.
	base_address: h_12(D)
	offset from base address: 0
	constant offset from base address: 11456
	step: 8
	aligned to: 128
	base_object: *h_12(D)
	Access function 0: {0, +, 1}_6
	Access function 1: 1
	Access function 2: 2560
	Access function 3: 87040
common/macroblock.c:858:9: note: not vectorized: loop contains function calls or data references that cannot be analyzed
common/macroblock.c:858:9: note: bad data references.

Analyzing loop at common/macroblock.c:858
common/macroblock.c:858:9: note: ===== analyze_loop_nest =====
common/macroblock.c:858:9: note: === vect_analyze_loop_form ===
common/macroblock.c:858:9: note: === get_loop_niters ===
Analyzing # of iterations of loop 5
  exit condition [31, + , 4294967295] != 0
  bounds on difference of bases: -31 ... -31
  result:
    # of iterations 31, bounded by 31
common/macroblock.c:858:9: note: === vect_analyze_data_refs ===
Creating dr for h_12(D)->mb.mvr[0][j_19]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:494, generic-match.c:3721
success.
	base_address: h_12(D)
	offset from base address: 0
	constant offset from base address: 11200
	step: 8
	aligned to: 128
	base_object: *h_12(D)
	Access function 0: {0, +, 1}_5
	Access function 1: 0
	Access function 2: 2560
	Access function 3: 87040
common/macroblock.c:858:9: note: not vectorized: loop contains function calls or data references that cannot be analyzed
common/macroblock.c:858:9: note: bad data references.

Analyzing loop at common/macroblock.c:854
common/macroblock.c:854:5: note: ===== analyze_loop_nest =====
common/macroblock.c:854:5: note: === vect_analyze_loop_form ===
common/macroblock.c:854:5: note: ===== analyze_loop_nest_1 =====
common/macroblock.c:854:5: note: === vect_analyze_loop_form ===
common/macroblock.c:854:5: note: === get_loop_niters ===
Analyzing # of iterations of loop 4
  exit condition [2, + , 4294967295] != 0
  bounds on difference of bases: -2 ... -2
  result:
    # of iterations 2, bounded by 2
common/macroblock.c:854:5: note: Considering outer-loop vectorization.
split exit edge.
common/macroblock.c:854:5: note: === get_loop_niters ===
common/macroblock.c:854:5: note: not vectorized: number of iterations cannot be computed.
common/macroblock.c:854:5: note: bad loop form.

Analyzing loop at common/macroblock.c:855
common/macroblock.c:855:9: note: ===== analyze_loop_nest =====
common/macroblock.c:855:9: note: === vect_analyze_loop_form ===
common/macroblock.c:855:9: note: === get_loop_niters ===
common/macroblock.c:855:9: note: === vect_analyze_data_refs ===
Creating dr for h_12(D)->mb.intra_border_backup[i_64][j_59]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: h_12(D)
	offset from base address: (ssizetype) ((sizetype) i_64 * 24)
	constant offset from base address: 11728
	step: 8
	aligned to: 8
	base_object: *h_12(D)
	Access function 0: {0, +, 1}_4
	Access function 1: i_64
	Access function 2: 6784
	Access function 3: 87040
common/macroblock.c:855:9: note: not vectorized: loop contains function calls or data references that cannot be analyzed
common/macroblock.c:855:9: note: bad data references.
common/macroblock.c:851:6: note: vectorized 0 loops in function.
x264_macroblock_cache_end (struct x264_t * h)
{
  int j;
  int i;
  unsigned int ivtmp_1;
  unsigned int ivtmp_6;
  int _13;
  uint8_t * _14;
  void * _15;
  int _24;
  int8_t * _25;
  int16_t[2] * _27;
  int16_t[2] * _29;
  int8_t[8] * _31;
  uint8_t[24] * _33;
  uint8_t[16] * _35;
  int8_t * _37;
  int8_t * _39;
  int16_t * _41;
  int8_t * _43;
  unsigned int ivtmp_51;
  unsigned int ivtmp_52;
  unsigned int ivtmp_53;
  int16_t[2] * _55;
  int _60;
  unsigned int ivtmp_63;
  int16_t[2] * _65;

  <bb 2>:
  # DEBUG i => 0
  # DEBUG i => 0
  _60 = h_12(D)->param.b_interlaced;
  if (_60 >= 0)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  goto <bb 10>;

  <bb 4>:

  <bb 5>:
  # i_64 = PHI <0(4), i_18(9)>
  # DEBUG i => i_64

  <bb 6>:
  # j_59 = PHI <0(5), j_17(7)>
  # ivtmp_52 = PHI <3(5), ivtmp_51(7)>
  # DEBUG j => j_59
  _14 = h_12(D)->mb.intra_border_backup[i_64][j_59];
  _15 = _14 + 18446744073709551608;
  x264_free (_15);
  j_17 = j_59 + 1;
  # DEBUG j => j_17
  # DEBUG j => j_17
  ivtmp_51 = ivtmp_52 - 1;
  if (ivtmp_51 != 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  goto <bb 6>;

  <bb 8>:
  i_18 = i_64 + 1;
  # DEBUG i => i_18
  # DEBUG i => i_18
  _13 = h_12(D)->param.b_interlaced;
  if (_13 >= i_18)
    goto <bb 9>;
  else
    goto <bb 18>;

  <bb 18>:
  goto <bb 3>;

  <bb 9>:
  goto <bb 5>;

  <bb 10>:
  # j_19 = PHI <0(3), j_57(11)>
  # ivtmp_6 = PHI <32(3), ivtmp_1(11)>
  # DEBUG j => j_19
  _55 = h_12(D)->mb.mvr[0][j_19];
  x264_free (_55);
  j_57 = j_19 + 1;
  # DEBUG j => j_57
  # DEBUG j => j_57
  ivtmp_1 = ivtmp_6 - 1;
  if (ivtmp_1 != 0)
    goto <bb 11>;
  else
    goto <bb 12>;

  <bb 11>:
  goto <bb 10>;

  <bb 12>:

  <bb 13>:
  # j_4 = PHI <0(12), j_67(14)>
  # ivtmp_63 = PHI <32(12), ivtmp_53(14)>
  # DEBUG j => j_4
  _65 = h_12(D)->mb.mvr[1][j_4];
  x264_free (_65);
  j_67 = j_4 + 1;
  # DEBUG j => j_67
  # DEBUG j => j_67
  ivtmp_53 = ivtmp_63 - 1;
  if (ivtmp_53 != 0)
    goto <bb 14>;
  else
    goto <bb 15>;

  <bb 14>:
  goto <bb 13>;

  <bb 15>:
  # DEBUG i => 2
  # DEBUG i => 2
  _24 = h_12(D)->param.b_cabac;
  if (_24 != 0)
    goto <bb 16>;
  else
    goto <bb 17>;

  <bb 16>:
  _25 = h_12(D)->mb.chroma_pred_mode;
  x264_free (_25);
  _27 = h_12(D)->mb.mvd[0];
  x264_free (_27);
  _29 = h_12(D)->mb.mvd[1];
  x264_free (_29);

  <bb 17>:
  _31 = h_12(D)->mb.intra4x4_pred_mode;
  x264_free (_31);
  _33 = h_12(D)->mb.non_zero_count;
  x264_free (_33);
  _35 = h_12(D)->mb.nnz_backup;
  x264_free (_35);
  _37 = h_12(D)->mb.mb_transform_size;
  x264_free (_37);
  _39 = h_12(D)->mb.skipbp;
  x264_free (_39);
  _41 = h_12(D)->mb.cbp;
  x264_free (_41);
  _43 = h_12(D)->mb.qp;
  x264_free (_43);
  return;

}



;; Function x264_macroblock_slice_init (x264_macroblock_slice_init, funcdef_no=132, decl_uid=5536, cgraph_uid=132, symbol_order=175)


Analyzing loop at common/macroblock.c:498
common/macroblock.c:498:5: note: ===== analyze_loop_nest =====
common/macroblock.c:498:5: note: === vect_analyze_loop_form ===
common/macroblock.c:498:5: note: === get_loop_niters ===
Analyzing # of iterations of loop 5
  exit condition [1, + , 1](no_overflow) < _26
  bounds on difference of bases: 0 ... 2147483646
  result:
    # of iterations (unsigned int) _26 + 4294967295, bounded by 2147483646
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:49, generic-match.c:3223
common/macroblock.c:498:5: note: Symbolic number of iterations is (unsigned int) _26
common/macroblock.c:498:5: note: === vect_analyze_data_refs ===
Creating dr for h_12(D)->fref0[i_88]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: h_12(D)
	offset from base address: 0
	constant offset from base address: 9232
	step: 8
	aligned to: 128
	base_object: *h_12(D)
	Access function 0: {0, +, 1}_5
	Access function 1: 73856
Creating dr for _56->i_poc
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_56
	Access function 0: 0
Creating dr for _13->inv_ref_poc[i_88]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: _13
	offset from base address: 0
	constant offset from base address: 976
	step: 4
	aligned to: 128
	base_object: *_13
	Access function 0: {0, +, 1}_5
	Access function 1: 7808
common/macroblock.c:498:5: note: got vectype for stmt: _56 = h_12(D)->fref0[i_88];
vector(2) long unsigned int
Creating dr for _56->i_poc
analyze_innermost: success.
	base_address: _56
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 128
	base_object: _56->i_poc
common/macroblock.c:498:5: note: got vectype for stmt: _57 = _56->i_poc;
vector(4) int
common/macroblock.c:498:5: note: not vectorized: not suitable for gather load _57 = _56->i_poc;

common/macroblock.c:498:5: note: bad data references.

Analyzing loop at common/macroblock.c:895
common/macroblock.c:895:9: note: ===== analyze_loop_nest =====
common/macroblock.c:895:9: note: === vect_analyze_loop_form ===
common/macroblock.c:895:9: note: ===== analyze_loop_nest_1 =====
common/macroblock.c:895:9: note: === vect_analyze_loop_form ===
common/macroblock.c:895:9: note: not vectorized: control flow in loop.
common/macroblock.c:895:9: note: bad inner-loop form.
common/macroblock.c:895:9: note: not vectorized: Bad inner loop.
common/macroblock.c:895:9: note: bad loop form.

Analyzing loop at common/macroblock.c:899
common/macroblock.c:899:41: note: ===== analyze_loop_nest =====
common/macroblock.c:899:41: note: === vect_analyze_loop_form ===
common/macroblock.c:899:41: note: not vectorized: control flow in loop.
common/macroblock.c:899:41: note: bad loop form.

Analyzing loop at common/macroblock.c:890
common/macroblock.c:890:9: note: ===== analyze_loop_nest =====
common/macroblock.c:890:9: note: === vect_analyze_loop_form ===
common/macroblock.c:890:9: note: === get_loop_niters ===
Analyzing # of iterations of loop 2
  exit condition [1, + , 1](no_overflow) < _28
  bounds on difference of bases: 0 ... 2147483646
  result:
    # of iterations (unsigned int) _28 + 4294967295, bounded by 2147483646
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:49, generic-match.c:3223
common/macroblock.c:890:9: note: Symbolic number of iterations is (unsigned int) _28
common/macroblock.c:890:9: note: === vect_analyze_data_refs ===
Creating dr for h_12(D)->fref1[i_72]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: h_12(D)
	offset from base address: 0
	constant offset from base address: 9392
	step: 8
	aligned to: 128
	base_object: *h_12(D)
	Access function 0: {0, +, 1}_2
	Access function 1: 75136
Creating dr for _35->i_poc
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_35
	Access function 0: 0
Creating dr for _13->ref_poc[1][i_72]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:494, generic-match.c:3721
success.
	base_address: _13
	offset from base address: 0
	constant offset from base address: 912
	step: 4
	aligned to: 128
	base_object: *_13
	Access function 0: {0, +, 1}_2
	Access function 1: 1
	Access function 2: 6784
common/macroblock.c:890:9: note: got vectype for stmt: _35 = h_12(D)->fref1[i_72];
vector(2) long unsigned int
Creating dr for _35->i_poc
analyze_innermost: success.
	base_address: _35
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 128
	base_object: _35->i_poc
common/macroblock.c:890:9: note: got vectype for stmt: _36 = _35->i_poc;
vector(4) int
common/macroblock.c:890:9: note: not vectorized: not suitable for gather load _36 = _35->i_poc;

common/macroblock.c:890:9: note: bad data references.

Analyzing loop at common/macroblock.c:886
common/macroblock.c:886:5: note: ===== analyze_loop_nest =====
common/macroblock.c:886:5: note: === vect_analyze_loop_form ===
common/macroblock.c:886:5: note: === get_loop_niters ===
Analyzing # of iterations of loop 1
  exit condition [1, + , 1](no_overflow) < _26
  bounds on difference of bases: 0 ... 2147483646
  result:
    # of iterations (unsigned int) _26 + 4294967295, bounded by 2147483646
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:49, generic-match.c:3223
common/macroblock.c:886:5: note: Symbolic number of iterations is (unsigned int) _26
common/macroblock.c:886:5: note: === vect_analyze_data_refs ===
Creating dr for h_12(D)->fref0[i_67]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: h_12(D)
	offset from base address: 0
	constant offset from base address: 9232
	step: 8
	aligned to: 128
	base_object: *h_12(D)
	Access function 0: {0, +, 1}_1
	Access function 1: 73856
Creating dr for _30->i_poc
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_30
	Access function 0: 0
Creating dr for _13->ref_poc[0][i_67]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: _13
	offset from base address: 0
	constant offset from base address: 848
	step: 4
	aligned to: 128
	base_object: *_13
	Access function 0: {0, +, 1}_1
	Access function 1: 0
	Access function 2: 6784
common/macroblock.c:886:5: note: got vectype for stmt: _30 = h_12(D)->fref0[i_67];
vector(2) long unsigned int
Creating dr for _30->i_poc
analyze_innermost: success.
	base_address: _30
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 128
	base_object: _30->i_poc
common/macroblock.c:886:5: note: got vectype for stmt: _31 = _30->i_poc;
vector(4) int
common/macroblock.c:886:5: note: not vectorized: not suitable for gather load _31 = _30->i_poc;

common/macroblock.c:886:5: note: bad data references.
common/macroblock.c:874:6: note: vectorized 0 loops in function.
x264_macroblock_slice_init (struct x264_t * h)
{
  int i;
  int delta;
  int poc;
  int j;
  int i;
  signed char prephitmp_5;
  struct x264_frame_t * _13;
  int16_t[2] * _14;
  int16_t[2] * _17;
  struct x264_frame_t * _19;
  int8_t * _20;
  int8_t * _22;
  int8_t * _24;
  int _26;
  int _28;
  struct x264_frame_t * _30;
  int _31;
  int _34;
  struct x264_frame_t * _35;
  int _36;
  int _42;
  struct x264_frame_t * _45;
  int _46;
  int8_t[48] * _51;
  int _53;
  int pretmp_55;
  struct x264_frame_t * _56;
  int _57;
  int _59;
  int _60;
  int _61;
  signed char pretmp_68;
  int _69;
  struct x264_frame_t * _70;

  <bb 2>:
  _13 = h_12(D)->fdec;
  _14 = _13->mv[0];
  h_12(D)->mb.mv[0] = _14;
  _17 = _13->mv[1];
  h_12(D)->mb.mv[1] = _17;
  _20 = _13->ref[0];
  h_12(D)->mb.ref[0] = _20;
  _22 = _13->ref[1];
  h_12(D)->mb.ref[1] = _22;
  _24 = _13->mb_type;
  h_12(D)->mb.type = _24;
  _26 = h_12(D)->i_ref0;
  _13->i_ref[0] = _26;
  _28 = h_12(D)->i_ref1;
  _13->i_ref[1] = _28;
  # DEBUG i => 0
  # DEBUG i => 0
  if (_26 > 0)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  _34 = h_12(D)->sh.i_type;
  if (_34 == 1)
    goto <bb 8>;
  else
    goto <bb 26>;

  <bb 4>:

  <bb 5>:
  # i_67 = PHI <0(4), i_33(7)>
  # DEBUG i => i_67
  _30 = h_12(D)->fref0[i_67];
  _31 = _30->i_poc;
  _13->ref_poc[0][i_67] = _31;
  i_33 = i_67 + 1;
  # DEBUG i => i_33
  # DEBUG i => i_33
  if (_26 > i_33)
    goto <bb 7>;
  else
    goto <bb 6>;

  <bb 6>:
  goto <bb 3>;

  <bb 7>:
  goto <bb 5>;

  <bb 8>:
  # DEBUG i => 0
  if (_28 > 0)
    goto <bb 10>;
  else
    goto <bb 9>;

  <bb 9>:
  h_12(D)->mb.map_col_to_list0[-1] = -1;
  h_12(D)->mb.map_col_to_list0[-2] = -2;
  # DEBUG i => 0
  # DEBUG i => 0
  _19 = h_12(D)->fref1[0];
  _53 = _19->i_ref[0];
  if (_53 > 0)
    goto <bb 15>;
  else
    goto <bb 14>;

  <bb 10>:

  <bb 11>:
  # i_72 = PHI <0(10), i_38(13)>
  # DEBUG i => i_72
  _35 = h_12(D)->fref1[i_72];
  _36 = _35->i_poc;
  _13->ref_poc[1][i_72] = _36;
  i_38 = i_72 + 1;
  # DEBUG i => i_38
  # DEBUG i => i_38
  if (_28 > i_38)
    goto <bb 13>;
  else
    goto <bb 12>;

  <bb 12>:
  goto <bb 9>;

  <bb 13>:
  goto <bb 11>;

  <bb 14>:
  goto <bb 28>;

  <bb 15>:

  <bb 16>:
  # i_71 = PHI <0(15), i_50(25)>
  # DEBUG i => i_71
  poc_43 = _19->ref_poc[0][i_71];
  # DEBUG poc => poc_43
  h_12(D)->mb.map_col_to_list0[i_71] = -2;
  # DEBUG j => 0
  # DEBUG j => 0
  if (_26 > 0)
    goto <bb 17>;
  else
    goto <bb 24>;

  <bb 17>:
  _70 = h_12(D)->fref0[0];
  _69 = _70->i_poc;
  if (poc_43 == _69)
    goto <bb 21>;
  else
    goto <bb 22>;

  <bb 18>:
  _45 = h_12(D)->fref0[j_47];
  _46 = _45->i_poc;
  if (poc_43 == _46)
    goto <bb 20>;
  else
    goto <bb 19>;

  <bb 19>:
  goto <bb 23>;

  <bb 20>:
  # j_8 = PHI <j_47(18)>
  pretmp_68 = (signed char) j_8;

  <bb 21>:
  # prephitmp_5 = PHI <pretmp_68(20), 0(17)>
  h_12(D)->mb.map_col_to_list0[i_71] = prephitmp_5;
  goto <bb 24>;

  <bb 22>:

  <bb 23>:
  # j_79 = PHI <0(22), j_47(19)>
  # DEBUG j => j_79
  j_47 = j_79 + 1;
  # DEBUG j => j_47
  # DEBUG j => j_47
  if (_26 > j_47)
    goto <bb 18>;
  else
    goto <bb 24>;

  <bb 24>:
  i_50 = i_71 + 1;
  # DEBUG i => i_50
  # DEBUG i => i_50
  _42 = _19->i_ref[0];
  if (_42 > i_50)
    goto <bb 25>;
  else
    goto <bb 14>;

  <bb 25>:
  goto <bb 16>;

  <bb 26>:
  if (_34 == 0)
    goto <bb 27>;
  else
    goto <bb 14>;

  <bb 27>:
  _51 = &h_12(D)->mb.cache.skip;
  # DEBUG __dest => _51
  # DEBUG __ch => 0
  # DEBUG __len => 48
  __builtin_memset (_51, 0, 48);

  <bb 28>:
  # DEBUG i => 0
  if (_26 > 0)
    goto <bb 30>;
  else
    goto <bb 29>;

  <bb 29>:
  # DEBUG h => NULL
  # DEBUG delta => NULL
  # DEBUG i => NULL
  return;

  <bb 30>:
  pretmp_55 = _13->i_poc;

  <bb 31>:
  # i_88 = PHI <0(30), i_62(33)>
  # DEBUG i => i_88
  _56 = h_12(D)->fref0[i_88];
  _57 = _56->i_poc;
  delta_58 = pretmp_55 - _57;
  # DEBUG delta => delta_58
  _59 = delta_58 / 2;
  _60 = _59 + 256;
  _61 = _60 / delta_58;
  _13->inv_ref_poc[i_88] = _61;
  i_62 = i_88 + 1;
  # DEBUG i => i_62
  # DEBUG i => i_62
  if (_26 > i_62)
    goto <bb 33>;
  else
    goto <bb 32>;

  <bb 32>:
  goto <bb 29>;

  <bb 33>:
  goto <bb 31>;

}



;; Function x264_macroblock_cache_load (x264_macroblock_cache_load, funcdef_no=136, decl_uid=5540, cgraph_uid=136, symbol_order=179)


Analyzing loop at common/macroblock.c:1146
common/macroblock.c:1146:9: note: ===== analyze_loop_nest =====
common/macroblock.c:1146:9: note: === vect_analyze_loop_form ===
common/macroblock.c:1146:9: note: not vectorized: control flow in loop.
common/macroblock.c:1146:9: note: bad loop form.

Analyzing loop at common/macroblock.c:1132
common/macroblock.c:1132:9: note: ===== analyze_loop_nest =====
common/macroblock.c:1132:9: note: === vect_analyze_loop_form ===
common/macroblock.c:1132:9: note: === get_loop_niters ===
Analyzing # of iterations of loop 2
  exit condition [1, + , 1](no_overflow) < _29
  bounds on difference of bases: 0 ... 2147483646
  result:
    # of iterations (unsigned int) _29 + 4294967295, bounded by 2147483646
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:49, generic-match.c:3223
common/macroblock.c:1132:9: note: Symbolic number of iterations is (unsigned int) _29
common/macroblock.c:1132:9: note: === vect_analyze_data_refs ===
Creating dr for h_39(D)->fref1[i_110]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: h_39(D)
	offset from base address: 0
	constant offset from base address: 9392
	step: 8
	aligned to: 128
	base_object: *h_39(D)
	Access function 0: {0, +, 1}_2
	Access function 1: 75136
Creating dr for _275->integral
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_275
	Access function 0: 1472
Creating dr for h_39(D)->mb.pic.p_integral[1][i_110]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:494, generic-match.c:3721
success.
	base_address: h_39(D)
	offset from base address: 0
	constant offset from base address: 18856
	step: 8
	aligned to: 128
	base_object: *h_39(D)
	Access function 0: {0, +, 1}_2
	Access function 1: 1
	Access function 2: 55104
	Access function 3: 7680
	Access function 4: 87040
common/macroblock.c:1132:9: note: got vectype for stmt: _275 = h_39(D)->fref1[i_110];
vector(2) long unsigned int
Creating dr for _275->integral
analyze_innermost: success.
	base_address: _275
	offset from base address: 0
	constant offset from base address: 184
	step: 0
	aligned to: 128
	base_object: _275->integral
common/macroblock.c:1132:9: note: got vectype for stmt: _276 = _275->integral;
vector(2) long unsigned int
common/macroblock.c:1132:9: note: not vectorized: not suitable for gather load _276 = _275->integral;

common/macroblock.c:1132:9: note: bad data references.

Analyzing loop at common/macroblock.c:1130
common/macroblock.c:1130:9: note: ===== analyze_loop_nest =====
common/macroblock.c:1130:9: note: === vect_analyze_loop_form ===
common/macroblock.c:1130:9: note: === get_loop_niters ===
Analyzing # of iterations of loop 1
  exit condition [1, + , 1](no_overflow) < _822
  bounds on difference of bases: 0 ... 2147483646
  result:
    # of iterations (unsigned int) _822 + 4294967295, bounded by 2147483646
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:49, generic-match.c:3223
common/macroblock.c:1130:9: note: Symbolic number of iterations is (unsigned int) _822
common/macroblock.c:1130:9: note: === vect_analyze_data_refs ===
Creating dr for h_39(D)->fref0[i_818]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: h_39(D)
	offset from base address: 0
	constant offset from base address: 9232
	step: 8
	aligned to: 128
	base_object: *h_39(D)
	Access function 0: {0, +, 1}_1
	Access function 1: 73856
Creating dr for _263->integral
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_263
	Access function 0: 1472
Creating dr for h_39(D)->mb.pic.p_integral[0][i_818]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:494, generic-match.c:3721
success.
	base_address: h_39(D)
	offset from base address: 0
	constant offset from base address: 18728
	step: 8
	aligned to: 128
	base_object: *h_39(D)
	Access function 0: {0, +, 1}_1
	Access function 1: 0
	Access function 2: 55104
	Access function 3: 7680
	Access function 4: 87040
common/macroblock.c:1130:9: note: got vectype for stmt: _263 = h_39(D)->fref0[i_818];
vector(2) long unsigned int
Creating dr for _263->integral
analyze_innermost: success.
	base_address: _263
	offset from base address: 0
	constant offset from base address: 184
	step: 0
	aligned to: 128
	base_object: _263->integral
common/macroblock.c:1130:9: note: got vectype for stmt: _264 = _263->integral;
vector(2) long unsigned int
common/macroblock.c:1130:9: note: not vectorized: not suitable for gather load _264 = _263->integral;

common/macroblock.c:1130:9: note: bad data references.

Analyzing loop at common/macroblock.c:963
common/macroblock.c:963:9: note: ===== analyze_loop_nest =====
common/macroblock.c:963:9: note: === vect_analyze_loop_form ===
common/macroblock.c:963:9: note: === get_loop_niters ===
Analyzing # of iterations of loop 6
  exit condition [1, + , 1](no_overflow) < _907
  bounds on difference of bases: 0 ... 2147483646
  result:
    # of iterations (unsigned int) _907 + 4294967295, bounded by 2147483646
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:49, generic-match.c:3223
common/macroblock.c:963:9: note: Symbolic number of iterations is (unsigned int) _907
common/macroblock.c:963:9: note: === vect_analyze_data_refs ===
Creating dr for *_588
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_588
Creating dr for _589->plane[2]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_589
	Access function 0: 2
	Access function 1: 768
Creating dr for ref_pix_offset[_591]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
failed: evolution of offset is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: ref_pix_offset
	Access function 0: scev_not_known;
Creating dr for h_39(D)->mb.pic.p_fref[1][j_596][5]
analyze_innermost: Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:494, generic-match.c:3721
success.
	base_address: h_39(D)
	offset from base address: 0
	constant offset from base address: 17232
	step: 48
	aligned to: 128
	base_object: *h_39(D)
	Access function 0: 5
	Access function 1: {0, +, 1}_6
	Access function 2: 1
	Access function 3: 30528
	Access function 4: 7680
	Access function 5: 87040
Creating dr for *_588
analyze_innermost: success.
	base_address: _882 + (long unsigned int) _585 * 8
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 128
	base_object: *_588
common/macroblock.c:963:9: note: got vectype for stmt: _589 = *_588;
vector(2) long unsigned int
Applying pattern match.pd:49, generic-match.c:3223
common/macroblock.c:963:9: note: not vectorized: not suitable for gather load _589 = *_588;

common/macroblock.c:963:9: note: bad data references.

Analyzing loop at common/macroblock.c:955
common/macroblock.c:955:5: note: ===== analyze_loop_nest =====
common/macroblock.c:955:5: note: === vect_analyze_loop_form ===
common/macroblock.c:955:5: note: === get_loop_niters ===
Analyzing # of iterations of loop 8
  exit condition [1, + , 1](no_overflow) < _822
  bounds on difference of bases: 0 ... 2147483646
  result:
    # of iterations (unsigned int) _822 + 4294967295, bounded by 2147483646
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:49, generic-match.c:3223
common/macroblock.c:955:5: note: Symbolic number of iterations is (unsigned int) _822
common/macroblock.c:955:5: note: === vect_analyze_data_refs ===
Creating dr for *_567
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_567
Creating dr for _568->plane[2]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_568
	Access function 0: 2
	Access function 1: 768
Creating dr for ref_pix_offset[_570]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
failed: evolution of offset is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: ref_pix_offset
	Access function 0: scev_not_known;
Creating dr for h_39(D)->mb.pic.p_fref[0][j_692][5]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:494, generic-match.c:3721
success.
	base_address: h_39(D)
	offset from base address: 0
	constant offset from base address: 15696
	step: 48
	aligned to: 128
	base_object: *h_39(D)
	Access function 0: 5
	Access function 1: {0, +, 1}_8
	Access function 2: 0
	Access function 3: 30528
	Access function 4: 7680
	Access function 5: 87040
Creating dr for *_567
analyze_innermost: success.
	base_address: _883 + (long unsigned int) _564 * 8
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 128
	base_object: *_567
common/macroblock.c:955:5: note: got vectype for stmt: _568 = *_567;
vector(2) long unsigned int
Applying pattern match.pd:49, generic-match.c:3223
common/macroblock.c:955:5: note: not vectorized: not suitable for gather load _568 = *_567;

common/macroblock.c:955:5: note: bad data references.

Analyzing loop at common/macroblock.c:952
common/macroblock.c:952:9: note: ===== analyze_loop_nest =====
common/macroblock.c:952:9: note: === vect_analyze_loop_form ===
common/macroblock.c:952:9: note: === get_loop_niters ===
Analyzing # of iterations of loop 10
  exit condition [7, + , 4294967295] != 0
  bounds on difference of bases: -7 ... -7
  result:
    # of iterations 7, bounded by 7
common/macroblock.c:952:9: note: === vect_analyze_data_refs ===
Creating dr for h_39(D)->mb.pic.p_fdec[2]
analyze_innermost: success.
	base_address: h_39(D)
	offset from base address: 0
	constant offset from base address: 15640
	step: 0
	aligned to: 128
	base_object: *h_39(D)
	Access function 0: 2
	Access function 1: 30272
	Access function 2: 7680
	Access function 3: 87040
Creating dr for *_559
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:724, generic-match.c:1428
Applying pattern match.pd:49, generic-match.c:3223
success.
Applying pattern match.pd:49, generic-match.c:3223
	base_address: (const uint8_t *) _548 + (sizetype) iftmp.26_864
	offset from base address: 0
	constant offset from base address: -1(OVF)
	step: (ssizetype) i_stride2_514
	aligned to: 128
	base_object: *(const uint8_t *) _548 + (sizetype) iftmp.26_864
	Access function 0: {-1B, +, (sizetype) i_stride2_514}_10
Creating dr for *_554
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_554
common/macroblock.c:952:9: note: got vectype for stmt: _549 = h_39(D)->mb.pic.p_fdec[2];
vector(2) long unsigned int
common/macroblock.c:952:9: note: got vectype for stmt: _560 = *_559;
const vector(16) unsigned char
common/macroblock.c:952:9: note: not vectorized: data ref analysis failed *_554 = _560;

common/macroblock.c:952:9: note: bad data references.

Analyzing loop at common/macroblock.c:963
common/macroblock.c:963:9: note: ===== analyze_loop_nest =====
common/macroblock.c:963:9: note: === vect_analyze_loop_form ===
common/macroblock.c:963:9: note: === get_loop_niters ===
Analyzing # of iterations of loop 11
  exit condition [1, + , 1](no_overflow) < _898
  bounds on difference of bases: 0 ... 2147483646
  result:
    # of iterations (unsigned int) _898 + 4294967295, bounded by 2147483646
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:49, generic-match.c:3223
common/macroblock.c:963:9: note: Symbolic number of iterations is (unsigned int) _898
common/macroblock.c:963:9: note: === vect_analyze_data_refs ===
Creating dr for *_683
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_683
Creating dr for _684->plane[1]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_684
	Access function 0: 1
	Access function 1: 768
Creating dr for ref_pix_offset[_686]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
failed: evolution of offset is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: ref_pix_offset
	Access function 0: scev_not_known;
Creating dr for h_39(D)->mb.pic.p_fref[1][j_87][4]
analyze_innermost: Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:494, generic-match.c:3721
success.
	base_address: h_39(D)
	offset from base address: 0
	constant offset from base address: 17224
	step: 48
	aligned to: 128
	base_object: *h_39(D)
	Access function 0: 4
	Access function 1: {0, +, 1}_11
	Access function 2: 1
	Access function 3: 30528
	Access function 4: 7680
	Access function 5: 87040
Creating dr for *_683
analyze_innermost: success.
	base_address: _882 + (long unsigned int) _680 * 8
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 128
	base_object: *_683
common/macroblock.c:963:9: note: got vectype for stmt: _684 = *_683;
vector(2) long unsigned int
Applying pattern match.pd:49, generic-match.c:3223
common/macroblock.c:963:9: note: not vectorized: not suitable for gather load _684 = *_683;

common/macroblock.c:963:9: note: bad data references.

Analyzing loop at common/macroblock.c:955
common/macroblock.c:955:5: note: ===== analyze_loop_nest =====
common/macroblock.c:955:5: note: === vect_analyze_loop_form ===
common/macroblock.c:955:5: note: === get_loop_niters ===
Analyzing # of iterations of loop 13
  exit condition [1, + , 1](no_overflow) < _821
  bounds on difference of bases: 0 ... 2147483646
  result:
    # of iterations (unsigned int) _821 + 4294967295, bounded by 2147483646
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:49, generic-match.c:3223
common/macroblock.c:955:5: note: Symbolic number of iterations is (unsigned int) _821
common/macroblock.c:955:5: note: === vect_analyze_data_refs ===
Creating dr for *_663
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_663
Creating dr for _664->plane[1]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_664
	Access function 0: 1
	Access function 1: 768
Creating dr for ref_pix_offset[_666]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
failed: evolution of offset is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: ref_pix_offset
	Access function 0: scev_not_known;
Creating dr for h_39(D)->mb.pic.p_fref[0][j_671][4]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:494, generic-match.c:3721
success.
	base_address: h_39(D)
	offset from base address: 0
	constant offset from base address: 15688
	step: 48
	aligned to: 128
	base_object: *h_39(D)
	Access function 0: 4
	Access function 1: {0, +, 1}_13
	Access function 2: 0
	Access function 3: 30528
	Access function 4: 7680
	Access function 5: 87040
Creating dr for *_663
analyze_innermost: success.
	base_address: _883 + (long unsigned int) _660 * 8
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 128
	base_object: *_663
common/macroblock.c:955:5: note: got vectype for stmt: _664 = *_663;
vector(2) long unsigned int
Applying pattern match.pd:49, generic-match.c:3223
common/macroblock.c:955:5: note: not vectorized: not suitable for gather load _664 = *_663;

common/macroblock.c:955:5: note: bad data references.

Analyzing loop at common/macroblock.c:952
common/macroblock.c:952:9: note: ===== analyze_loop_nest =====
common/macroblock.c:952:9: note: === vect_analyze_loop_form ===
common/macroblock.c:952:9: note: === get_loop_niters ===
Analyzing # of iterations of loop 15
  exit condition [7, + , 4294967295] != 0
  bounds on difference of bases: -7 ... -7
  result:
    # of iterations 7, bounded by 7
common/macroblock.c:952:9: note: === vect_analyze_data_refs ===
Creating dr for h_39(D)->mb.pic.p_fdec[1]
analyze_innermost: success.
	base_address: h_39(D)
	offset from base address: 0
	constant offset from base address: 15632
	step: 0
	aligned to: 128
	base_object: *h_39(D)
	Access function 0: 1
	Access function 1: 30272
	Access function 2: 7680
	Access function 3: 87040
Creating dr for *_655
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:724, generic-match.c:1428
Applying pattern match.pd:49, generic-match.c:3223
success.
Applying pattern match.pd:49, generic-match.c:3223
	base_address: (const uint8_t *) _644 + (sizetype) iftmp.26_874
	offset from base address: 0
	constant offset from base address: -1(OVF)
	step: (ssizetype) i_stride2_607
	aligned to: 128
	base_object: *(const uint8_t *) _644 + (sizetype) iftmp.26_874
	Access function 0: {-1B, +, (sizetype) i_stride2_607}_15
Creating dr for *_650
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_650
common/macroblock.c:952:9: note: got vectype for stmt: _645 = h_39(D)->mb.pic.p_fdec[1];
vector(2) long unsigned int
common/macroblock.c:952:9: note: got vectype for stmt: _656 = *_655;
const vector(16) unsigned char
common/macroblock.c:952:9: note: not vectorized: data ref analysis failed *_650 = _656;

common/macroblock.c:952:9: note: bad data references.

Analyzing loop at common/macroblock.c:963
common/macroblock.c:963:9: note: ===== analyze_loop_nest =====
common/macroblock.c:963:9: note: === vect_analyze_loop_form ===
common/macroblock.c:963:9: note: ===== analyze_loop_nest_1 =====
common/macroblock.c:963:9: note: === vect_analyze_loop_form ===
common/macroblock.c:963:9: note: === get_loop_niters ===
Analyzing # of iterations of loop 17
  exit condition [2, + , 4294967295] != 0
  bounds on difference of bases: -2 ... -2
  result:
    # of iterations 2, bounded by 2
common/macroblock.c:963:9: note: Considering outer-loop vectorization.
common/macroblock.c:963:9: note: === get_loop_niters ===
Analyzing # of iterations of loop 16
  exit condition [1, + , 1](no_overflow) < _914
  bounds on difference of bases: 0 ... 2147483646
  result:
    # of iterations (unsigned int) _914 + 4294967295, bounded by 2147483646
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:49, generic-match.c:3223
common/macroblock.c:963:9: note: Symbolic number of iterations is (unsigned int) _914
common/macroblock.c:963:9: note: === vect_analyze_data_refs ===
Creating dr for *_782
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_782
Creating dr for _783->plane[0]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_783
	Access function 0: 0
	Access function 1: 768
Creating dr for ref_pix_offset[_785]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
failed: evolution of offset is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: ref_pix_offset
	Access function 0: scev_not_known;
Creating dr for h_39(D)->mb.pic.p_fref[1][j_738][0]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:494, generic-match.c:3721
success.
	base_address: h_39(D)
	offset from base address: 0
	constant offset from base address: 17192
	step: 48
	aligned to: 128
	base_object: *h_39(D)
	Access function 0: 0
	Access function 1: {0, +, 1}_16
	Access function 2: 1
	Access function 3: 30528
	Access function 4: 7680
	Access function 5: 87040
Creating dr for *_782
analyze_innermost: success.
	base_address: _882 + (long unsigned int) _779 * 8
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 128
	base_object: *_782
Creating dr for _789->filtered[k_854]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_789
	Access function 0: {1, +, 1}_17
	Access function 1: 960
Creating dr for h_39(D)->mb.pic.p_fref[1][j_738][k_854]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: h_39(D)
	offset from base address: (ssizetype) ((sizetype) j_738 * 48)
	constant offset from base address: 17200
	step: 8
	aligned to: 16
	base_object: *h_39(D)
	Access function 0: {1, +, 1}_17
	Access function 1: {0, +, 1}_16
	Access function 2: 1
	Access function 3: 30528
	Access function 4: 7680
	Access function 5: 87040
Creating dr for *_782
analyze_innermost: success.
	base_address: _882 + (long unsigned int) _779 * 8
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 128
	base_object: *_782
common/macroblock.c:963:9: note: got vectype for stmt: _783 = *_782;
vector(2) long unsigned int
Applying pattern match.pd:49, generic-match.c:3223
common/macroblock.c:963:9: note: not vectorized: not suitable for gather load _783 = *_782;

common/macroblock.c:963:9: note: bad data references.

Analyzing loop at common/macroblock.c:967
common/macroblock.c:967:17: note: ===== analyze_loop_nest =====
common/macroblock.c:967:17: note: === vect_analyze_loop_form ===
common/macroblock.c:967:17: note: === get_loop_niters ===
common/macroblock.c:967:17: note: === vect_analyze_data_refs ===
Creating dr for *_782
analyze_innermost: success.
	base_address: _882 + (long unsigned int) _779 * 8
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 128
	base_object: *_782
Creating dr for _789->filtered[k_854]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_789
	Access function 0: {1, +, 1}_17
	Access function 1: 960
Creating dr for h_39(D)->mb.pic.p_fref[1][j_738][k_854]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: h_39(D)
	offset from base address: (ssizetype) ((sizetype) j_738 * 48)
	constant offset from base address: 17200
	step: 8
	aligned to: 16
	base_object: *h_39(D)
	Access function 0: {1, +, 1}_17
	Access function 1: j_738
	Access function 2: 1
	Access function 3: 30528
	Access function 4: 7680
	Access function 5: 87040
common/macroblock.c:967:17: note: got vectype for stmt: _789 = *_782;
vector(2) long unsigned int
Creating dr for _789->filtered[k_854]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: _789
	offset from base address: 0
	constant offset from base address: 128
	step: 8
	aligned to: 128
	base_object: _789->filtered[k_854]
common/macroblock.c:967:17: note: not vectorized: data ref analysis failed _791 = _789->filtered[k_854];

common/macroblock.c:967:17: note: bad data references.

Analyzing loop at common/macroblock.c:955
common/macroblock.c:955:5: note: ===== analyze_loop_nest =====
common/macroblock.c:955:5: note: === vect_analyze_loop_form ===
common/macroblock.c:955:5: note: ===== analyze_loop_nest_1 =====
common/macroblock.c:955:5: note: === vect_analyze_loop_form ===
common/macroblock.c:955:5: note: === get_loop_niters ===
Analyzing # of iterations of loop 19
  exit condition [2, + , 4294967295] != 0
  bounds on difference of bases: -2 ... -2
  result:
    # of iterations 2, bounded by 2
common/macroblock.c:955:5: note: Considering outer-loop vectorization.
common/macroblock.c:955:5: note: === get_loop_niters ===
Analyzing # of iterations of loop 18
  exit condition [1, + , 1](no_overflow) < _91
  bounds on difference of bases: 0 ... 2147483646
  result:
    # of iterations (unsigned int) _91 + 4294967295, bounded by 2147483646
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:49, generic-match.c:3223
common/macroblock.c:955:5: note: Symbolic number of iterations is (unsigned int) _91
common/macroblock.c:955:5: note: === vect_analyze_data_refs ===
Creating dr for *_761
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_761
Creating dr for _762->plane[0]
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_762
	Access function 0: 0
	Access function 1: 768
Creating dr for ref_pix_offset[_764]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
failed: evolution of offset is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: ref_pix_offset
	Access function 0: scev_not_known;
Creating dr for h_39(D)->mb.pic.p_fref[0][j_233][0]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:494, generic-match.c:3721
success.
	base_address: h_39(D)
	offset from base address: 0
	constant offset from base address: 15656
	step: 48
	aligned to: 128
	base_object: *h_39(D)
	Access function 0: 0
	Access function 1: {0, +, 1}_18
	Access function 2: 0
	Access function 3: 30528
	Access function 4: 7680
	Access function 5: 87040
Creating dr for *_761
analyze_innermost: success.
	base_address: _883 + (long unsigned int) _758 * 8
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 128
	base_object: *_761
Creating dr for _768->filtered[k_870]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_768
	Access function 0: {1, +, 1}_19
	Access function 1: 960
Creating dr for h_39(D)->mb.pic.p_fref[0][j_233][k_870]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: h_39(D)
	offset from base address: (ssizetype) ((sizetype) j_233 * 48)
	constant offset from base address: 15664
	step: 8
	aligned to: 16
	base_object: *h_39(D)
	Access function 0: {1, +, 1}_19
	Access function 1: {0, +, 1}_18
	Access function 2: 0
	Access function 3: 30528
	Access function 4: 7680
	Access function 5: 87040
Creating dr for *_761
analyze_innermost: success.
	base_address: _883 + (long unsigned int) _758 * 8
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 128
	base_object: *_761
common/macroblock.c:955:5: note: got vectype for stmt: _762 = *_761;
vector(2) long unsigned int
Applying pattern match.pd:49, generic-match.c:3223
common/macroblock.c:955:5: note: not vectorized: not suitable for gather load _762 = *_761;

common/macroblock.c:955:5: note: bad data references.

Analyzing loop at common/macroblock.c:959
common/macroblock.c:959:13: note: ===== analyze_loop_nest =====
common/macroblock.c:959:13: note: === vect_analyze_loop_form ===
common/macroblock.c:959:13: note: === get_loop_niters ===
common/macroblock.c:959:13: note: === vect_analyze_data_refs ===
Creating dr for *_761
analyze_innermost: success.
	base_address: _883 + (long unsigned int) _758 * 8
	offset from base address: 0
	constant offset from base address: 0
	step: 0
	aligned to: 128
	base_object: *_761
Creating dr for _768->filtered[k_870]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_768
	Access function 0: {1, +, 1}_19
	Access function 1: 960
Creating dr for h_39(D)->mb.pic.p_fref[0][j_233][k_870]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: h_39(D)
	offset from base address: (ssizetype) ((sizetype) j_233 * 48)
	constant offset from base address: 15664
	step: 8
	aligned to: 16
	base_object: *h_39(D)
	Access function 0: {1, +, 1}_19
	Access function 1: j_233
	Access function 2: 0
	Access function 3: 30528
	Access function 4: 7680
	Access function 5: 87040
common/macroblock.c:959:13: note: got vectype for stmt: _768 = *_761;
vector(2) long unsigned int
Creating dr for _768->filtered[k_870]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: _768
	offset from base address: 0
	constant offset from base address: 128
	step: 8
	aligned to: 128
	base_object: _768->filtered[k_870]
common/macroblock.c:959:13: note: not vectorized: data ref analysis failed _770 = _768->filtered[k_870];

common/macroblock.c:959:13: note: bad data references.

Analyzing loop at common/macroblock.c:952
common/macroblock.c:952:9: note: ===== analyze_loop_nest =====
common/macroblock.c:952:9: note: === vect_analyze_loop_form ===
common/macroblock.c:952:9: note: === get_loop_niters ===
Analyzing # of iterations of loop 20
  exit condition [15, + , 4294967295] != 0
  bounds on difference of bases: -15 ... -15
  result:
    # of iterations 15, bounded by 15
common/macroblock.c:952:9: note: === vect_analyze_data_refs ===
Creating dr for h_39(D)->mb.pic.p_fdec[0]
analyze_innermost: success.
	base_address: h_39(D)
	offset from base address: 0
	constant offset from base address: 15624
	step: 0
	aligned to: 128
	base_object: *h_39(D)
	Access function 0: 0
	Access function 1: 30272
	Access function 2: 7680
	Access function 3: 87040
Creating dr for *_752
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:724, generic-match.c:1428
Applying pattern match.pd:49, generic-match.c:3223
success.
Applying pattern match.pd:49, generic-match.c:3223
	base_address: (const uint8_t *) _741 + (sizetype) iftmp.26_873
	offset from base address: 0
	constant offset from base address: -1(OVF)
	step: (ssizetype) i_stride2_695
	aligned to: 128
	base_object: *(const uint8_t *) _741 + (sizetype) iftmp.26_873
	Access function 0: {-1B, +, (sizetype) i_stride2_695}_20
Creating dr for *_747
analyze_innermost: failed: evolution of base is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *_747
common/macroblock.c:952:9: note: got vectype for stmt: _742 = h_39(D)->mb.pic.p_fdec[0];
vector(2) long unsigned int
common/macroblock.c:952:9: note: got vectype for stmt: _753 = *_752;
const vector(16) unsigned char
common/macroblock.c:952:9: note: not vectorized: data ref analysis failed *_747 = _753;

common/macroblock.c:952:9: note: bad data references.
common/macroblock.c:972:6: note: vectorized 0 loops in function.
x264_macroblock_cache_load (struct x264_t * h, int i_mb_x, int i_mb_y)
{
  const int i_stride;
  const int i_stride2;
  int ref_pix_offset[2];
  int j;
  int k;
  const int i_stride;
  const int i_stride2;
  int ref_pix_offset[2];
  int j;
  const int i_stride;
  const int i_stride2;
  int ref_pix_offset[2];
  int j;
  const int iv;
  const int iv;
  const int ir;
  const int iv;
  const int ir;
  const int iv;
  const int ir;
  int i_list;
  const int s4x4;
  const int s8x8;
  static const char __PRETTY_FUNCTION__[27] = "x264_macroblock_cache_load";
  int i;
  int i_left_type;
  int i_top_type;
  int i_left_xy;
  int i_top_8x8;
  int i_top_4x4;
  int i_top_xy;
  int i_top_y;
  int i_mb_8x8;
  int i_mb_4x4;
  int i_mb_xy;
  uint8_t * _6;
  int iftmp.16_9;
  int iftmp.17_10;
  int iftmp.18_11;
  unsigned int iftmp.22_13;
  unsigned int iftmp.23_14;
  unsigned int iftmp.24_15;
  int _29;
  int _40;
  int _42;
  int _45;
  int _46;
  int _47;
  int _49;
  int _50;
  int _51;
  int _53;
  int _54;
  int _56;
  int _58;
  int _59;
  int _61;
  int _62;
  int _64;
  int _65;
  int _66;
  int _67;
  int _70;
  int _72;
  int _80;
  int8_t * _81;
  sizetype _82;
  int8_t * _83;
  signed char _84;
  int8_t[8] * _90;
  int _91;
  long unsigned int _92;
  int8_t[8] * _93;
  unsigned int _94;
  uint8_t[24] * _96;
  long unsigned int _97;
  uint8_t[24] * _98;
  unsigned int _99;
  short unsigned int _104;
  int _105;
  int _106;
  unsigned int _107;
  short unsigned int _111;
  int _112;
  int _113;
  unsigned int _114;
  int _129;
  int8_t * _131;
  sizetype _132;
  int8_t * _133;
  signed char _134;
  unsigned int _137;
  unsigned int _138;
  int8_t[8] * _140;
  long unsigned int _141;
  int8_t[8] * _142;
  signed char _143;
  signed char _145;
  signed char _147;
  signed char _149;
  uint8_t[24] * _151;
  long unsigned int _152;
  uint8_t[24] * _153;
  unsigned char _154;
  unsigned char _156;
  unsigned char _158;
  unsigned char _160;
  unsigned char _162;
  unsigned char _164;
  unsigned char _166;
  unsigned char _168;
  struct x264_sps_t * _183;
  int _184;
  int _185;
  int _186;
  int _187;
  unsigned int _188;
  unsigned int _189;
  int8_t * _191;
  sizetype _192;
  sizetype _193;
  int8_t * _194;
  signed char _195;
  int _196;
  int _199;
  unsigned int _200;
  unsigned int _201;
  int8_t * _203;
  sizetype _204;
  sizetype _205;
  int8_t * _206;
  signed char _207;
  int _208;
  struct x264_pps_t * _211;
  int _212;
  int8_t * _213;
  sizetype _214;
  int8_t * _215;
  signed char _216;
  int8_t * _217;
  sizetype _218;
  int8_t * _219;
  signed char _220;
  int _221;
  int _223;
  int _224;
  int _225;
  int _226;
  int _228;
  int _229;
  unsigned int _231;
  unsigned int _232;
  int _234;
  unsigned int _235;
  _Bool _236;
  int _237;
  int _238;
  uint8_t * _241;
  uint8_t * _242;
  uint8_t * _243;
  uint8_t * _245;
  uint8_t * _246;
  uint8_t * _247;
  uint8_t * _249;
  uint8_t * _250;
  uint8_t * _251;
  uint8_t * _253;
  uint8_t * _254;
  uint8_t * _255;
  struct x264_frame_t * _258;
  struct x264_frame_t * _259;
  struct x264_frame_t * _260;
  uint16_t * _261;
  int _262;
  struct x264_frame_t * _263;
  uint16_t * _264;
  uint16_t * _271;
  struct x264_frame_t * _275;
  uint16_t * _276;
  uint16_t * _283;
  struct x264_frame_t * _287;
  int _289;
  unsigned int _293;
  unsigned int _294;
  int8_t * _297;
  sizetype _298;
  int8_t * _299;
  signed char _300;
  int16_t[2] * _302;
  int16_t[2] * _303;
  long unsigned int _304;
  long unsigned int _305;
  uint32_t * _306;
  unsigned int _307;
  int16_t[2] * _310;
  unsigned int _312;
  unsigned int _313;
  int8_t * _314;
  sizetype _315;
  int8_t * _316;
  signed char _317;
  sizetype _320;
  int8_t * _321;
  signed char _322;
  int16_t[2] * _325;
  int16_t[2] * _326;
  long unsigned int _327;
  long unsigned int _328;
  uint64_t * _329;
  long unsigned int _330;
  int16_t[2] * _332;
  sizetype _333;
  sizetype _334;
  int16_t[2] * _335;
  long unsigned int _336;
  int16_t[2] * _338;
  int16_t[2] * _340;
  int8_t * _342;
  unsigned int _345;
  int8_t * _348;
  sizetype _349;
  int8_t * _350;
  signed char _351;
  int16_t[2] * _353;
  int16_t[2] * _354;
  long unsigned int _355;
  long unsigned int _356;
  uint32_t * _357;
  unsigned int _358;
  int16_t[2] * _361;
  unsigned int _363;
  unsigned int _364;
  int8_t * _367;
  sizetype _368;
  int8_t * _369;
  signed char _370;
  int _373;
  sizetype _374;
  int8_t * _375;
  signed char _376;
  int16_t[2] * _379;
  int16_t[2] * _380;
  long unsigned int _381;
  long unsigned int _382;
  uint32_t * _383;
  unsigned int _384;
  int16_t[2] * _386;
  int _387;
  long unsigned int _388;
  long unsigned int _389;
  uint32_t * _390;
  unsigned int _391;
  int16_t[2] * _393;
  int _394;
  int _395;
  long unsigned int _396;
  long unsigned int _397;
  uint32_t * _398;
  unsigned int _399;
  int16_t[2] * _401;
  int _402;
  int _403;
  long unsigned int _404;
  long unsigned int _405;
  uint32_t * _406;
  unsigned int _407;
  int _410;
  int _411;
  unsigned int cstore_414;
  int _415;
  int16_t[2] * _416;
  int16_t[2] * _417;
  long unsigned int _418;
  long unsigned int _419;
  uint64_t * _420;
  long unsigned int _421;
  int16_t[2] * _423;
  sizetype _424;
  sizetype _425;
  int16_t[2] * _426;
  long unsigned int _427;
  int16_t[2] * _429;
  int16_t[2] * _430;
  int16_t[2] * _434;
  int16_t[2] * _435;
  long unsigned int _436;
  long unsigned int _437;
  uint32_t * _438;
  unsigned int _439;
  int16_t[2] * _441;
  int _442;
  long unsigned int _443;
  long unsigned int _444;
  uint32_t * _445;
  unsigned int _446;
  int16_t[2] * _448;
  int _449;
  int _450;
  long unsigned int _451;
  long unsigned int _452;
  uint32_t * _453;
  unsigned int _454;
  int16_t[2] * _456;
  int _457;
  int _458;
  long unsigned int _459;
  long unsigned int _460;
  uint32_t * _461;
  unsigned int _462;
  int _465;
  int _468;
  int _470;
  int8_t[48] * _471;
  int8_t * _473;
  sizetype _474;
  int8_t * _475;
  signed char _476;
  signed char _477;
  signed char _479;
  int8_t * _481;
  sizetype _482;
  int8_t * _483;
  signed char _484;
  signed char _485;
  signed char _487;
  int16_t[2] * _489;
  unsigned int _491;
  unsigned int _492;
  unsigned int _493;
  unsigned int _499;
  unsigned int _504;
  unsigned int _506;
  struct x264_frame_t * _511;
  int _515;
  int _516;
  int _517;
  int _519;
  int _520;
  int _521;
  int iftmp.26_522;
  int _523;
  int _524;
  int iftmp.26_525;
  int _531;
  int _532;
  int _533;
  int _534;
  struct x264_frame_t * _535;
  uint8_t * _536;
  sizetype _537;
  uint8_t * _538;
  void (*<Tf94>) (uint8_t *, int, uint8_t *, int, int) _540;
  uint8_t * _541;
  const uint8_t * _542;
  uint8_t * _543;
  uint8_t * _544;
  int _546;
  struct x264_frame_t * _547;
  uint8_t * _548;
  uint8_t * _549;
  int _551;
  int _552;
  sizetype _553;
  uint8_t * _554;
  int _555;
  int _556;
  sizetype _557;
  sizetype _558;
  const uint8_t * _559;
  unsigned char _560;
  int _564;
  long unsigned int _565;
  long unsigned int _566;
  struct x264_frame_t * * _567;
  struct x264_frame_t * _568;
  uint8_t * _569;
  int _570;
  int _571;
  sizetype _572;
  uint8_t * _573;
  int _582;
  int _585;
  long unsigned int _586;
  long unsigned int _587;
  struct x264_frame_t * * _588;
  struct x264_frame_t * _589;
  uint8_t * _590;
  int _591;
  int _592;
  sizetype _593;
  uint8_t * _594;
  int _608;
  int _609;
  int _610;
  int _612;
  int _613;
  int _614;
  int iftmp.26_615;
  int _616;
  int _617;
  int iftmp.26_618;
  int _626;
  int _627;
  int _628;
  int _629;
  struct x264_frame_t * _630;
  uint8_t * _631;
  sizetype _632;
  uint8_t * _633;
  void (*<Tf94>) (uint8_t *, int, uint8_t *, int, int) _635;
  uint8_t * _636;
  sizetype _637;
  const uint8_t * _638;
  uint8_t * _639;
  uint8_t * _640;
  int _642;
  struct x264_frame_t * _643;
  uint8_t * _644;
  uint8_t * _645;
  int _647;
  int _648;
  sizetype _649;
  uint8_t * _650;
  int _651;
  int _652;
  sizetype _653;
  sizetype _654;
  const uint8_t * _655;
  unsigned char _656;
  int _660;
  long unsigned int _661;
  long unsigned int _662;
  struct x264_frame_t * * _663;
  struct x264_frame_t * _664;
  uint8_t * _665;
  int _666;
  int _667;
  sizetype _668;
  uint8_t * _669;
  int _677;
  struct x264_frame_t * _679;
  int _680;
  long unsigned int _681;
  long unsigned int _682;
  struct x264_frame_t * * _683;
  struct x264_frame_t * _684;
  uint8_t * _685;
  int _686;
  int _687;
  sizetype _688;
  uint8_t * _689;
  int prephitmp_699;
  int _701;
  int _703;
  int _704;
  int _705;
  int _707;
  int _708;
  int _709;
  int iftmp.26_710;
  int _711;
  int _712;
  int iftmp.26_713;
  int _723;
  int _724;
  int _725;
  int _726;
  struct x264_frame_t * _727;
  uint8_t * _728;
  sizetype _729;
  uint8_t * _730;
  void (*<Tf94>) (uint8_t *, int, uint8_t *, int, int) _732;
  uint8_t * _733;
  sizetype _734;
  const uint8_t * _735;
  uint8_t * _736;
  uint8_t * _737;
  int _739;
  struct x264_frame_t * _740;
  uint8_t * _741;
  uint8_t * _742;
  int _744;
  int _745;
  sizetype _746;
  uint8_t * _747;
  int _748;
  int _749;
  sizetype _750;
  sizetype _751;
  const uint8_t * _752;
  unsigned char _753;
  int _758;
  long unsigned int _759;
  long unsigned int _760;
  struct x264_frame_t * * _761;
  struct x264_frame_t * _762;
  uint8_t * _763;
  int _764;
  int _765;
  sizetype _766;
  uint8_t * _767;
  struct x264_frame_t * _768;
  uint8_t * _770;
  uint8_t * _771;
  int _775;
  int _779;
  long unsigned int _780;
  long unsigned int _781;
  struct x264_frame_t * * _782;
  struct x264_frame_t * _783;
  uint8_t * _784;
  int _785;
  int _786;
  sizetype _787;
  uint8_t * _788;
  struct x264_frame_t * _789;
  uint8_t * _791;
  uint8_t * _792;
  int _821;
  int _822;
  int16_t[2] * _823;
  int _828;
  int _829;
  int16_t[2] * _830;
  uint8_t * _832;
  int _833;
  int _835;
  sizetype _836;
  int16_t[2] * _837;
  uint8_t * _839;
  int _840;
  int _842;
  int16_t[2] * _844;
  sizetype _847;
  sizetype _850;
  int16_t[2] * _852;
  uint8_t * _857;
  uint8_t * _858;
  int16_t[2] * _860;
  int iftmp.26_864;
  int _866;
  int16_t[2] * _868;
  int iftmp.26_873;
  int iftmp.26_874;
  int16_t[2] * _876;
  struct x264_frame_t *[19] * _882;
  struct x264_frame_t *[19] * _883;
  uint8_t * _884;
  struct x264_frame_t *[19] * _885;
  struct x264_frame_t *[19] * _886;
  sizetype _890;
  int _891;
  int _892;
  struct x264_frame_t *[19] * _895;
  uint8_t * _896;
  int _898;
  struct x264_frame_t *[19] * _899;
  uint8_t * _901;
  int _902;
  unsigned int _903;
  sizetype _905;
  unsigned int _906;
  int _907;
  uint8_t * _908;
  int _909;
  int _914;
  int _920;
  sizetype _921;
  unsigned int ivtmp_975;
  unsigned int ivtmp_976;
  unsigned int ivtmp_977;
  unsigned int ivtmp_978;
  unsigned int ivtmp_979;
  unsigned int ivtmp_980;
  unsigned int ivtmp_981;
  unsigned int ivtmp_982;
  unsigned int ivtmp_983;
  unsigned int ivtmp_984;
  unsigned int _986;
  unsigned int _987;
  unsigned int _988;
  unsigned int _989;
  unsigned int _990;
  unsigned int _991;
  unsigned int _992;
  unsigned int _993;
  unsigned int _994;
  unsigned int _995;
  unsigned int _996;
  unsigned int _997;
  unsigned int _998;
  unsigned int _999;
  unsigned int _1000;
  unsigned int _1001;
  unsigned int _1002;
  unsigned int _1003;
  unsigned int _1004;
  unsigned int _1005;
  unsigned int _1006;
  unsigned int _1007;
  unsigned int _1008;
  unsigned int _1009;
  unsigned int _1010;
  unsigned int _1011;
  unsigned int _1012;
  unsigned int _1013;
  unsigned int _1014;
  unsigned int _1015;
  unsigned int _1016;
  unsigned int _1017;
  unsigned int _1018;
  unsigned int _1019;
  int pretmp_1030;
  int prephitmp_1031;
  int pretmp_1039;
  int prephitmp_1040;
  int pretmp_1048;
  int prephitmp_1049;
  int pretmp_1057;
  int prephitmp_1058;
  unsigned int pretmp_1059;
  unsigned int prephitmp_1060;
  int pretmp_1061;
  int pretmp_1063;
  int pretmp_1064;
  int pretmp_1065;
  long unsigned int pretmp_1066;
  long unsigned int pretmp_1067;
  int pretmp_1069;
  int pretmp_1071;
  int pretmp_1072;
  int pretmp_1073;
  long unsigned int pretmp_1074;
  long unsigned int pretmp_1075;
  int pretmp_1077;
  int pretmp_1084;
  int pretmp_1113;
  int prephitmp_1114;

  <bb 2>:
  _40 = h_39(D)->mb.i_mb_stride;
  _42 = _40 * i_mb_y_41(D);
  i_mb_xy_44 = _42 + i_mb_x_43(D);
  # DEBUG i_mb_xy => i_mb_xy_44
  _45 = h_39(D)->mb.i_b4_stride;
  _46 = i_mb_y_41(D) * _45;
  _47 = i_mb_x_43(D) + _46;
  i_mb_4x4_48 = _47 * 4;
  # DEBUG i_mb_4x4 => i_mb_4x4_48
  _49 = h_39(D)->mb.i_b8_stride;
  _50 = i_mb_y_41(D) * _49;
  _51 = i_mb_x_43(D) + _50;
  i_mb_8x8_52 = _51 * 2;
  # DEBUG i_mb_8x8 => i_mb_8x8_52
  _53 = h_39(D)->mb.b_interlaced;
  _54 = 1 << _53;
  i_top_y_55 = i_mb_y_41(D) - _54;
  # DEBUG i_top_y => i_top_y_55
  _56 = _40 * i_top_y_55;
  i_top_xy_57 = i_mb_x_43(D) + _56;
  # DEBUG i_top_xy => i_top_xy_57
  # DEBUG D#89 => i_top_y_55 * 4
  # DEBUG D#88 => D#89 + 3
  # DEBUG D#87 => _45 * D#88
  # DEBUG D#86 => i_mb_x_43(D) * 4
  # DEBUG D#85 => D#87 + D#86
  # DEBUG i_top_4x4 => D#85
  # DEBUG D#84 => i_top_y_55 * 2
  # DEBUG D#83 => D#84 + 1
  # DEBUG D#82 => _49 * D#83
  # DEBUG D#81 => i_mb_x_43(D) * 2
  # DEBUG D#80 => D#82 + D#81
  # DEBUG i_top_8x8 => D#80
  # DEBUG i_left_xy => -1
  # DEBUG i_top_type => -1
  # DEBUG i_left_type => -1
  _70 = _40 * 2;
  if (_49 != _70)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  __assert_fail ("h->mb.i_b8_stride == 2*h->mb.i_mb_stride", "common/macroblock.c", 987, &__PRETTY_FUNCTION__);

  <bb 4>:
  _72 = _40 * 4;
  if (_45 != _72)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  __assert_fail ("h->mb.i_b4_stride == 4*h->mb.i_mb_stride", "common/macroblock.c", 988, &__PRETTY_FUNCTION__);

  <bb 6>:
  h_39(D)->mb.i_mb_x = i_mb_x_43(D);
  h_39(D)->mb.i_mb_y = i_mb_y_41(D);
  h_39(D)->mb.i_mb_xy = i_mb_xy_44;
  h_39(D)->mb.i_b8_xy = i_mb_8x8_52;
  h_39(D)->mb.i_b4_xy = i_mb_4x4_48;
  h_39(D)->mb.i_mb_top_xy = i_top_xy_57;
  h_39(D)->mb.i_neighbour = 0;
  _80 = h_39(D)->sh.i_first_mb;
  if (i_top_xy_57 >= _80)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  _81 = h_39(D)->mb.type;
  _82 = (sizetype) i_top_xy_57;
  _83 = _81 + _82;
  _84 = *_83;
  i_top_type_85 = (int) _84;
  # DEBUG i_top_type => i_top_type_85
  h_39(D)->mb.i_mb_type_top = i_top_type_85;
  h_39(D)->mb.i_neighbour = 2;
  _90 = h_39(D)->mb.intra4x4_pred_mode;
  _92 = _82 * 8;
  _93 = _90 + _92;
  _94 = MEM[(uint32_t *)_93];
  MEM[(uint32_t *)h_39(D) + 19012B] = _94;
  _96 = h_39(D)->mb.non_zero_count;
  _97 = _82 * 24;
  _98 = _96 + _97;
  _99 = MEM[(uint32_t *)_98 + 12B];
  MEM[(uint32_t *)h_39(D) + 19060B] = _99;
  _104 = MEM[(uint16_t *)_98 + 18B];
  _105 = (int) _104;
  _106 = _105 << 8;
  _107 = (unsigned int) _106;
  MEM[(uint32_t *)h_39(D) + 19056B] = _107;
  _111 = MEM[(uint16_t *)_98 + 22B];
  _112 = (int) _111;
  _113 = _112 << 8;
  _114 = (unsigned int) _113;
  MEM[(uint32_t *)h_39(D) + 19080B] = _114;
  goto <bb 9>;

  <bb 8>:
  h_39(D)->mb.i_mb_type_top = -1;
  h_39(D)->mb.cache.intra4x4_pred_mode[7] = -1;
  h_39(D)->mb.cache.intra4x4_pred_mode[6] = -1;
  h_39(D)->mb.cache.intra4x4_pred_mode[5] = -1;
  h_39(D)->mb.cache.intra4x4_pred_mode[4] = -1;
  h_39(D)->mb.cache.non_zero_count[26] = 128;
  h_39(D)->mb.cache.non_zero_count[25] = 128;
  h_39(D)->mb.cache.non_zero_count[2] = 128;
  h_39(D)->mb.cache.non_zero_count[1] = 128;
  h_39(D)->mb.cache.non_zero_count[7] = 128;
  h_39(D)->mb.cache.non_zero_count[6] = 128;
  h_39(D)->mb.cache.non_zero_count[5] = 128;
  h_39(D)->mb.cache.non_zero_count[4] = 128;

  <bb 9>:
  # i_top_type_2 = PHI <i_top_type_85(7), -1(8)>
  # DEBUG i_top_type => i_top_type_2
  if (i_mb_x_43(D) > 0)
    goto <bb 10>;
  else
    goto <bb 12>;

  <bb 10>:
  _129 = h_39(D)->sh.i_first_mb;
  if (i_mb_xy_44 > _129)
    goto <bb 11>;
  else
    goto <bb 12>;

  <bb 11>:
  i_left_xy_130 = i_mb_xy_44 + -1;
  # DEBUG i_left_xy => i_left_xy_130
  _131 = h_39(D)->mb.type;
  _132 = (sizetype) i_left_xy_130;
  _133 = _131 + _132;
  _134 = *_133;
  i_left_type_135 = (int) _134;
  # DEBUG i_left_type => i_left_type_135
  h_39(D)->mb.i_mb_type_left = i_left_type_135;
  _137 = h_39(D)->mb.i_neighbour;
  _138 = _137 | 1;
  h_39(D)->mb.i_neighbour = _138;
  _140 = h_39(D)->mb.intra4x4_pred_mode;
  _141 = _132 * 8;
  _142 = _140 + _141;
  _143 = *_142[4];
  h_39(D)->mb.cache.intra4x4_pred_mode[11] = _143;
  _145 = *_142[5];
  h_39(D)->mb.cache.intra4x4_pred_mode[19] = _145;
  _147 = *_142[6];
  h_39(D)->mb.cache.intra4x4_pred_mode[27] = _147;
  _149 = *_142[3];
  h_39(D)->mb.cache.intra4x4_pred_mode[35] = _149;
  _151 = h_39(D)->mb.non_zero_count;
  _152 = _132 * 24;
  _153 = _151 + _152;
  _154 = *_153[3];
  h_39(D)->mb.cache.non_zero_count[11] = _154;
  _156 = *_153[7];
  h_39(D)->mb.cache.non_zero_count[19] = _156;
  _158 = *_153[11];
  h_39(D)->mb.cache.non_zero_count[27] = _158;
  _160 = *_153[15];
  h_39(D)->mb.cache.non_zero_count[35] = _160;
  _162 = *_153[17];
  h_39(D)->mb.cache.non_zero_count[8] = _162;
  _164 = *_153[19];
  h_39(D)->mb.cache.non_zero_count[16] = _164;
  _166 = *_153[21];
  h_39(D)->mb.cache.non_zero_count[32] = _166;
  _168 = *_153[23];
  h_39(D)->mb.cache.non_zero_count[40] = _168;
  goto <bb 13>;

  <bb 12>:
  h_39(D)->mb.i_mb_type_left = -1;
  h_39(D)->mb.cache.intra4x4_pred_mode[35] = -1;
  h_39(D)->mb.cache.intra4x4_pred_mode[27] = -1;
  h_39(D)->mb.cache.intra4x4_pred_mode[19] = -1;
  h_39(D)->mb.cache.intra4x4_pred_mode[11] = -1;
  h_39(D)->mb.cache.non_zero_count[40] = 128;
  h_39(D)->mb.cache.non_zero_count[32] = 128;
  h_39(D)->mb.cache.non_zero_count[16] = 128;
  h_39(D)->mb.cache.non_zero_count[8] = 128;
  h_39(D)->mb.cache.non_zero_count[35] = 128;
  h_39(D)->mb.cache.non_zero_count[27] = 128;
  h_39(D)->mb.cache.non_zero_count[19] = 128;
  h_39(D)->mb.cache.non_zero_count[11] = 128;

  <bb 13>:
  # i_left_xy_1 = PHI <i_left_xy_130(11), -1(12)>
  # i_left_type_3 = PHI <i_left_type_135(11), -1(12)>
  # DEBUG i_left_type => i_left_type_3
  # DEBUG i_left_xy => i_left_xy_1
  _183 = h_39(D)->sps;
  _184 = _183->i_mb_width;
  _185 = _184 + -1;
  if (i_mb_x_43(D) < _185)
    goto <bb 14>;
  else
    goto <bb 16>;

  <bb 14>:
  _186 = i_top_xy_57 + 1;
  _187 = h_39(D)->sh.i_first_mb;
  if (_186 >= _187)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 15>:
  _188 = h_39(D)->mb.i_neighbour;
  _189 = _188 | 4;
  h_39(D)->mb.i_neighbour = _189;
  _191 = h_39(D)->mb.type;
  _192 = (sizetype) i_top_xy_57;
  _193 = _192 + 1;
  _194 = _191 + _193;
  _195 = *_194;
  _196 = (int) _195;
  h_39(D)->mb.i_mb_type_topright = _196;
  goto <bb 17>;

  <bb 16>:
  h_39(D)->mb.i_mb_type_topright = -1;

  <bb 17>:
  if (i_mb_x_43(D) > 0)
    goto <bb 18>;
  else
    goto <bb 20>;

  <bb 18>:
  _199 = h_39(D)->sh.i_first_mb;
  if (i_top_xy_57 > _199)
    goto <bb 19>;
  else
    goto <bb 20>;

  <bb 19>:
  _200 = h_39(D)->mb.i_neighbour;
  _201 = _200 | 8;
  h_39(D)->mb.i_neighbour = _201;
  _203 = h_39(D)->mb.type;
  _204 = (sizetype) i_top_xy_57;
  _205 = _204 + 18446744073709551615;
  _206 = _203 + _205;
  _207 = *_206;
  _208 = (int) _207;
  h_39(D)->mb.i_mb_type_topleft = _208;
  goto <bb 21>;

  <bb 20>:
  h_39(D)->mb.i_mb_type_topleft = -1;

  <bb 21>:
  _211 = h_39(D)->pps;
  _212 = _211->b_transform_8x8_mode;
  if (_212 != 0)
    goto <bb 22>;
  else
    goto <bb 29>;

  <bb 22>:
  if (i_left_type_3 >= 0)
    goto <bb 23>;
  else
    goto <bb 25>;

  <bb 23>:
  _213 = h_39(D)->mb.mb_transform_size;
  _214 = (sizetype) i_left_xy_1;
  _215 = _213 + _214;
  _216 = *_215;
  if (_216 != 0)
    goto <bb 25>;
  else
    goto <bb 24>;

  <bb 24>:

  <bb 25>:
  # iftmp.16_9 = PHI <1(23), 0(24), 0(22)>
  if (i_top_type_2 >= 0)
    goto <bb 26>;
  else
    goto <bb 28>;

  <bb 26>:
  _217 = h_39(D)->mb.mb_transform_size;
  _218 = (sizetype) i_top_xy_57;
  _219 = _217 + _218;
  _220 = *_219;
  if (_220 != 0)
    goto <bb 28>;
  else
    goto <bb 27>;

  <bb 27>:

  <bb 28>:
  # iftmp.17_10 = PHI <1(26), 0(27), 0(25)>
  _221 = iftmp.16_9 + iftmp.17_10;
  h_39(D)->mb.cache.i_neighbour_transform_size = _221;

  <bb 29>:
  _223 = h_39(D)->sh.b_mbaff;
  if (_223 != 0)
    goto <bb 31>;
  else
    goto <bb 30>;

  <bb 30>:
  pretmp_1030 = h_39(D)->mb.b_interlaced;
  goto <bb 32>;

  <bb 31>:
  _224 = h_39(D)->i_ref0;
  _225 = h_39(D)->mb.b_interlaced;
  _226 = _224 << _225;
  h_39(D)->mb.pic.i_fref[0] = _226;
  _228 = h_39(D)->i_ref1;
  _229 = _228 << _225;
  h_39(D)->mb.pic.i_fref[1] = _229;
  _231 = h_39(D)->mb.i_neighbour;
  _232 = _231 & 1;
  _234 = (int) _232;
  _235 = _231 & 2;
  _236 = _235 != 0;
  _237 = (int) _236;
  _238 = _234 + _237;
  h_39(D)->mb.cache.i_neighbour_interlaced = _238;

  <bb 32>:
  # prephitmp_1031 = PHI <pretmp_1030(30), _225(31)>
  if (prephitmp_1031 == 0)
    goto <bb 33>;
  else
    goto <bb 152>;

  <bb 33>:
  _241 = h_39(D)->mb.pic.p_fdec[0];
  _242 = _241 + 15;
  _243 = _241 + 18446744073709551615;
  copy_column8 (_243, _242);
  _245 = h_39(D)->mb.pic.p_fdec[0];
  _246 = _245 + 271;
  _247 = _245 + 255;
  copy_column8 (_247, _246);
  _249 = h_39(D)->mb.pic.p_fdec[1];
  _250 = _249 + 7;
  _251 = _249 + 18446744073709551615;
  copy_column8 (_251, _250);
  _253 = h_39(D)->mb.pic.p_fdec[2];
  _254 = _253 + 7;
  _255 = _253 + 18446744073709551615;
  copy_column8 (_255, _254);
  # DEBUG h => h_39(D)
  # DEBUG i_mb_x => i_mb_x_43(D)
  # DEBUG i_mb_y => i_mb_y_41(D)
  # DEBUG i => 0
  # DEBUG w => 16
  _258 = h_39(D)->fdec;
  i_stride_700 = _258->i_stride[0];
  # DEBUG i_stride => i_stride_700
  _701 = h_39(D)->mb.b_interlaced;
  i_stride2_702 = i_stride_700 << _701;
  # DEBUG i_stride2 => i_stride2_702
  if (_701 != 0)
    goto <bb 34>;
  else
    goto <bb 36>;

  <bb 34>:
  pretmp_1113 = h_39(D)->sh.b_mbaff;

  <bb 35>:
  # i_stride_109 = PHI <i_stride_700(34), i_stride_819(152)>
  # i_stride2_889 = PHI <i_stride2_702(34), i_stride2_673(152)>
  # prephitmp_1114 = PHI <pretmp_1113(34), _223(152)>
  # DEBUG h => h_39(D)
  # DEBUG i_mb_x => i_mb_x_43(D)
  # DEBUG i_mb_y => i_mb_y_41(D)
  # DEBUG i => 0
  # DEBUG w => 16
  # DEBUG i_stride => i_stride_109
  # DEBUG i_stride2 => i_stride2_889
  _703 = i_mb_y_41(D) & -2;
  _704 = i_stride_109 * _703;
  _705 = i_mb_x_43(D) + _704;
  _707 = _705 * 16;
  _708 = i_mb_y_41(D) & 1;
  _709 = i_stride_109 * _708;
  iftmp.26_710 = _707 + _709;
  # DEBUG i_pix_offset => iftmp.26_710
  ref_pix_offset[0] = iftmp.26_710;
  _892 = i_mb_y_41(D) & prephitmp_1114;
  _896 = h_39(D)->mb.intra_border_backup[_892][0];
  _891 = i_mb_x_43(D) * 16;
  _890 = (sizetype) _891;
  # DEBUG intra_fdec => _896 + _890
  _899 = &h_39(D)->fref0;
  # DEBUG fref$0 => _899
  _895 = &h_39(D)->fref1;
  # DEBUG fref$1 => _895
  # DEBUG i_pix_offset => iftmp.26_710
  # DEBUG intra_fdec => _896 + _890
  # DEBUG fref$0 => _899
  # DEBUG fref$1 => _895
  _723 = _708 * 2;
  _724 = 1 - _723;
  _725 = i_stride_109 * _724;
  _726 = iftmp.26_710 + _725;
  ref_pix_offset[1] = _726;
  goto <bb 37>;

  <bb 36>:
  _711 = i_mb_y_41(D) * i_stride_700;
  _712 = i_mb_x_43(D) + _711;
  iftmp.26_713 = _712 * 16;
  # DEBUG i_pix_offset => iftmp.26_713
  ref_pix_offset[0] = iftmp.26_713;
  ref_pix_offset[1] = iftmp.26_713;
  _833 = h_39(D)->sh.b_mbaff;
  _829 = i_mb_y_41(D) & _833;
  _832 = h_39(D)->mb.intra_border_backup[_829][0];
  _920 = i_mb_x_43(D) * 16;
  _921 = (sizetype) _920;
  # DEBUG intra_fdec => _832 + _921
  _886 = &h_39(D)->fref0;
  # DEBUG fref$0 => _886
  _885 = &h_39(D)->fref1;
  # DEBUG fref$1 => _885

  <bb 37>:
  # iftmp.26_873 = PHI <iftmp.26_713(36), iftmp.26_710(35)>
  # _857 = PHI <_832(36), _896(35)>
  # _866 = PHI <_920(36), _891(35)>
  # _850 = PHI <_921(36), _890(35)>
  # _883 = PHI <_886(36), _899(35)>
  # _882 = PHI <_885(36), _895(35)>
  # i_stride2_695 = PHI <i_stride2_702(36), i_stride2_889(35)>
  h_39(D)->mb.pic.i_stride[0] = i_stride2_695;
  _727 = h_39(D)->fenc;
  _728 = _727->plane[0];
  _729 = (sizetype) iftmp.26_873;
  _730 = _728 + _729;
  h_39(D)->mb.pic.p_fenc_plane[0] = _730;
  _732 = h_39(D)->mc.copy[0];
  _733 = h_39(D)->mb.pic.p_fenc[0];
  _732 (_733, 16, _730, i_stride2_695, 16);
  _734 = _850 + 18446744073709551615;
  _735 = _857 + _734;
  _736 = h_39(D)->mb.pic.p_fdec[0];
  _737 = _736 + 18446744073709551583;
  # DEBUG __dest => _737
  # DEBUG __src => _735
  # DEBUG __len => 25
  __builtin_memcpy (_737, _735, 25);
  # DEBUG __dest => NULL
  # DEBUG __src => NULL
  # DEBUG __len => NULL
  _739 = h_39(D)->mb.b_interlaced;
  if (_739 != 0)
    goto <bb 40>;
  else
    goto <bb 38>;

  <bb 38>:
  # prephitmp_1040 = PHI <_739(37), pretmp_1039(43)>
  # DEBUG j => 0
  _91 = h_39(D)->mb.pic.i_fref[0];
  if (_91 > 0)
    goto <bb 44>;
  else
    goto <bb 39>;

  <bb 39>:
  _775 = h_39(D)->sh.i_type;
  if (_775 == 1)
    goto <bb 53>;
  else
    goto <bb 52>;

  <bb 40>:
  _740 = h_39(D)->fdec;
  _741 = _740->plane[0];
  # DEBUG plane_fdec => _741 + _729
  # DEBUG j => 0
  # DEBUG j => 0

  <bb 41>:
  # j_849 = PHI <j_754(42), 0(40)>
  # ivtmp_976 = PHI <ivtmp_975(42), 16(40)>
  # DEBUG j => j_849
  _742 = h_39(D)->mb.pic.p_fdec[0];
  _744 = j_849 * 32;
  _745 = _744 + -1;
  _746 = (sizetype) _745;
  _747 = _742 + _746;
  _748 = i_stride2_695 * j_849;
  _749 = _748 + -1;
  _750 = (sizetype) _749;
  _751 = _729 + _750;
  _752 = _741 + _751;
  _753 = *_752;
  *_747 = _753;
  j_754 = j_849 + 1;
  # DEBUG j => j_754
  # DEBUG j => j_754
  ivtmp_975 = ivtmp_976 - 1;
  if (ivtmp_975 != 0)
    goto <bb 42>;
  else
    goto <bb 43>;

  <bb 42>:
  goto <bb 41>;

  <bb 43>:
  pretmp_1039 = h_39(D)->mb.b_interlaced;
  goto <bb 38>;

  <bb 44>:

  <bb 45>:
  # j_233 = PHI <0(44), j_773(50)>
  # DEBUG j => j_233
  _758 = j_233 >> prephitmp_1040;
  _759 = (long unsigned int) _758;
  _760 = _759 * 8;
  _761 = _883 + _760;
  _762 = *_761;
  _763 = _762->plane[0];
  _764 = j_233 & 1;
  _765 = ref_pix_offset[_764];
  _766 = (sizetype) _765;
  _767 = _763 + _766;
  h_39(D)->mb.pic.p_fref[0][j_233][0] = _767;
  # DEBUG k => 1

  <bb 46>:
  # k_870 = PHI <k_772(47), 1(45)>
  # ivtmp_978 = PHI <ivtmp_977(47), 3(45)>
  # DEBUG k => k_870
  _768 = *_761;
  _770 = _768->filtered[k_870];
  _771 = _770 + _766;
  h_39(D)->mb.pic.p_fref[0][j_233][k_870] = _771;
  k_772 = k_870 + 1;
  # DEBUG k => k_772
  # DEBUG k => k_772
  ivtmp_977 = ivtmp_978 - 1;
  if (ivtmp_977 != 0)
    goto <bb 47>;
  else
    goto <bb 48>;

  <bb 47>:
  goto <bb 46>;

  <bb 48>:
  j_773 = j_233 + 1;
  # DEBUG j => j_773
  # DEBUG j => j_773
  if (_91 > j_773)
    goto <bb 50>;
  else
    goto <bb 49>;

  <bb 49>:
  goto <bb 39>;

  <bb 50>:
  goto <bb 45>;

  <bb 51>:

  <bb 52>:
  ref_pix_offset ={v} {CLOBBER};
  # DEBUG h => NULL
  # DEBUG i_mb_x => NULL
  # DEBUG i_mb_y => NULL
  # DEBUG i => NULL
  # DEBUG k => NULL
  # DEBUG j => NULL
  # DEBUG i_stride2 => NULL
  # DEBUG i_stride => NULL
  # DEBUG h => h_39(D)
  # DEBUG i_mb_x => i_mb_x_43(D)
  # DEBUG i_mb_y => i_mb_y_41(D)
  # DEBUG i => 1
  # DEBUG w => 8
  _259 = h_39(D)->fdec;
  i_stride_605 = _259->i_stride[1];
  # DEBUG i_stride => i_stride_605
  i_stride2_607 = i_stride_605 << prephitmp_1040;
  # DEBUG i_stride2 => i_stride2_607
  if (prephitmp_1040 != 0)
    goto <bb 60>;
  else
    goto <bb 61>;

  <bb 53>:
  # DEBUG j => 0
  _914 = h_39(D)->mb.pic.i_fref[1];
  if (_914 > 0)
    goto <bb 54>;
  else
    goto <bb 52>;

  <bb 54>:

  <bb 55>:
  # j_738 = PHI <0(54), j_794(59)>
  # DEBUG j => j_738
  _779 = j_738 >> prephitmp_1040;
  _780 = (long unsigned int) _779;
  _781 = _780 * 8;
  _782 = _882 + _781;
  _783 = *_782;
  _784 = _783->plane[0];
  _785 = j_738 & 1;
  _786 = ref_pix_offset[_785];
  _787 = (sizetype) _786;
  _788 = _784 + _787;
  h_39(D)->mb.pic.p_fref[1][j_738][0] = _788;
  # DEBUG k => 1

  <bb 56>:
  # k_854 = PHI <k_793(57), 1(55)>
  # ivtmp_980 = PHI <ivtmp_979(57), 3(55)>
  # DEBUG k => k_854
  _789 = *_782;
  _791 = _789->filtered[k_854];
  _792 = _791 + _787;
  h_39(D)->mb.pic.p_fref[1][j_738][k_854] = _792;
  k_793 = k_854 + 1;
  # DEBUG k => k_793
  # DEBUG k => k_793
  ivtmp_979 = ivtmp_980 - 1;
  if (ivtmp_979 != 0)
    goto <bb 57>;
  else
    goto <bb 58>;

  <bb 57>:
  goto <bb 56>;

  <bb 58>:
  j_794 = j_738 + 1;
  # DEBUG j => j_794
  # DEBUG j => j_794
  if (j_794 < _914)
    goto <bb 59>;
  else
    goto <bb 51>;

  <bb 59>:
  goto <bb 55>;

  <bb 60>:
  _608 = i_mb_y_41(D) & -2;
  _609 = i_stride_605 * _608;
  _610 = i_mb_x_43(D) + _609;
  _612 = _610 * 8;
  _613 = i_mb_y_41(D) & 1;
  _614 = i_stride_605 * _613;
  iftmp.26_615 = _612 + _614;
  # DEBUG i_pix_offset => iftmp.26_615
  ref_pix_offset[0] = iftmp.26_615;
  _840 = h_39(D)->sh.b_mbaff;
  _842 = i_mb_y_41(D) & _840;
  _839 = h_39(D)->mb.intra_border_backup[_842][1];
  _835 = _866 >> 1;
  _836 = (sizetype) _835;
  # DEBUG intra_fdec => _839 + _836
  # DEBUG fref$0 => _883
  # DEBUG fref$1 => _882
  # DEBUG i_pix_offset => iftmp.26_615
  # DEBUG intra_fdec => _839 + _836
  # DEBUG fref$0 => _883
  # DEBUG fref$1 => _882
  _626 = _613 * 2;
  _627 = 1 - _626;
  _628 = i_stride_605 * _627;
  _629 = iftmp.26_615 + _628;
  ref_pix_offset[1] = _629;
  goto <bb 62>;

  <bb 61>:
  _616 = i_mb_y_41(D) * i_stride_605;
  _617 = i_mb_x_43(D) + _616;
  iftmp.26_618 = _617 * 8;
  # DEBUG i_pix_offset => iftmp.26_618
  ref_pix_offset[0] = iftmp.26_618;
  ref_pix_offset[1] = iftmp.26_618;
  _411 = h_39(D)->sh.b_mbaff;
  _410 = i_mb_y_41(D) & _411;
  _884 = h_39(D)->mb.intra_border_backup[_410][1];
  _468 = _866 >> 1;
  _905 = (sizetype) _468;
  # DEBUG intra_fdec => _884 + _905
  # DEBUG fref$0 => _883
  # DEBUG fref$1 => _882

  <bb 62>:
  # iftmp.26_874 = PHI <iftmp.26_618(61), iftmp.26_615(60)>
  # _858 = PHI <_884(61), _839(60)>
  # _847 = PHI <_905(61), _836(60)>
  h_39(D)->mb.pic.i_stride[1] = i_stride2_607;
  _630 = h_39(D)->fenc;
  _631 = _630->plane[1];
  _632 = (sizetype) iftmp.26_874;
  _633 = _631 + _632;
  h_39(D)->mb.pic.p_fenc_plane[1] = _633;
  _635 = h_39(D)->mc.copy[3];
  _636 = h_39(D)->mb.pic.p_fenc[1];
  _635 (_636, 16, _633, i_stride2_607, 8);
  _637 = _847 + 18446744073709551615;
  _638 = _858 + _637;
  _639 = h_39(D)->mb.pic.p_fdec[1];
  _640 = _639 + 18446744073709551583;
  # DEBUG __dest => _640
  # DEBUG __src => _638
  # DEBUG __len => 13
  __builtin_memcpy (_640, _638, 13);
  # DEBUG __dest => NULL
  # DEBUG __src => NULL
  # DEBUG __len => NULL
  _642 = h_39(D)->mb.b_interlaced;
  if (_642 != 0)
    goto <bb 65>;
  else
    goto <bb 63>;

  <bb 63>:
  # prephitmp_1049 = PHI <_642(62), pretmp_1048(68)>
  # DEBUG j => 0
  _821 = h_39(D)->mb.pic.i_fref[0];
  if (_821 > 0)
    goto <bb 69>;
  else
    goto <bb 64>;

  <bb 64>:
  _677 = h_39(D)->sh.i_type;
  if (_677 == 1)
    goto <bb 75>;
  else
    goto <bb 74>;

  <bb 65>:
  _643 = h_39(D)->fdec;
  _644 = _643->plane[1];
  # DEBUG plane_fdec => _644 + _632
  # DEBUG j => 0
  # DEBUG j => 0

  <bb 66>:
  # j_101 = PHI <j_657(67), 0(65)>
  # ivtmp_982 = PHI <ivtmp_981(67), 8(65)>
  # DEBUG j => j_101
  _645 = h_39(D)->mb.pic.p_fdec[1];
  _647 = j_101 * 32;
  _648 = _647 + -1;
  _649 = (sizetype) _648;
  _650 = _645 + _649;
  _651 = j_101 * i_stride2_607;
  _652 = _651 + -1;
  _653 = (sizetype) _652;
  _654 = _632 + _653;
  _655 = _644 + _654;
  _656 = *_655;
  *_650 = _656;
  j_657 = j_101 + 1;
  # DEBUG j => j_657
  # DEBUG j => j_657
  ivtmp_981 = ivtmp_982 - 1;
  if (ivtmp_981 != 0)
    goto <bb 67>;
  else
    goto <bb 68>;

  <bb 67>:
  goto <bb 66>;

  <bb 68>:
  pretmp_1048 = h_39(D)->mb.b_interlaced;
  goto <bb 63>;

  <bb 69>:

  <bb 70>:
  # j_671 = PHI <0(69), j_675(72)>
  # DEBUG j => j_671
  _660 = j_671 >> prephitmp_1049;
  _661 = (long unsigned int) _660;
  _662 = _661 * 8;
  _663 = _883 + _662;
  _664 = *_663;
  _665 = _664->plane[1];
  _666 = j_671 & 1;
  _667 = ref_pix_offset[_666];
  _668 = (sizetype) _667;
  _669 = _665 + _668;
  h_39(D)->mb.pic.p_fref[0][j_671][4] = _669;
  j_675 = j_671 + 1;
  # DEBUG j => j_675
  # DEBUG j => j_675
  if (j_675 < _821)
    goto <bb 72>;
  else
    goto <bb 71>;

  <bb 71>:
  goto <bb 64>;

  <bb 72>:
  goto <bb 70>;

  <bb 73>:

  <bb 74>:
  ref_pix_offset ={v} {CLOBBER};
  # DEBUG h => NULL
  # DEBUG i_mb_x => NULL
  # DEBUG i_mb_y => NULL
  # DEBUG i => NULL
  # DEBUG k => NULL
  # DEBUG j => NULL
  # DEBUG i_stride2 => NULL
  # DEBUG i_stride => NULL
  # DEBUG h => h_39(D)
  # DEBUG i_mb_x => i_mb_x_43(D)
  # DEBUG i_mb_y => i_mb_y_41(D)
  # DEBUG i => 2
  # DEBUG w => 8
  _511 = h_39(D)->fdec;
  i_stride_512 = _511->i_stride[2];
  # DEBUG i_stride => i_stride_512
  i_stride2_514 = i_stride_512 << prephitmp_1049;
  # DEBUG i_stride2 => i_stride2_514
  if (prephitmp_1049 != 0)
    goto <bb 79>;
  else
    goto <bb 80>;

  <bb 75>:
  # DEBUG j => 0
  _898 = h_39(D)->mb.pic.i_fref[1];
  if (_898 > 0)
    goto <bb 76>;
  else
    goto <bb 74>;

  <bb 76>:

  <bb 77>:
  # j_87 = PHI <0(76), j_696(78)>
  # DEBUG j => j_87
  _680 = j_87 >> prephitmp_1049;
  _681 = (long unsigned int) _680;
  _682 = _681 * 8;
  _683 = _882 + _682;
  _684 = *_683;
  _685 = _684->plane[1];
  _686 = j_87 & 1;
  _687 = ref_pix_offset[_686];
  _688 = (sizetype) _687;
  _689 = _685 + _688;
  h_39(D)->mb.pic.p_fref[1][j_87][4] = _689;
  j_696 = j_87 + 1;
  # DEBUG j => j_696
  # DEBUG j => j_696
  if (j_696 < _898)
    goto <bb 78>;
  else
    goto <bb 73>;

  <bb 78>:
  goto <bb 77>;

  <bb 79>:
  _515 = i_mb_y_41(D) & -2;
  _516 = i_stride_512 * _515;
  _517 = i_mb_x_43(D) + _516;
  _519 = _517 * 8;
  _520 = i_mb_y_41(D) & 1;
  _521 = i_stride_512 * _520;
  iftmp.26_522 = _519 + _521;
  # DEBUG i_pix_offset => iftmp.26_522
  ref_pix_offset[0] = iftmp.26_522;
  _902 = h_39(D)->sh.b_mbaff;
  _828 = i_mb_y_41(D) & _902;
  _901 = h_39(D)->mb.intra_border_backup[_828][2];
  # DEBUG intra_fdec => _901 + _847
  # DEBUG fref$0 => _883
  # DEBUG fref$1 => _882
  # DEBUG i_pix_offset => iftmp.26_522
  # DEBUG intra_fdec => _901 + _847
  # DEBUG fref$0 => _883
  # DEBUG fref$1 => _882
  _531 = _520 * 2;
  _532 = 1 - _531;
  _533 = i_stride_512 * _532;
  _534 = iftmp.26_522 + _533;
  ref_pix_offset[1] = _534;
  goto <bb 81>;

  <bb 80>:
  _523 = i_mb_y_41(D) * i_stride_512;
  _524 = i_mb_x_43(D) + _523;
  iftmp.26_525 = _524 * 8;
  # DEBUG i_pix_offset => iftmp.26_525
  ref_pix_offset[0] = iftmp.26_525;
  ref_pix_offset[1] = iftmp.26_525;
  _465 = h_39(D)->sh.b_mbaff;
  _909 = i_mb_y_41(D) & _465;
  _908 = h_39(D)->mb.intra_border_backup[_909][2];
  # DEBUG intra_fdec => _908 + _847
  # DEBUG fref$0 => _883
  # DEBUG fref$1 => _882

  <bb 81>:
  # iftmp.26_864 = PHI <iftmp.26_525(80), iftmp.26_522(79)>
  # _6 = PHI <_908(80), _901(79)>
  h_39(D)->mb.pic.i_stride[2] = i_stride2_514;
  _535 = h_39(D)->fenc;
  _536 = _535->plane[2];
  _537 = (sizetype) iftmp.26_864;
  _538 = _536 + _537;
  h_39(D)->mb.pic.p_fenc_plane[2] = _538;
  _540 = h_39(D)->mc.copy[3];
  _541 = h_39(D)->mb.pic.p_fenc[2];
  _540 (_541, 16, _538, i_stride2_514, 8);
  _542 = _6 + _637;
  _543 = h_39(D)->mb.pic.p_fdec[2];
  _544 = _543 + 18446744073709551583;
  # DEBUG __dest => _544
  # DEBUG __src => _542
  # DEBUG __len => 13
  __builtin_memcpy (_544, _542, 13);
  # DEBUG __dest => NULL
  # DEBUG __src => NULL
  # DEBUG __len => NULL
  _546 = h_39(D)->mb.b_interlaced;
  if (_546 != 0)
    goto <bb 84>;
  else
    goto <bb 82>;

  <bb 82>:
  # DEBUG j => 0
  _822 = h_39(D)->mb.pic.i_fref[0];
  if (_822 > 0)
    goto <bb 88>;
  else
    goto <bb 83>;

  <bb 83>:
  _582 = h_39(D)->sh.i_type;
  if (_582 == 1)
    goto <bb 94>;
  else
    goto <bb 93>;

  <bb 84>:
  _547 = h_39(D)->fdec;
  _548 = _547->plane[2];
  # DEBUG plane_fdec => _548 + _537
  # DEBUG j => 0
  # DEBUG j => 0

  <bb 85>:
  # j_856 = PHI <j_561(87), 0(84)>
  # ivtmp_984 = PHI <ivtmp_983(87), 8(84)>
  # DEBUG j => j_856
  _549 = h_39(D)->mb.pic.p_fdec[2];
  _551 = j_856 * 32;
  _552 = _551 + -1;
  _553 = (sizetype) _552;
  _554 = _549 + _553;
  _555 = i_stride2_514 * j_856;
  _556 = _555 + -1;
  _557 = (sizetype) _556;
  _558 = _537 + _557;
  _559 = _548 + _558;
  _560 = *_559;
  *_554 = _560;
  j_561 = j_856 + 1;
  # DEBUG j => j_561
  # DEBUG j => j_561
  ivtmp_983 = ivtmp_984 - 1;
  if (ivtmp_983 != 0)
    goto <bb 87>;
  else
    goto <bb 86>;

  <bb 86>:
  goto <bb 82>;

  <bb 87>:
  goto <bb 85>;

  <bb 88>:
  pretmp_1084 = h_39(D)->mb.b_interlaced;

  <bb 89>:
  # j_692 = PHI <0(88), j_580(91)>
  # DEBUG j => j_692
  _564 = j_692 >> pretmp_1084;
  _565 = (long unsigned int) _564;
  _566 = _565 * 8;
  _567 = _883 + _566;
  _568 = *_567;
  _569 = _568->plane[2];
  _570 = j_692 & 1;
  _571 = ref_pix_offset[_570];
  _572 = (sizetype) _571;
  _573 = _569 + _572;
  h_39(D)->mb.pic.p_fref[0][j_692][5] = _573;
  j_580 = j_692 + 1;
  # DEBUG j => j_580
  # DEBUG j => j_580
  if (j_580 < _822)
    goto <bb 91>;
  else
    goto <bb 90>;

  <bb 90>:
  goto <bb 83>;

  <bb 91>:
  goto <bb 89>;

  <bb 92>:

  <bb 93>:
  ref_pix_offset ={v} {CLOBBER};
  # DEBUG h => NULL
  # DEBUG i_mb_x => NULL
  # DEBUG i_mb_y => NULL
  # DEBUG i => NULL
  # DEBUG k => NULL
  # DEBUG j => NULL
  # DEBUG i_stride2 => NULL
  # DEBUG i_stride => NULL
  _260 = h_39(D)->fdec;
  _261 = _260->integral;
  if (_261 != 0B)
    goto <bb 100>;
  else
    goto <bb 99>;

  <bb 94>:
  # DEBUG j => 0
  _907 = h_39(D)->mb.pic.i_fref[1];
  if (_907 > 0)
    goto <bb 95>;
  else
    goto <bb 93>;

  <bb 95>:
  pretmp_1077 = h_39(D)->mb.b_interlaced;

  <bb 96>:
  # j_596 = PHI <0(95), j_601(97)>
  # DEBUG j => j_596
  _585 = j_596 >> pretmp_1077;
  _586 = (long unsigned int) _585;
  _587 = _586 * 8;
  _588 = _882 + _587;
  _589 = *_588;
  _590 = _589->plane[2];
  _591 = j_596 & 1;
  _592 = ref_pix_offset[_591];
  _593 = (sizetype) _592;
  _594 = _590 + _593;
  h_39(D)->mb.pic.p_fref[1][j_596][5] = _594;
  j_601 = j_596 + 1;
  # DEBUG j => j_601
  # DEBUG j => j_601
  if (j_601 < _907)
    goto <bb 97>;
  else
    goto <bb 92>;

  <bb 97>:
  goto <bb 96>;

  <bb 98>:

  <bb 99>:
  _287 = h_39(D)->fenc;
  x264_prefetch_fenc (h_39(D), _287, i_mb_x_43(D), i_mb_y_41(D));
  _289 = h_39(D)->sh.i_type;
  if (_289 != 2)
    goto <bb 111>;
  else
    goto <bb 150>;

  <bb 100>:
  _262 = h_39(D)->mb.b_interlaced;
  if (_262 != 0)
    goto <bb 103>;
  else
    goto <bb 101>;

  <bb 101>:
  # DEBUG i => 0
  if (_822 > 0)
    goto <bb 104>;
  else
    goto <bb 102>;

  <bb 102>:
  # DEBUG i => 0
  _29 = h_39(D)->mb.pic.i_fref[1];
  if (_29 > 0)
    goto <bb 108>;
  else
    goto <bb 99>;

  <bb 103>:
  __assert_fail ("!h->mb.b_interlaced", "common/macroblock.c", 1129, &__PRETTY_FUNCTION__);

  <bb 104>:
  pretmp_1069 = _260->i_stride[0];
  pretmp_1071 = i_mb_y_41(D) * pretmp_1069;
  pretmp_1072 = i_mb_x_43(D) + pretmp_1071;
  pretmp_1073 = pretmp_1072 * 16;
  pretmp_1074 = (long unsigned int) pretmp_1073;
  pretmp_1075 = pretmp_1074 * 2;

  <bb 105>:
  # i_818 = PHI <0(104), i_273(107)>
  # DEBUG i => i_818
  _263 = h_39(D)->fref0[i_818];
  _264 = _263->integral;
  _271 = _264 + pretmp_1075;
  h_39(D)->mb.pic.p_integral[0][i_818] = _271;
  i_273 = i_818 + 1;
  # DEBUG i => i_273
  # DEBUG i => i_273
  if (i_273 < _822)
    goto <bb 107>;
  else
    goto <bb 106>;

  <bb 106>:
  goto <bb 102>;

  <bb 107>:
  goto <bb 105>;

  <bb 108>:
  pretmp_1061 = _260->i_stride[0];
  pretmp_1063 = i_mb_y_41(D) * pretmp_1061;
  pretmp_1064 = i_mb_x_43(D) + pretmp_1063;
  pretmp_1065 = pretmp_1064 * 16;
  pretmp_1066 = (long unsigned int) pretmp_1065;
  pretmp_1067 = pretmp_1066 * 2;

  <bb 109>:
  # i_110 = PHI <0(108), i_285(110)>
  # DEBUG i => i_110
  _275 = h_39(D)->fref1[i_110];
  _276 = _275->integral;
  _283 = _276 + pretmp_1067;
  h_39(D)->mb.pic.p_integral[1][i_110] = _283;
  i_285 = i_110 + 1;
  # DEBUG i => i_285
  # DEBUG i => i_285
  if (_29 > i_285)
    goto <bb 110>;
  else
    goto <bb 98>;

  <bb 110>:
  goto <bb 109>;

  <bb 111>:
  _62 = i_mb_x_43(D) * 4;
  _58 = i_top_y_55 * 4;
  _59 = _58 + 3;
  _61 = _45 * _59;
  i_top_4x4_63 = _61 + _62;
  _67 = i_mb_x_43(D) * 2;
  _64 = i_top_y_55 * 2;
  _65 = _64 + 1;
  _66 = _49 * _65;
  i_top_8x8_68 = _66 + _67;
  s8x8_290 = h_39(D)->mb.i_b8_stride;
  # DEBUG s8x8 => s8x8_290
  s4x4_291 = h_39(D)->mb.i_b4_stride;
  # DEBUG s4x4 => s4x4_291
  # DEBUG i_list => 0
  _1019 = (unsigned int) i_top_4x4_63;
  _1018 = _1019 + 4294967295;
  iv_296 = (const int) _1018;
  _304 = (long unsigned int) iv_296;
  _305 = _304 * 4;
  _327 = (long unsigned int) i_top_4x4_63;
  _328 = _327 * 4;
  _333 = _327 + 2;
  _334 = _333 * 4;
  _1017 = (unsigned int) i_top_4x4_63;
  _1016 = _1017 + 4;
  iv_347 = (const int) _1016;
  _355 = (long unsigned int) iv_347;
  _356 = _355 * 4;
  _1015 = (unsigned int) i_mb_4x4_48;
  _1014 = _1015 + 4294967295;
  iv_366 = (const int) _1014;
  _381 = (long unsigned int) iv_366;
  _382 = _381 * 4;
  _1013 = (unsigned int) s4x4_291;
  _1012 = (unsigned int) iv_366;
  _1011 = _1013 + _1012;
  _387 = (int) _1011;
  _388 = (long unsigned int) _387;
  _389 = _388 * 4;
  _1010 = (unsigned int) s4x4_291;
  _1009 = _1010 * 2;
  _394 = (int) _1009;
  _1008 = (unsigned int) iv_366;
  _1007 = (unsigned int) _394;
  _1006 = _1008 + _1007;
  _395 = (int) _1006;
  _396 = (long unsigned int) _395;
  _397 = _396 * 4;
  _1005 = (unsigned int) s4x4_291;
  _1004 = _1005 * 3;
  _402 = (int) _1004;
  _1003 = (unsigned int) iv_366;
  _1002 = (unsigned int) _402;
  _1001 = _1003 + _1002;
  _403 = (int) _1001;
  _404 = (long unsigned int) _403;
  _405 = _404 * 4;
  _418 = (long unsigned int) i_top_4x4_63;
  _419 = _418 * 4;
  _424 = _418 + 2;
  _425 = _424 * 4;
  _1000 = (unsigned int) i_mb_4x4_48;
  _999 = _1000 + 4294967295;
  iv_433 = (const int) _999;
  _436 = (long unsigned int) iv_433;
  _437 = _436 * 4;
  _998 = (unsigned int) s4x4_291;
  _997 = (unsigned int) iv_433;
  _996 = _998 + _997;
  _442 = (int) _996;
  _443 = (long unsigned int) _442;
  _444 = _443 * 4;
  _995 = (unsigned int) s4x4_291;
  _994 = _995 * 2;
  _449 = (int) _994;
  _993 = (unsigned int) iv_433;
  _992 = (unsigned int) _449;
  _991 = _993 + _992;
  _450 = (int) _991;
  _451 = (long unsigned int) _450;
  _452 = _451 * 4;
  _990 = (unsigned int) s4x4_291;
  _989 = _990 * 3;
  _457 = (int) _989;
  _988 = (unsigned int) iv_433;
  _987 = (unsigned int) _457;
  _986 = _988 + _987;
  _458 = (int) _986;
  _459 = (long unsigned int) _458;
  _460 = _459 * 4;
  goto <bb 132>;

  <bb 112>:
  _293 = h_39(D)->mb.i_neighbour;
  _294 = _293 & 8;
  if (_294 != 0)
    goto <bb 113>;
  else
    goto <bb 114>;

  <bb 113>:
  # DEBUG i8 => 3
  ir_295 = i_top_8x8_68 + -1;
  # DEBUG ir => ir_295
  # DEBUG iv => i_top_4x4_63 + -1
  _297 = h_39(D)->mb.ref[i_list_8];
  _298 = (sizetype) ir_295;
  _299 = _297 + _298;
  _300 = *_299;
  h_39(D)->mb.cache.ref[i_list_8][3] = _300;
  _302 = &h_39(D)->mb.cache.mv[i_list_8][3];
  _303 = h_39(D)->mb.mv[i_list_8];
  _306 = _303 + _305;
  _307 = *_306;
  MEM[(uint32_t *)_302] = _307;
  goto <bb 115>;

  <bb 114>:
  # DEBUG i8 => 3
  h_39(D)->mb.cache.ref[i_list_8][3] = -2;
  _310 = &h_39(D)->mb.cache.mv[i_list_8][3];
  MEM[(uint32_t *)_310] = 0;

  <bb 115>:
  _312 = h_39(D)->mb.i_neighbour;
  _313 = _312 & 2;
  if (_313 != 0)
    goto <bb 116>;
  else
    goto <bb 117>;

  <bb 116>:
  # DEBUG i8 => 4
  # DEBUG ir => D#80
  # DEBUG iv => D#85
  _314 = h_39(D)->mb.ref[i_list_8];
  _315 = (sizetype) i_top_8x8_68;
  _316 = _314 + _315;
  _317 = *_316;
  h_39(D)->mb.cache.ref[i_list_8][5] = _317;
  h_39(D)->mb.cache.ref[i_list_8][4] = _317;
  _320 = _315 + 1;
  _321 = _314 + _320;
  _322 = *_321;
  h_39(D)->mb.cache.ref[i_list_8][7] = _322;
  h_39(D)->mb.cache.ref[i_list_8][6] = _322;
  _325 = &h_39(D)->mb.cache.mv[i_list_8][4];
  _326 = h_39(D)->mb.mv[i_list_8];
  _329 = _326 + _328;
  _330 = *_329;
  MEM[(uint64_t *)_325] = _330;
  _332 = &h_39(D)->mb.cache.mv[i_list_8][6];
  _335 = _326 + _334;
  _336 = MEM[(uint64_t *)_335];
  MEM[(uint64_t *)_332] = _336;
  goto <bb 118>;

  <bb 117>:
  # DEBUG i8 => 4
  _338 = &h_39(D)->mb.cache.mv[i_list_8][4];
  MEM[(uint64_t *)_338] = 0;
  _340 = &h_39(D)->mb.cache.mv[i_list_8][6];
  MEM[(uint64_t *)_340] = 0;
  _342 = &h_39(D)->mb.cache.ref[i_list_8][4];
  MEM[(uint32_t *)_342] = 4278124286;
  pretmp_1059 = h_39(D)->mb.i_neighbour;

  <bb 118>:
  # prephitmp_1060 = PHI <_312(116), pretmp_1059(117)>
  _345 = prephitmp_1060 & 4;
  if (_345 != 0)
    goto <bb 119>;
  else
    goto <bb 120>;

  <bb 119>:
  # DEBUG i8 => 8
  ir_346 = i_top_8x8_68 + 2;
  # DEBUG ir => ir_346
  # DEBUG iv => i_top_4x4_63 + 4
  _348 = h_39(D)->mb.ref[i_list_8];
  _349 = (sizetype) ir_346;
  _350 = _348 + _349;
  _351 = *_350;
  h_39(D)->mb.cache.ref[i_list_8][8] = _351;
  _353 = &h_39(D)->mb.cache.mv[i_list_8][8];
  _354 = h_39(D)->mb.mv[i_list_8];
  _357 = _354 + _356;
  _358 = *_357;
  MEM[(uint32_t *)_353] = _358;
  goto <bb 121>;

  <bb 120>:
  # DEBUG i8 => 8
  h_39(D)->mb.cache.ref[i_list_8][8] = -2;
  _361 = &h_39(D)->mb.cache.mv[i_list_8][8];
  MEM[(uint32_t *)_361] = 0;

  <bb 121>:
  _363 = h_39(D)->mb.i_neighbour;
  _364 = _363 & 1;
  if (_364 != 0)
    goto <bb 123>;
  else
    goto <bb 122>;

  <bb 122>:
  # DEBUG i => 0
  h_39(D)->mb.cache.ref[i_list_8][11] = -2;
  _852 = &h_39(D)->mb.cache.mv[i_list_8][11];
  MEM[(uint32_t *)_852] = 0;
  # DEBUG i => 1
  # DEBUG i => 1
  h_39(D)->mb.cache.ref[i_list_8][19] = -2;
  _860 = &h_39(D)->mb.cache.mv[i_list_8][19];
  MEM[(uint32_t *)_860] = 0;
  # DEBUG i => 2
  # DEBUG i => 2
  h_39(D)->mb.cache.ref[i_list_8][27] = -2;
  _868 = &h_39(D)->mb.cache.mv[i_list_8][27];
  MEM[(uint32_t *)_868] = 0;
  # DEBUG i => 3
  # DEBUG i => 3
  h_39(D)->mb.cache.ref[i_list_8][35] = -2;
  _876 = &h_39(D)->mb.cache.mv[i_list_8][35];
  MEM[(uint32_t *)_876] = 0;
  # DEBUG i => 4
  # DEBUG i => 4
  goto <bb 124>;

  <bb 123>:
  # DEBUG i8 => 11
  ir_365 = i_mb_8x8_52 + -1;
  # DEBUG ir => ir_365
  # DEBUG iv => i_mb_4x4_48 + -1
  _367 = h_39(D)->mb.ref[i_list_8];
  _368 = (sizetype) ir_365;
  _369 = _367 + _368;
  _370 = *_369;
  h_39(D)->mb.cache.ref[i_list_8][19] = _370;
  h_39(D)->mb.cache.ref[i_list_8][11] = _370;
  _373 = s8x8_290 + ir_365;
  _374 = (sizetype) _373;
  _375 = _367 + _374;
  _376 = *_375;
  h_39(D)->mb.cache.ref[i_list_8][35] = _376;
  h_39(D)->mb.cache.ref[i_list_8][27] = _376;
  _379 = &h_39(D)->mb.cache.mv[i_list_8][11];
  _380 = h_39(D)->mb.mv[i_list_8];
  _383 = _380 + _382;
  _384 = *_383;
  MEM[(uint32_t *)_379] = _384;
  _386 = &h_39(D)->mb.cache.mv[i_list_8][19];
  _390 = _380 + _389;
  _391 = *_390;
  MEM[(uint32_t *)_386] = _391;
  _393 = &h_39(D)->mb.cache.mv[i_list_8][27];
  _398 = _380 + _397;
  _399 = *_398;
  MEM[(uint32_t *)_393] = _399;
  _401 = &h_39(D)->mb.cache.mv[i_list_8][35];
  _406 = _380 + _405;
  _407 = *_406;
  MEM[(uint32_t *)_401] = _407;

  <bb 124>:
  _415 = h_39(D)->param.b_cabac;
  if (_415 != 0)
    goto <bb 125>;
  else
    goto <bb 131>;

  <bb 125>:
  if (i_top_type_2 >= 0)
    goto <bb 126>;
  else
    goto <bb 127>;

  <bb 126>:
  # DEBUG i8 => 4
  # DEBUG iv => D#85
  _416 = &h_39(D)->mb.cache.mvd[i_list_8][4];
  _417 = h_39(D)->mb.mvd[i_list_8];
  _420 = _417 + _419;
  _421 = *_420;
  MEM[(uint64_t *)_416] = _421;
  _423 = &h_39(D)->mb.cache.mvd[i_list_8][6];
  _426 = _417 + _425;
  _427 = MEM[(uint64_t *)_426];
  MEM[(uint64_t *)_423] = _427;
  goto <bb 128>;

  <bb 127>:
  # DEBUG i8 => 4
  _429 = &h_39(D)->mb.cache.mvd[i_list_8][4];
  _430 = &h_39(D)->mb.cache.mvd[i_list_8][6];
  MEM[(uint64_t *)_430] = 0;
  MEM[(uint64_t *)_429] = 0;

  <bb 128>:
  if (i_left_type_3 >= 0)
    goto <bb 130>;
  else
    goto <bb 129>;

  <bb 129>:
  # DEBUG i => 0
  _823 = &h_39(D)->mb.cache.mvd[i_list_8][11];
  MEM[(uint32_t *)_823] = 0;
  # DEBUG i => 1
  # DEBUG i => 1
  _830 = &h_39(D)->mb.cache.mvd[i_list_8][19];
  MEM[(uint32_t *)_830] = 0;
  # DEBUG i => 2
  # DEBUG i => 2
  _837 = &h_39(D)->mb.cache.mvd[i_list_8][27];
  MEM[(uint32_t *)_837] = 0;
  # DEBUG i => 3
  # DEBUG i => 3
  _844 = &h_39(D)->mb.cache.mvd[i_list_8][35];
  MEM[(uint32_t *)_844] = 0;
  # DEBUG i => 4
  # DEBUG i => 4
  goto <bb 131>;

  <bb 130>:
  # DEBUG i8 => 11
  # DEBUG iv => i_mb_4x4_48 + -1
  _434 = &h_39(D)->mb.cache.mvd[i_list_8][11];
  _435 = h_39(D)->mb.mvd[i_list_8];
  _438 = _435 + _437;
  _439 = *_438;
  MEM[(uint32_t *)_434] = _439;
  _441 = &h_39(D)->mb.cache.mvd[i_list_8][19];
  _445 = _435 + _444;
  _446 = *_445;
  MEM[(uint32_t *)_441] = _446;
  _448 = &h_39(D)->mb.cache.mvd[i_list_8][27];
  _453 = _435 + _452;
  _454 = *_453;
  MEM[(uint32_t *)_448] = _454;
  _456 = &h_39(D)->mb.cache.mvd[i_list_8][35];
  _461 = _435 + _460;
  _462 = *_461;
  MEM[(uint32_t *)_456] = _462;

  <bb 131>:
  i_list_469 = i_list_8 + 1;
  # DEBUG i_list => i_list_469
  pretmp_1057 = h_39(D)->sh.i_type;

  <bb 132>:
  # i_list_8 = PHI <0(111), i_list_469(131)>
  # prephitmp_1058 = PHI <_289(111), pretmp_1057(131)>
  # DEBUG i_list => i_list_8
  if (prephitmp_1058 == 1)
    goto <bb 133>;
  else
    goto <bb 134>;

  <bb 133>:

  <bb 134>:
  # iftmp.18_11 = PHI <2(133), 1(132)>
  if (i_list_8 < iftmp.18_11)
    goto <bb 112>;
  else
    goto <bb 135>;

  <bb 135>:
  # prephitmp_699 = PHI <prephitmp_1058(134)>
  if (prephitmp_699 == 1)
    goto <bb 136>;
  else
    goto <bb 141>;

  <bb 136>:
  _470 = h_39(D)->param.b_cabac;
  if (_470 != 0)
    goto <bb 137>;
  else
    goto <bb 149>;

  <bb 137>:
  _471 = &h_39(D)->mb.cache.skip;
  # DEBUG __dest => _471
  # DEBUG __ch => 0
  # DEBUG __len => 48
  __builtin_memset (_471, 0, 48);
  # DEBUG __dest => NULL
  # DEBUG __ch => NULL
  # DEBUG __len => NULL
  if (i_left_type_3 >= 0)
    goto <bb 138>;
  else
    goto <bb 139>;

  <bb 138>:
  _473 = h_39(D)->mb.skipbp;
  _474 = (sizetype) i_left_xy_1;
  _475 = _473 + _474;
  _476 = *_475;
  # DEBUG skipbp => (uint8_t) _476
  _477 = _476 & 2;
  h_39(D)->mb.cache.skip[11] = _477;
  _479 = _476 & 8;
  h_39(D)->mb.cache.skip[27] = _479;

  <bb 139>:
  if (i_top_type_2 >= 0)
    goto <bb 140>;
  else
    goto <bb 149>;

  <bb 140>:
  _481 = h_39(D)->mb.skipbp;
  _482 = (sizetype) i_top_xy_57;
  _483 = _481 + _482;
  _484 = *_483;
  # DEBUG skipbp => (uint8_t) _484
  _485 = _484 & 4;
  h_39(D)->mb.cache.skip[4] = _485;
  _487 = _484 & 8;
  h_39(D)->mb.cache.skip[6] = _487;
  goto <bb 150>;

  <bb 141>:
  if (prephitmp_699 == 0)
    goto <bb 142>;
  else
    goto <bb 150>;

  <bb 142>:
  _489 = &h_39(D)->mb.cache.pskip_mv;
  x264_mb_predict_mv_pskip (h_39(D), _489);

  <bb 143>:
  _491 = h_39(D)->mb.i_neighbour;
  _492 = _491 & 11;
  _493 = _491 & 2;
  if (_493 != 0)
    goto <bb 151>;
  else
    goto <bb 144>;

  <bb 144>:
  # iftmp.22_13 = PHI <15(151), 1(143)>
  # cstore_414 = PHI <_906(151), _492(143)>
  h_39(D)->mb.i_neighbour4[0] = cstore_414;
  h_39(D)->mb.i_neighbour8[0] = cstore_414;
  h_39(D)->mb.i_neighbour4[1] = iftmp.22_13;
  h_39(D)->mb.i_neighbour4[4] = iftmp.22_13;
  _499 = _491 & 1;
  if (_499 != 0)
    goto <bb 145>;
  else
    goto <bb 146>;

  <bb 145>:

  <bb 146>:
  # iftmp.23_14 = PHI <15(145), 6(144)>
  h_39(D)->mb.i_neighbour8[2] = iftmp.23_14;
  h_39(D)->mb.i_neighbour4[10] = iftmp.23_14;
  h_39(D)->mb.i_neighbour4[8] = iftmp.23_14;
  h_39(D)->mb.i_neighbour4[2] = iftmp.23_14;
  _504 = _491 & 4;
  if (_493 != 0)
    goto <bb 148>;
  else
    goto <bb 147>;

  <bb 147>:

  <bb 148>:
  # iftmp.24_15 = PHI <10(146), 0(147)>
  _903 = _504 | 1;
  _506 = iftmp.24_15 | _903;
  h_39(D)->mb.i_neighbour8[1] = _506;
  h_39(D)->mb.i_neighbour4[5] = _506;
  return;

  <bb 149>:

  <bb 150>:
  goto <bb 143>;

  <bb 151>:
  _906 = _492 | 4;
  goto <bb 144>;

  <bb 152>:
  # DEBUG h => h_39(D)
  # DEBUG i_mb_x => i_mb_x_43(D)
  # DEBUG i_mb_y => i_mb_y_41(D)
  # DEBUG i => 0
  # DEBUG w => 16
  _679 = h_39(D)->fdec;
  i_stride_819 = _679->i_stride[0];
  # DEBUG i_stride => i_stride_819
  i_stride2_673 = i_stride_819 << prephitmp_1031;
  # DEBUG i_stride2 => i_stride2_673
  goto <bb 35>;

}



;; Function x264_macroblock_cache_save (x264_macroblock_cache_save, funcdef_no=138, decl_uid=5542, cgraph_uid=138, symbol_order=181)


Analyzing loop at common/macroblock.c:1467
common/macroblock.c:1467:17: note: ===== analyze_loop_nest =====
common/macroblock.c:1467:17: note: === vect_analyze_loop_form ===
common/macroblock.c:1467:17: note: === get_loop_niters ===
Analyzing # of iterations of loop 10
  exit condition [3, + , 4294967295] != 0
  bounds on difference of bases: -3 ... -3
  result:
    # of iterations 3, bounded by 3
common/macroblock.c:1467:17: note: === vect_analyze_data_refs ===
Creating dr for h_31(D)->mb.i_sub_partition[i_427]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:494, generic-match.c:3721
success.
	base_address: h_31(D)
	offset from base address: 0
	constant offset from base address: 11792
	step: 4
	aligned to: 128
	base_object: *h_31(D)
	Access function 0: {0, +, 1}_10
	Access function 1: 7296
	Access function 2: 87040
common/macroblock.c:1467:17: note: got vectype for stmt: _322 = h_31(D)->mb.i_sub_partition[i_427];
vector(4) int
common/macroblock.c:1467:17: note: === vect_analyze_scalar_cycles ===
common/macroblock.c:1467:17: note: Analyze phi: i_427 = PHI <0(68), i_327(70)>

common/macroblock.c:1467:17: note: Access function of PHI: {0, +, 1}_10
common/macroblock.c:1467:17: note: step: 1,  init: 0
common/macroblock.c:1467:17: note: Detected induction.
common/macroblock.c:1467:17: note: Analyze phi: skipbp_440 = PHI <0(68), skipbp_326(70)>

common/macroblock.c:1467:17: note: Access function of PHI: skipbp_440
common/macroblock.c:1467:17: note: Analyze phi: ivtmp_490 = PHI <4(68), ivtmp_489(70)>

common/macroblock.c:1467:17: note: Access function of PHI: {4, +, 4294967295}_10
common/macroblock.c:1467:17: note: step: 4294967295,  init: 4
common/macroblock.c:1467:17: note: Detected induction.
common/macroblock.c:1467:17: note: Analyze phi: skipbp_440 = PHI <0(68), skipbp_326(70)>

common/macroblock.c:1467:17: note: detected reduction: skipbp_326 = _325 | skipbp_440;

common/macroblock.c:1467:17: note: Detected reduction.
common/macroblock.c:1467:17: note: === vect_pattern_recog ===
common/macroblock.c:1467:17: note: vect_is_simple_use: operand _323
common/macroblock.c:1467:17: note: def_stmt: _323 = _322 == 12;
common/macroblock.c:1467:17: note: type of def: 3.
common/macroblock.c:1467:17: note: vect_recog_bool_pattern: detected:
common/macroblock.c:1467:17: note: pattern recognized: patt_471 = (int) patt_472;
common/macroblock.c:1467:17: note: additional pattern stmt: patt_472 = _322 == 12 ? 1 : 0;
common/macroblock.c:1467:17: note: === vect_analyze_data_ref_accesses ===
common/macroblock.c:1467:17: note: === vect_mark_stmts_to_be_vectorized ===
common/macroblock.c:1467:17: note: init: phi relevant? i_427 = PHI <0(68), i_327(70)>
common/macroblock.c:1467:17: note: init: phi relevant? skipbp_440 = PHI <0(68), skipbp_326(70)>
common/macroblock.c:1467:17: note: init: phi relevant? ivtmp_490 = PHI <4(68), ivtmp_489(70)>
common/macroblock.c:1467:17: note: init: stmt relevant? # DEBUG skipbp => skipbp_440
common/macroblock.c:1467:17: note: init: stmt relevant? # DEBUG i => i_427
common/macroblock.c:1467:17: note: init: stmt relevant? _322 = h_31(D)->mb.i_sub_partition[i_427];
common/macroblock.c:1467:17: note: init: stmt relevant? _323 = _322 == 12;
common/macroblock.c:1467:17: note: init: stmt relevant? _324 = (int) _323;
common/macroblock.c:1467:17: note: init: stmt relevant? _325 = _324 << i_427;
common/macroblock.c:1467:17: note: init: stmt relevant? skipbp_326 = _325 | skipbp_440;
common/macroblock.c:1467:17: note: vec_stmt_relevant_p: used out of loop.
common/macroblock.c:1467:17: note: mark relevant 0, live 1.
common/macroblock.c:1467:17: note: init: stmt relevant? # DEBUG skipbp => skipbp_326
common/macroblock.c:1467:17: note: init: stmt relevant? i_327 = i_427 + 1;
common/macroblock.c:1467:17: note: init: stmt relevant? # DEBUG i => i_327
common/macroblock.c:1467:17: note: init: stmt relevant? # DEBUG skipbp => skipbp_326
common/macroblock.c:1467:17: note: init: stmt relevant? # DEBUG i => i_327
common/macroblock.c:1467:17: note: init: stmt relevant? ivtmp_489 = ivtmp_490 - 1;
common/macroblock.c:1467:17: note: init: stmt relevant? if (ivtmp_489 != 0)
common/macroblock.c:1467:17: note: worklist: examine stmt: skipbp_326 = _325 | skipbp_440;
common/macroblock.c:1467:17: note: vect_is_simple_use: operand _325
common/macroblock.c:1467:17: note: def_stmt: _325 = _324 << i_427;
common/macroblock.c:1467:17: note: type of def: 3.
common/macroblock.c:1467:17: note: mark relevant 3, live 0.
common/macroblock.c:1467:17: note: vect_is_simple_use: operand skipbp_440
common/macroblock.c:1467:17: note: def_stmt: skipbp_440 = PHI <0(68), skipbp_326(70)>
common/macroblock.c:1467:17: note: type of def: 5.
common/macroblock.c:1467:17: note: mark relevant 3, live 0.
common/macroblock.c:1467:17: note: worklist: examine stmt: skipbp_440 = PHI <0(68), skipbp_326(70)>
common/macroblock.c:1467:17: note: vect_is_simple_use: operand 0
common/macroblock.c:1467:17: note: vect_is_simple_use: operand skipbp_326
common/macroblock.c:1467:17: note: def_stmt: skipbp_326 = _325 | skipbp_440;
common/macroblock.c:1467:17: note: type of def: 5.
common/macroblock.c:1467:17: note: reduc-stmt defining reduc-phi in the same nest.
common/macroblock.c:1467:17: note: worklist: examine stmt: _325 = _324 << i_427;
common/macroblock.c:1467:17: note: vect_is_simple_use: operand _324
common/macroblock.c:1467:17: note: def_stmt: _324 = (int) _323;
common/macroblock.c:1467:17: note: type of def: 3.
common/macroblock.c:1467:17: note: mark relevant 3, live 0.
common/macroblock.c:1467:17: note: last stmt in pattern. don't mark relevant/live.
common/macroblock.c:1467:17: note: vect_is_simple_use: operand i_427
common/macroblock.c:1467:17: note: def_stmt: i_427 = PHI <0(68), i_327(70)>
common/macroblock.c:1467:17: note: type of def: 4.
common/macroblock.c:1467:17: note: mark relevant 3, live 0.
common/macroblock.c:1467:17: note: worklist: examine stmt: i_427 = PHI <0(68), i_327(70)>
common/macroblock.c:1467:17: note: vect_is_simple_use: operand 0
common/macroblock.c:1467:17: note: vect_is_simple_use: operand i_327
common/macroblock.c:1467:17: note: def_stmt: i_327 = i_427 + 1;
common/macroblock.c:1467:17: note: type of def: 3.
common/macroblock.c:1467:17: note: mark relevant 3, live 0.
common/macroblock.c:1467:17: note: worklist: examine stmt: i_327 = i_427 + 1;
common/macroblock.c:1467:17: note: vect_is_simple_use: operand i_427
common/macroblock.c:1467:17: note: def_stmt: i_427 = PHI <0(68), i_327(70)>
common/macroblock.c:1467:17: note: type of def: 4.
common/macroblock.c:1467:17: note: mark relevant 3, live 0.
common/macroblock.c:1467:17: note: already marked relevant/live.
common/macroblock.c:1467:17: note: worklist: examine stmt: patt_471 = (int) patt_472;
common/macroblock.c:1467:17: note: vect_is_simple_use: operand patt_472
common/macroblock.c:1467:17: note: def_stmt: patt_472 = _322 == 12 ? 1 : 0;
common/macroblock.c:1467:17: note: type of def: 3.
common/macroblock.c:1467:17: note: mark relevant 3, live 0.
common/macroblock.c:1467:17: note: worklist: examine stmt: patt_472 = _322 == 12 ? 1 : 0;
common/macroblock.c:1467:17: note: vect_is_simple_use: operand _322
common/macroblock.c:1467:17: note: def_stmt: _322 = h_31(D)->mb.i_sub_partition[i_427];
common/macroblock.c:1467:17: note: type of def: 3.
common/macroblock.c:1467:17: note: mark relevant 3, live 0.
common/macroblock.c:1467:17: note: vect_is_simple_use: operand 12
common/macroblock.c:1467:17: note: vect_is_simple_use: operand 1
common/macroblock.c:1467:17: note: vect_is_simple_use: operand 0
common/macroblock.c:1467:17: note: worklist: examine stmt: _322 = h_31(D)->mb.i_sub_partition[i_427];
common/macroblock.c:1467:17: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _322 = h_31(D)->mb.i_sub_partition[i_427];
  stmt_b: _322 = h_31(D)->mb.i_sub_partition[i_427];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_10)
  (chrec_b = {0, +, 1}_10)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 7296)
  (chrec_b = 7296)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 87040)
  (chrec_b = 87040)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/macroblock.c:1467:17: note: === vect_determine_vectorization_factor ===
common/macroblock.c:1467:17: note: ==> examining phi: i_427 = PHI <0(68), i_327(70)>

common/macroblock.c:1467:17: note: get vectype for scalar type:  int
common/macroblock.c:1467:17: note: vectype: vector(4) int
common/macroblock.c:1467:17: note: nunits = 4
common/macroblock.c:1467:17: note: ==> examining phi: skipbp_440 = PHI <0(68), skipbp_326(70)>

common/macroblock.c:1467:17: note: get vectype for scalar type:  int
common/macroblock.c:1467:17: note: vectype: vector(4) int
common/macroblock.c:1467:17: note: nunits = 4
common/macroblock.c:1467:17: note: ==> examining phi: ivtmp_490 = PHI <4(68), ivtmp_489(70)>

common/macroblock.c:1467:17: note: ==> examining statement: # DEBUG skipbp => skipbp_440

common/macroblock.c:1467:17: note: skip.
common/macroblock.c:1467:17: note: ==> examining statement: # DEBUG i => i_427

common/macroblock.c:1467:17: note: skip.
common/macroblock.c:1467:17: note: ==> examining statement: _322 = h_31(D)->mb.i_sub_partition[i_427];

common/macroblock.c:1467:17: note: get vectype for scalar type:  int
common/macroblock.c:1467:17: note: vectype: vector(4) int
common/macroblock.c:1467:17: note: nunits = 4
common/macroblock.c:1467:17: note: ==> examining statement: _323 = _322 == 12;

common/macroblock.c:1467:17: note: ==> examining pattern statement: patt_472 = _322 == 12 ? 1 : 0;

common/macroblock.c:1467:17: note: get vectype for scalar type:  unsigned int
common/macroblock.c:1467:17: note: vectype: vector(4) unsigned int
common/macroblock.c:1467:17: note: get vectype for scalar type:  unsigned int
common/macroblock.c:1467:17: note: vectype: vector(4) unsigned int
common/macroblock.c:1467:17: note: nunits = 4
common/macroblock.c:1467:17: note: ==> examining statement: _324 = (int) _323;

common/macroblock.c:1467:17: note: ==> examining pattern statement: patt_471 = (int) patt_472;

common/macroblock.c:1467:17: note: get vectype for scalar type:  int
common/macroblock.c:1467:17: note: vectype: vector(4) int
common/macroblock.c:1467:17: note: nunits = 4
common/macroblock.c:1467:17: note: ==> examining statement: _325 = _324 << i_427;

common/macroblock.c:1467:17: note: get vectype for scalar type:  int
common/macroblock.c:1467:17: note: vectype: vector(4) int
common/macroblock.c:1467:17: note: get vectype for scalar type:  int
common/macroblock.c:1467:17: note: vectype: vector(4) int
common/macroblock.c:1467:17: note: nunits = 4
common/macroblock.c:1467:17: note: ==> examining statement: skipbp_326 = _325 | skipbp_440;

common/macroblock.c:1467:17: note: get vectype for scalar type:  int
common/macroblock.c:1467:17: note: vectype: vector(4) int
common/macroblock.c:1467:17: note: get vectype for scalar type:  int
common/macroblock.c:1467:17: note: vectype: vector(4) int
common/macroblock.c:1467:17: note: nunits = 4
common/macroblock.c:1467:17: note: ==> examining statement: # DEBUG skipbp => skipbp_326

common/macroblock.c:1467:17: note: skip.
common/macroblock.c:1467:17: note: ==> examining statement: i_327 = i_427 + 1;

common/macroblock.c:1467:17: note: get vectype for scalar type:  int
common/macroblock.c:1467:17: note: vectype: vector(4) int
common/macroblock.c:1467:17: note: get vectype for scalar type:  int
common/macroblock.c:1467:17: note: vectype: vector(4) int
common/macroblock.c:1467:17: note: nunits = 4
common/macroblock.c:1467:17: note: ==> examining statement: # DEBUG i => i_327

common/macroblock.c:1467:17: note: skip.
common/macroblock.c:1467:17: note: ==> examining statement: # DEBUG skipbp => skipbp_326

common/macroblock.c:1467:17: note: skip.
common/macroblock.c:1467:17: note: ==> examining statement: # DEBUG i => i_327

common/macroblock.c:1467:17: note: skip.
common/macroblock.c:1467:17: note: ==> examining statement: ivtmp_489 = ivtmp_490 - 1;

common/macroblock.c:1467:17: note: skip.
common/macroblock.c:1467:17: note: ==> examining statement: if (ivtmp_489 != 0)

common/macroblock.c:1467:17: note: skip.
common/macroblock.c:1467:17: note: vectorization factor = 4
common/macroblock.c:1467:17: note: === vect_analyze_data_refs_alignment ===
common/macroblock.c:1467:17: note: vect_compute_data_ref_alignment:
common/macroblock.c:1467:17: note: misalign = 0 bytes of ref h_31(D)->mb.i_sub_partition[i_427]
common/macroblock.c:1467:17: note: === vect_prune_runtime_alias_test_list ===
common/macroblock.c:1467:17: note: === vect_enhance_data_refs_alignment ===
common/macroblock.c:1467:17: note: vect_can_advance_ivs_p:
common/macroblock.c:1467:17: note: Analyze phi: i_427 = PHI <0(68), i_327(70)>

common/macroblock.c:1467:17: note: Analyze phi: skipbp_440 = PHI <0(68), skipbp_326(70)>

common/macroblock.c:1467:17: note: reduc phi. skip.
common/macroblock.c:1467:17: note: Analyze phi: ivtmp_490 = PHI <4(68), ivtmp_489(70)>

common/macroblock.c:1467:17: note: vect_model_load_cost: aligned.
common/macroblock.c:1467:17: note: vect_get_data_access_cost: inside_cost = 1, outside_cost = 0.
common/macroblock.c:1467:17: note: === vect_analyze_slp ===
common/macroblock.c:1467:17: note: === vect_make_slp_decision ===
common/macroblock.c:1467:17: note: === vect_detect_hybrid_slp ===
common/macroblock.c:1467:17: note: === vect_analyze_loop_operations ===
common/macroblock.c:1467:17: note: examining phi: i_427 = PHI <0(68), i_327(70)>

common/macroblock.c:1467:17: note: === vectorizable_induction ===
common/macroblock.c:1467:17: note: vect_model_induction_cost: inside_cost = 1, prologue_cost = 2 .
common/macroblock.c:1467:17: note: examining phi: skipbp_440 = PHI <0(68), skipbp_326(70)>

common/macroblock.c:1467:17: note: examining phi: ivtmp_490 = PHI <4(68), ivtmp_489(70)>

common/macroblock.c:1467:17: note: ==> examining statement: # DEBUG skipbp => skipbp_440
common/macroblock.c:1467:17: note: irrelevant.
common/macroblock.c:1467:17: note: ==> examining statement: # DEBUG i => i_427
common/macroblock.c:1467:17: note: irrelevant.
common/macroblock.c:1467:17: note: ==> examining statement: _322 = h_31(D)->mb.i_sub_partition[i_427];
common/macroblock.c:1467:17: note: num. args = 4 (not unary/binary/ternary op).
common/macroblock.c:1467:17: note: vect_is_simple_use: operand h_31(D)->mb.i_sub_partition[i_427]
common/macroblock.c:1467:17: note: not ssa-name.
common/macroblock.c:1467:17: note: use not simple.
common/macroblock.c:1467:17: note: vect_model_load_cost: aligned.
common/macroblock.c:1467:17: note: vect_model_load_cost: inside_cost = 1, prologue_cost = 0 .
common/macroblock.c:1467:17: note: ==> examining statement: _323 = _322 == 12;
common/macroblock.c:1467:17: note: ==> examining pattern statement: patt_472 = _322 == 12 ? 1 : 0;
common/macroblock.c:1467:17: note: vect_is_simple_use: operand _322 == 12
common/macroblock.c:1467:17: note: not ssa-name.
common/macroblock.c:1467:17: note: use not simple.
common/macroblock.c:1467:17: note: vect_is_simple_use: operand _322
common/macroblock.c:1467:17: note: def_stmt: _322 = h_31(D)->mb.i_sub_partition[i_427];
common/macroblock.c:1467:17: note: type of def: 3.
common/macroblock.c:1467:17: note: ==> examining statement: _324 = (int) _323;
common/macroblock.c:1467:17: note: ==> examining pattern statement: patt_471 = (int) patt_472;
common/macroblock.c:1467:17: note: vect_is_simple_use: operand patt_472
common/macroblock.c:1467:17: note: def_stmt: patt_472 = _322 == 12 ? 1 : 0;
common/macroblock.c:1467:17: note: type of def: 3.
common/macroblock.c:1467:17: note: vect_is_simple_use: operand patt_472
common/macroblock.c:1467:17: note: def_stmt: patt_472 = _322 == 12 ? 1 : 0;
common/macroblock.c:1467:17: note: type of def: 3.
common/macroblock.c:1467:17: note: no optab.
common/macroblock.c:1467:17: note: vect_is_simple_use: operand patt_472
common/macroblock.c:1467:17: note: def_stmt: patt_472 = _322 == 12 ? 1 : 0;
common/macroblock.c:1467:17: note: type of def: 3.
common/macroblock.c:1467:17: note: === vectorizable_assignment ===
common/macroblock.c:1467:17: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
common/macroblock.c:1467:17: note: ==> examining statement: _325 = _324 << i_427;
common/macroblock.c:1467:17: note: vect_is_simple_use: operand _324
common/macroblock.c:1467:17: note: def_stmt: _324 = (int) _323;
common/macroblock.c:1467:17: note: type of def: 3.
common/macroblock.c:1467:17: note: vect_is_simple_use: operand i_427
common/macroblock.c:1467:17: note: def_stmt: i_427 = PHI <0(68), i_327(70)>
common/macroblock.c:1467:17: note: type of def: 4.
common/macroblock.c:1467:17: note: operand mode requires invariant argument.
common/macroblock.c:1467:17: note: vect_is_simple_use: operand _324
common/macroblock.c:1467:17: note: def_stmt: _324 = (int) _323;
common/macroblock.c:1467:17: note: type of def: 3.
common/macroblock.c:1467:17: note: vect_is_simple_use: operand i_427
common/macroblock.c:1467:17: note: def_stmt: i_427 = PHI <0(68), i_327(70)>
common/macroblock.c:1467:17: note: type of def: 4.
common/macroblock.c:1467:17: note: not vectorized: relevant stmt not supported: _325 = _324 << i_427;
common/macroblock.c:1467:17: note: bad operation or unsupported loop bound.

Analyzing loop at common/macroblock.c:1453
common/macroblock.c:1453:17: note: ===== analyze_loop_nest =====
common/macroblock.c:1453:17: note: === vect_analyze_loop_form ===
common/macroblock.c:1453:17: note: === get_loop_niters ===
Analyzing # of iterations of loop 7
  exit condition [3, + , 4294967295] != 0
  bounds on difference of bases: -3 ... -3
  result:
    # of iterations 3, bounded by 3
common/macroblock.c:1453:17: note: === vect_analyze_data_refs ===
Creating dr for *_308
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: (uint64_t *) pretmp_509 + (sizetype) ((long unsigned int) i_mb_4x4_38 * 4)
	offset from base address: 0
	constant offset from base address: 0
	step: (ssizetype) ((long unsigned int) s4x4_37 * 4)
	aligned to: 128
	base_object: *(uint64_t *) pretmp_509 + (sizetype) ((long unsigned int) i_mb_4x4_38 * 4)
	Access function 0: {0B, +, (long unsigned int) s4x4_37 * 4}_7
Creating dr for MEM[(uint64_t *)_312]
analyze_innermost: Applying pattern match.pd:724, generic-match.c:1428
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
success.
Applying pattern match.pd:49, generic-match.c:3223
	base_address: pretmp_509 + (sizetype) i_mb_4x4_38 * 4
	offset from base address: 0
	constant offset from base address: 8
	step: (ssizetype) ((long unsigned int) s4x4_37 * 4)
	aligned to: 128
	base_object: MEM[(uint64_t *)pretmp_509 + (sizetype) i_mb_4x4_38 * 4]
	Access function 0: {8B, +, (long unsigned int) s4x4_37 * 4}_7
common/macroblock.c:1453:17: note: got vectype for stmt: *_308 = 0;
vector(2) long unsigned int
common/macroblock.c:1453:17: note: not vectorized: not suitable for strided load *_308 = 0;

common/macroblock.c:1453:17: note: bad data references.

Analyzing loop at common/macroblock.c:1447
common/macroblock.c:1447:13: note: ===== analyze_loop_nest =====
common/macroblock.c:1447:13: note: === vect_analyze_loop_form ===
common/macroblock.c:1447:13: note: === get_loop_niters ===
Analyzing # of iterations of loop 6
  exit condition [3, + , 4294967295] != 0
  bounds on difference of bases: -3 ... -3
  result:
    # of iterations 3, bounded by 3
common/macroblock.c:1447:13: note: === vect_analyze_data_refs ===
Creating dr for *_295
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: (uint64_t *) pretmp_505 + (sizetype) ((long unsigned int) i_mb_4x4_38 * 4)
	offset from base address: 0
	constant offset from base address: 0
	step: (ssizetype) ((long unsigned int) s4x4_37 * 4)
	aligned to: 128
	base_object: *(uint64_t *) pretmp_505 + (sizetype) ((long unsigned int) i_mb_4x4_38 * 4)
	Access function 0: {0B, +, (long unsigned int) s4x4_37 * 4}_6
Creating dr for MEM[(uint64_t *)_299]
analyze_innermost: Applying pattern match.pd:724, generic-match.c:1428
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
success.
Applying pattern match.pd:49, generic-match.c:3223
	base_address: pretmp_505 + (sizetype) i_mb_4x4_38 * 4
	offset from base address: 0
	constant offset from base address: 8
	step: (ssizetype) ((long unsigned int) s4x4_37 * 4)
	aligned to: 128
	base_object: MEM[(uint64_t *)pretmp_505 + (sizetype) i_mb_4x4_38 * 4]
	Access function 0: {8B, +, (long unsigned int) s4x4_37 * 4}_6
common/macroblock.c:1447:13: note: got vectype for stmt: *_295 = 0;
vector(2) long unsigned int
common/macroblock.c:1447:13: note: not vectorized: not suitable for strided load *_295 = 0;

common/macroblock.c:1447:13: note: bad data references.

Analyzing loop at common/macroblock.c:1439
common/macroblock.c:1439:17: note: ===== analyze_loop_nest =====
common/macroblock.c:1439:17: note: === vect_analyze_loop_form ===
common/macroblock.c:1439:17: note: === get_loop_niters ===
Analyzing # of iterations of loop 9
  exit condition [3, + , 4294967295] != 0
  bounds on difference of bases: -3 ... -3
  result:
    # of iterations 3, bounded by 3
common/macroblock.c:1439:17: note: === vect_analyze_data_refs ===
Creating dr for MEM[(uint64_t *)_279]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:49, generic-match.c:4015
success.
Applying pattern match.pd:49, generic-match.c:4015
	base_address: h_31(D)
	offset from base address: 0
	constant offset from base address: 19824
	step: 32
	aligned to: 128
	base_object: MEM[(uint64_t *)h_31(D)]
	Access function 0: {19824B, +, 32}_9
Creating dr for *_276
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: (uint64_t *) pretmp_520 + (sizetype) ((long unsigned int) i_mb_4x4_38 * 4)
	offset from base address: 0
	constant offset from base address: 0
	step: (ssizetype) ((long unsigned int) s4x4_37 * 4)
	aligned to: 128
	base_object: *(uint64_t *) pretmp_520 + (sizetype) ((long unsigned int) i_mb_4x4_38 * 4)
	Access function 0: {0B, +, (long unsigned int) s4x4_37 * 4}_9
Creating dr for MEM[(uint64_t *)_286]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:49, generic-match.c:4015
success.
Applying pattern match.pd:49, generic-match.c:4015
	base_address: h_31(D)
	offset from base address: 0
	constant offset from base address: 19832
	step: 32
	aligned to: 128
	base_object: MEM[(uint64_t *)h_31(D)]
	Access function 0: {19832B, +, 32}_9
Creating dr for MEM[(uint64_t *)_284]
analyze_innermost: Applying pattern match.pd:724, generic-match.c:1428
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
success.
Applying pattern match.pd:49, generic-match.c:3223
	base_address: pretmp_520 + (sizetype) i_mb_4x4_38 * 4
	offset from base address: 0
	constant offset from base address: 8
	step: (ssizetype) ((long unsigned int) s4x4_37 * 4)
	aligned to: 128
	base_object: MEM[(uint64_t *)pretmp_520 + (sizetype) i_mb_4x4_38 * 4]
	Access function 0: {8B, +, (long unsigned int) s4x4_37 * 4}_9
common/macroblock.c:1439:17: note: got vectype for stmt: _280 = MEM[(uint64_t *)_279];
vector(2) long unsigned int
common/macroblock.c:1439:17: note: got vectype for stmt: *_276 = _280;
vector(2) long unsigned int
common/macroblock.c:1439:17: note: not vectorized: not suitable for strided load *_276 = _280;

common/macroblock.c:1439:17: note: bad data references.

Analyzing loop at common/macroblock.c:1433
common/macroblock.c:1433:13: note: ===== analyze_loop_nest =====
common/macroblock.c:1433:13: note: === vect_analyze_loop_form ===
common/macroblock.c:1433:13: note: === get_loop_niters ===
Analyzing # of iterations of loop 8
  exit condition [3, + , 4294967295] != 0
  bounds on difference of bases: -3 ... -3
  result:
    # of iterations 3, bounded by 3
common/macroblock.c:1433:13: note: === vect_analyze_data_refs ===
Creating dr for MEM[(uint64_t *)_259]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:49, generic-match.c:4015
success.
Applying pattern match.pd:49, generic-match.c:4015
	base_address: h_31(D)
	offset from base address: 0
	constant offset from base address: 19632
	step: 32
	aligned to: 128
	base_object: MEM[(uint64_t *)h_31(D)]
	Access function 0: {19632B, +, 32}_8
Creating dr for *_256
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: (uint64_t *) pretmp_513 + (sizetype) ((long unsigned int) i_mb_4x4_38 * 4)
	offset from base address: 0
	constant offset from base address: 0
	step: (ssizetype) ((long unsigned int) s4x4_37 * 4)
	aligned to: 128
	base_object: *(uint64_t *) pretmp_513 + (sizetype) ((long unsigned int) i_mb_4x4_38 * 4)
	Access function 0: {0B, +, (long unsigned int) s4x4_37 * 4}_8
Creating dr for MEM[(uint64_t *)_266]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:49, generic-match.c:4015
success.
Applying pattern match.pd:49, generic-match.c:4015
	base_address: h_31(D)
	offset from base address: 0
	constant offset from base address: 19640
	step: 32
	aligned to: 128
	base_object: MEM[(uint64_t *)h_31(D)]
	Access function 0: {19640B, +, 32}_8
Creating dr for MEM[(uint64_t *)_264]
analyze_innermost: Applying pattern match.pd:724, generic-match.c:1428
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
success.
Applying pattern match.pd:49, generic-match.c:3223
	base_address: pretmp_513 + (sizetype) i_mb_4x4_38 * 4
	offset from base address: 0
	constant offset from base address: 8
	step: (ssizetype) ((long unsigned int) s4x4_37 * 4)
	aligned to: 128
	base_object: MEM[(uint64_t *)pretmp_513 + (sizetype) i_mb_4x4_38 * 4]
	Access function 0: {8B, +, (long unsigned int) s4x4_37 * 4}_8
common/macroblock.c:1433:13: note: got vectype for stmt: _260 = MEM[(uint64_t *)_259];
vector(2) long unsigned int
common/macroblock.c:1433:13: note: got vectype for stmt: *_256 = _260;
vector(2) long unsigned int
common/macroblock.c:1433:13: note: not vectorized: not suitable for strided load *_256 = _260;

common/macroblock.c:1433:13: note: bad data references.

Analyzing loop at common/macroblock.c:1401
common/macroblock.c:1401:17: note: ===== analyze_loop_nest =====
common/macroblock.c:1401:17: note: === vect_analyze_loop_form ===
common/macroblock.c:1401:17: note: === get_loop_niters ===
Analyzing # of iterations of loop 5
  exit condition [3, + , 4294967295] != 0
  bounds on difference of bases: -3 ... -3
  result:
    # of iterations 3, bounded by 3
common/macroblock.c:1401:17: note: === vect_analyze_data_refs ===
Creating dr for MEM[(uint64_t *)_206]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:49, generic-match.c:4015
success.
Applying pattern match.pd:49, generic-match.c:4015
	base_address: h_31(D)
	offset from base address: 0
	constant offset from base address: 19440
	step: 32
	aligned to: 128
	base_object: MEM[(uint64_t *)h_31(D)]
	Access function 0: {19440B, +, 32}_5
Creating dr for *_203
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: (uint64_t *) pretmp_534 + (sizetype) ((long unsigned int) i_mb_4x4_38 * 4)
	offset from base address: 0
	constant offset from base address: 0
	step: (ssizetype) ((long unsigned int) s4x4_37 * 4)
	aligned to: 128
	base_object: *(uint64_t *) pretmp_534 + (sizetype) ((long unsigned int) i_mb_4x4_38 * 4)
	Access function 0: {0B, +, (long unsigned int) s4x4_37 * 4}_5
Creating dr for MEM[(uint64_t *)_213]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:49, generic-match.c:4015
success.
Applying pattern match.pd:49, generic-match.c:4015
	base_address: h_31(D)
	offset from base address: 0
	constant offset from base address: 19448
	step: 32
	aligned to: 128
	base_object: MEM[(uint64_t *)h_31(D)]
	Access function 0: {19448B, +, 32}_5
Creating dr for MEM[(uint64_t *)_211]
analyze_innermost: Applying pattern match.pd:724, generic-match.c:1428
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
success.
Applying pattern match.pd:49, generic-match.c:3223
	base_address: pretmp_534 + (sizetype) i_mb_4x4_38 * 4
	offset from base address: 0
	constant offset from base address: 8
	step: (ssizetype) ((long unsigned int) s4x4_37 * 4)
	aligned to: 128
	base_object: MEM[(uint64_t *)pretmp_534 + (sizetype) i_mb_4x4_38 * 4]
	Access function 0: {8B, +, (long unsigned int) s4x4_37 * 4}_5
common/macroblock.c:1401:17: note: got vectype for stmt: _207 = MEM[(uint64_t *)_206];
vector(2) long unsigned int
common/macroblock.c:1401:17: note: got vectype for stmt: *_203 = _207;
vector(2) long unsigned int
common/macroblock.c:1401:17: note: not vectorized: not suitable for strided load *_203 = _207;

common/macroblock.c:1401:17: note: bad data references.

Analyzing loop at common/macroblock.c:1390
common/macroblock.c:1390:13: note: ===== analyze_loop_nest =====
common/macroblock.c:1390:13: note: === vect_analyze_loop_form ===
common/macroblock.c:1390:13: note: === get_loop_niters ===
Analyzing # of iterations of loop 4
  exit condition [3, + , 4294967295] != 0
  bounds on difference of bases: -3 ... -3
  result:
    # of iterations 3, bounded by 3
common/macroblock.c:1390:13: note: === vect_analyze_data_refs ===
Creating dr for MEM[(uint64_t *)_169]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:49, generic-match.c:4015
success.
Applying pattern match.pd:49, generic-match.c:4015
	base_address: h_31(D)
	offset from base address: 0
	constant offset from base address: 19248
	step: 32
	aligned to: 128
	base_object: MEM[(uint64_t *)h_31(D)]
	Access function 0: {19248B, +, 32}_4
Creating dr for *_166
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: (uint64_t *) pretmp_527 + (sizetype) ((long unsigned int) i_mb_4x4_38 * 4)
	offset from base address: 0
	constant offset from base address: 0
	step: (ssizetype) ((long unsigned int) s4x4_37 * 4)
	aligned to: 128
	base_object: *(uint64_t *) pretmp_527 + (sizetype) ((long unsigned int) i_mb_4x4_38 * 4)
	Access function 0: {0B, +, (long unsigned int) s4x4_37 * 4}_4
Creating dr for MEM[(uint64_t *)_177]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:49, generic-match.c:4015
success.
Applying pattern match.pd:49, generic-match.c:4015
	base_address: h_31(D)
	offset from base address: 0
	constant offset from base address: 19256
	step: 32
	aligned to: 128
	base_object: MEM[(uint64_t *)h_31(D)]
	Access function 0: {19256B, +, 32}_4
Creating dr for MEM[(uint64_t *)_175]
analyze_innermost: Applying pattern match.pd:724, generic-match.c:1428
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
success.
Applying pattern match.pd:49, generic-match.c:3223
	base_address: pretmp_527 + (sizetype) i_mb_4x4_38 * 4
	offset from base address: 0
	constant offset from base address: 8
	step: (ssizetype) ((long unsigned int) s4x4_37 * 4)
	aligned to: 128
	base_object: MEM[(uint64_t *)pretmp_527 + (sizetype) i_mb_4x4_38 * 4]
	Access function 0: {8B, +, (long unsigned int) s4x4_37 * 4}_4
common/macroblock.c:1390:13: note: got vectype for stmt: _170 = MEM[(uint64_t *)_169];
vector(2) long unsigned int
common/macroblock.c:1390:13: note: got vectype for stmt: *_166 = _170;
vector(2) long unsigned int
common/macroblock.c:1390:13: note: not vectorized: not suitable for strided load *_166 = _170;

common/macroblock.c:1390:13: note: bad data references.

Analyzing loop at common/macroblock.c:1411
common/macroblock.c:1411:13: note: ===== analyze_loop_nest =====
common/macroblock.c:1411:13: note: === vect_analyze_loop_form ===
common/macroblock.c:1411:13: note: ===== analyze_loop_nest_1 =====
common/macroblock.c:1411:13: note: === vect_analyze_loop_form ===
common/macroblock.c:1411:13: note: === get_loop_niters ===
Analyzing # of iterations of loop 3
  exit condition [3, + , 4294967295] != 0
  bounds on difference of bases: -3 ... -3
  result:
    # of iterations 3, bounded by 3
common/macroblock.c:1411:13: note: not vectorized: unsupported outerloop form.
common/macroblock.c:1411:13: note: bad loop form.

Analyzing loop at common/macroblock.c:1415
common/macroblock.c:1415:17: note: ===== analyze_loop_nest =====
common/macroblock.c:1415:17: note: === vect_analyze_loop_form ===
common/macroblock.c:1415:17: note: === get_loop_niters ===
common/macroblock.c:1415:17: note: === vect_analyze_data_refs ===
Creating dr for *_230
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: (uint64_t *) pretmp_541 + (sizetype) ((long unsigned int) i_mb_4x4_38 * 4)
	offset from base address: 0
	constant offset from base address: 0
	step: (ssizetype) ((long unsigned int) s4x4_37 * 4)
	aligned to: 128
	base_object: *(uint64_t *) pretmp_541 + (sizetype) ((long unsigned int) i_mb_4x4_38 * 4)
	Access function 0: {0B, +, (long unsigned int) s4x4_37 * 4}_3
Creating dr for MEM[(uint64_t *)_234]
analyze_innermost: Applying pattern match.pd:724, generic-match.c:1428
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
success.
Applying pattern match.pd:49, generic-match.c:3223
	base_address: pretmp_541 + (sizetype) i_mb_4x4_38 * 4
	offset from base address: 0
	constant offset from base address: 8
	step: (ssizetype) ((long unsigned int) s4x4_37 * 4)
	aligned to: 128
	base_object: MEM[(uint64_t *)pretmp_541 + (sizetype) i_mb_4x4_38 * 4]
	Access function 0: {8B, +, (long unsigned int) s4x4_37 * 4}_3
common/macroblock.c:1415:17: note: got vectype for stmt: *_230 = 0;
vector(2) long unsigned int
common/macroblock.c:1415:17: note: not vectorized: not suitable for strided load *_230 = 0;

common/macroblock.c:1415:17: note: bad data references.

Analyzing loop at common/macroblock.c:1356
common/macroblock.c:1356:9: note: ===== analyze_loop_nest =====
common/macroblock.c:1356:9: note: === vect_analyze_loop_form ===
common/macroblock.c:1356:9: note: === get_loop_niters ===
Analyzing # of iterations of loop 1
  exit condition [23, + , 4294967295] != 0
  bounds on difference of bases: -23 ... -23
  result:
    # of iterations 23, bounded by 23
common/macroblock.c:1356:9: note: === vect_analyze_data_refs ===
Creating dr for *_85
analyze_innermost: success.
	base_address: _44 + (long unsigned int) i_mb_xy_32 * 24
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: *_44 + (long unsigned int) i_mb_xy_32 * 24
	Access function 0: {0B, +, 1}_1
common/macroblock.c:1356:9: note: got vectype for stmt: *_85 = 16;
vector(16) unsigned char
common/macroblock.c:1356:9: note: === vect_analyze_scalar_cycles ===
common/macroblock.c:1356:9: note: Analyze phi: i_436 = PHI <i_87(17), 0(14)>

common/macroblock.c:1356:9: note: Access function of PHI: {0, +, 1}_1
common/macroblock.c:1356:9: note: step: 1,  init: 0
common/macroblock.c:1356:9: note: Detected induction.
common/macroblock.c:1356:9: note: Analyze phi: .MEM_439 = PHI <.MEM_86(17), .MEM_83(14)>

common/macroblock.c:1356:9: note: Analyze phi: ivtmp_474 = PHI <ivtmp_473(17), 24(14)>

common/macroblock.c:1356:9: note: Access function of PHI: {24, +, 4294967295}_1
common/macroblock.c:1356:9: note: step: 4294967295,  init: 24
common/macroblock.c:1356:9: note: Detected induction.
common/macroblock.c:1356:9: note: === vect_pattern_recog ===
common/macroblock.c:1356:9: note: === vect_analyze_data_ref_accesses ===
common/macroblock.c:1356:9: note: === vect_mark_stmts_to_be_vectorized ===
common/macroblock.c:1356:9: note: init: phi relevant? i_436 = PHI <i_87(17), 0(14)>
common/macroblock.c:1356:9: note: init: phi relevant? .MEM_439 = PHI <.MEM_86(17), .MEM_83(14)>
common/macroblock.c:1356:9: note: init: phi relevant? ivtmp_474 = PHI <ivtmp_473(17), 24(14)>
common/macroblock.c:1356:9: note: init: stmt relevant? # DEBUG i => i_436
common/macroblock.c:1356:9: note: init: stmt relevant? _84 = (sizetype) i_436;
common/macroblock.c:1356:9: note: init: stmt relevant? _85 = non_zero_count_47 + _84;
common/macroblock.c:1356:9: note: init: stmt relevant? *_85 = 16;
common/macroblock.c:1356:9: note: vec_stmt_relevant_p: stmt has vdefs.
common/macroblock.c:1356:9: note: mark relevant 4, live 0.
common/macroblock.c:1356:9: note: init: stmt relevant? i_87 = i_436 + 1;
common/macroblock.c:1356:9: note: init: stmt relevant? # DEBUG i => i_87
common/macroblock.c:1356:9: note: init: stmt relevant? # DEBUG i => i_87
common/macroblock.c:1356:9: note: init: stmt relevant? ivtmp_473 = ivtmp_474 - 1;
common/macroblock.c:1356:9: note: init: stmt relevant? if (ivtmp_473 != 0)
common/macroblock.c:1356:9: note: worklist: examine stmt: *_85 = 16;
common/macroblock.c:1356:9: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: *_85 = 16;
  stmt_b: *_85 = 16;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 1}_1)
  (chrec_b = {0B, +, 1}_1)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
common/macroblock.c:1356:9: note: === vect_determine_vectorization_factor ===
common/macroblock.c:1356:9: note: ==> examining phi: i_436 = PHI <i_87(17), 0(14)>

common/macroblock.c:1356:9: note: ==> examining phi: .MEM_439 = PHI <.MEM_86(17), .MEM_83(14)>

common/macroblock.c:1356:9: note: ==> examining phi: ivtmp_474 = PHI <ivtmp_473(17), 24(14)>

common/macroblock.c:1356:9: note: ==> examining statement: # DEBUG i => i_436

common/macroblock.c:1356:9: note: skip.
common/macroblock.c:1356:9: note: ==> examining statement: _84 = (sizetype) i_436;

common/macroblock.c:1356:9: note: skip.
common/macroblock.c:1356:9: note: ==> examining statement: _85 = non_zero_count_47 + _84;

common/macroblock.c:1356:9: note: skip.
common/macroblock.c:1356:9: note: ==> examining statement: *_85 = 16;

common/macroblock.c:1356:9: note: get vectype for scalar type:  uint8_t
common/macroblock.c:1356:9: note: vectype: vector(16) unsigned char
common/macroblock.c:1356:9: note: nunits = 16
common/macroblock.c:1356:9: note: ==> examining statement: i_87 = i_436 + 1;

common/macroblock.c:1356:9: note: skip.
common/macroblock.c:1356:9: note: ==> examining statement: # DEBUG i => i_87

common/macroblock.c:1356:9: note: skip.
common/macroblock.c:1356:9: note: ==> examining statement: # DEBUG i => i_87

common/macroblock.c:1356:9: note: skip.
common/macroblock.c:1356:9: note: ==> examining statement: ivtmp_473 = ivtmp_474 - 1;

common/macroblock.c:1356:9: note: skip.
common/macroblock.c:1356:9: note: ==> examining statement: if (ivtmp_473 != 0)

common/macroblock.c:1356:9: note: skip.
common/macroblock.c:1356:9: note: vectorization factor = 16
common/macroblock.c:1356:9: note: === vect_analyze_data_refs_alignment ===
common/macroblock.c:1356:9: note: vect_compute_data_ref_alignment:
common/macroblock.c:1356:9: note: can't force alignment of ref: *_85
common/macroblock.c:1356:9: note: === vect_prune_runtime_alias_test_list ===
common/macroblock.c:1356:9: note: === vect_enhance_data_refs_alignment ===
common/macroblock.c:1356:9: note: Unknown misalignment, is_packed = 0
common/macroblock.c:1356:9: note: vect_can_advance_ivs_p:
common/macroblock.c:1356:9: note: Analyze phi: i_436 = PHI <i_87(17), 0(14)>

common/macroblock.c:1356:9: note: Analyze phi: .MEM_439 = PHI <.MEM_86(17), .MEM_83(14)>

common/macroblock.c:1356:9: note: virtual phi. skip.
common/macroblock.c:1356:9: note: Analyze phi: ivtmp_474 = PHI <ivtmp_473(17), 24(14)>

common/macroblock.c:1356:9: note: Vectorizing an unaligned access.
common/macroblock.c:1356:9: note: === vect_analyze_slp ===
common/macroblock.c:1356:9: note: === vect_make_slp_decision ===
common/macroblock.c:1356:9: note: === vect_detect_hybrid_slp ===
common/macroblock.c:1356:9: note: === vect_analyze_loop_operations ===
common/macroblock.c:1356:9: note: examining phi: i_436 = PHI <i_87(17), 0(14)>

common/macroblock.c:1356:9: note: examining phi: .MEM_439 = PHI <.MEM_86(17), .MEM_83(14)>

common/macroblock.c:1356:9: note: examining phi: ivtmp_474 = PHI <ivtmp_473(17), 24(14)>

common/macroblock.c:1356:9: note: ==> examining statement: # DEBUG i => i_436
common/macroblock.c:1356:9: note: irrelevant.
common/macroblock.c:1356:9: note: ==> examining statement: _84 = (sizetype) i_436;
common/macroblock.c:1356:9: note: irrelevant.
common/macroblock.c:1356:9: note: ==> examining statement: _85 = non_zero_count_47 + _84;
common/macroblock.c:1356:9: note: irrelevant.
common/macroblock.c:1356:9: note: ==> examining statement: *_85 = 16;
common/macroblock.c:1356:9: note: vect_is_simple_use: operand 16
common/macroblock.c:1356:9: note: vect_model_store_cost: unaligned supported by hardware.
common/macroblock.c:1356:9: note: vect_model_store_cost: inside_cost = 2, prologue_cost = 1 .
common/macroblock.c:1356:9: note: ==> examining statement: i_87 = i_436 + 1;
common/macroblock.c:1356:9: note: irrelevant.
common/macroblock.c:1356:9: note: ==> examining statement: # DEBUG i => i_87
common/macroblock.c:1356:9: note: irrelevant.
common/macroblock.c:1356:9: note: ==> examining statement: # DEBUG i => i_87
common/macroblock.c:1356:9: note: irrelevant.
common/macroblock.c:1356:9: note: ==> examining statement: ivtmp_473 = ivtmp_474 - 1;
common/macroblock.c:1356:9: note: irrelevant.
common/macroblock.c:1356:9: note: ==> examining statement: if (ivtmp_473 != 0)
common/macroblock.c:1356:9: note: irrelevant.
common/macroblock.c:1356:9: note: vectorization_factor = 16, niters = 24
common/macroblock.c:1356:9: note: === vect_update_slp_costs_according_to_vf ===
common/macroblock.c:1356:9: note: Cost model analysis: 
  Vector inside of loop cost: 2
  Vector prologue cost: 1
  Vector epilogue cost: 8
  Scalar iteration cost: 1
  Scalar outside cost: 0
  Vector outside cost: 9
  prologue iterations: 0
  epilogue iterations: 8
  Calculated minimum iters for profitability: 10
common/macroblock.c:1356:9: note:   Runtime profitability threshold = 15
common/macroblock.c:1356:9: note:   Static estimate profitability threshold = 15
common/macroblock.c:1356:9: note: epilog loop required
common/macroblock.c:1356:9: note: vect_can_advance_ivs_p:
common/macroblock.c:1356:9: note: Analyze phi: i_436 = PHI <i_87(17), 0(14)>

common/macroblock.c:1356:9: note: Analyze phi: .MEM_439 = PHI <.MEM_86(17), .MEM_83(14)>

common/macroblock.c:1356:9: note: virtual phi. skip.
common/macroblock.c:1356:9: note: Analyze phi: ivtmp_474 = PHI <ivtmp_473(17), 24(14)>

common/macroblock.c:1356:9: note: loop vectorized
common/macroblock.c:1356:9: note: === vec_transform_loop ===
common/macroblock.c:1356:9: note: === vect_do_peeling_for_loop_bound ===
Removing basic block 78
basic block 78, loop depth 0
 pred:       14
 succ:      


;; Scaling loop 1 with scale 0.666600, bounding iterations to 0 from guessed 35
;; guessed iterations are now 23
;; Scaling loop 11 with scale 0.777800, bounding iterations to 16 from guessed 30
;; guessed iterations are now 15
common/macroblock.c:1356:9: note: vect_update_ivs_after_vectorizer: phi: i_436 = PHI <i_87(17), 0(82)>

common/macroblock.c:1356:9: note: vect_update_ivs_after_vectorizer: phi: .MEM_439 = PHI <.MEM_86(17), .MEM_83(82)>

common/macroblock.c:1356:9: note: virtual phi. skip.
common/macroblock.c:1356:9: note: vect_update_ivs_after_vectorizer: phi: ivtmp_474 = PHI <ivtmp_473(17), 24(82)>

Setting upper bound of nb iterations for epilogue loop to 14
common/macroblock.c:1356:9: note: ------>vectorizing phi: i_436 = PHI <i_87(17), 0(86)>

common/macroblock.c:1356:9: note: ------>vectorizing phi: .MEM_439 = PHI <.MEM_86(17), .MEM_83(86)>

common/macroblock.c:1356:9: note: ------>vectorizing phi: ivtmp_474 = PHI <ivtmp_473(17), 24(86)>

common/macroblock.c:1356:9: note: ------>vectorizing statement: # DEBUG i => i_436

common/macroblock.c:1356:9: note: ------>vectorizing statement: _84 = (sizetype) i_436;

common/macroblock.c:1356:9: note: ------>vectorizing statement: _85 = non_zero_count_47 + _84;

common/macroblock.c:1356:9: note: ------>vectorizing statement: *_85 = 16;

common/macroblock.c:1356:9: note: transform statement.
common/macroblock.c:1356:9: note: vect_is_simple_use: operand 16
common/macroblock.c:1356:9: note: transform store. ncopies = 1
common/macroblock.c:1356:9: note: vect_get_vec_def_for_operand: 16
common/macroblock.c:1356:9: note: vect_is_simple_use: operand 16
common/macroblock.c:1356:9: note: Create vector_cst. nunits = 16
common/macroblock.c:1356:9: note: created new init_stmt: vect_cst_.287_447 = { 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16 };
common/macroblock.c:1356:9: note: create vector_type-pointer variable to type: vector(16) unsigned char  vectorizing a pointer ref: *_44 + (long unsigned int) i_mb_xy_32 * 24
Applying pattern match.pd:49, generic-match.c:4015
common/macroblock.c:1356:9: note: created vectp.289_446
common/macroblock.c:1356:9: note: add new stmt: MEM[(uint8_t *)vectp.288_443] = vect_cst_.287_447;
common/macroblock.c:1356:9: note: ------>vectorizing statement: i_87 = i_436 + 1;

common/macroblock.c:1356:9: note: ------>vectorizing statement: # DEBUG i => i_87

common/macroblock.c:1356:9: note: ------>vectorizing statement: # DEBUG i => i_87

common/macroblock.c:1356:9: note: ------>vectorizing statement: ivtmp_473 = ivtmp_474 - 1;

common/macroblock.c:1356:9: note: ------>vectorizing statement: vectp.288_442 = vectp.288_443 + 16;

common/macroblock.c:1356:9: note: ------>vectorizing statement: if (ivtmp_473 != 0)


loop at common/macroblock.c:1357: if (ivtmp_434 < 1)

;; Scaling loop 1 with scale 0.062500, bounding iterations to 1 from guessed 23
;; guessed iterations are now 2
common/macroblock.c:1356:9: note: LOOP VECTORIZED

common/macroblock.c:1312:6: note: vectorized 1 loops in function.
Merging blocks 14 and 82
Merging blocks 85 and 84
Merging blocks 14 and 86
Merging blocks 83 and 81
Merging blocks 85 and 16
x264_macroblock_cache_save (struct x264_t * h)
{
  vector(16) unsigned char * vectp.289;
  vector(16) unsigned char * vectp.288;
  vector(16) unsigned char vect_cst_.287;
  unsigned int tmp.286;
  int tmp.285;
  int i_stride;
  int i_stride2;
  int i_pix_offset;
  int i_stride;
  int i_stride2;
  int i_pix_offset;
  int i_stride;
  int i_stride2;
  int i_pix_offset;
  int skipbp;
  int i_list;
  int y;
  int i;
  uint8_t * non_zero_count;
  int8_t * intra4x4_pred_mode;
  const int i_mb_8x8;
  const int i_mb_4x4;
  const int s4x4;
  const int s8x8;
  const int i_mb_type;
  const int i_mb_xy;
  long unsigned int _8;
  int iftmp.31_12;
  int _33;
  unsigned char _34;
  int8_t[8] * _40;
  long unsigned int _41;
  long unsigned int _42;
  uint8_t[24] * _44;
  long unsigned int _46;
  int _48;
  struct x264_frame_t * _49;
  struct x264_frame_t * _50;
  int _51;
  int _52;
  struct x264_frame_t * _53;
  int8_t * _55;
  int8_t * _57;
  signed char _58;
  unsigned int _61;
  signed char _63;
  int _64;
  signed char _65;
  int _66;
  signed char _67;
  int _68;
  struct x264_frame_t * _69;
  int8_t * _72;
  int8_t * _73;
  int16_t * _78;
  long unsigned int _80;
  int16_t * _81;
  sizetype _84;
  uint8_t * _85;
  unsigned int ivtmp_86;
  unsigned int _88;
  unsigned int _90;
  unsigned int _92;
  unsigned int _94;
  unsigned int _96;
  unsigned int _97;
  short unsigned int _98;
  unsigned int _100;
  unsigned int _101;
  short unsigned int _102;
  unsigned int _104;
  unsigned int _105;
  short unsigned int _106;
  unsigned int _108;
  unsigned int _109;
  short unsigned int _110;
  int _112;
  int _113;
  int _114;
  int _115;
  int8_t * _117;
  int8_t * _118;
  signed char _120;
  int _122;
  int _123;
  int _124;
  int _128;
  int _129;
  int8_t * _131;
  int8_t * _132;
  int _136;
  int8_t * _137;
  sizetype _138;
  int8_t * _139;
  signed char _140;
  int8_t * _142;
  int _143;
  sizetype _144;
  int8_t * _145;
  signed char _146;
  int8_t * _148;
  int _149;
  sizetype _150;
  int8_t * _151;
  signed char _152;
  int8_t * _154;
  int _156;
  sizetype _157;
  int8_t * _158;
  signed char _159;
  int _162;
  int _163;
  long unsigned int _164;
  long unsigned int _165;
  uint64_t * _166;
  int _167;
  int _168;
  int16_t[2] * _169;
  long unsigned int _170;
  sizetype _173;
  sizetype _174;
  int16_t[2] * _175;
  int _176;
  int16_t[2] * _177;
  long unsigned int _178;
  int _181;
  int8_t * _182;
  int8_t * _183;
  signed char _184;
  int8_t * _186;
  int8_t * _187;
  signed char _188;
  int8_t * _190;
  int8_t * _191;
  signed char _192;
  int8_t * _194;
  int8_t * _195;
  signed char _196;
  int _199;
  int _200;
  long unsigned int _201;
  long unsigned int _202;
  uint64_t * _203;
  int _204;
  int _205;
  int16_t[2] * _206;
  long unsigned int _207;
  sizetype _209;
  sizetype _210;
  int16_t[2] * _211;
  int _212;
  int16_t[2] * _213;
  long unsigned int _214;
  int8_t * _217;
  sizetype _218;
  uint16_t * _219;
  int _221;
  sizetype _222;
  uint16_t * _223;
  int _226;
  int _227;
  long unsigned int _228;
  long unsigned int _229;
  uint64_t * _230;
  sizetype _232;
  sizetype _233;
  int16_t[2] * _234;
  int _238;
  int8_t * _239;
  int8_t * _240;
  int _241;
  unsigned char _242;
  signed char _243;
  int8_t * _245;
  int8_t * _246;
  int _252;
  int _253;
  long unsigned int _254;
  long unsigned int _255;
  uint64_t * _256;
  int _257;
  int _258;
  int16_t[2] * _259;
  long unsigned int _260;
  sizetype _262;
  sizetype _263;
  int16_t[2] * _264;
  int _265;
  int16_t[2] * _266;
  long unsigned int _267;
  int _270;
  int _272;
  int _273;
  long unsigned int _274;
  long unsigned int _275;
  uint64_t * _276;
  int _277;
  int _278;
  int16_t[2] * _279;
  long unsigned int _280;
  sizetype _282;
  sizetype _283;
  int16_t[2] * _284;
  int _285;
  int16_t[2] * _286;
  long unsigned int _287;
  int _291;
  int _292;
  long unsigned int _293;
  long unsigned int _294;
  uint64_t * _295;
  sizetype _297;
  sizetype _298;
  int16_t[2] * _299;
  int _302;
  int _304;
  int _305;
  long unsigned int _306;
  long unsigned int _307;
  uint64_t * _308;
  sizetype _310;
  sizetype _311;
  int16_t[2] * _312;
  _Bool _316;
  _Bool _317;
  _Bool _318;
  int8_t * _319;
  int8_t * _320;
  int _322;
  _Bool _323;
  int _324;
  int _325;
  int8_t * _328;
  int8_t * _329;
  signed char _330;
  int8_t * _332;
  int8_t * _333;
  int _336;
  int _338;
  int _339;
  int _340;
  int _341;
  int _342;
  int _344;
  int _345;
  int _346;
  int _348;
  int _349;
  int _350;
  int _351;
  void (*<Tf94>) (uint8_t *, int, uint8_t *, int, int) _353;
  uint8_t * _354;
  uint8_t * _355;
  sizetype _357;
  uint8_t * _358;
  int _360;
  int _362;
  int _363;
  int _364;
  int _365;
  int _366;
  int _368;
  int _369;
  int _370;
  int _372;
  int _373;
  int _374;
  int _375;
  void (*<Tf94>) (uint8_t *, int, uint8_t *, int, int) _377;
  uint8_t * _378;
  uint8_t * _379;
  sizetype _381;
  uint8_t * _382;
  int _384;
  int _386;
  int _387;
  int _388;
  int _389;
  int _390;
  int _391;
  int _392;
  int _393;
  int _395;
  int _396;
  int _397;
  int _398;
  void (*<Tf94>) (uint8_t *, int, uint8_t *, int, int) _401;
  uint8_t * _402;
  uint8_t * _403;
  sizetype _405;
  uint8_t * _406;
  int _407;
  int _408;
  int _409;
  unsigned int _411;
  _Bool _431;
  long unsigned int _432;
  unsigned int ivtmp_434;
  long unsigned int _444;
  long unsigned int _445;
  _Bool _452;
  unsigned int ivtmp_454;
  unsigned int ivtmp_464;
  uint8_t * _468;
  sizetype _469;
  unsigned int ivtmp_470;
  unsigned int ivtmp_473;
  unsigned int ivtmp_474;
  unsigned int ivtmp_475;
  unsigned int ivtmp_476;
  unsigned int ivtmp_477;
  unsigned int ivtmp_478;
  unsigned int ivtmp_479;
  unsigned int ivtmp_480;
  unsigned int ivtmp_481;
  unsigned int ivtmp_482;
  unsigned int ivtmp_483;
  unsigned int ivtmp_484;
  unsigned int ivtmp_485;
  unsigned int ivtmp_486;
  unsigned int ivtmp_487;
  unsigned int ivtmp_488;
  unsigned int ivtmp_489;
  unsigned int ivtmp_490;
  int pretmp_498;
  signed char pretmp_501;
  signed char prephitmp_503;
  int16_t[2] * pretmp_505;
  int16_t[2] * pretmp_509;
  int16_t[2] * pretmp_513;
  int16_t[2] * pretmp_520;
  int16_t[2] * pretmp_527;
  int16_t[2] * pretmp_534;
  int16_t[2] * pretmp_541;
  int pretmp_545;
  int prephitmp_548;

  <bb 2>:
  i_mb_xy_32 = h_31(D)->mb.i_mb_xy;
  # DEBUG i_mb_xy => i_mb_xy_32
  _33 = h_31(D)->mb.i_type;
  _34 = x264_mb_type_fix[_33];
  i_mb_type_35 = (const int) _34;
  # DEBUG i_mb_type => i_mb_type_35
  s8x8_36 = h_31(D)->mb.i_b8_stride;
  # DEBUG s8x8 => s8x8_36
  s4x4_37 = h_31(D)->mb.i_b4_stride;
  # DEBUG s4x4 => s4x4_37
  i_mb_4x4_38 = h_31(D)->mb.i_b4_xy;
  # DEBUG i_mb_4x4 => i_mb_4x4_38
  i_mb_8x8_39 = h_31(D)->mb.i_b8_xy;
  # DEBUG i_mb_8x8 => i_mb_8x8_39
  _40 = h_31(D)->mb.intra4x4_pred_mode;
  _41 = (long unsigned int) i_mb_xy_32;
  _42 = _41 * 8;
  intra4x4_pred_mode_43 = _40 + _42;
  # DEBUG intra4x4_pred_mode => intra4x4_pred_mode_43
  _44 = h_31(D)->mb.non_zero_count;
  _46 = _41 * 24;
  non_zero_count_47 = _44 + _46;
  # DEBUG non_zero_count => non_zero_count_47
  # DEBUG h => h_31(D)
  # DEBUG i => 0
  # DEBUG w => 16
  _49 = h_31(D)->fdec;
  i_stride_383 = _49->i_stride[0];
  # DEBUG i_stride => i_stride_383
  _384 = h_31(D)->mb.b_interlaced;
  i_stride2_385 = i_stride_383 << _384;
  # DEBUG i_stride2 => i_stride2_385
  if (_384 != 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _386 = h_31(D)->mb.i_mb_x;
  _387 = h_31(D)->mb.i_mb_y;
  _388 = _387 & -2;
  _389 = i_stride_383 * _388;
  _390 = _386 + _389;
  _391 = _390 * 16;
  _392 = _387 & 1;
  _393 = i_stride_383 * _392;
  i_pix_offset_394 = _391 + _393;
  goto <bb 5>;

  <bb 4>:
  _395 = h_31(D)->mb.i_mb_x;
  _396 = h_31(D)->mb.i_mb_y;
  _397 = i_stride_383 * _396;
  _398 = _395 + _397;
  i_pix_offset_399 = _398 * 16;

  <bb 5>:
  # i_pix_offset_404 = PHI <i_pix_offset_394(3), i_pix_offset_399(4)>
  # DEBUG i_pix_offset => i_pix_offset_404
  _401 = h_31(D)->mc.copy[0];
  _402 = h_31(D)->mb.pic.p_fdec[0];
  _403 = _49->plane[0];
  _405 = (sizetype) i_pix_offset_404;
  _406 = _403 + _405;
  _401 (_406, i_stride2_385, _402, 32, 16);
  # DEBUG h => NULL
  # DEBUG i => NULL
  # DEBUG i_pix_offset => NULL
  # DEBUG i_stride2 => NULL
  # DEBUG i_stride => NULL
  # DEBUG w => NULL
  # DEBUG h => h_31(D)
  # DEBUG i => 1
  # DEBUG w => 8
  _50 = h_31(D)->fdec;
  i_stride_359 = _50->i_stride[1];
  # DEBUG i_stride => i_stride_359
  _360 = h_31(D)->mb.b_interlaced;
  i_stride2_361 = i_stride_359 << _360;
  # DEBUG i_stride2 => i_stride2_361
  if (_360 != 0)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  _362 = h_31(D)->mb.i_mb_x;
  _363 = h_31(D)->mb.i_mb_y;
  _364 = _363 & -2;
  _365 = i_stride_359 * _364;
  _366 = _362 + _365;
  _368 = _366 * 8;
  _369 = _363 & 1;
  _370 = i_stride_359 * _369;
  i_pix_offset_371 = _368 + _370;
  goto <bb 8>;

  <bb 7>:
  _372 = h_31(D)->mb.i_mb_x;
  _373 = h_31(D)->mb.i_mb_y;
  _374 = i_stride_359 * _373;
  _375 = _372 + _374;
  i_pix_offset_376 = _375 * 8;

  <bb 8>:
  # i_pix_offset_380 = PHI <i_pix_offset_371(6), i_pix_offset_376(7)>
  # DEBUG i_pix_offset => i_pix_offset_380
  _377 = h_31(D)->mc.copy[3];
  _378 = h_31(D)->mb.pic.p_fdec[1];
  _379 = _50->plane[1];
  _381 = (sizetype) i_pix_offset_380;
  _382 = _379 + _381;
  _377 (_382, i_stride2_361, _378, 32, 8);
  # DEBUG h => NULL
  # DEBUG i => NULL
  # DEBUG i_pix_offset => NULL
  # DEBUG i_stride2 => NULL
  # DEBUG i_stride => NULL
  # DEBUG w => NULL
  # DEBUG h => h_31(D)
  # DEBUG i => 2
  # DEBUG w => 8
  _69 = h_31(D)->fdec;
  i_stride_335 = _69->i_stride[2];
  # DEBUG i_stride => i_stride_335
  _336 = h_31(D)->mb.b_interlaced;
  i_stride2_337 = i_stride_335 << _336;
  # DEBUG i_stride2 => i_stride2_337
  if (_336 != 0)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  _338 = h_31(D)->mb.i_mb_x;
  _339 = h_31(D)->mb.i_mb_y;
  _340 = _339 & -2;
  _341 = i_stride_335 * _340;
  _342 = _338 + _341;
  _344 = _342 * 8;
  _345 = _339 & 1;
  _346 = i_stride_335 * _345;
  i_pix_offset_347 = _344 + _346;
  goto <bb 11>;

  <bb 10>:
  _348 = h_31(D)->mb.i_mb_x;
  _349 = h_31(D)->mb.i_mb_y;
  _350 = i_stride_335 * _349;
  _351 = _348 + _350;
  i_pix_offset_352 = _351 * 8;

  <bb 11>:
  # i_pix_offset_356 = PHI <i_pix_offset_347(9), i_pix_offset_352(10)>
  # DEBUG i_pix_offset => i_pix_offset_356
  _353 = h_31(D)->mc.copy[3];
  _354 = h_31(D)->mb.pic.p_fdec[2];
  _355 = _69->plane[2];
  _357 = (sizetype) i_pix_offset_356;
  _358 = _355 + _357;
  _353 (_358, i_stride2_337, _354, 32, 8);
  # DEBUG h => NULL
  # DEBUG i => NULL
  # DEBUG i_pix_offset => NULL
  # DEBUG i_stride2 => NULL
  # DEBUG i_stride => NULL
  # DEBUG w => NULL
  _51 = h_31(D)->mb.i_mb_y;
  _52 = h_31(D)->mb.i_mb_x;
  _53 = h_31(D)->fdec;
  x264_prefetch_fenc (h_31(D), _53, _52, _51);
  _55 = h_31(D)->mb.type;
  _57 = _55 + _41;
  _58 = (signed char) _34;
  *_57 = _58;
  h_31(D)->mb.i_mb_prev_xy = i_mb_xy_32;
  if (i_mb_type_35 == 0)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  _61 = MEM[(uint32_t *)h_31(D) + 19044B];
  MEM[(uint32_t *)intra4x4_pred_mode_43] = _61;
  _63 = h_31(D)->mb.cache.intra4x4_pred_mode[31];
  _64 = (int) _63;
  _65 = h_31(D)->mb.cache.intra4x4_pred_mode[23];
  _66 = (int) _65;
  _67 = h_31(D)->mb.cache.intra4x4_pred_mode[15];
  _68 = (int) _67;
  # DEBUG a => _68
  # DEBUG b => _66
  # DEBUG c => _64
  # DEBUG d => 0
  _48 = _66 << 8;
  _407 = _48 + _68;
  _408 = _64 << 16;
  _409 = _407 + _408;
  _411 = (unsigned int) _409;
  # DEBUG a => NULL
  # DEBUG b => NULL
  # DEBUG c => NULL
  # DEBUG d => NULL
  MEM[(uint32_t *)intra4x4_pred_mode_43 + 4B] = _411;
  goto <bb 21>;

  <bb 13>:
  MEM[(uint64_t *)intra4x4_pred_mode_43] = 144680345676153346;
  if (i_mb_type_35 == 3)
    goto <bb 14>;
  else
    goto <bb 21>;

  <bb 14>:
  _72 = h_31(D)->mb.qp;
  _73 = _72 + _41;
  *_73 = 0;
  h_31(D)->mb.i_last_dqp = 0;
  h_31(D)->mb.i_cbp_chroma = 2;
  h_31(D)->mb.i_cbp_luma = 15;
  _78 = h_31(D)->mb.cbp;
  _80 = _41 * 2;
  _81 = _78 + _80;
  *_81 = 1839;
  h_31(D)->mb.b_transform_8x8 = 0;
  # DEBUG i => 0
  # DEBUG i => 0
  vect_cst_.287_447 = { 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16 };
  _445 = (long unsigned int) i_mb_xy_32;
  _444 = _445 * 24;
  vectp.289_446 = _44 + _444;

  <bb 15>:
  # i_436 = PHI <i_87(20), 0(14)>
  # ivtmp_474 = PHI <ivtmp_473(20), 24(14)>
  # vectp.288_443 = PHI <vectp.288_442(20), vectp.289_446(14)>
  # ivtmp_86 = PHI <ivtmp_434(20), 0(14)>
  # DEBUG i => i_436
  _84 = (sizetype) i_436;
  _85 = non_zero_count_47 + _84;
  MEM[(uint8_t *)vectp.288_443] = vect_cst_.287_447;
  i_87 = i_436 + 1;
  # DEBUG i => i_87
  # DEBUG i => i_87
  ivtmp_473 = ivtmp_474 - 1;
  vectp.288_442 = vectp.288_443 + 16;
  ivtmp_434 = ivtmp_86 + 1;
  if (ivtmp_434 < 1)
    goto <bb 20>;
  else
    goto <bb 18>;

  <bb 16>:
  # i_471 = PHI <i_465(17), 16(18)>
  # ivtmp_470 = PHI <ivtmp_464(17), 8(18)>
  # DEBUG i => i_471
  _469 = (sizetype) i_471;
  _468 = non_zero_count_47 + _469;
  *_468 = 16;
  i_465 = i_471 + 1;
  # DEBUG i => i_465
  # DEBUG i => i_465
  ivtmp_464 = ivtmp_470 - 1;
  if (ivtmp_464 != 0)
    goto <bb 17>;
  else
    goto <bb 19>;

  <bb 17>:
  goto <bb 16>;

  <bb 18>:
  # i_457 = PHI <i_87(15)>
  # ivtmp_454 = PHI <ivtmp_473(15)>
  goto <bb 16>;

  <bb 19>:
  goto <bb 27>;

  <bb 20>:
  goto <bb 15>;

  <bb 21>:
  _88 = MEM[(uint32_t *)h_31(D) + 19068B];
  MEM[(uint32_t *)non_zero_count_47] = _88;
  _90 = MEM[(uint32_t *)h_31(D) + 19076B];
  MEM[(uint32_t *)non_zero_count_47 + 4B] = _90;
  _92 = MEM[(uint32_t *)h_31(D) + 19084B];
  MEM[(uint32_t *)non_zero_count_47 + 8B] = _92;
  _94 = MEM[(uint32_t *)h_31(D) + 19092B];
  MEM[(uint32_t *)non_zero_count_47 + 12B] = _94;
  _96 = MEM[(uint32_t *)h_31(D) + 19064B];
  _97 = _96 >> 8;
  _98 = (short unsigned int) _97;
  MEM[(uint16_t *)non_zero_count_47 + 16B] = _98;
  _100 = MEM[(uint32_t *)h_31(D) + 19072B];
  _101 = _100 >> 8;
  _102 = (short unsigned int) _101;
  MEM[(uint16_t *)non_zero_count_47 + 18B] = _102;
  _104 = MEM[(uint32_t *)h_31(D) + 19088B];
  _105 = _104 >> 8;
  _106 = (short unsigned int) _105;
  MEM[(uint16_t *)non_zero_count_47 + 20B] = _106;
  _108 = MEM[(uint32_t *)h_31(D) + 19096B];
  _109 = _108 >> 8;
  _110 = (short unsigned int) _109;
  MEM[(uint16_t *)non_zero_count_47 + 22B] = _110;
  _112 = h_31(D)->mb.i_type;
  if (_112 != 2)
    goto <bb 23>;
  else
    goto <bb 22>;

  <bb 22>:
  pretmp_545 = h_31(D)->mb.i_qp;
  goto <bb 26>;

  <bb 23>:
  _113 = h_31(D)->mb.i_cbp_luma;
  if (_113 == 0)
    goto <bb 24>;
  else
    goto <bb 22>;

  <bb 24>:
  _114 = h_31(D)->mb.i_cbp_chroma;
  if (_114 == 0)
    goto <bb 25>;
  else
    goto <bb 22>;

  <bb 25>:
  _115 = h_31(D)->mb.i_last_qp;
  h_31(D)->mb.i_qp = _115;

  <bb 26>:
  # prephitmp_548 = PHI <pretmp_545(22), _115(25)>
  _117 = h_31(D)->mb.qp;
  _118 = _117 + _41;
  _120 = (signed char) prephitmp_548;
  *_118 = _120;
  _122 = h_31(D)->mb.i_qp;
  _123 = h_31(D)->mb.i_last_qp;
  _124 = _122 - _123;
  h_31(D)->mb.i_last_dqp = _124;
  h_31(D)->mb.i_last_qp = _122;

  <bb 27>:
  _128 = h_31(D)->mb.i_cbp_luma;
  if (_128 == 0)
    goto <bb 29>;
  else
    goto <bb 28>;

  <bb 28>:
  pretmp_498 = h_31(D)->mb.b_transform_8x8;
  pretmp_501 = (signed char) pretmp_498;
  goto <bb 31>;

  <bb 29>:
  _129 = h_31(D)->mb.i_type;
  if (_129 != 1)
    goto <bb 30>;
  else
    goto <bb 28>;

  <bb 30>:
  h_31(D)->mb.b_transform_8x8 = 0;

  <bb 31>:
  # prephitmp_503 = PHI <pretmp_501(28), 0(30)>
  _131 = h_31(D)->mb.mb_transform_size;
  _132 = _131 + _41;
  *_132 = prephitmp_503;
  _136 = h_31(D)->sh.i_type;
  if (_136 != 2)
    goto <bb 33>;
  else
    goto <bb 32>;

  <bb 32>:
  _238 = h_31(D)->param.b_cabac;
  if (_238 != 0)
    goto <bb 49>;
  else
    goto <bb 78>;

  <bb 33>:
  if (_34 > 3)
    goto <bb 35>;
  else
    goto <bb 34>;

  <bb 34>:
  iftmp.31_12 = _136 == 1 ? 2 : 1;
  goto <bb 47>;

  <bb 35>:
  _137 = h_31(D)->mb.ref[0];
  _138 = (sizetype) i_mb_8x8_39;
  _139 = _137 + _138;
  _140 = h_31(D)->mb.cache.ref[0][12];
  *_139 = _140;
  _142 = h_31(D)->mb.ref[0];
  _143 = i_mb_8x8_39 + 1;
  _144 = (sizetype) _143;
  _145 = _142 + _144;
  _146 = h_31(D)->mb.cache.ref[0][14];
  *_145 = _146;
  _148 = h_31(D)->mb.ref[0];
  _149 = s8x8_36 + i_mb_8x8_39;
  _150 = (sizetype) _149;
  _151 = _148 + _150;
  _152 = h_31(D)->mb.cache.ref[0][28];
  *_151 = _152;
  _154 = h_31(D)->mb.ref[0];
  _156 = s8x8_36 + _143;
  _157 = (sizetype) _156;
  _158 = _154 + _157;
  _159 = h_31(D)->mb.cache.ref[0][30];
  *_158 = _159;
  # DEBUG y => 0
  # DEBUG y => 0
  pretmp_527 = h_31(D)->mb.mv[0];

  <bb 36>:
  # y_421 = PHI <y_180(37), 0(35)>
  # ivtmp_478 = PHI <ivtmp_477(37), 4(35)>
  # DEBUG y => y_421
  _162 = s4x4_37 * y_421;
  _163 = i_mb_4x4_38 + _162;
  _164 = (long unsigned int) _163;
  _165 = _164 * 4;
  _166 = pretmp_527 + _165;
  _167 = y_421 * 8;
  _168 = _167 + 12;
  _169 = &h_31(D)->mb.cache.mv[0][_168];
  _170 = MEM[(uint64_t *)_169];
  *_166 = _170;
  _173 = _164 + 2;
  _174 = _173 * 4;
  _175 = pretmp_527 + _174;
  _176 = _167 + 14;
  _177 = &h_31(D)->mb.cache.mv[0][_176];
  _178 = MEM[(uint64_t *)_177];
  MEM[(uint64_t *)_175] = _178;
  y_180 = y_421 + 1;
  # DEBUG y => y_180
  # DEBUG y => y_180
  ivtmp_477 = ivtmp_478 - 1;
  if (ivtmp_477 != 0)
    goto <bb 37>;
  else
    goto <bb 38>;

  <bb 37>:
  goto <bb 36>;

  <bb 38>:
  _181 = h_31(D)->sh.i_type;
  if (_181 == 1)
    goto <bb 39>;
  else
    goto <bb 32>;

  <bb 39>:
  _182 = h_31(D)->mb.ref[1];
  _183 = _182 + _138;
  _184 = h_31(D)->mb.cache.ref[1][12];
  *_183 = _184;
  _186 = h_31(D)->mb.ref[1];
  _187 = _186 + _144;
  _188 = h_31(D)->mb.cache.ref[1][14];
  *_187 = _188;
  _190 = h_31(D)->mb.ref[1];
  _191 = _190 + _150;
  _192 = h_31(D)->mb.cache.ref[1][28];
  *_191 = _192;
  _194 = h_31(D)->mb.ref[1];
  _195 = _194 + _157;
  _196 = h_31(D)->mb.cache.ref[1][30];
  *_195 = _196;
  # DEBUG y => 0
  # DEBUG y => 0
  pretmp_534 = h_31(D)->mb.mv[1];

  <bb 40>:
  # y_429 = PHI <y_216(42), 0(39)>
  # ivtmp_480 = PHI <ivtmp_479(42), 4(39)>
  # DEBUG y => y_429
  _199 = s4x4_37 * y_429;
  _200 = i_mb_4x4_38 + _199;
  _201 = (long unsigned int) _200;
  _202 = _201 * 4;
  _203 = pretmp_534 + _202;
  _204 = y_429 * 8;
  _205 = _204 + 12;
  _206 = &h_31(D)->mb.cache.mv[1][_205];
  _207 = MEM[(uint64_t *)_206];
  *_203 = _207;
  _209 = _201 + 2;
  _210 = _209 * 4;
  _211 = pretmp_534 + _210;
  _212 = _204 + 14;
  _213 = &h_31(D)->mb.cache.mv[1][_212];
  _214 = MEM[(uint64_t *)_213];
  MEM[(uint64_t *)_211] = _214;
  y_216 = y_429 + 1;
  # DEBUG y => y_216
  # DEBUG y => y_216
  ivtmp_479 = ivtmp_480 - 1;
  if (ivtmp_479 != 0)
    goto <bb 42>;
  else
    goto <bb 41>;

  <bb 41>:
  goto <bb 32>;

  <bb 42>:
  goto <bb 40>;

  <bb 43>:
  _217 = h_31(D)->mb.ref[i_list_10];
  _218 = (sizetype) i_mb_8x8_39;
  _219 = _217 + _218;
  *_219 = 65535;
  _221 = s8x8_36 + i_mb_8x8_39;
  _222 = (sizetype) _221;
  _223 = _217 + _222;
  *_223 = 65535;
  # DEBUG y => 0
  # DEBUG y => 0
  pretmp_541 = h_31(D)->mb.mv[i_list_10];

  <bb 44>:
  # y_420 = PHI <y_236(45), 0(43)>
  # ivtmp_476 = PHI <ivtmp_475(45), 4(43)>
  # DEBUG y => y_420
  _226 = s4x4_37 * y_420;
  _227 = i_mb_4x4_38 + _226;
  _228 = (long unsigned int) _227;
  _229 = _228 * 4;
  _230 = pretmp_541 + _229;
  *_230 = 0;
  _232 = _228 + 2;
  _233 = _232 * 4;
  _234 = pretmp_541 + _233;
  MEM[(uint64_t *)_234] = 0;
  y_236 = y_420 + 1;
  # DEBUG y => y_236
  # DEBUG y => y_236
  ivtmp_475 = ivtmp_476 - 1;
  if (ivtmp_475 != 0)
    goto <bb 45>;
  else
    goto <bb 46>;

  <bb 45>:
  goto <bb 44>;

  <bb 46>:
  i_list_237 = i_list_10 + 1;
  # DEBUG i_list => i_list_237

  <bb 47>:
  # i_list_10 = PHI <0(34), i_list_237(46)>
  # DEBUG i_list => i_list_10
  if (i_list_10 < iftmp.31_12)
    goto <bb 43>;
  else
    goto <bb 48>;

  <bb 48>:
  goto <bb 32>;

  <bb 49>:
  if (_34 <= 2)
    goto <bb 50>;
  else
    goto <bb 51>;

  <bb 50>:
  _239 = h_31(D)->mb.chroma_pred_mode;
  _240 = _239 + _41;
  _241 = h_31(D)->mb.i_chroma_pred_mode;
  _242 = x264_mb_pred_mode8x8c_fix[_241];
  _243 = (signed char) _242;
  *_240 = _243;
  goto <bb 54>;

  <bb 51>:
  _245 = h_31(D)->mb.chroma_pred_mode;
  _246 = _245 + _41;
  *_246 = 0;
  if (_34 > 18)
    goto <bb 53>;
  else
    goto <bb 52>;

  <bb 52>:
  _8 = 262351 >> i_mb_type_35;
  _432 = _8 & 1;
  _452 = _432 == 0;

  <bb 53>:
  # _431 = PHI <_452(52), 1(51)>
  if (_431 != 0)
    goto <bb 55>;
  else
    goto <bb 54>;

  <bb 54>:
  # DEBUG y => 0
  pretmp_505 = h_31(D)->mb.mvd[0];
  goto <bb 64>;

  <bb 55>:
  pretmp_513 = h_31(D)->mb.mvd[0];

  <bb 56>:
  # y_450 = PHI <0(55), y_269(57)>
  # ivtmp_482 = PHI <4(55), ivtmp_481(57)>
  # DEBUG y => y_450
  _252 = s4x4_37 * y_450;
  _253 = i_mb_4x4_38 + _252;
  _254 = (long unsigned int) _253;
  _255 = _254 * 4;
  _256 = pretmp_513 + _255;
  _257 = y_450 * 8;
  _258 = _257 + 12;
  _259 = &h_31(D)->mb.cache.mvd[0][_258];
  _260 = MEM[(uint64_t *)_259];
  *_256 = _260;
  _262 = _254 + 2;
  _263 = _262 * 4;
  _264 = pretmp_513 + _263;
  _265 = _257 + 14;
  _266 = &h_31(D)->mb.cache.mvd[0][_265];
  _267 = MEM[(uint64_t *)_266];
  MEM[(uint64_t *)_264] = _267;
  y_269 = y_450 + 1;
  # DEBUG y => y_269
  # DEBUG y => y_269
  ivtmp_481 = ivtmp_482 - 1;
  if (ivtmp_481 != 0)
    goto <bb 57>;
  else
    goto <bb 58>;

  <bb 57>:
  goto <bb 56>;

  <bb 58>:
  _270 = h_31(D)->sh.i_type;
  if (_270 == 1)
    goto <bb 59>;
  else
    goto <bb 77>;

  <bb 59>:
  pretmp_520 = h_31(D)->mb.mvd[1];

  <bb 60>:
  # y_451 = PHI <0(59), y_289(62)>
  # ivtmp_484 = PHI <4(59), ivtmp_483(62)>
  # DEBUG y => y_451
  _272 = s4x4_37 * y_451;
  _273 = i_mb_4x4_38 + _272;
  _274 = (long unsigned int) _273;
  _275 = _274 * 4;
  _276 = pretmp_520 + _275;
  _277 = y_451 * 8;
  _278 = _277 + 12;
  _279 = &h_31(D)->mb.cache.mvd[1][_278];
  _280 = MEM[(uint64_t *)_279];
  *_276 = _280;
  _282 = _274 + 2;
  _283 = _282 * 4;
  _284 = pretmp_520 + _283;
  _285 = _277 + 14;
  _286 = &h_31(D)->mb.cache.mvd[1][_285];
  _287 = MEM[(uint64_t *)_286];
  MEM[(uint64_t *)_284] = _287;
  y_289 = y_451 + 1;
  # DEBUG y => y_289
  # DEBUG y => y_289
  ivtmp_483 = ivtmp_484 - 1;
  if (ivtmp_483 != 0)
    goto <bb 62>;
  else
    goto <bb 61>;

  <bb 61>:
  goto <bb 80>;

  <bb 62>:
  goto <bb 60>;

  <bb 63>:

  <bb 64>:
  # y_467 = PHI <y_301(63), 0(54)>
  # ivtmp_486 = PHI <ivtmp_485(63), 4(54)>
  # DEBUG y => y_467
  _291 = s4x4_37 * y_467;
  _292 = i_mb_4x4_38 + _291;
  _293 = (long unsigned int) _292;
  _294 = _293 * 4;
  _295 = pretmp_505 + _294;
  *_295 = 0;
  _297 = _293 + 2;
  _298 = _297 * 4;
  _299 = pretmp_505 + _298;
  MEM[(uint64_t *)_299] = 0;
  y_301 = y_467 + 1;
  # DEBUG y => y_301
  # DEBUG y => y_301
  ivtmp_485 = ivtmp_486 - 1;
  if (ivtmp_485 != 0)
    goto <bb 63>;
  else
    goto <bb 65>;

  <bb 65>:
  _302 = h_31(D)->sh.i_type;
  if (_302 == 1)
    goto <bb 66>;
  else
    goto <bb 77>;

  <bb 66>:
  pretmp_509 = h_31(D)->mb.mvd[1];

  <bb 67>:
  # y_437 = PHI <0(66), y_314(68)>
  # ivtmp_488 = PHI <4(66), ivtmp_487(68)>
  # DEBUG y => y_437
  _304 = s4x4_37 * y_437;
  _305 = i_mb_4x4_38 + _304;
  _306 = (long unsigned int) _305;
  _307 = _306 * 4;
  _308 = pretmp_509 + _307;
  *_308 = 0;
  _310 = _306 + 2;
  _311 = _310 * 4;
  _312 = pretmp_509 + _311;
  MEM[(uint64_t *)_312] = 0;
  y_314 = y_437 + 1;
  # DEBUG y => y_314
  # DEBUG y => y_314
  ivtmp_487 = ivtmp_488 - 1;
  if (ivtmp_487 != 0)
    goto <bb 68>;
  else
    goto <bb 79>;

  <bb 68>:
  goto <bb 67>;

  <bb 69>:
  _319 = h_31(D)->mb.skipbp;
  _320 = _319 + _41;
  *_320 = 15;
  goto <bb 76>;

  <bb 70>:
  if (i_mb_type_35 == 17)
    goto <bb 71>;
  else
    goto <bb 75>;

  <bb 71>:

  <bb 72>:
  # i_427 = PHI <0(71), i_327(73)>
  # skipbp_440 = PHI <0(71), skipbp_326(73)>
  # ivtmp_490 = PHI <4(71), ivtmp_489(73)>
  # DEBUG skipbp => skipbp_440
  # DEBUG i => i_427
  _322 = h_31(D)->mb.i_sub_partition[i_427];
  _323 = _322 == 12;
  _324 = (int) _323;
  _325 = _324 << i_427;
  skipbp_326 = _325 | skipbp_440;
  # DEBUG skipbp => skipbp_326
  i_327 = i_427 + 1;
  # DEBUG i => i_327
  # DEBUG skipbp => skipbp_326
  # DEBUG i => i_327
  ivtmp_489 = ivtmp_490 - 1;
  if (ivtmp_489 != 0)
    goto <bb 73>;
  else
    goto <bb 74>;

  <bb 73>:
  goto <bb 72>;

  <bb 74>:
  # skipbp_492 = PHI <skipbp_326(72)>
  _328 = h_31(D)->mb.skipbp;
  _329 = _328 + _41;
  _330 = (signed char) skipbp_492;
  *_329 = _330;
  goto <bb 76>;

  <bb 75>:
  _332 = h_31(D)->mb.skipbp;
  _333 = _332 + _41;
  *_333 = 0;

  <bb 76>:
  return;

  <bb 77>:

  <bb 78>:
  goto <bb 76>;

  <bb 79>:

  <bb 80>:
  _316 = i_mb_type_35 == 18;
  _317 = i_mb_type_35 == 7;
  _318 = _316 | _317;
  if (_318 != 0)
    goto <bb 69>;
  else
    goto <bb 70>;

}



;; Function x264_macroblock_bipred_init (x264_macroblock_bipred_init, funcdef_no=139, decl_uid=5546, cgraph_uid=139, symbol_order=182)


Analyzing loop at common/macroblock.c:1514
common/macroblock.c:1514:9: note: ===== analyze_loop_nest =====
common/macroblock.c:1514:9: note: === vect_analyze_loop_form ===
common/macroblock.c:1514:9: note: ===== analyze_loop_nest_1 =====
common/macroblock.c:1514:9: note: === vect_analyze_loop_form ===
common/macroblock.c:1514:9: note: === get_loop_niters ===
Applying pattern match.pd:494, generic-match.c:3721
Analyzing # of iterations of loop 3
  exit condition 0 <= [pretmp_61 + -2, + , -1](no_overflow)
  bounds on difference of bases: -1 ... 2147483645
  result:
    # of iterations (unsigned int) pretmp_61 + 4294967295, bounded by 2147483646
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:49, generic-match.c:3223
common/macroblock.c:1514:9: note: Symbolic number of iterations is (unsigned int) pretmp_61
common/macroblock.c:1514:9: note: not vectorized: control flow in loop.
common/macroblock.c:1514:9: note: bad loop form.

Analyzing loop at common/macroblock.c:1515
common/macroblock.c:1515:13: note: ===== analyze_loop_nest =====
common/macroblock.c:1515:13: note: === vect_analyze_loop_form ===
common/macroblock.c:1515:13: note: === get_loop_niters ===
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:49, generic-match.c:3223
common/macroblock.c:1515:13: note: Symbolic number of iterations is (unsigned int) pretmp_61
common/macroblock.c:1515:13: note: === vect_analyze_data_refs ===
Creating dr for h_13(D)->mb.bipred_weight[pretmp_9][_56]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:494, generic-match.c:3721
failed: evolution of offset is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *h_13(D)
	Access function 0: scev_not_known;
	Access function 1: pretmp_9
	Access function 2: 77824
	Access function 3: 87040
Creating dr for h_13(D)->mb.bipred_weight[i_ref0_85][i_ref1_87]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: h_13(D)
	offset from base address: (ssizetype) (((sizetype) (pretmp_67 * 2) + (sizetype) i_ref0_85 * 4) * 2)
	constant offset from base address: 20606
	step: -2(OVF)
	aligned to: 4
	base_object: *h_13(D)
	Access function 0: {pretmp_4, +, -1}_3
	Access function 1: i_ref0_85
	Access function 2: 77824
	Access function 3: 87040
Creating dr for h_13(D)->mb.bipred_weight[pretmp_9][_56]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: h_13(D)
	offset from base address: (ssizetype) (((sizetype) _56 + (sizetype) pretmp_9 * 4) * 2)
	constant offset from base address: 20608
	step: 0
	aligned to: 2
	base_object: h_13(D)->mb.bipred_weight[pretmp_9][_56]
common/macroblock.c:1515:13: note: got vectype for stmt: _57 = h_13(D)->mb.bipred_weight[pretmp_9][_56];
vector(8) short int
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:49, generic-match.c:3223
common/macroblock.c:1515:13: note: not vectorized: not suitable for gather load _57 = h_13(D)->mb.bipred_weight[pretmp_9][_56];

common/macroblock.c:1515:13: note: bad data references.

Analyzing loop at common/macroblock.c:1482
common/macroblock.c:1482:28: note: ===== analyze_loop_nest =====
common/macroblock.c:1482:28: note: === vect_analyze_loop_form ===
common/macroblock.c:1482:28: note: ===== analyze_loop_nest_1 =====
common/macroblock.c:1482:28: note: === vect_analyze_loop_form ===
common/macroblock.c:1482:28: note: not vectorized: control flow in loop.
common/macroblock.c:1482:28: note: bad inner-loop form.
common/macroblock.c:1482:28: note: not vectorized: Bad inner loop.
common/macroblock.c:1482:28: note: bad loop form.

Analyzing loop at common/macroblock.c:1486
common/macroblock.c:1486:32: note: ===== analyze_loop_nest =====
common/macroblock.c:1486:32: note: === vect_analyze_loop_form ===
common/macroblock.c:1486:32: note: not vectorized: control flow in loop.
common/macroblock.c:1486:32: note: bad loop form.
common/macroblock.c:1477:6: note: vectorized 0 loops in function.
x264_macroblock_bipred_init (struct x264_t * h)
{
  int tx;
  int poc1;
  int dist_scale_factor;
  int poc0;
  static const char __PRETTY_FUNCTION__[28] = "x264_macroblock_bipred_init";
  int i_ref1;
  int i_ref0;
  int pretmp_2;
  int pretmp_4;
  int pretmp_9;
  int _14;
  struct x264_frame_t * _15;
  int _17;
  struct x264_frame_t * _18;
  int _20;
  int iftmp.11_21;
  struct x264_frame_t * _22;
  int _23;
  int _24;
  int _30;
  int _31;
  int _32;
  int iftmp.11_33;
  short int _34;
  int _37;
  unsigned int dist_scale_factor.35_38;
  unsigned int _39;
  unsigned short _40;
  unsigned short _41;
  short int _42;
  unsigned int _44;
  int _49;
  int _50;
  int _56;
  short int _57;
  int pretmp_61;
  int iftmp.11_62;
  int _64;
  int pretmp_67;
  int _70;
  int iftmp.11_71;
  int _73;
  int _75;
  int _95;
  int pretmp_96;
  int pretmp_98;
  int pretmp_100;
  int prephitmp_101;

  <bb 2>:
  # DEBUG i_ref0 => 0
  # DEBUG i_ref0 => 0
  _64 = h_13(D)->i_ref0;
  if (_64 > 0)
    goto <bb 3>;
  else
    goto <bb 21>;

  <bb 3>:
  _70 = h_13(D)->i_ref1;

  <bb 4>:
  # i_ref0_84 = PHI <0(3), i_ref0_48(7)>
  # DEBUG i_ref0 => i_ref0_84
  _15 = h_13(D)->fref0[i_ref0_84];
  poc0_16 = _15->i_poc;
  # DEBUG poc0 => poc0_16
  # DEBUG i_ref1 => 0
  # DEBUG i_ref1 => 0
  if (_70 > 0)
    goto <bb 8>;
  else
    goto <bb 5>;

  <bb 5>:
  i_ref0_48 = i_ref0_84 + 1;
  # DEBUG i_ref0 => i_ref0_48
  # DEBUG i_ref0 => i_ref0_48
  _14 = h_13(D)->i_ref0;
  if (_14 > i_ref0_48)
    goto <bb 7>;
  else
    goto <bb 6>;

  <bb 6>:
  # _73 = PHI <_14(5)>
  goto <bb 21>;

  <bb 7>:
  goto <bb 4>;

  <bb 8>:

  <bb 9>:
  # i_ref1_86 = PHI <0(8), i_ref1_47(20)>
  # DEBUG i_ref1 => i_ref1_86
  _18 = h_13(D)->fref1[i_ref1_86];
  poc1_19 = _18->i_poc;
  # DEBUG poc1 => poc1_19
  _20 = poc1_19 - poc0_16;
  # DEBUG v => _20
  # DEBUG i_min => -128
  # DEBUG i_max => 127
  if (_20 >= -128)
    goto <bb 10>;
  else
    goto <bb 12>;

  <bb 10>:
  iftmp.11_33 = MIN_EXPR <_20, 127>;
  # DEBUG v => NULL
  # DEBUG i_min => NULL
  # DEBUG i_max => NULL
  # DEBUG td => NULL
  if (iftmp.11_33 == 0)
    goto <bb 34>;
  else
    goto <bb 11>;

  <bb 11>:
  pretmp_2 = ABS_EXPR <iftmp.11_33>;
  pretmp_96 = pretmp_2 >> 1;
  pretmp_98 = pretmp_96 + 16384;
  pretmp_100 = pretmp_98 / iftmp.11_33;

  <bb 12>:
  # prephitmp_101 = PHI <pretmp_100(11), -128(9)>
  # DEBUG v => NULL
  # DEBUG i_min => NULL
  # DEBUG i_max => NULL
  # DEBUG td => NULL
  _22 = h_13(D)->fdec;
  _23 = _22->i_poc;
  _24 = _23 - poc0_16;
  # DEBUG v => _24
  # DEBUG i_min => -128
  # DEBUG i_max => 127
  iftmp.11_62 = MIN_EXPR <_24, 127>;
  iftmp.11_71 = MAX_EXPR <iftmp.11_62, -128>;
  # DEBUG v => NULL
  # DEBUG i_min => NULL
  # DEBUG i_max => NULL
  # DEBUG tb => NULL
  # DEBUG D#109 => NULL
  # DEBUG D#108 => D#109 >> 1
  # DEBUG D#107 => D#108 + 16384
  # DEBUG tx => NULL
  _30 = iftmp.11_71 * prephitmp_101;
  _31 = _30 + 32;
  _32 = _31 >> 6;
  # DEBUG v => _32
  # DEBUG i_min => -1024
  # DEBUG i_max => 1023
  if (_32 >= -1024)
    goto <bb 13>;
  else
    goto <bb 35>;

  <bb 13>:
  iftmp.11_21 = MIN_EXPR <_32, 1023>;
  # DEBUG dist_scale_factor => iftmp.11_21
  _34 = (short int) iftmp.11_21;
  h_13(D)->mb.dist_scale_factor[i_ref0_84][i_ref1_86] = _34;
  # DEBUG dist_scale_factor => iftmp.11_21 >> 2
  _37 = h_13(D)->param.analyse.b_weighted_bipred;
  if (_37 != 0)
    goto <bb 14>;
  else
    goto <bb 17>;

  <bb 14>:
  dist_scale_factor_36 = iftmp.11_21 >> 2;
  dist_scale_factor.35_38 = (unsigned int) dist_scale_factor_36;
  _39 = dist_scale_factor.35_38 + 64;
  if (_39 <= 192)
    goto <bb 15>;
  else
    goto <bb 17>;

  <bb 15>:
  _40 = (unsigned short) dist_scale_factor_36;
  _41 = 64 - _40;
  _42 = (short int) _41;
  h_13(D)->mb.bipred_weight[i_ref0_84][i_ref1_86] = _42;
  _44 = dist_scale_factor.35_38 + 63;
  if (_44 > 190)
    goto <bb 16>;
  else
    goto <bb 19>;

  <bb 16>:
  __assert_fail ("dist_scale_factor >= -63 && dist_scale_factor <= 127", "common/macroblock.c", 1506, &__PRETTY_FUNCTION__);

  <bb 17>:

  <bb 18>:
  h_13(D)->mb.bipred_weight[i_ref0_84][i_ref1_86] = 32;

  <bb 19>:
  i_ref1_47 = i_ref1_86 + 1;
  # DEBUG i_ref1 => i_ref1_47
  # DEBUG i_ref1 => i_ref1_47
  _17 = h_13(D)->i_ref1;
  if (_17 > i_ref1_47)
    goto <bb 20>;
  else
    goto <bb 5>;

  <bb 20>:
  goto <bb 9>;

  <bb 21>:
  # _95 = PHI <_73(6), _64(2)>
  _49 = h_13(D)->sh.b_mbaff;
  if (_49 != 0)
    goto <bb 23>;
  else
    goto <bb 22>;

  <bb 22>:
  return;

  <bb 23>:
  _50 = _95 * 2;
  i_ref0_51 = _50 + -1;
  # DEBUG i_ref0 => i_ref0_51
  # DEBUG i_ref0 => i_ref0_51
  if (i_ref0_51 >= 0)
    goto <bb 24>;
  else
    goto <bb 22>;

  <bb 24>:
  pretmp_67 = h_13(D)->i_ref1;
  pretmp_61 = pretmp_67 * 2;
  pretmp_4 = pretmp_61 + -1;

  <bb 25>:
  # i_ref0_85 = PHI <i_ref0_51(24), i_ref0_60(28)>
  # DEBUG i_ref0 => i_ref0_85
  # DEBUG D#106 => h_13(D)->i_ref1
  # DEBUG D#105 => D#106 * 2
  # DEBUG D#104 => D#105 + -1
  # DEBUG i_ref1 => D#104
  # DEBUG i_ref1 => D#104
  if (pretmp_4 >= 0)
    goto <bb 29>;
  else
    goto <bb 26>;

  <bb 26>:
  i_ref0_60 = i_ref0_85 + -1;
  # DEBUG i_ref0 => i_ref0_60
  # DEBUG i_ref0 => i_ref0_60
  if (i_ref0_60 >= 0)
    goto <bb 28>;
  else
    goto <bb 27>;

  <bb 27>:
  goto <bb 22>;

  <bb 28>:
  goto <bb 25>;

  <bb 29>:
  pretmp_9 = i_ref0_85 >> 1;

  <bb 30>:
  # i_ref1_87 = PHI <pretmp_4(29), i_ref1_59(32)>
  # DEBUG i_ref1 => i_ref1_87
  _56 = i_ref1_87 >> 1;
  _57 = h_13(D)->mb.bipred_weight[pretmp_9][_56];
  h_13(D)->mb.bipred_weight[i_ref0_85][i_ref1_87] = _57;
  i_ref1_59 = i_ref1_87 + -1;
  # DEBUG i_ref1 => i_ref1_59
  # DEBUG i_ref1 => i_ref1_59
  if (i_ref1_59 >= 0)
    goto <bb 32>;
  else
    goto <bb 31>;

  <bb 31>:
  goto <bb 26>;

  <bb 32>:
  goto <bb 30>;

  <bb 33>:
  h_13(D)->mb.bipred_weight[i_ref0_84][i_ref1_86] = 0;
  goto <bb 19>;

  <bb 34>:
  # DEBUG dist_scale_factor => 256
  h_13(D)->mb.dist_scale_factor[i_ref0_84][i_ref1_86] = 256;
  # DEBUG dist_scale_factor => 64
  _75 = h_13(D)->param.analyse.b_weighted_bipred;
  if (_75 != 0)
    goto <bb 33>;
  else
    goto <bb 17>;

  <bb 35>:
  # DEBUG dist_scale_factor => -1024
  h_13(D)->mb.dist_scale_factor[i_ref0_84][i_ref1_86] = -1024;
  # DEBUG dist_scale_factor => -1024 >> 2
  goto <bb 18>;

}


