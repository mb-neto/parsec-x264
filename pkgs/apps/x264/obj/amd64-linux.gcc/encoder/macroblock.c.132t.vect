
;; Function x264_mb_encode_i4x4 (x264_mb_encode_i4x4, funcdef_no=122, decl_uid=5796, cgraph_uid=122, symbol_order=165)

encoder/macroblock.c:93:6: note: vectorized 0 loops in function.
x264_mb_encode_i4x4 (struct x264_t * h, int idx, int i_qp)
{
  int16_t dct4x4[4][4];
  uint8_t * p_dst;
  uint8_t * p_src;
  uint8_t * _5;
  unsigned char _7;
  sizetype _8;
  uint8_t * _10;
  short unsigned int _11;
  sizetype _12;
  int _14;
  void (*<T1063>) (int16_t[4] *, uint8_t *, uint8_t *) _15;
  void (*<T10e4>) (int16_t *, int16_t[4] *) _19;
  int16_t[16] * _20;
  void (*<T1180>) (int16_t[4] *, int[4][4] *, int) _22;
  int[4][4] * _23;
  void (*<T106b>) (uint8_t *, int16_t[4] *) _25;
  int16_t[16] * _27;
  void (*<T10ea>) (int16_t *, const uint8_t *, uint8_t *) _29;
  int16_t[16] * _30;
  long unsigned int _33;
  long unsigned int _34;
  long unsigned int _35;
  long unsigned int _36;
  long unsigned int _37;
  long unsigned int _38;
  long unsigned int _39;
  int _44;
  void (*<T1150>) (int16_t[4] *, uint16_t *, uint16_t *) _45;
  uint16_t[16] * _46;
  long unsigned int _47;
  long unsigned int _48;
  uint16_t * _49;
  uint16_t[16] * _50;
  uint16_t * _51;

  <bb 2>:
  _5 = h_4(D)->mb.pic.p_fenc[0];
  _7 = block_idx_xy_fenc[idx_6(D)];
  _8 = (sizetype) _7;
  p_src_9 = _5 + _8;
  # DEBUG p_src => p_src_9
  _10 = h_4(D)->mb.pic.p_fdec[0];
  _11 = block_idx_xy_fdec[idx_6(D)];
  _12 = (sizetype) _11;
  p_dst_13 = _10 + _12;
  # DEBUG p_dst => p_dst_13
  _14 = h_4(D)->mb.b_lossless;
  if (_14 != 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _29 = h_4(D)->zigzagf.sub_4x4;
  _30 = &h_4(D)->dct.luma4x4[idx_6(D)];
  _29 (_30, p_src_9, p_dst_13);
  dct4x4 ={v} {CLOBBER};
  goto <bb 11>;

  <bb 4>:
  _15 = h_4(D)->dctf.sub4x4_dct;
  _15 (&dct4x4, p_src_9, p_dst_13);
  # DEBUG h => h_4(D)
  # DEBUG dct => &dct4x4
  # DEBUG i_qp => i_qp_17(D)
  # DEBUG i_ctxBlockCat => 2
  # DEBUG b_intra => 1
  # DEBUG idx => idx_6(D)
  # DEBUG i_quant_cat => 0
  _44 = h_4(D)->mb.b_trellis;
  if (_44 != 0)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  x264_quant_4x4_trellis (h_4(D), &dct4x4, 0, i_qp_17(D), 2, 1, idx_6(D));
  goto <bb 7>;

  <bb 6>:
  _45 = h_4(D)->quantf.quant_4x4;
  _46 = h_4(D)->quant4_bias[0];
  _47 = (long unsigned int) i_qp_17(D);
  _48 = _47 * 32;
  _49 = _46 + _48;
  _50 = h_4(D)->quant4_mf[0];
  _51 = _50 + _48;
  _45 (&dct4x4, _51, _49);

  <bb 7>:
  # DEBUG h => NULL
  # DEBUG dct => NULL
  # DEBUG i_qp => NULL
  # DEBUG i_ctxBlockCat => NULL
  # DEBUG b_intra => NULL
  # DEBUG idx => NULL
  # DEBUG i_quant_cat => NULL
  # DEBUG v => &dct4x4
  # DEBUG i_count => 32
  # DEBUG v => &dct4x4
  # DEBUG i_count => 32
  # DEBUG x => &dct4x4
  _33 = MEM[(uint64_t *)&dct4x4];
  _34 = MEM[(uint64_t *)&dct4x4 + 8B];
  _35 = _33 | _34;
  _36 = MEM[(uint64_t *)&dct4x4 + 16B];
  _37 = _35 | _36;
  _38 = MEM[(uint64_t *)&dct4x4 + 24B];
  _39 = _37 | _38;
  # DEBUG v => NULL
  # DEBUG i_count => NULL
  # DEBUG i => NULL
  # DEBUG v => NULL
  # DEBUG i_count => NULL
  # DEBUG i => NULL
  # DEBUG i_count => NULL
  # DEBUG nonzero => NULL
  if (_39 != 0)
    goto <bb 8>;
  else
    goto <bb 9>;

  <bb 8>:
  _19 = h_4(D)->zigzagf.scan_4x4;
  _20 = &h_4(D)->dct.luma4x4[idx_6(D)];
  _19 (_20, &dct4x4);
  _22 = h_4(D)->quantf.dequant_4x4;
  _23 = h_4(D)->dequant4_mf[0];
  _22 (&dct4x4, _23, i_qp_17(D));
  _25 = h_4(D)->dctf.add4x4_idct;
  _25 (p_dst_13, &dct4x4);
  goto <bb 10>;

  <bb 9>:
  _27 = &h_4(D)->dct.luma4x4[idx_6(D)];
  # DEBUG __dest => _27
  # DEBUG __ch => 0
  # DEBUG __len => 32
  __builtin_memset (_27, 0, 32);

  <bb 10>:
  dct4x4 ={v} {CLOBBER};

  <bb 11>:
  return;

}



;; Function x264_mb_encode_8x8_chroma (x264_mb_encode_8x8_chroma, funcdef_no=125, decl_uid=5804, cgraph_uid=125, symbol_order=168)


Analyzing loop at encoder/macroblock.c:274
encoder/macroblock.c:274:5: note: ===== analyze_loop_nest =====
encoder/macroblock.c:274:5: note: === vect_analyze_loop_form ===
encoder/macroblock.c:274:5: note: === get_loop_niters ===
Analyzing # of iterations of loop 2
  exit condition [7, + , 4294967295] != 0
  bounds on difference of bases: -7 ... -7
  result:
    # of iterations 7, bounded by 7
encoder/macroblock.c:274:5: note: === vect_analyze_data_refs ===
Creating dr for MEM[(uint64_t *)_137]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:49, generic-match.c:4015
success.
Applying pattern match.pd:49, generic-match.c:4015
	base_address: h_23(D)
	offset from base address: 0
	constant offset from base address: 10624
	step: 32
	aligned to: 128
	base_object: MEM[(uint64_t *)h_23(D)]
	Access function 0: {10624B, +, 32}_2
Creating dr for MEM[(uint64_t *)_137 + 8B]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:4015
success.
Applying pattern match.pd:49, generic-match.c:4015
	base_address: h_23(D)
	offset from base address: 0
	constant offset from base address: 10632
	step: 32
	aligned to: 128
	base_object: MEM[(uint64_t *)h_23(D)]
	Access function 0: {10632B, +, 32}_2
Creating dr for MEM[(uint64_t *)_137 + 16B]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:4015
success.
Applying pattern match.pd:49, generic-match.c:4015
	base_address: h_23(D)
	offset from base address: 0
	constant offset from base address: 10640
	step: 32
	aligned to: 128
	base_object: MEM[(uint64_t *)h_23(D)]
	Access function 0: {10640B, +, 32}_2
Creating dr for MEM[(uint64_t *)_137 + 24B]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:4015
success.
Applying pattern match.pd:49, generic-match.c:4015
	base_address: h_23(D)
	offset from base address: 0
	constant offset from base address: 10648
	step: 32
	aligned to: 128
	base_object: MEM[(uint64_t *)h_23(D)]
	Access function 0: {10648B, +, 32}_2
Creating dr for x264_scan8[_136]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &x264_scan8
	offset from base address: 0
	constant offset from base address: 64
	step: 4
	aligned to: 128
	base_object: MEM[(int[27] *)&x264_scan8]
	Access function 0: {16, +, 1}_2
Creating dr for h_23(D)->mb.cache.non_zero_count[_138]
analyze_innermost: Applying pattern match.pd:114, generic-match.c:6569
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:494, generic-match.c:3721
failed: evolution of offset is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *h_23(D)
	Access function 0: scev_not_known;
	Access function 1: 384
	Access function 2: 65024
	Access function 3: 87040
encoder/macroblock.c:274:5: note: got vectype for stmt: _156 = MEM[(uint64_t *)_137];
vector(2) long unsigned int
encoder/macroblock.c:274:5: note: got vectype for stmt: _157 = MEM[(uint64_t *)_137 + 8B];
vector(2) long unsigned int
encoder/macroblock.c:274:5: note: got vectype for stmt: _159 = MEM[(uint64_t *)_137 + 16B];
vector(2) long unsigned int
encoder/macroblock.c:274:5: note: got vectype for stmt: _161 = MEM[(uint64_t *)_137 + 24B];
vector(2) long unsigned int
encoder/macroblock.c:274:5: note: got vectype for stmt: _138 = x264_scan8[_136];
const vector(4) int
encoder/macroblock.c:274:5: note: not vectorized: data ref analysis failed h_23(D)->mb.cache.non_zero_count[_138] = _139;

encoder/macroblock.c:274:5: note: bad data references.

Analyzing loop at encoder/macroblock.c:208
encoder/macroblock.c:208:5: note: ===== analyze_loop_nest =====
encoder/macroblock.c:208:5: note: === vect_analyze_loop_form ===
encoder/macroblock.c:208:5: note: not vectorized: multiple nested loops.
encoder/macroblock.c:208:5: note: bad loop form.

Analyzing loop at encoder/macroblock.c:219
encoder/macroblock.c:219:13: note: ===== analyze_loop_nest =====
encoder/macroblock.c:219:13: note: === vect_analyze_loop_form ===
encoder/macroblock.c:219:13: note: === get_loop_niters ===
Analyzing # of iterations of loop 5
  exit condition [3, + , 4294967295] != 0
  bounds on difference of bases: -3 ... -3
  result:
    # of iterations 3, bounded by 3
encoder/macroblock.c:219:13: note: === vect_analyze_data_refs ===
Creating dr for block_idx_x[i_258]
analyze_innermost: Applying pattern match.pd:114, generic-match.c:6569
Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &block_idx_x
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: MEM[(uint8_t[16] *)&block_idx_x]
	Access function 0: {0, +, 1}_5
Creating dr for block_idx_y[i_258]
analyze_innermost: Applying pattern match.pd:114, generic-match.c:6569
Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &block_idx_y
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: MEM[(uint8_t[16] *)&block_idx_y]
	Access function 0: {0, +, 1}_5
Creating dr for h_23(D)->zigzagf.sub_4x4
analyze_innermost: success.
	base_address: h_23(D)
	offset from base address: 0
	constant offset from base address: 25544
	step: 0
	aligned to: 128
	base_object: *h_23(D)
	Access function 0: 192
	Access function 1: 204160
encoder/macroblock.c:219:13: note: not vectorized: loop contains function calls or data references that cannot be analyzed
encoder/macroblock.c:219:13: note: bad data references.

Analyzing loop at encoder/macroblock.c:263
encoder/macroblock.c:263:13: note: ===== analyze_loop_nest =====
encoder/macroblock.c:263:13: note: === vect_analyze_loop_form ===
encoder/macroblock.c:263:13: note: === get_loop_niters ===
Analyzing # of iterations of loop 4
  exit condition [3, + , 4294967295] != 0
  bounds on difference of bases: -3 ... -3
  result:
    # of iterations 3, bounded by 3
encoder/macroblock.c:263:13: note: === vect_analyze_data_refs ===
Creating dr for h_23(D)->quantf.dequant_4x4
analyze_innermost: success.
	base_address: h_23(D)
	offset from base address: 0
	constant offset from base address: 25600
	step: 0
	aligned to: 128
	base_object: *h_23(D)
	Access function 0: 320
	Access function 1: 204480
Creating dr for h_23(D)->dequant4_mf[pretmp_377]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: h_23(D)
	offset from base address: (ssizetype) ((sizetype) b_inter_21(D) * 8)
	constant offset from base address: 3360
	step: 0
	aligned to: 8
	base_object: *h_23(D)
	Access function 0: pretmp_377
	Access function 1: 26752
encoder/macroblock.c:263:13: note: not vectorized: loop contains function calls or data references that cannot be analyzed
encoder/macroblock.c:263:13: note: bad data references.

Analyzing loop at encoder/macroblock.c:233
encoder/macroblock.c:233:9: note: ===== analyze_loop_nest =====
encoder/macroblock.c:233:9: note: === vect_analyze_loop_form ===
encoder/macroblock.c:233:9: note: not vectorized: control flow in loop.
encoder/macroblock.c:233:9: note: bad loop form.
encoder/macroblock.c:203:6: note: vectorized 0 loops in function.
x264_mb_encode_8x8_chroma (struct x264_t * h, int b_inter, int i_qp)
{
  _Bool h__mb_i_cbp_chroma_lsm.45;
  int h__mb_i_cbp_chroma_lsm.44;
  int d0;
  int d1;
  int d2;
  int d3;
  int dmf;
  int qbits;
  int d0;
  int d1;
  int d2;
  int d3;
  int od;
  int oe;
  int16_t dct4x4[4][4][4];
  int16_t dct2x2[2][2];
  int i_decimate_score;
  uint8_t * p_dst;
  uint8_t * p_src;
  int b_decimate;
  int ch;
  int i;
  int _24;
  int _25;
  int _31;
  void (*<T1078>) (int16_t[4][4] *, uint8_t *, uint8_t *) _32;
  short int _34;
  int _35;
  _Bool _36;
  int _37;
  int16_t[4][4] * _39;
  void (*<T1150>) (int16_t[4] *, uint16_t *, uint16_t *) _42;
  uint16_t[16] * _44;
  long unsigned int _45;
  long unsigned int _46;
  uint16_t * _47;
  uint16_t[16] * _48;
  uint16_t * _50;
  int16_t[4][4] * _51;
  void (*<T10e4>) (int16_t *, int16_t[4] *) _53;
  int _55;
  int _57;
  int16_t[16] * _58;
  int (*<T1194>) (int16_t *) _60;
  int _62;
  int _65;
  _Bool _66;
  int _67;
  void (*<T1161>) (int16_t[2] *, int, int) _70;
  uint16_t[16] * _72;
  long unsigned int _73;
  long unsigned int _74;
  uint16_t[16] * _75;
  short unsigned int _76;
  int _77;
  int _78;
  uint16_t[16] * _79;
  uint16_t[16] * _80;
  short unsigned int _81;
  short unsigned int _82;
  int _83;
  _Bool _85;
  _Bool _86;
  _Bool _87;
  int _88;
  int _89;
  int16_t[16] * _90;
  long unsigned int _92;
  int16_t[4] * _94;
  void (*<T1180>) (int16_t[4] *, int[4][4] *, int) _95;
  int[4][4] * _97;
  int16_t[4][4] * _98;
  int16_t[4] * _101;
  int[4][4] * _103;
  void (*<T1082>) (uint8_t *, int16_t[4][4] *) _105;
  unsigned char _109;
  int _110;
  unsigned char _111;
  int _112;
  int _113;
  int _114;
  int _116;
  int _117;
  void (*<T10ea>) (int16_t *, const uint8_t *, uint8_t *) _119;
  sizetype _120;
  uint8_t * _121;
  sizetype _122;
  const uint8_t * _123;
  int _124;
  int _126;
  int16_t[16] * _127;
  short int _129;
  int _136;
  int16_t[16] * _137;
  int _138;
  unsigned char _139;
  int _142;
  unsigned int _143;
  unsigned char _145;
  unsigned char _147;
  long unsigned int _156;
  long unsigned int _157;
  long unsigned int _158;
  long unsigned int _159;
  long unsigned int _160;
  long unsigned int _161;
  long unsigned int _162;
  _Bool _163;
  int _164;
  long unsigned int _166;
  _Bool _167;
  long unsigned int _173;
  _Bool _174;
  short int _181;
  int _182;
  short int _183;
  int _184;
  short int _186;
  int _187;
  short int _188;
  int _189;
  unsigned short _193;
  unsigned short _194;
  unsigned short _195;
  short int _196;
  unsigned short _197;
  unsigned short _198;
  unsigned short _199;
  short int _200;
  unsigned short _201;
  short int _202;
  unsigned short _203;
  short int _204;
  short int _205;
  short int _206;
  short int _207;
  int _209;
  int _211;
  int _214;
  int _216;
  int _220;
  long unsigned int _221;
  long unsigned int _222;
  int[4][4] * _223;
  int _225;
  int _228;
  int _230;
  int _233;
  short int _234;
  int _235;
  int _236;
  int _237;
  short int _238;
  int _239;
  int _240;
  int _241;
  short int _242;
  int _243;
  int _244;
  int _245;
  short int _246;
  _Bool _251;
  unsigned int ivtmp_332;
  unsigned int ivtmp_333;
  unsigned int ivtmp_334;
  unsigned int ivtmp_335;
  unsigned int ivtmp_336;
  unsigned int _337;
  unsigned int _338;
  unsigned int _339;
  int _340;
  unsigned int ivtmp_343;
  unsigned int ivtmp_347;
  unsigned int ivtmp_348;
  int prephitmp_350;
  int pretmp_354;
  int16_t[4][4] * prephitmp_356;
  int pretmp_357;
  int prephitmp_358;
  unsigned int ivtmp_360;
  unsigned int ivtmp_363;
  int pretmp_375;
  int pretmp_377;

  <bb 2>:
  if (b_inter_21(D) != 0)
    goto <bb 3>;
  else
    goto <bb 6>;

  <bb 3>:
  _24 = h_23(D)->sh.i_type;
  if (_24 == 1)
    goto <bb 6>;
  else
    goto <bb 4>;

  <bb 4>:
  _25 = h_23(D)->param.analyse.b_dct_decimate;
  if (_25 != 0)
    goto <bb 6>;
  else
    goto <bb 5>;

  <bb 5>:

  <bb 6>:
  # b_decimate_8 = PHI <1(4), 0(5), 0(2), 1(3)>
  # DEBUG b_decimate => b_decimate_8
  # DEBUG ch => 0
  # DEBUG ch => 0
  _45 = (long unsigned int) i_qp_40(D);
  _46 = _45 * 32;
  _73 = (long unsigned int) i_qp_40(D);
  _74 = _73 * 32;
  _220 = i_qp_40(D) % 6;
  _221 = (long unsigned int) _220;
  _222 = _221 * 64;
  _225 = i_qp_40(D) / 6;
  _143 = (unsigned int) _225;
  _339 = _143 + 4294967291;
  qbits_226 = (int) _339;
  _338 = (unsigned int) qbits_226;
  _337 = -_338;
  pretmp_357 = (int) _337;

  <bb 7>:
  # ch_256 = PHI <ch_27(36), 0(6)>
  # ivtmp_333 = PHI <ivtmp_332(36), 2(6)>
  # DEBUG ch => ch_256
  ch_27 = ch_256 + 1;
  p_src_28 = h_23(D)->mb.pic.p_fenc[ch_27];
  # DEBUG p_src => p_src_28
  p_dst_30 = h_23(D)->mb.pic.p_fdec[ch_27];
  # DEBUG p_dst => p_dst_30
  # DEBUG i_decimate_score => 0
  _31 = h_23(D)->mb.b_lossless;
  if (_31 != 0)
    goto <bb 8>;
  else
    goto <bb 11>;

  <bb 8>:
  pretmp_375 = ch_256 * 4;

  <bb 9>:
  # i_258 = PHI <0(8), i_132(10)>
  # ivtmp_363 = PHI <4(8), ivtmp_347(10)>
  # DEBUG i => i_258
  _109 = block_idx_x[i_258];
  _110 = (int) _109;
  _111 = block_idx_y[i_258];
  _112 = (int) _111;
  _113 = _112 * 16;
  _114 = _110 + _113;
  oe_115 = _114 * 4;
  # DEBUG oe => oe_115
  _116 = _112 * 32;
  _117 = _110 + _116;
  od_118 = _117 * 4;
  # DEBUG od => od_118
  _119 = h_23(D)->zigzagf.sub_4x4;
  _120 = (sizetype) od_118;
  _121 = p_dst_30 + _120;
  _122 = (sizetype) oe_115;
  _123 = p_src_28 + _122;
  _124 = i_258 + 16;
  _126 = _124 + pretmp_375;
  _127 = &h_23(D)->dct.luma4x4[_126];
  _119 (_127, _123, _121);
  _129 = h_23(D)->dct.luma4x4[_126][0];
  h_23(D)->dct.chroma_dc[ch_256][i_258] = _129;
  h_23(D)->dct.luma4x4[_126][0] = 0;
  i_132 = i_258 + 1;
  # DEBUG i => i_132
  # DEBUG i => i_132
  ivtmp_347 = ivtmp_363 - 1;
  if (ivtmp_347 != 0)
    goto <bb 10>;
  else
    goto <bb 33>;

  <bb 10>:
  goto <bb 9>;

  <bb 11>:
  _32 = h_23(D)->dctf.sub8x8_dct;
  _32 (&dct4x4, p_src_28, p_dst_30);
  # DEBUG d => &dct2x2
  # DEBUG dct4x4 => &dct4x4
  _181 = MEM[(int16_t[4][4] *)&dct4x4][0][0];
  _182 = (int) _181;
  _183 = MEM[(int16_t[4][4] *)&dct4x4 + 32B][0][0];
  _184 = (int) _183;
  d0_185 = _182 + _184;
  # DEBUG d0 => d0_185
  _186 = MEM[(int16_t[4][4] *)&dct4x4 + 64B][0][0];
  _187 = (int) _186;
  _188 = MEM[(int16_t[4][4] *)&dct4x4 + 96B][0][0];
  _189 = (int) _188;
  d1_190 = _187 + _189;
  # DEBUG d1 => d1_190
  d2_191 = _182 - _184;
  # DEBUG d2 => d2_191
  d3_192 = _187 - _189;
  # DEBUG d3 => d3_192
  _193 = (unsigned short) d0_185;
  _194 = (unsigned short) d1_190;
  _195 = _193 + _194;
  _196 = (short int) _195;
  MEM[(int16_t[2] *)&dct2x2][0] = _196;
  _197 = (unsigned short) d2_191;
  _198 = (unsigned short) d3_192;
  _199 = _197 + _198;
  _200 = (short int) _199;
  MEM[(int16_t[2] *)&dct2x2 + 4B][0] = _200;
  _201 = _193 - _194;
  _202 = (short int) _201;
  MEM[(int16_t[2] *)&dct2x2][1] = _202;
  _203 = _197 - _198;
  _204 = (short int) _203;
  MEM[(int16_t[2] *)&dct2x2 + 4B][1] = _204;
  MEM[(int16_t[4][4] *)&dct4x4][0][0] = 0;
  MEM[(int16_t[4][4] *)&dct4x4 + 32B][0][0] = 0;
  MEM[(int16_t[4][4] *)&dct4x4 + 64B][0][0] = 0;
  MEM[(int16_t[4][4] *)&dct4x4 + 96B][0][0] = 0;
  # DEBUG d => NULL
  # DEBUG dct4x4 => NULL
  # DEBUG d3 => NULL
  # DEBUG d2 => NULL
  # DEBUG d1 => NULL
  # DEBUG d0 => NULL
  # DEBUG i => 0
  # DEBUG i_decimate_score => 0
  # DEBUG i => 0
  pretmp_354 = ch_256 * 4;
  pretmp_377 = b_inter_21(D) + 2;

  <bb 12>:
  # i_17 = PHI <i_64(18), 0(11)>
  # i_decimate_score_253 = PHI <i_decimate_score_6(18), 0(11)>
  # ivtmp_343 = PHI <ivtmp_334(18), 4(11)>
  # DEBUG i_decimate_score => i_decimate_score_253
  # DEBUG i => i_17
  _35 = h_23(D)->mb.b_trellis;
  if (_35 != 0)
    goto <bb 13>;
  else
    goto <bb 14>;

  <bb 13>:
  _36 = b_inter_21(D) == 0;
  _37 = (int) _36;
  _39 = &dct4x4[i_17];
  x264_quant_4x4_trellis (h_23(D), _39, pretmp_377, i_qp_40(D), 4, _37, 0);
  goto <bb 15>;

  <bb 14>:
  _42 = h_23(D)->quantf.quant_4x4;
  _44 = h_23(D)->quant4_bias[pretmp_377];
  _47 = _44 + _46;
  _48 = h_23(D)->quant4_mf[pretmp_377];
  _50 = _48 + _46;
  _51 = &dct4x4[i_17];
  _42 (_51, _50, _47);

  <bb 15>:
  # prephitmp_356 = PHI <_39(13), _51(14)>
  _53 = h_23(D)->zigzagf.scan_4x4;
  _55 = i_17 + 16;
  _57 = _55 + pretmp_354;
  _58 = &h_23(D)->dct.luma4x4[_57];
  _53 (_58, prephitmp_356);
  if (b_decimate_8 != 0)
    goto <bb 16>;
  else
    goto <bb 17>;

  <bb 16>:
  _60 = h_23(D)->quantf.decimate_score15;
  _62 = _60 (_58);
  i_decimate_score_63 = _62 + i_decimate_score_253;
  # DEBUG i_decimate_score => i_decimate_score_63

  <bb 17>:
  # i_decimate_score_6 = PHI <i_decimate_score_253(15), i_decimate_score_63(16)>
  # DEBUG i_decimate_score => i_decimate_score_6
  i_64 = i_17 + 1;
  # DEBUG i => i_64
  # DEBUG i_decimate_score => i_decimate_score_6
  # DEBUG i => i_64
  ivtmp_334 = ivtmp_343 - 1;
  if (ivtmp_334 != 0)
    goto <bb 18>;
  else
    goto <bb 19>;

  <bb 18>:
  goto <bb 12>;

  <bb 19>:
  # i_decimate_score_341 = PHI <i_decimate_score_6(17)>
  _65 = h_23(D)->mb.b_trellis;
  if (_65 != 0)
    goto <bb 20>;
  else
    goto <bb 21>;

  <bb 20>:
  _66 = b_inter_21(D) == 0;
  _67 = (int) _66;
  x264_quant_dc_trellis (h_23(D), &dct2x2, pretmp_377, i_qp_40(D), 3, _67);
  goto <bb 22>;

  <bb 21>:
  _70 = h_23(D)->quantf.quant_2x2_dc;
  _72 = h_23(D)->quant4_bias[pretmp_377];
  _75 = _72 + _74;
  _76 = *_75[0];
  _77 = (int) _76;
  _78 = _77 << 1;
  _79 = h_23(D)->quant4_mf[pretmp_377];
  _80 = _79 + _74;
  _81 = *_80[0];
  _82 = _81 >> 1;
  _83 = (int) _82;
  _70 (&dct2x2, _83, _78);

  <bb 22>:
  _85 = (_Bool) b_decimate_8;
  _86 = i_decimate_score_341 <= 6;
  _87 = _85 & _86;
  if (_87 != 0)
    goto <bb 23>;
  else
    goto <bb 26>;

  <bb 23>:
  _88 = ch_256 + 4;
  _89 = _88 * 4;
  _90 = &h_23(D)->dct.luma4x4[_89];
  # DEBUG __dest => _90
  # DEBUG __ch => 0
  # DEBUG __len => 128
  __builtin_memset (_90, 0, 128);
  # DEBUG __dest => NULL
  # DEBUG __ch => NULL
  # DEBUG __len => NULL
  # DEBUG v => &dct2x2
  # DEBUG i_count => 8
  # DEBUG v => &dct2x2
  # DEBUG i_count => 8
  # DEBUG x => &dct2x2
  _92 = MEM[(uint64_t *)&dct2x2];
  # DEBUG v => NULL
  # DEBUG i_count => NULL
  # DEBUG i => NULL
  # DEBUG v => NULL
  # DEBUG i_count => NULL
  # DEBUG i => NULL
  # DEBUG i_count => NULL
  # DEBUG nonzero => NULL
  if (_92 == 0)
    goto <bb 24>;
  else
    goto <bb 25>;

  <bb 24>:
  _94 = &h_23(D)->dct.chroma_dc[ch_256];
  # DEBUG __dest => _94
  # DEBUG __ch => 0
  # DEBUG __len => 8
  __builtin_memset (_94, 0, 8);
  # DEBUG __dest => NULL
  # DEBUG __ch => NULL
  # DEBUG __len => NULL
  goto <bb 34>;

  <bb 25>:
  # DEBUG __dest => &dct4x4
  # DEBUG __ch => 0
  # DEBUG __len => 128
  __builtin_memset (&dct4x4, 0, 128);
  goto <bb 30>;

  <bb 26>:

  <bb 27>:
  # i_257 = PHI <0(26), i_100(28)>
  # ivtmp_348 = PHI <4(26), ivtmp_336(28)>
  # DEBUG i => i_257
  _95 = h_23(D)->quantf.dequant_4x4;
  _97 = h_23(D)->dequant4_mf[pretmp_377];
  _98 = &dct4x4[i_257];
  _95 (_98, _97, i_qp_40(D));
  i_100 = i_257 + 1;
  # DEBUG i => i_100
  # DEBUG i => i_100
  ivtmp_336 = ivtmp_348 - 1;
  if (ivtmp_336 != 0)
    goto <bb 28>;
  else
    goto <bb 29>;

  <bb 28>:
  goto <bb 27>;

  <bb 29>:

  <bb 30>:
  _101 = &h_23(D)->dct.chroma_dc[ch_256];
  # DEBUG level => _101
  # DEBUG dct => &dct2x2
  _34 = MEM[(int16_t[2] *)&dct2x2][0];
  MEM[(int16_t *)_101] = _34;
  _205 = MEM[(int16_t[2] *)&dct2x2 + 4B][0];
  MEM[(int16_t *)_101 + 2B] = _205;
  _206 = MEM[(int16_t[2] *)&dct2x2][1];
  MEM[(int16_t *)_101 + 4B] = _206;
  _207 = MEM[(int16_t[2] *)&dct2x2 + 4B][1];
  MEM[(int16_t *)_101 + 6B] = _207;
  # DEBUG level => NULL
  # DEBUG dct => NULL
  _103 = h_23(D)->dequant4_mf[pretmp_377];
  # DEBUG dct => &dct2x2
  # DEBUG dct4x4 => &dct4x4
  # DEBUG dequant_mf => _103
  # DEBUG i_qp => i_qp_40(D)
  _209 = (int) _34;
  _211 = (int) _206;
  d0_212 = _209 + _211;
  # DEBUG d0 => d0_212
  _214 = (int) _205;
  _216 = (int) _207;
  d1_217 = _214 + _216;
  # DEBUG d1 => d1_217
  d2_218 = _209 - _211;
  # DEBUG d2 => d2_218
  d3_219 = _214 - _216;
  # DEBUG d3 => d3_219
  _223 = _103 + _222;
  dmf_224 = *_223[0][0];
  # DEBUG dmf => dmf_224
  # DEBUG qbits => _225 + -5
  if (qbits_226 > 0)
    goto <bb 31>;
  else
    goto <bb 32>;

  <bb 31>:
  dmf_227 = dmf_224 << qbits_226;
  # DEBUG dmf => dmf_227
  # DEBUG qbits => 0

  <bb 32>:
  # dmf_229 = PHI <dmf_224(30), dmf_227(31)>
  # prephitmp_358 = PHI <pretmp_357(30), 0(31)>
  # DEBUG qbits => NULL
  # DEBUG dmf => dmf_229
  _228 = d0_212 + d1_217;
  _230 = _228 * dmf_229;
  _233 = _230 >> prephitmp_358;
  _234 = (short int) _233;
  MEM[(int16_t[4][4] *)&dct4x4][0][0] = _234;
  _235 = d0_212 - d1_217;
  _236 = dmf_229 * _235;
  _237 = _236 >> prephitmp_358;
  _238 = (short int) _237;
  MEM[(int16_t[4][4] *)&dct4x4 + 32B][0][0] = _238;
  _239 = d2_218 + d3_219;
  _240 = dmf_229 * _239;
  _241 = _240 >> prephitmp_358;
  _242 = (short int) _241;
  MEM[(int16_t[4][4] *)&dct4x4 + 64B][0][0] = _242;
  _243 = d2_218 - d3_219;
  _244 = dmf_229 * _243;
  _245 = _244 >> prephitmp_358;
  _246 = (short int) _245;
  MEM[(int16_t[4][4] *)&dct4x4 + 96B][0][0] = _246;
  # DEBUG dct => NULL
  # DEBUG dct4x4 => NULL
  # DEBUG dequant_mf => NULL
  # DEBUG i_qp => NULL
  # DEBUG qbits => NULL
  # DEBUG dmf => NULL
  # DEBUG d3 => NULL
  # DEBUG d2 => NULL
  # DEBUG d1 => NULL
  # DEBUG d0 => NULL
  _105 = h_23(D)->dctf.add8x8_idct;
  _105 (p_dst_30, &dct4x4);
  dct2x2 ={v} {CLOBBER};
  dct4x4 ={v} {CLOBBER};
  goto <bb 35>;

  <bb 33>:

  <bb 34>:
  dct2x2 ={v} {CLOBBER};
  dct4x4 ={v} {CLOBBER};

  <bb 35>:
  # DEBUG ch => ch_27
  ivtmp_332 = ivtmp_333 - 1;
  if (ivtmp_332 != 0)
    goto <bb 36>;
  else
    goto <bb 37>;

  <bb 36>:
  goto <bb 7>;

  <bb 37>:
  h_23(D)->mb.i_cbp_chroma = 0;
  # DEBUG i => 0
  # DEBUG i => 0

  <bb 38>:
  # i_215 = PHI <i_144(39), 0(37)>
  # prephitmp_350 = PHI <_142(39), 0(37)>
  # ivtmp_335 = PHI <ivtmp_360(39), 8(37)>
  # DEBUG i => i_215
  _136 = i_215 + 16;
  _137 = &h_23(D)->dct.luma4x4[_136];
  # DEBUG v => _137
  # DEBUG i_count => 32
  # DEBUG v => _137
  # DEBUG i_count => 32
  # DEBUG x => _137
  _156 = MEM[(uint64_t *)_137];
  _157 = MEM[(uint64_t *)_137 + 8B];
  _158 = _156 | _157;
  _159 = MEM[(uint64_t *)_137 + 16B];
  _160 = _158 | _159;
  _161 = MEM[(uint64_t *)_137 + 24B];
  _162 = _160 | _161;
  _163 = _162 != 0;
  _164 = (int) _163;
  # DEBUG v => NULL
  # DEBUG i_count => NULL
  # DEBUG i => NULL
  # DEBUG v => NULL
  # DEBUG i_count => NULL
  # DEBUG i => NULL
  # DEBUG i_count => NULL
  # DEBUG nonzero => NULL
  # DEBUG nz => NULL
  _138 = x264_scan8[_136];
  _139 = (unsigned char) _163;
  h_23(D)->mb.cache.non_zero_count[_138] = _139;
  _142 = _164 | prephitmp_350;
  i_144 = i_215 + 1;
  # DEBUG i => i_144
  # DEBUG i => i_144
  ivtmp_360 = ivtmp_335 - 1;
  if (ivtmp_360 != 0)
    goto <bb 39>;
  else
    goto <bb 40>;

  <bb 39>:
  goto <bb 38>;

  <bb 40>:
  # _340 = PHI <_142(38)>
  # h__mb_i_cbp_chroma_lsm.44_329 = PHI <_142(38)>
  h_23(D)->mb.i_cbp_chroma = h__mb_i_cbp_chroma_lsm.44_329;
  # DEBUG D#1 => &h_23(D)->dct.chroma_dc[0]
  # DEBUG v => D#1
  # DEBUG i_count => 8
  # DEBUG v => D#1
  # DEBUG i_count => 8
  # DEBUG x => D#1
  _173 = MEM[(uint64_t *)h_23(D) + 9584B];
  _174 = _173 != 0;
  # DEBUG v => NULL
  # DEBUG i_count => NULL
  # DEBUG i => NULL
  # DEBUG v => NULL
  # DEBUG i_count => NULL
  # DEBUG i => NULL
  # DEBUG i_count => NULL
  # DEBUG nonzero => NULL
  _145 = (unsigned char) _174;
  h_23(D)->mb.cache.non_zero_count[45] = _145;
  # DEBUG D#2 => &h_23(D)->dct.chroma_dc[1]
  # DEBUG v => D#2
  # DEBUG i_count => 8
  # DEBUG v => D#2
  # DEBUG i_count => 8
  # DEBUG x => D#2
  _166 = MEM[(uint64_t *)h_23(D) + 9592B];
  _167 = _166 != 0;
  # DEBUG v => NULL
  # DEBUG i_count => NULL
  # DEBUG i => NULL
  # DEBUG v => NULL
  # DEBUG i_count => NULL
  # DEBUG i => NULL
  # DEBUG i_count => NULL
  # DEBUG nonzero => NULL
  _147 = (unsigned char) _167;
  h_23(D)->mb.cache.non_zero_count[46] = _147;
  if (_340 != 0)
    goto <bb 41>;
  else
    goto <bb 42>;

  <bb 41>:
  h_23(D)->mb.i_cbp_chroma = 2;
  goto <bb 44>;

  <bb 42>:
  _251 = _167 | _174;
  if (_251 != 0)
    goto <bb 43>;
  else
    goto <bb 44>;

  <bb 43>:
  h_23(D)->mb.i_cbp_chroma = 1;

  <bb 44>:
  return;

}



;; Function x264_macroblock_encode (x264_macroblock_encode, funcdef_no=132, decl_uid=5780, cgraph_uid=132, symbol_order=175)


Analyzing loop at encoder/macroblock.c:642
encoder/macroblock.c:642:9: note: ===== analyze_loop_nest =====
encoder/macroblock.c:642:9: note: === vect_analyze_loop_form ===
encoder/macroblock.c:642:9: note: === get_loop_niters ===
Analyzing # of iterations of loop 14
  exit condition [15, + , 4294967295] != 0
  bounds on difference of bases: -15 ... -15
  result:
    # of iterations 15, bounded by 15
encoder/macroblock.c:642:9: note: === vect_analyze_data_refs ===
Creating dr for MEM[(uint64_t *)_355]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:49, generic-match.c:4015
success.
Applying pattern match.pd:49, generic-match.c:4015
	base_address: h_66(D)
	offset from base address: 0
	constant offset from base address: 10112
	step: 32
	aligned to: 128
	base_object: MEM[(uint64_t *)h_66(D)]
	Access function 0: {10112B, +, 32}_14
Creating dr for MEM[(uint64_t *)_355 + 8B]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:4015
success.
Applying pattern match.pd:49, generic-match.c:4015
	base_address: h_66(D)
	offset from base address: 0
	constant offset from base address: 10120
	step: 32
	aligned to: 128
	base_object: MEM[(uint64_t *)h_66(D)]
	Access function 0: {10120B, +, 32}_14
Creating dr for MEM[(uint64_t *)_355 + 16B]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:4015
success.
Applying pattern match.pd:49, generic-match.c:4015
	base_address: h_66(D)
	offset from base address: 0
	constant offset from base address: 10128
	step: 32
	aligned to: 128
	base_object: MEM[(uint64_t *)h_66(D)]
	Access function 0: {10128B, +, 32}_14
Creating dr for MEM[(uint64_t *)_355 + 24B]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:4015
success.
Applying pattern match.pd:49, generic-match.c:4015
	base_address: h_66(D)
	offset from base address: 0
	constant offset from base address: 10136
	step: 32
	aligned to: 128
	base_object: MEM[(uint64_t *)h_66(D)]
	Access function 0: {10136B, +, 32}_14
Creating dr for x264_scan8[i_677]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &x264_scan8
	offset from base address: 0
	constant offset from base address: 0
	step: 4
	aligned to: 128
	base_object: MEM[(int[27] *)&x264_scan8]
	Access function 0: {0, +, 1}_14
Creating dr for h_66(D)->mb.cache.non_zero_count[_356]
analyze_innermost: Applying pattern match.pd:114, generic-match.c:6569
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:494, generic-match.c:3721
failed: evolution of offset is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *h_66(D)
	Access function 0: scev_not_known;
	Access function 1: 384
	Access function 2: 65024
	Access function 3: 87040
encoder/macroblock.c:642:9: note: got vectype for stmt: _472 = MEM[(uint64_t *)_355];
vector(2) long unsigned int
encoder/macroblock.c:642:9: note: got vectype for stmt: _473 = MEM[(uint64_t *)_355 + 8B];
vector(2) long unsigned int
encoder/macroblock.c:642:9: note: got vectype for stmt: _475 = MEM[(uint64_t *)_355 + 16B];
vector(2) long unsigned int
encoder/macroblock.c:642:9: note: got vectype for stmt: _477 = MEM[(uint64_t *)_355 + 24B];
vector(2) long unsigned int
encoder/macroblock.c:642:9: note: got vectype for stmt: _356 = x264_scan8[i_677];
const vector(4) int
encoder/macroblock.c:642:9: note: not vectorized: data ref analysis failed h_66(D)->mb.cache.non_zero_count[_356] = _357;

encoder/macroblock.c:642:9: note: bad data references.

Analyzing loop at encoder/macroblock.c:653
encoder/macroblock.c:653:9: note: ===== analyze_loop_nest =====
encoder/macroblock.c:653:9: note: === vect_analyze_loop_form ===
encoder/macroblock.c:653:9: note: ===== analyze_loop_nest_1 =====
encoder/macroblock.c:653:9: note: === vect_analyze_loop_form ===
encoder/macroblock.c:653:9: note: === get_loop_niters ===
Analyzing # of iterations of loop 13
  exit condition [3, + , 4294967295] != 0
  bounds on difference of bases: -3 ... -3
  result:
    # of iterations 3, bounded by 3
encoder/macroblock.c:653:9: note: not vectorized: control flow in loop.
encoder/macroblock.c:653:9: note: bad loop form.

Analyzing loop at encoder/macroblock.c:669
encoder/macroblock.c:669:17: note: ===== analyze_loop_nest =====
encoder/macroblock.c:669:17: note: === vect_analyze_loop_form ===
encoder/macroblock.c:669:17: note: === get_loop_niters ===
encoder/macroblock.c:669:17: note: === vect_analyze_data_refs ===
Creating dr for MEM[(uint64_t *)_399]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:49, generic-match.c:3223
success.
Applying pattern match.pd:49, generic-match.c:3223
	base_address: (int16_t[16] *) h_66(D) + (sizetype) (i_676 * 4) * 32
	offset from base address: 0
	constant offset from base address: 10112
	step: 32
	aligned to: 128
	base_object: MEM[(uint64_t *)(int16_t[16] *) h_66(D) + (sizetype) (i_676 * 4) * 32]
	Access function 0: {10112B, +, 32}_13
Creating dr for MEM[(uint64_t *)_399 + 8B]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
Applying pattern match.pd:49, generic-match.c:3223
	base_address: (int16_t[16] *) h_66(D) + (sizetype) (i_676 * 4) * 32
	offset from base address: 0
	constant offset from base address: 10120
	step: 32
	aligned to: 128
	base_object: MEM[(uint64_t *)(int16_t[16] *) h_66(D) + (sizetype) (i_676 * 4) * 32]
	Access function 0: {10120B, +, 32}_13
Creating dr for MEM[(uint64_t *)_399 + 16B]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
Applying pattern match.pd:49, generic-match.c:3223
	base_address: (int16_t[16] *) h_66(D) + (sizetype) (i_676 * 4) * 32
	offset from base address: 0
	constant offset from base address: 10128
	step: 32
	aligned to: 128
	base_object: MEM[(uint64_t *)(int16_t[16] *) h_66(D) + (sizetype) (i_676 * 4) * 32]
	Access function 0: {10128B, +, 32}_13
Creating dr for MEM[(uint64_t *)_399 + 24B]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
Applying pattern match.pd:49, generic-match.c:3223
	base_address: (int16_t[16] *) h_66(D) + (sizetype) (i_676 * 4) * 32
	offset from base address: 0
	constant offset from base address: 10136
	step: 32
	aligned to: 128
	base_object: MEM[(uint64_t *)(int16_t[16] *) h_66(D) + (sizetype) (i_676 * 4) * 32]
	Access function 0: {10136B, +, 32}_13
Creating dr for x264_scan8[_398]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &x264_scan8
	offset from base address: (ssizetype) ((sizetype) (i_676 * 4) * 4)
	constant offset from base address: 0
	step: 4
	aligned to: 16
	base_object: MEM[(int[27] *)&x264_scan8]
	Access function 0: {pretmp_823, +, 1}_13
Creating dr for h_66(D)->mb.cache.non_zero_count[_401]
analyze_innermost: Applying pattern match.pd:114, generic-match.c:6569
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:494, generic-match.c:3721
failed: evolution of offset is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: *h_66(D)
	Access function 0: scev_not_known;
	Access function 1: 384
	Access function 2: 65024
	Access function 3: 87040
encoder/macroblock.c:669:17: note: got vectype for stmt: _494 = MEM[(uint64_t *)_399];
vector(2) long unsigned int
encoder/macroblock.c:669:17: note: got vectype for stmt: _495 = MEM[(uint64_t *)_399 + 8B];
vector(2) long unsigned int
encoder/macroblock.c:669:17: note: got vectype for stmt: _497 = MEM[(uint64_t *)_399 + 16B];
vector(2) long unsigned int
encoder/macroblock.c:669:17: note: got vectype for stmt: _499 = MEM[(uint64_t *)_399 + 24B];
vector(2) long unsigned int
encoder/macroblock.c:669:17: note: got vectype for stmt: _401 = x264_scan8[_398];
const vector(4) int
encoder/macroblock.c:669:17: note: not vectorized: data ref analysis failed h_66(D)->mb.cache.non_zero_count[_401] = _402;

encoder/macroblock.c:669:17: note: bad data references.

Analyzing loop at encoder/macroblock.c:520
encoder/macroblock.c:520:17: note: ===== analyze_loop_nest =====
encoder/macroblock.c:520:17: note: === vect_analyze_loop_form ===
encoder/macroblock.c:520:17: note: === get_loop_niters ===
Analyzing # of iterations of loop 8
  exit condition [3, + , 4294967295] != 0
  bounds on difference of bases: -3 ... -3
  result:
    # of iterations 3, bounded by 3
encoder/macroblock.c:520:17: note: === vect_analyze_data_refs ===
Creating dr for h_66(D)->zigzagf.sub_8x8
analyze_innermost: success.
	base_address: h_66(D)
	offset from base address: 0
	constant offset from base address: 25536
	step: 0
	aligned to: 128
	base_object: *h_66(D)
	Access function 0: 128
	Access function 1: 204160
Creating dr for h_66(D)->mb.pic.p_fdec[0]
analyze_innermost: success.
	base_address: h_66(D)
	offset from base address: 0
	constant offset from base address: 15624
	step: 0
	aligned to: 128
	base_object: *h_66(D)
	Access function 0: 0
	Access function 1: 30272
	Access function 2: 7680
	Access function 3: 87040
Creating dr for h_66(D)->mb.pic.p_fenc[0]
analyze_innermost: success.
	base_address: h_66(D)
	offset from base address: 0
	constant offset from base address: 15576
	step: 0
	aligned to: 128
	base_object: *h_66(D)
	Access function 0: 0
	Access function 1: 29888
	Access function 2: 7680
	Access function 3: 87040
encoder/macroblock.c:520:17: note: not vectorized: loop contains function calls or data references that cannot be analyzed
encoder/macroblock.c:520:17: note: bad data references.

Analyzing loop at encoder/macroblock.c:530
encoder/macroblock.c:530:17: note: ===== analyze_loop_nest =====
encoder/macroblock.c:530:17: note: === vect_analyze_loop_form ===
encoder/macroblock.c:530:17: note: === get_loop_niters ===
Analyzing # of iterations of loop 7
  exit condition [15, + , 4294967295] != 0
  bounds on difference of bases: -15 ... -15
  result:
    # of iterations 15, bounded by 15
encoder/macroblock.c:530:17: note: === vect_analyze_data_refs ===
Creating dr for h_66(D)->zigzagf.sub_4x4
analyze_innermost: success.
	base_address: h_66(D)
	offset from base address: 0
	constant offset from base address: 25544
	step: 0
	aligned to: 128
	base_object: *h_66(D)
	Access function 0: 192
	Access function 1: 204160
Creating dr for h_66(D)->mb.pic.p_fdec[0]
analyze_innermost: success.
	base_address: h_66(D)
	offset from base address: 0
	constant offset from base address: 15624
	step: 0
	aligned to: 128
	base_object: *h_66(D)
	Access function 0: 0
	Access function 1: 30272
	Access function 2: 7680
	Access function 3: 87040
Creating dr for block_idx_xy_fdec[i4x4_711]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &block_idx_xy_fdec
	offset from base address: 0
	constant offset from base address: 0
	step: 2
	aligned to: 128
	base_object: MEM[(uint16_t[16] *)&block_idx_xy_fdec]
	Access function 0: {0, +, 1}_7
Creating dr for h_66(D)->mb.pic.p_fenc[0]
analyze_innermost: success.
	base_address: h_66(D)
	offset from base address: 0
	constant offset from base address: 15576
	step: 0
	aligned to: 128
	base_object: *h_66(D)
	Access function 0: 0
	Access function 1: 29888
	Access function 2: 7680
	Access function 3: 87040
Creating dr for block_idx_xy_fenc[i4x4_711]
analyze_innermost: Applying pattern match.pd:114, generic-match.c:6569
Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &block_idx_xy_fenc
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: MEM[(uint8_t[16] *)&block_idx_xy_fenc]
	Access function 0: {0, +, 1}_7
encoder/macroblock.c:530:17: note: not vectorized: loop contains function calls or data references that cannot be analyzed
encoder/macroblock.c:530:17: note: bad data references.

Analyzing loop at encoder/macroblock.c:567
encoder/macroblock.c:567:17: note: ===== analyze_loop_nest =====
encoder/macroblock.c:567:17: note: === vect_analyze_loop_form ===
encoder/macroblock.c:567:17: note: not vectorized: control flow in loop.
encoder/macroblock.c:567:17: note: bad loop form.

Analyzing loop at encoder/macroblock.c:544
encoder/macroblock.c:544:13: note: ===== analyze_loop_nest =====
encoder/macroblock.c:544:13: note: === vect_analyze_loop_form ===
encoder/macroblock.c:544:13: note: not vectorized: control flow in loop.
encoder/macroblock.c:544:13: note: bad loop form.

Analyzing loop at encoder/macroblock.c:611
encoder/macroblock.c:611:17: note: ===== analyze_loop_nest =====
encoder/macroblock.c:611:17: note: === vect_analyze_loop_form ===
encoder/macroblock.c:611:17: note: ===== analyze_loop_nest_1 =====
encoder/macroblock.c:611:17: note: === vect_analyze_loop_form ===
encoder/macroblock.c:611:17: note: === get_loop_niters ===
Analyzing # of iterations of loop 3
  exit condition [3, + , 4294967295] != 0
  bounds on difference of bases: -3 ... -3
  result:
    # of iterations 3, bounded by 3
encoder/macroblock.c:611:17: note: not vectorized: control flow in loop.
encoder/macroblock.c:611:17: note: bad loop form.

Analyzing loop at encoder/macroblock.c:614
encoder/macroblock.c:614:25: note: ===== analyze_loop_nest =====
encoder/macroblock.c:614:25: note: === vect_analyze_loop_form ===
encoder/macroblock.c:614:25: note: === get_loop_niters ===
encoder/macroblock.c:614:25: note: === vect_analyze_data_refs ===
Creating dr for h_66(D)->quantf.dequant_4x4
analyze_innermost: success.
	base_address: h_66(D)
	offset from base address: 0
	constant offset from base address: 25600
	step: 0
	aligned to: 128
	base_object: *h_66(D)
	Access function 0: 320
	Access function 1: 204480
Creating dr for h_66(D)->dequant4_mf[1]
analyze_innermost: success.
	base_address: h_66(D)
	offset from base address: 0
	constant offset from base address: 3352
	step: 0
	aligned to: 128
	base_object: *h_66(D)
	Access function 0: 1
	Access function 1: 26752
encoder/macroblock.c:614:25: note: not vectorized: loop contains function calls or data references that cannot be analyzed
encoder/macroblock.c:614:25: note: bad data references.

Analyzing loop at encoder/macroblock.c:581
encoder/macroblock.c:581:13: note: ===== analyze_loop_nest =====
encoder/macroblock.c:581:13: note: === vect_analyze_loop_form ===
encoder/macroblock.c:581:13: note: ===== analyze_loop_nest_1 =====
encoder/macroblock.c:581:13: note: === vect_analyze_loop_form ===
encoder/macroblock.c:581:13: note: not vectorized: control flow in loop.
encoder/macroblock.c:581:13: note: bad inner-loop form.
encoder/macroblock.c:581:13: note: not vectorized: Bad inner loop.
encoder/macroblock.c:581:13: note: bad loop form.

Analyzing loop at encoder/macroblock.c:587
encoder/macroblock.c:587:17: note: ===== analyze_loop_nest =====
encoder/macroblock.c:587:17: note: === vect_analyze_loop_form ===
encoder/macroblock.c:587:17: note: not vectorized: control flow in loop.
encoder/macroblock.c:587:17: note: bad loop form.

Analyzing loop at encoder/macroblock.c:156
encoder/macroblock.c:156:9: note: ===== analyze_loop_nest =====
encoder/macroblock.c:156:9: note: === vect_analyze_loop_form ===
encoder/macroblock.c:156:9: note: === get_loop_niters ===
Analyzing # of iterations of loop 21
  exit condition [15, + , 4294967295] != 0
  bounds on difference of bases: -15 ... -15
  result:
    # of iterations 15, bounded by 15
encoder/macroblock.c:156:9: note: === vect_analyze_data_refs ===
Creating dr for block_idx_xy_fenc[i_692]
analyze_innermost: Applying pattern match.pd:114, generic-match.c:6569
Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &block_idx_xy_fenc
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: MEM[(uint8_t[16] *)&block_idx_xy_fenc]
	Access function 0: {0, +, 1}_21
Creating dr for block_idx_xy_fdec[i_692]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &block_idx_xy_fdec
	offset from base address: 0
	constant offset from base address: 0
	step: 2
	aligned to: 128
	base_object: MEM[(uint16_t[16] *)&block_idx_xy_fdec]
	Access function 0: {0, +, 1}_21
Creating dr for h_66(D)->zigzagf.sub_4x4
analyze_innermost: success.
	base_address: h_66(D)
	offset from base address: 0
	constant offset from base address: 25544
	step: 0
	aligned to: 128
	base_object: *h_66(D)
	Access function 0: 192
	Access function 1: 204160
encoder/macroblock.c:156:9: note: not vectorized: loop contains function calls or data references that cannot be analyzed
encoder/macroblock.c:156:9: note: bad data references.

Analyzing loop at encoder/macroblock.c:194
encoder/macroblock.c:194:5: note: ===== analyze_loop_nest =====
encoder/macroblock.c:194:5: note: === vect_analyze_loop_form ===
encoder/macroblock.c:194:5: note: === get_loop_niters ===
Analyzing # of iterations of loop 22
  exit condition [15, + , 4294967295] != 0
  bounds on difference of bases: -15 ... -15
  result:
    # of iterations 15, bounded by 15
encoder/macroblock.c:194:5: note: === vect_analyze_data_refs ===
Creating dr for block_idx_xy_1d[i_691]
analyze_innermost: Applying pattern match.pd:114, generic-match.c:6569
Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &block_idx_xy_1d
	offset from base address: 0
	constant offset from base address: 0
	step: 1
	aligned to: 128
	base_object: MEM[(uint8_t[16] *)&block_idx_xy_1d]
	Access function 0: {0, +, 1}_22
Creating dr for dct_dc4x4[0][_587]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:724, generic-match.c:1428
failed: evolution of offset is not affine.
	base_address: 
	offset from base address: 
	constant offset from base address: 
	step: 
	aligned to: 
	base_object: dct_dc4x4
	Access function 0: scev_not_known;
	Access function 1: 0
Creating dr for dct4x4[i_691][0][0]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &dct4x4
	offset from base address: 0
	constant offset from base address: 0
	step: 32
	aligned to: 128
	base_object: dct4x4
	Access function 0: 0
	Access function 1: 0
	Access function 2: {0, +, 1}_22
encoder/macroblock.c:194:5: note: got vectype for stmt: _586 = block_idx_xy_1d[i_691];
const vector(16) unsigned char
Creating dr for dct_dc4x4[0][_587]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:724, generic-match.c:1428
success.
	base_address: &dct_dc4x4
	offset from base address: (ssizetype) ((sizetype) _587 * 2)
	constant offset from base address: 0
	step: 0
	aligned to: 2
	base_object: dct_dc4x4[0][_587]
encoder/macroblock.c:194:5: note: got vectype for stmt: _588 = dct_dc4x4[0][_587];
vector(8) short int
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
encoder/macroblock.c:194:5: note: not vectorized: not suitable for gather load _588 = dct_dc4x4[0][_587];

encoder/macroblock.c:194:5: note: bad data references.

Analyzing loop at encoder/macroblock.c:169
encoder/macroblock.c:169:5: note: ===== analyze_loop_nest =====
encoder/macroblock.c:169:5: note: === vect_analyze_loop_form ===
encoder/macroblock.c:169:5: note: not vectorized: control flow in loop.
encoder/macroblock.c:169:5: note: bad loop form.

Analyzing loop at encoder/macroblock.c:478
encoder/macroblock.c:478:9: note: ===== analyze_loop_nest =====
encoder/macroblock.c:478:9: note: === vect_analyze_loop_form ===
encoder/macroblock.c:478:9: note: not vectorized: latch block not empty.
encoder/macroblock.c:478:9: note: bad loop form.

Analyzing loop at encoder/macroblock.c:465
encoder/macroblock.c:465:9: note: ===== analyze_loop_nest =====
encoder/macroblock.c:465:9: note: === vect_analyze_loop_form ===
encoder/macroblock.c:465:9: note: not vectorized: control flow in loop.
encoder/macroblock.c:465:9: note: bad loop form.

Analyzing loop at encoder/macroblock.c:492
encoder/macroblock.c:492:9: note: ===== analyze_loop_nest =====
encoder/macroblock.c:492:9: note: === vect_analyze_loop_form ===
encoder/macroblock.c:492:9: note: not vectorized: control flow in loop.
encoder/macroblock.c:492:9: note: bad loop form.
encoder/macroblock.c:399:6: note: vectorized 0 loops in function.
x264_macroblock_encode (struct x264_t * h)
{
  _Bool h__mb_i_cbp_luma_lsm.110;
  int h__mb_i_cbp_luma_lsm.109;
  uint8_t * p_src;
  uint8_t * p_dst;
  int16_t dct4x4[16][4][4];
  int16_t dct_dc4x4[4][4];
  int i;
  int nonzero;
  int nonzero;
  int nonzero;
  int cbp;
  const int i_mode;
  int i_decimate_8x8;
  int16_t dct4x4[16][4][4];
  int i_decimate_8x8;
  int16_t dct8x8[4][8][8];
  int y;
  int x;
  int i_decimate_mb;
  int i4x4;
  int i8x8;
  int i_mode;
  uint8_t * p_dst;
  int i_mode;
  uint8_t * p_dst;
  uint8_t edge[33];
  const int i_mode;
  uint8_t nnz8x8[4];
  int idx;
  int j;
  int i;
  int b_force_no_skip;
  int b_decimate;
  int i_qp;
  int i_cbp_dc;
  short int _13;
  unsigned int ivtmp_63;
  int _68;
  int _69;
  int _75;
  int _76;
  int _77;
  int _78;
  int _79;
  int8_t * _80;
  sizetype _81;
  int8_t * _82;
  signed char _83;
  _Bool _84;
  _Bool _85;
  _Bool _86;
  int _87;
  _Bool _88;
  _Bool _89;
  _Bool _90;
  int _99;
  void (*<Te99>) (uint8_t *) _101;
  uint8_t * _102;
  int _106;
  void (*<Tf94>) (uint8_t *, int, uint8_t *, int, int) _107;
  uint8_t[256] * _108;
  uint8_t * _109;
  int _111;
  void * (*<Tfad>) (void *, const void *, size_t, void, ...) _112;
  int16_t[3][64] * _113;
  int16_t[4][64] * _114;
  uint8_t * _118;
  int _119;
  int _120;
  int _121;
  int _122;
  int _123;
  sizetype _124;
  int _126;
  int _127;
  signed char _128;
  unsigned char _130;
  int _131;
  unsigned int _132;
  int _133;
  int _135;
  void (*<Tea1>) (uint8_t *, uint8_t *) _137;
  unsigned char _142;
  int _147;
  void (*<Tf94>) (uint8_t *, int, uint8_t *, int, int) _148;
  uint8_t[256] * _149;
  uint8_t * _150;
  int _152;
  void * (*<Tfad>) (void *, const void *, size_t, void, ...) _153;
  int16_t[15][16] * _154;
  int16_t[24][16] * _155;
  uint8_t * _159;
  short unsigned int _160;
  sizetype _161;
  int _163;
  signed char _164;
  unsigned int _166;
  unsigned int _167;
  unsigned char _168;
  unsigned int _169;
  unsigned int _170;
  int _172;
  void (*<Te99>) (uint8_t *) _174;
  int _178;
  int _180;
  int _181;
  void (*<T10ea>) (int16_t *, const uint8_t *, uint8_t *) _182;
  uint8_t * _183;
  short unsigned int _184;
  sizetype _185;
  uint8_t * _186;
  uint8_t * _187;
  unsigned char _188;
  sizetype _189;
  const uint8_t * _190;
  int16_t[16] * _191;
  int _194;
  int _196;
  void (*<T10ea>) (int16_t *, const uint8_t *, uint8_t *) _198;
  uint8_t * _199;
  sizetype _200;
  int _201;
  sizetype _202;
  sizetype _203;
  uint8_t * _204;
  uint8_t * _205;
  int _206;
  sizetype _207;
  sizetype _208;
  uint8_t * _209;
  int16_t[64] * _210;
  unsigned char _213;
  int _216;
  int _217;
  _Bool _218;
  int _219;
  void (*<T10b4>) (int16_t[8][8] *, uint8_t *, uint8_t *) _221;
  uint8_t * _222;
  uint8_t * _223;
  unsigned int _225;
  int _226;
  int _227;
  unsigned int _228;
  unsigned int _229;
  void (*<T1190>) (int16_t *, uint32_t *, uint16_t *, int) _232;
  uint16_t[64] * _233;
  uint32_t[64] * _234;
  int16_t[8][8] * _235;
  void (*<T10d9>) (int16_t *, int16_t[8] *) _239;
  int16_t[64] * _240;
  int (*<T1194>) (int16_t *) _242;
  unsigned char _248;
  _Bool _251;
  _Bool _252;
  _Bool _253;
  unsigned char _255;
  void (*<T1171>) (int16_t[8] *, int[8][8] *, int) _256;
  int[8][8] * _257;
  int16_t[8][8] * _258;
  void (*<T10a7>) (uint8_t *, int16_t[8] *) _260;
  uint8_t * _262;
  int _263;
  int _264;
  int _265;
  int _266;
  int _267;
  sizetype _268;
  uint8_t * _269;
  void (*<T1078>) (int16_t[4][4] *, uint8_t *, uint8_t *) _273;
  uint8_t * _274;
  uint8_t * _275;
  unsigned int _277;
  int _278;
  int _279;
  unsigned int _280;
  unsigned int _281;
  void (*<T1190>) (int16_t *, uint32_t *, uint16_t *, int) _286;
  uint16_t[64] * _287;
  uint32_t[64] * _288;
  int16_t[4][4] * _289;
  void (*<T10e4>) (int16_t *, int16_t[4] *) _292;
  int16_t[16] * _293;
  _Bool _296;
  _Bool _297;
  int (*<T1194>) (int16_t *) _298;
  int _301;
  _Bool _305;
  _Bool _307;
  _Bool _310;
  _Bool _312;
  unsigned char _314;
  void (*<T1180>) (int16_t[4] *, int[4][4] *, int) _315;
  int[4][4] * _316;
  int _318;
  int16_t[4][4] * _319;
  void (*<T1082>) (uint8_t *, int16_t[4][4] *) _322;
  int16_t[4][4] * _324;
  uint8_t * _325;
  int _326;
  int _327;
  int _328;
  int _329;
  int _330;
  sizetype _331;
  uint8_t * _332;
  int _336;
  unsigned int _337;
  int _339;
  void (*<Te99>) (uint8_t *) _341;
  uint8_t * _342;
  void (*<Te99>) (uint8_t *) _344;
  uint8_t * _345;
  int _347;
  _Bool _350;
  int _351;
  int _354;
  int16_t[16] * _355;
  int _356;
  unsigned char _357;
  int _360;
  unsigned int ivtmp_361;
  int _364;
  _Bool _366;
  unsigned char _367;
  unsigned char _369;
  int _370;
  int _371;
  uint8_t * _372;
  int _374;
  int _375;
  uint8_t * _376;
  int _378;
  int _379;
  int _380;
  uint8_t * _381;
  short unsigned int _383;
  short unsigned int _384;
  int _386;
  int _387;
  uint8_t * _388;
  int _392;
  int _393;
  int _394;
  int _395;
  int _398;
  int16_t[16] * _399;
  int _401;
  unsigned char _402;
  int _406;
  int _407;
  int _408;
  int _412;
  unsigned char _413;
  int _414;
  unsigned char _415;
  int _416;
  int _417;
  unsigned char _419;
  int _420;
  int _421;
  int16_t * _423;
  int _424;
  long unsigned int _425;
  long unsigned int _426;
  int16_t * _427;
  int _430;
  int _431;
  short int _432;
  int _433;
  short int _435;
  short int _436;
  signed long _438;
  int _439;
  unsigned int _440;
  unsigned int _441;
  signed char _442;
  int _444;
  int _445;
  int _448;
  _Bool _454;
  int _455;
  void (*<T1144>) (int16_t[8] *, uint16_t *, uint16_t *) _456;
  uint16_t[64] * _457;
  long unsigned int _458;
  long unsigned int _459;
  uint16_t * _460;
  uint16_t[64] * _461;
  uint16_t * _462;
  _Bool _463;
  int _464;
  void (*<T1150>) (int16_t[4] *, uint16_t *, uint16_t *) _465;
  uint16_t[16] * _466;
  long unsigned int _467;
  long unsigned int _468;
  uint16_t * _469;
  uint16_t[16] * _470;
  uint16_t * _471;
  long unsigned int _472;
  long unsigned int _473;
  long unsigned int _474;
  long unsigned int _475;
  long unsigned int _476;
  long unsigned int _477;
  long unsigned int _478;
  _Bool _479;
  int _480;
  long unsigned int _484;
  long unsigned int _485;
  long unsigned int _486;
  long unsigned int _487;
  long unsigned int _488;
  long unsigned int _489;
  long unsigned int _490;
  _Bool _491;
  long unsigned int _494;
  long unsigned int _495;
  long unsigned int _496;
  long unsigned int _497;
  long unsigned int _498;
  long unsigned int _499;
  long unsigned int _500;
  _Bool _501;
  int _502;
  int _504;
  int _505;
  short int _506;
  int _507;
  int iftmp.5_508;
  int _509;
  int _510;
  short int _511;
  int _512;
  int iftmp.5_513;
  int _514;
  void (*<Tf7f>) (uint8_t *, int, uint8_t * *, int, int, int, int, int) _515;
  int _516;
  uint8_t *[6] * _517;
  uint8_t * _518;
  int iftmp.5_519;
  int iftmp.5_520;
  void (*<Tf87>) (uint8_t *, int, uint8_t *, int, int, int, int, int) _521;
  int _522;
  uint8_t * _523;
  uint8_t * _524;
  void (*<Tf87>) (uint8_t *, int, uint8_t *, int, int, int, int, int) _525;
  int _526;
  uint8_t * _527;
  uint8_t * _528;
  int _530;
  unsigned char _532;
  short unsigned int _533;
  void (*<T10ea>) (int16_t *, const uint8_t *, uint8_t *) _534;
  sizetype _535;
  uint8_t * _536;
  sizetype _537;
  const uint8_t * _538;
  int16_t[16] * _539;
  unsigned char _540;
  int _541;
  short int _542;
  void (*<T10e4>) (int16_t *, int16_t[4] *) _544;
  int16_t[16] * _545;
  void (*<T1078>) (int16_t[4][4] *, uint8_t *, uint8_t *) _546;
  unsigned char _548;
  int _549;
  short int _550;
  int16_t[4][4] * _551;
  int _552;
  void (*<T1150>) (int16_t[4] *, uint16_t *, uint16_t *) _553;
  uint16_t[16] * _554;
  long unsigned int _555;
  long unsigned int _556;
  uint16_t * _557;
  uint16_t[16] * _558;
  uint16_t * _559;
  void (*<T10e4>) (int16_t *, int16_t[4] *) _560;
  int16_t[16] * _561;
  void (*<T1180>) (int16_t[4] *, int[4][4] *, int) _562;
  int[4][4] * _563;
  void (*<T10c6>) (int16_t[4] *) _565;
  int _566;
  void (*<T1158>) (int16_t[4] *, int, int) _567;
  uint16_t[16] * _568;
  long unsigned int _569;
  long unsigned int _570;
  uint16_t[16] * _571;
  short unsigned int _572;
  int _573;
  int _574;
  uint16_t[16] * _575;
  uint16_t[16] * _576;
  short unsigned int _577;
  short unsigned int _578;
  int _579;
  void (*<T10e4>) (int16_t *, int16_t[4] *) _580;
  int16_t[16] * _581;
  void (*<T10c6>) (int16_t[4] *) _582;
  void (*<T1180>) (int16_t[4] *, int[4][4] *, int) _583;
  int[4][4] * _584;
  unsigned char _586;
  int _587;
  short int _588;
  void (*<T1082>) (uint8_t *, int16_t[4][4] *) _590;
  unsigned int ivtmp_667;
  int _681;
  int _688;
  _Bool _700;
  unsigned int ivtmp_784;
  int _786;
  unsigned int ivtmp_790;
  unsigned int ivtmp_791;
  unsigned int ivtmp_792;
  unsigned int ivtmp_793;
  unsigned int ivtmp_794;
  unsigned int ivtmp_795;
  unsigned int ivtmp_796;
  unsigned int ivtmp_798;
  unsigned int ivtmp_800;
  unsigned int ivtmp_802;
  unsigned int ivtmp_803;
  int pretmp_809;
  int pretmp_810;
  unsigned int pretmp_812;
  unsigned int pretmp_813;
  unsigned int prephitmp_814;
  int pretmp_815;
  int prephitmp_816;
  int pretmp_817;
  short int pretmp_819;
  short int prephitmp_820;
  int pretmp_823;
  unsigned int ivtmp_825;
  int prephitmp_827;
  _Bool pretmp_830;
  int pretmp_833;
  int prephitmp_834;
  int pretmp_835;
  int pretmp_836;
  int prephitmp_837;
  int16_t[4][4] * pretmp_841;
  int16_t[4][4] * prephitmp_842;
  int pretmp_844;
  int pretmp_846;
  int prephitmp_847;
  int16_t[8][8] * pretmp_849;
  int16_t[8][8] * prephitmp_850;
  unsigned int ivtmp_852;
  unsigned int ivtmp_855;
  unsigned int ivtmp_871;
  unsigned int ivtmp_873;
  unsigned int ivtmp_875;
  unsigned int ivtmp_878;
  int pretmp_881;
  int prephitmp_882;
  unsigned int ivtmp_890;
  unsigned int ivtmp_898;
  unsigned int ivtmp_899;
  int16_t[4][64] * pretmp_903;
  int16_t[4][64] * prephitmp_904;
  int pretmp_905;
  int prephitmp_906;
  unsigned int ivtmp_907;
  unsigned int ivtmp_911;
  unsigned int ivtmp_915;
  unsigned int ivtmp_917;
  unsigned int ivtmp_921;
  int pretmp_925;
  int prephitmp_928;
  int16_t[4][64] * pretmp_929;
  int16_t[4][64] * prephitmp_930;
  int16_t[64] * pretmp_931;
  int16_t[64] * prephitmp_932;

  <bb 2>:
  # DEBUG i_cbp_dc => 0
  i_qp_67 = h_66(D)->mb.i_qp;
  # DEBUG i_qp => i_qp_67
  _68 = h_66(D)->sh.i_type;
  if (_68 == 1)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  _69 = h_66(D)->param.analyse.b_dct_decimate;
  _700 = _69 != 0;
  b_decimate_698 = (int) _700;

  <bb 4>:
  # b_decimate_23 = PHI <b_decimate_698(3), 1(2)>
  # DEBUG b_decimate => b_decimate_23
  # DEBUG b_force_no_skip => 0
  nnz8x8[0] = 1;
  nnz8x8[1] = 1;
  nnz8x8[2] = 1;
  nnz8x8[3] = 1;
  _75 = h_66(D)->sh.b_mbaff;
  if (_75 != 0)
    goto <bb 5>;
  else
    goto <bb 12>;

  <bb 5>:
  _76 = h_66(D)->mb.i_mb_xy;
  _77 = h_66(D)->sh.i_first_mb;
  _78 = h_66(D)->mb.i_mb_stride;
  _79 = _77 + _78;
  if (_76 == _79)
    goto <bb 6>;
  else
    goto <bb 12>;

  <bb 6>:
  _80 = h_66(D)->mb.type;
  _81 = (sizetype) _77;
  _82 = _80 + _81;
  _83 = *_82;
  _84 = _83 == 6;
  _85 = _83 == 18;
  _86 = _84 | _85;
  if (_86 != 0)
    goto <bb 7>;
  else
    goto <bb 12>;

  <bb 7>:
  # DEBUG b_force_no_skip => 1
  _87 = h_66(D)->mb.i_type;
  _88 = _87 == 6;
  _89 = _87 == 18;
  _90 = _88 | _89;
  if (_90 != 0)
    goto <bb 8>;
  else
    goto <bb 13>;

  <bb 8>:
  if (_87 == 6)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  h_66(D)->mb.i_type = 4;
  goto <bb 175>;

  <bb 10>:
  if (_87 == 18)
    goto <bb 11>;
  else
    goto <bb 24>;

  <bb 11>:
  h_66(D)->mb.i_type = 7;
  goto <bb 175>;

  <bb 12>:
  pretmp_925 = h_66(D)->mb.i_type;

  <bb 13>:
  # b_force_no_skip_2 = PHI <0(12), 1(7)>
  # prephitmp_928 = PHI <pretmp_925(12), _87(7)>
  # DEBUG b_force_no_skip => b_force_no_skip_2
  if (prephitmp_928 == 6)
    goto <bb 14>;
  else
    goto <bb 21>;

  <bb 14>:
  # DEBUG h => h_66(D)
  _504 = h_66(D)->mb.mv_max[0];
  _505 = h_66(D)->mb.mv_min[0];
  _506 = h_66(D)->mb.cache.mv[0][12][0];
  _507 = (int) _506;
  # DEBUG v => _507
  # DEBUG i_min => _505
  # DEBUG i_max => _504
  if (_505 <= _507)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 15>:
  iftmp.5_508 = MIN_EXPR <_504, _507>;

  <bb 16>:
  # iftmp.5_519 = PHI <_505(14), iftmp.5_508(15)>
  # DEBUG v => NULL
  # DEBUG i_min => NULL
  # DEBUG i_max => NULL
  # DEBUG mvx => NULL
  _509 = h_66(D)->mb.mv_max[1];
  _510 = h_66(D)->mb.mv_min[1];
  _511 = h_66(D)->mb.cache.mv[0][12][1];
  _512 = (int) _511;
  # DEBUG v => _512
  # DEBUG i_min => _510
  # DEBUG i_max => _509
  if (_510 <= _512)
    goto <bb 17>;
  else
    goto <bb 18>;

  <bb 17>:
  iftmp.5_513 = MIN_EXPR <_509, _512>;

  <bb 18>:
  # iftmp.5_520 = PHI <_510(16), iftmp.5_513(17)>
  # DEBUG v => NULL
  # DEBUG i_min => NULL
  # DEBUG i_max => NULL
  # DEBUG mvy => NULL
  _514 = h_66(D)->mb.b_skip_mc;
  if (_514 == 0)
    goto <bb 19>;
  else
    goto <bb 20>;

  <bb 19>:
  _515 = h_66(D)->mc.mc_luma;
  _516 = h_66(D)->mb.pic.i_stride[0];
  _517 = &h_66(D)->mb.pic.p_fref[0][0];
  _518 = h_66(D)->mb.pic.p_fdec[0];
  _515 (_518, 32, _517, _516, iftmp.5_519, iftmp.5_520, 16, 16);
  _521 = h_66(D)->mc.mc_chroma;
  _522 = h_66(D)->mb.pic.i_stride[1];
  _523 = h_66(D)->mb.pic.p_fref[0][0][4];
  _524 = h_66(D)->mb.pic.p_fdec[1];
  _521 (_524, 32, _523, _522, iftmp.5_519, iftmp.5_520, 8, 8);
  _525 = h_66(D)->mc.mc_chroma;
  _526 = h_66(D)->mb.pic.i_stride[2];
  _527 = h_66(D)->mb.pic.p_fref[0][0][5];
  _528 = h_66(D)->mb.pic.p_fdec[2];
  _525 (_528, 32, _527, _526, iftmp.5_519, iftmp.5_520, 8, 8);

  <bb 20>:
  x264_macroblock_encode_skip (h_66(D));
  nnz8x8 ={v} {CLOBBER};
  goto <bb 174>;

  <bb 21>:
  if (prephitmp_928 == 18)
    goto <bb 22>;
  else
    goto <bb 24>;

  <bb 22>:
  _448 = h_66(D)->mb.b_skip_mc;
  if (_448 == 0)
    goto <bb 23>;
  else
    goto <bb 20>;

  <bb 23>:
  x264_mb_mc (h_66(D));
  goto <bb 20>;

  <bb 24>:
  # b_force_no_skip_585 = PHI <b_force_no_skip_2(21), 1(10)>
  # _681 = PHI <prephitmp_928(21), _87(10)>
  # DEBUG b_force_no_skip => b_force_no_skip_585
  if (_681 == 2)
    goto <bb 25>;
  else
    goto <bb 46>;

  <bb 25>:
  i_mode_97 = h_66(D)->mb.i_intra16x16_pred_mode;
  # DEBUG i_mode => i_mode_97
  h_66(D)->mb.b_transform_8x8 = 0;
  _99 = h_66(D)->mb.b_lossless;
  if (_99 != 0)
    goto <bb 26>;
  else
    goto <bb 27>;

  <bb 26>:
  x264_predict_lossless_16x16 (h_66(D), i_mode_97);
  goto <bb 28>;

  <bb 27>:
  _101 = h_66(D)->predict_16x16[i_mode_97];
  _102 = h_66(D)->mb.pic.p_fdec[0];
  _101 (_102);

  <bb 28>:
  # DEBUG h => h_66(D)
  # DEBUG i_qp => i_qp_67
  p_src_451 = h_66(D)->mb.pic.p_fenc[0];
  # DEBUG p_src => p_src_451
  p_dst_529 = h_66(D)->mb.pic.p_fdec[0];
  # DEBUG p_dst => p_dst_529
  _530 = h_66(D)->mb.b_lossless;
  if (_530 != 0)
    goto <bb 29>;
  else
    goto <bb 33>;

  <bb 29>:

  <bb 30>:
  # i_692 = PHI <0(29), i_543(31)>
  # ivtmp_794 = PHI <16(29), ivtmp_792(31)>
  # DEBUG i => i_692
  _532 = block_idx_xy_fenc[i_692];
  # DEBUG oe => (int) _532
  _533 = block_idx_xy_fdec[i_692];
  # DEBUG od => (int) _533
  _534 = h_66(D)->zigzagf.sub_4x4;
  _535 = (sizetype) _533;
  _536 = p_dst_529 + _535;
  _537 = (sizetype) _532;
  _538 = p_src_451 + _537;
  _539 = &h_66(D)->dct.luma4x4[i_692];
  _534 (_539, _538, _536);
  _540 = block_idx_yx_1d[i_692];
  _541 = (int) _540;
  _542 = h_66(D)->dct.luma4x4[i_692][0];
  dct_dc4x4[0][_541] = _542;
  h_66(D)->dct.luma4x4[i_692][0] = 0;
  i_543 = i_692 + 1;
  # DEBUG i => i_543
  # DEBUG i => i_543
  ivtmp_792 = ivtmp_794 - 1;
  if (ivtmp_792 != 0)
    goto <bb 31>;
  else
    goto <bb 32>;

  <bb 31>:
  goto <bb 30>;

  <bb 32>:
  _544 = h_66(D)->zigzagf.scan_4x4;
  _545 = &h_66(D)->dct.luma16x16_dc;
  _544 (_545, &dct_dc4x4);
  dct4x4 ={v} {CLOBBER};
  dct_dc4x4 ={v} {CLOBBER};
  goto <bb 141>;

  <bb 33>:
  _546 = h_66(D)->dctf.sub16x16_dct;
  _546 (&dct4x4, p_src_451, p_dst_529);
  # DEBUG i => 0
  # DEBUG i => 0
  _555 = (long unsigned int) i_qp_67;
  _556 = _555 * 32;

  <bb 34>:
  # i_689 = PHI <i_564(38), 0(33)>
  # ivtmp_802 = PHI <ivtmp_798(38), 16(33)>
  # DEBUG i => i_689
  _548 = block_idx_xy_1d[i_689];
  _549 = (int) _548;
  _550 = dct4x4[i_689][0][0];
  dct_dc4x4[0][_549] = _550;
  dct4x4[i_689][0][0] = 0;
  _551 = &dct4x4[i_689];
  # DEBUG h => h_66(D)
  # DEBUG dct => _551
  # DEBUG i_qp => i_qp_67
  # DEBUG i_ctxBlockCat => 1
  # DEBUG b_intra => 1
  # DEBUG idx => i_689
  # DEBUG i_quant_cat => 0
  _552 = h_66(D)->mb.b_trellis;
  if (_552 != 0)
    goto <bb 35>;
  else
    goto <bb 36>;

  <bb 35>:
  x264_quant_4x4_trellis (h_66(D), _551, 0, i_qp_67, 1, 1, i_689);
  goto <bb 37>;

  <bb 36>:
  _553 = h_66(D)->quantf.quant_4x4;
  _554 = h_66(D)->quant4_bias[0];
  _557 = _554 + _556;
  _558 = h_66(D)->quant4_mf[0];
  _559 = _558 + _556;
  _553 (_551, _559, _557);

  <bb 37>:
  # DEBUG h => NULL
  # DEBUG dct => NULL
  # DEBUG i_qp => NULL
  # DEBUG i_ctxBlockCat => NULL
  # DEBUG b_intra => NULL
  # DEBUG idx => NULL
  # DEBUG i_quant_cat => NULL
  _560 = h_66(D)->zigzagf.scan_4x4;
  _561 = &h_66(D)->dct.luma4x4[i_689];
  _560 (_561, _551);
  _562 = h_66(D)->quantf.dequant_4x4;
  _563 = h_66(D)->dequant4_mf[0];
  _562 (_551, _563, i_qp_67);
  i_564 = i_689 + 1;
  # DEBUG i => i_564
  # DEBUG i => i_564
  ivtmp_798 = ivtmp_802 - 1;
  if (ivtmp_798 != 0)
    goto <bb 38>;
  else
    goto <bb 39>;

  <bb 38>:
  goto <bb 34>;

  <bb 39>:
  _565 = h_66(D)->dctf.dct4x4dc;
  _565 (&dct_dc4x4);
  _566 = h_66(D)->mb.b_trellis;
  if (_566 != 0)
    goto <bb 40>;
  else
    goto <bb 41>;

  <bb 40>:
  x264_quant_dc_trellis (h_66(D), &dct_dc4x4, 0, i_qp_67, 0, 1);
  goto <bb 42>;

  <bb 41>:
  _567 = h_66(D)->quantf.quant_4x4_dc;
  _568 = h_66(D)->quant4_bias[0];
  _569 = (long unsigned int) i_qp_67;
  _570 = _569 * 32;
  _571 = _568 + _570;
  _572 = *_571[0];
  _573 = (int) _572;
  _574 = _573 << 1;
  _575 = h_66(D)->quant4_mf[0];
  _576 = _575 + _570;
  _577 = *_576[0];
  _578 = _577 >> 1;
  _579 = (int) _578;
  _567 (&dct_dc4x4, _579, _574);

  <bb 42>:
  _580 = h_66(D)->zigzagf.scan_4x4;
  _581 = &h_66(D)->dct.luma16x16_dc;
  _580 (_581, &dct_dc4x4);
  _582 = h_66(D)->dctf.idct4x4dc;
  _582 (&dct_dc4x4);
  _583 = h_66(D)->quantf.dequant_4x4_dc;
  _584 = h_66(D)->dequant4_mf[0];
  _583 (&dct_dc4x4, _584, i_qp_67);
  # DEBUG i => 0
  # DEBUG i => 0

  <bb 43>:
  # i_691 = PHI <i_589(44), 0(42)>
  # ivtmp_790 = PHI <ivtmp_800(44), 16(42)>
  # DEBUG i => i_691
  _586 = block_idx_xy_1d[i_691];
  _587 = (int) _586;
  _588 = dct_dc4x4[0][_587];
  dct4x4[i_691][0][0] = _588;
  i_589 = i_691 + 1;
  # DEBUG i => i_589
  # DEBUG i => i_589
  ivtmp_800 = ivtmp_790 - 1;
  if (ivtmp_800 != 0)
    goto <bb 44>;
  else
    goto <bb 45>;

  <bb 44>:
  goto <bb 43>;

  <bb 45>:
  _590 = h_66(D)->dctf.add16x16_idct;
  _590 (p_dst_529, &dct4x4);
  dct4x4 ={v} {CLOBBER};
  dct_dc4x4 ={v} {CLOBBER};
  goto <bb 141>;

  <bb 46>:
  if (_681 == 1)
    goto <bb 47>;
  else
    goto <bb 63>;

  <bb 47>:
  h_66(D)->mb.b_transform_8x8 = 1;
  _106 = h_66(D)->mb.i_skip_intra;
  if (_106 != 0)
    goto <bb 49>;
  else
    goto <bb 48>;

  <bb 48>:
  pretmp_929 = &h_66(D)->dct.luma8x8;
  goto <bb 53>;

  <bb 49>:
  _107 = h_66(D)->mc.copy[0];
  _108 = &h_66(D)->mb.pic.i8x8_fdec_buf;
  _109 = h_66(D)->mb.pic.p_fdec[0];
  _107 (_109, 32, _108, 16, 16);
  _111 = h_66(D)->mb.i_skip_intra;
  if (_111 == 2)
    goto <bb 51>;
  else
    goto <bb 50>;

  <bb 50>:
  pretmp_903 = &h_66(D)->dct.luma8x8;
  goto <bb 52>;

  <bb 51>:
  _112 = h_66(D)->mc.memcpy_aligned;
  _113 = &h_66(D)->mb.pic.i8x8_dct_buf;
  _114 = &h_66(D)->dct.luma8x8;
  _112 (_114, _113, 384);
  pretmp_905 = h_66(D)->mb.i_skip_intra;

  <bb 52>:
  # prephitmp_904 = PHI <_114(51), pretmp_903(50)>
  # prephitmp_906 = PHI <pretmp_905(51), _111(50)>
  if (prephitmp_906 != 0)
    goto <bb 53>;
  else
    goto <bb 48>;

  <bb 53>:
  # i_96 = PHI <3(52), 0(48)>
  # prephitmp_930 = PHI <prephitmp_904(52), pretmp_929(48)>
  # DEBUG i => i_96

  <bb 54>:
  # i_636 = PHI <i_140(59), i_96(53)>
  # DEBUG i => i_636
  _118 = h_66(D)->mb.pic.p_fdec[0];
  _119 = i_636 & 1;
  _120 = i_636 >> 1;
  _121 = _120 * 32;
  _122 = _119 + _121;
  _123 = _122 * 8;
  _124 = (sizetype) _123;
  p_dst_125 = _118 + _124;
  # DEBUG p_dst => p_dst_125
  _126 = i_636 * 4;
  _127 = x264_scan8[_126];
  _128 = h_66(D)->mb.cache.intra4x4_pred_mode[_127];
  i_mode_129 = (int) _128;
  # DEBUG i_mode => i_mode_129
  _130 = x264_pred_i4x4_neighbors[i_mode_129];
  _131 = (int) _130;
  _132 = h_66(D)->mb.i_neighbour8[i_636];
  _133 = (int) _132;
  x264_predict_8x8_filter (p_dst_125, &edge, _133, _131);
  _135 = h_66(D)->mb.b_lossless;
  if (_135 != 0)
    goto <bb 55>;
  else
    goto <bb 56>;

  <bb 55>:
  x264_predict_lossless_8x8 (h_66(D), p_dst_125, i_636, i_mode_129, &edge);
  goto <bb 57>;

  <bb 56>:
  _137 = h_66(D)->predict_8x8[i_mode_129];
  _137 (p_dst_125, &edge);

  <bb 57>:
  x264_mb_encode_i8x8 (h_66(D), i_636, i_qp_67);
  i_140 = i_636 + 1;
  # DEBUG i => i_140
  # DEBUG i => i_140
  if (i_140 != 4)
    goto <bb 59>;
  else
    goto <bb 58>;

  <bb 58>:
  goto <bb 60>;

  <bb 59>:
  goto <bb 54>;

  <bb 60>:
  # i_635 = PHI <0(58), i_144(61)>
  # prephitmp_932 = PHI <prephitmp_930(58), pretmp_931(61)>
  # ivtmp_796 = PHI <4(58), ivtmp_63(61)>
  # DEBUG i => i_635
  # DEBUG D#22 => &h_66(D)->dct.luma8x8[i_635]
  # DEBUG v => D#22
  # DEBUG i_count => 128
  # DEBUG nonzero => 0
  __asm__("movq     (%1),    %%mm0 
por      8(%1),   %%mm0 
por      16(%1),  %%mm0 
por      24(%1),  %%mm0 
por      32(%1),  %%mm0 
por      40(%1),  %%mm0 
por      48(%1),  %%mm0 
por      56(%1),  %%mm0 
por      64(%1),  %%mm0 
por      72(%1),  %%mm0 
por      80(%1),  %%mm0 
por      88(%1),  %%mm0 
por      96(%1),  %%mm0 
por      104(%1), %%mm0 
por      112(%1), %%mm0 
por      120(%1), %%mm0 
packsswb %%mm0,   %%mm0 
movd     %%mm0,   %0    
" : "=r" nonzero_400 : "r" prephitmp_932, "m" MEM[(struct  *)prephitmp_932]);
  # DEBUG nonzero => nonzero_400
  _366 = nonzero_400 != 0;
  # DEBUG v => NULL
  # DEBUG i_count => NULL
  # DEBUG i => NULL
  # DEBUG i_count => NULL
  # DEBUG nonzero => NULL
  _142 = (unsigned char) _366;
  nnz8x8[i_635] = _142;
  i_144 = i_635 + 1;
  # DEBUG i => i_144
  # DEBUG i => i_144
  ivtmp_63 = ivtmp_796 - 1;
  if (ivtmp_63 != 0)
    goto <bb 61>;
  else
    goto <bb 62>;

  <bb 61>:
  pretmp_931 = &h_66(D)->dct.luma8x8[i_144];
  goto <bb 60>;

  <bb 62>:
  edge ={v} {CLOBBER};
  goto <bb 141>;

  <bb 63>:
  if (_681 == 0)
    goto <bb 64>;
  else
    goto <bb 78>;

  <bb 64>:
  h_66(D)->mb.b_transform_8x8 = 0;
  _147 = h_66(D)->mb.i_skip_intra;
  if (_147 != 0)
    goto <bb 65>;
  else
    goto <bb 68>;

  <bb 65>:
  _148 = h_66(D)->mc.copy[0];
  _149 = &h_66(D)->mb.pic.i4x4_fdec_buf;
  _150 = h_66(D)->mb.pic.p_fdec[0];
  _148 (_150, 32, _149, 16, 16);
  _152 = h_66(D)->mb.i_skip_intra;
  if (_152 == 2)
    goto <bb 66>;
  else
    goto <bb 67>;

  <bb 66>:
  _153 = h_66(D)->mc.memcpy_aligned;
  _154 = &h_66(D)->mb.pic.i4x4_dct_buf;
  _155 = &h_66(D)->dct.luma4x4;
  _153 (_155, _154, 480);
  pretmp_881 = h_66(D)->mb.i_skip_intra;

  <bb 67>:
  # prephitmp_882 = PHI <pretmp_881(66), _152(65)>
  if (prephitmp_882 != 0)
    goto <bb 69>;
  else
    goto <bb 68>;

  <bb 68>:

  <bb 69>:
  # i_299 = PHI <15(67), 0(68)>
  # DEBUG i => i_299

  <bb 70>:
  # i_389 = PHI <i_177(77), i_299(69)>
  # DEBUG i => i_389
  _159 = h_66(D)->mb.pic.p_fdec[0];
  _160 = block_idx_xy_fdec[i_389];
  _161 = (sizetype) _160;
  p_dst_162 = _159 + _161;
  # DEBUG p_dst => p_dst_162
  _163 = x264_scan8[i_389];
  _164 = h_66(D)->mb.cache.intra4x4_pred_mode[_163];
  i_mode_165 = (int) _164;
  # DEBUG i_mode => i_mode_165
  _166 = h_66(D)->mb.i_neighbour4[i_389];
  _167 = _166 & 6;
  if (_167 == 2)
    goto <bb 71>;
  else
    goto <bb 72>;

  <bb 71>:
  _168 = MEM[(uint8_t *)p_dst_162 + -29B];
  _169 = (unsigned int) _168;
  _170 = _169 * 16843009;
  MEM[(uint32_t *)p_dst_162 + -28B] = _170;

  <bb 72>:
  _172 = h_66(D)->mb.b_lossless;
  if (_172 != 0)
    goto <bb 73>;
  else
    goto <bb 74>;

  <bb 73>:
  x264_predict_lossless_4x4 (h_66(D), p_dst_162, i_389, i_mode_165);
  goto <bb 75>;

  <bb 74>:
  _174 = h_66(D)->predict_4x4[i_mode_165];
  _174 (p_dst_162);

  <bb 75>:
  x264_mb_encode_i4x4 (h_66(D), i_389, i_qp_67);
  i_177 = i_389 + 1;
  # DEBUG i => i_177
  # DEBUG i => i_177
  if (i_177 != 16)
    goto <bb 77>;
  else
    goto <bb 76>;

  <bb 76>:
  goto <bb 141>;

  <bb 77>:
  goto <bb 70>;

  <bb 78>:
  # b_force_no_skip_664 = PHI <b_force_no_skip_585(63), 1(175)>
  # DEBUG b_force_no_skip => b_force_no_skip_664
  # DEBUG i_decimate_mb => 0
  _178 = h_66(D)->mb.b_skip_mc;
  if (_178 == 0)
    goto <bb 79>;
  else
    goto <bb 80>;

  <bb 79>:
  x264_mb_mc (h_66(D));

  <bb 80>:
  _180 = h_66(D)->mb.b_lossless;
  if (_180 != 0)
    goto <bb 81>;
  else
    goto <bb 90>;

  <bb 81>:
  _181 = h_66(D)->mb.b_transform_8x8;
  if (_181 != 0)
    goto <bb 83>;
  else
    goto <bb 82>;

  <bb 82>:
  goto <bb 87>;

  <bb 83>:

  <bb 84>:
  # i8x8_675 = PHI <0(83), i8x8_215(86)>
  # ivtmp_793 = PHI <4(83), ivtmp_784(86)>
  # DEBUG i8x8 => i8x8_675
  _194 = i8x8_675 & 1;
  x_195 = _194 * 8;
  # DEBUG x => x_195
  _196 = i8x8_675 >> 1;
  y_197 = _196 * 8;
  # DEBUG y => y_197
  _198 = h_66(D)->zigzagf.sub_8x8;
  _199 = h_66(D)->mb.pic.p_fdec[0];
  _200 = (sizetype) x_195;
  _201 = y_197 * 32;
  _202 = (sizetype) _201;
  _203 = _200 + _202;
  _204 = _199 + _203;
  _205 = h_66(D)->mb.pic.p_fenc[0];
  _206 = y_197 * 16;
  _207 = (sizetype) _206;
  _208 = _200 + _207;
  _209 = _205 + _208;
  _210 = &h_66(D)->dct.luma8x8[i8x8_675];
  _198 (_210, _209, _204);
  # DEBUG v => _210
  # DEBUG i_count => 128
  # DEBUG nonzero => 0
  __asm__("movq     (%1),    %%mm0 
por      8(%1),   %%mm0 
por      16(%1),  %%mm0 
por      24(%1),  %%mm0 
por      32(%1),  %%mm0 
por      40(%1),  %%mm0 
por      48(%1),  %%mm0 
por      56(%1),  %%mm0 
por      64(%1),  %%mm0 
por      72(%1),  %%mm0 
por      80(%1),  %%mm0 
por      88(%1),  %%mm0 
por      96(%1),  %%mm0 
por      104(%1), %%mm0 
por      112(%1), %%mm0 
por      120(%1), %%mm0 
packsswb %%mm0,   %%mm0 
movd     %%mm0,   %0    
" : "=r" nonzero_453 : "r" _210, "m" MEM[(struct  *)_210]);
  # DEBUG nonzero => nonzero_453
  _454 = nonzero_453 != 0;
  # DEBUG v => NULL
  # DEBUG i_count => NULL
  # DEBUG i => NULL
  # DEBUG i_count => NULL
  # DEBUG nonzero => NULL
  _213 = (unsigned char) _454;
  nnz8x8[i8x8_675] = _213;
  i8x8_215 = i8x8_675 + 1;
  # DEBUG i8x8 => i8x8_215
  # DEBUG i8x8 => i8x8_215
  ivtmp_784 = ivtmp_793 - 1;
  if (ivtmp_784 != 0)
    goto <bb 86>;
  else
    goto <bb 85>;

  <bb 85>:
  goto <bb 141>;

  <bb 86>:
  goto <bb 84>;

  <bb 87>:
  # i4x4_711 = PHI <0(82), i4x4_193(89)>
  # ivtmp_825 = PHI <16(82), ivtmp_852(89)>
  # DEBUG i4x4 => i4x4_711
  _182 = h_66(D)->zigzagf.sub_4x4;
  _183 = h_66(D)->mb.pic.p_fdec[0];
  _184 = block_idx_xy_fdec[i4x4_711];
  _185 = (sizetype) _184;
  _186 = _183 + _185;
  _187 = h_66(D)->mb.pic.p_fenc[0];
  _188 = block_idx_xy_fenc[i4x4_711];
  _189 = (sizetype) _188;
  _190 = _187 + _189;
  _191 = &h_66(D)->dct.luma4x4[i4x4_711];
  _182 (_191, _190, _186);
  i4x4_193 = i4x4_711 + 1;
  # DEBUG i4x4 => i4x4_193
  # DEBUG i4x4 => i4x4_193
  ivtmp_852 = ivtmp_825 - 1;
  if (ivtmp_852 != 0)
    goto <bb 89>;
  else
    goto <bb 88>;

  <bb 88>:
  goto <bb 141>;

  <bb 89>:
  goto <bb 87>;

  <bb 90>:
  _216 = h_66(D)->mb.b_transform_8x8;
  if (_216 != 0)
    goto <bb 91>;
  else
    goto <bb 113>;

  <bb 91>:
  _217 = h_66(D)->mb.b_trellis;
  _218 = _217 == 0;
  _219 = (int) _218;
  b_decimate_220 = b_decimate_23 & _219;
  # DEBUG b_decimate => b_decimate_220
  _221 = h_66(D)->dctf.sub16x16_dct8;
  _222 = h_66(D)->mb.pic.p_fdec[0];
  _223 = h_66(D)->mb.pic.p_fenc[0];
  _221 (&dct8x8, _223, _222);
  _225 = h_66(D)->nr_count[1];
  _226 = h_66(D)->mb.b_noise_reduction;
  _227 = _226 * 4;
  _228 = (unsigned int) _227;
  _229 = _225 + _228;
  h_66(D)->nr_count[1] = _229;
  # DEBUG idx => 0
  # DEBUG i_decimate_mb => 0
  # DEBUG idx => 0
  _458 = (long unsigned int) i_qp_67;
  _459 = _458 * 128;

  <bb 92>:
  # idx_642 = PHI <idx_250(103), 0(91)>
  # i_decimate_mb_671 = PHI <i_decimate_mb_17(103), 0(91)>
  # prephitmp_847 = PHI <pretmp_846(103), _226(91)>
  # ivtmp_917 = PHI <ivtmp_921(103), 4(91)>
  # DEBUG i_decimate_mb => i_decimate_mb_671
  # DEBUG idx => idx_642
  if (prephitmp_847 != 0)
    goto <bb 94>;
  else
    goto <bb 93>;

  <bb 93>:
  pretmp_849 = &dct8x8[idx_642];
  goto <bb 95>;

  <bb 94>:
  _232 = h_66(D)->quantf.denoise_dct;
  _233 = &h_66(D)->nr_offset[1];
  _234 = &h_66(D)->nr_residual_sum[1];
  _235 = &dct8x8[idx_642];
  _232 (_235, _234, _233, 64);

  <bb 95>:
  # prephitmp_850 = PHI <pretmp_849(93), _235(94)>
  # DEBUG D#21 => &dct8x8[idx_642]
  # DEBUG h => h_66(D)
  # DEBUG dct => D#21
  # DEBUG i_qp => i_qp_67
  # DEBUG b_intra => 0
  # DEBUG idx => idx_642
  # DEBUG i_quant_cat => 1
  _455 = h_66(D)->mb.b_trellis;
  if (_455 != 0)
    goto <bb 96>;
  else
    goto <bb 97>;

  <bb 96>:
  x264_quant_8x8_trellis (h_66(D), prephitmp_850, 1, i_qp_67, 0, idx_642);
  goto <bb 98>;

  <bb 97>:
  _456 = h_66(D)->quantf.quant_8x8;
  _457 = h_66(D)->quant8_bias[1];
  _460 = _457 + _459;
  _461 = h_66(D)->quant8_mf[1];
  _462 = _461 + _459;
  _456 (prephitmp_850, _462, _460);

  <bb 98>:
  # DEBUG h => NULL
  # DEBUG dct => NULL
  # DEBUG i_qp => NULL
  # DEBUG b_intra => NULL
  # DEBUG idx => NULL
  # DEBUG i_quant_cat => NULL
  _239 = h_66(D)->zigzagf.scan_8x8;
  _240 = &h_66(D)->dct.luma8x8[idx_642];
  _239 (_240, prephitmp_850);
  if (b_decimate_220 != 0)
    goto <bb 99>;
  else
    goto <bb 101>;

  <bb 99>:
  _242 = h_66(D)->quantf.decimate_score64;
  i_decimate_8x8_245 = _242 (_240);
  # DEBUG i_decimate_8x8 => i_decimate_8x8_245
  i_decimate_mb_246 = i_decimate_8x8_245 + i_decimate_mb_671;
  # DEBUG i_decimate_mb => i_decimate_mb_246
  if (i_decimate_8x8_245 <= 3)
    goto <bb 100>;
  else
    goto <bb 102>;

  <bb 100>:
  nnz8x8[idx_642] = 0;
  goto <bb 102>;

  <bb 101>:
  # DEBUG v => D#21
  # DEBUG i_count => 128
  # DEBUG nonzero => 0
  __asm__("movq     (%1),    %%mm0 
por      8(%1),   %%mm0 
por      16(%1),  %%mm0 
por      24(%1),  %%mm0 
por      32(%1),  %%mm0 
por      40(%1),  %%mm0 
por      48(%1),  %%mm0 
por      56(%1),  %%mm0 
por      64(%1),  %%mm0 
por      72(%1),  %%mm0 
por      80(%1),  %%mm0 
por      88(%1),  %%mm0 
por      96(%1),  %%mm0 
por      104(%1), %%mm0 
por      112(%1), %%mm0 
por      120(%1), %%mm0 
packsswb %%mm0,   %%mm0 
movd     %%mm0,   %0    
" : "=r" nonzero_238 : "r" prephitmp_850, "m" MEM[(struct  *)prephitmp_850]);
  # DEBUG nonzero => nonzero_238
  _463 = nonzero_238 != 0;
  # DEBUG v => NULL
  # DEBUG i_count => NULL
  # DEBUG i => NULL
  # DEBUG i_count => NULL
  # DEBUG nonzero => NULL
  _248 = (unsigned char) _463;
  nnz8x8[idx_642] = _248;

  <bb 102>:
  # i_decimate_mb_17 = PHI <i_decimate_mb_246(100), i_decimate_mb_671(101), i_decimate_mb_246(99)>
  # DEBUG i_decimate_mb => i_decimate_mb_17
  idx_250 = idx_642 + 1;
  # DEBUG idx => idx_250
  # DEBUG i_decimate_mb => i_decimate_mb_17
  # DEBUG idx => idx_250
  ivtmp_921 = ivtmp_917 - 1;
  if (ivtmp_921 != 0)
    goto <bb 103>;
  else
    goto <bb 104>;

  <bb 103>:
  pretmp_846 = h_66(D)->mb.b_noise_reduction;
  goto <bb 92>;

  <bb 104>:
  # i_decimate_mb_789 = PHI <i_decimate_mb_17(102)>
  _251 = i_decimate_mb_789 <= 5;
  _252 = (_Bool) b_decimate_220;
  _253 = _251 & _252;
  if (_253 != 0)
    goto <bb 105>;
  else
    goto <bb 106>;

  <bb 105>:
  MEM[(uint32_t *)&nnz8x8] = 0;
  goto <bb 112>;

  <bb 106>:

  <bb 107>:
  # idx_641 = PHI <0(106), idx_271(110)>
  # ivtmp_855 = PHI <4(106), ivtmp_915(110)>
  # DEBUG idx => idx_641
  _255 = nnz8x8[idx_641];
  if (_255 != 0)
    goto <bb 108>;
  else
    goto <bb 109>;

  <bb 108>:
  _256 = h_66(D)->quantf.dequant_8x8;
  _257 = h_66(D)->dequant8_mf[1];
  _258 = &dct8x8[idx_641];
  _256 (_258, _257, i_qp_67);
  _260 = h_66(D)->dctf.add8x8_idct8;
  _262 = h_66(D)->mb.pic.p_fdec[0];
  _263 = idx_641 & 1;
  _264 = idx_641 >> 1;
  _265 = _264 * 32;
  _266 = _263 + _265;
  _267 = _266 * 8;
  _268 = (sizetype) _267;
  _269 = _262 + _268;
  _260 (_269, _258);

  <bb 109>:
  idx_271 = idx_641 + 1;
  # DEBUG idx => idx_271
  # DEBUG idx => idx_271
  ivtmp_915 = ivtmp_855 - 1;
  if (ivtmp_915 != 0)
    goto <bb 110>;
  else
    goto <bb 111>;

  <bb 110>:
  goto <bb 107>;

  <bb 111>:

  <bb 112>:
  dct8x8 ={v} {CLOBBER};
  goto <bb 141>;

  <bb 113>:
  _273 = h_66(D)->dctf.sub16x16_dct;
  _274 = h_66(D)->mb.pic.p_fdec[0];
  _275 = h_66(D)->mb.pic.p_fenc[0];
  _273 (&dct4x4, _275, _274);
  _277 = h_66(D)->nr_count[0];
  _278 = h_66(D)->mb.b_noise_reduction;
  _279 = _278 * 16;
  _280 = (unsigned int) _279;
  _281 = _277 + _280;
  h_66(D)->nr_count[0] = _281;
  # DEBUG i8x8 => 0
  # DEBUG i_decimate_mb => 0
  # DEBUG i8x8 => 0
  pretmp_830 = (_Bool) b_decimate_23;
  _467 = (long unsigned int) i_qp_67;
  _468 = _467 * 32;
  goto <bb 128>;

  <bb 114>:
  pretmp_836 = h_66(D)->mb.b_noise_reduction;

  <bb 115>:
  # i4x4_672 = PHI <i4x4_303(114), 0(128)>
  # i_decimate_8x8_710 = PHI <i_decimate_8x8_20(114), 0(128)>
  # prephitmp_837 = PHI <pretmp_836(114), prephitmp_834(128)>
  # ivtmp_875 = PHI <ivtmp_878(114), 4(128)>
  # DEBUG i_decimate_8x8 => i_decimate_8x8_710
  # DEBUG i4x4 => i4x4_672
  idx_284 = i4x4_672 + pretmp_835;
  # DEBUG idx => idx_284
  if (prephitmp_837 != 0)
    goto <bb 117>;
  else
    goto <bb 116>;

  <bb 116>:
  pretmp_841 = &dct4x4[idx_284];
  goto <bb 118>;

  <bb 117>:
  _286 = h_66(D)->quantf.denoise_dct;
  _287 = &h_66(D)->nr_offset[0];
  _288 = &h_66(D)->nr_residual_sum[0];
  _289 = &dct4x4[idx_284];
  _286 (_289, _288, _287, 16);

  <bb 118>:
  # prephitmp_842 = PHI <pretmp_841(116), _289(117)>
  # DEBUG D#20 => &dct4x4[idx_284]
  # DEBUG h => h_66(D)
  # DEBUG dct => D#20
  # DEBUG i_qp => i_qp_67
  # DEBUG i_ctxBlockCat => 2
  # DEBUG b_intra => 0
  # DEBUG idx => idx_284
  # DEBUG i_quant_cat => 1
  _464 = h_66(D)->mb.b_trellis;
  if (_464 != 0)
    goto <bb 119>;
  else
    goto <bb 120>;

  <bb 119>:
  x264_quant_4x4_trellis (h_66(D), prephitmp_842, 1, i_qp_67, 2, 0, idx_284);
  goto <bb 121>;

  <bb 120>:
  _465 = h_66(D)->quantf.quant_4x4;
  _466 = h_66(D)->quant4_bias[1];
  _469 = _466 + _468;
  _470 = h_66(D)->quant4_mf[1];
  _471 = _470 + _468;
  _465 (prephitmp_842, _471, _469);

  <bb 121>:
  # DEBUG h => NULL
  # DEBUG dct => NULL
  # DEBUG i_qp => NULL
  # DEBUG i_ctxBlockCat => NULL
  # DEBUG b_intra => NULL
  # DEBUG idx => NULL
  # DEBUG i_quant_cat => NULL
  _292 = h_66(D)->zigzagf.scan_4x4;
  _293 = &h_66(D)->dct.luma4x4[idx_284];
  _292 (_293, prephitmp_842);
  _296 = i_decimate_8x8_710 <= 6;
  _297 = _296 & pretmp_830;
  if (_297 != 0)
    goto <bb 122>;
  else
    goto <bb 123>;

  <bb 122>:
  _298 = h_66(D)->quantf.decimate_score16;
  _301 = _298 (_293);
  i_decimate_8x8_302 = _301 + i_decimate_8x8_710;
  # DEBUG i_decimate_8x8 => i_decimate_8x8_302

  <bb 123>:
  # i_decimate_8x8_20 = PHI <i_decimate_8x8_710(121), i_decimate_8x8_302(122)>
  # DEBUG i_decimate_8x8 => i_decimate_8x8_20
  i4x4_303 = i4x4_672 + 1;
  # DEBUG i4x4 => i4x4_303
  # DEBUG i_decimate_8x8 => i_decimate_8x8_20
  # DEBUG i4x4 => i4x4_303
  ivtmp_878 = ivtmp_875 - 1;
  if (ivtmp_878 != 0)
    goto <bb 114>;
  else
    goto <bb 124>;

  <bb 124>:
  # i_decimate_8x8_788 = PHI <i_decimate_8x8_20(123)>
  i_decimate_mb_304 = i_decimate_8x8_788 + i_decimate_mb_670;
  # DEBUG i_decimate_mb => i_decimate_mb_304
  _305 = i_decimate_8x8_788 <= 3;
  _307 = _305 & pretmp_830;
  if (_307 != 0)
    goto <bb 125>;
  else
    goto <bb 126>;

  <bb 125>:
  nnz8x8[i8x8_674] = 0;

  <bb 126>:
  i8x8_309 = i8x8_674 + 1;
  # DEBUG i8x8 => i8x8_309
  # DEBUG i_decimate_mb => i_decimate_mb_304
  # DEBUG i8x8 => i8x8_309
  ivtmp_361 = ivtmp_911 - 1;
  if (ivtmp_361 != 0)
    goto <bb 127>;
  else
    goto <bb 129>;

  <bb 127>:
  pretmp_833 = h_66(D)->mb.b_noise_reduction;

  <bb 128>:
  # i8x8_674 = PHI <i8x8_309(127), 0(113)>
  # i_decimate_mb_670 = PHI <i_decimate_mb_304(127), 0(113)>
  # prephitmp_834 = PHI <pretmp_833(127), _278(113)>
  # ivtmp_911 = PHI <ivtmp_361(127), 4(113)>
  # DEBUG i_decimate_mb => i_decimate_mb_670
  # DEBUG i8x8 => i8x8_674
  # DEBUG i_decimate_8x8 => 0
  # DEBUG i4x4 => 0
  pretmp_835 = i8x8_674 * 4;
  goto <bb 115>;

  <bb 129>:
  # i_decimate_mb_787 = PHI <i_decimate_mb_304(126)>
  _310 = i_decimate_mb_787 <= 5;
  _312 = _310 & pretmp_830;
  if (_312 != 0)
    goto <bb 130>;
  else
    goto <bb 131>;

  <bb 130>:
  MEM[(uint32_t *)&nnz8x8] = 0;
  goto <bb 140>;

  <bb 131>:

  <bb 132>:
  # i8x8_694 = PHI <0(131), i8x8_334(138)>
  # ivtmp_899 = PHI <4(131), ivtmp_907(138)>
  # DEBUG i8x8 => i8x8_694
  _314 = nnz8x8[i8x8_694];
  if (_314 != 0)
    goto <bb 133>;
  else
    goto <bb 137>;

  <bb 133>:
  pretmp_844 = i8x8_694 * 4;

  <bb 134>:
  # i_643 = PHI <0(133), i_321(135)>
  # ivtmp_667 = PHI <4(133), ivtmp_898(135)>
  # DEBUG i => i_643
  _315 = h_66(D)->quantf.dequant_4x4;
  _316 = h_66(D)->dequant4_mf[1];
  _318 = i_643 + pretmp_844;
  _319 = &dct4x4[_318];
  _315 (_319, _316, i_qp_67);
  i_321 = i_643 + 1;
  # DEBUG i => i_321
  # DEBUG i => i_321
  ivtmp_898 = ivtmp_667 - 1;
  if (ivtmp_898 != 0)
    goto <bb 135>;
  else
    goto <bb 136>;

  <bb 135>:
  goto <bb 134>;

  <bb 136>:
  _322 = h_66(D)->dctf.add8x8_idct;
  _324 = &dct4x4[pretmp_844];
  _325 = h_66(D)->mb.pic.p_fdec[0];
  _326 = i8x8_694 & 1;
  _327 = i8x8_694 >> 1;
  _328 = _327 * 32;
  _329 = _326 + _328;
  _330 = _329 * 8;
  _331 = (sizetype) _330;
  _332 = _325 + _331;
  _322 (_332, _324);

  <bb 137>:
  i8x8_334 = i8x8_694 + 1;
  # DEBUG i8x8 => i8x8_334
  # DEBUG i8x8 => i8x8_334
  ivtmp_907 = ivtmp_899 - 1;
  if (ivtmp_907 != 0)
    goto <bb 138>;
  else
    goto <bb 139>;

  <bb 138>:
  goto <bb 132>;

  <bb 139>:

  <bb 140>:
  dct4x4 ={v} {CLOBBER};

  <bb 141>:
  # b_force_no_skip_547 = PHI <b_force_no_skip_585(45), b_force_no_skip_585(62), b_force_no_skip_585(76), b_force_no_skip_664(88), b_force_no_skip_664(112), b_force_no_skip_664(140), b_force_no_skip_664(85), b_force_no_skip_585(32)>
  _336 = h_66(D)->mb.i_type;
  _337 = (unsigned int) _336;
  if (_337 <= 3)
    goto <bb 142>;
  else
    goto <bb 145>;

  <bb 142>:
  i_mode_338 = h_66(D)->mb.i_chroma_pred_mode;
  # DEBUG i_mode => i_mode_338
  _339 = h_66(D)->mb.b_lossless;
  if (_339 != 0)
    goto <bb 143>;
  else
    goto <bb 144>;

  <bb 143>:
  x264_predict_lossless_8x8_chroma (h_66(D), i_mode_338);
  pretmp_809 = h_66(D)->mb.i_type;
  pretmp_812 = (unsigned int) pretmp_809;
  goto <bb 145>;

  <bb 144>:
  _341 = h_66(D)->predict_8x8c[i_mode_338];
  _342 = h_66(D)->mb.pic.p_fdec[1];
  _341 (_342);
  _344 = h_66(D)->predict_8x8c[i_mode_338];
  _345 = h_66(D)->mb.pic.p_fdec[2];
  _344 (_345);
  pretmp_810 = h_66(D)->mb.i_type;
  pretmp_813 = (unsigned int) pretmp_810;

  <bb 145>:
  # prephitmp_814 = PHI <_337(141), pretmp_812(143), pretmp_813(144)>
  _347 = h_66(D)->mb.i_chroma_qp;
  _350 = prephitmp_814 > 3;
  _351 = (int) _350;
  x264_mb_encode_8x8_chroma (h_66(D), _351, _347);
  h_66(D)->mb.i_cbp_luma = 0;
  _354 = h_66(D)->mb.i_type;
  if (_354 == 2)
    goto <bb 146>;
  else
    goto <bb 150>;

  <bb 146>:

  <bb 147>:
  # i_677 = PHI <0(146), i_362(148)>
  # prephitmp_827 = PHI <0(146), _360(148)>
  # ivtmp_873 = PHI <16(146), ivtmp_795(148)>
  # DEBUG i => i_677
  _355 = &h_66(D)->dct.luma4x4[i_677];
  # DEBUG v => _355
  # DEBUG i_count => 32
  # DEBUG v => _355
  # DEBUG i_count => 32
  # DEBUG x => _355
  _472 = MEM[(uint64_t *)_355];
  _473 = MEM[(uint64_t *)_355 + 8B];
  _474 = _472 | _473;
  _475 = MEM[(uint64_t *)_355 + 16B];
  _476 = _474 | _475;
  _477 = MEM[(uint64_t *)_355 + 24B];
  _478 = _476 | _477;
  _479 = _478 != 0;
  _480 = (int) _479;
  # DEBUG v => NULL
  # DEBUG i_count => NULL
  # DEBUG i => NULL
  # DEBUG v => NULL
  # DEBUG i_count => NULL
  # DEBUG i => NULL
  # DEBUG i_count => NULL
  # DEBUG nonzero => NULL
  # DEBUG nz => NULL
  _356 = x264_scan8[i_677];
  _357 = (unsigned char) _479;
  h_66(D)->mb.cache.non_zero_count[_356] = _357;
  _360 = _480 | prephitmp_827;
  i_362 = i_677 + 1;
  # DEBUG i => i_362
  # DEBUG i => i_362
  ivtmp_795 = ivtmp_873 - 1;
  if (ivtmp_795 != 0)
    goto <bb 148>;
  else
    goto <bb 149>;

  <bb 148>:
  goto <bb 147>;

  <bb 149>:
  # _786 = PHI <_360(147)>
  # h__mb_i_cbp_luma_lsm.109_778 = PHI <_360(147)>
  h_66(D)->mb.i_cbp_luma = h__mb_i_cbp_luma_lsm.109_778;
  _364 = _786 * 15;
  h_66(D)->mb.i_cbp_luma = _364;
  # DEBUG D#3 => &h_66(D)->dct.luma16x16_dc
  # DEBUG v => D#3
  # DEBUG i_count => 32
  # DEBUG v => D#3
  # DEBUG i_count => 32
  # DEBUG x => D#3
  _484 = MEM[(uint64_t *)h_66(D) + 9552B];
  _485 = MEM[(uint64_t *)h_66(D) + 9560B];
  _486 = _484 | _485;
  _487 = MEM[(uint64_t *)h_66(D) + 9568B];
  _488 = _486 | _487;
  _489 = MEM[(uint64_t *)h_66(D) + 9576B];
  _490 = _488 | _489;
  _491 = _490 != 0;
  # DEBUG v => NULL
  # DEBUG i_count => NULL
  # DEBUG i => NULL
  # DEBUG v => NULL
  # DEBUG i_count => NULL
  # DEBUG i => NULL
  # DEBUG i_count => NULL
  # DEBUG nonzero => NULL
  _367 = (unsigned char) _491;
  h_66(D)->mb.cache.non_zero_count[44] = _367;
  goto <bb 162>;

  <bb 150>:

  <bb 151>:
  # i_676 = PHI <0(150), i_410(160)>
  # ivtmp_791 = PHI <4(150), ivtmp_890(160)>
  # DEBUG i => i_676
  _369 = nnz8x8[i_676];
  if (_369 == 0)
    goto <bb 152>;
  else
    goto <bb 153>;

  <bb 152>:
  _370 = i_676 * 4;
  _371 = x264_scan8[_370];
  _372 = &h_66(D)->mb.cache.non_zero_count[_371];
  MEM[(uint16_t *)_372] = 0;
  _374 = _370 + 2;
  _375 = x264_scan8[_374];
  _376 = &h_66(D)->mb.cache.non_zero_count[_375];
  MEM[(uint16_t *)_376] = 0;
  goto <bb 159>;

  <bb 153>:
  _378 = h_66(D)->mb.b_transform_8x8;
  if (_378 != 0)
    goto <bb 154>;
  else
    goto <bb 155>;

  <bb 154>:
  _379 = i_676 * 4;
  _380 = x264_scan8[_379];
  _381 = &h_66(D)->mb.cache.non_zero_count[_380];
  _383 = (short unsigned int) _369;
  _384 = _383 * 257;
  MEM[(uint16_t *)_381] = _384;
  _386 = _379 + 2;
  _387 = x264_scan8[_386];
  _388 = &h_66(D)->mb.cache.non_zero_count[_387];
  MEM[(uint16_t *)_388] = _384;
  _392 = h_66(D)->mb.i_cbp_luma;
  _393 = (int) _369;
  _394 = _393 << i_676;
  _395 = _392 | _394;
  h_66(D)->mb.i_cbp_luma = _395;
  goto <bb 159>;

  <bb 155>:
  pretmp_823 = i_676 * 4;

  <bb 156>:
  # j_693 = PHI <0(155), j_405(157)>
  # cbp_669 = PHI <0(155), cbp_404(157)>
  # ivtmp_803 = PHI <4(155), ivtmp_871(157)>
  # DEBUG cbp => cbp_669
  # DEBUG j => j_693
  _398 = j_693 + pretmp_823;
  _399 = &h_66(D)->dct.luma4x4[_398];
  # DEBUG v => _399
  # DEBUG i_count => 32
  # DEBUG v => _399
  # DEBUG i_count => 32
  # DEBUG x => _399
  _494 = MEM[(uint64_t *)_399];
  _495 = MEM[(uint64_t *)_399 + 8B];
  _496 = _494 | _495;
  _497 = MEM[(uint64_t *)_399 + 16B];
  _498 = _496 | _497;
  _499 = MEM[(uint64_t *)_399 + 24B];
  _500 = _498 | _499;
  _501 = _500 != 0;
  _502 = (int) _501;
  # DEBUG v => NULL
  # DEBUG i_count => NULL
  # DEBUG i => NULL
  # DEBUG v => NULL
  # DEBUG i_count => NULL
  # DEBUG i => NULL
  # DEBUG i_count => NULL
  # DEBUG nonzero => NULL
  # DEBUG nz => NULL
  _401 = x264_scan8[_398];
  _402 = (unsigned char) _501;
  h_66(D)->mb.cache.non_zero_count[_401] = _402;
  cbp_404 = _502 | cbp_669;
  # DEBUG cbp => cbp_404
  j_405 = j_693 + 1;
  # DEBUG j => j_405
  # DEBUG cbp => cbp_404
  # DEBUG j => j_405
  ivtmp_871 = ivtmp_803 - 1;
  if (ivtmp_871 != 0)
    goto <bb 157>;
  else
    goto <bb 158>;

  <bb 157>:
  goto <bb 156>;

  <bb 158>:
  # cbp_785 = PHI <cbp_404(156)>
  _406 = h_66(D)->mb.i_cbp_luma;
  _407 = cbp_785 << i_676;
  _408 = _406 | _407;
  h_66(D)->mb.i_cbp_luma = _408;

  <bb 159>:
  i_410 = i_676 + 1;
  # DEBUG i => i_410
  # DEBUG i => i_410
  ivtmp_890 = ivtmp_791 - 1;
  if (ivtmp_890 != 0)
    goto <bb 160>;
  else
    goto <bb 161>;

  <bb 160>:
  goto <bb 151>;

  <bb 161>:
  h_66(D)->mb.cache.non_zero_count[44] = 0;
  pretmp_815 = h_66(D)->mb.i_cbp_luma;

  <bb 162>:
  # prephitmp_816 = PHI <_364(149), pretmp_815(161)>
  _412 = h_66(D)->param.b_cabac;
  if (_412 != 0)
    goto <bb 163>;
  else
    goto <bb 164>;

  <bb 163>:
  _413 = h_66(D)->mb.cache.non_zero_count[44];
  _414 = (int) _413;
  _415 = h_66(D)->mb.cache.non_zero_count[45];
  _416 = (int) _415;
  _417 = _416 << 1;
  _419 = h_66(D)->mb.cache.non_zero_count[46];
  _420 = (int) _419;
  _421 = _420 << 2;
  _433 = _417 | _421;
  i_cbp_dc_422 = _414 | _433;
  # DEBUG i_cbp_dc => i_cbp_dc_422
  pretmp_817 = i_cbp_dc_422 << 8;
  pretmp_819 = (short int) pretmp_817;

  <bb 164>:
  # prephitmp_820 = PHI <0(162), pretmp_819(163)>
  # DEBUG i_cbp_dc => NULL
  _423 = h_66(D)->mb.cbp;
  _424 = h_66(D)->mb.i_mb_xy;
  _425 = (long unsigned int) _424;
  _426 = _425 * 2;
  _427 = _423 + _426;
  _430 = h_66(D)->mb.i_cbp_chroma;
  _431 = _430 << 4;
  _432 = (short int) _431;
  _435 = (short int) prephitmp_816;
  _13 = _432 | _435;
  _436 = _13 | prephitmp_820;
  *_427 = _436;
  if (b_force_no_skip_547 == 0)
    goto <bb 165>;
  else
    goto <bb 173>;

  <bb 165>:
  _438 = BIT_FIELD_REF <*h_66(D), 64, 94272>;
  if (_438 == 68719476740)
    goto <bb 166>;
  else
    goto <bb 170>;

  <bb 166>:
  _439 = _430 | prephitmp_816;
  if (_439 == 0)
    goto <bb 167>;
  else
    goto <bb 173>;

  <bb 167>:
  _440 = MEM[(uint32_t *)h_66(D) + 19248B];
  _441 = MEM[(uint32_t *)h_66(D) + 20496B];
  if (_440 == _441)
    goto <bb 168>;
  else
    goto <bb 176>;

  <bb 168>:
  _442 = h_66(D)->mb.cache.ref[0][12];
  if (_442 == 0)
    goto <bb 169>;
  else
    goto <bb 176>;

  <bb 169>:
  h_66(D)->mb.i_type = 6;
  goto <bb 173>;

  <bb 170>:
  _444 = h_66(D)->mb.i_type;
  if (_444 == 7)
    goto <bb 171>;
  else
    goto <bb 173>;

  <bb 171>:
  _445 = _430 | prephitmp_816;
  if (_445 == 0)
    goto <bb 172>;
  else
    goto <bb 173>;

  <bb 172>:
  h_66(D)->mb.i_type = 18;

  <bb 173>:
  nnz8x8 ={v} {CLOBBER};

  <bb 174>:
  return;

  <bb 175>:
  # DEBUG b_force_no_skip => 1
  goto <bb 78>;

  <bb 176>:
  _688 = h_66(D)->mb.i_type;
  if (_688 == 7)
    goto <bb 172>;
  else
    goto <bb 173>;

}



;; Function x264_macroblock_probe_skip (x264_macroblock_probe_skip, funcdef_no=133, decl_uid=5755, cgraph_uid=133, symbol_order=176)


Analyzing loop at encoder/macroblock.c:768
encoder/macroblock.c:768:45: note: ===== analyze_loop_nest =====
encoder/macroblock.c:768:45: note: === vect_analyze_loop_form ===
encoder/macroblock.c:768:45: note: ===== analyze_loop_nest_1 =====
encoder/macroblock.c:768:45: note: === vect_analyze_loop_form ===
encoder/macroblock.c:768:45: note: not vectorized: control flow in loop.
encoder/macroblock.c:768:45: note: bad inner-loop form.
encoder/macroblock.c:768:45: note: not vectorized: Bad inner loop.
encoder/macroblock.c:768:45: note: bad loop form.

Analyzing loop at encoder/macroblock.c:794
encoder/macroblock.c:794:22: note: ===== analyze_loop_nest =====
encoder/macroblock.c:794:22: note: === vect_analyze_loop_form ===
encoder/macroblock.c:794:22: note: not vectorized: control flow in loop.
encoder/macroblock.c:794:22: note: bad loop form.

Analyzing loop at encoder/macroblock.c:744
encoder/macroblock.c:744:32: note: ===== analyze_loop_nest =====
encoder/macroblock.c:744:32: note: === vect_analyze_loop_form ===
encoder/macroblock.c:744:32: note: ===== analyze_loop_nest_1 =====
encoder/macroblock.c:744:32: note: === vect_analyze_loop_form ===
encoder/macroblock.c:744:32: note: not vectorized: control flow in loop.
encoder/macroblock.c:744:32: note: bad inner-loop form.
encoder/macroblock.c:744:32: note: not vectorized: Bad inner loop.
encoder/macroblock.c:744:32: note: bad loop form.

Analyzing loop at encoder/macroblock.c:752
encoder/macroblock.c:752:22: note: ===== analyze_loop_nest =====
encoder/macroblock.c:752:22: note: === vect_analyze_loop_form ===
encoder/macroblock.c:752:22: note: not vectorized: control flow in loop.
encoder/macroblock.c:752:22: note: bad loop form.
encoder/macroblock.c:717:5: note: vectorized 0 loops in function.
x264_macroblock_probe_skip (struct x264_t * h, int b_bidir)
{
  int mvp$1;
  int mvp$0;
  int d0;
  int d1;
  int d2;
  int d3;
  uint8_t * p_dst;
  uint8_t * p_src;
  int fdec_offset;
  int fenc_offset;
  int i_decimate_mb;
  int i4x4;
  int i8x8;
  int thresh;
  int ch;
  int i_qp;
  int16_t dctscan[16];
  int16_t dct2x2[2][2];
  int16_t dct4x4[4][4][4];
  int _10;
  int _25;
  short int _27;
  int _28;
  int _30;
  short int _32;
  int _33;
  void (*<Tf7f>) (uint8_t *, int, uint8_t * *, int, int, int, int, int) _35;
  int _37;
  uint8_t *[6] * _38;
  uint8_t * _39;
  int _42;
  int _43;
  int _44;
  int _45;
  int _47;
  int _48;
  void (*<T1078>) (int16_t[4][4] *, uint8_t *, uint8_t *) _50;
  uint8_t * _51;
  sizetype _52;
  uint8_t * _53;
  uint8_t * _54;
  sizetype _55;
  uint8_t * _56;
  void (*<T1150>) (int16_t[4] *, uint16_t *, uint16_t *) _59;
  uint16_t[16] * _60;
  uint16_t * _63;
  uint16_t[16] * _64;
  uint16_t * _65;
  int16_t[4][4] * _66;
  unsigned int ivtmp_69;
  void (*<T10e4>) (int16_t *, int16_t[4] *) _71;
  int (*<T1194>) (int16_t *) _73;
  int _75;
  int _78;
  int _79;
  void (*<Tf87>) (uint8_t *, int, uint8_t *, int, int, int, int, int) _84;
  int _85;
  int _86;
  uint8_t * _87;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _89;
  int _91;
  void (*<T1078>) (int16_t[4][4] *, uint8_t *, uint8_t *) _92;
  void (*<T1161>) (int16_t[2] *, int, int) _94;
  uint16_t[16] * _95;
  long unsigned int _96;
  long unsigned int _97;
  uint16_t[16] * _98;
  short unsigned int _99;
  int _100;
  int _101;
  uint16_t[16] * _102;
  uint16_t[16] * _103;
  short unsigned int _104;
  short unsigned int _105;
  int _106;
  void (*<T1150>) (int16_t[4] *, uint16_t *, uint16_t *) _110;
  uint16_t[16] * _111;
  uint16_t * _112;
  uint16_t[16] * _113;
  uint16_t * _114;
  int16_t[4][4] * _115;
  void (*<T10e4>) (int16_t *, int16_t[4] *) _119;
  int (*<T1194>) (int16_t *) _121;
  int _123;
  long unsigned int _130;
  long unsigned int _131;
  long unsigned int _132;
  long unsigned int _133;
  long unsigned int _134;
  long unsigned int _135;
  long unsigned int _136;
  long unsigned int _138;
  long unsigned int _142;
  long unsigned int _143;
  long unsigned int _144;
  long unsigned int _145;
  long unsigned int _146;
  long unsigned int _147;
  long unsigned int _148;
  short int _154;
  int _155;
  short int _156;
  int _157;
  short int _159;
  int _160;
  short int _161;
  int _162;
  unsigned short _166;
  unsigned short _167;
  unsigned short _168;
  short int _169;
  unsigned short _170;
  unsigned short _171;
  unsigned short _172;
  short int _173;
  unsigned short _174;
  short int _175;
  unsigned short _176;
  short int _177;
  unsigned int ivtmp_181;
  unsigned int ivtmp_182;
  unsigned int ivtmp_183;
  unsigned int ivtmp_185;
  unsigned int ivtmp_186;
  unsigned int ivtmp_196;
  unsigned int ivtmp_197;
  long unsigned int pretmp_211;
  long unsigned int pretmp_212;

  <bb 2>:
  i_qp_23 = h_22(D)->mb.i_qp;
  # DEBUG i_qp => i_qp_23
  if (b_bidir_24(D) == 0)
    goto <bb 3>;
  else
    goto <bb 8>;

  <bb 3>:
  _25 = h_22(D)->mb.mv_max[0];
  mvp$0_26 = h_22(D)->mb.mv_min[0];
  _27 = h_22(D)->mb.cache.pskip_mv[0];
  _28 = (int) _27;
  # DEBUG v => _28
  # DEBUG i_min => mvp$0_26
  # DEBUG i_max => _25
  if (mvp$0_26 <= _28)
    goto <bb 4>;
  else
    goto <bb 5>;

  <bb 4>:
  mvp$0_152 = MIN_EXPR <_25, _28>;

  <bb 5>:
  # mvp$0_153 = PHI <mvp$0_26(3), mvp$0_152(4)>
  # DEBUG v => NULL
  # DEBUG i_min => NULL
  # DEBUG i_max => NULL
  # DEBUG mvp$0 => mvp$0_153
  _30 = h_22(D)->mb.mv_max[1];
  mvp$1_31 = h_22(D)->mb.mv_min[1];
  _32 = h_22(D)->mb.cache.pskip_mv[1];
  _33 = (int) _32;
  # DEBUG v => _33
  # DEBUG i_min => mvp$1_31
  # DEBUG i_max => _30
  if (mvp$1_31 <= _33)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  mvp$1_150 = MIN_EXPR <_30, _33>;

  <bb 7>:
  # mvp$1_151 = PHI <mvp$1_31(5), mvp$1_150(6)>
  # DEBUG v => NULL
  # DEBUG i_min => NULL
  # DEBUG i_max => NULL
  # DEBUG mvp$1 => mvp$1_151
  _35 = h_22(D)->mc.mc_luma;
  _37 = h_22(D)->mb.pic.i_stride[0];
  _38 = &h_22(D)->mb.pic.p_fref[0][0];
  _39 = h_22(D)->mb.pic.p_fdec[0];
  _35 (_39, 32, _38, _37, mvp$0_153, mvp$1_151, 16, 16);

  <bb 8>:
  # mvp$0_34 = PHI <mvp$0_109(D)(2), mvp$0_153(7)>
  # mvp$1_29 = PHI <mvp$1_118(D)(2), mvp$1_151(7)>
  # DEBUG mvp$1 => mvp$1_29
  # DEBUG mvp$0 => mvp$0_34
  # DEBUG i8x8 => 0
  # DEBUG i_decimate_mb => 0
  # DEBUG i_decimate_mb => 0
  # DEBUG i8x8 => 0
  pretmp_211 = (long unsigned int) i_qp_23;
  pretmp_212 = pretmp_211 * 32;

  <bb 9>:
  # i8x8_194 = PHI <i8x8_58(16), 0(8)>
  # i_decimate_mb_187 = PHI <i_decimate_mb_195(16), 0(8)>
  # ivtmp_182 = PHI <ivtmp_181(16), 4(8)>
  # DEBUG i_decimate_mb => i_decimate_mb_187
  # DEBUG i8x8 => i8x8_194
  _42 = i8x8_194 & 1;
  _43 = i8x8_194 >> 1;
  _44 = _43 * 16;
  _45 = _42 + _44;
  fenc_offset_46 = _45 * 8;
  # DEBUG fenc_offset => fenc_offset_46
  _47 = _43 * 32;
  _48 = _42 + _47;
  fdec_offset_49 = _48 * 8;
  # DEBUG fdec_offset => fdec_offset_49
  _50 = h_22(D)->dctf.sub8x8_dct;
  _51 = h_22(D)->mb.pic.p_fdec[0];
  _52 = (sizetype) fdec_offset_49;
  _53 = _51 + _52;
  _54 = h_22(D)->mb.pic.p_fenc[0];
  _55 = (sizetype) fenc_offset_46;
  _56 = _54 + _55;
  _50 (&dct4x4, _56, _53);
  # DEBUG i4x4 => 0
  # DEBUG i_decimate_mb => i_decimate_mb_187
  # DEBUG i4x4 => 0

  <bb 10>:
  # i4x4_192 = PHI <i4x4_70(14), 0(9)>
  # i_decimate_mb_191 = PHI <i_decimate_mb_5(14), i_decimate_mb_187(9)>
  # ivtmp_185 = PHI <ivtmp_183(14), 4(9)>
  # DEBUG i_decimate_mb => i_decimate_mb_191
  # DEBUG i4x4 => i4x4_192
  _59 = h_22(D)->quantf.quant_4x4;
  _60 = h_22(D)->quant4_bias[1];
  _63 = _60 + pretmp_212;
  _64 = h_22(D)->quant4_mf[1];
  _65 = _64 + pretmp_212;
  _66 = &dct4x4[i4x4_192];
  _59 (_66, _65, _63);
  # DEBUG v => _66
  # DEBUG i_count => 32
  # DEBUG v => _66
  # DEBUG i_count => 32
  # DEBUG x => _66
  _130 = MEM[(uint64_t *)_66];
  _131 = MEM[(uint64_t *)_66 + 8B];
  _132 = _130 | _131;
  _133 = MEM[(uint64_t *)_66 + 16B];
  _134 = _132 | _133;
  _135 = MEM[(uint64_t *)_66 + 24B];
  _136 = _134 | _135;
  # DEBUG v => NULL
  # DEBUG i_count => NULL
  # DEBUG i => NULL
  # DEBUG v => NULL
  # DEBUG i_count => NULL
  # DEBUG i => NULL
  # DEBUG i_count => NULL
  # DEBUG nonzero => NULL
  if (_136 == 0)
    goto <bb 13>;
  else
    goto <bb 11>;

  <bb 11>:
  _71 = h_22(D)->zigzagf.scan_4x4;
  _71 (&dctscan, _66);
  _73 = h_22(D)->quantf.decimate_score16;
  _75 = _73 (&dctscan);
  i_decimate_mb_76 = _75 + i_decimate_mb_191;
  # DEBUG i_decimate_mb => i_decimate_mb_76
  if (i_decimate_mb_76 > 5)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  goto <bb 30>;

  <bb 13>:
  # i_decimate_mb_5 = PHI <i_decimate_mb_191(10), i_decimate_mb_76(11)>
  # DEBUG i_decimate_mb => i_decimate_mb_5
  i4x4_70 = i4x4_192 + 1;
  # DEBUG i4x4 => i4x4_70
  # DEBUG i_decimate_mb => i_decimate_mb_5
  # DEBUG i4x4 => i4x4_70
  ivtmp_183 = ivtmp_185 - 1;
  if (ivtmp_183 != 0)
    goto <bb 14>;
  else
    goto <bb 15>;

  <bb 14>:
  goto <bb 10>;

  <bb 15>:
  # i_decimate_mb_195 = PHI <i_decimate_mb_5(13)>
  i8x8_58 = i8x8_194 + 1;
  # DEBUG i8x8 => i8x8_58
  # DEBUG i_decimate_mb => i_decimate_mb_195
  # DEBUG i8x8 => i8x8_58
  ivtmp_181 = ivtmp_182 - 1;
  if (ivtmp_181 != 0)
    goto <bb 16>;
  else
    goto <bb 17>;

  <bb 16>:
  goto <bb 9>;

  <bb 17>:
  i_qp_77 = h_22(D)->mb.i_chroma_qp;
  # DEBUG i_qp => i_qp_77
  _78 = x264_lambda2_tab[i_qp_77];
  _79 = _78 + 32;
  thresh_80 = _79 >> 6;
  # DEBUG thresh => thresh_80
  # DEBUG ch => 0
  # DEBUG ch => 0
  _96 = (long unsigned int) i_qp_77;
  _97 = _96 * 32;

  <bb 18>:
  # ch_193 = PHI <ch_81(22), 0(17)>
  # ivtmp_197 = PHI <ivtmp_186(22), 2(17)>
  # DEBUG ch => ch_193
  ch_81 = ch_193 + 1;
  p_src_82 = h_22(D)->mb.pic.p_fenc[ch_81];
  # DEBUG p_src => p_src_82
  p_dst_83 = h_22(D)->mb.pic.p_fdec[ch_81];
  # DEBUG p_dst => p_dst_83
  if (b_bidir_24(D) == 0)
    goto <bb 19>;
  else
    goto <bb 20>;

  <bb 19>:
  _84 = h_22(D)->mc.mc_chroma;
  _85 = h_22(D)->mb.pic.i_stride[ch_81];
  _86 = ch_193 + 4;
  _87 = h_22(D)->mb.pic.p_fref[0][0][_86];
  _84 (p_dst_83, 32, _87, _85, mvp$0_34, mvp$1_29, 8, 8);

  <bb 20>:
  _89 = h_22(D)->pixf.ssd[3];
  _91 = _89 (p_dst_83, 32, p_src_82, 16);
  if (thresh_80 > _91)
    goto <bb 21>;
  else
    goto <bb 23>;

  <bb 21>:
  # DEBUG ch => ch_81
  ivtmp_186 = ivtmp_197 - 1;
  if (ivtmp_186 != 0)
    goto <bb 22>;
  else
    goto <bb 29>;

  <bb 22>:
  goto <bb 18>;

  <bb 23>:
  _92 = h_22(D)->dctf.sub8x8_dct;
  _92 (&dct4x4, p_src_82, p_dst_83);
  # DEBUG d => &dct2x2
  # DEBUG dct4x4 => &dct4x4
  _154 = MEM[(int16_t[4][4] *)&dct4x4][0][0];
  _155 = (int) _154;
  _156 = MEM[(int16_t[4][4] *)&dct4x4 + 32B][0][0];
  _157 = (int) _156;
  d0_158 = _155 + _157;
  # DEBUG d0 => d0_158
  _159 = MEM[(int16_t[4][4] *)&dct4x4 + 64B][0][0];
  _160 = (int) _159;
  _161 = MEM[(int16_t[4][4] *)&dct4x4 + 96B][0][0];
  _162 = (int) _161;
  d1_163 = _160 + _162;
  # DEBUG d1 => d1_163
  d2_164 = _155 - _157;
  # DEBUG d2 => d2_164
  d3_165 = _160 - _162;
  # DEBUG d3 => d3_165
  _166 = (unsigned short) d0_158;
  _167 = (unsigned short) d1_163;
  _168 = _166 + _167;
  _169 = (short int) _168;
  MEM[(int16_t[2] *)&dct2x2][0] = _169;
  _170 = (unsigned short) d2_164;
  _171 = (unsigned short) d3_165;
  _172 = _170 + _171;
  _173 = (short int) _172;
  MEM[(int16_t[2] *)&dct2x2 + 4B][0] = _173;
  _174 = _166 - _167;
  _175 = (short int) _174;
  MEM[(int16_t[2] *)&dct2x2][1] = _175;
  _176 = _170 - _171;
  _177 = (short int) _176;
  MEM[(int16_t[2] *)&dct2x2 + 4B][1] = _177;
  MEM[(int16_t[4][4] *)&dct4x4][0][0] = 0;
  MEM[(int16_t[4][4] *)&dct4x4 + 32B][0][0] = 0;
  MEM[(int16_t[4][4] *)&dct4x4 + 64B][0][0] = 0;
  MEM[(int16_t[4][4] *)&dct4x4 + 96B][0][0] = 0;
  # DEBUG d => NULL
  # DEBUG dct4x4 => NULL
  # DEBUG d3 => NULL
  # DEBUG d2 => NULL
  # DEBUG d1 => NULL
  # DEBUG d0 => NULL
  _94 = h_22(D)->quantf.quant_2x2_dc;
  _95 = h_22(D)->quant4_bias[3];
  _98 = _95 + _97;
  _99 = *_98[0];
  _100 = (int) _99;
  _101 = _100 << 1;
  _102 = h_22(D)->quant4_mf[3];
  _103 = _102 + _97;
  _104 = *_103[0];
  _105 = _104 >> 1;
  _106 = (int) _105;
  _94 (&dct2x2, _106, _101);
  # DEBUG v => &dct2x2
  # DEBUG i_count => 8
  # DEBUG v => &dct2x2
  # DEBUG i_count => 8
  # DEBUG x => &dct2x2
  _138 = MEM[(uint64_t *)&dct2x2];
  # DEBUG v => NULL
  # DEBUG i_count => NULL
  # DEBUG i => NULL
  # DEBUG v => NULL
  # DEBUG i_count => NULL
  # DEBUG i => NULL
  # DEBUG i_count => NULL
  # DEBUG nonzero => NULL
  if (_138 != 0)
    goto <bb 12>;
  else
    goto <bb 24>;

  <bb 24>:

  <bb 25>:
  # i4x4_190 = PHI <0(24), i4x4_125(28)>
  # i_decimate_mb_188 = PHI <0(24), i_decimate_mb_8(28)>
  # ivtmp_196 = PHI <4(24), ivtmp_69(28)>
  # DEBUG i_decimate_mb => i_decimate_mb_188
  # DEBUG i4x4 => i4x4_190
  _110 = h_22(D)->quantf.quant_4x4;
  _111 = h_22(D)->quant4_bias[3];
  _112 = _111 + _97;
  _113 = h_22(D)->quant4_mf[3];
  _114 = _113 + _97;
  _115 = &dct4x4[i4x4_190];
  _110 (_115, _114, _112);
  # DEBUG v => _115
  # DEBUG i_count => 32
  # DEBUG v => _115
  # DEBUG i_count => 32
  # DEBUG x => _115
  _142 = MEM[(uint64_t *)_115];
  _143 = MEM[(uint64_t *)_115 + 8B];
  _144 = _142 | _143;
  _145 = MEM[(uint64_t *)_115 + 16B];
  _146 = _144 | _145;
  _147 = MEM[(uint64_t *)_115 + 24B];
  _148 = _146 | _147;
  # DEBUG v => NULL
  # DEBUG i_count => NULL
  # DEBUG i => NULL
  # DEBUG v => NULL
  # DEBUG i_count => NULL
  # DEBUG i => NULL
  # DEBUG i_count => NULL
  # DEBUG nonzero => NULL
  if (_148 == 0)
    goto <bb 27>;
  else
    goto <bb 26>;

  <bb 26>:
  _119 = h_22(D)->zigzagf.scan_4x4;
  _119 (&dctscan, _115);
  _121 = h_22(D)->quantf.decimate_score15;
  _123 = _121 (&dctscan);
  i_decimate_mb_124 = _123 + i_decimate_mb_188;
  # DEBUG i_decimate_mb => i_decimate_mb_124
  if (i_decimate_mb_124 > 6)
    goto <bb 12>;
  else
    goto <bb 27>;

  <bb 27>:
  # i_decimate_mb_8 = PHI <i_decimate_mb_188(25), i_decimate_mb_124(26)>
  # DEBUG i_decimate_mb => i_decimate_mb_8
  i4x4_125 = i4x4_190 + 1;
  # DEBUG i4x4 => i4x4_125
  # DEBUG i_decimate_mb => i_decimate_mb_8
  # DEBUG i4x4 => i4x4_125
  ivtmp_69 = ivtmp_196 - 1;
  if (ivtmp_69 != 0)
    goto <bb 28>;
  else
    goto <bb 21>;

  <bb 28>:
  goto <bb 25>;

  <bb 29>:
  h_22(D)->mb.b_skip_mc = 1;

  <bb 30>:
  # _10 = PHI <0(12), 1(29)>
  dct4x4 ={v} {CLOBBER};
  dct2x2 ={v} {CLOBBER};
  dctscan ={v} {CLOBBER};
  return _10;

}



;; Function x264_noise_reduction_update (x264_noise_reduction_update, funcdef_no=134, decl_uid=5831, cgraph_uid=134, symbol_order=177)


Analyzing loop at encoder/macroblock.c:816
encoder/macroblock.c:816:5: note: ===== analyze_loop_nest =====
encoder/macroblock.c:816:5: note: === vect_analyze_loop_form ===
encoder/macroblock.c:816:5: note: not vectorized: multiple nested loops.
encoder/macroblock.c:816:5: note: bad loop form.

Analyzing loop at encoder/macroblock.c:828
encoder/macroblock.c:828:9: note: ===== analyze_loop_nest =====
encoder/macroblock.c:828:9: note: === vect_analyze_loop_form ===
encoder/macroblock.c:828:9: note: === get_loop_niters ===
Analyzing # of iterations of loop 3
  exit condition [1, + , 1](no_overflow) < size_61
  bounds on difference of bases: 15 ... 63
  result:
    # of iterations (unsigned int) size_61 + 4294967295, bounded by 63
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:49, generic-match.c:3223
encoder/macroblock.c:828:9: note: Symbolic number of iterations is (unsigned int) size_61
encoder/macroblock.c:828:9: note: === vect_analyze_data_refs ===
Creating dr for h_14(D)->nr_residual_sum[cat_50][i_60]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: h_14(D)
	offset from base address: (ssizetype) ((sizetype) cat_50 * 256)
	constant offset from base address: 3552
	step: 4
	aligned to: 128
	base_object: *h_14(D)
	Access function 0: {0, +, 1}_3
	Access function 1: cat_50
	Access function 2: 28416
Creating dr for *_34
analyze_innermost: success.
	base_address: weight_62
	offset from base address: 0
	constant offset from base address: 0
	step: 2
	aligned to: 128
	base_object: *weight_62
	Access function 0: {0B, +, 2}_3
Creating dr for h_14(D)->nr_offset[cat_50][i_60]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: h_14(D)
	offset from base address: (ssizetype) ((sizetype) cat_50 * 128)
	constant offset from base address: 4064
	step: 2
	aligned to: 128
	base_object: *h_14(D)
	Access function 0: {0, +, 1}_3
	Access function 1: cat_50
	Access function 2: 32512
encoder/macroblock.c:828:9: note: got vectype for stmt: _27 = h_14(D)->nr_residual_sum[cat_50][i_60];
vector(4) unsigned int
encoder/macroblock.c:828:9: note: got vectype for stmt: _35 = *_34;
const vector(8) short unsigned int
encoder/macroblock.c:828:9: note: got vectype for stmt: h_14(D)->nr_offset[cat_50][i_60] = _41;
vector(8) short unsigned int
encoder/macroblock.c:828:9: note: === vect_analyze_scalar_cycles ===
encoder/macroblock.c:828:9: note: Analyze phi: i_60 = PHI <i_43(12), 0(10)>

encoder/macroblock.c:828:9: note: Access function of PHI: {0, +, 1}_3
encoder/macroblock.c:828:9: note: step: 1,  init: 0
encoder/macroblock.c:828:9: note: Detected induction.
encoder/macroblock.c:828:9: note: Analyze phi: .MEM_64 = PHI <.MEM_42(12), .MEM_12(10)>

encoder/macroblock.c:828:9: note: === vect_pattern_recog ===
encoder/macroblock.c:828:9: note: vect_is_simple_use: operand _32
encoder/macroblock.c:828:9: note: def_stmt: _32 = (long unsigned int) i_60;
encoder/macroblock.c:828:9: note: type of def: 3.
encoder/macroblock.c:828:9: note: vect_is_simple_use: operand i_60
encoder/macroblock.c:828:9: note: def_stmt: i_60 = PHI <i_43(12), 0(10)>
encoder/macroblock.c:828:9: note: type of def: 4.
encoder/macroblock.c:828:9: note: vect_is_simple_use: operand 2
encoder/macroblock.c:828:9: note: vect_is_simple_use: operand _31
encoder/macroblock.c:828:9: note: def_stmt: _31 = (long unsigned int) _27;
encoder/macroblock.c:828:9: note: type of def: 3.
encoder/macroblock.c:828:9: note: vect_is_simple_use: operand _27
encoder/macroblock.c:828:9: note: def_stmt: _27 = h_14(D)->nr_residual_sum[cat_50][i_60];
encoder/macroblock.c:828:9: note: type of def: 3.
encoder/macroblock.c:828:9: note: vect_is_simple_use: operand _36
encoder/macroblock.c:828:9: note: def_stmt: _36 = (long unsigned int) _35;
encoder/macroblock.c:828:9: note: type of def: 3.
encoder/macroblock.c:828:9: note: vect_is_simple_use: operand _35
encoder/macroblock.c:828:9: note: def_stmt: _35 = *_34;
encoder/macroblock.c:828:9: note: type of def: 3.
encoder/macroblock.c:828:9: note: vect_recog_widen_mult_pattern: detected:
encoder/macroblock.c:828:9: note: patt_92 = _27 w* _93;
encoder/macroblock.c:828:9: note: pattern recognized: patt_92 = _27 w* _93;
encoder/macroblock.c:828:9: note: vect_is_simple_use: operand _37
encoder/macroblock.c:828:9: note: def_stmt: _37 = _31 * _36;
encoder/macroblock.c:828:9: note: type of def: 3.
encoder/macroblock.c:828:9: note: === vect_analyze_data_ref_accesses ===
encoder/macroblock.c:828:9: note: === vect_mark_stmts_to_be_vectorized ===
encoder/macroblock.c:828:9: note: init: phi relevant? i_60 = PHI <i_43(12), 0(10)>
encoder/macroblock.c:828:9: note: init: phi relevant? .MEM_64 = PHI <.MEM_42(12), .MEM_12(10)>
encoder/macroblock.c:828:9: note: init: stmt relevant? # DEBUG i => i_60
encoder/macroblock.c:828:9: note: init: stmt relevant? _27 = h_14(D)->nr_residual_sum[cat_50][i_60];
encoder/macroblock.c:828:9: note: init: stmt relevant? _28 = _27 >> 1;
encoder/macroblock.c:828:9: note: init: stmt relevant? _29 = (long unsigned int) _28;
encoder/macroblock.c:828:9: note: init: stmt relevant? _30 = _29 + pretmp_105;
encoder/macroblock.c:828:9: note: init: stmt relevant? _31 = (long unsigned int) _27;
encoder/macroblock.c:828:9: note: init: stmt relevant? _32 = (long unsigned int) i_60;
encoder/macroblock.c:828:9: note: init: stmt relevant? _33 = _32 * 2;
encoder/macroblock.c:828:9: note: init: stmt relevant? _34 = weight_62 + _33;
encoder/macroblock.c:828:9: note: init: stmt relevant? _35 = *_34;
encoder/macroblock.c:828:9: note: init: stmt relevant? _36 = (long unsigned int) _35;
encoder/macroblock.c:828:9: note: init: stmt relevant? _37 = _31 * _36;
encoder/macroblock.c:828:9: note: init: stmt relevant? _38 = _37 >> 8;
encoder/macroblock.c:828:9: note: init: stmt relevant? _39 = _38 + 1;
encoder/macroblock.c:828:9: note: init: stmt relevant? _40 = _30 / _39;
encoder/macroblock.c:828:9: note: init: stmt relevant? _41 = (short unsigned int) _40;
encoder/macroblock.c:828:9: note: init: stmt relevant? h_14(D)->nr_offset[cat_50][i_60] = _41;
encoder/macroblock.c:828:9: note: vec_stmt_relevant_p: stmt has vdefs.
encoder/macroblock.c:828:9: note: mark relevant 4, live 0.
encoder/macroblock.c:828:9: note: init: stmt relevant? i_43 = i_60 + 1;
encoder/macroblock.c:828:9: note: init: stmt relevant? # DEBUG i => i_43
encoder/macroblock.c:828:9: note: init: stmt relevant? # DEBUG i => i_43
encoder/macroblock.c:828:9: note: init: stmt relevant? if (i_43 < size_61)
encoder/macroblock.c:828:9: note: worklist: examine stmt: h_14(D)->nr_offset[cat_50][i_60] = _41;
encoder/macroblock.c:828:9: note: vect_is_simple_use: operand _41
encoder/macroblock.c:828:9: note: def_stmt: _41 = (short unsigned int) _40;
encoder/macroblock.c:828:9: note: type of def: 3.
encoder/macroblock.c:828:9: note: mark relevant 4, live 0.
encoder/macroblock.c:828:9: note: worklist: examine stmt: _41 = (short unsigned int) _40;
encoder/macroblock.c:828:9: note: vect_is_simple_use: operand _40
encoder/macroblock.c:828:9: note: def_stmt: _40 = _30 / _39;
encoder/macroblock.c:828:9: note: type of def: 3.
encoder/macroblock.c:828:9: note: mark relevant 4, live 0.
encoder/macroblock.c:828:9: note: worklist: examine stmt: _40 = _30 / _39;
encoder/macroblock.c:828:9: note: vect_is_simple_use: operand _30
encoder/macroblock.c:828:9: note: def_stmt: _30 = _29 + pretmp_105;
encoder/macroblock.c:828:9: note: type of def: 3.
encoder/macroblock.c:828:9: note: mark relevant 4, live 0.
encoder/macroblock.c:828:9: note: vect_is_simple_use: operand _39
encoder/macroblock.c:828:9: note: def_stmt: _39 = _38 + 1;
encoder/macroblock.c:828:9: note: type of def: 3.
encoder/macroblock.c:828:9: note: mark relevant 4, live 0.
encoder/macroblock.c:828:9: note: worklist: examine stmt: _39 = _38 + 1;
encoder/macroblock.c:828:9: note: vect_is_simple_use: operand _38
encoder/macroblock.c:828:9: note: def_stmt: _38 = _37 >> 8;
encoder/macroblock.c:828:9: note: type of def: 3.
encoder/macroblock.c:828:9: note: mark relevant 4, live 0.
encoder/macroblock.c:828:9: note: worklist: examine stmt: _38 = _37 >> 8;
encoder/macroblock.c:828:9: note: vect_is_simple_use: operand _37
encoder/macroblock.c:828:9: note: def_stmt: _37 = _31 * _36;
encoder/macroblock.c:828:9: note: type of def: 3.
encoder/macroblock.c:828:9: note: mark relevant 4, live 0.
encoder/macroblock.c:828:9: note: last stmt in pattern. don't mark relevant/live.
encoder/macroblock.c:828:9: note: worklist: examine stmt: patt_92 = _27 w* _93;
encoder/macroblock.c:828:9: note: vect_is_simple_use: operand _27
encoder/macroblock.c:828:9: note: def_stmt: _27 = h_14(D)->nr_residual_sum[cat_50][i_60];
encoder/macroblock.c:828:9: note: type of def: 3.
encoder/macroblock.c:828:9: note: mark relevant 4, live 0.
encoder/macroblock.c:828:9: note: vect_is_simple_use: operand _93
encoder/macroblock.c:828:9: note: def_stmt: _93 = (unsigned int) _35;
encoder/macroblock.c:828:9: note: type of def: 3.
encoder/macroblock.c:828:9: note: mark relevant 4, live 0.
encoder/macroblock.c:828:9: note: worklist: examine stmt: _93 = (unsigned int) _35;
encoder/macroblock.c:828:9: note: vect_is_simple_use: operand _35
encoder/macroblock.c:828:9: note: def_stmt: _35 = *_34;
encoder/macroblock.c:828:9: note: type of def: 3.
encoder/macroblock.c:828:9: note: mark relevant 4, live 0.
encoder/macroblock.c:828:9: note: worklist: examine stmt: _35 = *_34;
encoder/macroblock.c:828:9: note: worklist: examine stmt: _27 = h_14(D)->nr_residual_sum[cat_50][i_60];
encoder/macroblock.c:828:9: note: worklist: examine stmt: _30 = _29 + pretmp_105;
encoder/macroblock.c:828:9: note: vect_is_simple_use: operand _29
encoder/macroblock.c:828:9: note: def_stmt: _29 = (long unsigned int) _28;
encoder/macroblock.c:828:9: note: type of def: 3.
encoder/macroblock.c:828:9: note: mark relevant 4, live 0.
encoder/macroblock.c:828:9: note: vect_is_simple_use: operand pretmp_105
encoder/macroblock.c:828:9: note: def_stmt: pretmp_105 = pretmp_98 * pretmp_104;
encoder/macroblock.c:828:9: note: type of def: 2.
encoder/macroblock.c:828:9: note: def_stmt is out of loop.
encoder/macroblock.c:828:9: note: worklist: examine stmt: _29 = (long unsigned int) _28;
encoder/macroblock.c:828:9: note: vect_is_simple_use: operand _28
encoder/macroblock.c:828:9: note: def_stmt: _28 = _27 >> 1;
encoder/macroblock.c:828:9: note: type of def: 3.
encoder/macroblock.c:828:9: note: mark relevant 4, live 0.
encoder/macroblock.c:828:9: note: worklist: examine stmt: _28 = _27 >> 1;
encoder/macroblock.c:828:9: note: vect_is_simple_use: operand _27
encoder/macroblock.c:828:9: note: def_stmt: _27 = h_14(D)->nr_residual_sum[cat_50][i_60];
encoder/macroblock.c:828:9: note: type of def: 3.
encoder/macroblock.c:828:9: note: mark relevant 4, live 0.
encoder/macroblock.c:828:9: note: already marked relevant/live.
encoder/macroblock.c:828:9: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _27 = h_14(D)->nr_residual_sum[cat_50][i_60];
  stmt_b: _35 = *_34;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _27 = h_14(D)->nr_residual_sum[cat_50][i_60];
  stmt_b: h_14(D)->nr_offset[cat_50][i_60] = _41;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_3)
  (chrec_b = {0, +, 1}_3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = cat_50)
  (chrec_b = cat_50)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 28416)
  (chrec_b = 32512)
(analyze_ziv_subscript 
)
  (overlap_iterations_a = no dependence)
  (overlap_iterations_b = no dependence))
) -> no dependence
(compute_affine_dependence
  stmt_a: _35 = *_34;
  stmt_b: h_14(D)->nr_offset[cat_50][i_60] = _41;
) -> dependence analysis failed
(compute_affine_dependence
  stmt_a: _27 = h_14(D)->nr_residual_sum[cat_50][i_60];
  stmt_b: _27 = h_14(D)->nr_residual_sum[cat_50][i_60];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_3)
  (chrec_b = {0, +, 1}_3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = cat_50)
  (chrec_b = cat_50)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 28416)
  (chrec_b = 28416)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _35 = *_34;
  stmt_b: _35 = *_34;
(analyze_overlapping_iterations 
  (chrec_a = {0B, +, 2}_3)
  (chrec_b = {0B, +, 2}_3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: h_14(D)->nr_offset[cat_50][i_60] = _41;
  stmt_b: h_14(D)->nr_offset[cat_50][i_60] = _41;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_3)
  (chrec_b = {0, +, 1}_3)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = cat_50)
  (chrec_b = cat_50)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 32512)
  (chrec_b = 32512)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
encoder/macroblock.c:828:9: note: versioning for alias required: can't determine dependence between *_34 and h_14(D)->nr_offset[cat_50][i_60]
encoder/macroblock.c:828:9: note: mark for run-time aliasing test between *_34 and h_14(D)->nr_offset[cat_50][i_60]
encoder/macroblock.c:828:9: note: === vect_determine_vectorization_factor ===
encoder/macroblock.c:828:9: note: ==> examining phi: i_60 = PHI <i_43(12), 0(10)>

encoder/macroblock.c:828:9: note: ==> examining phi: .MEM_64 = PHI <.MEM_42(12), .MEM_12(10)>

encoder/macroblock.c:828:9: note: ==> examining statement: # DEBUG i => i_60

encoder/macroblock.c:828:9: note: skip.
encoder/macroblock.c:828:9: note: ==> examining statement: _27 = h_14(D)->nr_residual_sum[cat_50][i_60];

encoder/macroblock.c:828:9: note: get vectype for scalar type:  unsigned int
encoder/macroblock.c:828:9: note: vectype: vector(4) unsigned int
encoder/macroblock.c:828:9: note: nunits = 4
encoder/macroblock.c:828:9: note: ==> examining statement: _28 = _27 >> 1;

encoder/macroblock.c:828:9: note: get vectype for scalar type:  unsigned int
encoder/macroblock.c:828:9: note: vectype: vector(4) unsigned int
encoder/macroblock.c:828:9: note: get vectype for scalar type:  unsigned int
encoder/macroblock.c:828:9: note: vectype: vector(4) unsigned int
encoder/macroblock.c:828:9: note: nunits = 4
encoder/macroblock.c:828:9: note: ==> examining statement: _29 = (long unsigned int) _28;

encoder/macroblock.c:828:9: note: get vectype for scalar type:  long unsigned int
encoder/macroblock.c:828:9: note: vectype: vector(2) long unsigned int
encoder/macroblock.c:828:9: note: get vectype for scalar type:  unsigned int
encoder/macroblock.c:828:9: note: vectype: vector(4) unsigned int
encoder/macroblock.c:828:9: note: nunits = 4
encoder/macroblock.c:828:9: note: ==> examining statement: _30 = _29 + pretmp_105;

encoder/macroblock.c:828:9: note: get vectype for scalar type:  long unsigned int
encoder/macroblock.c:828:9: note: vectype: vector(2) long unsigned int
encoder/macroblock.c:828:9: note: get vectype for scalar type:  long unsigned int
encoder/macroblock.c:828:9: note: vectype: vector(2) long unsigned int
encoder/macroblock.c:828:9: note: nunits = 2
encoder/macroblock.c:828:9: note: ==> examining statement: _31 = (long unsigned int) _27;

encoder/macroblock.c:828:9: note: skip.
encoder/macroblock.c:828:9: note: ==> examining statement: _32 = (long unsigned int) i_60;

encoder/macroblock.c:828:9: note: skip.
encoder/macroblock.c:828:9: note: ==> examining statement: _33 = _32 * 2;

encoder/macroblock.c:828:9: note: skip.
encoder/macroblock.c:828:9: note: ==> examining statement: _34 = weight_62 + _33;

encoder/macroblock.c:828:9: note: skip.
encoder/macroblock.c:828:9: note: ==> examining statement: _35 = *_34;

encoder/macroblock.c:828:9: note: get vectype for scalar type:  short unsigned int
encoder/macroblock.c:828:9: note: vectype: vector(8) short unsigned int
encoder/macroblock.c:828:9: note: nunits = 8
encoder/macroblock.c:828:9: note: ==> examining statement: _36 = (long unsigned int) _35;

encoder/macroblock.c:828:9: note: skip.
encoder/macroblock.c:828:9: note: ==> examining statement: _37 = _31 * _36;

encoder/macroblock.c:828:9: note: ==> examining pattern statement: patt_92 = _27 w* _93;

encoder/macroblock.c:828:9: note: ==> examining pattern def stmt: _93 = (unsigned int) _35;

encoder/macroblock.c:828:9: note: get vectype for scalar type:  short unsigned int
encoder/macroblock.c:828:9: note: vectype: vector(8) short unsigned int
encoder/macroblock.c:828:9: note: nunits = 8
encoder/macroblock.c:828:9: note: ==> examining statement: _37 = _31 * _36;

encoder/macroblock.c:828:9: note: ==> examining pattern statement: patt_92 = _27 w* _93;

encoder/macroblock.c:828:9: note: get vectype for scalar type:  unsigned int
encoder/macroblock.c:828:9: note: vectype: vector(4) unsigned int
encoder/macroblock.c:828:9: note: nunits = 4
encoder/macroblock.c:828:9: note: ==> examining statement: _38 = _37 >> 8;

encoder/macroblock.c:828:9: note: get vectype for scalar type:  long unsigned int
encoder/macroblock.c:828:9: note: vectype: vector(2) long unsigned int
encoder/macroblock.c:828:9: note: get vectype for scalar type:  long unsigned int
encoder/macroblock.c:828:9: note: vectype: vector(2) long unsigned int
encoder/macroblock.c:828:9: note: nunits = 2
encoder/macroblock.c:828:9: note: ==> examining statement: _39 = _38 + 1;

encoder/macroblock.c:828:9: note: get vectype for scalar type:  long unsigned int
encoder/macroblock.c:828:9: note: vectype: vector(2) long unsigned int
encoder/macroblock.c:828:9: note: get vectype for scalar type:  long unsigned int
encoder/macroblock.c:828:9: note: vectype: vector(2) long unsigned int
encoder/macroblock.c:828:9: note: nunits = 2
encoder/macroblock.c:828:9: note: ==> examining statement: _40 = _30 / _39;

encoder/macroblock.c:828:9: note: get vectype for scalar type:  long unsigned int
encoder/macroblock.c:828:9: note: vectype: vector(2) long unsigned int
encoder/macroblock.c:828:9: note: get vectype for scalar type:  long unsigned int
encoder/macroblock.c:828:9: note: vectype: vector(2) long unsigned int
encoder/macroblock.c:828:9: note: nunits = 2
encoder/macroblock.c:828:9: note: ==> examining statement: _41 = (short unsigned int) _40;

encoder/macroblock.c:828:9: note: get vectype for scalar type:  short unsigned int
encoder/macroblock.c:828:9: note: vectype: vector(8) short unsigned int
encoder/macroblock.c:828:9: note: get vectype for scalar type:  short unsigned int
encoder/macroblock.c:828:9: note: vectype: vector(8) short unsigned int
encoder/macroblock.c:828:9: note: nunits = 8
encoder/macroblock.c:828:9: note: ==> examining statement: h_14(D)->nr_offset[cat_50][i_60] = _41;

encoder/macroblock.c:828:9: note: get vectype for scalar type:  uint16_t
encoder/macroblock.c:828:9: note: vectype: vector(8) short unsigned int
encoder/macroblock.c:828:9: note: nunits = 8
encoder/macroblock.c:828:9: note: ==> examining statement: i_43 = i_60 + 1;

encoder/macroblock.c:828:9: note: skip.
encoder/macroblock.c:828:9: note: ==> examining statement: # DEBUG i => i_43

encoder/macroblock.c:828:9: note: skip.
encoder/macroblock.c:828:9: note: ==> examining statement: # DEBUG i => i_43

encoder/macroblock.c:828:9: note: skip.
encoder/macroblock.c:828:9: note: ==> examining statement: if (i_43 < size_61)

encoder/macroblock.c:828:9: note: skip.
encoder/macroblock.c:828:9: note: vectorization factor = 8
encoder/macroblock.c:828:9: note: === vect_analyze_data_refs_alignment ===
encoder/macroblock.c:828:9: note: vect_compute_data_ref_alignment:
encoder/macroblock.c:828:9: note: misalign = 0 bytes of ref h_14(D)->nr_residual_sum[cat_50][i_60]
encoder/macroblock.c:828:9: note: vect_compute_data_ref_alignment:
encoder/macroblock.c:828:9: note: misalign = 0 bytes of ref *_34
encoder/macroblock.c:828:9: note: vect_compute_data_ref_alignment:
encoder/macroblock.c:828:9: note: misalign = 0 bytes of ref h_14(D)->nr_offset[cat_50][i_60]
encoder/macroblock.c:828:9: note: === vect_prune_runtime_alias_test_list ===
encoder/macroblock.c:828:9: note: improved number of alias checks from 1 to 1
encoder/macroblock.c:828:9: note: === vect_enhance_data_refs_alignment ===
encoder/macroblock.c:828:9: note: vect_can_advance_ivs_p:
encoder/macroblock.c:828:9: note: Analyze phi: i_60 = PHI <i_43(12), 0(10)>

encoder/macroblock.c:828:9: note: Analyze phi: .MEM_64 = PHI <.MEM_42(12), .MEM_12(10)>

encoder/macroblock.c:828:9: note: virtual phi. skip.
encoder/macroblock.c:828:9: note: vect_model_load_cost: aligned.
encoder/macroblock.c:828:9: note: vect_get_data_access_cost: inside_cost = 2, outside_cost = 0.
encoder/macroblock.c:828:9: note: vect_model_load_cost: aligned.
encoder/macroblock.c:828:9: note: vect_get_data_access_cost: inside_cost = 3, outside_cost = 0.
encoder/macroblock.c:828:9: note: vect_model_store_cost: aligned.
encoder/macroblock.c:828:9: note: vect_get_data_access_cost: inside_cost = 4, outside_cost = 0.
encoder/macroblock.c:828:9: note: cost model: epilogue peel iters set to vf/2 because loop iterations are unknown .
encoder/macroblock.c:828:9: note: === vect_analyze_slp ===
encoder/macroblock.c:828:9: note: === vect_make_slp_decision ===
encoder/macroblock.c:828:9: note: === vect_detect_hybrid_slp ===
encoder/macroblock.c:828:9: note: === vect_analyze_loop_operations ===
encoder/macroblock.c:828:9: note: examining phi: i_60 = PHI <i_43(12), 0(10)>

encoder/macroblock.c:828:9: note: examining phi: .MEM_64 = PHI <.MEM_42(12), .MEM_12(10)>

encoder/macroblock.c:828:9: note: ==> examining statement: # DEBUG i => i_60
encoder/macroblock.c:828:9: note: irrelevant.
encoder/macroblock.c:828:9: note: ==> examining statement: _27 = h_14(D)->nr_residual_sum[cat_50][i_60];
encoder/macroblock.c:828:9: note: num. args = 4 (not unary/binary/ternary op).
encoder/macroblock.c:828:9: note: vect_is_simple_use: operand h_14(D)->nr_residual_sum[cat_50][i_60]
encoder/macroblock.c:828:9: note: not ssa-name.
encoder/macroblock.c:828:9: note: use not simple.
encoder/macroblock.c:828:9: note: vect_model_load_cost: aligned.
encoder/macroblock.c:828:9: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
encoder/macroblock.c:828:9: note: ==> examining statement: _28 = _27 >> 1;
encoder/macroblock.c:828:9: note: vect_is_simple_use: operand _27
encoder/macroblock.c:828:9: note: def_stmt: _27 = h_14(D)->nr_residual_sum[cat_50][i_60];
encoder/macroblock.c:828:9: note: type of def: 3.
encoder/macroblock.c:828:9: note: vect_is_simple_use: operand 1
encoder/macroblock.c:828:9: note: vector/scalar shift/rotate found.
encoder/macroblock.c:828:9: note: === vectorizable_shift ===
encoder/macroblock.c:828:9: note: vect_model_simple_cost: inside_cost = 2, prologue_cost = 1 .
encoder/macroblock.c:828:9: note: ==> examining statement: _29 = (long unsigned int) _28;
encoder/macroblock.c:828:9: note: vect_is_simple_use: operand _28
encoder/macroblock.c:828:9: note: def_stmt: _28 = _27 >> 1;
encoder/macroblock.c:828:9: note: type of def: 3.
encoder/macroblock.c:828:9: note: === vectorizable_conversion ===
encoder/macroblock.c:828:9: note: vect_model_promotion_demotion_cost: inside_cost = 2, prologue_cost = 0 .
encoder/macroblock.c:828:9: note: ==> examining statement: _30 = _29 + pretmp_105;
encoder/macroblock.c:828:9: note: vect_is_simple_use: operand _29
encoder/macroblock.c:828:9: note: def_stmt: _29 = (long unsigned int) _28;
encoder/macroblock.c:828:9: note: type of def: 3.
encoder/macroblock.c:828:9: note: vect_is_simple_use: operand pretmp_105
encoder/macroblock.c:828:9: note: def_stmt: pretmp_105 = pretmp_98 * pretmp_104;
encoder/macroblock.c:828:9: note: type of def: 2.
encoder/macroblock.c:828:9: note: === vectorizable_operation ===
encoder/macroblock.c:828:9: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 1 .
encoder/macroblock.c:828:9: note: ==> examining statement: _31 = (long unsigned int) _27;
encoder/macroblock.c:828:9: note: irrelevant.
encoder/macroblock.c:828:9: note: ==> examining statement: _32 = (long unsigned int) i_60;
encoder/macroblock.c:828:9: note: irrelevant.
encoder/macroblock.c:828:9: note: ==> examining statement: _33 = _32 * 2;
encoder/macroblock.c:828:9: note: irrelevant.
encoder/macroblock.c:828:9: note: ==> examining statement: _34 = weight_62 + _33;
encoder/macroblock.c:828:9: note: irrelevant.
encoder/macroblock.c:828:9: note: ==> examining statement: _35 = *_34;
encoder/macroblock.c:828:9: note: vect_is_simple_use: operand *_34
encoder/macroblock.c:828:9: note: not ssa-name.
encoder/macroblock.c:828:9: note: use not simple.
encoder/macroblock.c:828:9: note: vect_is_simple_use: operand *_34
encoder/macroblock.c:828:9: note: not ssa-name.
encoder/macroblock.c:828:9: note: use not simple.
encoder/macroblock.c:828:9: note: vect_model_load_cost: aligned.
encoder/macroblock.c:828:9: note: vect_model_load_cost: inside_cost = 1, prologue_cost = 0 .
encoder/macroblock.c:828:9: note: ==> examining statement: _36 = (long unsigned int) _35;
encoder/macroblock.c:828:9: note: irrelevant.
encoder/macroblock.c:828:9: note: ==> examining statement: _37 = _31 * _36;
encoder/macroblock.c:828:9: note: ==> examining pattern statement: patt_92 = _27 w* _93;
encoder/macroblock.c:828:9: note: ==> examining pattern def statement: _93 = (unsigned int) _35;
encoder/macroblock.c:828:9: note: ==> examining statement: _93 = (unsigned int) _35;
encoder/macroblock.c:828:9: note: vect_is_simple_use: operand _35
encoder/macroblock.c:828:9: note: def_stmt: _35 = *_34;
encoder/macroblock.c:828:9: note: type of def: 3.
encoder/macroblock.c:828:9: note: === vectorizable_conversion ===
encoder/macroblock.c:828:9: note: vect_model_promotion_demotion_cost: inside_cost = 2, prologue_cost = 0 .
encoder/macroblock.c:828:9: note: vect_is_simple_use: operand _27
encoder/macroblock.c:828:9: note: def_stmt: _27 = h_14(D)->nr_residual_sum[cat_50][i_60];
encoder/macroblock.c:828:9: note: type of def: 3.
encoder/macroblock.c:828:9: note: vect_is_simple_use: operand _93
encoder/macroblock.c:828:9: note: def_stmt: _93 = (unsigned int) _35;
encoder/macroblock.c:828:9: note: type of def: 3.
encoder/macroblock.c:828:9: note: === vectorizable_conversion ===
encoder/macroblock.c:828:9: note: vect_model_promotion_demotion_cost: inside_cost = 2, prologue_cost = 0 .
encoder/macroblock.c:828:9: note: ==> examining statement: _38 = _37 >> 8;
encoder/macroblock.c:828:9: note: vect_is_simple_use: operand _37
encoder/macroblock.c:828:9: note: def_stmt: _37 = _31 * _36;
encoder/macroblock.c:828:9: note: type of def: 3.
encoder/macroblock.c:828:9: note: vect_is_simple_use: operand 8
encoder/macroblock.c:828:9: note: vector/scalar shift/rotate found.
encoder/macroblock.c:828:9: note: === vectorizable_shift ===
encoder/macroblock.c:828:9: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 1 .
encoder/macroblock.c:828:9: note: ==> examining statement: _39 = _38 + 1;
encoder/macroblock.c:828:9: note: vect_is_simple_use: operand _38
encoder/macroblock.c:828:9: note: def_stmt: _38 = _37 >> 8;
encoder/macroblock.c:828:9: note: type of def: 3.
encoder/macroblock.c:828:9: note: vect_is_simple_use: operand 1
encoder/macroblock.c:828:9: note: === vectorizable_operation ===
encoder/macroblock.c:828:9: note: vect_model_simple_cost: inside_cost = 4, prologue_cost = 1 .
encoder/macroblock.c:828:9: note: ==> examining statement: _40 = _30 / _39;
encoder/macroblock.c:828:9: note: vect_is_simple_use: operand _30
encoder/macroblock.c:828:9: note: def_stmt: _30 = _29 + pretmp_105;
encoder/macroblock.c:828:9: note: type of def: 3.
encoder/macroblock.c:828:9: note: vect_is_simple_use: operand _39
encoder/macroblock.c:828:9: note: def_stmt: _39 = _38 + 1;
encoder/macroblock.c:828:9: note: type of def: 3.
encoder/macroblock.c:828:9: note: op not supported by target.
encoder/macroblock.c:828:9: note: not vectorized: relevant stmt not supported: _40 = _30 / _39;
encoder/macroblock.c:828:9: note: bad operation or unsupported loop bound.

Analyzing loop at encoder/macroblock.c:823
encoder/macroblock.c:823:13: note: ===== analyze_loop_nest =====
encoder/macroblock.c:823:13: note: === vect_analyze_loop_form ===
encoder/macroblock.c:823:13: note: === get_loop_niters ===
Analyzing # of iterations of loop 2
  exit condition [1, + , 1](no_overflow) < size_61
  bounds on difference of bases: 15 ... 63
  result:
    # of iterations (unsigned int) size_61 + 4294967295, bounded by 63
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:49, generic-match.c:3223
encoder/macroblock.c:823:13: note: Symbolic number of iterations is (unsigned int) size_61
encoder/macroblock.c:823:13: note: === vect_analyze_data_refs ===
Creating dr for h_14(D)->nr_residual_sum[cat_50][i_52]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: h_14(D)
	offset from base address: (ssizetype) ((sizetype) cat_50 * 256)
	constant offset from base address: 3552
	step: 4
	aligned to: 128
	base_object: *h_14(D)
	Access function 0: {0, +, 1}_2
	Access function 1: cat_50
	Access function 2: 28416
Creating dr for h_14(D)->nr_residual_sum[cat_50][i_52]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: h_14(D)
	offset from base address: (ssizetype) ((sizetype) cat_50 * 256)
	constant offset from base address: 3552
	step: 4
	aligned to: 128
	base_object: *h_14(D)
	Access function 0: {0, +, 1}_2
	Access function 1: cat_50
	Access function 2: 28416
encoder/macroblock.c:823:13: note: got vectype for stmt: _16 = h_14(D)->nr_residual_sum[cat_50][i_52];
vector(4) unsigned int
encoder/macroblock.c:823:13: note: got vectype for stmt: h_14(D)->nr_residual_sum[cat_50][i_52] = _17;
vector(4) unsigned int
encoder/macroblock.c:823:13: note: === vect_analyze_scalar_cycles ===
encoder/macroblock.c:823:13: note: Analyze phi: i_52 = PHI <0(6), i_19(8)>

encoder/macroblock.c:823:13: note: Access function of PHI: {0, +, 1}_2
encoder/macroblock.c:823:13: note: step: 1,  init: 0
encoder/macroblock.c:823:13: note: Detected induction.
encoder/macroblock.c:823:13: note: Analyze phi: .MEM_63 = PHI <.MEM_65(6), .MEM_18(8)>

encoder/macroblock.c:823:13: note: === vect_pattern_recog ===
encoder/macroblock.c:823:13: note: vect_is_simple_use: operand _16
encoder/macroblock.c:823:13: note: def_stmt: _16 = h_14(D)->nr_residual_sum[cat_50][i_52];
encoder/macroblock.c:823:13: note: type of def: 3.
encoder/macroblock.c:823:13: note: === vect_analyze_data_ref_accesses ===
encoder/macroblock.c:823:13: note: === vect_mark_stmts_to_be_vectorized ===
encoder/macroblock.c:823:13: note: init: phi relevant? i_52 = PHI <0(6), i_19(8)>
encoder/macroblock.c:823:13: note: init: phi relevant? .MEM_63 = PHI <.MEM_65(6), .MEM_18(8)>
encoder/macroblock.c:823:13: note: init: stmt relevant? # DEBUG i => i_52
encoder/macroblock.c:823:13: note: init: stmt relevant? _16 = h_14(D)->nr_residual_sum[cat_50][i_52];
encoder/macroblock.c:823:13: note: init: stmt relevant? _17 = _16 >> 1;
encoder/macroblock.c:823:13: note: init: stmt relevant? h_14(D)->nr_residual_sum[cat_50][i_52] = _17;
encoder/macroblock.c:823:13: note: vec_stmt_relevant_p: stmt has vdefs.
encoder/macroblock.c:823:13: note: mark relevant 4, live 0.
encoder/macroblock.c:823:13: note: init: stmt relevant? i_19 = i_52 + 1;
encoder/macroblock.c:823:13: note: init: stmt relevant? # DEBUG i => i_19
encoder/macroblock.c:823:13: note: init: stmt relevant? # DEBUG i => i_19
encoder/macroblock.c:823:13: note: init: stmt relevant? if (i_19 < size_61)
encoder/macroblock.c:823:13: note: worklist: examine stmt: h_14(D)->nr_residual_sum[cat_50][i_52] = _17;
encoder/macroblock.c:823:13: note: vect_is_simple_use: operand _17
encoder/macroblock.c:823:13: note: def_stmt: _17 = _16 >> 1;
encoder/macroblock.c:823:13: note: type of def: 3.
encoder/macroblock.c:823:13: note: mark relevant 4, live 0.
encoder/macroblock.c:823:13: note: worklist: examine stmt: _17 = _16 >> 1;
encoder/macroblock.c:823:13: note: vect_is_simple_use: operand _16
encoder/macroblock.c:823:13: note: def_stmt: _16 = h_14(D)->nr_residual_sum[cat_50][i_52];
encoder/macroblock.c:823:13: note: type of def: 3.
encoder/macroblock.c:823:13: note: mark relevant 4, live 0.
encoder/macroblock.c:823:13: note: worklist: examine stmt: _16 = h_14(D)->nr_residual_sum[cat_50][i_52];
encoder/macroblock.c:823:13: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: _16 = h_14(D)->nr_residual_sum[cat_50][i_52];
  stmt_b: h_14(D)->nr_residual_sum[cat_50][i_52] = _17;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_2)
  (chrec_b = {0, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = cat_50)
  (chrec_b = cat_50)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 28416)
  (chrec_b = 28416)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: _16 = h_14(D)->nr_residual_sum[cat_50][i_52];
  stmt_b: _16 = h_14(D)->nr_residual_sum[cat_50][i_52];
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_2)
  (chrec_b = {0, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = cat_50)
  (chrec_b = cat_50)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 28416)
  (chrec_b = 28416)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
(compute_affine_dependence
  stmt_a: h_14(D)->nr_residual_sum[cat_50][i_52] = _17;
  stmt_b: h_14(D)->nr_residual_sum[cat_50][i_52] = _17;
(analyze_overlapping_iterations 
  (chrec_a = {0, +, 1}_2)
  (chrec_b = {0, +, 1}_2)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = cat_50)
  (chrec_b = cat_50)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
(analyze_overlapping_iterations 
  (chrec_a = 28416)
  (chrec_b = 28416)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
encoder/macroblock.c:823:13: note: dependence distance  = 0.
encoder/macroblock.c:823:13: note: dependence distance == 0 between h_14(D)->nr_residual_sum[cat_50][i_52] and h_14(D)->nr_residual_sum[cat_50][i_52]
encoder/macroblock.c:823:13: note: === vect_determine_vectorization_factor ===
encoder/macroblock.c:823:13: note: ==> examining phi: i_52 = PHI <0(6), i_19(8)>

encoder/macroblock.c:823:13: note: ==> examining phi: .MEM_63 = PHI <.MEM_65(6), .MEM_18(8)>

encoder/macroblock.c:823:13: note: ==> examining statement: # DEBUG i => i_52

encoder/macroblock.c:823:13: note: skip.
encoder/macroblock.c:823:13: note: ==> examining statement: _16 = h_14(D)->nr_residual_sum[cat_50][i_52];

encoder/macroblock.c:823:13: note: get vectype for scalar type:  unsigned int
encoder/macroblock.c:823:13: note: vectype: vector(4) unsigned int
encoder/macroblock.c:823:13: note: nunits = 4
encoder/macroblock.c:823:13: note: ==> examining statement: _17 = _16 >> 1;

encoder/macroblock.c:823:13: note: get vectype for scalar type:  unsigned int
encoder/macroblock.c:823:13: note: vectype: vector(4) unsigned int
encoder/macroblock.c:823:13: note: get vectype for scalar type:  unsigned int
encoder/macroblock.c:823:13: note: vectype: vector(4) unsigned int
encoder/macroblock.c:823:13: note: nunits = 4
encoder/macroblock.c:823:13: note: ==> examining statement: h_14(D)->nr_residual_sum[cat_50][i_52] = _17;

encoder/macroblock.c:823:13: note: get vectype for scalar type:  uint32_t
encoder/macroblock.c:823:13: note: vectype: vector(4) unsigned int
encoder/macroblock.c:823:13: note: nunits = 4
encoder/macroblock.c:823:13: note: ==> examining statement: i_19 = i_52 + 1;

encoder/macroblock.c:823:13: note: skip.
encoder/macroblock.c:823:13: note: ==> examining statement: # DEBUG i => i_19

encoder/macroblock.c:823:13: note: skip.
encoder/macroblock.c:823:13: note: ==> examining statement: # DEBUG i => i_19

encoder/macroblock.c:823:13: note: skip.
encoder/macroblock.c:823:13: note: ==> examining statement: if (i_19 < size_61)

encoder/macroblock.c:823:13: note: skip.
encoder/macroblock.c:823:13: note: vectorization factor = 4
encoder/macroblock.c:823:13: note: === vect_analyze_data_refs_alignment ===
encoder/macroblock.c:823:13: note: dependence distance  = 0.
encoder/macroblock.c:823:13: note: accesses have the same alignment.
dependence distance modulo vf == 0 between h_14(D)->nr_residual_sum[cat_50][i_52] and h_14(D)->nr_residual_sum[cat_50][i_52]
encoder/macroblock.c:823:13: note: vect_compute_data_ref_alignment:
encoder/macroblock.c:823:13: note: misalign = 0 bytes of ref h_14(D)->nr_residual_sum[cat_50][i_52]
encoder/macroblock.c:823:13: note: vect_compute_data_ref_alignment:
encoder/macroblock.c:823:13: note: misalign = 0 bytes of ref h_14(D)->nr_residual_sum[cat_50][i_52]
encoder/macroblock.c:823:13: note: === vect_prune_runtime_alias_test_list ===
encoder/macroblock.c:823:13: note: === vect_enhance_data_refs_alignment ===
encoder/macroblock.c:823:13: note: vect_can_advance_ivs_p:
encoder/macroblock.c:823:13: note: Analyze phi: i_52 = PHI <0(6), i_19(8)>

encoder/macroblock.c:823:13: note: Analyze phi: .MEM_63 = PHI <.MEM_65(6), .MEM_18(8)>

encoder/macroblock.c:823:13: note: virtual phi. skip.
encoder/macroblock.c:823:13: note: vect_model_load_cost: aligned.
encoder/macroblock.c:823:13: note: vect_get_data_access_cost: inside_cost = 1, outside_cost = 0.
encoder/macroblock.c:823:13: note: vect_model_store_cost: aligned.
encoder/macroblock.c:823:13: note: vect_get_data_access_cost: inside_cost = 2, outside_cost = 0.
encoder/macroblock.c:823:13: note: cost model: epilogue peel iters set to vf/2 because loop iterations are unknown .
encoder/macroblock.c:823:13: note: === vect_analyze_slp ===
encoder/macroblock.c:823:13: note: === vect_make_slp_decision ===
encoder/macroblock.c:823:13: note: === vect_detect_hybrid_slp ===
encoder/macroblock.c:823:13: note: === vect_analyze_loop_operations ===
encoder/macroblock.c:823:13: note: examining phi: i_52 = PHI <0(6), i_19(8)>

encoder/macroblock.c:823:13: note: examining phi: .MEM_63 = PHI <.MEM_65(6), .MEM_18(8)>

encoder/macroblock.c:823:13: note: ==> examining statement: # DEBUG i => i_52
encoder/macroblock.c:823:13: note: irrelevant.
encoder/macroblock.c:823:13: note: ==> examining statement: _16 = h_14(D)->nr_residual_sum[cat_50][i_52];
encoder/macroblock.c:823:13: note: num. args = 4 (not unary/binary/ternary op).
encoder/macroblock.c:823:13: note: vect_is_simple_use: operand h_14(D)->nr_residual_sum[cat_50][i_52]
encoder/macroblock.c:823:13: note: not ssa-name.
encoder/macroblock.c:823:13: note: use not simple.
encoder/macroblock.c:823:13: note: vect_model_load_cost: aligned.
encoder/macroblock.c:823:13: note: vect_model_load_cost: inside_cost = 1, prologue_cost = 0 .
encoder/macroblock.c:823:13: note: ==> examining statement: _17 = _16 >> 1;
encoder/macroblock.c:823:13: note: vect_is_simple_use: operand _16
encoder/macroblock.c:823:13: note: def_stmt: _16 = h_14(D)->nr_residual_sum[cat_50][i_52];
encoder/macroblock.c:823:13: note: type of def: 3.
encoder/macroblock.c:823:13: note: vect_is_simple_use: operand 1
encoder/macroblock.c:823:13: note: vector/scalar shift/rotate found.
encoder/macroblock.c:823:13: note: === vectorizable_shift ===
encoder/macroblock.c:823:13: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
encoder/macroblock.c:823:13: note: ==> examining statement: h_14(D)->nr_residual_sum[cat_50][i_52] = _17;
encoder/macroblock.c:823:13: note: vect_is_simple_use: operand _17
encoder/macroblock.c:823:13: note: def_stmt: _17 = _16 >> 1;
encoder/macroblock.c:823:13: note: type of def: 3.
encoder/macroblock.c:823:13: note: vect_model_store_cost: aligned.
encoder/macroblock.c:823:13: note: vect_model_store_cost: inside_cost = 1, prologue_cost = 0 .
encoder/macroblock.c:823:13: note: ==> examining statement: i_19 = i_52 + 1;
encoder/macroblock.c:823:13: note: irrelevant.
encoder/macroblock.c:823:13: note: ==> examining statement: # DEBUG i => i_19
encoder/macroblock.c:823:13: note: irrelevant.
encoder/macroblock.c:823:13: note: ==> examining statement: # DEBUG i => i_19
encoder/macroblock.c:823:13: note: irrelevant.
encoder/macroblock.c:823:13: note: ==> examining statement: if (i_19 < size_61)
encoder/macroblock.c:823:13: note: irrelevant.
encoder/macroblock.c:823:13: note: === vect_update_slp_costs_according_to_vf ===
encoder/macroblock.c:823:13: note: cost model: epilogue peel iters set to vf/2 because loop iterations are unknown .
encoder/macroblock.c:823:13: note: Cost model analysis: 
  Vector inside of loop cost: 3
  Vector prologue cost: 7
  Vector epilogue cost: 6
  Scalar iteration cost: 3
  Scalar outside cost: 6
  Vector outside cost: 13
  prologue iterations: 0
  epilogue iterations: 2
  Calculated minimum iters for profitability: 3
encoder/macroblock.c:823:13: note:   Runtime profitability threshold = 3
encoder/macroblock.c:823:13: note:   Static estimate profitability threshold = 3
encoder/macroblock.c:823:13: note: loop vectorized
encoder/macroblock.c:823:13: note: === vec_transform_loop ===
encoder/macroblock.c:823:13: note: Profitability threshold is 3 loop iterations.
encoder/macroblock.c:823:13: note: ------>vectorizing phi: i_52 = PHI <0(18), i_19(8)>

encoder/macroblock.c:823:13: note: ------>vectorizing phi: .MEM_63 = PHI <.MEM_65(18), .MEM_18(8)>

encoder/macroblock.c:823:13: note: ------>vectorizing statement: # DEBUG i => i_52

encoder/macroblock.c:823:13: note: ------>vectorizing statement: _16 = h_14(D)->nr_residual_sum[cat_50][i_52];

encoder/macroblock.c:823:13: note: transform statement.
encoder/macroblock.c:823:13: note: transform load. ncopies = 1
encoder/macroblock.c:823:13: note: create vector_type-pointer variable to type: vector(4) unsigned int  vectorizing a record based array ref: *h_14(D)
Applying pattern match.pd:700, generic-match.c:1350
Applying pattern match.pd:628, generic-match.c:1309
encoder/macroblock.c:823:13: note: created vectp_h.303_88
encoder/macroblock.c:823:13: note: add new stmt: vect__16.304_82 = MEM[(unsigned int *)vectp_h.302_84];
encoder/macroblock.c:823:13: note: ------>vectorizing statement: _17 = _16 >> 1;

encoder/macroblock.c:823:13: note: transform statement.
encoder/macroblock.c:823:13: note: vect_is_simple_use: operand _16
encoder/macroblock.c:823:13: note: def_stmt: _16 = h_14(D)->nr_residual_sum[cat_50][i_52];
encoder/macroblock.c:823:13: note: type of def: 3.
encoder/macroblock.c:823:13: note: vect_is_simple_use: operand 1
encoder/macroblock.c:823:13: note: vector/scalar shift/rotate found.
encoder/macroblock.c:823:13: note: transform binary/unary operation.
encoder/macroblock.c:823:13: note: operand 1 using scalar mode.
encoder/macroblock.c:823:13: note: vect_get_vec_def_for_operand: _16
encoder/macroblock.c:823:13: note: vect_is_simple_use: operand _16
encoder/macroblock.c:823:13: note: def_stmt: _16 = h_14(D)->nr_residual_sum[cat_50][i_52];
encoder/macroblock.c:823:13: note: type of def: 3.
encoder/macroblock.c:823:13: note: def =  _16
  def_stmt =  _16 = h_14(D)->nr_residual_sum[cat_50][i_52];
encoder/macroblock.c:823:13: note: add new stmt: vect__17.305_81 = vect__16.304_82 >> 1;
encoder/macroblock.c:823:13: note: ------>vectorizing statement: h_14(D)->nr_residual_sum[cat_50][i_52] = _17;

encoder/macroblock.c:823:13: note: transform statement.
encoder/macroblock.c:823:13: note: vect_is_simple_use: operand _17
encoder/macroblock.c:823:13: note: def_stmt: _17 = _16 >> 1;
encoder/macroblock.c:823:13: note: type of def: 3.
encoder/macroblock.c:823:13: note: transform store. ncopies = 1
encoder/macroblock.c:823:13: note: vect_get_vec_def_for_operand: _17
encoder/macroblock.c:823:13: note: vect_is_simple_use: operand _17
encoder/macroblock.c:823:13: note: def_stmt: _17 = _16 >> 1;
encoder/macroblock.c:823:13: note: type of def: 3.
encoder/macroblock.c:823:13: note: def =  _17
  def_stmt =  _17 = _16 >> 1;
encoder/macroblock.c:823:13: note: create vector_type-pointer variable to type: vector(4) unsigned int  vectorizing a record based array ref: *h_14(D)
Applying pattern match.pd:700, generic-match.c:1350
Applying pattern match.pd:628, generic-match.c:1309
encoder/macroblock.c:823:13: note: created vectp_h.307_80
encoder/macroblock.c:823:13: note: add new stmt: MEM[(unsigned int *)vectp_h.306_76] = vect__17.305_81;
encoder/macroblock.c:823:13: note: ------>vectorizing statement: i_19 = i_52 + 1;

encoder/macroblock.c:823:13: note: ------>vectorizing statement: # DEBUG i => i_19

encoder/macroblock.c:823:13: note: ------>vectorizing statement: # DEBUG i => i_19

encoder/macroblock.c:823:13: note: ------>vectorizing statement: vectp_h.302_83 = vectp_h.302_84 + 16;

encoder/macroblock.c:823:13: note: ------>vectorizing statement: vectp_h.306_75 = vectp_h.306_76 + 16;

encoder/macroblock.c:823:13: note: ------>vectorizing statement: if (i_19 < size_61)


loop at encoder/macroblock.c:824: if (ivtmp_73 < bnd.301_91)

;; Scaling loop 2 with scale 0.250000, bounding iterations to 15 from guessed 63
;; guessed iterations are now 15
encoder/macroblock.c:823:13: note: LOOP VECTORIZED

encoder/macroblock.c:813:6: note: vectorized 1 loops in function.
Merging blocks 6 and 18
x264_noise_reduction_update (struct x264_t * h)
{
  vector(4) unsigned int * vectp_h.307;
  vector(4) unsigned int * vectp_h.306;
  vector(4) unsigned int vect__17.305;
  vector(4) unsigned int vect__16.304;
  vector(4) unsigned int * vectp_h.303;
  vector(4) unsigned int * vectp_h.302;
  unsigned int bnd.301;
  unsigned int niters.300;
  const uint16_t * weight;
  int size;
  int i;
  int cat;
  uint32_t iftmp.8_6;
  unsigned int _16;
  unsigned int _17;
  unsigned int ivtmp_18;
  unsigned int _20;
  unsigned int _27;
  unsigned int _28;
  long unsigned int _29;
  long unsigned int _30;
  long unsigned int _31;
  long unsigned int _32;
  long unsigned int _33;
  const uint16_t * _34;
  short unsigned int _35;
  long unsigned int _36;
  long unsigned int _37;
  long unsigned int _38;
  long unsigned int _39;
  long unsigned int _40;
  short unsigned int _41;
  unsigned int _55;
  unsigned int _59;
  unsigned int _66;
  unsigned int ivtmp_73;
  sizetype _77;
  sizetype _78;
  sizetype _79;
  sizetype _85;
  sizetype _86;
  sizetype _87;
  unsigned int _89;
  unsigned int _90;
  unsigned int _93;
  unsigned int ivtmp_94;
  unsigned int ivtmp_95;
  int pretmp_96;
  long unsigned int pretmp_98;
  unsigned int pretmp_101;
  unsigned int prephitmp_102;
  long unsigned int pretmp_104;
  long unsigned int pretmp_105;

  <bb 2>:
  # DEBUG cat => 0
  # DEBUG cat => 0
  pretmp_96 = h_14(D)->param.analyse.i_noise_reduction;
  pretmp_98 = (long unsigned int) pretmp_96;

  <bb 3>:
  # cat_50 = PHI <cat_44(14), 0(2)>
  # ivtmp_94 = PHI <ivtmp_95(14), 2(2)>
  # DEBUG cat => cat_50
  if (cat_50 != 0)
    goto <bb 16>;
  else
    goto <bb 17>;

  <bb 4>:
  # iftmp.8_6 = PHI <65536(16), 262144(17)>
  # size_61 = PHI <64(16), 16(17)>
  # weight_62 = PHI <&x264_dct8_weight2_tab(16), &x264_dct4_weight2_tab(17)>
  # _66 = PHI <_59(16), _55(17)>
  if (iftmp.8_6 < _66)
    goto <bb 6>;
  else
    goto <bb 5>;

  <bb 5>:
  pretmp_101 = h_14(D)->nr_count[cat_50];
  goto <bb 10>;

  <bb 6>:
  niters.300_92 = (unsigned int) size_61;
  _90 = niters.300_92 + 4294967292;
  _89 = _90 >> 2;
  bnd.301_91 = _89 + 1;
  _87 = (sizetype) cat_50;
  _86 = _87 * 256;
  _85 = _86 + 3552;
  vectp_h.303_88 = h_14(D) + _85;
  _79 = (sizetype) cat_50;
  _78 = _79 * 256;
  _77 = _78 + 3552;
  vectp_h.307_80 = h_14(D) + _77;

  <bb 7>:
  # i_52 = PHI <0(6), i_19(8)>
  # vectp_h.302_84 = PHI <vectp_h.303_88(6), vectp_h.302_83(8)>
  # vectp_h.306_76 = PHI <vectp_h.307_80(6), vectp_h.306_75(8)>
  # ivtmp_18 = PHI <0(6), ivtmp_73(8)>
  # DEBUG i => i_52
  vect__16.304_82 = MEM[(unsigned int *)vectp_h.302_84];
  _16 = h_14(D)->nr_residual_sum[cat_50][i_52];
  vect__17.305_81 = vect__16.304_82 >> 1;
  _17 = _16 >> 1;
  MEM[(unsigned int *)vectp_h.306_76] = vect__17.305_81;
  i_19 = i_52 + 1;
  # DEBUG i => i_19
  # DEBUG i => i_19
  vectp_h.302_83 = vectp_h.302_84 + 16;
  vectp_h.306_75 = vectp_h.306_76 + 16;
  ivtmp_73 = ivtmp_18 + 1;
  if (ivtmp_73 < bnd.301_91)
    goto <bb 8>;
  else
    goto <bb 9>;

  <bb 8>:
  goto <bb 7>;

  <bb 9>:
  _20 = _66 >> 1;
  h_14(D)->nr_count[cat_50] = _20;

  <bb 10>:
  # prephitmp_102 = PHI <pretmp_101(5), _20(9)>
  # DEBUG i => 0
  pretmp_104 = (long unsigned int) prephitmp_102;
  pretmp_105 = pretmp_98 * pretmp_104;

  <bb 11>:
  # i_60 = PHI <i_43(12), 0(10)>
  # DEBUG i => i_60
  _27 = h_14(D)->nr_residual_sum[cat_50][i_60];
  _28 = _27 >> 1;
  _29 = (long unsigned int) _28;
  _30 = _29 + pretmp_105;
  _31 = (long unsigned int) _27;
  _32 = (long unsigned int) i_60;
  _33 = _32 * 2;
  _34 = weight_62 + _33;
  _35 = *_34;
  _36 = (long unsigned int) _35;
  _37 = _31 * _36;
  _38 = _37 >> 8;
  _39 = _38 + 1;
  _40 = _30 / _39;
  _41 = (short unsigned int) _40;
  h_14(D)->nr_offset[cat_50][i_60] = _41;
  i_43 = i_60 + 1;
  # DEBUG i => i_43
  # DEBUG i => i_43
  if (i_43 < size_61)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  goto <bb 11>;

  <bb 13>:
  cat_44 = cat_50 + 1;
  # DEBUG cat => cat_44
  # DEBUG cat => cat_44
  ivtmp_95 = ivtmp_94 - 1;
  if (ivtmp_95 != 0)
    goto <bb 14>;
  else
    goto <bb 15>;

  <bb 14>:
  goto <bb 3>;

  <bb 15>:
  return;

  <bb 16>:
  # DEBUG size => 64
  # DEBUG size => 64
  # DEBUG weight => &x264_dct8_weight2_tab
  _59 = h_14(D)->nr_count[cat_50];
  goto <bb 4>;

  <bb 17>:
  # DEBUG cat => cat_50
  # DEBUG size => 16
  # DEBUG size => 16
  # DEBUG weight => &x264_dct4_weight2_tab
  _55 = h_14(D)->nr_count[0];
  goto <bb 4>;

}



;; Function x264_macroblock_encode_p8x8 (x264_macroblock_encode_p8x8, funcdef_no=135, decl_uid=5789, cgraph_uid=135, symbol_order=178)


Analyzing loop at encoder/macroblock.c:869
encoder/macroblock.c:869:9: note: ===== analyze_loop_nest =====
encoder/macroblock.c:869:9: note: === vect_analyze_loop_form ===
encoder/macroblock.c:869:9: note: === get_loop_niters ===
Analyzing # of iterations of loop 7
  exit condition [1, + , 4294967295] != 0
  bounds on difference of bases: -1 ... -1
  result:
    # of iterations 1, bounded by 1
encoder/macroblock.c:869:9: note: === vect_analyze_data_refs ===
Creating dr for h_33(D)->mb.pic.p_fenc[ch_78]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:494, generic-match.c:3721
success.
	base_address: h_33(D)
	offset from base address: 0
	constant offset from base address: 15584
	step: 8
	aligned to: 128
	base_object: *h_33(D)
	Access function 0: {1, +, 1}_7
	Access function 1: 29888
	Access function 2: 7680
	Access function 3: 87040
Creating dr for h_33(D)->mb.pic.p_fdec[ch_78]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:494, generic-match.c:3721
success.
	base_address: h_33(D)
	offset from base address: 0
	constant offset from base address: 15632
	step: 8
	aligned to: 128
	base_object: *h_33(D)
	Access function 0: {1, +, 1}_7
	Access function 1: 30272
	Access function 2: 7680
	Access function 3: 87040
Creating dr for h_33(D)->zigzagf.sub_4x4
analyze_innermost: success.
	base_address: h_33(D)
	offset from base address: 0
	constant offset from base address: 25544
	step: 0
	aligned to: 128
	base_object: *h_33(D)
	Access function 0: 192
	Access function 1: 204160
encoder/macroblock.c:869:9: note: not vectorized: loop contains function calls or data references that cannot be analyzed
encoder/macroblock.c:869:9: note: bad data references.

Analyzing loop at encoder/macroblock.c:861
encoder/macroblock.c:861:13: note: ===== analyze_loop_nest =====
encoder/macroblock.c:861:13: note: === vect_analyze_loop_form ===
encoder/macroblock.c:861:13: note: === get_loop_niters ===
Analyzing # of iterations of loop 6
  exit condition [i4_62 + 1, + , 1](no_overflow) < _256
  bounds on difference of bases: 0 ... 4294967294
Applying pattern match.pd:442, generic-match.c:3412
Applying pattern match.pd:628, generic-match.c:1309
  result:
    # of iterations ((unsigned int) _256 - (unsigned int) i4_62) - 1, bounded by 4294967294
Applying pattern match.pd:475, generic-match.c:3649
encoder/macroblock.c:861:13: note: Symbolic number of iterations is (unsigned int) _256 - (unsigned int) i4_62
encoder/macroblock.c:861:13: note: === vect_analyze_data_refs ===
Creating dr for h_33(D)->zigzagf.sub_4x4
analyze_innermost: success.
	base_address: h_33(D)
	offset from base address: 0
	constant offset from base address: 25544
	step: 0
	aligned to: 128
	base_object: *h_33(D)
	Access function 0: 192
	Access function 1: 204160
Creating dr for h_33(D)->mb.pic.p_fdec[0]
analyze_innermost: success.
	base_address: h_33(D)
	offset from base address: 0
	constant offset from base address: 15624
	step: 0
	aligned to: 128
	base_object: *h_33(D)
	Access function 0: 0
	Access function 1: 30272
	Access function 2: 7680
	Access function 3: 87040
Creating dr for block_idx_xy_fdec[i4_243]
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
	base_address: &block_idx_xy_fdec
	offset from base address: (ssizetype) ((sizetype) (i8_36(D) * 4) * 2)
	constant offset from base address: 0
	step: 2
	aligned to: 8
	base_object: MEM[(uint16_t[16] *)&block_idx_xy_fdec]
	Access function 0: {i4_62, +, 1}_6
Creating dr for h_33(D)->mb.pic.p_fenc[0]
analyze_innermost: success.
	base_address: h_33(D)
	offset from base address: 0
	constant offset from base address: 15576
	step: 0
	aligned to: 128
	base_object: *h_33(D)
	Access function 0: 0
	Access function 1: 29888
	Access function 2: 7680
	Access function 3: 87040
Creating dr for block_idx_xy_fenc[i4_243]
analyze_innermost: Applying pattern match.pd:114, generic-match.c:6569
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:724, generic-match.c:1428
success.
	base_address: &block_idx_xy_fenc
	offset from base address: (ssizetype) (i8_36(D) * 4)
	constant offset from base address: 0
	step: 1
	aligned to: 4
	base_object: MEM[(uint8_t[16] *)&block_idx_xy_fenc]
	Access function 0: {i4_62, +, 1}_6
encoder/macroblock.c:861:13: note: not vectorized: loop contains function calls or data references that cannot be analyzed
encoder/macroblock.c:861:13: note: bad data references.

Analyzing loop at encoder/macroblock.c:928
encoder/macroblock.c:928:9: note: ===== analyze_loop_nest =====
encoder/macroblock.c:928:9: note: === vect_analyze_loop_form ===
encoder/macroblock.c:928:9: note: not vectorized: control flow in loop.
encoder/macroblock.c:928:9: note: bad loop form.

Analyzing loop at encoder/macroblock.c:920
encoder/macroblock.c:920:17: note: ===== analyze_loop_nest =====
encoder/macroblock.c:920:17: note: === vect_analyze_loop_form ===
encoder/macroblock.c:920:17: note: === get_loop_niters ===
Analyzing # of iterations of loop 4
  exit condition [3, + , 4294967295] != 0
  bounds on difference of bases: -3 ... -3
  result:
    # of iterations 3, bounded by 3
encoder/macroblock.c:920:17: note: === vect_analyze_data_refs ===
Creating dr for h_33(D)->quantf.dequant_4x4
analyze_innermost: success.
	base_address: h_33(D)
	offset from base address: 0
	constant offset from base address: 25600
	step: 0
	aligned to: 128
	base_object: *h_33(D)
	Access function 0: 320
	Access function 1: 204480
Creating dr for h_33(D)->dequant4_mf[1]
analyze_innermost: success.
	base_address: h_33(D)
	offset from base address: 0
	constant offset from base address: 3352
	step: 0
	aligned to: 128
	base_object: *h_33(D)
	Access function 0: 1
	Access function 1: 26752
encoder/macroblock.c:920:17: note: not vectorized: loop contains function calls or data references that cannot be analyzed
encoder/macroblock.c:920:17: note: bad data references.

Analyzing loop at encoder/macroblock.c:911
encoder/macroblock.c:911:17: note: ===== analyze_loop_nest =====
encoder/macroblock.c:911:17: note: === vect_analyze_loop_form ===
encoder/macroblock.c:911:17: note: === get_loop_niters ===
encoder/macroblock.c:911:17: note: not vectorized: number of iterations cannot be computed.
encoder/macroblock.c:911:17: note: bad loop form.

Analyzing loop at encoder/macroblock.c:905
encoder/macroblock.c:905:13: note: ===== analyze_loop_nest =====
encoder/macroblock.c:905:13: note: === vect_analyze_loop_form ===
encoder/macroblock.c:905:13: note: === get_loop_niters ===
Analyzing # of iterations of loop 2
  exit condition [3, + , 4294967295] != 0
  bounds on difference of bases: -3 ... -3
  result:
    # of iterations 3, bounded by 3
encoder/macroblock.c:905:13: note: === vect_analyze_data_refs ===
Creating dr for h_33(D)->zigzagf.scan_4x4
analyze_innermost: success.
	base_address: h_33(D)
	offset from base address: 0
	constant offset from base address: 25528
	step: 0
	aligned to: 128
	base_object: *h_33(D)
	Access function 0: 64
	Access function 1: 204160
encoder/macroblock.c:905:13: note: not vectorized: loop contains function calls or data references that cannot be analyzed
encoder/macroblock.c:905:13: note: bad data references.

Analyzing loop at encoder/macroblock.c:902
encoder/macroblock.c:902:13: note: ===== analyze_loop_nest =====
encoder/macroblock.c:902:13: note: === vect_analyze_loop_form ===
encoder/macroblock.c:902:13: note: not vectorized: control flow in loop.
encoder/macroblock.c:902:13: note: bad loop form.
encoder/macroblock.c:840:6: note: vectorized 0 loops in function.
x264_macroblock_encode_p8x8 (struct x264_t * h, int i8)
{
  int nonzero;
  int nonzero;
  int nonzero;
  int16_t dct4x4[4][4];
  int i_decimate_8x8;
  int16_t dct4x4[4][4][4];
  int i4;
  int16_t dct8x8[8][8];
  int i4;
  int ch;
  int nnz8x8;
  int b_decimate;
  uint8_t * p_fdec;
  uint8_t * p_fenc;
  int i_qp;
  unsigned int ivtmp_2;
  uint8_t * _35;
  int _37;
  int _38;
  sizetype _39;
  int _40;
  int _41;
  sizetype _42;
  sizetype _43;
  uint8_t * _45;
  int _49;
  sizetype _50;
  sizetype _51;
  int _53;
  int _54;
  int _56;
  int _57;
  void (*<T10ea>) (int16_t *, const uint8_t *, uint8_t *) _58;
  int16_t[64] * _59;
  void (*<T10ea>) (int16_t *, const uint8_t *, uint8_t *) _65;
  uint8_t * _66;
  short unsigned int _67;
  sizetype _68;
  uint8_t * _69;
  uint8_t * _70;
  unsigned char _71;
  sizetype _72;
  const uint8_t * _73;
  int16_t[16] * _74;
  uint8_t * _79;
  uint8_t * _86;
  void (*<T10ea>) (int16_t *, const uint8_t *, uint8_t *) _89;
  int _91;
  int _92;
  int16_t[16] * _93;
  int _96;
  void (*<T109f>) (int16_t[8] *, uint8_t *, uint8_t *) _97;
  void (*<T10d9>) (int16_t *, int16_t[8] *) _100;
  int16_t[64] * _101;
  int _103;
  int (*<T1194>) (int16_t *) _104;
  int _106;
  _Bool _107;
  void (*<T1171>) (int16_t[8] *, int[8][8] *, int) _110;
  int[8][8] * _111;
  void (*<T10a7>) (uint8_t *, int16_t[8] *) _113;
  void (*<T1078>) (int16_t[4][4] *, uint8_t *, uint8_t *) _116;
  int _119;
  int16_t[4][4] * _120;
  void (*<T10e4>) (int16_t *, int16_t[4] *) _123;
  int16_t[4][4] * _124;
  int _126;
  int16_t[16] * _127;
  _Bool _130;
  _Bool _131;
  _Bool _132;
  int (*<T1194>) (int16_t *) _133;
  int _135;
  int16_t[16] * _136;
  int _138;
  _Bool _141;
  _Bool _143;
  void (*<T1180>) (int16_t[4] *, int[4][4] *, int) _144;
  int[4][4] * _145;
  int16_t[4][4] * _146;
  void (*<T1082>) (uint8_t *, int16_t[4][4] *) _149;
  uint8_t * _154;
  uint8_t * _161;
  void (*<T1063>) (int16_t[4] *, uint8_t *, uint8_t *) _164;
  int _167;
  void (*<T1150>) (int16_t[4] *, uint16_t *, uint16_t *) _169;
  uint16_t[16] * _170;
  long unsigned int _171;
  long unsigned int _172;
  uint16_t * _173;
  uint16_t[16] * _174;
  uint16_t * _175;
  void (*<T10e4>) (int16_t *, int16_t[4] *) _177;
  int _179;
  int _180;
  int16_t[16] * _181;
  void (*<T1180>) (int16_t[4] *, int[4][4] *, int) _184;
  int[4][4] * _185;
  void (*<T106b>) (uint8_t *, int16_t[4] *) _187;
  int _190;
  int _191;
  int _192;
  int _193;
  int _196;
  long unsigned int _202;
  long unsigned int _203;
  long unsigned int _204;
  long unsigned int _205;
  long unsigned int _206;
  long unsigned int _207;
  long unsigned int _208;
  _Bool _209;
  int _210;
  int _212;
  void (*<T1144>) (int16_t[8] *, uint16_t *, uint16_t *) _213;
  uint16_t[64] * _214;
  long unsigned int _215;
  long unsigned int _216;
  uint16_t * _217;
  uint16_t[64] * _218;
  uint16_t * _219;
  _Bool _220;
  int _222;
  void (*<T1150>) (int16_t[4] *, uint16_t *, uint16_t *) _223;
  uint16_t[16] * _224;
  long unsigned int _225;
  long unsigned int _226;
  uint16_t * _227;
  uint16_t[16] * _228;
  uint16_t * _229;
  _Bool _230;
  long unsigned int _233;
  long unsigned int _234;
  long unsigned int _235;
  long unsigned int _236;
  long unsigned int _237;
  long unsigned int _238;
  long unsigned int _239;
  _Bool _247;
  int _256;
  int _258;
  unsigned int ivtmp_286;
  unsigned int ivtmp_287;
  unsigned int ivtmp_288;
  unsigned int ivtmp_289;
  unsigned int ivtmp_290;
  unsigned int ivtmp_291;
  unsigned int ivtmp_293;
  unsigned int ivtmp_294;
  unsigned int ivtmp_295;
  int pretmp_297;
  sizetype pretmp_298;
  int pretmp_299;
  sizetype pretmp_300;
  sizetype pretmp_301;
  sizetype pretmp_302;
  int pretmp_303;
  int pretmp_305;
  int pretmp_311;
  int pretmp_312;
  int prephitmp_313;
  int pretmp_316;
  sizetype pretmp_317;
  int pretmp_318;
  sizetype pretmp_319;
  sizetype pretmp_320;
  sizetype pretmp_321;
  int pretmp_322;
  int pretmp_323;
  int prephitmp_324;

  <bb 2>:
  i_qp_34 = h_33(D)->mb.i_qp;
  # DEBUG i_qp => i_qp_34
  _35 = h_33(D)->mb.pic.p_fenc[0];
  _37 = i8_36(D) & 1;
  _38 = _37 * 8;
  _39 = (sizetype) _38;
  _40 = i8_36(D) >> 1;
  _41 = _40 * 128;
  _42 = (sizetype) _41;
  _43 = _39 + _42;
  p_fenc_44 = _35 + _43;
  # DEBUG p_fenc => p_fenc_44
  _45 = h_33(D)->mb.pic.p_fdec[0];
  _49 = _40 * 256;
  _50 = (sizetype) _49;
  _51 = _39 + _50;
  p_fdec_52 = _45 + _51;
  # DEBUG p_fdec => p_fdec_52
  _53 = h_33(D)->sh.i_type;
  if (_53 == 1)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  _54 = h_33(D)->param.analyse.b_dct_decimate;
  _247 = _54 != 0;
  b_decimate_8 = (int) _247;

  <bb 4>:
  # b_decimate_15 = PHI <b_decimate_8(3), 1(2)>
  # DEBUG b_decimate => b_decimate_15
  # DEBUG nnz8x8 => 0
  x264_mb_mc_8x8 (h_33(D), i8_36(D));
  _56 = h_33(D)->mb.b_lossless;
  if (_56 != 0)
    goto <bb 5>;
  else
    goto <bb 16>;

  <bb 5>:
  _57 = h_33(D)->mb.b_transform_8x8;
  if (_57 != 0)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  _58 = h_33(D)->zigzagf.sub_8x8;
  _59 = &h_33(D)->dct.luma8x8[i8_36(D)];
  _58 (_59, p_fenc_44, p_fdec_52);
  # DEBUG v => _59
  # DEBUG i_count => 128
  # DEBUG nonzero => 0
  __asm__("movq     (%1),    %%mm0 
por      8(%1),   %%mm0 
por      16(%1),  %%mm0 
por      24(%1),  %%mm0 
por      32(%1),  %%mm0 
por      40(%1),  %%mm0 
por      48(%1),  %%mm0 
por      56(%1),  %%mm0 
por      64(%1),  %%mm0 
por      72(%1),  %%mm0 
por      80(%1),  %%mm0 
por      88(%1),  %%mm0 
por      96(%1),  %%mm0 
por      104(%1), %%mm0 
por      112(%1), %%mm0 
por      120(%1), %%mm0 
packsswb %%mm0,   %%mm0 
movd     %%mm0,   %0    
" : "=r" nonzero_183 : "r" _59, "m" MEM[(struct  *)_59]);
  # DEBUG nonzero => nonzero_183
  _143 = nonzero_183 != 0;
  nnz8x8_109 = (int) _143;
  # DEBUG v => NULL
  # DEBUG i_count => NULL
  # DEBUG i => NULL
  # DEBUG i_count => NULL
  # DEBUG nonzero => NULL
  # DEBUG nnz8x8 => NULL
  pretmp_311 = nnz8x8_109 << i8_36(D);
  goto <bb 12>;

  <bb 7>:
  i4_62 = i8_36(D) * 4;
  # DEBUG i4 => i4_62
  # DEBUG i4 => i4_62
  # DEBUG nnz8x8 => 0
  _258 = i8_36(D) + 1;
  _256 = _258 * 4;
  if (i4_62 < _256)
    goto <bb 8>;
  else
    goto <bb 12>;

  <bb 8>:

  <bb 9>:
  # nnz8x8_241 = PHI <0(8), nnz8x8_76(10)>
  # i4_243 = PHI <i4_62(8), i4_77(10)>
  # DEBUG i4 => i4_243
  # DEBUG nnz8x8 => nnz8x8_241
  _65 = h_33(D)->zigzagf.sub_4x4;
  _66 = h_33(D)->mb.pic.p_fdec[0];
  _67 = block_idx_xy_fdec[i4_243];
  _68 = (sizetype) _67;
  _69 = _66 + _68;
  _70 = h_33(D)->mb.pic.p_fenc[0];
  _71 = block_idx_xy_fenc[i4_243];
  _72 = (sizetype) _71;
  _73 = _70 + _72;
  _74 = &h_33(D)->dct.luma4x4[i4_243];
  _65 (_74, _73, _69);
  # DEBUG v => _74
  # DEBUG i_count => 32
  # DEBUG v => _74
  # DEBUG i_count => 32
  # DEBUG x => _74
  _202 = MEM[(uint64_t *)_74];
  _203 = MEM[(uint64_t *)_74 + 8B];
  _204 = _202 | _203;
  _205 = MEM[(uint64_t *)_74 + 16B];
  _206 = _204 | _205;
  _207 = MEM[(uint64_t *)_74 + 24B];
  _208 = _206 | _207;
  _209 = _208 != 0;
  _210 = (int) _209;
  # DEBUG v => NULL
  # DEBUG i_count => NULL
  # DEBUG i => NULL
  # DEBUG v => NULL
  # DEBUG i_count => NULL
  # DEBUG i => NULL
  # DEBUG i_count => NULL
  # DEBUG nonzero => NULL
  nnz8x8_76 = _210 | nnz8x8_241;
  # DEBUG nnz8x8 => nnz8x8_76
  i4_77 = i4_243 + 1;
  # DEBUG i4 => i4_77
  # DEBUG i4 => i4_77
  # DEBUG nnz8x8 => nnz8x8_76
  if (i4_77 < _256)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  goto <bb 9>;

  <bb 11>:
  # nnz8x8_285 = PHI <nnz8x8_76(9)>
  pretmp_312 = nnz8x8_285 << i8_36(D);

  <bb 12>:
  # prephitmp_313 = PHI <pretmp_311(6), pretmp_312(11), 0(7)>
  # DEBUG nnz8x8 => NULL
  # DEBUG ch => 0
  # DEBUG ch => 0
  pretmp_316 = _37 * 4;
  pretmp_317 = (sizetype) pretmp_316;
  pretmp_318 = _40 * 64;
  pretmp_319 = (sizetype) pretmp_318;
  pretmp_320 = pretmp_317 + pretmp_319;
  pretmp_321 = _42 + pretmp_317;
  pretmp_322 = i8_36(D) + 16;

  <bb 13>:
  # ch_254 = PHI <ch_78(15), 0(12)>
  # ivtmp_291 = PHI <ivtmp_288(15), 2(12)>
  # DEBUG ch => ch_254
  ch_78 = ch_254 + 1;
  _79 = h_33(D)->mb.pic.p_fenc[ch_78];
  p_fenc_85 = _79 + pretmp_320;
  # DEBUG p_fenc => p_fenc_85
  _86 = h_33(D)->mb.pic.p_fdec[ch_78];
  p_fdec_88 = _86 + pretmp_321;
  # DEBUG p_fdec => p_fdec_88
  _89 = h_33(D)->zigzagf.sub_4x4;
  _91 = ch_254 * 4;
  _92 = _91 + pretmp_322;
  _93 = &h_33(D)->dct.luma4x4[_92];
  _89 (_93, p_fenc_85, p_fdec_88);
  h_33(D)->dct.luma4x4[_92][0] = 0;
  # DEBUG ch => ch_78
  # DEBUG ch => ch_78
  ivtmp_288 = ivtmp_291 - 1;
  if (ivtmp_288 != 0)
    goto <bb 15>;
  else
    goto <bb 14>;

  <bb 14>:
  goto <bb 57>;

  <bb 15>:
  goto <bb 13>;

  <bb 16>:
  _96 = h_33(D)->mb.b_transform_8x8;
  if (_96 != 0)
    goto <bb 17>;
  else
    goto <bb 27>;

  <bb 17>:
  _97 = h_33(D)->dctf.sub8x8_dct8;
  _97 (&dct8x8, p_fenc_44, p_fdec_52);
  # DEBUG h => h_33(D)
  # DEBUG dct => &dct8x8
  # DEBUG i_qp => i_qp_34
  # DEBUG b_intra => 0
  # DEBUG idx => i8_36(D)
  # DEBUG i_quant_cat => 1
  _212 = h_33(D)->mb.b_trellis;
  if (_212 != 0)
    goto <bb 18>;
  else
    goto <bb 19>;

  <bb 18>:
  x264_quant_8x8_trellis (h_33(D), &dct8x8, 1, i_qp_34, 0, i8_36(D));
  goto <bb 20>;

  <bb 19>:
  _213 = h_33(D)->quantf.quant_8x8;
  _214 = h_33(D)->quant8_bias[1];
  _215 = (long unsigned int) i_qp_34;
  _216 = _215 * 128;
  _217 = _214 + _216;
  _218 = h_33(D)->quant8_mf[1];
  _219 = _218 + _216;
  _213 (&dct8x8, _219, _217);

  <bb 20>:
  # DEBUG h => NULL
  # DEBUG dct => NULL
  # DEBUG i_qp => NULL
  # DEBUG b_intra => NULL
  # DEBUG idx => NULL
  # DEBUG i_quant_cat => NULL
  _100 = h_33(D)->zigzagf.scan_8x8;
  _101 = &h_33(D)->dct.luma8x8[i8_36(D)];
  _100 (_101, &dct8x8);
  if (b_decimate_15 != 0)
    goto <bb 21>;
  else
    goto <bb 23>;

  <bb 21>:
  _103 = h_33(D)->mb.b_trellis;
  if (_103 == 0)
    goto <bb 22>;
  else
    goto <bb 23>;

  <bb 22>:
  _104 = h_33(D)->quantf.decimate_score64;
  _106 = _104 (_101);
  _107 = _106 > 3;
  nnz8x8_108 = (int) _107;
  # DEBUG nnz8x8 => nnz8x8_108
  goto <bb 24>;

  <bb 23>:
  # DEBUG v => &dct8x8
  # DEBUG i_count => 128
  # DEBUG nonzero => 0
  __asm__("movq     (%1),    %%mm0 
por      8(%1),   %%mm0 
por      16(%1),  %%mm0 
por      24(%1),  %%mm0 
por      32(%1),  %%mm0 
por      40(%1),  %%mm0 
por      48(%1),  %%mm0 
por      56(%1),  %%mm0 
por      64(%1),  %%mm0 
por      72(%1),  %%mm0 
por      80(%1),  %%mm0 
por      88(%1),  %%mm0 
por      96(%1),  %%mm0 
por      104(%1), %%mm0 
por      112(%1), %%mm0 
por      120(%1), %%mm0 
packsswb %%mm0,   %%mm0 
movd     %%mm0,   %0    
" : "=r" nonzero_99 : "r" &dct8x8, "m" MEM[(struct  *)&dct8x8]);
  # DEBUG nonzero => nonzero_99
  _220 = nonzero_99 != 0;
  nnz8x8_221 = (int) _220;
  # DEBUG v => NULL
  # DEBUG i_count => NULL
  # DEBUG i => NULL
  # DEBUG i_count => NULL
  # DEBUG nonzero => NULL
  # DEBUG nnz8x8 => NULL

  <bb 24>:
  # nnz8x8_3 = PHI <nnz8x8_108(22), nnz8x8_221(23)>
  # DEBUG nnz8x8 => nnz8x8_3
  if (nnz8x8_3 != 0)
    goto <bb 25>;
  else
    goto <bb 26>;

  <bb 25>:
  _110 = h_33(D)->quantf.dequant_8x8;
  _111 = h_33(D)->dequant8_mf[1];
  _110 (&dct8x8, _111, i_qp_34);
  _113 = h_33(D)->dctf.add8x8_idct8;
  _113 (p_fdec_52, &dct8x8);

  <bb 26>:
  dct8x8 ={v} {CLOBBER};
  goto <bb 48>;

  <bb 27>:
  _116 = h_33(D)->dctf.sub8x8_dct;
  _116 (&dct4x4, p_fenc_44, p_fdec_52);
  # DEBUG i4 => 0
  # DEBUG i4 => 0
  pretmp_305 = i8_36(D) * 4;
  _225 = (long unsigned int) i_qp_34;
  _226 = _225 * 32;

  <bb 28>:
  # i4_253 = PHI <i4_122(32), 0(27)>
  # ivtmp_290 = PHI <ivtmp_289(32), 4(27)>
  # DEBUG i4 => i4_253
  _120 = &dct4x4[i4_253];
  # DEBUG h => h_33(D)
  # DEBUG dct => _120
  # DEBUG i_qp => i_qp_34
  # DEBUG i_ctxBlockCat => 2
  # DEBUG b_intra => 0
  # DEBUG idx => i4_253 + pretmp_305
  # DEBUG i_quant_cat => 1
  _222 = h_33(D)->mb.b_trellis;
  if (_222 != 0)
    goto <bb 29>;
  else
    goto <bb 30>;

  <bb 29>:
  _119 = i4_253 + pretmp_305;
  x264_quant_4x4_trellis (h_33(D), _120, 1, i_qp_34, 2, 0, _119);
  goto <bb 31>;

  <bb 30>:
  _223 = h_33(D)->quantf.quant_4x4;
  _224 = h_33(D)->quant4_bias[1];
  _227 = _224 + _226;
  _228 = h_33(D)->quant4_mf[1];
  _229 = _228 + _226;
  _223 (_120, _229, _227);

  <bb 31>:
  # DEBUG h => NULL
  # DEBUG dct => NULL
  # DEBUG i_qp => NULL
  # DEBUG i_ctxBlockCat => NULL
  # DEBUG b_intra => NULL
  # DEBUG idx => NULL
  # DEBUG i_quant_cat => NULL
  i4_122 = i4_253 + 1;
  # DEBUG i4 => i4_122
  # DEBUG i4 => i4_122
  ivtmp_289 = ivtmp_290 - 1;
  if (ivtmp_289 != 0)
    goto <bb 32>;
  else
    goto <bb 33>;

  <bb 32>:
  goto <bb 28>;

  <bb 33>:

  <bb 34>:
  # i4_252 = PHI <0(33), i4_129(35)>
  # ivtmp_294 = PHI <4(33), ivtmp_287(35)>
  # DEBUG i4 => i4_252
  _123 = h_33(D)->zigzagf.scan_4x4;
  _124 = &dct4x4[i4_252];
  _126 = i4_252 + pretmp_305;
  _127 = &h_33(D)->dct.luma4x4[_126];
  _123 (_127, _124);
  i4_129 = i4_252 + 1;
  # DEBUG i4 => i4_129
  # DEBUG i4 => i4_129
  ivtmp_287 = ivtmp_294 - 1;
  if (ivtmp_287 != 0)
    goto <bb 35>;
  else
    goto <bb 36>;

  <bb 35>:
  goto <bb 34>;

  <bb 36>:
  if (b_decimate_15 != 0)
    goto <bb 37>;
  else
    goto <bb 41>;

  <bb 37>:

  <bb 38>:
  # i4_48 = PHI <0(37), i4_140(39)>
  # i_decimate_8x8_242 = PHI <0(37), i_decimate_8x8_139(39)>
  # DEBUG i_decimate_8x8 => i_decimate_8x8_242
  # DEBUG i4 => i4_48
  _133 = h_33(D)->quantf.decimate_score16;
  _135 = i4_48 + pretmp_305;
  _136 = &h_33(D)->dct.luma4x4[_135];
  _138 = _133 (_136);
  i_decimate_8x8_139 = _138 + i_decimate_8x8_242;
  # DEBUG i_decimate_8x8 => i_decimate_8x8_139
  i4_140 = i4_48 + 1;
  # DEBUG i4 => i4_140
  # DEBUG i_decimate_8x8 => i_decimate_8x8_139
  # DEBUG i4 => i4_140
  _130 = i4_140 <= 3;
  _131 = i_decimate_8x8_139 <= 3;
  _132 = _130 & _131;
  if (_132 != 0)
    goto <bb 39>;
  else
    goto <bb 40>;

  <bb 39>:
  goto <bb 38>;

  <bb 40>:
  # i_decimate_8x8_284 = PHI <i_decimate_8x8_139(38)>
  _141 = i_decimate_8x8_284 > 3;
  nnz8x8_142 = (int) _141;
  # DEBUG nnz8x8 => nnz8x8_142
  goto <bb 42>;

  <bb 41>:
  # DEBUG v => &dct4x4
  # DEBUG i_count => 128
  # DEBUG nonzero => 0
  __asm__("movq     (%1),    %%mm0 
por      8(%1),   %%mm0 
por      16(%1),  %%mm0 
por      24(%1),  %%mm0 
por      32(%1),  %%mm0 
por      40(%1),  %%mm0 
por      48(%1),  %%mm0 
por      56(%1),  %%mm0 
por      64(%1),  %%mm0 
por      72(%1),  %%mm0 
por      80(%1),  %%mm0 
por      88(%1),  %%mm0 
por      96(%1),  %%mm0 
por      104(%1), %%mm0 
por      112(%1), %%mm0 
por      120(%1), %%mm0 
packsswb %%mm0,   %%mm0 
movd     %%mm0,   %0    
" : "=r" nonzero_121 : "r" &dct4x4, "m" MEM[(struct  *)&dct4x4]);
  # DEBUG nonzero => nonzero_121
  _230 = nonzero_121 != 0;
  nnz8x8_231 = (int) _230;
  # DEBUG v => NULL
  # DEBUG i_count => NULL
  # DEBUG i => NULL
  # DEBUG i_count => NULL
  # DEBUG nonzero => NULL
  # DEBUG nnz8x8 => NULL

  <bb 42>:
  # nnz8x8_4 = PHI <nnz8x8_142(40), nnz8x8_231(41)>
  # DEBUG nnz8x8 => nnz8x8_4
  if (nnz8x8_4 != 0)
    goto <bb 43>;
  else
    goto <bb 47>;

  <bb 43>:

  <bb 44>:
  # i4_266 = PHI <0(43), i4_148(45)>
  # ivtmp_293 = PHI <4(43), ivtmp_295(45)>
  # DEBUG i4 => i4_266
  _144 = h_33(D)->quantf.dequant_4x4;
  _145 = h_33(D)->dequant4_mf[1];
  _146 = &dct4x4[i4_266];
  _144 (_146, _145, i_qp_34);
  i4_148 = i4_266 + 1;
  # DEBUG i4 => i4_148
  # DEBUG i4 => i4_148
  ivtmp_295 = ivtmp_293 - 1;
  if (ivtmp_295 != 0)
    goto <bb 45>;
  else
    goto <bb 46>;

  <bb 45>:
  goto <bb 44>;

  <bb 46>:
  _149 = h_33(D)->dctf.add8x8_idct;
  _149 (p_fdec_52, &dct4x4);

  <bb 47>:
  dct4x4 ={v} {CLOBBER};

  <bb 48>:
  # nnz8x8_5 = PHI <nnz8x8_3(26), nnz8x8_4(47)>
  # DEBUG nnz8x8 => nnz8x8_5
  i_qp_152 = h_33(D)->mb.i_chroma_qp;
  # DEBUG i_qp => i_qp_152
  # DEBUG ch => 0
  # DEBUG ch => 0
  pretmp_297 = _37 * 4;
  pretmp_298 = (sizetype) pretmp_297;
  pretmp_299 = _40 * 64;
  pretmp_300 = (sizetype) pretmp_299;
  pretmp_301 = pretmp_298 + pretmp_300;
  pretmp_302 = _42 + pretmp_298;
  pretmp_303 = i8_36(D) + 16;
  _171 = (long unsigned int) i_qp_152;
  _172 = _171 * 32;

  <bb 49>:
  # ch_267 = PHI <ch_153(55), 0(48)>
  # ivtmp_286 = PHI <ivtmp_2(55), 2(48)>
  # DEBUG ch => ch_267
  ch_153 = ch_267 + 1;
  _154 = h_33(D)->mb.pic.p_fenc[ch_153];
  p_fenc_160 = _154 + pretmp_301;
  # DEBUG p_fenc => p_fenc_160
  _161 = h_33(D)->mb.pic.p_fdec[ch_153];
  p_fdec_163 = _161 + pretmp_302;
  # DEBUG p_fdec => p_fdec_163
  _164 = h_33(D)->dctf.sub4x4_dct;
  _164 (&dct4x4, p_fenc_160, p_fdec_163);
  dct4x4[0][0] = 0;
  _167 = h_33(D)->mb.b_trellis;
  if (_167 != 0)
    goto <bb 50>;
  else
    goto <bb 51>;

  <bb 50>:
  x264_quant_4x4_trellis (h_33(D), &dct4x4, 3, i_qp_152, 4, 0, 0);
  goto <bb 52>;

  <bb 51>:
  _169 = h_33(D)->quantf.quant_4x4;
  _170 = h_33(D)->quant4_bias[3];
  _173 = _170 + _172;
  _174 = h_33(D)->quant4_mf[3];
  _175 = _174 + _172;
  _169 (&dct4x4, _175, _173);

  <bb 52>:
  _177 = h_33(D)->zigzagf.scan_4x4;
  _179 = ch_267 * 4;
  _180 = _179 + pretmp_303;
  _181 = &h_33(D)->dct.luma4x4[_180];
  _177 (_181, &dct4x4);
  # DEBUG v => &dct4x4
  # DEBUG i_count => 32
  # DEBUG v => &dct4x4
  # DEBUG i_count => 32
  # DEBUG x => &dct4x4
  _233 = MEM[(uint64_t *)&dct4x4];
  _234 = MEM[(uint64_t *)&dct4x4 + 8B];
  _235 = _233 | _234;
  _236 = MEM[(uint64_t *)&dct4x4 + 16B];
  _237 = _235 | _236;
  _238 = MEM[(uint64_t *)&dct4x4 + 24B];
  _239 = _237 | _238;
  # DEBUG v => NULL
  # DEBUG i_count => NULL
  # DEBUG i => NULL
  # DEBUG v => NULL
  # DEBUG i_count => NULL
  # DEBUG i => NULL
  # DEBUG i_count => NULL
  # DEBUG nonzero => NULL
  if (_239 != 0)
    goto <bb 53>;
  else
    goto <bb 54>;

  <bb 53>:
  _184 = h_33(D)->quantf.dequant_4x4;
  _185 = h_33(D)->dequant4_mf[3];
  _184 (&dct4x4, _185, i_qp_152);
  _187 = h_33(D)->dctf.add4x4_idct;
  _187 (p_fdec_163, &dct4x4);

  <bb 54>:
  dct4x4 ={v} {CLOBBER};
  # DEBUG ch => ch_153
  # DEBUG ch => ch_153
  ivtmp_2 = ivtmp_286 - 1;
  if (ivtmp_2 != 0)
    goto <bb 55>;
  else
    goto <bb 56>;

  <bb 55>:
  goto <bb 49>;

  <bb 56>:
  pretmp_323 = nnz8x8_5 << i8_36(D);

  <bb 57>:
  # prephitmp_324 = PHI <prephitmp_313(14), pretmp_323(56)>
  # DEBUG nnz8x8 => NULL
  _190 = h_33(D)->mb.i_cbp_luma;
  _191 = 1 << i8_36(D);
  _192 = ~_191;
  _193 = _190 & _192;
  _196 = _193 | prephitmp_324;
  h_33(D)->mb.i_cbp_luma = _196;
  h_33(D)->mb.i_cbp_chroma = 2;
  return;

}



;; Function x264_macroblock_encode_p4x4 (x264_macroblock_encode_p4x4, funcdef_no=136, decl_uid=5792, cgraph_uid=136, symbol_order=179)

encoder/macroblock.c:958:6: note: vectorized 0 loops in function.
x264_macroblock_encode_p4x4 (struct x264_t * h, int i4)
{
  int16_t dct4x4[4][4];
  const int i_ref;
  uint8_t * p_fdec;
  uint8_t * p_fenc;
  int i_qp;
  uint8_t * _6;
  unsigned char _8;
  sizetype _9;
  uint8_t * _11;
  short unsigned int _12;
  sizetype _13;
  int _15;
  signed char _16;
  int _18;
  int _19;
  short int _20;
  int _21;
  int _22;
  int _23;
  short int _24;
  int _25;
  void (*<Tf7f>) (uint8_t *, int, uint8_t * *, int, int, int, int, int) _26;
  unsigned char _27;
  int _28;
  int _29;
  int _30;
  unsigned char _31;
  int _32;
  int _33;
  int _34;
  int _35;
  uint8_t *[6] * _36;
  int _38;
  void (*<T10ea>) (int16_t *, const uint8_t *, uint8_t *) _39;
  int16_t[16] * _40;
  void (*<T1063>) (int16_t[4] *, uint8_t *, uint8_t *) _42;
  int iftmp.5_44;
  void (*<T10e4>) (int16_t *, int16_t[4] *) _45;
  int16_t[16] * _46;
  void (*<T1180>) (int16_t[4] *, int[4][4] *, int) _48;
  int[4][4] * _49;
  void (*<T106b>) (uint8_t *, int16_t[4] *) _51;
  long unsigned int _54;
  long unsigned int _55;
  long unsigned int _56;
  long unsigned int _57;
  long unsigned int _58;
  long unsigned int _59;
  long unsigned int _60;
  int _64;
  void (*<T1150>) (int16_t[4] *, uint16_t *, uint16_t *) _65;
  uint16_t[16] * _66;
  long unsigned int _67;
  long unsigned int _68;
  uint16_t * _69;
  uint16_t[16] * _70;
  uint16_t * _71;
  int iftmp.5_72;
  int iftmp.5_73;
  int iftmp.5_74;

  <bb 2>:
  i_qp_5 = h_4(D)->mb.i_qp;
  # DEBUG i_qp => i_qp_5
  _6 = h_4(D)->mb.pic.p_fenc[0];
  _8 = block_idx_xy_fenc[i4_7(D)];
  _9 = (sizetype) _8;
  p_fenc_10 = _6 + _9;
  # DEBUG p_fenc => p_fenc_10
  _11 = h_4(D)->mb.pic.p_fdec[0];
  _12 = block_idx_xy_fdec[i4_7(D)];
  _13 = (sizetype) _12;
  p_fdec_14 = _11 + _13;
  # DEBUG p_fdec => p_fdec_14
  _15 = x264_scan8[i4_7(D)];
  _16 = h_4(D)->mb.cache.ref[0][_15];
  i_ref_17 = (const int) _16;
  # DEBUG i_ref => i_ref_17
  _18 = h_4(D)->mb.mv_max[0];
  _19 = h_4(D)->mb.mv_min[0];
  _20 = h_4(D)->mb.cache.mv[0][_15][0];
  _21 = (int) _20;
  # DEBUG v => _21
  # DEBUG i_min => _19
  # DEBUG i_max => _18
  if (_19 <= _21)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  iftmp.5_73 = MIN_EXPR <_18, _21>;

  <bb 4>:
  # iftmp.5_74 = PHI <_19(2), iftmp.5_73(3)>
  # DEBUG v => NULL
  # DEBUG i_min => NULL
  # DEBUG i_max => NULL
  # DEBUG mvx => NULL
  _22 = h_4(D)->mb.mv_max[1];
  _23 = h_4(D)->mb.mv_min[1];
  _24 = h_4(D)->mb.cache.mv[0][_15][1];
  _25 = (int) _24;
  # DEBUG v => _25
  # DEBUG i_min => _23
  # DEBUG i_max => _22
  if (_23 <= _25)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  iftmp.5_44 = MIN_EXPR <_22, _25>;

  <bb 6>:
  # iftmp.5_72 = PHI <_23(4), iftmp.5_44(5)>
  # DEBUG v => NULL
  # DEBUG i_min => NULL
  # DEBUG i_max => NULL
  # DEBUG mvy => NULL
  _26 = h_4(D)->mc.mc_luma;
  _27 = block_idx_y[i4_7(D)];
  _28 = (int) _27;
  _29 = _28 * 16;
  _30 = _29 + iftmp.5_72;
  _31 = block_idx_x[i4_7(D)];
  _32 = (int) _31;
  _33 = _32 * 16;
  _34 = _33 + iftmp.5_74;
  _35 = h_4(D)->mb.pic.i_stride[0];
  _36 = &h_4(D)->mb.pic.p_fref[0][i_ref_17];
  _26 (p_fdec_14, 32, _36, _35, _34, _30, 4, 4);
  _38 = h_4(D)->mb.b_lossless;
  if (_38 != 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  _39 = h_4(D)->zigzagf.sub_4x4;
  _40 = &h_4(D)->dct.luma4x4[i4_7(D)];
  _39 (_40, p_fenc_10, p_fdec_14);
  goto <bb 14>;

  <bb 8>:
  _42 = h_4(D)->dctf.sub4x4_dct;
  _42 (&dct4x4, p_fenc_10, p_fdec_14);
  # DEBUG h => h_4(D)
  # DEBUG dct => &dct4x4
  # DEBUG i_qp => i_qp_5
  # DEBUG i_ctxBlockCat => 2
  # DEBUG b_intra => 0
  # DEBUG idx => i4_7(D)
  # DEBUG i_quant_cat => 1
  _64 = h_4(D)->mb.b_trellis;
  if (_64 != 0)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  x264_quant_4x4_trellis (h_4(D), &dct4x4, 1, i_qp_5, 2, 0, i4_7(D));
  goto <bb 11>;

  <bb 10>:
  _65 = h_4(D)->quantf.quant_4x4;
  _66 = h_4(D)->quant4_bias[1];
  _67 = (long unsigned int) i_qp_5;
  _68 = _67 * 32;
  _69 = _66 + _68;
  _70 = h_4(D)->quant4_mf[1];
  _71 = _70 + _68;
  _65 (&dct4x4, _71, _69);

  <bb 11>:
  # DEBUG h => NULL
  # DEBUG dct => NULL
  # DEBUG i_qp => NULL
  # DEBUG i_ctxBlockCat => NULL
  # DEBUG b_intra => NULL
  # DEBUG idx => NULL
  # DEBUG i_quant_cat => NULL
  _45 = h_4(D)->zigzagf.scan_4x4;
  _46 = &h_4(D)->dct.luma4x4[i4_7(D)];
  _45 (_46, &dct4x4);
  # DEBUG v => &dct4x4
  # DEBUG i_count => 32
  # DEBUG v => &dct4x4
  # DEBUG i_count => 32
  # DEBUG x => &dct4x4
  _54 = MEM[(uint64_t *)&dct4x4];
  _55 = MEM[(uint64_t *)&dct4x4 + 8B];
  _56 = _54 | _55;
  _57 = MEM[(uint64_t *)&dct4x4 + 16B];
  _58 = _56 | _57;
  _59 = MEM[(uint64_t *)&dct4x4 + 24B];
  _60 = _58 | _59;
  # DEBUG v => NULL
  # DEBUG i_count => NULL
  # DEBUG i => NULL
  # DEBUG v => NULL
  # DEBUG i_count => NULL
  # DEBUG i => NULL
  # DEBUG i_count => NULL
  # DEBUG nonzero => NULL
  if (_60 != 0)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  _48 = h_4(D)->quantf.dequant_4x4;
  _49 = h_4(D)->dequant4_mf[1];
  _48 (&dct4x4, _49, i_qp_5);
  _51 = h_4(D)->dctf.add4x4_idct;
  _51 (p_fdec_14, &dct4x4);

  <bb 13>:
  dct4x4 ={v} {CLOBBER};

  <bb 14>:
  return;

}


