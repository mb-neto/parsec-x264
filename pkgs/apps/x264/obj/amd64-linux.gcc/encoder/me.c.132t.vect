
;; Function refine_subpel (refine_subpel, funcdef_no=118, decl_uid=5812, cgraph_uid=118, symbol_order=165)


Analyzing loop at encoder/me.c:764
encoder/me.c:764:14: note: ===== analyze_loop_nest =====
encoder/me.c:764:14: note: === vect_analyze_loop_form ===
encoder/me.c:764:14: note: not vectorized: control flow in loop.
encoder/me.c:764:14: note: bad loop form.

Analyzing loop at encoder/me.c:719
encoder/me.c:719:13: note: ===== analyze_loop_nest =====
encoder/me.c:719:13: note: === vect_analyze_loop_form ===
encoder/me.c:719:13: note: not vectorized: control flow in loop.
encoder/me.c:719:13: note: bad loop form.
encoder/me.c:689:13: note: vectorized 0 loops in function.
refine_subpel (struct x264_t * h, struct x264_me_t * m, int hpel_iters, int qpel_iters, int * p_halfpel_thresh, int b_refine_qpel)
{
  uint8_t * src;
  int stride;
  uint8_t * src;
  int stride;
  uint8_t * src;
  int stride;
  uint8_t * src;
  int stride;
  uint8_t * src;
  int stride;
  uint8_t * src;
  int stride;
  uint8_t * src3;
  uint8_t * src2;
  uint8_t * src1;
  uint8_t * src0;
  int stride;
  int costs[4];
  uint8_t * src;
  int stride;
  int odir;
  int bcost;
  int bmy;
  int bmx;
  uint8_t pix[2][576];
  const int16_t * p_cost_mvy;
  const int16_t * p_cost_mvx;
  const int bh;
  const int bw;
  _Bool _37;
  int _97;
  int16_t * _101;
  short int _102;
  long unsigned int _103;
  long unsigned int _104;
  sizetype _105;
  short int _108;
  long unsigned int _109;
  long unsigned int _110;
  sizetype _111;
  int _115;
  short int _117;
  short int _119;
  int _123;
  int _124;
  int _127;
  int _130;
  int _133;
  int _135;
  int _136;
  int _137;
  uint8_t * (*<Tf83>) (uint8_t *, int *, uint8_t * *, int, int, int, int, int) _139;
  int _140;
  uint8_t *[6] * _141;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _144;
  int stride.16_145;
  uint8_t * _146;
  int _148;
  long unsigned int _149;
  long unsigned int _150;
  const int16_t * _151;
  short int _152;
  int _153;
  int _154;
  long unsigned int _155;
  long unsigned int _156;
  const int16_t * _157;
  short int _158;
  int _159;
  uint8_t * (*<Tf83>) (uint8_t *, int *, uint8_t * *, int, int, int, int, int) _163;
  int _166;
  uint8_t * (*<Tf83>) (uint8_t *, int *, uint8_t * *, int, int, int, int, int) _170;
  int _173;
  int stride.17_176;
  sizetype _177;
  void (*<Tee4>) (uint8_t *, uint8_t *, uint8_t *, uint8_t *, uint8_t *, int, int *) _180;
  uint8_t * _181;
  int _183;
  long unsigned int _184;
  long unsigned int _185;
  const int16_t * _186;
  short int _187;
  int _188;
  int _189;
  long unsigned int _190;
  long unsigned int _191;
  sizetype _192;
  const int16_t * _193;
  short int _194;
  int _195;
  int _197;
  int _198;
  sizetype _199;
  sizetype _200;
  const int16_t * _201;
  short int _202;
  int _203;
  int _206;
  sizetype _207;
  const int16_t * _208;
  short int _209;
  int _210;
  int _211;
  const int16_t * _212;
  short int _213;
  int _214;
  int _216;
  sizetype _217;
  sizetype _218;
  const int16_t * _219;
  short int _220;
  int _221;
  int _222;
  _Bool _225;
  _Bool _227;
  uint8_t * (*<Tf83>) (uint8_t *, int *, uint8_t * *, int, int, int, int, int) _236;
  int _237;
  uint8_t *[6] * _238;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _241;
  int stride.18_242;
  uint8_t * _243;
  int _245;
  long unsigned int _246;
  long unsigned int _247;
  const int16_t * _248;
  short int _249;
  int _250;
  int _251;
  long unsigned int _252;
  long unsigned int _253;
  const int16_t * _254;
  short int _255;
  int _256;
  _Bool _259;
  _Bool _260;
  void (*<Tf87>) (uint8_t *, int, uint8_t *, int, int, int, int, int) _261;
  int _262;
  int _263;
  int _264;
  uint8_t * _265;
  int _267;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _268;
  uint8_t * _269;
  int _271;
  void (*<Tf87>) (uint8_t *, int, uint8_t *, int, int, int, int, int) _273;
  int _274;
  uint8_t * _275;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _277;
  uint8_t * _278;
  int _280;
  int _284;
  int _285;
  int _286;
  short int _289;
  short int _291;
  _Bool _296;
  _Bool _297;
  uint8_t * (*<Tf83>) (uint8_t *, int *, uint8_t * *, int, int, int, int, int) _299;
  int _301;
  uint8_t *[6] * _302;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _305;
  int stride.19_306;
  uint8_t * _307;
  int _309;
  long unsigned int _310;
  long unsigned int _311;
  const int16_t * _312;
  short int _313;
  int _314;
  int _315;
  long unsigned int _316;
  long unsigned int _317;
  sizetype _318;
  const int16_t * _319;
  short int _320;
  int _321;
  _Bool _324;
  _Bool _325;
  void (*<Tf87>) (uint8_t *, int, uint8_t *, int, int, int, int, int) _326;
  int _327;
  int _328;
  int _329;
  uint8_t * _330;
  int _332;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _333;
  uint8_t * _334;
  int _336;
  void (*<Tf87>) (uint8_t *, int, uint8_t *, int, int, int, int, int) _338;
  int _339;
  uint8_t * _340;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _342;
  uint8_t * _343;
  int _345;
  int _348;
  uint8_t * (*<Tf83>) (uint8_t *, int *, uint8_t * *, int, int, int, int, int) _350;
  int _352;
  uint8_t *[6] * _353;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _356;
  int stride.20_357;
  uint8_t * _358;
  int _360;
  long unsigned int _361;
  long unsigned int _362;
  const int16_t * _363;
  short int _364;
  int _365;
  int _366;
  sizetype _367;
  sizetype _368;
  sizetype _369;
  const int16_t * _370;
  short int _371;
  int _372;
  _Bool _375;
  _Bool _376;
  void (*<Tf87>) (uint8_t *, int, uint8_t *, int, int, int, int, int) _377;
  int _378;
  int _379;
  int _380;
  uint8_t * _381;
  int _383;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _384;
  uint8_t * _385;
  int _387;
  void (*<Tf87>) (uint8_t *, int, uint8_t *, int, int, int, int, int) _389;
  int _390;
  uint8_t * _391;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _393;
  uint8_t * _394;
  int _396;
  _Bool _399;
  _Bool _400;
  uint8_t * (*<Tf83>) (uint8_t *, int *, uint8_t * *, int, int, int, int, int) _402;
  int _404;
  uint8_t *[6] * _405;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _408;
  int stride.21_409;
  uint8_t * _410;
  int _412;
  long unsigned int _413;
  long unsigned int _414;
  sizetype _415;
  const int16_t * _416;
  short int _417;
  int _418;
  int _419;
  long unsigned int _420;
  long unsigned int _421;
  const int16_t * _422;
  short int _423;
  int _424;
  _Bool _427;
  _Bool _428;
  void (*<Tf87>) (uint8_t *, int, uint8_t *, int, int, int, int, int) _429;
  int _430;
  int _431;
  int _432;
  uint8_t * _433;
  int _435;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _436;
  uint8_t * _437;
  int _439;
  void (*<Tf87>) (uint8_t *, int, uint8_t *, int, int, int, int, int) _441;
  int _442;
  uint8_t * _443;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _445;
  uint8_t * _446;
  int _448;
  _Bool _451;
  _Bool _452;
  uint8_t * (*<Tf83>) (uint8_t *, int *, uint8_t * *, int, int, int, int, int) _454;
  int _456;
  uint8_t *[6] * _457;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _460;
  int stride.22_461;
  uint8_t * _462;
  int _464;
  sizetype _465;
  sizetype _466;
  sizetype _467;
  const int16_t * _468;
  short int _469;
  int _470;
  int _471;
  long unsigned int _472;
  long unsigned int _473;
  const int16_t * _474;
  short int _475;
  int _476;
  _Bool _479;
  _Bool _480;
  void (*<Tf87>) (uint8_t *, int, uint8_t *, int, int, int, int, int) _481;
  int _482;
  int _483;
  int _484;
  uint8_t * _485;
  int _487;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _488;
  uint8_t * _489;
  int _491;
  void (*<Tf87>) (uint8_t *, int, uint8_t *, int, int, int, int, int) _493;
  int _494;
  uint8_t * _495;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _497;
  uint8_t * _498;
  int _500;
  _Bool _503;
  _Bool _505;
  uint8_t * (*<Tf83>) (uint8_t *, int *, uint8_t * *, int, int, int, int, int) _512;
  int _513;
  uint8_t *[6] * _514;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _517;
  int stride.23_518;
  uint8_t * _519;
  int _521;
  long unsigned int _522;
  long unsigned int _523;
  const int16_t * _524;
  short int _525;
  int _526;
  int _527;
  long unsigned int _528;
  long unsigned int _529;
  const int16_t * _530;
  short int _531;
  int _532;
  _Bool _535;
  _Bool _536;
  void (*<Tf87>) (uint8_t *, int, uint8_t *, int, int, int, int, int) _537;
  int _538;
  int _539;
  int _540;
  uint8_t * _541;
  int _543;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _544;
  uint8_t * _545;
  int _547;
  void (*<Tf87>) (uint8_t *, int, uint8_t *, int, int, int, int, int) _549;
  int _550;
  uint8_t * _551;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _553;
  uint8_t * _554;
  int _556;
  short int _560;
  short int _562;
  short int _567;
  int _568;
  short int _572;
  int _573;
  int _574;
  _Bool _579;
  _Bool _580;
  _Bool pretmp_609;
  uint8_t *[6] * pretmp_610;
  long unsigned int pretmp_612;
  long unsigned int pretmp_613;
  const int16_t * pretmp_614;
  _Bool pretmp_621;
  _Bool pretmp_627;
  _Bool pretmp_628;
  _Bool prephitmp_632;
  _Bool prephitmp_633;
  long unsigned int pretmp_643;
  _Bool prephitmp_644;
  long unsigned int pretmp_651;
  int pretmp_662;
  const int16_t * prephitmp_688;
  int pretmp_689;
  const int16_t * pretmp_700;
  _Bool pretmp_705;
  const int16_t * prephitmp_708;

  <bb 2>:
  _97 = m_96(D)->i_pixel;
  bw_98 = x264_pixel_size[_97].w;
  # DEBUG bw => bw_98
  bh_100 = x264_pixel_size[_97].h;
  # DEBUG bh => bh_100
  _101 = m_96(D)->p_cost_mv;
  _102 = m_96(D)->mvp[0];
  _103 = (long unsigned int) _102;
  _104 = _103 * 2;
  _105 = -_104;
  p_cost_mvx_106 = _101 + _105;
  # DEBUG p_cost_mvx => p_cost_mvx_106
  _108 = m_96(D)->mvp[1];
  _109 = (long unsigned int) _108;
  _110 = _109 * 2;
  _111 = -_110;
  p_cost_mvy_112 = _101 + _111;
  # DEBUG p_cost_mvy => p_cost_mvy_112
  # DEBUG i_pixel => _97
  _115 = h_114(D)->mb.b_chroma_me;
  _37 = _97 <= 3;
  _579 = _115 != 0;
  _580 = _37 & _579;
  # DEBUG b_chroma_me => (int) _580
  _117 = m_96(D)->mv[0];
  bmx_118 = (int) _117;
  # DEBUG bmx => bmx_118
  _119 = m_96(D)->mv[1];
  bmy_120 = (int) _119;
  # DEBUG bmy => bmy_120
  bcost_121 = m_96(D)->cost;
  # DEBUG bcost => bcost_121
  # DEBUG odir => -1
  if (hpel_iters_122(D) != 0)
    goto <bb 3>;
  else
    goto <bb 28>;

  <bb 3>:
  _123 = h_114(D)->mb.i_subpel_refine;
  if (_123 <= 2)
    goto <bb 4>;
  else
    goto <bb 12>;

  <bb 4>:
  _124 = h_114(D)->mb.mv_max_spel[0];
  bmx_125 = h_114(D)->mb.mv_min_spel[0];
  _127 = (int) _102;
  # DEBUG v => _127
  # DEBUG i_min => bmx_125
  # DEBUG i_max => _124
  if (bmx_125 <= _127)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  bmx_577 = MIN_EXPR <_124, _127>;

  <bb 6>:
  # bmx_578 = PHI <bmx_125(4), bmx_577(5)>
  # DEBUG v => NULL
  # DEBUG i_min => NULL
  # DEBUG i_max => NULL
  # DEBUG mx => NULL
  _130 = h_114(D)->mb.mv_max_spel[1];
  bmy_131 = h_114(D)->mb.mv_min_spel[1];
  _133 = (int) _108;
  # DEBUG v => _133
  # DEBUG i_min => bmy_131
  # DEBUG i_max => _130
  if (bmy_131 <= _133)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  bmy_134 = MIN_EXPR <_130, _133>;

  <bb 8>:
  # bmy_128 = PHI <bmy_131(6), bmy_134(7)>
  # DEBUG v => NULL
  # DEBUG i_min => NULL
  # DEBUG i_max => NULL
  # DEBUG my => NULL
  _135 = bmx_578 - bmx_118;
  _136 = bmy_128 - bmy_120;
  _137 = _135 | _136;
  if (_137 != 0)
    goto <bb 9>;
  else
    goto <bb 12>;

  <bb 9>:
  stride = 16;
  _139 = h_114(D)->mc.get_ref;
  _140 = m_96(D)->i_stride[0];
  _141 = &m_96(D)->p_fref;
  src_143 = _139 (&pix[0], &stride, _141, _140, bmx_578, bmy_128, bw_98, bh_100);
  # DEBUG src => src_143
  _144 = h_114(D)->pixf.fpelcmp[_97];
  stride.16_145 = stride;
  _146 = m_96(D)->p_fenc[0];
  _148 = _144 (_146, 16, src_143, stride.16_145);
  _149 = (long unsigned int) bmx_578;
  _150 = _149 * 2;
  _151 = p_cost_mvx_106 + _150;
  _152 = *_151;
  _153 = (int) _152;
  _154 = _148 + _153;
  _155 = (long unsigned int) bmy_128;
  _156 = _155 * 2;
  _157 = p_cost_mvy_112 + _156;
  _158 = *_157;
  _159 = (int) _158;
  bcost_160 = _154 + _159;
  # DEBUG cost => bcost_160
  if (bcost_121 > bcost_160)
    goto <bb 11>;
  else
    goto <bb 10>;

  <bb 10>:

  <bb 11>:
  # bmx_3 = PHI <bmx_118(10), bmx_578(9)>
  # bmy_15 = PHI <bmy_120(10), bmy_128(9)>
  # bcost_36 = PHI <bcost_121(10), bcost_160(9)>
  # DEBUG bcost => bcost_36
  # DEBUG bmy => bmy_15
  # DEBUG bmx => bmx_3
  stride ={v} {CLOBBER};

  <bb 12>:
  # bmx_16 = PHI <bmx_118(8), bmx_3(11), bmx_118(3)>
  # bmy_4 = PHI <bmy_120(8), bmy_15(11), bmy_120(3)>
  # bcost_81 = PHI <bcost_121(8), bcost_36(11), bcost_121(3)>
  # DEBUG bcost => bcost_81
  # DEBUG bmy => bmy_4
  # DEBUG bmx => bmx_16
  # DEBUG i => hpel_iters_122(D)
  if (hpel_iters_122(D) > 0)
    goto <bb 13>;
  else
    goto <bb 28>;

  <bb 13>:
  pretmp_610 = &m_96(D)->p_fref;
  pretmp_662 = bh_100 + 1;
  pretmp_689 = bw_98 + 4;

  <bb 14>:
  # hpel_iters_619 = PHI <hpel_iters_122(D)(13), hpel_iters_230(26)>
  # bmx_617 = PHI <bmx_16(13), bmx_6(26)>
  # bmy_595 = PHI <bmy_4(13), bmy_20(26)>
  # bcost_716 = PHI <bcost_81(13), bcost_41(26)>
  # DEBUG bcost => bcost_716
  # DEBUG bmy => bmy_595
  # DEBUG bmx => bmx_617
  # DEBUG i => hpel_iters_619
  # DEBUG omx => bmx_617
  # DEBUG omy => bmy_595
  stride = 32;
  _163 = h_114(D)->mc.get_ref;
  bmy_165 = bmy_595 + -2;
  _166 = m_96(D)->i_stride[0];
  src0_169 = _163 (&pix[0], &stride, pretmp_610, _166, bmx_617, bmy_165, bw_98, pretmp_662);
  # DEBUG src0 => src0_169
  _170 = h_114(D)->mc.get_ref;
  bmx_172 = bmx_617 + -2;
  _173 = m_96(D)->i_stride[0];
  src2_175 = _170 (&pix[1], &stride, pretmp_610, _173, bmx_172, bmy_595, pretmp_689, bh_100);
  # DEBUG src2 => src2_175
  stride.17_176 = stride;
  _177 = (sizetype) stride.17_176;
  src1_178 = src0_169 + _177;
  # DEBUG src1 => src1_178
  src3_179 = src2_175 + 1;
  # DEBUG src3 => src3_179
  _180 = h_114(D)->pixf.fpelcmp_x4[_97];
  _181 = m_96(D)->p_fenc[0];
  _180 (_181, src0_169, src1_178, src2_175, src3_179, stride.17_176, &costs);
  _183 = costs[0];
  _184 = (long unsigned int) bmx_617;
  _185 = _184 * 2;
  _186 = p_cost_mvx_106 + _185;
  _187 = *_186;
  _188 = (int) _187;
  _189 = _183 + _188;
  _190 = (long unsigned int) bmy_595;
  _191 = _190 * 2;
  _192 = _191 + 18446744073709551612;
  _193 = p_cost_mvy_112 + _192;
  _194 = *_193;
  _195 = (int) _194;
  bcost_196 = _189 + _195;
  if (bcost_196 < bcost_716)
    goto <bb 16>;
  else
    goto <bb 15>;

  <bb 15>:

  <bb 16>:
  # bmy_17 = PHI <bmy_595(15), bmy_165(14)>
  # bcost_38 = PHI <bcost_716(15), bcost_196(14)>
  # DEBUG bcost => bcost_38
  # DEBUG bmy => bmy_17
  _197 = costs[1];
  _198 = _188 + _197;
  _199 = _190 + 2;
  _200 = _199 * 2;
  _201 = p_cost_mvy_112 + _200;
  _202 = *_201;
  _203 = (int) _202;
  bcost_204 = _198 + _203;
  if (bcost_38 > bcost_204)
    goto <bb 17>;
  else
    goto <bb 18>;

  <bb 17>:
  # DEBUG bcost => bcost_204
  bmy_205 = bmy_595 + 2;
  # DEBUG bmy => bmy_205

  <bb 18>:
  # bmy_18 = PHI <bmy_17(16), bmy_205(17)>
  # bcost_39 = PHI <bcost_38(16), bcost_204(17)>
  # DEBUG bcost => bcost_39
  # DEBUG bmy => bmy_18
  _206 = costs[2];
  _207 = _185 + 18446744073709551612;
  _208 = p_cost_mvx_106 + _207;
  _209 = *_208;
  _210 = (int) _209;
  _211 = _206 + _210;
  _212 = p_cost_mvy_112 + _191;
  _213 = *_212;
  _214 = (int) _213;
  bcost_215 = _211 + _214;
  if (bcost_39 > bcost_215)
    goto <bb 20>;
  else
    goto <bb 19>;

  <bb 19>:

  <bb 20>:
  # bmx_5 = PHI <bmx_617(19), bmx_172(18)>
  # bmy_19 = PHI <bmy_18(19), bmy_595(18)>
  # bcost_40 = PHI <bcost_39(19), bcost_215(18)>
  # DEBUG bcost => bcost_40
  # DEBUG bmy => bmy_19
  # DEBUG bmx => bmx_5
  _216 = costs[3];
  _217 = _184 + 2;
  _218 = _217 * 2;
  _219 = p_cost_mvx_106 + _218;
  _220 = *_219;
  _221 = (int) _220;
  _222 = _216 + _221;
  bcost_223 = _214 + _222;
  if (bcost_40 > bcost_223)
    goto <bb 22>;
  else
    goto <bb 21>;

  <bb 21>:
  pretmp_628 = bmy_19 == bmy_595;
  goto <bb 23>;

  <bb 22>:
  # DEBUG bcost => bcost_223
  bmx_224 = bmx_617 + 2;
  # DEBUG bmx => bmx_224
  # DEBUG bmy => bmy_595

  <bb 23>:
  # bmx_6 = PHI <bmx_5(21), bmx_224(22)>
  # bmy_20 = PHI <bmy_19(21), bmy_595(22)>
  # bcost_41 = PHI <bcost_40(21), bcost_223(22)>
  # prephitmp_632 = PHI <pretmp_628(21), 1(22)>
  # DEBUG bcost => bcost_41
  # DEBUG bmy => bmy_20
  # DEBUG bmx => bmx_6
  _225 = bmx_6 == bmx_617;
  _227 = _225 & prephitmp_632;
  if (_227 != 0)
    goto <bb 27>;
  else
    goto <bb 24>;

  <bb 24>:
  costs ={v} {CLOBBER};
  stride ={v} {CLOBBER};
  hpel_iters_230 = hpel_iters_619 + -1;
  # DEBUG i => hpel_iters_230
  # DEBUG bcost => bcost_41
  # DEBUG bmy => bmy_20
  # DEBUG bmx => bmx_6
  # DEBUG i => hpel_iters_230
  if (hpel_iters_230 > 0)
    goto <bb 26>;
  else
    goto <bb 25>;

  <bb 25>:
  # bmx_711 = PHI <bmx_6(24)>
  # bmy_637 = PHI <bmy_20(24)>
  # bcost_594 = PHI <bcost_41(24)>
  goto <bb 28>;

  <bb 26>:
  goto <bb 14>;

  <bb 27>:
  # bmx_620 = PHI <bmx_6(23)>
  # bmy_640 = PHI <bmy_20(23)>
  # bcost_611 = PHI <bcost_41(23)>
  costs ={v} {CLOBBER};
  stride ={v} {CLOBBER};

  <bb 28>:
  # bmx_8 = PHI <bmx_620(27), bmx_711(25), bmx_118(2), bmx_16(12)>
  # bmy_22 = PHI <bmy_640(27), bmy_637(25), bmy_120(2), bmy_4(12)>
  # bcost_43 = PHI <bcost_611(27), bcost_594(25), bcost_121(2), bcost_81(12)>
  # DEBUG bcost => bcost_43
  # DEBUG bmy => bmy_22
  # DEBUG bmx => bmx_8
  if (b_refine_qpel_233(D) == 0)
    goto <bb 29>;
  else
    goto <bb 35>;

  <bb 29>:
  bmy_234 = h_114(D)->mb.mv_max_spel[1];
  bmy_581 = MIN_EXPR <bmy_22, bmy_234>;
  # DEBUG bmy => bmy_581
  # DEBUG bcost => 268435456
  stride = 16;
  _236 = h_114(D)->mc.get_ref;
  _237 = m_96(D)->i_stride[0];
  _238 = &m_96(D)->p_fref;
  src_240 = _236 (&pix[0], &stride, _238, _237, bmx_8, bmy_581, bw_98, bh_100);
  # DEBUG src => src_240
  _241 = h_114(D)->pixf.mbcmp_unaligned[_97];
  stride.18_242 = stride;
  _243 = m_96(D)->p_fenc[0];
  _245 = _241 (_243, 16, src_240, stride.18_242);
  _246 = (long unsigned int) bmx_8;
  _247 = _246 * 2;
  _248 = p_cost_mvx_106 + _247;
  _249 = *_248;
  _250 = (int) _249;
  _251 = _245 + _250;
  _252 = (long unsigned int) bmy_581;
  _253 = _252 * 2;
  _254 = p_cost_mvy_112 + _253;
  _255 = *_254;
  _256 = (int) _255;
  bcost_257 = _251 + _256;
  # DEBUG cost => bcost_257
  _259 = bcost_257 <= 268435455;
  _260 = _259 & _580;
  if (_260 != 0)
    goto <bb 30>;
  else
    goto <bb 33>;

  <bb 30>:
  _261 = h_114(D)->mc.mc_chroma;
  _262 = bh_100 / 2;
  _263 = bw_98 / 2;
  _264 = m_96(D)->i_stride[1];
  _265 = m_96(D)->p_fref[4];
  _261 (&pix[0], 8, _265, _264, bmx_8, bmy_581, _263, _262);
  _267 = _97 + 3;
  _268 = h_114(D)->pixf.mbcmp[_267];
  _269 = m_96(D)->p_fenc[1];
  _271 = _268 (_269, 16, &pix[0], 8);
  bcost_272 = bcost_257 + _271;
  # DEBUG cost => bcost_272
  if (bcost_272 <= 268435455)
    goto <bb 32>;
  else
    goto <bb 31>;

  <bb 31>:
  # DEBUG cost => NULL
  goto <bb 34>;

  <bb 32>:
  _273 = h_114(D)->mc.mc_chroma;
  _274 = m_96(D)->i_stride[1];
  _275 = m_96(D)->p_fref[5];
  _273 (&pix[0], 8, _275, _274, bmx_8, bmy_581, _263, _262);
  _277 = h_114(D)->pixf.mbcmp[_267];
  _278 = m_96(D)->p_fenc[2];
  _280 = _277 (_278, 16, &pix[0], 8);
  bcost_281 = bcost_272 + _280;
  # DEBUG cost => bcost_281

  <bb 33>:
  # bcost_69 = PHI <bcost_257(29), bcost_281(32)>
  # DEBUG cost => bcost_69
  if (bcost_69 <= 268435455)
    goto <bb 34>;
  else
    goto <bb 31>;

  <bb 34>:
  # bcost_44 = PHI <268435456(31), bcost_69(33)>
  # DEBUG bcost => bcost_44
  # DEBUG bmy => bmy_581
  # DEBUG bmx => bmx_8
  stride ={v} {CLOBBER};

  <bb 35>:
  # bmy_24 = PHI <bmy_22(28), bmy_581(34)>
  # bcost_45 = PHI <bcost_43(28), bcost_44(34)>
  # DEBUG bcost => bcost_45
  # DEBUG bmy => bmy_24
  # DEBUG bmx => bmx_8
  if (p_halfpel_thresh_283(D) != 0B)
    goto <bb 36>;
  else
    goto <bb 40>;

  <bb 36>:
  _284 = bcost_45 * 7;
  _285 = _284 >> 3;
  _286 = *p_halfpel_thresh_283(D);
  if (_285 > _286)
    goto <bb 37>;
  else
    goto <bb 38>;

  <bb 37>:
  m_96(D)->cost = bcost_45;
  _289 = (short int) bmx_8;
  m_96(D)->mv[0] = _289;
  _291 = (short int) bmy_24;
  m_96(D)->mv[1] = _291;
  pix ={v} {CLOBBER};
  goto <bb 83>;

  <bb 38>:
  if (bcost_45 < _286)
    goto <bb 39>;
  else
    goto <bb 40>;

  <bb 39>:
  *p_halfpel_thresh_283(D) = bcost_45;

  <bb 40>:
  # DEBUG bdir => -1
  # DEBUG odir => NULL
  # DEBUG bcost => bcost_45
  # DEBUG bmy => bmy_24
  # DEBUG bmx => bmx_8
  # DEBUG i => qpel_iters_294(D)
  if (qpel_iters_294(D) > 0)
    goto <bb 41>;
  else
    goto <bb 85>;

  <bb 41>:
  pretmp_627 = b_refine_qpel_233(D) != 0;
  _327 = bh_100 / 2;
  _328 = bw_98 / 2;
  _378 = bh_100 / 2;
  _379 = bw_98 / 2;
  _430 = bh_100 / 2;
  _431 = bw_98 / 2;
  _482 = bh_100 / 2;
  _483 = bw_98 / 2;

  <bb 42>:
  # qpel_iters_713 = PHI <qpel_iters_294(D)(41), qpel_iters_506(76)>
  # bmx_593 = PHI <bmx_8(41), bmx_12(76)>
  # bmy_715 = PHI <bmy_24(41), bmy_32(76)>
  # bcost_718 = PHI <bcost_45(41), bcost_53(76)>
  # odir_648 = PHI <-1(41), odir_67(76)>
  # DEBUG bdir => odir_648
  # DEBUG bcost => bcost_718
  # DEBUG bmy => bmy_715
  # DEBUG bmx => bmx_593
  # DEBUG i => qpel_iters_713
  # DEBUG odir => odir_648
  # DEBUG omx => bmx_593
  # DEBUG omy => bmy_715
  _296 = odir_648 != 1;
  _297 = _296 | pretmp_627;
  if (_297 != 0)
    goto <bb 43>;
  else
    goto <bb 49>;

  <bb 43>:
  # DEBUG bdir => odir_648
  # DEBUG bcost => bcost_718
  # DEBUG bmy => bmy_715
  # DEBUG bmx => bmx_593
  # DEBUG i => qpel_iters_713
  # DEBUG odir => odir_648
  # DEBUG omx => bmx_593
  # DEBUG omy => bmy_715
  stride = 16;
  _299 = h_114(D)->mc.get_ref;
  bmy_300 = bmy_715 + -1;
  _301 = m_96(D)->i_stride[0];
  _302 = &m_96(D)->p_fref;
  src_304 = _299 (&pix[0], &stride, _302, _301, bmx_593, bmy_300, bw_98, bh_100);
  # DEBUG src => src_304
  _305 = h_114(D)->pixf.mbcmp_unaligned[_97];
  stride.19_306 = stride;
  _307 = m_96(D)->p_fenc[0];
  _309 = _305 (_307, 16, src_304, stride.19_306);
  _310 = (long unsigned int) bmx_593;
  _311 = _310 * 2;
  _312 = p_cost_mvx_106 + _311;
  _313 = *_312;
  _314 = (int) _313;
  _315 = _309 + _314;
  _316 = (long unsigned int) bmy_715;
  _317 = _316 * 2;
  _318 = _317 + 18446744073709551614;
  _319 = p_cost_mvy_112 + _318;
  _320 = *_319;
  _321 = (int) _320;
  bcost_322 = _315 + _321;
  # DEBUG cost => bcost_322
  _324 = bcost_322 < bcost_718;
  _325 = _324 & _580;
  if (_325 != 0)
    goto <bb 44>;
  else
    goto <bb 46>;

  <bb 44>:
  _326 = h_114(D)->mc.mc_chroma;
  _329 = m_96(D)->i_stride[1];
  _330 = m_96(D)->p_fref[4];
  _326 (&pix[0], 8, _330, _329, bmx_593, bmy_300, _328, _327);
  _332 = _97 + 3;
  _333 = h_114(D)->pixf.mbcmp[_332];
  _334 = m_96(D)->p_fenc[1];
  _336 = _333 (_334, 16, &pix[0], 8);
  bcost_337 = bcost_322 + _336;
  # DEBUG cost => bcost_337
  if (bcost_337 < bcost_718)
    goto <bb 45>;
  else
    goto <bb 48>;

  <bb 45>:
  _338 = h_114(D)->mc.mc_chroma;
  _339 = m_96(D)->i_stride[1];
  _340 = m_96(D)->p_fref[5];
  _338 (&pix[0], 8, _340, _339, bmx_593, bmy_300, _328, _327);
  _342 = h_114(D)->pixf.mbcmp[_332];
  _343 = m_96(D)->p_fenc[2];
  _345 = _342 (_343, 16, &pix[0], 8);
  bcost_346 = bcost_337 + _345;
  # DEBUG cost => bcost_346

  <bb 46>:
  # bcost_70 = PHI <bcost_322(43), bcost_346(45)>
  # DEBUG cost => bcost_70
  if (bcost_70 < bcost_718)
    goto <bb 48>;
  else
    goto <bb 47>;

  <bb 47>:

  <bb 48>:
  # bmy_25 = PHI <bmy_715(47), bmy_300(46), bmy_715(44)>
  # bcost_46 = PHI <bcost_718(47), bcost_70(46), bcost_718(44)>
  # odir_60 = PHI <odir_648(47), 0(46), odir_648(44)>
  # DEBUG bdir => odir_60
  # DEBUG bcost => bcost_46
  # DEBUG bmy => bmy_25
  # DEBUG bmx => bmx_593
  stride ={v} {CLOBBER};

  <bb 49>:
  # bmy_26 = PHI <bmy_715(42), bmy_25(48)>
  # bcost_47 = PHI <bcost_718(42), bcost_46(48)>
  # odir_61 = PHI <1(42), odir_60(48)>
  # DEBUG bdir => odir_61
  # DEBUG bcost => bcost_47
  # DEBUG bmy => bmy_26
  # DEBUG bmx => bmx_593
  _348 = b_refine_qpel_233(D) | odir_648;
  if (_348 != 0)
    goto <bb 50>;
  else
    goto <bb 56>;

  <bb 50>:
  stride = 16;
  _350 = h_114(D)->mc.get_ref;
  bmy_351 = bmy_715 + 1;
  _352 = m_96(D)->i_stride[0];
  _353 = &m_96(D)->p_fref;
  src_355 = _350 (&pix[0], &stride, _353, _352, bmx_593, bmy_351, bw_98, bh_100);
  # DEBUG src => src_355
  _356 = h_114(D)->pixf.mbcmp_unaligned[_97];
  stride.20_357 = stride;
  _358 = m_96(D)->p_fenc[0];
  _360 = _356 (_358, 16, src_355, stride.20_357);
  _361 = (long unsigned int) bmx_593;
  _362 = _361 * 2;
  _363 = p_cost_mvx_106 + _362;
  _364 = *_363;
  _365 = (int) _364;
  _366 = _360 + _365;
  _367 = (sizetype) bmy_715;
  _368 = _367 + 1;
  _369 = _368 * 2;
  _370 = p_cost_mvy_112 + _369;
  _371 = *_370;
  _372 = (int) _371;
  bcost_373 = _366 + _372;
  # DEBUG cost => bcost_373
  _375 = bcost_47 > bcost_373;
  _376 = _375 & _580;
  if (_376 != 0)
    goto <bb 51>;
  else
    goto <bb 53>;

  <bb 51>:
  _377 = h_114(D)->mc.mc_chroma;
  _380 = m_96(D)->i_stride[1];
  _381 = m_96(D)->p_fref[4];
  _377 (&pix[0], 8, _381, _380, bmx_593, bmy_351, _379, _378);
  _383 = _97 + 3;
  _384 = h_114(D)->pixf.mbcmp[_383];
  _385 = m_96(D)->p_fenc[1];
  _387 = _384 (_385, 16, &pix[0], 8);
  bcost_388 = bcost_373 + _387;
  # DEBUG cost => bcost_388
  if (bcost_47 > bcost_388)
    goto <bb 52>;
  else
    goto <bb 55>;

  <bb 52>:
  _389 = h_114(D)->mc.mc_chroma;
  _390 = m_96(D)->i_stride[1];
  _391 = m_96(D)->p_fref[5];
  _389 (&pix[0], 8, _391, _390, bmx_593, bmy_351, _379, _378);
  _393 = h_114(D)->pixf.mbcmp[_383];
  _394 = m_96(D)->p_fenc[2];
  _396 = _393 (_394, 16, &pix[0], 8);
  bcost_397 = bcost_388 + _396;
  # DEBUG cost => bcost_397

  <bb 53>:
  # bcost_71 = PHI <bcost_373(50), bcost_397(52)>
  # DEBUG cost => bcost_71
  if (bcost_47 > bcost_71)
    goto <bb 55>;
  else
    goto <bb 54>;

  <bb 54>:

  <bb 55>:
  # bmy_27 = PHI <bmy_26(54), bmy_351(53), bmy_26(51)>
  # bcost_48 = PHI <bcost_47(54), bcost_71(53), bcost_47(51)>
  # odir_62 = PHI <odir_61(54), 1(53), odir_61(51)>
  # DEBUG bdir => odir_62
  # DEBUG bcost => bcost_48
  # DEBUG bmy => bmy_27
  # DEBUG bmx => bmx_593
  stride ={v} {CLOBBER};

  <bb 56>:
  # bmy_28 = PHI <bmy_26(49), bmy_27(55)>
  # bcost_49 = PHI <bcost_47(49), bcost_48(55)>
  # odir_63 = PHI <odir_61(49), odir_62(55)>
  # DEBUG bdir => odir_63
  # DEBUG bcost => bcost_49
  # DEBUG bmy => bmy_28
  # DEBUG bmx => bmx_593
  _399 = odir_648 != 3;
  _400 = _399 | pretmp_627;
  if (_400 != 0)
    goto <bb 57>;
  else
    goto <bb 63>;

  <bb 57>:
  stride = 16;
  _402 = h_114(D)->mc.get_ref;
  bmx_403 = bmx_593 + -1;
  _404 = m_96(D)->i_stride[0];
  _405 = &m_96(D)->p_fref;
  src_407 = _402 (&pix[0], &stride, _405, _404, bmx_403, bmy_715, bw_98, bh_100);
  # DEBUG src => src_407
  _408 = h_114(D)->pixf.mbcmp_unaligned[_97];
  stride.21_409 = stride;
  _410 = m_96(D)->p_fenc[0];
  _412 = _408 (_410, 16, src_407, stride.21_409);
  _413 = (long unsigned int) bmx_593;
  _414 = _413 * 2;
  _415 = _414 + 18446744073709551614;
  _416 = p_cost_mvx_106 + _415;
  _417 = *_416;
  _418 = (int) _417;
  _419 = _412 + _418;
  _420 = (long unsigned int) bmy_715;
  _421 = _420 * 2;
  _422 = p_cost_mvy_112 + _421;
  _423 = *_422;
  _424 = (int) _423;
  bcost_425 = _419 + _424;
  # DEBUG cost => bcost_425
  _427 = bcost_49 > bcost_425;
  _428 = _427 & _580;
  if (_428 != 0)
    goto <bb 58>;
  else
    goto <bb 60>;

  <bb 58>:
  _429 = h_114(D)->mc.mc_chroma;
  _432 = m_96(D)->i_stride[1];
  _433 = m_96(D)->p_fref[4];
  _429 (&pix[0], 8, _433, _432, bmx_403, bmy_715, _431, _430);
  _435 = _97 + 3;
  _436 = h_114(D)->pixf.mbcmp[_435];
  _437 = m_96(D)->p_fenc[1];
  _439 = _436 (_437, 16, &pix[0], 8);
  bcost_440 = bcost_425 + _439;
  # DEBUG cost => bcost_440
  if (bcost_49 > bcost_440)
    goto <bb 59>;
  else
    goto <bb 62>;

  <bb 59>:
  _441 = h_114(D)->mc.mc_chroma;
  _442 = m_96(D)->i_stride[1];
  _443 = m_96(D)->p_fref[5];
  _441 (&pix[0], 8, _443, _442, bmx_403, bmy_715, _431, _430);
  _445 = h_114(D)->pixf.mbcmp[_435];
  _446 = m_96(D)->p_fenc[2];
  _448 = _445 (_446, 16, &pix[0], 8);
  bcost_449 = bcost_440 + _448;
  # DEBUG cost => bcost_449

  <bb 60>:
  # bcost_72 = PHI <bcost_425(57), bcost_449(59)>
  # DEBUG cost => bcost_72
  if (bcost_49 > bcost_72)
    goto <bb 62>;
  else
    goto <bb 61>;

  <bb 61>:

  <bb 62>:
  # bmx_9 = PHI <bmx_593(61), bmx_403(60), bmx_593(58)>
  # bmy_29 = PHI <bmy_28(61), bmy_715(60), bmy_28(58)>
  # bcost_50 = PHI <bcost_49(61), bcost_72(60), bcost_49(58)>
  # odir_64 = PHI <odir_63(61), 2(60), odir_63(58)>
  # DEBUG bdir => odir_64
  # DEBUG bcost => bcost_50
  # DEBUG bmy => bmy_29
  # DEBUG bmx => bmx_9
  stride ={v} {CLOBBER};

  <bb 63>:
  # bmx_10 = PHI <bmx_593(56), bmx_9(62)>
  # bmy_30 = PHI <bmy_28(56), bmy_29(62)>
  # bcost_51 = PHI <bcost_49(56), bcost_50(62)>
  # odir_65 = PHI <odir_63(56), odir_64(62)>
  # DEBUG bdir => odir_65
  # DEBUG bcost => bcost_51
  # DEBUG bmy => bmy_30
  # DEBUG bmx => bmx_10
  _451 = odir_648 != 2;
  _452 = _451 | pretmp_627;
  if (_452 != 0)
    goto <bb 65>;
  else
    goto <bb 64>;

  <bb 64>:
  pretmp_621 = bmy_30 == bmy_715;
  goto <bb 72>;

  <bb 65>:
  stride = 16;
  _454 = h_114(D)->mc.get_ref;
  bmx_455 = bmx_593 + 1;
  _456 = m_96(D)->i_stride[0];
  _457 = &m_96(D)->p_fref;
  src_459 = _454 (&pix[0], &stride, _457, _456, bmx_455, bmy_715, bw_98, bh_100);
  # DEBUG src => src_459
  _460 = h_114(D)->pixf.mbcmp_unaligned[_97];
  stride.22_461 = stride;
  _462 = m_96(D)->p_fenc[0];
  _464 = _460 (_462, 16, src_459, stride.22_461);
  _465 = (sizetype) bmx_593;
  _466 = _465 + 1;
  _467 = _466 * 2;
  _468 = p_cost_mvx_106 + _467;
  _469 = *_468;
  _470 = (int) _469;
  _471 = _464 + _470;
  _472 = (long unsigned int) bmy_715;
  _473 = _472 * 2;
  _474 = p_cost_mvy_112 + _473;
  _475 = *_474;
  _476 = (int) _475;
  bcost_477 = _471 + _476;
  # DEBUG cost => bcost_477
  _479 = bcost_51 > bcost_477;
  _480 = _479 & _580;
  if (_480 != 0)
    goto <bb 66>;
  else
    goto <bb 69>;

  <bb 66>:
  _481 = h_114(D)->mc.mc_chroma;
  _484 = m_96(D)->i_stride[1];
  _485 = m_96(D)->p_fref[4];
  _481 (&pix[0], 8, _485, _484, bmx_455, bmy_715, _483, _482);
  _487 = _97 + 3;
  _488 = h_114(D)->pixf.mbcmp[_487];
  _489 = m_96(D)->p_fenc[1];
  _491 = _488 (_489, 16, &pix[0], 8);
  bcost_492 = bcost_477 + _491;
  # DEBUG cost => bcost_492
  if (bcost_51 > bcost_492)
    goto <bb 68>;
  else
    goto <bb 67>;

  <bb 67>:
  pretmp_705 = bmy_30 == bmy_715;
  goto <bb 71>;

  <bb 68>:
  _493 = h_114(D)->mc.mc_chroma;
  _494 = m_96(D)->i_stride[1];
  _495 = m_96(D)->p_fref[5];
  _493 (&pix[0], 8, _495, _494, bmx_455, bmy_715, _483, _482);
  _497 = h_114(D)->pixf.mbcmp[_487];
  _498 = m_96(D)->p_fenc[2];
  _500 = _497 (_498, 16, &pix[0], 8);
  bcost_501 = bcost_492 + _500;
  # DEBUG cost => bcost_501

  <bb 69>:
  # bcost_73 = PHI <bcost_477(65), bcost_501(68)>
  # DEBUG cost => bcost_73
  if (bcost_51 > bcost_73)
    goto <bb 71>;
  else
    goto <bb 70>;

  <bb 70>:
  pretmp_609 = bmy_30 == bmy_715;

  <bb 71>:
  # bmx_11 = PHI <bmx_10(70), bmx_455(69), bmx_10(67)>
  # bmy_31 = PHI <bmy_30(70), bmy_715(69), bmy_30(67)>
  # bcost_52 = PHI <bcost_51(70), bcost_73(69), bcost_51(67)>
  # odir_66 = PHI <odir_65(70), 3(69), odir_65(67)>
  # prephitmp_644 = PHI <pretmp_609(70), 1(69), pretmp_705(67)>
  # DEBUG bdir => odir_66
  # DEBUG bcost => bcost_52
  # DEBUG bmy => bmy_31
  # DEBUG bmx => bmx_11
  stride ={v} {CLOBBER};

  <bb 72>:
  # bmx_12 = PHI <bmx_10(64), bmx_11(71)>
  # bmy_32 = PHI <bmy_30(64), bmy_31(71)>
  # bcost_53 = PHI <bcost_51(64), bcost_52(71)>
  # odir_67 = PHI <odir_65(64), odir_66(71)>
  # prephitmp_633 = PHI <pretmp_621(64), prephitmp_644(71)>
  # DEBUG bdir => odir_67
  # DEBUG bcost => bcost_53
  # DEBUG bmy => bmy_32
  # DEBUG bmx => bmx_12
  _503 = bmx_12 == bmx_593;
  _505 = _503 & prephitmp_633;
  if (_505 != 0)
    goto <bb 73>;
  else
    goto <bb 74>;

  <bb 73>:
  # bmx_660 = PHI <bmx_12(72)>
  # bmy_636 = PHI <bmy_32(72)>
  # bcost_592 = PHI <bcost_53(72)>
  goto <bb 85>;

  <bb 74>:
  qpel_iters_506 = qpel_iters_713 + -1;
  # DEBUG i => qpel_iters_506
  # DEBUG bdir => odir_67
  # DEBUG odir => NULL
  # DEBUG bcost => bcost_53
  # DEBUG bmy => bmy_32
  # DEBUG bmx => bmx_12
  # DEBUG i => qpel_iters_506
  if (qpel_iters_506 > 0)
    goto <bb 76>;
  else
    goto <bb 75>;

  <bb 75>:
  # bmx_641 = PHI <bmx_12(74)>
  # bmy_626 = PHI <bmy_32(74)>
  # bcost_587 = PHI <bcost_53(74)>
  goto <bb 85>;

  <bb 76>:
  goto <bb 42>;

  <bb 77>:
  _537 = h_114(D)->mc.mc_chroma;
  _538 = bh_100 / 2;
  _539 = bw_98 / 2;
  _540 = m_96(D)->i_stride[1];
  _541 = m_96(D)->p_fref[4];
  _537 (&pix[0], 8, _541, _540, bmx_638, bmy_618, _539, _538);
  _543 = _97 + 3;
  _544 = h_114(D)->pixf.mbcmp[_543];
  _545 = m_96(D)->p_fenc[1];
  _547 = _544 (_545, 16, &pix[0], 8);
  bcost_548 = bcost_533 + _547;
  # DEBUG cost => bcost_548
  if (bcost_548 <= 268435455)
    goto <bb 79>;
  else
    goto <bb 78>;

  <bb 78>:
  # DEBUG cost => NULL
  goto <bb 81>;

  <bb 79>:
  _549 = h_114(D)->mc.mc_chroma;
  _550 = m_96(D)->i_stride[1];
  _551 = m_96(D)->p_fref[5];
  _549 (&pix[0], 8, _551, _550, bmx_638, bmy_618, _539, _538);
  _553 = h_114(D)->pixf.mbcmp[_543];
  _554 = m_96(D)->p_fenc[2];
  _556 = _553 (_554, 16, &pix[0], 8);
  bcost_557 = bcost_548 + _556;
  # DEBUG cost => bcost_557

  <bb 80>:
  # bcost_74 = PHI <bcost_533(84), bcost_557(79)>
  # DEBUG cost => bcost_74
  if (bcost_74 <= 268435455)
    goto <bb 81>;
  else
    goto <bb 78>;

  <bb 81>:
  # bcost_56 = PHI <268435456(78), bcost_74(80)>
  # DEBUG bcost => bcost_56
  # DEBUG bmy => bmy_618
  # DEBUG bmx => bmx_638
  stride ={v} {CLOBBER};

  <bb 82>:
  # bmy_35 = PHI <bmy_616(86), bmy_618(81)>
  # bcost_57 = PHI <bcost_639(86), bcost_56(81)>
  # prephitmp_708 = PHI <pretmp_614(86), _524(81)>
  # prephitmp_688 = PHI <pretmp_700(86), _530(81)>
  # DEBUG bcost => bcost_57
  # DEBUG bmy => bmy_35
  # DEBUG bmx => bmx_638
  m_96(D)->cost = bcost_57;
  _560 = (short int) bmx_638;
  m_96(D)->mv[0] = _560;
  _562 = (short int) bmy_35;
  m_96(D)->mv[1] = _562;
  _567 = *prephitmp_708;
  _568 = (int) _567;
  _572 = *prephitmp_688;
  _573 = (int) _572;
  _574 = _568 + _573;
  m_96(D)->cost_mv = _574;
  pix ={v} {CLOBBER};

  <bb 83>:
  return;

  <bb 84>:
  # DEBUG bmy => bmy_618
  # DEBUG bcost => 268435456
  # DEBUG bmy => bmy_618
  # DEBUG bcost => 268435456
  stride = 16;
  _512 = h_114(D)->mc.get_ref;
  _513 = m_96(D)->i_stride[0];
  _514 = &m_96(D)->p_fref;
  src_516 = _512 (&pix[0], &stride, _514, _513, bmx_638, bmy_618, bw_98, bh_100);
  # DEBUG src => src_516
  _517 = h_114(D)->pixf.mbcmp_unaligned[_97];
  stride.23_518 = stride;
  _519 = m_96(D)->p_fenc[0];
  _521 = _517 (_519, 16, src_516, stride.23_518);
  _522 = (long unsigned int) bmx_638;
  _523 = _522 * 2;
  _524 = p_cost_mvx_106 + _523;
  _525 = *_524;
  _526 = (int) _525;
  _527 = _521 + _526;
  _528 = (long unsigned int) bmy_618;
  _529 = _528 * 2;
  _530 = p_cost_mvy_112 + _529;
  _531 = *_530;
  _532 = (int) _531;
  bcost_533 = _527 + _532;
  # DEBUG cost => bcost_533
  _535 = bcost_533 <= 268435455;
  _536 = _535 & _580;
  if (_536 != 0)
    goto <bb 77>;
  else
    goto <bb 80>;

  <bb 85>:
  # bmx_638 = PHI <bmx_641(75), bmx_660(73), bmx_8(40)>
  # bmy_616 = PHI <bmy_626(75), bmy_636(73), bmy_24(40)>
  # bcost_639 = PHI <bcost_587(75), bcost_592(73), bcost_45(40)>
  # DEBUG odir => NULL
  # DEBUG bcost => bcost_639
  # DEBUG bmy => bmy_616
  # DEBUG bmx => bmx_638
  bmy_618 = h_114(D)->mb.mv_max_spel[1];
  if (bmy_616 > bmy_618)
    goto <bb 84>;
  else
    goto <bb 86>;

  <bb 86>:
  pretmp_612 = (long unsigned int) bmx_638;
  pretmp_613 = pretmp_612 * 2;
  pretmp_614 = p_cost_mvx_106 + pretmp_613;
  pretmp_643 = (long unsigned int) bmy_616;
  pretmp_651 = pretmp_643 * 2;
  pretmp_700 = p_cost_mvy_112 + pretmp_651;
  goto <bb 82>;

}



;; Function x264_me_search_ref (x264_me_search_ref, funcdef_no=116, decl_uid=5768, cgraph_uid=116, symbol_order=163)


Analyzing loop at encoder/me.c:238
encoder/me.c:238:13: note: ===== analyze_loop_nest =====
encoder/me.c:238:13: note: === vect_analyze_loop_form ===
encoder/me.c:238:13: note: not vectorized: control flow in loop.
encoder/me.c:238:13: note: bad loop form.

Analyzing loop at encoder/me.c:285
encoder/me.c:285:44: note: ===== analyze_loop_nest =====
encoder/me.c:285:44: note: === vect_analyze_loop_form ===
encoder/me.c:285:44: note: not vectorized: control flow in loop.
encoder/me.c:285:44: note: bad loop form.

Analyzing loop at encoder/me.c:443
encoder/me.c:443:13: note: ===== analyze_loop_nest =====
encoder/me.c:443:13: note: === vect_analyze_loop_form ===
encoder/me.c:443:13: note: ===== analyze_loop_nest_1 =====
encoder/me.c:443:13: note: === vect_analyze_loop_form ===
encoder/me.c:443:13: note: not vectorized: control flow in loop.
encoder/me.c:443:13: note: bad inner-loop form.
encoder/me.c:443:13: note: not vectorized: Bad inner loop.
encoder/me.c:443:13: note: bad loop form.

Analyzing loop at encoder/me.c:428
encoder/me.c:428:21: note: ===== analyze_loop_nest =====
encoder/me.c:428:21: note: === vect_analyze_loop_form ===
encoder/me.c:428:21: note: not vectorized: control flow in loop.
encoder/me.c:428:21: note: bad loop form.

Analyzing loop at encoder/me.c:408
encoder/me.c:408:13: note: ===== analyze_loop_nest =====
encoder/me.c:408:13: note: === vect_analyze_loop_form ===
encoder/me.c:408:13: note: not vectorized: control flow in loop.
encoder/me.c:408:13: note: bad loop form.

Analyzing loop at encoder/me.c:408
encoder/me.c:408:13: note: ===== analyze_loop_nest =====
encoder/me.c:408:13: note: === vect_analyze_loop_form ===
encoder/me.c:408:13: note: not vectorized: control flow in loop.
encoder/me.c:408:13: note: bad loop form.

Analyzing loop at encoder/me.c:408
encoder/me.c:408:13: note: ===== analyze_loop_nest =====
encoder/me.c:408:13: note: === vect_analyze_loop_form ===
encoder/me.c:408:13: note: not vectorized: control flow in loop.
encoder/me.c:408:13: note: bad loop form.

Analyzing loop at encoder/me.c:408
encoder/me.c:408:13: note: ===== analyze_loop_nest =====
encoder/me.c:408:13: note: === vect_analyze_loop_form ===
encoder/me.c:408:13: note: not vectorized: control flow in loop.
encoder/me.c:408:13: note: bad loop form.

Analyzing loop at encoder/me.c:344
encoder/me.c:344:21: note: ===== analyze_loop_nest =====
encoder/me.c:344:21: note: === vect_analyze_loop_form ===
encoder/me.c:344:21: note: not vectorized: control flow in loop.
encoder/me.c:344:21: note: bad loop form.

Analyzing loop at encoder/me.c:344
encoder/me.c:344:21: note: ===== analyze_loop_nest =====
encoder/me.c:344:21: note: === vect_analyze_loop_form ===
encoder/me.c:344:21: note: not vectorized: control flow in loop.
encoder/me.c:344:21: note: bad loop form.

Analyzing loop at encoder/me.c:344
encoder/me.c:344:21: note: ===== analyze_loop_nest =====
encoder/me.c:344:21: note: === vect_analyze_loop_form ===
encoder/me.c:344:21: note: not vectorized: control flow in loop.
encoder/me.c:344:21: note: bad loop form.

Analyzing loop at encoder/me.c:344
encoder/me.c:344:21: note: ===== analyze_loop_nest =====
encoder/me.c:344:21: note: === vect_analyze_loop_form ===
encoder/me.c:344:21: note: not vectorized: control flow in loop.
encoder/me.c:344:21: note: bad loop form.

Analyzing loop at encoder/me.c:582
encoder/me.c:582:17: note: ===== analyze_loop_nest =====
encoder/me.c:582:17: note: === vect_analyze_loop_form ===
encoder/me.c:582:17: note: not vectorized: control flow in loop.
encoder/me.c:582:17: note: bad loop form.

Analyzing loop at encoder/me.c:566
encoder/me.c:566:21: note: ===== analyze_loop_nest =====
encoder/me.c:566:21: note: === vect_analyze_loop_form ===
encoder/me.c:566:21: note: ===== analyze_loop_nest_1 =====
encoder/me.c:566:21: note: === vect_analyze_loop_form ===
encoder/me.c:566:21: note: === get_loop_niters ===
Applying pattern match.pd:494, generic-match.c:3721
Analyzing # of iterations of loop 11
  exit condition [bj_3580 + 2, + , 1](no_overflow) < nmvsad_421
  bounds on difference of bases: 0 ... 2147483645
Applying pattern match.pd:442, generic-match.c:3412
Applying pattern match.pd:628, generic-match.c:1309
  result:
    # of iterations ((unsigned int) nmvsad_421 - (unsigned int) bj_3580) - 2, bounded by 2147483645
Applying pattern match.pd:494, generic-match.c:3762
encoder/me.c:566:21: note: Symbolic number of iterations is ((unsigned int) nmvsad_421 - (unsigned int) bj_3580) + 4294967295
encoder/me.c:566:21: note: not vectorized: inner-loop count not invariant.
encoder/me.c:566:21: note: bad loop form.

Analyzing loop at encoder/me.c:570
encoder/me.c:570:25: note: ===== analyze_loop_nest =====
encoder/me.c:570:25: note: === vect_analyze_loop_form ===
encoder/me.c:570:25: note: === get_loop_niters ===
Applying pattern match.pd:494, generic-match.c:3762
encoder/me.c:570:25: note: Symbolic number of iterations is ((unsigned int) nmvsad_421 - (unsigned int) bj_3580) + 4294967295
encoder/me.c:570:25: note: === vect_analyze_data_refs ===
Creating dr for _2731->sad
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
success.
Applying pattern match.pd:49, generic-match.c:3223
	base_address: mvsads_2571 + (sizetype) ((long unsigned int) bj_3580 * 8)
	offset from base address: 0
	constant offset from base address: 8
	step: 8
	aligned to: 128
	base_object: *mvsads_2571 + (sizetype) ((long unsigned int) bj_3580 * 8)
	Access function 0: 0
	Access function 1: {8B, +, 8}_11
encoder/me.c:570:25: note: got vectype for stmt: bsad_2732 = _2731->sad;
vector(4) int
encoder/me.c:570:25: note: === vect_analyze_scalar_cycles ===
encoder/me.c:570:25: note: Analyze phi: bj_3577 = PHI <bj_2728(412), bj_2733(414)>

encoder/me.c:570:25: note: Access function of PHI: {bj_2728, +, 1}_11
encoder/me.c:570:25: note: step: 1,  init: bj_2728
encoder/me.c:570:25: note: Detected induction.
encoder/me.c:570:25: note: Analyze phi: bj_3569 = PHI <bj_3580(412), bj_432(414)>

encoder/me.c:570:25: note: Access function of PHI: bj_3569
encoder/me.c:570:25: note: Analyze phi: bsad_3566 = PHI <bsad_2727(412), bsad_434(414)>

encoder/me.c:570:25: note: Access function of PHI: bsad_3566
encoder/me.c:570:25: note: Analyze phi: bsad_3566 = PHI <bsad_2727(412), bsad_434(414)>

encoder/me.c:570:25: note: reduction used in loop.
encoder/me.c:570:25: note: Unknown def-use cycle pattern.
encoder/me.c:570:25: note: Analyze phi: bj_3569 = PHI <bj_3580(412), bj_432(414)>

encoder/me.c:570:25: note: reduction: not commutative/associative: bj_432 = bsad_2732 < bsad_3566 ? bj_3577 : bj_3569;

encoder/me.c:570:25: note: Unknown def-use cycle pattern.
encoder/me.c:570:25: note: === vect_pattern_recog ===
encoder/me.c:570:25: note: vect_is_simple_use: operand _2729
encoder/me.c:570:25: note: def_stmt: _2729 = (long unsigned int) bj_3577;
encoder/me.c:570:25: note: type of def: 3.
encoder/me.c:570:25: note: vect_is_simple_use: operand bj_3577
encoder/me.c:570:25: note: def_stmt: bj_3577 = PHI <bj_2728(412), bj_2733(414)>
encoder/me.c:570:25: note: type of def: 4.
encoder/me.c:570:25: note: vect_is_simple_use: operand 8
encoder/me.c:570:25: note: === vect_analyze_data_ref_accesses ===
encoder/me.c:570:25: note: Detected single element interleaving _2731->sad step 8
encoder/me.c:570:25: note: Data access with gaps requires scalar epilogue loop
encoder/me.c:570:25: note: === vect_mark_stmts_to_be_vectorized ===
encoder/me.c:570:25: note: init: phi relevant? bj_3577 = PHI <bj_2728(412), bj_2733(414)>
encoder/me.c:570:25: note: init: phi relevant? bj_3569 = PHI <bj_3580(412), bj_432(414)>
encoder/me.c:570:25: note: init: phi relevant? bsad_3566 = PHI <bsad_2727(412), bsad_434(414)>
encoder/me.c:570:25: note: init: stmt relevant? # DEBUG bsad => NULL
encoder/me.c:570:25: note: init: stmt relevant? # DEBUG bj => NULL
encoder/me.c:570:25: note: init: stmt relevant? # DEBUG j => NULL
encoder/me.c:570:25: note: init: stmt relevant? _2729 = (long unsigned int) bj_3577;
encoder/me.c:570:25: note: init: stmt relevant? _2730 = _2729 * 8;
encoder/me.c:570:25: note: init: stmt relevant? _2731 = mvsads_2571 + _2730;
encoder/me.c:570:25: note: init: stmt relevant? bsad_2732 = _2731->sad;
encoder/me.c:570:25: note: init: stmt relevant? bj_432 = bsad_2732 < bsad_3566 ? bj_3577 : bj_3569;
encoder/me.c:570:25: note: vec_stmt_relevant_p: used out of loop.
encoder/me.c:570:25: note: mark relevant 0, live 1.
encoder/me.c:570:25: note: init: stmt relevant? bsad_434 = MIN_EXPR <bsad_2732, bsad_3566>;
encoder/me.c:570:25: note: init: stmt relevant? # DEBUG bsad => bsad_434
encoder/me.c:570:25: note: init: stmt relevant? # DEBUG bj => bj_432
encoder/me.c:570:25: note: init: stmt relevant? bj_2733 = bj_3577 + 1;
encoder/me.c:570:25: note: init: stmt relevant? # DEBUG j => bj_2733
encoder/me.c:570:25: note: init: stmt relevant? # DEBUG bsad => bsad_434
encoder/me.c:570:25: note: init: stmt relevant? # DEBUG bj => bj_432
encoder/me.c:570:25: note: init: stmt relevant? # DEBUG j => bj_2733
encoder/me.c:570:25: note: init: stmt relevant? if (nmvsad_421 > bj_2733)
encoder/me.c:570:25: note: worklist: examine stmt: bj_432 = bsad_2732 < bsad_3566 ? bj_3577 : bj_3569;
encoder/me.c:570:25: note: vect_is_simple_use: operand bsad_2732
encoder/me.c:570:25: note: def_stmt: bsad_2732 = _2731->sad;
encoder/me.c:570:25: note: type of def: 3.
encoder/me.c:570:25: note: mark relevant 0, live 1.
encoder/me.c:570:25: note: vect_is_simple_use: operand bsad_3566
encoder/me.c:570:25: note: def_stmt: bsad_3566 = PHI <bsad_2727(412), bsad_434(414)>
encoder/me.c:570:25: note: Unsupported pattern.
encoder/me.c:570:25: note: not vectorized: unsupported use in stmt.
encoder/me.c:570:25: note: unexpected pattern.

Analyzing loop at encoder/me.c:553
encoder/me.c:553:21: note: ===== analyze_loop_nest =====
encoder/me.c:553:21: note: === vect_analyze_loop_form ===
encoder/me.c:553:21: note: not vectorized: control flow in loop.
encoder/me.c:553:21: note: bad loop form.

Analyzing loop at encoder/me.c:552
encoder/me.c:552:67: note: ===== analyze_loop_nest =====
encoder/me.c:552:67: note: === vect_analyze_loop_form ===
encoder/me.c:552:67: note: not vectorized: control flow in loop.
encoder/me.c:552:67: note: bad loop form.

Analyzing loop at encoder/me.c:504
encoder/me.c:504:17: note: ===== analyze_loop_nest =====
encoder/me.c:504:17: note: === vect_analyze_loop_form ===
encoder/me.c:504:17: note: not vectorized: multiple nested loops.
encoder/me.c:504:17: note: bad loop form.

Analyzing loop at encoder/me.c:530
encoder/me.c:530:21: note: ===== analyze_loop_nest =====
encoder/me.c:530:21: note: === vect_analyze_loop_form ===
encoder/me.c:530:21: note: not vectorized: control flow in loop.
encoder/me.c:530:21: note: bad loop form.

Analyzing loop at encoder/me.c:512
encoder/me.c:512:21: note: ===== analyze_loop_nest =====
encoder/me.c:512:21: note: === vect_analyze_loop_form ===
encoder/me.c:512:21: note: ===== analyze_loop_nest_1 =====
encoder/me.c:512:21: note: === vect_analyze_loop_form ===
encoder/me.c:512:21: note: not vectorized: control flow in loop.
encoder/me.c:512:21: note: bad inner-loop form.
encoder/me.c:512:21: note: not vectorized: Bad inner loop.
encoder/me.c:512:21: note: bad loop form.

Analyzing loop at encoder/me.c:517
encoder/me.c:517:25: note: ===== analyze_loop_nest =====
encoder/me.c:517:25: note: === vect_analyze_loop_form ===
encoder/me.c:517:25: note: not vectorized: control flow in loop.
encoder/me.c:517:25: note: bad loop form.

Analyzing loop at encoder/me.c:589
encoder/me.c:589:17: note: ===== analyze_loop_nest =====
encoder/me.c:589:17: note: === vect_analyze_loop_form ===
encoder/me.c:589:17: note: not vectorized: multiple nested loops.
encoder/me.c:589:17: note: bad loop form.

Analyzing loop at encoder/me.c:600
encoder/me.c:600:21: note: ===== analyze_loop_nest =====
encoder/me.c:600:21: note: === vect_analyze_loop_form ===
encoder/me.c:600:21: note: not vectorized: control flow in loop.
encoder/me.c:600:21: note: bad loop form.

Analyzing loop at encoder/me.c:597
encoder/me.c:597:21: note: ===== analyze_loop_nest =====
encoder/me.c:597:21: note: === vect_analyze_loop_form ===
encoder/me.c:597:21: note: not vectorized: control flow in loop.
encoder/me.c:597:21: note: bad loop form.

Analyzing loop at encoder/me.c:193
encoder/me.c:193:9: note: ===== analyze_loop_nest =====
encoder/me.c:193:9: note: === vect_analyze_loop_form ===
encoder/me.c:193:9: note: not vectorized: control flow in loop.
encoder/me.c:193:9: note: bad loop form.

Analyzing loop at encoder/me.c:217
encoder/me.c:217:9: note: ===== analyze_loop_nest =====
encoder/me.c:217:9: note: === vect_analyze_loop_form ===
encoder/me.c:217:9: note: not vectorized: control flow in loop.
encoder/me.c:217:9: note: bad loop form.
encoder/me.c:156:6: note: vectorized 0 loops in function.
x264_me_search_ref (struct x264_t * h, struct x264_me_t * m, int16_t[2] * mvc, int i_mvc, int * p_halfpel_thresh)
{
  uint16_t output[4];
  int D.10652;
  intptr_t i_mvc;
  int qpel;
  int hpel;
  int ycost;
  uint64_t t;
  int bsad;
  int bj;
  int mx;
  int sads[3];
  uint8_t * ref;
  int ycost;
  int bsad;
  int sad_thresh;
  int nmvsad;
  struct mvsad_t * mvsads;
  uint16_t * cost_fpel_mvx;
  int xn;
  int16_t * xs;
  int16_t xs_buf[64];
  int delta;
  int sad_size;
  int enc_dc[4];
  static uint8_t zero[128];
  uint16_t * sums_base;
  const int stride;
  const int width;
  const int max_y;
  const int max_x;
  const int min_x;
  uint8_t * pix_base;
  uint8_t * pix_base;
  uint8_t * pix_base;
  uint8_t * pix_base;
  static const int hex4[16][2] = {{-4, 2}, {-4, 1}, {-4, 0}, {-4, -1}, {-4, -2}, {4, -2}, {4, -1}, {4, 0}, {4, 1}, {4, 2}, {2, 3}, {0, 4}, {-2, 3}, {-2, -3}, {0, -4}, {2, -3}};
  uint8_t * pix_base;
  uint8_t * pix_base;
  uint8_t * pix_base;
  int denom;
  int mvd_ctx;
  int sad_ctx;
  int mvd;
  static const int range_mul[4][4] = {{3, 3, 4, 4}, {3, 4, 4, 4}, {4, 4, 4, 5}, {4, 4, 5, 6}};
  uint8_t * pix_base;
  uint8_t * pix_base;
  uint8_t * pix_base;
  uint8_t * pix_base;
  int range;
  uint8_t * pix_base;
  uint8_t * pix_base;
  uint8_t * pix_base;
  uint8_t * pix_base;
  static const int x264_pixel_size_shift[7] = {0, 1, 1, 2, 3, 3, 4};
  uint8_t * pix_base;
  uint8_t * pix_base;
  uint8_t * pix_base;
  uint8_t * pix_base;
  uint8_t * pix_base;
  uint8_t * pix_base;
  int my;
  int mx;
  uint8_t * src;
  int stride;
  uint8_t * src;
  int stride;
  const int16_t * p_cost_mvy;
  const int16_t * p_cost_mvx;
  int mv_y_max;
  int mv_x_max;
  int mv_y_min;
  int mv_x_min;
  int costs[6];
  int dir;
  int j;
  int i;
  uint8_t pix[256];
  uint8_t * p_fref;
  int bpred_cost;
  int bcost;
  int bmy;
  int bmx;
  int i_me_range;
  const int bh;
  const int bw;
  int _377;
  _Bool _425;
  int _469;
  int _506;
  int16_t * _517;
  short int _518;
  long unsigned int _519;
  long unsigned int _520;
  sizetype _521;
  short int _524;
  long unsigned int _525;
  long unsigned int _526;
  sizetype _527;
  int _529;
  int _532;
  _Bool _534;
  int _535;
  int _537;
  int _540;
  int _542;
  int _544;
  uint8_t * (*<Tf83>) (uint8_t *, int *, uint8_t * *, int, int, int, int, int) _548;
  int _549;
  uint8_t *[6] * _550;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _553;
  int stride.0_554;
  uint8_t * _555;
  int _557;
  long unsigned int _558;
  long unsigned int _559;
  const int16_t * _560;
  short int _561;
  int _562;
  int _563;
  long unsigned int _564;
  long unsigned int _565;
  const int16_t * _566;
  short int _567;
  int _568;
  long unsigned int _575;
  long unsigned int _576;
  uint32_t * _578;
  unsigned int _579;
  short int _588;
  int _589;
  short int _596;
  int _597;
  unsigned int _598;
  uint8_t * (*<Tf83>) (uint8_t *, int *, uint8_t * *, int, int, int, int, int) _601;
  int _602;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _606;
  int stride.1_607;
  uint8_t * _608;
  int _610;
  long unsigned int _611;
  long unsigned int _612;
  const int16_t * _613;
  short int _614;
  int _615;
  int _616;
  long unsigned int _617;
  long unsigned int _618;
  const int16_t * _619;
  short int _620;
  int _621;
  int _628;
  int _630;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _632;
  int _633;
  int _634;
  int _635;
  sizetype _636;
  uint8_t * _637;
  uint8_t * _638;
  int _640;
  int _641;
  long unsigned int _642;
  long unsigned int _643;
  const int16_t * _644;
  short int _645;
  int _646;
  int _647;
  long unsigned int _648;
  long unsigned int _649;
  const int16_t * _650;
  short int _651;
  int _652;
  int _653;
  _Bool _657;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _658;
  int _659;
  int _660;
  int _661;
  sizetype _662;
  uint8_t * _663;
  uint8_t * _664;
  int _666;
  int _667;
  long unsigned int _668;
  long unsigned int _669;
  const int16_t * _670;
  short int _671;
  int _672;
  int _673;
  long unsigned int _674;
  long unsigned int _675;
  const int16_t * _676;
  short int _677;
  int _678;
  int _679;
  int _682;
  _Bool _685;
  _Bool _686;
  long unsigned int _695;
  long unsigned int _696;
  int16_t[2] * _697;
  short int _698;
  int _699;
  int _700;
  short int _704;
  int _705;
  int _706;
  int _708;
  int _709;
  int _710;
  int _711;
  int _712;
  int _714;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _715;
  int _716;
  int _717;
  int _718;
  sizetype _719;
  uint8_t * _720;
  uint8_t * _721;
  int _723;
  int _724;
  long unsigned int _725;
  long unsigned int _726;
  const int16_t * _727;
  short int _728;
  int _729;
  int _730;
  long unsigned int _731;
  long unsigned int _732;
  const int16_t * _733;
  short int _734;
  int _735;
  int _736;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _742;
  int _743;
  uint8_t * _744;
  int _746;
  short int _747;
  int _748;
  short int _749;
  int _750;
  int _751;
  int _754;
  sizetype _755;
  int _756;
  int _757;
  sizetype _758;
  sizetype _759;
  void (*<Tee4>) (uint8_t *, uint8_t *, uint8_t *, uint8_t *, uint8_t *, int, int *) _761;
  uint8_t * _762;
  uint8_t * _763;
  sizetype _764;
  uint8_t * _765;
  int _766;
  sizetype _767;
  uint8_t * _768;
  uint8_t * _769;
  int _771;
  int _772;
  long unsigned int _773;
  long unsigned int _774;
  const int16_t * _775;
  short int _776;
  int _777;
  int _779;
  long unsigned int _780;
  long unsigned int _781;
  const int16_t * _782;
  short int _783;
  int _784;
  int _785;
  int _788;
  int _790;
  long unsigned int _791;
  long unsigned int _792;
  const int16_t * _793;
  short int _794;
  int _795;
  int _796;
  int _799;
  int _801;
  long unsigned int _802;
  long unsigned int _803;
  const int16_t * _804;
  short int _805;
  int _806;
  int _807;
  long unsigned int _808;
  long unsigned int _809;
  const int16_t * _810;
  short int _811;
  int _812;
  int _813;
  int _816;
  int _818;
  long unsigned int _819;
  long unsigned int _820;
  const int16_t * _821;
  short int _822;
  int _823;
  int _824;
  _Bool _827;
  _Bool _829;
  _Bool _830;
  _Bool _831;
  _Bool _832;
  _Bool _833;
  _Bool _834;
  _Bool _835;
  sizetype _837;
  int _838;
  int _839;
  sizetype _840;
  sizetype _841;
  void (*<Tee4>) (uint8_t *, uint8_t *, uint8_t *, uint8_t *, uint8_t *, int, int *) _843;
  uint8_t * _844;
  uint8_t * _845;
  sizetype _846;
  uint8_t * _847;
  int _848;
  sizetype _849;
  uint8_t * _850;
  uint8_t * _851;
  int _853;
  int _854;
  long unsigned int _855;
  long unsigned int _856;
  const int16_t * _857;
  short int _858;
  int _859;
  int _861;
  long unsigned int _862;
  long unsigned int _863;
  const int16_t * _864;
  short int _865;
  int _866;
  int _867;
  int _870;
  int _872;
  long unsigned int _873;
  long unsigned int _874;
  const int16_t * _875;
  short int _876;
  int _877;
  int _878;
  int _881;
  int _883;
  long unsigned int _884;
  long unsigned int _885;
  const int16_t * _886;
  short int _887;
  int _888;
  int _889;
  long unsigned int _890;
  long unsigned int _891;
  const int16_t * _892;
  short int _893;
  int _894;
  int _895;
  int _898;
  int _900;
  long unsigned int _901;
  long unsigned int _902;
  const int16_t * _903;
  short int _904;
  int _905;
  int _906;
  int _909;
  void (*<Tee4>) (uint8_t *, uint8_t *, uint8_t *, uint8_t *, uint8_t *, int, int *) _910;
  uint8_t * _911;
  uint8_t * _912;
  int _913;
  sizetype _914;
  uint8_t * _915;
  int _916;
  sizetype _917;
  uint8_t * _918;
  uint8_t * _919;
  int _921;
  short int _922;
  int _923;
  short int _924;
  int _925;
  int _926;
  int _929;
  short int _930;
  int _931;
  int _932;
  int _935;
  short int _936;
  int _937;
  short int _938;
  int _939;
  int _940;
  int _943;
  short int _944;
  int _945;
  int _946;
  int _949;
  int _950;
  int _951;
  int _952;
  int _954;
  int _955;
  sizetype _956;
  sizetype _957;
  void (*<Tee4>) (uint8_t *, uint8_t *, uint8_t *, uint8_t *, uint8_t *, int, int *) _959;
  uint8_t * _960;
  uint8_t * _961;
  sizetype _962;
  uint8_t * _963;
  int _964;
  sizetype _965;
  uint8_t * _966;
  uint8_t * _967;
  int _969;
  int _970;
  long unsigned int _971;
  long unsigned int _972;
  const int16_t * _973;
  short int _974;
  int _975;
  int _977;
  long unsigned int _978;
  long unsigned int _979;
  const int16_t * _980;
  short int _981;
  int _982;
  int _983;
  int _986;
  int _988;
  long unsigned int _989;
  long unsigned int _990;
  const int16_t * _991;
  short int _992;
  int _993;
  int _994;
  int _997;
  int _999;
  long unsigned int _1000;
  long unsigned int _1001;
  const int16_t * _1002;
  short int _1003;
  int _1004;
  int _1005;
  long unsigned int _1006;
  long unsigned int _1007;
  const int16_t * _1008;
  short int _1009;
  int _1010;
  int _1011;
  int _1014;
  int _1016;
  long unsigned int _1017;
  long unsigned int _1018;
  const int16_t * _1019;
  short int _1020;
  int _1021;
  int _1022;
  int _1025;
  int _1026;
  int _1028;
  int _1029;
  sizetype _1030;
  sizetype _1031;
  void (*<Tee4>) (uint8_t *, uint8_t *, uint8_t *, uint8_t *, uint8_t *, int, int *) _1033;
  uint8_t * _1034;
  int _1035;
  sizetype _1036;
  sizetype _1037;
  uint8_t * _1038;
  sizetype _1039;
  uint8_t * _1040;
  int _1041;
  sizetype _1042;
  uint8_t * _1043;
  uint8_t * _1044;
  int _1046;
  int _1047;
  long unsigned int _1048;
  long unsigned int _1049;
  const int16_t * _1050;
  short int _1051;
  int _1052;
  const int16_t * _1057;
  short int _1058;
  int _1059;
  int _1060;
  int _1063;
  int _1065;
  long unsigned int _1066;
  long unsigned int _1067;
  const int16_t * _1068;
  short int _1069;
  int _1070;
  int _1072;
  long unsigned int _1073;
  long unsigned int _1074;
  const int16_t * _1075;
  short int _1076;
  int _1077;
  int _1078;
  int _1081;
  int _1083;
  long unsigned int _1084;
  long unsigned int _1085;
  const int16_t * _1086;
  short int _1087;
  int _1088;
  int _1089;
  int _1092;
  const int16_t * _1097;
  short int _1098;
  int _1099;
  int _1100;
  long unsigned int _1101;
  long unsigned int _1102;
  const int16_t * _1103;
  short int _1104;
  int _1105;
  int _1106;
  int _1109;
  int _1110;
  sizetype _1111;
  sizetype _1112;
  void (*<Tee4>) (uint8_t *, uint8_t *, uint8_t *, uint8_t *, uint8_t *, int, int *) _1114;
  int _1115;
  sizetype _1116;
  uint8_t * _1117;
  sizetype _1118;
  sizetype _1119;
  uint8_t * _1120;
  sizetype _1121;
  uint8_t * _1122;
  uint8_t * _1123;
  uint8_t * _1124;
  int _1126;
  const int16_t * _1131;
  short int _1132;
  int _1133;
  short int _1134;
  int _1135;
  int _1136;
  int _1139;
  short int _1140;
  int _1141;
  int _1143;
  long unsigned int _1144;
  long unsigned int _1145;
  const int16_t * _1146;
  short int _1147;
  int _1148;
  int _1149;
  int _1152;
  short int _1153;
  int _1154;
  int _1155;
  int _1158;
  short int _1159;
  int _1160;
  const int16_t * _1165;
  short int _1166;
  int _1167;
  int _1168;
  int _1171;
  int _1172;
  int _1174;
  int _1175;
  int _1176;
  int _1178;
  int _1179;
  sizetype _1180;
  sizetype _1181;
  void (*<Tee4>) (uint8_t *, uint8_t *, uint8_t *, uint8_t *, uint8_t *, int, int *) _1183;
  int _1184;
  sizetype _1185;
  sizetype _1186;
  uint8_t * _1187;
  sizetype _1188;
  sizetype _1189;
  uint8_t * _1190;
  uint8_t * _1191;
  uint8_t * _1192;
  uint8_t * _1193;
  int _1195;
  int _1197;
  long unsigned int _1198;
  long unsigned int _1199;
  const int16_t * _1200;
  short int _1201;
  int _1202;
  short int _1203;
  int _1204;
  int _1205;
  int _1208;
  int _1210;
  long unsigned int _1211;
  long unsigned int _1212;
  const int16_t * _1213;
  short int _1214;
  int _1215;
  int _1216;
  int _1219;
  int _1220;
  int _1222;
  long unsigned int _1223;
  long unsigned int _1224;
  const int16_t * _1225;
  short int _1226;
  int _1227;
  int _1228;
  int _1231;
  int _1232;
  int _1234;
  long unsigned int _1235;
  long unsigned int _1236;
  const int16_t * _1237;
  short int _1238;
  int _1239;
  int _1240;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _1245;
  int _1246;
  int _1247;
  int _1248;
  sizetype _1249;
  uint8_t * _1250;
  uint8_t * _1251;
  int _1253;
  int _1254;
  long unsigned int _1255;
  long unsigned int _1256;
  const int16_t * _1257;
  short int _1258;
  int _1259;
  short int _1260;
  int _1261;
  int _1262;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _1265;
  int _1266;
  int _1267;
  int _1268;
  sizetype _1269;
  uint8_t * _1270;
  uint8_t * _1271;
  int _1273;
  int _1274;
  long unsigned int _1275;
  long unsigned int _1276;
  const int16_t * _1277;
  short int _1278;
  int _1279;
  short int _1280;
  int _1281;
  int _1282;
  int _1285;
  int _1286;
  int _1287;
  int _1289;
  int _1290;
  sizetype _1291;
  sizetype _1292;
  void (*<Tee4>) (uint8_t *, uint8_t *, uint8_t *, uint8_t *, uint8_t *, int, int *) _1294;
  int _1295;
  int _1296;
  sizetype _1297;
  uint8_t * _1298;
  int _1299;
  int _1300;
  sizetype _1301;
  uint8_t * _1302;
  int _1303;
  int _1304;
  sizetype _1305;
  uint8_t * _1306;
  int _1307;
  sizetype _1308;
  uint8_t * _1309;
  uint8_t * _1310;
  int _1312;
  short int _1313;
  int _1314;
  int _1316;
  long unsigned int _1317;
  long unsigned int _1318;
  const int16_t * _1319;
  short int _1320;
  int _1321;
  int _1322;
  int _1325;
  int _1327;
  long unsigned int _1328;
  long unsigned int _1329;
  const int16_t * _1330;
  short int _1331;
  int _1332;
  int _1333;
  int _1336;
  int _1338;
  long unsigned int _1339;
  long unsigned int _1340;
  const int16_t * _1341;
  short int _1342;
  int _1343;
  int _1344;
  int _1347;
  int _1349;
  long unsigned int _1350;
  long unsigned int _1351;
  const int16_t * _1352;
  short int _1353;
  int _1354;
  int _1355;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _1360;
  int _1361;
  int _1362;
  int _1363;
  sizetype _1364;
  uint8_t * _1365;
  uint8_t * _1366;
  int _1368;
  short int _1369;
  int _1370;
  int _1371;
  long unsigned int _1372;
  long unsigned int _1373;
  const int16_t * _1374;
  short int _1375;
  int _1376;
  int _1377;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _1380;
  int _1381;
  int _1382;
  int _1383;
  sizetype _1384;
  uint8_t * _1385;
  uint8_t * _1386;
  int _1388;
  short int _1389;
  int _1390;
  int _1391;
  long unsigned int _1392;
  long unsigned int _1393;
  const int16_t * _1394;
  short int _1395;
  int _1396;
  int _1397;
  int _1400;
  int _1401;
  sizetype _1402;
  sizetype _1403;
  void (*<Tee4>) (uint8_t *, uint8_t *, uint8_t *, uint8_t *, uint8_t *, int, int *) _1405;
  int _1406;
  sizetype _1407;
  sizetype _1408;
  uint8_t * _1409;
  sizetype _1410;
  uint8_t * _1411;
  int _1412;
  sizetype _1413;
  sizetype _1414;
  uint8_t * _1415;
  sizetype _1416;
  uint8_t * _1417;
  uint8_t * _1418;
  int _1420;
  short int _1421;
  int _1422;
  short int _1423;
  int _1424;
  int _1425;
  int _1428;
  short int _1429;
  int _1430;
  int _1431;
  int _1434;
  short int _1435;
  int _1436;
  short int _1437;
  int _1438;
  int _1439;
  int _1442;
  short int _1443;
  int _1444;
  int _1445;
  int _1448;
  int _1449;
  sizetype _1450;
  sizetype _1451;
  void (*<Tee4>) (uint8_t *, uint8_t *, uint8_t *, uint8_t *, uint8_t *, int, int *) _1453;
  int _1454;
  sizetype _1455;
  sizetype _1456;
  uint8_t * _1457;
  sizetype _1458;
  uint8_t * _1459;
  sizetype _1460;
  sizetype _1461;
  uint8_t * _1462;
  sizetype _1463;
  uint8_t * _1464;
  uint8_t * _1465;
  int _1467;
  short int _1468;
  int _1469;
  short int _1470;
  int _1471;
  int _1472;
  int _1475;
  short int _1476;
  int _1477;
  int _1478;
  int _1481;
  short int _1482;
  int _1483;
  short int _1484;
  int _1485;
  int _1486;
  int _1489;
  short int _1490;
  int _1491;
  int _1492;
  short int _1496;
  int _1497;
  short int _1498;
  int _1499;
  int _1500;
  int _1501;
  short int _1502;
  int _1503;
  short int _1504;
  int _1505;
  int _1506;
  int _1507;
  short int _1510;
  int _1511;
  short int _1512;
  int _1513;
  int _1514;
  int _1515;
  short int _1516;
  int _1517;
  short int _1518;
  int _1519;
  int _1520;
  int _1521;
  long int _1523;
  int _1524;
  int _1527;
  int _1528;
  int _1529;
  int _1530;
  int _1533;
  int _1534;
  int _1535;
  int _1542;
  int _1543;
  sizetype _1544;
  sizetype _1545;
  void (*<Tee4>) (uint8_t *, uint8_t *, uint8_t *, uint8_t *, uint8_t *, int, int *) _1547;
  int _1548;
  sizetype _1549;
  sizetype _1550;
  uint8_t * _1551;
  sizetype _1552;
  sizetype _1553;
  uint8_t * _1554;
  uint8_t * _1555;
  uint8_t * _1556;
  uint8_t * _1557;
  int _1559;
  int _1561;
  long unsigned int _1562;
  long unsigned int _1563;
  const int16_t * _1564;
  short int _1565;
  int _1566;
  short int _1571;
  int _1572;
  int _1573;
  int _1576;
  int _1578;
  long unsigned int _1579;
  long unsigned int _1580;
  const int16_t * _1581;
  short int _1582;
  int _1583;
  int _1584;
  int _1587;
  int _1588;
  int _1590;
  long unsigned int _1591;
  long unsigned int _1592;
  const int16_t * _1593;
  short int _1594;
  int _1595;
  int _1596;
  int _1599;
  int _1600;
  int _1602;
  long unsigned int _1603;
  long unsigned int _1604;
  const int16_t * _1605;
  short int _1606;
  int _1607;
  int _1608;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _1613;
  int _1614;
  int _1615;
  int _1616;
  sizetype _1617;
  uint8_t * _1618;
  uint8_t * _1619;
  int _1621;
  int _1622;
  long unsigned int _1623;
  long unsigned int _1624;
  const int16_t * _1625;
  short int _1626;
  int _1627;
  int _1628;
  long unsigned int _1629;
  long unsigned int _1630;
  const int16_t * _1631;
  short int _1632;
  int _1633;
  int _1634;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _1637;
  int _1638;
  int _1639;
  int _1640;
  sizetype _1641;
  uint8_t * _1642;
  uint8_t * _1643;
  int _1645;
  int _1646;
  long unsigned int _1647;
  long unsigned int _1648;
  const int16_t * _1649;
  short int _1650;
  int _1651;
  int _1652;
  long unsigned int _1653;
  long unsigned int _1654;
  const int16_t * _1655;
  short int _1656;
  int _1657;
  int _1658;
  int _1661;
  int _1667;
  int _1668;
  sizetype _1669;
  sizetype _1670;
  void (*<Tee4>) (uint8_t *, uint8_t *, uint8_t *, uint8_t *, uint8_t *, int, int *) _1672;
  int _1673;
  int _1674;
  sizetype _1675;
  uint8_t * _1676;
  int _1677;
  int _1678;
  sizetype _1679;
  uint8_t * _1680;
  int _1681;
  int _1682;
  sizetype _1683;
  uint8_t * _1684;
  int _1685;
  sizetype _1686;
  uint8_t * _1687;
  uint8_t * _1688;
  int _1690;
  short int _1695;
  int _1696;
  int _1698;
  long unsigned int _1699;
  long unsigned int _1700;
  const int16_t * _1701;
  short int _1702;
  int _1703;
  int _1704;
  int _1707;
  int _1709;
  long unsigned int _1710;
  long unsigned int _1711;
  const int16_t * _1712;
  short int _1713;
  int _1714;
  int _1715;
  int _1718;
  int _1720;
  long unsigned int _1721;
  long unsigned int _1722;
  const int16_t * _1723;
  short int _1724;
  int _1725;
  int _1726;
  int _1729;
  int _1731;
  long unsigned int _1732;
  long unsigned int _1733;
  const int16_t * _1734;
  short int _1735;
  int _1736;
  int _1737;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _1742;
  int _1743;
  int _1744;
  int _1745;
  sizetype _1746;
  uint8_t * _1747;
  uint8_t * _1748;
  int _1750;
  int _1751;
  long unsigned int _1752;
  long unsigned int _1753;
  const int16_t * _1754;
  short int _1755;
  int _1756;
  int _1757;
  long unsigned int _1758;
  long unsigned int _1759;
  const int16_t * _1760;
  short int _1761;
  int _1762;
  int _1763;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _1766;
  int _1767;
  int _1768;
  int _1769;
  sizetype _1770;
  uint8_t * _1771;
  uint8_t * _1772;
  int _1774;
  int _1775;
  long unsigned int _1776;
  long unsigned int _1777;
  const int16_t * _1778;
  short int _1779;
  int _1780;
  int _1781;
  long unsigned int _1782;
  long unsigned int _1783;
  const int16_t * _1784;
  short int _1785;
  int _1786;
  int _1787;
  int _1791;
  int _1792;
  sizetype _1793;
  sizetype _1794;
  void (*<Tee4>) (uint8_t *, uint8_t *, uint8_t *, uint8_t *, uint8_t *, int, int *) _1796;
  int _1797;
  sizetype _1798;
  sizetype _1799;
  uint8_t * _1800;
  int _1801;
  sizetype _1802;
  sizetype _1803;
  uint8_t * _1804;
  sizetype _1805;
  uint8_t * _1806;
  sizetype _1807;
  uint8_t * _1808;
  uint8_t * _1809;
  int _1811;
  short int _1817;
  int _1818;
  short int _1824;
  int _1825;
  int _1826;
  int _1829;
  short int _1835;
  int _1836;
  int _1837;
  int _1840;
  short int _1846;
  int _1847;
  int _1848;
  int _1851;
  int _1852;
  int _1855;
  int _1863;
  int _1864;
  int _1866;
  int _1867;
  _Bool _1869;
  _Bool _1870;
  _Bool _1871;
  _Bool _1872;
  _Bool _1873;
  _Bool _1874;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _1875;
  int _1876;
  int _1877;
  int _1878;
  sizetype _1879;
  uint8_t * _1880;
  uint8_t * _1881;
  int _1883;
  int _1884;
  long unsigned int _1885;
  long unsigned int _1886;
  const int16_t * _1887;
  short int _1888;
  int _1889;
  int _1890;
  long unsigned int _1891;
  long unsigned int _1892;
  const int16_t * _1893;
  short int _1894;
  int _1895;
  int _1896;
  sizetype _1899;
  int _1900;
  int _1901;
  sizetype _1902;
  sizetype _1903;
  void (*<Tee4>) (uint8_t *, uint8_t *, uint8_t *, uint8_t *, uint8_t *, int, int *) _1905;
  int _1906;
  sizetype _1907;
  int _1908;
  int _1909;
  sizetype _1910;
  sizetype _1911;
  uint8_t * _1912;
  uint8_t * _1913;
  int _1914;
  sizetype _1915;
  sizetype _1916;
  uint8_t * _1917;
  int _1918;
  int _1919;
  sizetype _1920;
  sizetype _1921;
  uint8_t * _1922;
  uint8_t * _1923;
  int _1925;
  int _1927;
  long unsigned int _1928;
  long unsigned int _1929;
  const int16_t * _1930;
  short int _1931;
  int _1932;
  int _1934;
  long unsigned int _1935;
  long unsigned int _1936;
  const int16_t * _1937;
  short int _1938;
  int _1939;
  int _1940;
  int _1943;
  int _1945;
  long unsigned int _1946;
  long unsigned int _1947;
  const int16_t * _1948;
  short int _1949;
  int _1950;
  int _1951;
  int _1954;
  int _1955;
  long unsigned int _1956;
  long unsigned int _1957;
  const int16_t * _1958;
  short int _1959;
  int _1960;
  int _1961;
  int _1964;
  int _1966;
  long unsigned int _1967;
  long unsigned int _1968;
  const int16_t * _1969;
  short int _1970;
  int _1971;
  int _1972;
  int _1975;
  int _1976;
  sizetype _1977;
  sizetype _1978;
  void (*<Tee4>) (uint8_t *, uint8_t *, uint8_t *, uint8_t *, uint8_t *, int, int *) _1980;
  sizetype _1981;
  uint8_t * _1982;
  int _1983;
  sizetype _1984;
  sizetype _1985;
  uint8_t * _1986;
  int _1987;
  int _1988;
  sizetype _1989;
  sizetype _1990;
  uint8_t * _1991;
  sizetype _1992;
  uint8_t * _1993;
  uint8_t * _1994;
  int _1996;
  short int _1997;
  int _1998;
  int _2000;
  long unsigned int _2001;
  long unsigned int _2002;
  const int16_t * _2003;
  short int _2004;
  int _2005;
  int _2006;
  int _2009;
  int _2011;
  long unsigned int _2012;
  long unsigned int _2013;
  const int16_t * _2014;
  short int _2015;
  int _2016;
  int _2017;
  int _2020;
  short int _2021;
  int _2022;
  int _2023;
  int _2026;
  short int _2027;
  int _2028;
  int _2029;
  int _2032;
  int _2033;
  sizetype _2034;
  sizetype _2035;
  void (*<Tee4>) (uint8_t *, uint8_t *, uint8_t *, uint8_t *, uint8_t *, int, int *) _2037;
  int _2038;
  sizetype _2039;
  uint8_t * _2040;
  sizetype _2041;
  int _2042;
  int _2043;
  sizetype _2044;
  sizetype _2045;
  uint8_t * _2046;
  int _2047;
  sizetype _2048;
  sizetype _2049;
  uint8_t * _2050;
  int _2051;
  sizetype _2052;
  sizetype _2053;
  uint8_t * _2054;
  uint8_t * _2055;
  int _2057;
  short int _2058;
  int _2059;
  short int _2060;
  int _2061;
  int _2062;
  int _2065;
  short int _2066;
  int _2067;
  int _2068;
  int _2071;
  int _2073;
  long unsigned int _2074;
  long unsigned int _2075;
  const int16_t * _2076;
  short int _2077;
  int _2078;
  int _2080;
  long unsigned int _2081;
  long unsigned int _2082;
  const int16_t * _2083;
  short int _2084;
  int _2085;
  int _2086;
  int _2089;
  int _2090;
  long unsigned int _2091;
  long unsigned int _2092;
  const int16_t * _2093;
  short int _2094;
  int _2095;
  int _2097;
  long unsigned int _2098;
  long unsigned int _2099;
  const int16_t * _2100;
  short int _2101;
  int _2102;
  int _2103;
  int _2106;
  int _2107;
  sizetype _2108;
  sizetype _2109;
  void (*<Tee4>) (uint8_t *, uint8_t *, uint8_t *, uint8_t *, uint8_t *, int, int *) _2111;
  int _2112;
  int _2113;
  sizetype _2114;
  sizetype _2115;
  uint8_t * _2116;
  int _2117;
  sizetype _2118;
  uint8_t * _2119;
  sizetype _2120;
  sizetype _2121;
  uint8_t * _2122;
  int _2123;
  sizetype _2124;
  sizetype _2125;
  uint8_t * _2126;
  uint8_t * _2127;
  int _2129;
  int _2131;
  long unsigned int _2132;
  long unsigned int _2133;
  const int16_t * _2134;
  short int _2135;
  int _2136;
  short int _2137;
  int _2138;
  int _2139;
  int _2142;
  int _2144;
  long unsigned int _2145;
  long unsigned int _2146;
  const int16_t * _2147;
  short int _2148;
  int _2149;
  int _2150;
  int _2153;
  short int _2154;
  int _2155;
  int _2157;
  long unsigned int _2158;
  long unsigned int _2159;
  const int16_t * _2160;
  short int _2161;
  int _2162;
  int _2163;
  int _2166;
  short int _2167;
  int _2168;
  int _2169;
  int _2175;
  int _2176;
  sizetype _2177;
  sizetype _2178;
  void (*<Tedd>) (uint8_t *, uint8_t *, uint8_t *, uint8_t *, int, int *) _2180;
  int _2181;
  sizetype _2182;
  sizetype _2183;
  uint8_t * _2184;
  sizetype _2185;
  uint8_t * _2186;
  uint8_t * _2187;
  uint8_t * _2188;
  int _2190;
  const int16_t * _2195;
  short int _2196;
  int _2197;
  const int16_t * _2201;
  short int _2202;
  int _2203;
  int _2204;
  int _2205;
  int _2207;
  const int16_t * _2212;
  short int _2213;
  int _2214;
  const int16_t * _2219;
  short int _2220;
  int _2221;
  int _2222;
  int _2223;
  int _2225;
  const int16_t * _2230;
  short int _2231;
  int _2232;
  int _2233;
  int _2234;
  int _2236;
  int _2237;
  sizetype _2238;
  sizetype _2239;
  void (*<Tedd>) (uint8_t *, uint8_t *, uint8_t *, uint8_t *, int, int *) _2241;
  int _2242;
  sizetype _2243;
  sizetype _2244;
  uint8_t * _2245;
  sizetype _2246;
  uint8_t * _2247;
  uint8_t * _2248;
  uint8_t * _2249;
  int _2251;
  const int16_t * _2256;
  short int _2257;
  int _2258;
  short int _2259;
  int _2260;
  int _2261;
  int _2264;
  short int _2265;
  int _2266;
  const int16_t * _2271;
  short int _2272;
  int _2273;
  int _2274;
  int _2277;
  short int _2278;
  int _2279;
  int _2280;
  _Bool _2292;
  _Bool _2293;
  _Bool _2294;
  _Bool _2295;
  _Bool _2296;
  _Bool _2297;
  int _2298;
  sizetype _2300;
  int _2301;
  int _2302;
  sizetype _2303;
  sizetype _2304;
  void (*<Tedd>) (uint8_t *, uint8_t *, uint8_t *, uint8_t *, int, int *) _2306;
  int _2307;
  int _2308;
  sizetype _2309;
  int _2310;
  int _2311;
  sizetype _2312;
  sizetype _2313;
  uint8_t * _2314;
  int _2316;
  sizetype _2317;
  int _2318;
  int _2319;
  sizetype _2320;
  sizetype _2321;
  uint8_t * _2322;
  int _2323;
  sizetype _2324;
  int _2325;
  int _2326;
  sizetype _2327;
  sizetype _2328;
  uint8_t * _2329;
  uint8_t * _2330;
  int _2332;
  int _2333;
  int _2334;
  long unsigned int _2335;
  long unsigned int _2336;
  const int16_t * _2337;
  short int _2338;
  int _2339;
  int _2340;
  int _2341;
  long unsigned int _2342;
  long unsigned int _2343;
  const int16_t * _2344;
  short int _2345;
  int _2346;
  int _2347;
  int _2350;
  int _2351;
  int _2352;
  long unsigned int _2353;
  long unsigned int _2354;
  const int16_t * _2355;
  short int _2356;
  int _2357;
  int _2358;
  int _2359;
  long unsigned int _2360;
  long unsigned int _2361;
  const int16_t * _2362;
  short int _2363;
  int _2364;
  int _2365;
  int _2368;
  int _2369;
  int _2370;
  long unsigned int _2371;
  long unsigned int _2372;
  const int16_t * _2373;
  short int _2374;
  int _2375;
  int _2376;
  int _2377;
  long unsigned int _2378;
  long unsigned int _2379;
  const int16_t * _2380;
  short int _2381;
  int _2382;
  int _2383;
  int _2387;
  int _2388;
  int _2390;
  int _2394;
  int _2395;
  sizetype _2396;
  sizetype _2397;
  void (*<Tee4>) (uint8_t *, uint8_t *, uint8_t *, uint8_t *, uint8_t *, int, int *) _2399;
  uint8_t * _2400;
  uint8_t * _2401;
  sizetype _2402;
  uint8_t * _2403;
  int _2404;
  sizetype _2405;
  uint8_t * _2406;
  uint8_t * _2407;
  int _2409;
  int _2410;
  long unsigned int _2411;
  long unsigned int _2412;
  const int16_t * _2413;
  short int _2414;
  int _2415;
  int _2417;
  long unsigned int _2418;
  long unsigned int _2419;
  const int16_t * _2420;
  short int _2421;
  int _2422;
  int _2423;
  int _2426;
  int _2428;
  long unsigned int _2429;
  long unsigned int _2430;
  const int16_t * _2431;
  short int _2432;
  int _2433;
  int _2434;
  int _2437;
  short int _2443;
  int _2444;
  short int _2449;
  int _2450;
  int _2451;
  int _2454;
  short int _2460;
  int _2461;
  int _2462;
  int _2465;
  int _2466;
  sizetype _2467;
  sizetype _2468;
  void (*<Tee4>) (uint8_t *, uint8_t *, uint8_t *, uint8_t *, uint8_t *, int, int *) _2470;
  sizetype _2471;
  sizetype _2472;
  uint8_t * _2473;
  int _2474;
  sizetype _2475;
  sizetype _2476;
  uint8_t * _2477;
  sizetype _2478;
  uint8_t * _2479;
  sizetype _2480;
  uint8_t * _2481;
  uint8_t * _2482;
  int _2484;
  short int _2485;
  int _2486;
  short int _2487;
  int _2488;
  int _2489;
  int _2492;
  short int _2493;
  int _2494;
  int _2495;
  int _2498;
  short int _2499;
  int _2500;
  int _2501;
  int _2504;
  int _2505;
  int _2508;
  int _2510;
  int _2512;
  int _2514;
  int _2516;
  int _2517;
  int _2522;
  unsigned int _2523;
  unsigned int _2524;
  int _2525;
  int _2528;
  short int _2529;
  int _2530;
  int _2531;
  int _2532;
  uint16_t * _2533;
  int _2534;
  long unsigned int _2535;
  long unsigned int _2536;
  void (*<Tee4>) (uint8_t *, uint8_t *, uint8_t *, uint8_t *, uint8_t *, int, int *) _2538;
  uint8_t * _2539;
  uint8_t * _2544;
  uint8_t * _2545;
  uint8_t * _2546;
  struct x264_frame_t * _2548;
  int _2549;
  int _2550;
  int _2551;
  long unsigned int _2552;
  long unsigned int _2553;
  _Bool _2556;
  _Bool _2560;
  int _2561;
  int _2563;
  int _2564;
  int _2565;
  int _2566;
  unsigned int _2567;
  unsigned int _2568;
  int _2569;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _2572;
  int _2573;
  sizetype _2574;
  sizetype _2575;
  sizetype _2576;
  uint8_t * _2577;
  uint8_t * _2578;
  int _2580;
  int _2581;
  long unsigned int _2582;
  long unsigned int _2583;
  const int16_t * _2584;
  short int _2585;
  int _2586;
  int _2587;
  long unsigned int _2588;
  long unsigned int _2589;
  const int16_t * _2590;
  short int _2591;
  int _2592;
  int _2593;
  int _2595;
  long unsigned int _2596;
  long unsigned int _2597;
  const int16_t * _2598;
  short int _2599;
  int (*<Tf50>) (int *, uint16_t *, int, uint16_t *, int16_t *, int, int) _2602;
  int _2603;
  int _2604;
  long unsigned int _2605;
  long unsigned int _2606;
  uint16_t * _2607;
  int _2608;
  sizetype _2609;
  sizetype _2610;
  sizetype _2611;
  uint16_t * _2612;
  void (*<Tedd>) (uint8_t *, uint8_t *, uint8_t *, uint8_t *, int, int *) _2617;
  sizetype _2618;
  sizetype _2619;
  sizetype _2620;
  int16_t * _2621;
  short int _2622;
  sizetype _2623;
  uint8_t * _2624;
  sizetype _2625;
  sizetype _2626;
  int16_t * _2627;
  short int _2628;
  sizetype _2629;
  uint8_t * _2630;
  long unsigned int _2631;
  int16_t * _2632;
  short int _2633;
  sizetype _2634;
  uint8_t * _2635;
  uint8_t * _2636;
  int _2638;
  int _2639;
  long unsigned int _2640;
  long unsigned int _2641;
  int16_t * _2642;
  short int _2643;
  long unsigned int _2644;
  long unsigned int _2645;
  uint16_t * _2646;
  short unsigned int _2647;
  int _2648;
  int _2650;
  int _2651;
  long unsigned int _2652;
  long unsigned int _2653;
  struct mvsad_t * _2654;
  int _2655;
  unsigned short _2657;
  unsigned short _2658;
  unsigned short _2659;
  short int _2660;
  short int _2662;
  long unsigned int _2668;
  long unsigned int _2669;
  int16_t * _2670;
  short int _2671;
  int _2672;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _2674;
  sizetype _2675;
  sizetype _2676;
  uint8_t * _2677;
  uint8_t * _2678;
  int _2680;
  short int _2681;
  long unsigned int _2682;
  long unsigned int _2683;
  uint16_t * _2684;
  short unsigned int _2685;
  int _2686;
  int _2688;
  int _2689;
  long unsigned int _2690;
  long unsigned int _2691;
  struct mvsad_t * _2692;
  int _2693;
  short int _2695;
  short int _2697;
  int _2704;
  int _2705;
  int _2706;
  long unsigned int _2708;
  long unsigned int _2709;
  struct mvsad_t * _2710;
  int _2711;
  long unsigned int _2713;
  long unsigned int _2714;
  struct mvsad_t * _2715;
  int _2716;
  long unsigned int _2718;
  long unsigned int _2719;
  uint64_t * _2720;
  long unsigned int _2721;
  long unsigned int _2724;
  long unsigned int _2725;
  struct mvsad_t * _2726;
  long unsigned int _2729;
  long unsigned int _2730;
  struct mvsad_t * _2731;
  long unsigned int _2735;
  long unsigned int _2736;
  uint64_t * _2737;
  long unsigned int _2738;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _2741;
  long unsigned int _2742;
  long unsigned int _2743;
  struct mvsad_t * _2744;
  short int _2745;
  int _2746;
  int _2747;
  int _2748;
  short int _2749;
  int _2750;
  int _2751;
  sizetype _2752;
  uint8_t * _2753;
  uint8_t * _2754;
  int _2756;
  short int _2757;
  int _2759;
  long unsigned int _2760;
  long unsigned int _2761;
  const int16_t * _2762;
  short int _2763;
  int _2764;
  short int _2765;
  int _2767;
  long unsigned int _2768;
  long unsigned int _2769;
  const int16_t * _2770;
  short int _2771;
  int _2772;
  int _2773;
  int _2777;
  long unsigned int _2778;
  long unsigned int _2779;
  const int16_t * _2780;
  short int _2781;
  int (*<Tf50>) (int *, uint16_t *, int, uint16_t *, int16_t *, int, int) _2784;
  long unsigned int _2785;
  long unsigned int _2786;
  uint16_t * _2787;
  int _2788;
  sizetype _2789;
  sizetype _2790;
  sizetype _2791;
  uint16_t * _2792;
  void (*<Tedd>) (uint8_t *, uint8_t *, uint8_t *, uint8_t *, int, int *) _2796;
  sizetype _2797;
  sizetype _2798;
  sizetype _2799;
  int16_t * _2800;
  short int _2801;
  int _2802;
  int _2803;
  sizetype _2804;
  int _2805;
  int _2806;
  sizetype _2807;
  sizetype _2808;
  uint8_t * _2809;
  sizetype _2810;
  sizetype _2811;
  int16_t * _2812;
  short int _2813;
  int _2814;
  int _2815;
  sizetype _2816;
  sizetype _2817;
  uint8_t * _2818;
  long unsigned int _2819;
  int16_t * _2820;
  short int _2821;
  int _2822;
  int _2823;
  sizetype _2824;
  sizetype _2825;
  uint8_t * _2826;
  uint8_t * _2827;
  int _2829;
  short int _2830;
  int _2831;
  int _2833;
  long unsigned int _2834;
  long unsigned int _2835;
  const int16_t * _2836;
  short int _2837;
  int _2838;
  int _2841;
  short int _2842;
  int _2843;
  int _2845;
  long unsigned int _2846;
  long unsigned int _2847;
  const int16_t * _2848;
  short int _2849;
  int _2850;
  int _2853;
  short int _2854;
  int _2855;
  int _2857;
  long unsigned int _2858;
  long unsigned int _2859;
  const int16_t * _2860;
  short int _2861;
  int _2862;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _2867;
  int _2868;
  int _2869;
  long unsigned int _2870;
  long unsigned int _2871;
  int16_t * _2872;
  short int _2873;
  int _2874;
  int _2875;
  int _2876;
  sizetype _2877;
  uint8_t * _2878;
  uint8_t * _2879;
  int _2881;
  short int _2882;
  int _2883;
  int _2885;
  long unsigned int _2886;
  long unsigned int _2887;
  const int16_t * _2888;
  short int _2889;
  int _2890;
  short int _2891;
  int _2892;
  int _2893;
  short int _2900;
  short int _2902;
  int _2905;
  short int _2906;
  int _2908;
  short int _2909;
  long unsigned int _2913;
  long unsigned int _2914;
  const int16_t * _2915;
  short int _2916;
  int _2917;
  long unsigned int _2919;
  long unsigned int _2920;
  const int16_t * _2921;
  short int _2922;
  int _2923;
  int _2924;
  _Bool _2926;
  _Bool _2927;
  _Bool _2928;
  int _2929;
  int _2930;
  int _2931;
  int _2938;
  int _2939;
  short int _2940;
  short unsigned int _2953;
  int _2954;
  short unsigned int _2955;
  int _2956;
  int _2957;
  short unsigned int _2958;
  int _2959;
  int _2960;
  short unsigned int _2961;
  int _2962;
  int _2963;
  _Bool _2972;
  int _2976;
  int _2996;
  int _2997;
  _Bool _2998;
  _Bool _2999;
  _Bool _3000;
  int _3001;
  _Bool _3004;
  int _3006;
  _Bool _3007;
  _Bool _3008;
  int _3280;
  int _3298;
  int _3672;
  int _3709;
  unsigned int _4073;
  sizetype _4081;
  unsigned int _4170;
  unsigned int _4175;
  int _4180;
  unsigned int _4185;
  unsigned int _4189;
  int _4197;
  unsigned int ivtmp_4199;
  unsigned int ivtmp_4204;
  unsigned int ivtmp_4209;
  unsigned int ivtmp_4214;
  int _4224;
  int _4229;
  short int prephitmp_4245;
  short int prephitmp_4246;
  int pretmp_4247;
  int prephitmp_4248;
  int prephitmp_4249;
  sizetype prephitmp_4250;
  sizetype prephitmp_4252;
  sizetype prephitmp_4253;
  int _4265;
  uint8_t * pretmp_4275;
  sizetype prephitmp_4307;
  int pretmp_4308;
  int prephitmp_4309;
  int pretmp_4310;
  unsigned int _4311;
  long unsigned int pretmp_4312;
  int _4313;
  long unsigned int pretmp_4314;
  long unsigned int prephitmp_4315;
  int pretmp_4316;
  int prephitmp_4317;
  int pretmp_4318;
  int _4319;
  long unsigned int pretmp_4320;
  unsigned int _4321;
  long unsigned int pretmp_4322;
  long unsigned int prephitmp_4323;
  int pretmp_4324;
  int prephitmp_4325;
  int pretmp_4326;
  unsigned int _4327;
  long unsigned int pretmp_4328;
  unsigned int _4329;
  long unsigned int pretmp_4330;
  long unsigned int prephitmp_4331;
  int pretmp_4332;
  int prephitmp_4333;
  int pretmp_4334;
  unsigned int _4335;
  long unsigned int pretmp_4336;
  unsigned int _4337;
  long unsigned int pretmp_4338;
  long unsigned int prephitmp_4339;
  int pretmp_4340;
  int pretmp_4341;
  int pretmp_4342;
  int pretmp_4344;
  int pretmp_4345;
  int pretmp_4346;
  int pretmp_4348;
  int pretmp_4349;
  int pretmp_4350;
  int prephitmp_4351;
  sizetype pretmp_4352;
  sizetype prephitmp_4354;
  int pretmp_4355;
  int pretmp_4356;
  int pretmp_4357;
  int pretmp_4359;
  int pretmp_4360;
  int pretmp_4361;
  int pretmp_4363;
  int pretmp_4364;
  int pretmp_4365;
  int prephitmp_4366;
  int pretmp_4367;
  int prephitmp_4369;
  int pretmp_4370;
  long unsigned int pretmp_4373;
  long unsigned int pretmp_4376;
  const int16_t * pretmp_4379;
  const int16_t * pretmp_4380;
  const int16_t * prephitmp_4381;
  int pretmp_4382;
  int prephitmp_4384;
  int pretmp_4385;
  long unsigned int pretmp_4388;
  long unsigned int pretmp_4391;
  const int16_t * pretmp_4394;
  const int16_t * pretmp_4395;
  const int16_t * prephitmp_4396;
  int pretmp_4397;
  int prephitmp_4399;
  int pretmp_4400;
  long unsigned int pretmp_4403;
  long unsigned int pretmp_4406;
  const int16_t * pretmp_4409;
  const int16_t * pretmp_4410;
  const int16_t * prephitmp_4411;
  int pretmp_4412;
  int prephitmp_4414;
  int pretmp_4415;
  long unsigned int pretmp_4418;
  long unsigned int pretmp_4421;
  const int16_t * pretmp_4424;
  const int16_t * pretmp_4425;
  const int16_t * prephitmp_4426;
  int pretmp_4428;
  int pretmp_4429;
  int pretmp_4430;
  int pretmp_4431;
  int pretmp_4432;
  int pretmp_4433;
  int pretmp_4434;
  int pretmp_4438;
  int pretmp_4444;
  long unsigned int pretmp_4445;
  long unsigned int pretmp_4446;
  const int16_t * pretmp_4447;
  int pretmp_4448;
  long unsigned int pretmp_4449;
  long unsigned int pretmp_4450;
  const int16_t * pretmp_4451;
  int pretmp_4452;
  int prephitmp_4453;
  int prephitmp_4455;
  int pretmp_4456;
  int prephitmp_4457;
  sizetype pretmp_4458;
  sizetype prephitmp_4459;
  sizetype pretmp_4460;
  sizetype pretmp_4461;
  sizetype pretmp_4462;
  sizetype prephitmp_4463;
  int pretmp_4464;
  int pretmp_4465;
  int pretmp_4466;
  int pretmp_4468;
  int pretmp_4469;
  int pretmp_4470;
  long unsigned int pretmp_4472;
  long unsigned int pretmp_4473;
  long unsigned int pretmp_4474;
  long unsigned int pretmp_4476;
  long unsigned int pretmp_4477;
  long unsigned int pretmp_4478;
  long unsigned int prephitmp_4479;
  int pretmp_4480;
  int pretmp_4481;
  int pretmp_4482;
  long unsigned int pretmp_4484;
  long unsigned int pretmp_4485;
  long unsigned int pretmp_4486;
  long unsigned int pretmp_4488;
  long unsigned int pretmp_4489;
  long unsigned int pretmp_4490;
  long unsigned int prephitmp_4491;
  int pretmp_4492;
  int pretmp_4493;
  int pretmp_4494;
  int prephitmp_4495;
  int pretmp_4496;
  int pretmp_4497;
  int pretmp_4498;
  long unsigned int pretmp_4500;
  long unsigned int pretmp_4501;
  long unsigned int pretmp_4502;
  long unsigned int pretmp_4504;
  long unsigned int pretmp_4505;
  long unsigned int pretmp_4506;
  long unsigned int prephitmp_4507;
  int pretmp_4508;
  int pretmp_4509;
  int pretmp_4510;
  int pretmp_4512;
  int pretmp_4513;
  int pretmp_4514;
  long unsigned int pretmp_4516;
  long unsigned int pretmp_4517;
  long unsigned int pretmp_4518;
  long unsigned int pretmp_4520;
  long unsigned int pretmp_4521;
  long unsigned int pretmp_4522;
  long unsigned int prephitmp_4523;
  int pretmp_4524;
  int pretmp_4525;
  int pretmp_4526;
  int prephitmp_4527;
  int pretmp_4528;
  int pretmp_4529;
  int pretmp_4530;
  long unsigned int pretmp_4532;
  long unsigned int pretmp_4533;
  long unsigned int pretmp_4534;
  long unsigned int pretmp_4536;
  long unsigned int pretmp_4537;
  long unsigned int pretmp_4538;
  long unsigned int prephitmp_4539;
  int pretmp_4540;
  int pretmp_4541;
  int pretmp_4542;
  int pretmp_4544;
  int pretmp_4545;
  int pretmp_4546;
  long unsigned int pretmp_4548;
  long unsigned int pretmp_4549;
  long unsigned int pretmp_4550;
  long unsigned int pretmp_4552;
  long unsigned int pretmp_4553;
  long unsigned int pretmp_4554;
  long unsigned int prephitmp_4555;
  int pretmp_4556;
  int pretmp_4557;
  int pretmp_4558;
  int prephitmp_4559;
  int pretmp_4560;
  int pretmp_4561;
  int pretmp_4562;
  long unsigned int pretmp_4564;
  long unsigned int pretmp_4565;
  long unsigned int pretmp_4566;
  long unsigned int pretmp_4568;
  long unsigned int pretmp_4569;
  long unsigned int pretmp_4570;
  long unsigned int prephitmp_4571;
  sizetype pretmp_4572;
  sizetype pretmp_4573;
  sizetype pretmp_4574;
  sizetype pretmp_4575;
  sizetype pretmp_4576;
  sizetype pretmp_4577;
  sizetype prephitmp_4578;
  int pretmp_4579;
  int pretmp_4580;
  int pretmp_4581;
  int pretmp_4582;
  int pretmp_4583;
  int pretmp_4584;
  int pretmp_4585;
  int prephitmp_4586;
  int pretmp_4587;
  int pretmp_4588;
  int pretmp_4589;
  int pretmp_4590;
  int pretmp_4591;
  int pretmp_4592;
  int pretmp_4593;
  long unsigned int pretmp_4595;
  long unsigned int pretmp_4596;
  long unsigned int pretmp_4597;
  long unsigned int pretmp_4598;
  long unsigned int pretmp_4599;
  long unsigned int pretmp_4600;
  long unsigned int pretmp_4601;
  long unsigned int pretmp_4603;
  long unsigned int pretmp_4604;
  long unsigned int pretmp_4605;
  long unsigned int pretmp_4606;
  long unsigned int pretmp_4607;
  long unsigned int pretmp_4608;
  long unsigned int pretmp_4609;
  const int16_t * pretmp_4611;
  const int16_t * pretmp_4612;
  const int16_t * pretmp_4613;
  const int16_t * pretmp_4614;
  const int16_t * pretmp_4615;
  const int16_t * pretmp_4616;
  const int16_t * pretmp_4617;
  const int16_t * prephitmp_4618;
  int pretmp_4619;
  int pretmp_4620;
  int pretmp_4621;
  int pretmp_4622;
  int pretmp_4623;
  int pretmp_4624;
  int pretmp_4625;
  long unsigned int pretmp_4627;
  long unsigned int pretmp_4628;
  long unsigned int pretmp_4629;
  long unsigned int pretmp_4630;
  long unsigned int pretmp_4631;
  long unsigned int pretmp_4632;
  long unsigned int pretmp_4633;
  long unsigned int pretmp_4635;
  long unsigned int pretmp_4636;
  long unsigned int pretmp_4637;
  long unsigned int pretmp_4638;
  long unsigned int pretmp_4639;
  long unsigned int pretmp_4640;
  long unsigned int pretmp_4641;
  const int16_t * pretmp_4643;
  const int16_t * pretmp_4644;
  const int16_t * pretmp_4645;
  const int16_t * pretmp_4646;
  const int16_t * pretmp_4647;
  const int16_t * pretmp_4648;
  const int16_t * pretmp_4649;
  const int16_t * prephitmp_4650;
  int pretmp_4651;
  int pretmp_4652;
  int pretmp_4653;
  int pretmp_4654;
  int pretmp_4655;
  int pretmp_4656;
  int pretmp_4657;
  int prephitmp_4658;
  int pretmp_4659;
  int pretmp_4660;
  int pretmp_4661;
  int pretmp_4662;
  int pretmp_4663;
  int pretmp_4664;
  int pretmp_4665;
  long unsigned int pretmp_4667;
  long unsigned int pretmp_4668;
  long unsigned int pretmp_4669;
  long unsigned int pretmp_4670;
  long unsigned int pretmp_4671;
  long unsigned int pretmp_4672;
  long unsigned int pretmp_4673;
  long unsigned int pretmp_4675;
  long unsigned int pretmp_4676;
  long unsigned int pretmp_4677;
  long unsigned int pretmp_4678;
  long unsigned int pretmp_4679;
  long unsigned int pretmp_4680;
  long unsigned int pretmp_4681;
  const int16_t * pretmp_4683;
  const int16_t * pretmp_4684;
  const int16_t * pretmp_4685;
  const int16_t * pretmp_4686;
  const int16_t * pretmp_4687;
  const int16_t * pretmp_4688;
  const int16_t * pretmp_4689;
  const int16_t * prephitmp_4690;
  int pretmp_4691;
  int pretmp_4693;
  int pretmp_4695;
  int prephitmp_4696;
  int pretmp_4697;
  int pretmp_4699;
  int prephitmp_4700;
  _Bool pretmp_4701;
  _Bool prephitmp_4702;
  sizetype pretmp_4709;
  sizetype prephitmp_4710;
  int pretmp_4711;
  int prephitmp_4712;
  int pretmp_4713;
  int _4714;
  long unsigned int pretmp_4715;
  int _4716;
  long unsigned int pretmp_4717;
  long unsigned int prephitmp_4718;
  int pretmp_4719;
  int prephitmp_4720;
  int pretmp_4721;
  int _4722;
  long unsigned int pretmp_4723;
  unsigned int _4724;
  long unsigned int pretmp_4725;
  long unsigned int prephitmp_4726;
  int pretmp_4727;
  int prephitmp_4728;
  int pretmp_4729;
  unsigned int _4730;
  long unsigned int pretmp_4731;
  unsigned int _4732;
  long unsigned int pretmp_4733;
  long unsigned int prephitmp_4734;
  int pretmp_4735;
  int prephitmp_4736;
  int pretmp_4737;
  unsigned int _4738;
  long unsigned int pretmp_4739;
  unsigned int _4740;
  long unsigned int pretmp_4741;
  long unsigned int prephitmp_4742;
  int prephitmp_4743;

  <bb 2>:
  _506 = m_505(D)->i_pixel;
  # DEBUG D#18 => x264_pixel_size[_506].w
  # DEBUG bw => D#18
  # DEBUG D#17 => x264_pixel_size[_506].h
  # DEBUG bh => D#17
  # DEBUG i_pixel => _506
  i_me_range_511 = h_510(D)->param.analyse.i_me_range;
  # DEBUG i_me_range => i_me_range_511
  # DEBUG bpred_mx => 0
  # DEBUG bpred_my => 0
  # DEBUG bpred_cost => 268435456
  p_fref_512 = m_505(D)->p_fref[0];
  # DEBUG p_fref => p_fref_512
  bmx_513 = h_510(D)->mb.mv_min_fpel[0];
  # DEBUG mv_x_min => bmx_513
  bmy_514 = h_510(D)->mb.mv_min_fpel[1];
  # DEBUG mv_y_min => bmy_514
  mv_x_max_515 = h_510(D)->mb.mv_max_fpel[0];
  # DEBUG mv_x_max => mv_x_max_515
  mv_y_max_516 = h_510(D)->mb.mv_max_fpel[1];
  # DEBUG mv_y_max => mv_y_max_516
  _517 = m_505(D)->p_cost_mv;
  _518 = m_505(D)->mvp[0];
  _519 = (long unsigned int) _518;
  _520 = _519 * 2;
  _521 = -_520;
  p_cost_mvx_522 = _517 + _521;
  # DEBUG p_cost_mvx => p_cost_mvx_522
  _524 = m_505(D)->mvp[1];
  _525 = (long unsigned int) _524;
  _526 = _525 * 2;
  _527 = -_526;
  p_cost_mvy_528 = _517 + _527;
  # DEBUG p_cost_mvy => p_cost_mvy_528
  _529 = mv_x_max_515 * 4;
  bmx_530 = bmx_513 * 4;
  _532 = (int) _518;
  # DEBUG v => _532
  # DEBUG i_min => bmx_530
  # DEBUG i_max => _529
  if (bmx_530 <= _532)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  bmx_538 = MIN_EXPR <_529, _532>;

  <bb 4>:
  # bmx_533 = PHI <bmx_530(2), bmx_538(3)>
  # DEBUG v => NULL
  # DEBUG i_min => NULL
  # DEBUG i_max => NULL
  # DEBUG bmx => NULL
  _535 = mv_y_max_516 * 4;
  bmy_536 = bmy_514 * 4;
  _537 = (int) _524;
  # DEBUG v => _537
  # DEBUG i_min => bmy_536
  # DEBUG i_max => _535
  if (bmy_536 <= _537)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  bmy_590 = MIN_EXPR <_535, _537>;

  <bb 6>:
  # bmy_545 = PHI <bmy_536(4), bmy_590(5)>
  # DEBUG v => NULL
  # DEBUG i_min => NULL
  # DEBUG i_max => NULL
  # DEBUG bmy => NULL
  _540 = bmx_533 + 2;
  bmx_541 = _540 >> 2;
  # DEBUG pmx => bmx_541
  _542 = bmy_545 + 2;
  bmy_543 = _542 >> 2;
  # DEBUG pmy => bmy_543
  # DEBUG bcost => 268435456
  _544 = h_510(D)->mb.i_subpel_refine;
  if (_544 > 2)
    goto <bb 7>;
  else
    goto <bb 23>;

  <bb 7>:
  bw_507 = x264_pixel_size[_506].w;
  bh_508 = x264_pixel_size[_506].h;
  # DEBUG a => NULL
  # DEBUG b => NULL
  _1524 = bmx_533 & 65535;
  _714 = bmy_545 << 16;
  _712 = _714 + _1524;
  _598 = (unsigned int) _712;
  # DEBUG a => NULL
  # DEBUG b => NULL
  # DEBUG bmv => NULL
  stride = 16;
  _548 = h_510(D)->mc.get_ref;
  _549 = m_505(D)->i_stride[0];
  _550 = &m_505(D)->p_fref;
  src_552 = _548 (&pix, &stride, _550, _549, bmx_533, bmy_545, bw_507, bh_508);
  # DEBUG src => src_552
  _553 = h_510(D)->pixf.fpelcmp[_506];
  stride.0_554 = stride;
  _555 = m_505(D)->p_fenc[0];
  _557 = _553 (_555, 16, src_552, stride.0_554);
  _558 = (long unsigned int) bmx_533;
  _559 = _558 * 2;
  _560 = p_cost_mvx_522 + _559;
  _561 = *_560;
  _562 = (int) _561;
  _563 = _557 + _562;
  _564 = (long unsigned int) bmy_545;
  _565 = _564 * 2;
  _566 = p_cost_mvy_528 + _565;
  _567 = *_566;
  _568 = (int) _567;
  bpred_cost_569 = _563 + _568;
  # DEBUG cost => bpred_cost_569
  if (bpred_cost_569 <= 268435455)
    goto <bb 9>;
  else
    goto <bb 8>;

  <bb 8>:

  <bb 9>:
  # bmx_353 = PHI <0(8), bmx_533(7)>
  # bmy_358 = PHI <0(8), bmy_545(7)>
  # bpred_cost_363 = PHI <268435456(8), bpred_cost_569(7)>
  # DEBUG bpred_cost => bpred_cost_363
  # DEBUG bpred_my => bmy_358
  # DEBUG bpred_mx => bmx_353
  stride ={v} {CLOBBER};
  # DEBUG i => 0
  # DEBUG i => 0
  # DEBUG bpred_cost => bpred_cost_363
  # DEBUG bpred_my => bmy_358
  # DEBUG bpred_mx => bmx_353
  if (i_mvc_574(D) > 0)
    goto <bb 10>;
  else
    goto <bb 22>;

  <bb 10>:

  <bb 11>:
  # bmx_3594 = PHI <bmx_353(10), bmx_355(21)>
  # bmy_3590 = PHI <bmy_358(10), bmy_360(21)>
  # bpred_cost_3591 = PHI <bpred_cost_363(10), bpred_cost_365(21)>
  # i_3592 = PHI <0(10), i_627(21)>
  # DEBUG i => i_3592
  # DEBUG bpred_cost => bpred_cost_3591
  # DEBUG bpred_my => bmy_3590
  # DEBUG bpred_mx => bmx_3594
  _575 = (long unsigned int) i_3592;
  _576 = _575 * 4;
  _578 = mvc_577(D) + _576;
  _579 = *_578;
  _2998 = _579 != _598;
  _2999 = _579 != 0;
  _3000 = _2998 & _2999;
  if (_3000 != 0)
    goto <bb 12>;
  else
    goto <bb 19>;

  <bb 12>:
  _588 = MEM[(int16_t[2] *)_578][0];
  _589 = (int) _588;
  # DEBUG v => _589
  # DEBUG i_min => bmx_530
  # DEBUG i_max => _529
  if (bmx_530 <= _589)
    goto <bb 13>;
  else
    goto <bb 14>;

  <bb 13>:
  bmx_2946 = MIN_EXPR <_529, _589>;

  <bb 14>:
  # bmx_2947 = PHI <bmx_530(12), bmx_2946(13)>
  # DEBUG v => NULL
  # DEBUG i_min => NULL
  # DEBUG i_max => NULL
  # DEBUG mx => NULL
  _596 = MEM[(int16_t[2] *)_578][1];
  _597 = (int) _596;
  # DEBUG v => _597
  # DEBUG i_min => bmy_536
  # DEBUG i_max => _535
  if (bmy_536 <= _597)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 15>:
  bmy_2944 = MIN_EXPR <_535, _597>;

  <bb 16>:
  # bmy_2945 = PHI <bmy_536(14), bmy_2944(15)>
  # DEBUG v => NULL
  # DEBUG i_min => NULL
  # DEBUG i_max => NULL
  # DEBUG my => NULL
  stride = 16;
  _601 = h_510(D)->mc.get_ref;
  _602 = m_505(D)->i_stride[0];
  src_605 = _601 (&pix, &stride, _550, _602, bmx_2947, bmy_2945, bw_507, bh_508);
  # DEBUG src => src_605
  _606 = h_510(D)->pixf.fpelcmp[_506];
  stride.1_607 = stride;
  _608 = m_505(D)->p_fenc[0];
  _610 = _606 (_608, 16, src_605, stride.1_607);
  _611 = (long unsigned int) bmx_2947;
  _612 = _611 * 2;
  _613 = p_cost_mvx_522 + _612;
  _614 = *_613;
  _615 = (int) _614;
  _616 = _610 + _615;
  _617 = (long unsigned int) bmy_2945;
  _618 = _617 * 2;
  _619 = p_cost_mvy_528 + _618;
  _620 = *_619;
  _621 = (int) _620;
  bpred_cost_622 = _616 + _621;
  # DEBUG cost => bpred_cost_622
  if (bpred_cost_622 < bpred_cost_3591)
    goto <bb 18>;
  else
    goto <bb 17>;

  <bb 17>:

  <bb 18>:
  # bmx_354 = PHI <bmx_3594(17), bmx_2947(16)>
  # bmy_359 = PHI <bmy_3590(17), bmy_2945(16)>
  # bpred_cost_364 = PHI <bpred_cost_3591(17), bpred_cost_622(16)>
  # DEBUG bpred_cost => bpred_cost_364
  # DEBUG bpred_my => bmy_359
  # DEBUG bpred_mx => bmx_354
  stride ={v} {CLOBBER};

  <bb 19>:
  # bmx_355 = PHI <bmx_354(18), bmx_3594(11)>
  # bmy_360 = PHI <bmy_359(18), bmy_3590(11)>
  # bpred_cost_365 = PHI <bpred_cost_364(18), bpred_cost_3591(11)>
  # DEBUG bpred_cost => bpred_cost_365
  # DEBUG bpred_my => bmy_360
  # DEBUG bpred_mx => bmx_355
  i_627 = i_3592 + 1;
  # DEBUG i => i_627
  # DEBUG i => i_627
  # DEBUG bpred_cost => bpred_cost_365
  # DEBUG bpred_my => bmy_360
  # DEBUG bpred_mx => bmx_355
  if (i_mvc_574(D) > i_627)
    goto <bb 21>;
  else
    goto <bb 20>;

  <bb 20>:
  # bmx_4098 = PHI <bmx_355(19)>
  # bmy_4097 = PHI <bmy_360(19)>
  # bpred_cost_4096 = PHI <bpred_cost_365(19)>
  goto <bb 22>;

  <bb 21>:
  goto <bb 11>;

  <bb 22>:
  # bmx_3220 = PHI <bmx_4098(20), bmx_353(9)>
  # bmy_3217 = PHI <bmy_4097(20), bmy_358(9)>
  # bpred_cost_3218 = PHI <bpred_cost_4096(20), bpred_cost_363(9)>
  _628 = bmx_3220 + 2;
  bmx_629 = _628 >> 2;
  # DEBUG bmx => bmx_629
  _630 = bmy_3217 + 2;
  bmy_631 = _630 >> 2;
  # DEBUG bmy => bmy_631
  _632 = h_510(D)->pixf.fpelcmp[_506];
  _633 = m_505(D)->i_stride[0];
  _634 = bmy_631 * _633;
  _635 = bmx_629 + _634;
  _636 = (sizetype) _635;
  _637 = p_fref_512 + _636;
  _638 = m_505(D)->p_fenc[0];
  _640 = _632 (_638, 16, _637, _633);
  _641 = bmx_629 << 2;
  _642 = (long unsigned int) _641;
  _643 = _642 * 2;
  _644 = p_cost_mvx_522 + _643;
  _645 = *_644;
  _646 = (int) _645;
  _647 = bmy_631 << 2;
  _648 = (long unsigned int) _647;
  _649 = _648 * 2;
  _650 = p_cost_mvy_528 + _649;
  _651 = *_650;
  _652 = (int) _651;
  _653 = _646 + _652;
  bcost_654 = _640 + _653;
  # DEBUG cost => bcost_654
  if (bcost_654 <= 268435455)
    goto <bb 39>;
  else
    goto <bb 38>;

  <bb 23>:
  _658 = h_510(D)->pixf.fpelcmp[_506];
  _659 = m_505(D)->i_stride[0];
  _660 = bmy_543 * _659;
  _661 = bmx_541 + _660;
  _662 = (sizetype) _661;
  _663 = p_fref_512 + _662;
  _664 = m_505(D)->p_fenc[0];
  _666 = _658 (_664, 16, _663, _659);
  _667 = bmx_541 << 2;
  _668 = (long unsigned int) _667;
  _669 = _668 * 2;
  _670 = p_cost_mvx_522 + _669;
  _671 = *_670;
  _672 = (int) _671;
  _673 = bmy_543 << 2;
  _674 = (long unsigned int) _673;
  _675 = _674 * 2;
  _676 = p_cost_mvy_528 + _675;
  _677 = *_676;
  _678 = (int) _677;
  _679 = _672 + _678;
  bcost_680 = _666 + _679;
  # DEBUG cost => bcost_680
  if (bcost_680 <= 268435455)
    goto <bb 25>;
  else
    goto <bb 24>;

  <bb 24>:

  <bb 25>:
  # bmx_3 = PHI <bmx_533(24), bmx_541(23)>
  # bmy_112 = PHI <bmy_545(24), bmy_543(23)>
  # bcost_228 = PHI <268435456(24), bcost_680(23)>
  # DEBUG bcost => bcost_228
  # DEBUG bmy => bmy_112
  # DEBUG bmx => bmx_3
  bcost_694 = bcost_228 - _679;
  # DEBUG bcost => bcost_694
  # DEBUG i => 0
  # DEBUG i => 0
  # DEBUG bcost => bcost_694
  # DEBUG bmy => bmy_112
  # DEBUG bmx => bmx_3
  if (i_mvc_574(D) > 0)
    goto <bb 26>;
  else
    goto <bb 39>;

  <bb 26>:

  <bb 27>:
  # bmx_3345 = PHI <bmx_3(26), bmx_4(37)>
  # bmy_3237 = PHI <bmy_112(26), bmy_113(37)>
  # bcost_3227 = PHI <bcost_694(26), bcost_229(37)>
  # i_3588 = PHI <0(26), i_741(37)>
  # DEBUG i => i_3588
  # DEBUG bcost => bcost_3227
  # DEBUG bmy => bmy_3237
  # DEBUG bmx => bmx_3345
  _695 = (long unsigned int) i_3588;
  _696 = _695 * 4;
  _697 = mvc_577(D) + _696;
  _698 = *_697[0];
  _699 = (int) _698;
  _700 = _699 + 2;
  mx_701 = _700 >> 2;
  # DEBUG mx => mx_701
  _704 = *_697[1];
  _705 = (int) _704;
  _706 = _705 + 2;
  my_707 = _706 >> 2;
  # DEBUG my => my_707
  _708 = mx_701 | my_707;
  if (_708 != 0)
    goto <bb 28>;
  else
    goto <bb 35>;

  <bb 28>:
  _709 = mx_701 - bmx_3345;
  _710 = my_707 - bmy_3237;
  _711 = _709 | _710;
  if (_711 != 0)
    goto <bb 29>;
  else
    goto <bb 35>;

  <bb 29>:
  # DEBUG v => mx_701
  # DEBUG i_min => bmx_513
  # DEBUG i_max => mv_x_max_515
  if (bmx_513 <= mx_701)
    goto <bb 30>;
  else
    goto <bb 31>;

  <bb 30>:
  bmx_2950 = MIN_EXPR <mv_x_max_515, mx_701>;

  <bb 31>:
  # bmx_2951 = PHI <bmx_513(29), bmx_2950(30)>
  # DEBUG v => NULL
  # DEBUG i_min => NULL
  # DEBUG i_max => NULL
  # DEBUG mx => NULL
  # DEBUG v => my_707
  # DEBUG i_min => bmy_514
  # DEBUG i_max => mv_y_max_516
  if (bmy_514 <= my_707)
    goto <bb 32>;
  else
    goto <bb 33>;

  <bb 32>:
  bmy_2948 = MIN_EXPR <mv_y_max_516, my_707>;

  <bb 33>:
  # bmy_2949 = PHI <bmy_514(31), bmy_2948(32)>
  # DEBUG v => NULL
  # DEBUG i_min => NULL
  # DEBUG i_max => NULL
  # DEBUG my => NULL
  _715 = h_510(D)->pixf.fpelcmp[_506];
  _716 = m_505(D)->i_stride[0];
  _717 = _716 * bmy_2949;
  _718 = _717 + bmx_2951;
  _719 = (sizetype) _718;
  _720 = p_fref_512 + _719;
  _721 = m_505(D)->p_fenc[0];
  _723 = _715 (_721, 16, _720, _716);
  _724 = bmx_2951 << 2;
  _725 = (long unsigned int) _724;
  _726 = _725 * 2;
  _727 = p_cost_mvx_522 + _726;
  _728 = *_727;
  _729 = (int) _728;
  _730 = bmy_2949 << 2;
  _731 = (long unsigned int) _730;
  _732 = _731 * 2;
  _733 = p_cost_mvy_528 + _732;
  _734 = *_733;
  _735 = (int) _734;
  _736 = _729 + _735;
  bcost_737 = _723 + _736;
  # DEBUG cost => bcost_737
  if (bcost_737 < bcost_3227)
    goto <bb 35>;
  else
    goto <bb 34>;

  <bb 34>:

  <bb 35>:
  # bmx_4 = PHI <bmx_3345(27), bmx_3345(28), bmx_3345(34), bmx_2951(33)>
  # bmy_113 = PHI <bmy_3237(27), bmy_3237(28), bmy_3237(34), bmy_2949(33)>
  # bcost_229 = PHI <bcost_3227(27), bcost_3227(28), bcost_3227(34), bcost_737(33)>
  # DEBUG bcost => bcost_229
  # DEBUG bmy => bmy_113
  # DEBUG bmx => bmx_4
  i_741 = i_3588 + 1;
  # DEBUG i => i_741
  # DEBUG i => i_741
  # DEBUG bcost => bcost_229
  # DEBUG bmy => bmy_113
  # DEBUG bmx => bmx_4
  if (i_mvc_574(D) > i_741)
    goto <bb 37>;
  else
    goto <bb 36>;

  <bb 36>:
  # bmx_4159 = PHI <bmx_4(35)>
  # bmy_4140 = PHI <bmy_113(35)>
  # bcost_4121 = PHI <bcost_229(35)>
  goto <bb 39>;

  <bb 37>:
  goto <bb 27>;

  <bb 38>:

  <bb 39>:
  # bmx_6 = PHI <bmx_629(22), bmx_4159(36), bmx_629(38), bmx_3(25)>
  # bmy_115 = PHI <bmy_631(22), bmy_4140(36), bmy_631(38), bmy_112(25)>
  # bcost_231 = PHI <bcost_654(22), bcost_4121(36), 268435456(38), bcost_694(25)>
  # bmx_357 = PHI <bmx_3220(22), 0(36), bmx_3220(38), 0(25)>
  # bmy_362 = PHI <bmy_3217(22), 0(36), bmy_3217(38), 0(25)>
  # bpred_cost_367 = PHI <bpred_cost_3218(22), 268435456(36), bpred_cost_3218(38), 268435456(25)>
  # DEBUG bpred_cost => bpred_cost_367
  # DEBUG bpred_my => bmy_362
  # DEBUG bpred_mx => bmx_357
  # DEBUG bcost => bcost_231
  # DEBUG bmy => bmy_115
  # DEBUG bmx => bmx_6
  _742 = h_510(D)->pixf.fpelcmp[_506];
  _743 = m_505(D)->i_stride[0];
  _744 = m_505(D)->p_fenc[0];
  _746 = _742 (_744, 16, p_fref_512, _743);
  _747 = *p_cost_mvx_522;
  _748 = (int) _747;
  _749 = *p_cost_mvy_528;
  _750 = (int) _749;
  _751 = _748 + _750;
  bcost_752 = _746 + _751;
  # DEBUG cost => bcost_752
  if (bcost_231 > bcost_752)
    goto <bb 41>;
  else
    goto <bb 40>;

  <bb 40>:

  <bb 41>:
  # bmx_7 = PHI <bmx_6(40), 0(39)>
  # bmy_116 = PHI <bmy_115(40), 0(39)>
  # bcost_232 = PHI <bcost_231(40), bcost_752(39)>
  # DEBUG bcost => bcost_232
  # DEBUG bmy => bmy_116
  # DEBUG bmx => bmx_7
  _754 = h_510(D)->mb.i_me_method;
  switch (_754) <default: <L445>, case 0: <L463>, case 1: <L466>, case 2: <L87>, case 3 ... 4: <L342>>

<L463>:

  <bb 43>:
  # bmx_8 = PHI <bmx_7(42), bmx_10(59)>
  # bmy_117 = PHI <bmy_116(42), bmy_121(59)>
  # bcost_233 = PHI <bcost_232(42), bcost_237(59)>
  # i_370 = PHI <0(42), i_836(59)>
  # DEBUG i => i_370
  # DEBUG bcost => bcost_233
  # DEBUG bmy => bmy_117
  # DEBUG bmx => bmx_8
  # DEBUG omx => bmx_8
  # DEBUG omy => bmy_117
  _755 = (sizetype) bmx_8;
  _756 = m_505(D)->i_stride[0];
  _757 = bmy_117 * _756;
  _758 = (sizetype) _757;
  _759 = _755 + _758;
  pix_base_760 = p_fref_512 + _759;
  # DEBUG pix_base => pix_base_760
  _761 = h_510(D)->pixf.fpelcmp_x4[_506];
  _762 = pix_base_760 + 1;
  _763 = pix_base_760 + 18446744073709551615;
  _764 = (sizetype) _756;
  _765 = pix_base_760 + _764;
  _766 = -_756;
  _767 = (sizetype) _766;
  _768 = pix_base_760 + _767;
  _769 = m_505(D)->p_fenc[0];
  _761 (_769, _768, _765, _763, _762, _756, &costs);
  _771 = costs[0];
  _772 = bmx_8 << 2;
  _773 = (long unsigned int) _772;
  _774 = _773 * 2;
  _775 = p_cost_mvx_522 + _774;
  _776 = *_775;
  _777 = (int) _776;
  bmy_778 = bmy_117 + -1;
  _779 = bmy_778 << 2;
  _780 = (long unsigned int) _779;
  _781 = _780 * 2;
  _782 = p_cost_mvy_528 + _781;
  _783 = *_782;
  _784 = (int) _783;
  _785 = _777 + _784;
  bcost_786 = _771 + _785;
  costs[0] = bcost_786;
  _788 = costs[1];
  bmy_789 = bmy_117 + 1;
  _790 = bmy_789 << 2;
  _791 = (long unsigned int) _790;
  _792 = _791 * 2;
  _793 = p_cost_mvy_528 + _792;
  _794 = *_793;
  _795 = (int) _794;
  _796 = _777 + _795;
  bcost_797 = _788 + _796;
  costs[1] = bcost_797;
  _799 = costs[2];
  bmx_800 = bmx_8 + -1;
  _801 = bmx_800 << 2;
  _802 = (long unsigned int) _801;
  _803 = _802 * 2;
  _804 = p_cost_mvx_522 + _803;
  _805 = *_804;
  _806 = (int) _805;
  _807 = bmy_117 << 2;
  _808 = (long unsigned int) _807;
  _809 = _808 * 2;
  _810 = p_cost_mvy_528 + _809;
  _811 = *_810;
  _812 = (int) _811;
  _813 = _806 + _812;
  bcost_814 = _799 + _813;
  costs[2] = bcost_814;
  _816 = costs[3];
  bmx_817 = bmx_8 + 1;
  _818 = bmx_817 << 2;
  _819 = (long unsigned int) _818;
  _820 = _819 * 2;
  _821 = p_cost_mvx_522 + _820;
  _822 = *_821;
  _823 = (int) _822;
  _824 = _812 + _823;
  bcost_825 = _816 + _824;
  costs[3] = bcost_825;
  if (bcost_233 > bcost_786)
    goto <bb 45>;
  else
    goto <bb 44>;

  <bb 44>:

  <bb 45>:
  # bmy_118 = PHI <bmy_117(44), bmy_778(43)>
  # bcost_234 = PHI <bcost_233(44), bcost_786(43)>
  # DEBUG bcost => bcost_234
  # DEBUG bmy => bmy_118
  # DEBUG bmx => bmx_8
  if (bcost_234 > bcost_797)
    goto <bb 47>;
  else
    goto <bb 46>;

  <bb 46>:

  <bb 47>:
  # bmy_119 = PHI <bmy_118(46), bmy_789(45)>
  # bcost_235 = PHI <bcost_234(46), bcost_797(45)>
  # DEBUG bcost => bcost_235
  # DEBUG bmy => bmy_119
  # DEBUG bmx => bmx_8
  if (bcost_235 > bcost_814)
    goto <bb 49>;
  else
    goto <bb 48>;

  <bb 48>:

  <bb 49>:
  # bmx_9 = PHI <bmx_8(48), bmx_800(47)>
  # bmy_120 = PHI <bmy_119(48), bmy_117(47)>
  # bcost_236 = PHI <bcost_235(48), bcost_814(47)>
  # DEBUG bcost => bcost_236
  # DEBUG bmy => bmy_120
  # DEBUG bmx => bmx_9
  if (bcost_236 > bcost_825)
    goto <bb 51>;
  else
    goto <bb 50>;

  <bb 50>:
  pretmp_4701 = bmy_117 == bmy_120;

  <bb 51>:
  # bmx_10 = PHI <bmx_9(50), bmx_817(49)>
  # bmy_121 = PHI <bmy_120(50), bmy_117(49)>
  # bcost_237 = PHI <bcost_236(50), bcost_825(49)>
  # prephitmp_4702 = PHI <pretmp_4701(50), 1(49)>
  # DEBUG bcost => bcost_237
  # DEBUG bmy => bmy_121
  # DEBUG bmx => bmx_10
  _827 = bmx_8 == bmx_10;
  _829 = _827 & prephitmp_4702;
  if (_829 != 0)
    goto <bb 52>;
  else
    goto <bb 53>;

  <bb 52>:
  # bmx_4158 = PHI <bmx_10(51)>
  # bmy_4139 = PHI <bmy_121(51)>
  # bcost_4120 = PHI <bcost_237(51)>
  goto <bb 454> (<L445>);

  <bb 53>:
  _830 = bmx_10 < bmx_513;
  _831 = bmx_10 > mv_x_max_515;
  _832 = _830 | _831;
  if (_832 != 0)
    goto <bb 54>;
  else
    goto <bb 55>;

  <bb 54>:
  # bmx_4157 = PHI <bmx_10(53)>
  # bmy_4138 = PHI <bmy_121(53)>
  # bcost_4119 = PHI <bcost_237(53)>
  goto <bb 454> (<L445>);

  <bb 55>:
  _833 = bmy_121 < bmy_514;
  _834 = bmy_121 > mv_y_max_516;
  _835 = _833 | _834;
  if (_835 != 0)
    goto <bb 56>;
  else
    goto <bb 57>;

  <bb 56>:
  # bmx_4156 = PHI <bmx_10(55)>
  # bmy_4137 = PHI <bmy_121(55)>
  # bcost_4118 = PHI <bcost_237(55)>
  goto <bb 454> (<L445>);

  <bb 57>:
  i_836 = i_370 + 1;
  # DEBUG i => i_836
  if (i_me_range_511 > i_836)
    goto <bb 59>;
  else
    goto <bb 58>;

  <bb 58>:
  # bmx_4155 = PHI <bmx_10(57)>
  # bmy_4136 = PHI <bmy_121(57)>
  # bcost_4117 = PHI <bcost_237(57)>
  goto <bb 454> (<L445>);

  <bb 59>:
  goto <bb 43>;

<L466>:
  pretmp_4460 = (sizetype) bmx_7;
  pretmp_4464 = bmx_7 + -2;
  pretmp_4468 = pretmp_4464 << 2;
  pretmp_4472 = (long unsigned int) pretmp_4468;
  pretmp_4476 = pretmp_4472 * 2;
  pretmp_4480 = bmy_116 << 2;
  pretmp_4484 = (long unsigned int) pretmp_4480;
  pretmp_4488 = pretmp_4484 * 2;
  pretmp_4492 = bmx_7 + -1;
  pretmp_4496 = pretmp_4492 << 2;
  pretmp_4500 = (long unsigned int) pretmp_4496;
  pretmp_4504 = pretmp_4500 * 2;
  pretmp_4508 = bmy_116 + 2;
  pretmp_4512 = pretmp_4508 << 2;
  pretmp_4516 = (long unsigned int) pretmp_4512;
  pretmp_4520 = pretmp_4516 * 2;
  pretmp_4524 = bmx_7 + 1;
  pretmp_4528 = pretmp_4524 << 2;
  pretmp_4532 = (long unsigned int) pretmp_4528;
  pretmp_4536 = pretmp_4532 * 2;
  pretmp_4540 = bmx_7 + 2;
  pretmp_4544 = pretmp_4540 << 2;
  pretmp_4548 = (long unsigned int) pretmp_4544;
  pretmp_4552 = pretmp_4548 * 2;
  pretmp_4556 = bmy_116 + -2;
  pretmp_4560 = pretmp_4556 << 2;
  pretmp_4564 = (long unsigned int) pretmp_4560;
  pretmp_4568 = pretmp_4564 * 2;

  # i_me_range_1 = PHI <i_me_range_511(60), i_me_range_511(466), i_me_range_2(354), i_me_range_511(129)>
  # bmx_11 = PHI <bmx_7(60), 1(466), bmx_4145(354), bmx_26(129)>
  # bmy_122 = PHI <bmy_116(60), 0(466), bmy_4126(354), bmy_139(129)>
  # bcost_238 = PHI <bcost_232(60), bcost_947(466), bcost_4103(354), bcost_264(129)>
  # prephitmp_4463 = PHI <pretmp_4460(60), 1(466), pretmp_4461(354), pretmp_4462(129)>
  # prephitmp_4479 = PHI <pretmp_4476(60), 18446744073709551608(466), pretmp_4477(354), pretmp_4478(129)>
  # prephitmp_4491 = PHI <pretmp_4488(60), 0(466), pretmp_4489(354), pretmp_4490(129)>
  # prephitmp_4495 = PHI <pretmp_4492(60), 0(466), pretmp_4493(354), pretmp_4494(129)>
  # prephitmp_4507 = PHI <pretmp_4504(60), 0(466), pretmp_4505(354), pretmp_4506(129)>
  # prephitmp_4523 = PHI <pretmp_4520(60), 16(466), pretmp_4521(354), pretmp_4522(129)>
  # prephitmp_4527 = PHI <pretmp_4524(60), 2(466), pretmp_4525(354), pretmp_4526(129)>
  # prephitmp_4539 = PHI <pretmp_4536(60), 16(466), pretmp_4537(354), pretmp_4538(129)>
  # prephitmp_4555 = PHI <pretmp_4552(60), 24(466), pretmp_4553(354), pretmp_4554(129)>
  # prephitmp_4559 = PHI <pretmp_4556(60), -2(466), pretmp_4557(354), pretmp_4558(129)>
  # prephitmp_4571 = PHI <pretmp_4568(60), 18446744073709551600(466), pretmp_4569(354), pretmp_4570(129)>
me_hex2:
  # DEBUG bcost => bcost_238
  # DEBUG bmy => bmy_122
  # DEBUG bmx => bmx_11
  # DEBUG i_me_range => i_me_range_1
  # DEBUG dir => -2
  _2175 = m_505(D)->i_stride[0];
  _2176 = bmy_122 * _2175;
  _2177 = (sizetype) _2176;
  _2178 = _2177 + prephitmp_4463;
  pix_base_2179 = p_fref_512 + _2178;
  # DEBUG pix_base => pix_base_2179
  _2180 = h_510(D)->pixf.fpelcmp_x3[_506];
  _2181 = _2175 * 2;
  _2182 = (sizetype) _2181;
  _2183 = _2182 + 1;
  _2184 = pix_base_2179 + _2183;
  _2185 = _2182 + 18446744073709551615;
  _2186 = pix_base_2179 + _2185;
  _2187 = pix_base_2179 + 18446744073709551614;
  _2188 = m_505(D)->p_fenc[0];
  _2180 (_2188, _2187, _2186, _2184, _2175, &costs);
  _2190 = costs[0];
  _2195 = p_cost_mvx_522 + prephitmp_4479;
  _2196 = *_2195;
  _2197 = (int) _2196;
  _2201 = p_cost_mvy_528 + prephitmp_4491;
  _2202 = *_2201;
  _2203 = (int) _2202;
  _2204 = _2197 + _2203;
  _2205 = _2190 + _2204;
  costs[0] = _2205;
  _2207 = costs[1];
  _2212 = p_cost_mvx_522 + prephitmp_4507;
  _2213 = *_2212;
  _2214 = (int) _2213;
  _2219 = p_cost_mvy_528 + prephitmp_4523;
  _2220 = *_2219;
  _2221 = (int) _2220;
  _2222 = _2214 + _2221;
  _2223 = _2207 + _2222;
  costs[1] = _2223;
  _2225 = costs[2];
  _2230 = p_cost_mvx_522 + prephitmp_4539;
  _2231 = *_2230;
  _2232 = (int) _2231;
  _2233 = _2221 + _2232;
  _2234 = _2225 + _2233;
  costs[2] = _2234;
  _2236 = m_505(D)->i_stride[0];
  _2237 = bmy_122 * _2236;
  _2238 = (sizetype) _2237;
  _2239 = _2238 + prephitmp_4463;
  pix_base_2240 = p_fref_512 + _2239;
  # DEBUG pix_base => pix_base_2240
  _2241 = h_510(D)->pixf.fpelcmp_x3[_506];
  _2242 = _2236 * -2;
  _2243 = (sizetype) _2242;
  _2244 = _2243 + 18446744073709551615;
  _2245 = pix_base_2240 + _2244;
  _2246 = _2243 + 1;
  _2247 = pix_base_2240 + _2246;
  _2248 = pix_base_2240 + 2;
  _2249 = m_505(D)->p_fenc[0];
  _2241 (_2249, _2248, _2247, _2245, _2236, &MEM[(void *)&costs + 12B]);
  _2251 = costs[3];
  _2256 = p_cost_mvx_522 + prephitmp_4555;
  _2257 = *_2256;
  _2258 = (int) _2257;
  _2259 = *_2201;
  _2260 = (int) _2259;
  _2261 = _2258 + _2260;
  bcost_2262 = _2251 + _2261;
  costs[3] = bcost_2262;
  _2264 = costs[4];
  _2265 = *_2230;
  _2266 = (int) _2265;
  _2271 = p_cost_mvy_528 + prephitmp_4571;
  _2272 = *_2271;
  _2273 = (int) _2272;
  _2274 = _2266 + _2273;
  bcost_2275 = _2264 + _2274;
  costs[4] = bcost_2275;
  _2277 = costs[5];
  _2278 = *_2212;
  _2279 = (int) _2278;
  _2280 = _2273 + _2279;
  bcost_2281 = _2277 + _2280;
  costs[5] = bcost_2281;
  bcost_2283 = costs[0];
  if (bcost_238 > bcost_2283)
    goto <bb 63>;
  else
    goto <bb 62>;

  <bb 62>:

  <bb 63>:
  # bcost_239 = PHI <bcost_238(62), bcost_2283(61)>
  # dir_394 = PHI <-2(62), 0(61)>
  # DEBUG dir => dir_394
  # DEBUG bcost => bcost_239
  bcost_2284 = costs[1];
  if (bcost_239 > bcost_2284)
    goto <bb 65>;
  else
    goto <bb 64>;

  <bb 64>:

  <bb 65>:
  # bcost_240 = PHI <bcost_239(64), bcost_2284(63)>
  # dir_395 = PHI <dir_394(64), 1(63)>
  # DEBUG dir => dir_395
  # DEBUG bcost => bcost_240
  bcost_2285 = costs[2];
  if (bcost_240 > bcost_2285)
    goto <bb 67>;
  else
    goto <bb 66>;

  <bb 66>:

  <bb 67>:
  # bcost_241 = PHI <bcost_240(66), bcost_2285(65)>
  # dir_396 = PHI <dir_395(66), 2(65)>
  # DEBUG dir => dir_396
  # DEBUG bcost => bcost_241
  if (bcost_241 > bcost_2262)
    goto <bb 69>;
  else
    goto <bb 68>;

  <bb 68>:

  <bb 69>:
  # bcost_242 = PHI <bcost_241(68), bcost_2262(67)>
  # dir_397 = PHI <dir_396(68), 3(67)>
  # DEBUG dir => dir_397
  # DEBUG bcost => bcost_242
  if (bcost_242 > bcost_2275)
    goto <bb 71>;
  else
    goto <bb 70>;

  <bb 70>:

  <bb 71>:
  # bcost_243 = PHI <bcost_242(70), bcost_2275(69)>
  # dir_398 = PHI <dir_397(70), 4(69)>
  # DEBUG dir => dir_398
  # DEBUG bcost => bcost_243
  if (bcost_243 > bcost_2281)
    goto <bb 74>;
  else
    goto <bb 72>;

  <bb 72>:
  # DEBUG dir => dir_398
  # DEBUG bcost => bcost_243
  if (dir_398 != -2)
    goto <bb 73>;
  else
    goto <bb 96>;

  <bb 73>:
  pretmp_4691 = dir_398 + 1;
  pretmp_4693 = hex2[pretmp_4691][0];
  pretmp_4695 = bmx_11 + pretmp_4693;
  pretmp_4697 = hex2[pretmp_4691][1];
  pretmp_4699 = bmy_122 + pretmp_4697;

  <bb 74>:
  # bcost_3330 = PHI <bcost_243(73), bcost_2281(71)>
  # dir_3291 = PHI <dir_398(73), 5(71)>
  # prephitmp_4696 = PHI <pretmp_4695(73), prephitmp_4495(71)>
  # prephitmp_4700 = PHI <pretmp_4699(73), prephitmp_4559(71)>
  # DEBUG dir => dir_3291
  # DEBUG bcost => bcost_3330
  # DEBUG D#14 => dir_3291 + 1
  # DEBUG D#13 => hex2[D#14][0]
  # DEBUG D#12 => bmx_11 + D#13
  # DEBUG bmx => D#12
  # DEBUG D#11 => hex2[D#14][1]
  # DEBUG D#10 => bmy_122 + D#11
  # DEBUG bmy => D#10
  # DEBUG i => 1
  # DEBUG dir => dir_3291
  # DEBUG i => 1
  # DEBUG bcost => bcost_3330
  # DEBUG bmy => D#10
  # DEBUG bmx => D#12
  _3006 = i_me_range_1 / 2;
  if (_3006 > 1)
    goto <bb 76>;
  else
    goto <bb 75>;

  <bb 75>:
  pretmp_4575 = (sizetype) prephitmp_4696;
  pretmp_4583 = prephitmp_4696 + -1;
  pretmp_4591 = pretmp_4583 << 2;
  pretmp_4599 = (long unsigned int) pretmp_4591;
  pretmp_4607 = pretmp_4599 * 2;
  pretmp_4615 = p_cost_mvx_522 + pretmp_4607;
  pretmp_4623 = prephitmp_4700 << 2;
  pretmp_4631 = (long unsigned int) pretmp_4623;
  pretmp_4639 = pretmp_4631 * 2;
  pretmp_4647 = p_cost_mvy_528 + pretmp_4639;
  pretmp_4655 = prephitmp_4696 + 1;
  pretmp_4663 = pretmp_4655 << 2;
  pretmp_4671 = (long unsigned int) pretmp_4663;
  pretmp_4679 = pretmp_4671 * 2;
  pretmp_4687 = p_cost_mvx_522 + pretmp_4679;
  goto <bb 96>;

  <bb 76>:
  _3004 = bmx_513 <= prephitmp_4696;
  _3007 = mv_x_max_515 >= prephitmp_4696;
  _657 = _3004 & _3007;
  if (_657 != 0)
    goto <bb 78>;
  else
    goto <bb 77>;

  <bb 77>:
  pretmp_4576 = (sizetype) prephitmp_4696;
  pretmp_4584 = prephitmp_4696 + -1;
  pretmp_4592 = pretmp_4584 << 2;
  pretmp_4600 = (long unsigned int) pretmp_4592;
  pretmp_4608 = pretmp_4600 * 2;
  pretmp_4616 = p_cost_mvx_522 + pretmp_4608;
  pretmp_4624 = prephitmp_4700 << 2;
  pretmp_4632 = (long unsigned int) pretmp_4624;
  pretmp_4640 = pretmp_4632 * 2;
  pretmp_4648 = p_cost_mvy_528 + pretmp_4640;
  pretmp_4656 = prephitmp_4696 + 1;
  pretmp_4664 = pretmp_4656 << 2;
  pretmp_4672 = (long unsigned int) pretmp_4664;
  pretmp_4680 = pretmp_4672 * 2;
  pretmp_4688 = p_cost_mvx_522 + pretmp_4680;
  goto <bb 96>;

  <bb 78>:
  _534 = bmy_514 <= prephitmp_4700;
  _425 = mv_y_max_516 >= prephitmp_4700;
  _3008 = _425 & _534;
  if (_3008 != 0)
    goto <bb 80>;
  else
    goto <bb 79>;

  <bb 79>:
  pretmp_4577 = (sizetype) prephitmp_4696;
  pretmp_4585 = prephitmp_4696 + -1;
  pretmp_4593 = pretmp_4585 << 2;
  pretmp_4601 = (long unsigned int) pretmp_4593;
  pretmp_4609 = pretmp_4601 * 2;
  pretmp_4617 = p_cost_mvx_522 + pretmp_4609;
  pretmp_4625 = prephitmp_4700 << 2;
  pretmp_4633 = (long unsigned int) pretmp_4625;
  pretmp_4641 = pretmp_4633 * 2;
  pretmp_4649 = p_cost_mvy_528 + pretmp_4641;
  pretmp_4657 = prephitmp_4696 + 1;
  pretmp_4665 = pretmp_4657 << 2;
  pretmp_4673 = (long unsigned int) pretmp_4665;
  pretmp_4681 = pretmp_4673 * 2;
  pretmp_4689 = p_cost_mvx_522 + pretmp_4681;
  goto <bb 96>;

  <bb 80>:

  <bb 81>:
  # bmx_3344 = PHI <prephitmp_4696(80), bmx_2389(94)>
  # bmy_3615 = PHI <prephitmp_4700(80), bmy_2391(94)>
  # bcost_3602 = PHI <bcost_3330(80), bcost_247(94)>
  # i_3215 = PHI <1(80), i_2392(94)>
  # dir_3323 = PHI <dir_3291(80), dir_402(94)>
  # DEBUG dir => dir_3323
  # DEBUG i => i_3215
  # DEBUG bcost => bcost_3602
  # DEBUG bmy => bmy_3615
  # DEBUG bmx => bmx_3344
  _2298 = dir_3323 + 1;
  dir_2299 = mod6m1[_2298];
  # DEBUG odir => dir_2299
  _2300 = (sizetype) bmx_3344;
  _2301 = m_505(D)->i_stride[0];
  _2302 = _2301 * bmy_3615;
  _2303 = (sizetype) _2302;
  _2304 = _2300 + _2303;
  pix_base_2305 = p_fref_512 + _2304;
  # DEBUG pix_base => pix_base_2305
  _2306 = h_510(D)->pixf.fpelcmp_x3[_506];
  _2307 = dir_2299 + 2;
  _2308 = hex2[_2307][0];
  _2309 = (sizetype) _2308;
  _2310 = hex2[_2307][1];
  _2311 = _2301 * _2310;
  _2312 = (sizetype) _2311;
  _2313 = _2309 + _2312;
  _2314 = pix_base_2305 + _2313;
  dir_2315 = dir_2299 + 1;
  _2316 = hex2[dir_2315][0];
  _2317 = (sizetype) _2316;
  _2318 = hex2[dir_2315][1];
  _2319 = _2301 * _2318;
  _2320 = (sizetype) _2319;
  _2321 = _2317 + _2320;
  _2322 = pix_base_2305 + _2321;
  _2323 = hex2[dir_2299][0];
  _2324 = (sizetype) _2323;
  _2325 = hex2[dir_2299][1];
  _2326 = _2301 * _2325;
  _2327 = (sizetype) _2326;
  _2328 = _2324 + _2327;
  _2329 = pix_base_2305 + _2328;
  _2330 = m_505(D)->p_fenc[0];
  _2306 (_2330, _2329, _2322, _2314, _2301, &costs);
  _2332 = costs[0];
  _2333 = _2323 + bmx_3344;
  _2334 = _2333 << 2;
  _2335 = (long unsigned int) _2334;
  _2336 = _2335 * 2;
  _2337 = p_cost_mvx_522 + _2336;
  _2338 = *_2337;
  _2339 = (int) _2338;
  _2340 = _2325 + bmy_3615;
  _2341 = _2340 << 2;
  _2342 = (long unsigned int) _2341;
  _2343 = _2342 * 2;
  _2344 = p_cost_mvy_528 + _2343;
  _2345 = *_2344;
  _2346 = (int) _2345;
  _2347 = _2339 + _2346;
  bcost_2348 = _2332 + _2347;
  costs[0] = bcost_2348;
  _2350 = costs[1];
  _2351 = _2316 + bmx_3344;
  _2352 = _2351 << 2;
  _2353 = (long unsigned int) _2352;
  _2354 = _2353 * 2;
  _2355 = p_cost_mvx_522 + _2354;
  _2356 = *_2355;
  _2357 = (int) _2356;
  _2358 = _2318 + bmy_3615;
  _2359 = _2358 << 2;
  _2360 = (long unsigned int) _2359;
  _2361 = _2360 * 2;
  _2362 = p_cost_mvy_528 + _2361;
  _2363 = *_2362;
  _2364 = (int) _2363;
  _2365 = _2357 + _2364;
  bcost_2366 = _2350 + _2365;
  costs[1] = bcost_2366;
  _2368 = costs[2];
  _2369 = _2308 + bmx_3344;
  _2370 = _2369 << 2;
  _2371 = (long unsigned int) _2370;
  _2372 = _2371 * 2;
  _2373 = p_cost_mvx_522 + _2372;
  _2374 = *_2373;
  _2375 = (int) _2374;
  _2376 = _2310 + bmy_3615;
  _2377 = _2376 << 2;
  _2378 = (long unsigned int) _2377;
  _2379 = _2378 * 2;
  _2380 = p_cost_mvy_528 + _2379;
  _2381 = *_2380;
  _2382 = (int) _2381;
  _2383 = _2375 + _2382;
  bcost_2384 = _2368 + _2383;
  costs[2] = bcost_2384;
  # DEBUG dir => -2
  if (bcost_2348 < bcost_3602)
    goto <bb 82>;
  else
    goto <bb 83>;

  <bb 82>:
  # DEBUG bcost => bcost_2348
  dir_2386 = dir_2299 + -1;
  # DEBUG dir => dir_2386

  <bb 83>:
  # bcost_245 = PHI <bcost_3602(81), bcost_2348(82)>
  # dir_400 = PHI <-2(81), dir_2386(82)>
  # DEBUG dir => dir_400
  # DEBUG bcost => bcost_245
  if (bcost_245 > bcost_2366)
    goto <bb 85>;
  else
    goto <bb 84>;

  <bb 84>:

  <bb 85>:
  # bcost_246 = PHI <bcost_245(84), bcost_2366(83)>
  # dir_401 = PHI <dir_400(84), dir_2299(83)>
  # DEBUG dir => dir_401
  # DEBUG bcost => bcost_246
  if (bcost_246 > bcost_2384)
    goto <bb 87>;
  else
    goto <bb 86>;

  <bb 86>:

  <bb 87>:
  # bcost_247 = PHI <bcost_246(86), bcost_2384(85)>
  # dir_402 = PHI <dir_401(86), dir_2315(85)>
  # DEBUG dir => dir_402
  # DEBUG bcost => bcost_247
  if (dir_402 == -2)
    goto <bb 88>;
  else
    goto <bb 89>;

  <bb 88>:
  # bcost_4116 = PHI <bcost_247(87)>
  # _4081 = PHI <_2300(87)>
  # bmx_4069 = PHI <bmx_3344(87)>
  # bmy_4068 = PHI <bmy_3615(87)>
  pretmp_4579 = bmx_4069 + -1;
  pretmp_4587 = pretmp_4579 << 2;
  pretmp_4595 = (long unsigned int) pretmp_4587;
  pretmp_4603 = pretmp_4595 * 2;
  pretmp_4611 = p_cost_mvx_522 + pretmp_4603;
  pretmp_4619 = bmy_4068 << 2;
  pretmp_4627 = (long unsigned int) pretmp_4619;
  pretmp_4635 = pretmp_4627 * 2;
  pretmp_4643 = p_cost_mvy_528 + pretmp_4635;
  pretmp_4651 = bmx_4069 + 1;
  pretmp_4659 = pretmp_4651 << 2;
  pretmp_4667 = (long unsigned int) pretmp_4659;
  pretmp_4675 = pretmp_4667 * 2;
  pretmp_4683 = p_cost_mvx_522 + pretmp_4675;
  goto <bb 96>;

  <bb 89>:
  _2387 = dir_402 + 1;
  _2388 = hex2[_2387][0];
  bmx_2389 = _2388 + bmx_3344;
  # DEBUG bmx => bmx_2389
  _2390 = hex2[_2387][1];
  bmy_2391 = _2390 + bmy_3615;
  # DEBUG bmy => bmy_2391
  i_2392 = i_3215 + 1;
  # DEBUG i => i_2392
  # DEBUG dir => dir_402
  # DEBUG i => i_2392
  # DEBUG bcost => bcost_247
  # DEBUG bmy => bmy_2391
  # DEBUG bmx => bmx_2389
  if (i_2392 < _3006)
    goto <bb 91>;
  else
    goto <bb 90>;

  <bb 90>:
  # bcost_4115 = PHI <bcost_247(89)>
  # bmx_4080 = PHI <bmx_2389(89)>
  # bmy_4077 = PHI <bmy_2391(89)>
  pretmp_4572 = (sizetype) bmx_4080;
  pretmp_4580 = bmx_4080 + -1;
  pretmp_4588 = pretmp_4580 << 2;
  pretmp_4596 = (long unsigned int) pretmp_4588;
  pretmp_4604 = pretmp_4596 * 2;
  pretmp_4612 = p_cost_mvx_522 + pretmp_4604;
  pretmp_4620 = bmy_4077 << 2;
  pretmp_4628 = (long unsigned int) pretmp_4620;
  pretmp_4636 = pretmp_4628 * 2;
  pretmp_4644 = p_cost_mvy_528 + pretmp_4636;
  pretmp_4652 = bmx_4080 + 1;
  pretmp_4660 = pretmp_4652 << 2;
  pretmp_4668 = (long unsigned int) pretmp_4660;
  pretmp_4676 = pretmp_4668 * 2;
  pretmp_4684 = p_cost_mvx_522 + pretmp_4676;
  goto <bb 96>;

  <bb 91>:
  _2292 = bmx_513 <= bmx_2389;
  _2293 = mv_x_max_515 >= bmx_2389;
  _2294 = _2292 & _2293;
  if (_2294 != 0)
    goto <bb 93>;
  else
    goto <bb 92>;

  <bb 92>:
  # bcost_4114 = PHI <bcost_247(91)>
  # bmx_4079 = PHI <bmx_2389(91)>
  # bmy_4076 = PHI <bmy_2391(91)>
  pretmp_4573 = (sizetype) bmx_4079;
  pretmp_4581 = bmx_4079 + -1;
  pretmp_4589 = pretmp_4581 << 2;
  pretmp_4597 = (long unsigned int) pretmp_4589;
  pretmp_4605 = pretmp_4597 * 2;
  pretmp_4613 = p_cost_mvx_522 + pretmp_4605;
  pretmp_4621 = bmy_4076 << 2;
  pretmp_4629 = (long unsigned int) pretmp_4621;
  pretmp_4637 = pretmp_4629 * 2;
  pretmp_4645 = p_cost_mvy_528 + pretmp_4637;
  pretmp_4653 = bmx_4079 + 1;
  pretmp_4661 = pretmp_4653 << 2;
  pretmp_4669 = (long unsigned int) pretmp_4661;
  pretmp_4677 = pretmp_4669 * 2;
  pretmp_4685 = p_cost_mvx_522 + pretmp_4677;
  goto <bb 96>;

  <bb 93>:
  _2295 = bmy_514 <= bmy_2391;
  _2296 = mv_y_max_516 >= bmy_2391;
  _2297 = _2295 & _2296;
  if (_2297 != 0)
    goto <bb 94>;
  else
    goto <bb 95>;

  <bb 94>:
  goto <bb 81>;

  <bb 95>:
  # bcost_4113 = PHI <bcost_247(93)>
  # bmx_4078 = PHI <bmx_2389(93)>
  # bmy_4075 = PHI <bmy_2391(93)>
  pretmp_4574 = (sizetype) bmx_4078;
  pretmp_4582 = bmx_4078 + -1;
  pretmp_4590 = pretmp_4582 << 2;
  pretmp_4598 = (long unsigned int) pretmp_4590;
  pretmp_4606 = pretmp_4598 * 2;
  pretmp_4614 = p_cost_mvx_522 + pretmp_4606;
  pretmp_4622 = bmy_4075 << 2;
  pretmp_4630 = (long unsigned int) pretmp_4622;
  pretmp_4638 = pretmp_4630 * 2;
  pretmp_4646 = p_cost_mvy_528 + pretmp_4638;
  pretmp_4654 = bmx_4078 + 1;
  pretmp_4662 = pretmp_4654 << 2;
  pretmp_4670 = (long unsigned int) pretmp_4662;
  pretmp_4678 = pretmp_4670 * 2;
  pretmp_4686 = p_cost_mvx_522 + pretmp_4678;

  <bb 96>:
  # bmx_13 = PHI <bmx_11(72), bmx_4069(88), bmx_4080(90), bmx_4079(92), bmx_4078(95), prephitmp_4696(75), prephitmp_4696(77), prephitmp_4696(79)>
  # bmy_124 = PHI <bmy_122(72), bmy_4068(88), bmy_4077(90), bmy_4076(92), bmy_4075(95), prephitmp_4700(75), prephitmp_4700(77), prephitmp_4700(79)>
  # bcost_249 = PHI <bcost_243(72), bcost_4116(88), bcost_4115(90), bcost_4114(92), bcost_4113(95), bcost_3330(75), bcost_3330(77), bcost_3330(79)>
  # prephitmp_4578 = PHI <prephitmp_4463(72), _4081(88), pretmp_4572(90), pretmp_4573(92), pretmp_4574(95), pretmp_4575(75), pretmp_4576(77), pretmp_4577(79)>
  # prephitmp_4586 = PHI <prephitmp_4495(72), pretmp_4579(88), pretmp_4580(90), pretmp_4581(92), pretmp_4582(95), pretmp_4583(75), pretmp_4584(77), pretmp_4585(79)>
  # prephitmp_4618 = PHI <_2212(72), pretmp_4611(88), pretmp_4612(90), pretmp_4613(92), pretmp_4614(95), pretmp_4615(75), pretmp_4616(77), pretmp_4617(79)>
  # prephitmp_4650 = PHI <_2201(72), pretmp_4643(88), pretmp_4644(90), pretmp_4645(92), pretmp_4646(95), pretmp_4647(75), pretmp_4648(77), pretmp_4649(79)>
  # prephitmp_4658 = PHI <prephitmp_4527(72), pretmp_4651(88), pretmp_4652(90), pretmp_4653(92), pretmp_4654(95), pretmp_4655(75), pretmp_4656(77), pretmp_4657(79)>
  # prephitmp_4690 = PHI <_2230(72), pretmp_4683(88), pretmp_4684(90), pretmp_4685(92), pretmp_4686(95), pretmp_4687(75), pretmp_4688(77), pretmp_4689(79)>
  # DEBUG bcost => bcost_249
  # DEBUG bmy => bmy_124
  # DEBUG bmx => bmx_13
  # DEBUG omx => bmx_13
  # DEBUG omy => bmy_124
  _2394 = m_505(D)->i_stride[0];
  _2395 = bmy_124 * _2394;
  _2396 = (sizetype) _2395;
  _2397 = _2396 + prephitmp_4578;
  pix_base_2398 = p_fref_512 + _2397;
  # DEBUG pix_base => pix_base_2398
  _2399 = h_510(D)->pixf.fpelcmp_x4[_506];
  _2400 = pix_base_2398 + 1;
  _2401 = pix_base_2398 + 18446744073709551615;
  _2402 = (sizetype) _2394;
  _2403 = pix_base_2398 + _2402;
  _2404 = -_2394;
  _2405 = (sizetype) _2404;
  _2406 = pix_base_2398 + _2405;
  _2407 = m_505(D)->p_fenc[0];
  _2399 (_2407, _2406, _2403, _2401, _2400, _2394, &costs);
  _2409 = costs[0];
  _2410 = bmx_13 << 2;
  _2411 = (long unsigned int) _2410;
  _2412 = _2411 * 2;
  _2413 = p_cost_mvx_522 + _2412;
  _2414 = *_2413;
  _2415 = (int) _2414;
  bmy_2416 = bmy_124 + -1;
  _2417 = bmy_2416 << 2;
  _2418 = (long unsigned int) _2417;
  _2419 = _2418 * 2;
  _2420 = p_cost_mvy_528 + _2419;
  _2421 = *_2420;
  _2422 = (int) _2421;
  _2423 = _2415 + _2422;
  bcost_2424 = _2409 + _2423;
  costs[0] = bcost_2424;
  _2426 = costs[1];
  bmy_2427 = bmy_124 + 1;
  _2428 = bmy_2427 << 2;
  _2429 = (long unsigned int) _2428;
  _2430 = _2429 * 2;
  _2431 = p_cost_mvy_528 + _2430;
  _2432 = *_2431;
  _2433 = (int) _2432;
  _2434 = _2415 + _2433;
  bcost_2435 = _2426 + _2434;
  costs[1] = bcost_2435;
  _2437 = costs[2];
  _2443 = *prephitmp_4618;
  _2444 = (int) _2443;
  _2449 = *prephitmp_4650;
  _2450 = (int) _2449;
  _2451 = _2444 + _2450;
  bcost_2452 = _2437 + _2451;
  costs[2] = bcost_2452;
  _2454 = costs[3];
  _2460 = *prephitmp_4690;
  _2461 = (int) _2460;
  _2462 = _2450 + _2461;
  bcost_2463 = _2454 + _2462;
  costs[3] = bcost_2463;
  if (bcost_249 > bcost_2424)
    goto <bb 98>;
  else
    goto <bb 97>;

  <bb 97>:

  <bb 98>:
  # bmy_125 = PHI <bmy_124(97), bmy_2416(96)>
  # bcost_250 = PHI <bcost_249(97), bcost_2424(96)>
  # DEBUG bcost => bcost_250
  # DEBUG bmy => bmy_125
  # DEBUG bmx => bmx_13
  if (bcost_250 > bcost_2435)
    goto <bb 100>;
  else
    goto <bb 99>;

  <bb 99>:

  <bb 100>:
  # bmy_126 = PHI <bmy_125(99), bmy_2427(98)>
  # bcost_251 = PHI <bcost_250(99), bcost_2435(98)>
  # DEBUG bcost => bcost_251
  # DEBUG bmy => bmy_126
  # DEBUG bmx => bmx_13
  if (bcost_251 > bcost_2452)
    goto <bb 102>;
  else
    goto <bb 101>;

  <bb 101>:

  <bb 102>:
  # bmx_14 = PHI <bmx_13(101), prephitmp_4586(100)>
  # bmy_127 = PHI <bmy_126(101), bmy_124(100)>
  # bcost_252 = PHI <bcost_251(101), bcost_2452(100)>
  # DEBUG bcost => bcost_252
  # DEBUG bmy => bmy_127
  # DEBUG bmx => bmx_14
  if (bcost_252 > bcost_2463)
    goto <bb 104>;
  else
    goto <bb 103>;

  <bb 103>:

  <bb 104>:
  # bmx_15 = PHI <bmx_14(103), prephitmp_4658(102)>
  # bmy_128 = PHI <bmy_127(103), bmy_124(102)>
  # bcost_253 = PHI <bcost_252(103), bcost_2463(102)>
  # DEBUG bcost => bcost_253
  # DEBUG bmy => bmy_128
  # DEBUG bmx => bmx_15
  _2465 = m_505(D)->i_stride[0];
  _2466 = bmy_124 * _2465;
  _2467 = (sizetype) _2466;
  _2468 = _2467 + prephitmp_4578;
  pix_base_2469 = p_fref_512 + _2468;
  # DEBUG pix_base => pix_base_2469
  _2470 = h_510(D)->pixf.fpelcmp_x4[_506];
  _2471 = (sizetype) _2465;
  _2472 = _2471 + 1;
  _2473 = pix_base_2469 + _2472;
  _2474 = -_2465;
  _2475 = (sizetype) _2474;
  _2476 = _2475 + 1;
  _2477 = pix_base_2469 + _2476;
  _2478 = _2471 + 18446744073709551615;
  _2479 = pix_base_2469 + _2478;
  _2480 = _2475 + 18446744073709551615;
  _2481 = pix_base_2469 + _2480;
  _2482 = m_505(D)->p_fenc[0];
  _2470 (_2482, _2481, _2479, _2477, _2473, _2465, &costs);
  _2484 = costs[0];
  _2485 = *prephitmp_4618;
  _2486 = (int) _2485;
  _2487 = *_2420;
  _2488 = (int) _2487;
  _2489 = _2486 + _2488;
  bcost_2490 = _2484 + _2489;
  costs[0] = bcost_2490;
  _2492 = costs[1];
  _2493 = *_2431;
  _2494 = (int) _2493;
  _2495 = _2486 + _2494;
  bcost_2496 = _2492 + _2495;
  costs[1] = bcost_2496;
  _2498 = costs[2];
  _2499 = *prephitmp_4690;
  _2500 = (int) _2499;
  _2501 = _2488 + _2500;
  bcost_2502 = _2498 + _2501;
  costs[2] = bcost_2502;
  _2504 = costs[3];
  _2505 = _2494 + _2500;
  bcost_2506 = _2504 + _2505;
  costs[3] = bcost_2506;
  if (bcost_253 > bcost_2490)
    goto <bb 106>;
  else
    goto <bb 105>;

  <bb 105>:

  <bb 106>:
  # bmx_16 = PHI <bmx_15(105), prephitmp_4586(104)>
  # bmy_129 = PHI <bmy_128(105), bmy_2416(104)>
  # bcost_254 = PHI <bcost_253(105), bcost_2490(104)>
  # DEBUG bcost => bcost_254
  # DEBUG bmy => bmy_129
  # DEBUG bmx => bmx_16
  if (bcost_254 > bcost_2496)
    goto <bb 108>;
  else
    goto <bb 107>;

  <bb 107>:

  <bb 108>:
  # bmx_17 = PHI <bmx_16(107), prephitmp_4586(106)>
  # bmy_130 = PHI <bmy_129(107), bmy_2427(106)>
  # bcost_255 = PHI <bcost_254(107), bcost_2496(106)>
  # DEBUG bcost => bcost_255
  # DEBUG bmy => bmy_130
  # DEBUG bmx => bmx_17
  if (bcost_255 > bcost_2502)
    goto <bb 110>;
  else
    goto <bb 109>;

  <bb 109>:

  <bb 110>:
  # bmx_18 = PHI <bmx_17(109), prephitmp_4658(108)>
  # bmy_131 = PHI <bmy_130(109), bmy_2416(108)>
  # bcost_256 = PHI <bcost_255(109), bcost_2502(108)>
  # DEBUG bcost => bcost_256
  # DEBUG bmy => bmy_131
  # DEBUG bmx => bmx_18
  if (bcost_256 > bcost_2506)
    goto <bb 454> (<L445>);
  else
    goto <bb 111>;

  <bb 111>:
  goto <bb 454> (<L445>);

<L87>:
  # DEBUG cross_start => 1
  # DEBUG ucost1 => bcost_232
  # DEBUG omx => bmx_541
  # DEBUG omy => bmy_543
  _837 = (sizetype) bmx_541;
  _838 = m_505(D)->i_stride[0];
  _839 = bmy_543 * _838;
  _840 = (sizetype) _839;
  _841 = _837 + _840;
  pix_base_842 = p_fref_512 + _841;
  # DEBUG pix_base => pix_base_842
  _843 = h_510(D)->pixf.fpelcmp_x4[_506];
  _844 = pix_base_842 + 1;
  _845 = pix_base_842 + 18446744073709551615;
  _846 = (sizetype) _838;
  _847 = pix_base_842 + _846;
  _848 = -_838;
  _849 = (sizetype) _848;
  _850 = pix_base_842 + _849;
  _851 = m_505(D)->p_fenc[0];
  _843 (_851, _850, _847, _845, _844, _838, &costs);
  _853 = costs[0];
  _854 = bmx_541 << 2;
  _855 = (long unsigned int) _854;
  _856 = _855 * 2;
  _857 = p_cost_mvx_522 + _856;
  _858 = *_857;
  _859 = (int) _858;
  bmy_860 = bmy_543 + -1;
  _861 = bmy_860 << 2;
  _862 = (long unsigned int) _861;
  _863 = _862 * 2;
  _864 = p_cost_mvy_528 + _863;
  _865 = *_864;
  _866 = (int) _865;
  _867 = _859 + _866;
  bcost_868 = _853 + _867;
  costs[0] = bcost_868;
  _870 = costs[1];
  bmy_871 = bmy_543 + 1;
  _872 = bmy_871 << 2;
  _873 = (long unsigned int) _872;
  _874 = _873 * 2;
  _875 = p_cost_mvy_528 + _874;
  _876 = *_875;
  _877 = (int) _876;
  _878 = _859 + _877;
  bcost_879 = _870 + _878;
  costs[1] = bcost_879;
  _881 = costs[2];
  bmx_882 = bmx_541 + -1;
  _883 = bmx_882 << 2;
  _884 = (long unsigned int) _883;
  _885 = _884 * 2;
  _886 = p_cost_mvx_522 + _885;
  _887 = *_886;
  _888 = (int) _887;
  _889 = bmy_543 << 2;
  _890 = (long unsigned int) _889;
  _891 = _890 * 2;
  _892 = p_cost_mvy_528 + _891;
  _893 = *_892;
  _894 = (int) _893;
  _895 = _888 + _894;
  bcost_896 = _881 + _895;
  costs[2] = bcost_896;
  _898 = costs[3];
  bmx_899 = bmx_541 + 1;
  _900 = bmx_899 << 2;
  _901 = (long unsigned int) _900;
  _902 = _901 * 2;
  _903 = p_cost_mvx_522 + _902;
  _904 = *_903;
  _905 = (int) _904;
  _906 = _894 + _905;
  bcost_907 = _898 + _906;
  costs[3] = bcost_907;
  if (bcost_232 > bcost_868)
    goto <bb 114>;
  else
    goto <bb 113>;

  <bb 113>:

  <bb 114>:
  # bmx_19 = PHI <bmx_7(113), bmx_541(112)>
  # bmy_132 = PHI <bmy_116(113), bmy_860(112)>
  # bcost_257 = PHI <bcost_232(113), bcost_868(112)>
  # DEBUG bcost => bcost_257
  # DEBUG bmy => bmy_132
  # DEBUG bmx => bmx_19
  if (bcost_257 > bcost_879)
    goto <bb 116>;
  else
    goto <bb 115>;

  <bb 115>:

  <bb 116>:
  # bmx_20 = PHI <bmx_19(115), bmx_541(114)>
  # bmy_133 = PHI <bmy_132(115), bmy_871(114)>
  # bcost_258 = PHI <bcost_257(115), bcost_879(114)>
  # DEBUG bcost => bcost_258
  # DEBUG bmy => bmy_133
  # DEBUG bmx => bmx_20
  if (bcost_258 > bcost_896)
    goto <bb 118>;
  else
    goto <bb 117>;

  <bb 117>:

  <bb 118>:
  # bmx_21 = PHI <bmx_20(117), bmx_882(116)>
  # bmy_134 = PHI <bmy_133(117), bmy_543(116)>
  # bcost_259 = PHI <bcost_258(117), bcost_896(116)>
  # DEBUG bcost => bcost_259
  # DEBUG bmy => bmy_134
  # DEBUG bmx => bmx_21
  if (bcost_259 > bcost_907)
    goto <bb 120>;
  else
    goto <bb 119>;

  <bb 119>:

  <bb 120>:
  # bmx_22 = PHI <bmx_21(119), bmx_899(118)>
  # bmy_135 = PHI <bmy_134(119), bmy_543(118)>
  # bcost_260 = PHI <bcost_259(119), bcost_907(118)>
  # DEBUG bcost => bcost_260
  # DEBUG bmy => bmy_135
  # DEBUG bmx => bmx_22
  _909 = bmx_541 | bmy_543;
  if (_909 != 0)
    goto <bb 121>;
  else
    goto <bb 128>;

  <bb 121>:
  # DEBUG omx => 0
  # DEBUG omy => 0
  # DEBUG pix_base => p_fref_512
  _910 = h_510(D)->pixf.fpelcmp_x4[_506];
  _911 = p_fref_512 + 1;
  _912 = p_fref_512 + 18446744073709551615;
  _913 = m_505(D)->i_stride[0];
  _914 = (sizetype) _913;
  _915 = p_fref_512 + _914;
  _916 = -_913;
  _917 = (sizetype) _916;
  _918 = p_fref_512 + _917;
  _919 = m_505(D)->p_fenc[0];
  _910 (_919, _918, _915, _912, _911, _913, &costs);
  _921 = costs[0];
  _922 = *p_cost_mvx_522;
  _923 = (int) _922;
  _924 = MEM[(const int16_t *)p_cost_mvy_528 + -8B];
  _925 = (int) _924;
  _926 = _923 + _925;
  bcost_927 = _921 + _926;
  costs[0] = bcost_927;
  _929 = costs[1];
  _930 = MEM[(const int16_t *)p_cost_mvy_528 + 8B];
  _931 = (int) _930;
  _932 = _923 + _931;
  bcost_933 = _929 + _932;
  costs[1] = bcost_933;
  _935 = costs[2];
  _936 = MEM[(const int16_t *)p_cost_mvx_522 + -8B];
  _937 = (int) _936;
  _938 = *p_cost_mvy_528;
  _939 = (int) _938;
  _940 = _937 + _939;
  bcost_941 = _935 + _940;
  costs[2] = bcost_941;
  _943 = costs[3];
  _944 = MEM[(const int16_t *)p_cost_mvx_522 + 8B];
  _945 = (int) _944;
  _946 = _939 + _945;
  bcost_947 = _943 + _946;
  costs[3] = bcost_947;
  if (bcost_260 > bcost_927)
    goto <bb 123>;
  else
    goto <bb 122>;

  <bb 122>:

  <bb 123>:
  # bmx_23 = PHI <bmx_22(122), 0(121)>
  # bmy_136 = PHI <bmy_135(122), -1(121)>
  # bcost_261 = PHI <bcost_260(122), bcost_927(121)>
  # DEBUG bcost => bcost_261
  # DEBUG bmy => bmy_136
  # DEBUG bmx => bmx_23
  if (bcost_261 > bcost_933)
    goto <bb 125>;
  else
    goto <bb 124>;

  <bb 124>:

  <bb 125>:
  # bmx_24 = PHI <bmx_23(124), 0(123)>
  # bmy_137 = PHI <bmy_136(124), 1(123)>
  # bcost_262 = PHI <bcost_261(124), bcost_933(123)>
  # DEBUG bcost => bcost_262
  # DEBUG bmy => bmy_137
  # DEBUG bmx => bmx_24
  if (bcost_262 > bcost_941)
    goto <bb 127>;
  else
    goto <bb 126>;

  <bb 126>:

  <bb 127>:
  # bmx_25 = PHI <bmx_24(126), -1(125)>
  # bmy_138 = PHI <bmy_137(126), 0(125)>
  # bcost_263 = PHI <bcost_262(126), bcost_941(125)>
  # DEBUG bcost => bcost_263
  # DEBUG bmy => bmy_138
  # DEBUG bmx => bmx_25
  if (bcost_263 > bcost_947)
    goto <bb 466>;
  else
    goto <bb 128>;

  <bb 128>:
  # bmx_26 = PHI <bmx_22(120), bmx_25(127)>
  # bmy_139 = PHI <bmy_135(120), bmy_138(127)>
  # bcost_264 = PHI <bcost_260(120), bcost_263(127)>
  # DEBUG bcost => bcost_264
  # DEBUG bmy => bmy_139
  # DEBUG bmx => bmx_26
  if (_506 == 6)
    goto <bb 129>;
  else
    goto <bb 130>;

  <bb 129>:
  pretmp_4462 = (sizetype) bmx_26;
  pretmp_4466 = bmx_26 + -2;
  pretmp_4470 = pretmp_4466 << 2;
  pretmp_4474 = (long unsigned int) pretmp_4470;
  pretmp_4478 = pretmp_4474 * 2;
  pretmp_4482 = bmy_139 << 2;
  pretmp_4486 = (long unsigned int) pretmp_4482;
  pretmp_4490 = pretmp_4486 * 2;
  pretmp_4494 = bmx_26 + -1;
  pretmp_4498 = pretmp_4494 << 2;
  pretmp_4502 = (long unsigned int) pretmp_4498;
  pretmp_4506 = pretmp_4502 * 2;
  pretmp_4510 = bmy_139 + 2;
  pretmp_4514 = pretmp_4510 << 2;
  pretmp_4518 = (long unsigned int) pretmp_4514;
  pretmp_4522 = pretmp_4518 * 2;
  pretmp_4526 = bmx_26 + 1;
  pretmp_4530 = pretmp_4526 << 2;
  pretmp_4534 = (long unsigned int) pretmp_4530;
  pretmp_4538 = pretmp_4534 * 2;
  pretmp_4542 = bmx_26 + 2;
  pretmp_4546 = pretmp_4542 << 2;
  pretmp_4550 = (long unsigned int) pretmp_4546;
  pretmp_4554 = pretmp_4550 * 2;
  pretmp_4558 = bmy_139 + -2;
  pretmp_4562 = pretmp_4558 << 2;
  pretmp_4566 = (long unsigned int) pretmp_4562;
  pretmp_4570 = pretmp_4566 * 2;
  goto <bb 61> (me_hex2);

  <bb 130>:
  # DEBUG ucost2 => bcost_264
  _949 = bmx_26 | bmy_139;
  if (_949 != 0)
    goto <bb 131>;
  else
    goto <bb 467>;

  <bb 131>:
  pretmp_4458 = (sizetype) bmx_26;

  <bb 132>:
  # bmx_3695 = PHI <bmx_26(131), 1(466)>
  # bmy_3693 = PHI <bmy_139(131), 0(466)>
  # bcost_3689 = PHI <bcost_264(131), bcost_947(466)>
  # prephitmp_4459 = PHI <pretmp_4458(131), 1(466)>
  # DEBUG ucost2 => bcost_3689
  _950 = bmx_3695 - bmx_541;
  _951 = bmy_3693 - bmy_543;
  _952 = _950 | _951;
  if (_952 != 0)
    goto <bb 134>;
  else
    goto <bb 133>;

  <bb 133>:
  pretmp_4308 = bmy_3693 + -2;
  pretmp_4310 = pretmp_4308 << 2;
  pretmp_4312 = (long unsigned int) pretmp_4310;
  pretmp_4314 = pretmp_4312 * 2;
  pretmp_4316 = bmx_3695 + -2;
  pretmp_4318 = pretmp_4316 << 2;
  pretmp_4320 = (long unsigned int) pretmp_4318;
  pretmp_4322 = pretmp_4320 * 2;
  pretmp_4324 = bmx_3695 + 2;
  pretmp_4326 = pretmp_4324 << 2;
  pretmp_4328 = (long unsigned int) pretmp_4326;
  pretmp_4330 = pretmp_4328 * 2;
  pretmp_4332 = bmy_3693 + 2;
  pretmp_4334 = pretmp_4332 << 2;
  pretmp_4336 = (long unsigned int) pretmp_4334;
  pretmp_4338 = pretmp_4336 * 2;
  goto <bb 467>;

  <bb 134>:
  # DEBUG omx => bmx_3695
  # DEBUG omy => bmy_3693
  _954 = m_505(D)->i_stride[0];
  _955 = _954 * bmy_3693;
  _956 = (sizetype) _955;
  _957 = _956 + prephitmp_4459;
  pix_base_958 = p_fref_512 + _957;
  # DEBUG pix_base => pix_base_958
  _959 = h_510(D)->pixf.fpelcmp_x4[_506];
  _960 = pix_base_958 + 1;
  _961 = pix_base_958 + 18446744073709551615;
  _962 = (sizetype) _954;
  _963 = pix_base_958 + _962;
  _964 = -_954;
  _965 = (sizetype) _964;
  _966 = pix_base_958 + _965;
  _967 = m_505(D)->p_fenc[0];
  _959 (_967, _966, _963, _961, _960, _954, &costs);
  _969 = costs[0];
  _970 = bmx_3695 << 2;
  _971 = (long unsigned int) _970;
  _972 = _971 * 2;
  _973 = p_cost_mvx_522 + _972;
  _974 = *_973;
  _975 = (int) _974;
  bmy_976 = bmy_3693 + -1;
  _977 = bmy_976 << 2;
  _978 = (long unsigned int) _977;
  _979 = _978 * 2;
  _980 = p_cost_mvy_528 + _979;
  _981 = *_980;
  _982 = (int) _981;
  _983 = _975 + _982;
  bcost_984 = _969 + _983;
  costs[0] = bcost_984;
  _986 = costs[1];
  bmy_987 = bmy_3693 + 1;
  _988 = bmy_987 << 2;
  _989 = (long unsigned int) _988;
  _990 = _989 * 2;
  _991 = p_cost_mvy_528 + _990;
  _992 = *_991;
  _993 = (int) _992;
  _994 = _975 + _993;
  bcost_995 = _986 + _994;
  costs[1] = bcost_995;
  _997 = costs[2];
  bmx_998 = bmx_3695 + -1;
  _999 = bmx_998 << 2;
  _1000 = (long unsigned int) _999;
  _1001 = _1000 * 2;
  _1002 = p_cost_mvx_522 + _1001;
  _1003 = *_1002;
  _1004 = (int) _1003;
  _1005 = bmy_3693 << 2;
  _1006 = (long unsigned int) _1005;
  _1007 = _1006 * 2;
  _1008 = p_cost_mvy_528 + _1007;
  _1009 = *_1008;
  _1010 = (int) _1009;
  _1011 = _1004 + _1010;
  bcost_1012 = _997 + _1011;
  costs[2] = bcost_1012;
  _1014 = costs[3];
  bmx_1015 = bmx_3695 + 1;
  _1016 = bmx_1015 << 2;
  _1017 = (long unsigned int) _1016;
  _1018 = _1017 * 2;
  _1019 = p_cost_mvx_522 + _1018;
  _1020 = *_1019;
  _1021 = (int) _1020;
  _1022 = _1010 + _1021;
  bcost_1023 = _1014 + _1022;
  costs[3] = bcost_1023;
  if (bcost_984 < bcost_3689)
    goto <bb 136>;
  else
    goto <bb 135>;

  <bb 135>:

  <bb 136>:
  # bmy_140 = PHI <bmy_3693(135), bmy_976(134)>
  # bcost_265 = PHI <bcost_3689(135), bcost_984(134)>
  # DEBUG bcost => bcost_265
  # DEBUG bmy => bmy_140
  # DEBUG bmx => bmx_3695
  if (bcost_265 > bcost_995)
    goto <bb 138>;
  else
    goto <bb 137>;

  <bb 137>:

  <bb 138>:
  # bmy_141 = PHI <bmy_140(137), bmy_987(136)>
  # bcost_266 = PHI <bcost_265(137), bcost_995(136)>
  # DEBUG bcost => bcost_266
  # DEBUG bmy => bmy_141
  # DEBUG bmx => bmx_3695
  if (bcost_266 > bcost_1012)
    goto <bb 140>;
  else
    goto <bb 139>;

  <bb 139>:

  <bb 140>:
  # bmx_27 = PHI <bmx_3695(139), bmx_998(138)>
  # bmy_142 = PHI <bmy_141(139), bmy_3693(138)>
  # bcost_267 = PHI <bcost_266(139), bcost_1012(138)>
  # DEBUG bcost => bcost_267
  # DEBUG bmy => bmy_142
  # DEBUG bmx => bmx_27
  if (bcost_267 > bcost_1023)
    goto <bb 142>;
  else
    goto <bb 141>;

  <bb 141>:

  <bb 142>:
  # bmx_28 = PHI <bmx_27(141), bmx_1015(140)>
  # bmy_143 = PHI <bmy_142(141), bmy_3693(140)>
  # bcost_268 = PHI <bcost_267(141), bcost_1023(140)>
  # DEBUG bcost => bcost_268
  # DEBUG bmy => bmy_143
  # DEBUG bmx => bmx_28
  if (bcost_268 == bcost_3689)
    goto <bb 144>;
  else
    goto <bb 143>;

  <bb 143>:
  pretmp_4340 = bmx_28 - bmx_513;
  pretmp_4344 = mv_x_max_515 - bmx_28;
  pretmp_4348 = MIN_EXPR <pretmp_4340, pretmp_4344>;
  pretmp_4352 = (sizetype) bmx_28;
  pretmp_4355 = bmy_143 - bmy_514;
  pretmp_4359 = mv_y_max_516 - bmy_143;
  pretmp_4363 = MIN_EXPR <pretmp_4355, pretmp_4359>;
  pretmp_4367 = bmx_28 + -2;
  pretmp_4370 = pretmp_4367 << 2;
  pretmp_4373 = (long unsigned int) pretmp_4370;
  pretmp_4376 = pretmp_4373 * 2;
  pretmp_4379 = p_cost_mvx_522 + pretmp_4376;
  pretmp_4382 = bmy_143 + -2;
  pretmp_4385 = pretmp_4382 << 2;
  pretmp_4388 = (long unsigned int) pretmp_4385;
  pretmp_4391 = pretmp_4388 * 2;
  pretmp_4394 = p_cost_mvy_528 + pretmp_4391;
  pretmp_4397 = bmy_143 + 2;
  pretmp_4400 = pretmp_4397 << 2;
  pretmp_4403 = (long unsigned int) pretmp_4400;
  pretmp_4406 = pretmp_4403 * 2;
  pretmp_4409 = p_cost_mvy_528 + pretmp_4406;
  pretmp_4412 = bmx_28 + 2;
  pretmp_4415 = pretmp_4412 << 2;
  pretmp_4418 = (long unsigned int) pretmp_4415;
  pretmp_4421 = pretmp_4418 * 2;
  pretmp_4424 = p_cost_mvx_522 + pretmp_4421;
  goto <bb 233>;

  <bb 144>:
  pretmp_4709 = (sizetype) bmx_28;
  pretmp_4711 = bmy_143 + -2;
  pretmp_4713 = pretmp_4711 << 2;
  pretmp_4715 = (long unsigned int) pretmp_4713;
  pretmp_4717 = pretmp_4715 * 2;
  pretmp_4719 = bmx_28 + -2;
  pretmp_4721 = pretmp_4719 << 2;
  pretmp_4723 = (long unsigned int) pretmp_4721;
  pretmp_4725 = pretmp_4723 * 2;
  pretmp_4727 = bmx_28 + 2;
  pretmp_4729 = pretmp_4727 << 2;
  pretmp_4731 = (long unsigned int) pretmp_4729;
  pretmp_4733 = pretmp_4731 * 2;
  pretmp_4735 = bmy_143 + 2;
  pretmp_4737 = pretmp_4735 << 2;
  pretmp_4739 = (long unsigned int) pretmp_4737;
  pretmp_4741 = pretmp_4739 * 2;
  goto <bb 468>;

  <bb 145>:
  _1028 = m_505(D)->i_stride[0];
  _1029 = _1028 * bmy_3691;
  _1030 = (sizetype) _1029;
  _1031 = _1030 + prephitmp_4710;
  pix_base_1032 = p_fref_512 + _1031;
  # DEBUG pix_base => pix_base_1032
  _1033 = h_510(D)->pixf.fpelcmp_x4[_506];
  _1034 = pix_base_1032 + 18446744073709551614;
  _1035 = -_1028;
  _1036 = (sizetype) _1035;
  _1037 = _1036 + 1;
  _1038 = pix_base_1032 + _1037;
  _1039 = _1036 + 18446744073709551615;
  _1040 = pix_base_1032 + _1039;
  _1041 = _1028 * -2;
  _1042 = (sizetype) _1041;
  _1043 = pix_base_1032 + _1042;
  _1044 = m_505(D)->p_fenc[0];
  _1033 (_1044, _1043, _1040, _1038, _1034, _1028, &costs);
  _1046 = costs[0];
  _1047 = bmx_3692 << 2;
  _1048 = (long unsigned int) _1047;
  _1049 = _1048 * 2;
  _1050 = p_cost_mvx_522 + _1049;
  _1051 = *_1050;
  _1052 = (int) _1051;
  _1057 = p_cost_mvy_528 + prephitmp_4718;
  _1058 = *_1057;
  _1059 = (int) _1058;
  _1060 = _1052 + _1059;
  bcost_1061 = _1046 + _1060;
  costs[0] = bcost_1061;
  _1063 = costs[1];
  bmx_1064 = bmx_3692 + -1;
  _1065 = bmx_1064 << 2;
  _1066 = (long unsigned int) _1065;
  _1067 = _1066 * 2;
  _1068 = p_cost_mvx_522 + _1067;
  _1069 = *_1068;
  _1070 = (int) _1069;
  bmy_1071 = bmy_3691 + -1;
  _1072 = bmy_1071 << 2;
  _1073 = (long unsigned int) _1072;
  _1074 = _1073 * 2;
  _1075 = p_cost_mvy_528 + _1074;
  _1076 = *_1075;
  _1077 = (int) _1076;
  _1078 = _1070 + _1077;
  bcost_1079 = _1063 + _1078;
  costs[1] = bcost_1079;
  _1081 = costs[2];
  bmx_1082 = bmx_3692 + 1;
  _1083 = bmx_1082 << 2;
  _1084 = (long unsigned int) _1083;
  _1085 = _1084 * 2;
  _1086 = p_cost_mvx_522 + _1085;
  _1087 = *_1086;
  _1088 = (int) _1087;
  _1089 = _1077 + _1088;
  bcost_1090 = _1081 + _1089;
  costs[2] = bcost_1090;
  _1092 = costs[3];
  _1097 = p_cost_mvx_522 + prephitmp_4726;
  _1098 = *_1097;
  _1099 = (int) _1098;
  _1100 = bmy_3691 << 2;
  _1101 = (long unsigned int) _1100;
  _1102 = _1101 * 2;
  _1103 = p_cost_mvy_528 + _1102;
  _1104 = *_1103;
  _1105 = (int) _1104;
  _1106 = _1099 + _1105;
  bcost_1107 = _1092 + _1106;
  costs[3] = bcost_1107;
  if (bcost_1061 < bcost_3363)
    goto <bb 147>;
  else
    goto <bb 146>;

  <bb 146>:

  <bb 147>:
  # bmy_144 = PHI <bmy_3691(146), prephitmp_4712(145)>
  # bcost_269 = PHI <bcost_3363(146), bcost_1061(145)>
  # DEBUG bcost => bcost_269
  # DEBUG bmy => bmy_144
  # DEBUG bmx => bmx_3692
  if (bcost_269 > bcost_1079)
    goto <bb 149>;
  else
    goto <bb 148>;

  <bb 148>:

  <bb 149>:
  # bmx_29 = PHI <bmx_3692(148), bmx_1064(147)>
  # bmy_145 = PHI <bmy_144(148), bmy_1071(147)>
  # bcost_270 = PHI <bcost_269(148), bcost_1079(147)>
  # DEBUG bcost => bcost_270
  # DEBUG bmy => bmy_145
  # DEBUG bmx => bmx_29
  if (bcost_270 > bcost_1090)
    goto <bb 151>;
  else
    goto <bb 150>;

  <bb 150>:

  <bb 151>:
  # bmx_30 = PHI <bmx_29(150), bmx_1082(149)>
  # bmy_146 = PHI <bmy_145(150), bmy_1071(149)>
  # bcost_271 = PHI <bcost_270(150), bcost_1090(149)>
  # DEBUG bcost => bcost_271
  # DEBUG bmy => bmy_146
  # DEBUG bmx => bmx_30
  if (bcost_271 > bcost_1107)
    goto <bb 153>;
  else
    goto <bb 152>;

  <bb 152>:

  <bb 153>:
  # bmx_31 = PHI <bmx_30(152), prephitmp_4720(151)>
  # bmy_147 = PHI <bmy_146(152), bmy_3691(151)>
  # bcost_272 = PHI <bcost_271(152), bcost_1107(151)>
  # DEBUG bcost => bcost_272
  # DEBUG bmy => bmy_147
  # DEBUG bmx => bmx_31
  _1109 = m_505(D)->i_stride[0];
  _1110 = _1109 * bmy_3691;
  _1111 = (sizetype) _1110;
  _1112 = _1111 + prephitmp_4710;
  pix_base_1113 = p_fref_512 + _1112;
  # DEBUG pix_base => pix_base_1113
  _1114 = h_510(D)->pixf.fpelcmp_x4[_506];
  _1115 = _1109 * 2;
  _1116 = (sizetype) _1115;
  _1117 = pix_base_1113 + _1116;
  _1118 = (sizetype) _1109;
  _1119 = _1118 + 1;
  _1120 = pix_base_1113 + _1119;
  _1121 = _1118 + 18446744073709551615;
  _1122 = pix_base_1113 + _1121;
  _1123 = pix_base_1113 + 2;
  _1124 = m_505(D)->p_fenc[0];
  _1114 (_1124, _1123, _1122, _1120, _1117, _1109, &costs);
  _1126 = costs[0];
  _1131 = p_cost_mvx_522 + prephitmp_4734;
  _1132 = *_1131;
  _1133 = (int) _1132;
  _1134 = *_1103;
  _1135 = (int) _1134;
  _1136 = _1133 + _1135;
  bcost_1137 = _1126 + _1136;
  costs[0] = bcost_1137;
  _1139 = costs[1];
  _1140 = *_1068;
  _1141 = (int) _1140;
  bmy_1142 = bmy_3691 + 1;
  _1143 = bmy_1142 << 2;
  _1144 = (long unsigned int) _1143;
  _1145 = _1144 * 2;
  _1146 = p_cost_mvy_528 + _1145;
  _1147 = *_1146;
  _1148 = (int) _1147;
  _1149 = _1141 + _1148;
  bcost_1150 = _1139 + _1149;
  costs[1] = bcost_1150;
  _1152 = costs[2];
  _1153 = *_1086;
  _1154 = (int) _1153;
  _1155 = _1148 + _1154;
  bcost_1156 = _1152 + _1155;
  costs[2] = bcost_1156;
  _1158 = costs[3];
  _1159 = *_1050;
  _1160 = (int) _1159;
  _1165 = p_cost_mvy_528 + prephitmp_4742;
  _1166 = *_1165;
  _1167 = (int) _1166;
  _1168 = _1160 + _1167;
  bcost_1169 = _1158 + _1168;
  costs[3] = bcost_1169;
  if (bcost_272 > bcost_1137)
    goto <bb 155>;
  else
    goto <bb 154>;

  <bb 154>:

  <bb 155>:
  # bmx_32 = PHI <bmx_31(154), prephitmp_4728(153)>
  # bmy_148 = PHI <bmy_147(154), bmy_3691(153)>
  # bcost_273 = PHI <bcost_272(154), bcost_1137(153)>
  # DEBUG bcost => bcost_273
  # DEBUG bmy => bmy_148
  # DEBUG bmx => bmx_32
  if (bcost_273 > bcost_1150)
    goto <bb 157>;
  else
    goto <bb 156>;

  <bb 156>:

  <bb 157>:
  # bmx_33 = PHI <bmx_32(156), bmx_1064(155)>
  # bmy_149 = PHI <bmy_148(156), bmy_1142(155)>
  # bcost_274 = PHI <bcost_273(156), bcost_1150(155)>
  # DEBUG bcost => bcost_274
  # DEBUG bmy => bmy_149
  # DEBUG bmx => bmx_33
  if (bcost_274 > bcost_1156)
    goto <bb 159>;
  else
    goto <bb 158>;

  <bb 158>:

  <bb 159>:
  # bmx_34 = PHI <bmx_33(158), bmx_1082(157)>
  # bmy_150 = PHI <bmy_149(158), bmy_1142(157)>
  # bcost_275 = PHI <bcost_274(158), bcost_1156(157)>
  # DEBUG bcost => bcost_275
  # DEBUG bmy => bmy_150
  # DEBUG bmx => bmx_34
  if (bcost_275 > bcost_1169)
    goto <bb 161>;
  else
    goto <bb 160>;

  <bb 160>:

  <bb 161>:
  # bmx_35 = PHI <bmx_34(160), bmx_3692(159)>
  # bmy_151 = PHI <bmy_150(160), prephitmp_4736(159)>
  # bcost_276 = PHI <bcost_275(160), bcost_1169(159)>
  # DEBUG bcost => bcost_276
  # DEBUG bmy => bmy_151
  # DEBUG bmx => bmx_35
  if (bcost_232 == bcost_276)
    goto <bb 162>;
  else
    goto <bb 163>;

  <bb 162>:
  _1171 = 500 >> _1025;
  if (bcost_232 < _1171)
    goto <bb 454> (<L445>);
  else
    goto <bb 163>;

  <bb 163>:
  if (bcost_276 == bcost_3363)
    goto <bb 165>;
  else
    goto <bb 164>;

  <bb 164>:
  pretmp_4342 = bmx_3692 - bmx_513;
  pretmp_4346 = mv_x_max_515 - bmx_3692;
  pretmp_4350 = MIN_EXPR <pretmp_4342, pretmp_4346>;
  pretmp_4357 = bmy_3691 - bmy_514;
  pretmp_4361 = mv_y_max_516 - bmy_3691;
  pretmp_4365 = MIN_EXPR <pretmp_4357, pretmp_4361>;
  goto <bb 233>;

  <bb 165>:
  _1172 = i_me_range_511 >> 1;
  range_1173 = _1172 | 1;
  # DEBUG range => range_1173
  # DEBUG i => 3
  _1174 = bmx_3692 - bmx_513;
  _1175 = mv_x_max_515 - bmx_3692;
  _1176 = MIN_EXPR <_1174, _1175>;
  if (range_1173 <= _1176)
    goto <bb 166>;
  else
    goto <bb 167>;

  <bb 166>:
  # DEBUG i => 3
  # DEBUG bcost => bcost_3363
  # DEBUG bmy => bmy_151
  # DEBUG bmx => bmx_35
  _682 = range_1173 + -2;
  if (_682 > 3)
    goto <bb 168>;
  else
    goto <bb 167>;

  <bb 167>:
  # bmx_703 = PHI <bmx_35(165), bmx_4154(178), bmx_35(166)>
  # bmy_580 = PHI <bmy_151(165), bmy_4135(178), bmy_151(166)>
  # bcost_581 = PHI <bcost_3363(165), bcost_4112(178), bcost_3363(166)>
  # i_582 = PHI <3(165), i_4085(178), 3(166)>
  # DEBUG i => i_582
  # DEBUG bcost => bcost_581
  # DEBUG bmy => bmy_580
  # DEBUG bmx => bmx_703
  if (i_582 < range_1173)
    goto <bb 180>;
  else
    goto <bb 190>;

  <bb 168>:

  <bb 169>:
  # bmx_3364 = PHI <bmx_35(168), bmx_39(179)>
  # bmy_3238 = PHI <bmy_151(168), bmy_155(179)>
  # bcost_3228 = PHI <bcost_3363(168), bcost_280(179)>
  # i_3589 = PHI <3(168), i_1243(179)>
  # DEBUG i => i_3589
  # DEBUG bcost => bcost_3228
  # DEBUG bmy => bmy_3238
  # DEBUG bmx => bmx_3364
  _1178 = m_505(D)->i_stride[0];
  _1179 = _1178 * bmy_3691;
  _1180 = (sizetype) _1179;
  _1181 = _1180 + prephitmp_4710;
  pix_base_1182 = p_fref_512 + _1181;
  # DEBUG pix_base => pix_base_1182
  _1183 = h_510(D)->pixf.fpelcmp_x4[_506];
  _1184 = -i_3589;
  _1185 = (sizetype) _1184;
  _1186 = _1185 + 18446744073709551614;
  _1187 = pix_base_1182 + _1186;
  _1188 = (sizetype) i_3589;
  _1189 = _1188 + 2;
  _1190 = pix_base_1182 + _1189;
  _1191 = pix_base_1182 + _1185;
  _1192 = pix_base_1182 + _1188;
  _1193 = m_505(D)->p_fenc[0];
  _1183 (_1193, _1192, _1191, _1190, _1187, _1178, &costs);
  _1195 = costs[0];
  bmx_1196 = i_3589 + bmx_3692;
  _1197 = bmx_1196 << 2;
  _1198 = (long unsigned int) _1197;
  _1199 = _1198 * 2;
  _1200 = p_cost_mvx_522 + _1199;
  _1201 = *_1200;
  _1202 = (int) _1201;
  _1203 = *_1103;
  _1204 = (int) _1203;
  _1205 = _1202 + _1204;
  bcost_1206 = _1195 + _1205;
  costs[0] = bcost_1206;
  _1208 = costs[1];
  bmx_1209 = bmx_3692 - i_3589;
  _1210 = bmx_1209 << 2;
  _1211 = (long unsigned int) _1210;
  _1212 = _1211 * 2;
  _1213 = p_cost_mvx_522 + _1212;
  _1214 = *_1213;
  _1215 = (int) _1214;
  _1216 = _1204 + _1215;
  bcost_1217 = _1208 + _1216;
  costs[1] = bcost_1217;
  _1219 = costs[2];
  _1220 = i_3589 + 2;
  bmx_1221 = _1220 + bmx_3692;
  _1222 = bmx_1221 << 2;
  _1223 = (long unsigned int) _1222;
  _1224 = _1223 * 2;
  _1225 = p_cost_mvx_522 + _1224;
  _1226 = *_1225;
  _1227 = (int) _1226;
  _1228 = _1204 + _1227;
  bcost_1229 = _1219 + _1228;
  costs[2] = bcost_1229;
  _1231 = costs[3];
  _1232 = -2 - i_3589;
  bmx_1233 = _1232 + bmx_3692;
  _1234 = bmx_1233 << 2;
  _1235 = (long unsigned int) _1234;
  _1236 = _1235 * 2;
  _1237 = p_cost_mvx_522 + _1236;
  _1238 = *_1237;
  _1239 = (int) _1238;
  _1240 = _1204 + _1239;
  bcost_1241 = _1231 + _1240;
  costs[3] = bcost_1241;
  if (bcost_1206 < bcost_3228)
    goto <bb 171>;
  else
    goto <bb 170>;

  <bb 170>:

  <bb 171>:
  # bmx_36 = PHI <bmx_3364(170), bmx_1196(169)>
  # bmy_152 = PHI <bmy_3238(170), bmy_3691(169)>
  # bcost_277 = PHI <bcost_3228(170), bcost_1206(169)>
  # DEBUG bcost => bcost_277
  # DEBUG bmy => bmy_152
  # DEBUG bmx => bmx_36
  if (bcost_277 > bcost_1217)
    goto <bb 173>;
  else
    goto <bb 172>;

  <bb 172>:

  <bb 173>:
  # bmx_37 = PHI <bmx_36(172), bmx_1209(171)>
  # bmy_153 = PHI <bmy_152(172), bmy_3691(171)>
  # bcost_278 = PHI <bcost_277(172), bcost_1217(171)>
  # DEBUG bcost => bcost_278
  # DEBUG bmy => bmy_153
  # DEBUG bmx => bmx_37
  if (bcost_278 > bcost_1229)
    goto <bb 175>;
  else
    goto <bb 174>;

  <bb 174>:

  <bb 175>:
  # bmx_38 = PHI <bmx_37(174), bmx_1221(173)>
  # bmy_154 = PHI <bmy_153(174), bmy_3691(173)>
  # bcost_279 = PHI <bcost_278(174), bcost_1229(173)>
  # DEBUG bcost => bcost_279
  # DEBUG bmy => bmy_154
  # DEBUG bmx => bmx_38
  if (bcost_279 > bcost_1241)
    goto <bb 177>;
  else
    goto <bb 176>;

  <bb 176>:

  <bb 177>:
  # bmx_39 = PHI <bmx_38(176), bmx_1233(175)>
  # bmy_155 = PHI <bmy_154(176), bmy_3691(175)>
  # bcost_280 = PHI <bcost_279(176), bcost_1241(175)>
  # DEBUG bcost => bcost_280
  # DEBUG bmy => bmy_155
  # DEBUG bmx => bmx_39
  i_1243 = i_3589 + 4;
  # DEBUG i => i_1243
  # DEBUG i => i_1243
  # DEBUG bcost => bcost_280
  # DEBUG bmy => bmy_155
  # DEBUG bmx => bmx_39
  if (_682 > i_1243)
    goto <bb 179>;
  else
    goto <bb 178>;

  <bb 178>:
  # bmx_4154 = PHI <bmx_39(177)>
  # bmy_4135 = PHI <bmy_155(177)>
  # bcost_4112 = PHI <bcost_280(177)>
  _4073 = (unsigned int) range_1173;
  _4185 = _4073 + 4294967290;
  _4189 = _4185 / 4;
  _4229 = (int) _4189;
  _4224 = _4229 * 4;
  i_4085 = _4224 + 7;
  goto <bb 167>;

  <bb 179>:
  goto <bb 169>;

  <bb 180>:

  <bb 181>:
  # bmx_3662 = PHI <bmx_703(180), bmx_42(189)>
  # bmy_3612 = PHI <bmy_580(180), bmy_158(189)>
  # bcost_3599 = PHI <bcost_581(180), bcost_283(189)>
  # i_3216 = PHI <i_582(180), i_1284(189)>
  # DEBUG i => i_3216
  # DEBUG bcost => bcost_3599
  # DEBUG bmy => bmy_3612
  # DEBUG bmx => bmx_3662
  bmx_1244 = i_3216 + bmx_3692;
  if (mv_x_max_515 >= bmx_1244)
    goto <bb 182>;
  else
    goto <bb 184>;

  <bb 182>:
  _1245 = h_510(D)->pixf.fpelcmp[_506];
  _1246 = m_505(D)->i_stride[0];
  _1247 = _1246 * bmy_3691;
  _1248 = bmx_1244 + _1247;
  _1249 = (sizetype) _1248;
  _1250 = p_fref_512 + _1249;
  _1251 = m_505(D)->p_fenc[0];
  _1253 = _1245 (_1251, 16, _1250, _1246);
  _1254 = bmx_1244 << 2;
  _1255 = (long unsigned int) _1254;
  _1256 = _1255 * 2;
  _1257 = p_cost_mvx_522 + _1256;
  _1258 = *_1257;
  _1259 = (int) _1258;
  _1260 = *_1103;
  _1261 = (int) _1260;
  _1262 = _1259 + _1261;
  bcost_1263 = _1253 + _1262;
  # DEBUG cost => bcost_1263
  if (bcost_1263 < bcost_3599)
    goto <bb 184>;
  else
    goto <bb 183>;

  <bb 183>:

  <bb 184>:
  # bmx_41 = PHI <bmx_3662(181), bmx_3662(183), bmx_1244(182)>
  # bmy_157 = PHI <bmy_3612(181), bmy_3612(183), bmy_3691(182)>
  # bcost_282 = PHI <bcost_3599(181), bcost_3599(183), bcost_1263(182)>
  # DEBUG bcost => bcost_282
  # DEBUG bmy => bmy_157
  # DEBUG bmx => bmx_41
  bmx_1264 = bmx_3692 - i_3216;
  if (bmx_513 <= bmx_1264)
    goto <bb 185>;
  else
    goto <bb 187>;

  <bb 185>:
  _1265 = h_510(D)->pixf.fpelcmp[_506];
  _1266 = m_505(D)->i_stride[0];
  _1267 = _1266 * bmy_3691;
  _1268 = bmx_1264 + _1267;
  _1269 = (sizetype) _1268;
  _1270 = p_fref_512 + _1269;
  _1271 = m_505(D)->p_fenc[0];
  _1273 = _1265 (_1271, 16, _1270, _1266);
  _1274 = bmx_1264 << 2;
  _1275 = (long unsigned int) _1274;
  _1276 = _1275 * 2;
  _1277 = p_cost_mvx_522 + _1276;
  _1278 = *_1277;
  _1279 = (int) _1278;
  _1280 = *_1103;
  _1281 = (int) _1280;
  _1282 = _1279 + _1281;
  bcost_1283 = _1273 + _1282;
  # DEBUG cost => bcost_1283
  if (bcost_282 > bcost_1283)
    goto <bb 187>;
  else
    goto <bb 186>;

  <bb 186>:

  <bb 187>:
  # bmx_42 = PHI <bmx_41(184), bmx_41(186), bmx_1264(185)>
  # bmy_158 = PHI <bmy_157(184), bmy_157(186), bmy_3691(185)>
  # bcost_283 = PHI <bcost_282(184), bcost_282(186), bcost_1283(185)>
  # DEBUG bcost => bcost_283
  # DEBUG bmy => bmy_158
  # DEBUG bmx => bmx_42
  i_1284 = i_3216 + 2;
  # DEBUG i => i_1284
  # DEBUG i => i_1284
  # DEBUG bcost => bcost_283
  # DEBUG bmy => bmy_158
  # DEBUG bmx => bmx_42
  if (range_1173 > i_1284)
    goto <bb 189>;
  else
    goto <bb 188>;

  <bb 188>:
  # bmx_4153 = PHI <bmx_42(187)>
  # bmy_4134 = PHI <bmy_158(187)>
  # bcost_4111 = PHI <bcost_283(187)>
  goto <bb 190>;

  <bb 189>:
  goto <bb 181>;

  <bb 190>:
  # bmx_3663 = PHI <bmx_4153(188), bmx_703(167)>
  # bmy_3235 = PHI <bmy_4134(188), bmy_580(167)>
  # bcost_3225 = PHI <bcost_4111(188), bcost_581(167)>
  # DEBUG i => 3
  _1285 = bmy_3691 - bmy_514;
  _1286 = mv_y_max_516 - bmy_3691;
  _1287 = MIN_EXPR <_1285, _1286>;
  if (range_1173 <= _1287)
    goto <bb 191>;
  else
    goto <bb 192>;

  <bb 191>:
  # DEBUG i => 3
  # DEBUG bcost => bcost_3225
  # DEBUG bmy => bmy_3235
  # DEBUG bmx => bmx_3663
  _2976 = range_1173 + -2;
  if (_2976 > 3)
    goto <bb 193>;
  else
    goto <bb 192>;

  <bb 192>:
  # bmx_440 = PHI <bmx_3663(190), bmx_4152(203), bmx_3663(191)>
  # bmy_445 = PHI <bmy_3235(190), bmy_4133(203), bmy_3235(191)>
  # bcost_687 = PHI <bcost_3225(190), bcost_4110(203), bcost_3225(191)>
  # i_692 = PHI <3(190), i_4084(203), 3(191)>
  # DEBUG i => i_692
  # DEBUG bcost => bcost_687
  # DEBUG bmy => bmy_445
  # DEBUG bmx => bmx_440
  if (i_692 < range_1173)
    goto <bb 205>;
  else
    goto <bb 215>;

  <bb 193>:

  <bb 194>:
  # bmx_3362 = PHI <bmx_3663(193), bmx_47(204)>
  # bmy_3613 = PHI <bmy_3235(193), bmy_163(204)>
  # bcost_3600 = PHI <bcost_3225(193), bcost_288(204)>
  # i_3585 = PHI <3(193), i_1358(204)>
  # DEBUG i => i_3585
  # DEBUG bcost => bcost_3600
  # DEBUG bmy => bmy_3613
  # DEBUG bmx => bmx_3362
  _1289 = m_505(D)->i_stride[0];
  _1290 = _1289 * bmy_3691;
  _1291 = (sizetype) _1290;
  _1292 = _1291 + prephitmp_4710;
  pix_base_1293 = p_fref_512 + _1292;
  # DEBUG pix_base => pix_base_1293
  _1294 = h_510(D)->pixf.fpelcmp_x4[_506];
  _1295 = -2 - i_3585;
  _1296 = _1289 * _1295;
  _1297 = (sizetype) _1296;
  _1298 = pix_base_1293 + _1297;
  _1299 = i_3585 + 2;
  _1300 = _1289 * _1299;
  _1301 = (sizetype) _1300;
  _1302 = pix_base_1293 + _1301;
  _1303 = -i_3585;
  _1304 = _1289 * _1303;
  _1305 = (sizetype) _1304;
  _1306 = pix_base_1293 + _1305;
  _1307 = _1289 * i_3585;
  _1308 = (sizetype) _1307;
  _1309 = pix_base_1293 + _1308;
  _1310 = m_505(D)->p_fenc[0];
  _1294 (_1310, _1309, _1306, _1302, _1298, _1289, &costs);
  _1312 = costs[0];
  _1313 = *_1050;
  _1314 = (int) _1313;
  bmy_1315 = i_3585 + bmy_3691;
  _1316 = bmy_1315 << 2;
  _1317 = (long unsigned int) _1316;
  _1318 = _1317 * 2;
  _1319 = p_cost_mvy_528 + _1318;
  _1320 = *_1319;
  _1321 = (int) _1320;
  _1322 = _1314 + _1321;
  bcost_1323 = _1312 + _1322;
  costs[0] = bcost_1323;
  _1325 = costs[1];
  bmy_1326 = bmy_3691 - i_3585;
  _1327 = bmy_1326 << 2;
  _1328 = (long unsigned int) _1327;
  _1329 = _1328 * 2;
  _1330 = p_cost_mvy_528 + _1329;
  _1331 = *_1330;
  _1332 = (int) _1331;
  _1333 = _1314 + _1332;
  bcost_1334 = _1325 + _1333;
  costs[1] = bcost_1334;
  _1336 = costs[2];
  bmy_1337 = _1299 + bmy_3691;
  _1338 = bmy_1337 << 2;
  _1339 = (long unsigned int) _1338;
  _1340 = _1339 * 2;
  _1341 = p_cost_mvy_528 + _1340;
  _1342 = *_1341;
  _1343 = (int) _1342;
  _1344 = _1314 + _1343;
  bcost_1345 = _1336 + _1344;
  costs[2] = bcost_1345;
  _1347 = costs[3];
  bmy_1348 = _1295 + bmy_3691;
  _1349 = bmy_1348 << 2;
  _1350 = (long unsigned int) _1349;
  _1351 = _1350 * 2;
  _1352 = p_cost_mvy_528 + _1351;
  _1353 = *_1352;
  _1354 = (int) _1353;
  _1355 = _1314 + _1354;
  bcost_1356 = _1347 + _1355;
  costs[3] = bcost_1356;
  if (bcost_1323 < bcost_3600)
    goto <bb 196>;
  else
    goto <bb 195>;

  <bb 195>:

  <bb 196>:
  # bmx_44 = PHI <bmx_3362(195), bmx_3692(194)>
  # bmy_160 = PHI <bmy_3613(195), bmy_1315(194)>
  # bcost_285 = PHI <bcost_3600(195), bcost_1323(194)>
  # DEBUG bcost => bcost_285
  # DEBUG bmy => bmy_160
  # DEBUG bmx => bmx_44
  if (bcost_285 > bcost_1334)
    goto <bb 198>;
  else
    goto <bb 197>;

  <bb 197>:

  <bb 198>:
  # bmx_45 = PHI <bmx_44(197), bmx_3692(196)>
  # bmy_161 = PHI <bmy_160(197), bmy_1326(196)>
  # bcost_286 = PHI <bcost_285(197), bcost_1334(196)>
  # DEBUG bcost => bcost_286
  # DEBUG bmy => bmy_161
  # DEBUG bmx => bmx_45
  if (bcost_286 > bcost_1345)
    goto <bb 200>;
  else
    goto <bb 199>;

  <bb 199>:

  <bb 200>:
  # bmx_46 = PHI <bmx_45(199), bmx_3692(198)>
  # bmy_162 = PHI <bmy_161(199), bmy_1337(198)>
  # bcost_287 = PHI <bcost_286(199), bcost_1345(198)>
  # DEBUG bcost => bcost_287
  # DEBUG bmy => bmy_162
  # DEBUG bmx => bmx_46
  if (bcost_287 > bcost_1356)
    goto <bb 202>;
  else
    goto <bb 201>;

  <bb 201>:

  <bb 202>:
  # bmx_47 = PHI <bmx_46(201), bmx_3692(200)>
  # bmy_163 = PHI <bmy_162(201), bmy_1348(200)>
  # bcost_288 = PHI <bcost_287(201), bcost_1356(200)>
  # DEBUG bcost => bcost_288
  # DEBUG bmy => bmy_163
  # DEBUG bmx => bmx_47
  i_1358 = i_3585 + 4;
  # DEBUG i => i_1358
  # DEBUG i => i_1358
  # DEBUG bcost => bcost_288
  # DEBUG bmy => bmy_163
  # DEBUG bmx => bmx_47
  if (i_1358 < _2976)
    goto <bb 204>;
  else
    goto <bb 203>;

  <bb 203>:
  # bmx_4152 = PHI <bmx_47(202)>
  # bmy_4133 = PHI <bmy_163(202)>
  # bcost_4110 = PHI <bcost_288(202)>
  _4311 = (unsigned int) range_1173;
  _4175 = _4311 + 4294967290;
  _4170 = _4175 / 4;
  _4180 = (int) _4170;
  _4197 = _4180 * 4;
  i_4084 = _4197 + 7;
  goto <bb 192>;

  <bb 204>:
  goto <bb 194>;

  <bb 205>:

  <bb 206>:
  # bmx_3661 = PHI <bmx_440(205), bmx_50(214)>
  # bmy_3236 = PHI <bmy_445(205), bmy_166(214)>
  # bcost_3226 = PHI <bcost_687(205), bcost_291(214)>
  # i_3213 = PHI <i_692(205), i_1399(214)>
  # DEBUG i => i_3213
  # DEBUG bcost => bcost_3226
  # DEBUG bmy => bmy_3236
  # DEBUG bmx => bmx_3661
  bmy_1359 = i_3213 + bmy_3691;
  if (mv_y_max_516 >= bmy_1359)
    goto <bb 207>;
  else
    goto <bb 209>;

  <bb 207>:
  _1360 = h_510(D)->pixf.fpelcmp[_506];
  _1361 = m_505(D)->i_stride[0];
  _1362 = bmy_1359 * _1361;
  _1363 = _1362 + bmx_3692;
  _1364 = (sizetype) _1363;
  _1365 = p_fref_512 + _1364;
  _1366 = m_505(D)->p_fenc[0];
  _1368 = _1360 (_1366, 16, _1365, _1361);
  _1369 = *_1050;
  _1370 = (int) _1369;
  _1371 = bmy_1359 << 2;
  _1372 = (long unsigned int) _1371;
  _1373 = _1372 * 2;
  _1374 = p_cost_mvy_528 + _1373;
  _1375 = *_1374;
  _1376 = (int) _1375;
  _1377 = _1370 + _1376;
  bcost_1378 = _1368 + _1377;
  # DEBUG cost => bcost_1378
  if (bcost_1378 < bcost_3226)
    goto <bb 209>;
  else
    goto <bb 208>;

  <bb 208>:

  <bb 209>:
  # bmx_49 = PHI <bmx_3661(206), bmx_3661(208), bmx_3692(207)>
  # bmy_165 = PHI <bmy_3236(206), bmy_3236(208), bmy_1359(207)>
  # bcost_290 = PHI <bcost_3226(206), bcost_3226(208), bcost_1378(207)>
  # DEBUG bcost => bcost_290
  # DEBUG bmy => bmy_165
  # DEBUG bmx => bmx_49
  bmy_1379 = bmy_3691 - i_3213;
  if (bmy_514 <= bmy_1379)
    goto <bb 210>;
  else
    goto <bb 212>;

  <bb 210>:
  _1380 = h_510(D)->pixf.fpelcmp[_506];
  _1381 = m_505(D)->i_stride[0];
  _1382 = bmy_1379 * _1381;
  _1383 = _1382 + bmx_3692;
  _1384 = (sizetype) _1383;
  _1385 = p_fref_512 + _1384;
  _1386 = m_505(D)->p_fenc[0];
  _1388 = _1380 (_1386, 16, _1385, _1381);
  _1389 = *_1050;
  _1390 = (int) _1389;
  _1391 = bmy_1379 << 2;
  _1392 = (long unsigned int) _1391;
  _1393 = _1392 * 2;
  _1394 = p_cost_mvy_528 + _1393;
  _1395 = *_1394;
  _1396 = (int) _1395;
  _1397 = _1390 + _1396;
  bcost_1398 = _1388 + _1397;
  # DEBUG cost => bcost_1398
  if (bcost_290 > bcost_1398)
    goto <bb 212>;
  else
    goto <bb 211>;

  <bb 211>:

  <bb 212>:
  # bmx_50 = PHI <bmx_49(209), bmx_49(211), bmx_3692(210)>
  # bmy_166 = PHI <bmy_165(209), bmy_165(211), bmy_1379(210)>
  # bcost_291 = PHI <bcost_290(209), bcost_290(211), bcost_1398(210)>
  # DEBUG bcost => bcost_291
  # DEBUG bmy => bmy_166
  # DEBUG bmx => bmx_50
  i_1399 = i_3213 + 2;
  # DEBUG i => i_1399
  # DEBUG i => i_1399
  # DEBUG bcost => bcost_291
  # DEBUG bmy => bmy_166
  # DEBUG bmx => bmx_50
  if (range_1173 > i_1399)
    goto <bb 214>;
  else
    goto <bb 213>;

  <bb 213>:
  # bmx_4151 = PHI <bmx_50(212)>
  # bmy_4132 = PHI <bmy_166(212)>
  # bcost_4109 = PHI <bcost_291(212)>
  goto <bb 215>;

  <bb 214>:
  goto <bb 206>;

  <bb 215>:
  # bmx_3660 = PHI <bmx_4151(213), bmx_440(192)>
  # bmy_3610 = PHI <bmy_4132(213), bmy_445(192)>
  # bcost_3607 = PHI <bcost_4109(213), bcost_687(192)>
  _1400 = m_505(D)->i_stride[0];
  _1401 = _1400 * bmy_3691;
  _1402 = (sizetype) _1401;
  _1403 = _1402 + prephitmp_4710;
  pix_base_1404 = p_fref_512 + _1403;
  # DEBUG pix_base => pix_base_1404
  _1405 = h_510(D)->pixf.fpelcmp_x4[_506];
  _1406 = -_1400;
  _1407 = (sizetype) _1406;
  _1408 = _1407 + 2;
  _1409 = pix_base_1404 + _1408;
  _1410 = _1407 + 18446744073709551614;
  _1411 = pix_base_1404 + _1410;
  _1412 = _1400 * -2;
  _1413 = (sizetype) _1412;
  _1414 = _1413 + 1;
  _1415 = pix_base_1404 + _1414;
  _1416 = _1413 + 18446744073709551615;
  _1417 = pix_base_1404 + _1416;
  _1418 = m_505(D)->p_fenc[0];
  _1405 (_1418, _1417, _1415, _1411, _1409, _1400, &costs);
  _1420 = costs[0];
  _1421 = *_1068;
  _1422 = (int) _1421;
  _1423 = *_1057;
  _1424 = (int) _1423;
  _1425 = _1422 + _1424;
  bcost_1426 = _1420 + _1425;
  costs[0] = bcost_1426;
  _1428 = costs[1];
  _1429 = *_1086;
  _1430 = (int) _1429;
  _1431 = _1424 + _1430;
  bcost_1432 = _1428 + _1431;
  costs[1] = bcost_1432;
  _1434 = costs[2];
  _1435 = *_1097;
  _1436 = (int) _1435;
  _1437 = *_1075;
  _1438 = (int) _1437;
  _1439 = _1436 + _1438;
  bcost_1440 = _1434 + _1439;
  costs[2] = bcost_1440;
  _1442 = costs[3];
  _1443 = *_1131;
  _1444 = (int) _1443;
  _1445 = _1438 + _1444;
  bcost_1446 = _1442 + _1445;
  costs[3] = bcost_1446;
  if (bcost_1426 < bcost_3607)
    goto <bb 217>;
  else
    goto <bb 216>;

  <bb 216>:

  <bb 217>:
  # bmx_52 = PHI <bmx_3660(216), bmx_1064(215)>
  # bmy_168 = PHI <bmy_3610(216), prephitmp_4712(215)>
  # bcost_293 = PHI <bcost_3607(216), bcost_1426(215)>
  # DEBUG bcost => bcost_293
  # DEBUG bmy => bmy_168
  # DEBUG bmx => bmx_52
  if (bcost_293 > bcost_1432)
    goto <bb 219>;
  else
    goto <bb 218>;

  <bb 218>:

  <bb 219>:
  # bmx_53 = PHI <bmx_52(218), bmx_1082(217)>
  # bmy_169 = PHI <bmy_168(218), prephitmp_4712(217)>
  # bcost_294 = PHI <bcost_293(218), bcost_1432(217)>
  # DEBUG bcost => bcost_294
  # DEBUG bmy => bmy_169
  # DEBUG bmx => bmx_53
  if (bcost_294 > bcost_1440)
    goto <bb 221>;
  else
    goto <bb 220>;

  <bb 220>:

  <bb 221>:
  # bmx_54 = PHI <bmx_53(220), prephitmp_4720(219)>
  # bmy_170 = PHI <bmy_169(220), bmy_1071(219)>
  # bcost_295 = PHI <bcost_294(220), bcost_1440(219)>
  # DEBUG bcost => bcost_295
  # DEBUG bmy => bmy_170
  # DEBUG bmx => bmx_54
  if (bcost_295 > bcost_1446)
    goto <bb 223>;
  else
    goto <bb 222>;

  <bb 222>:

  <bb 223>:
  # bmx_55 = PHI <bmx_54(222), prephitmp_4728(221)>
  # bmy_171 = PHI <bmy_170(222), bmy_1071(221)>
  # bcost_296 = PHI <bcost_295(222), bcost_1446(221)>
  # DEBUG bcost => bcost_296
  # DEBUG bmy => bmy_171
  # DEBUG bmx => bmx_55
  _1448 = m_505(D)->i_stride[0];
  _1449 = _1448 * bmy_3691;
  _1450 = (sizetype) _1449;
  _1451 = _1450 + prephitmp_4710;
  pix_base_1452 = p_fref_512 + _1451;
  # DEBUG pix_base => pix_base_1452
  _1453 = h_510(D)->pixf.fpelcmp_x4[_506];
  _1454 = _1448 * 2;
  _1455 = (sizetype) _1454;
  _1456 = _1455 + 1;
  _1457 = pix_base_1452 + _1456;
  _1458 = _1455 + 18446744073709551615;
  _1459 = pix_base_1452 + _1458;
  _1460 = (sizetype) _1448;
  _1461 = _1460 + 2;
  _1462 = pix_base_1452 + _1461;
  _1463 = _1460 + 18446744073709551614;
  _1464 = pix_base_1452 + _1463;
  _1465 = m_505(D)->p_fenc[0];
  _1453 (_1465, _1464, _1462, _1459, _1457, _1448, &costs);
  _1467 = costs[0];
  _1468 = *_1097;
  _1469 = (int) _1468;
  _1470 = *_1146;
  _1471 = (int) _1470;
  _1472 = _1469 + _1471;
  bcost_1473 = _1467 + _1472;
  costs[0] = bcost_1473;
  _1475 = costs[1];
  _1476 = *_1131;
  _1477 = (int) _1476;
  _1478 = _1471 + _1477;
  bcost_1479 = _1475 + _1478;
  costs[1] = bcost_1479;
  _1481 = costs[2];
  _1482 = *_1068;
  _1483 = (int) _1482;
  _1484 = *_1165;
  _1485 = (int) _1484;
  _1486 = _1483 + _1485;
  bcost_1487 = _1481 + _1486;
  costs[2] = bcost_1487;
  _1489 = costs[3];
  _1490 = *_1086;
  _1491 = (int) _1490;
  _1492 = _1485 + _1491;
  bcost_1493 = _1489 + _1492;
  costs[3] = bcost_1493;
  if (bcost_296 > bcost_1473)
    goto <bb 225>;
  else
    goto <bb 224>;

  <bb 224>:

  <bb 225>:
  # bmx_56 = PHI <bmx_55(224), prephitmp_4720(223)>
  # bmy_172 = PHI <bmy_171(224), bmy_1142(223)>
  # bcost_297 = PHI <bcost_296(224), bcost_1473(223)>
  # DEBUG bcost => bcost_297
  # DEBUG bmy => bmy_172
  # DEBUG bmx => bmx_56
  if (bcost_297 > bcost_1479)
    goto <bb 227>;
  else
    goto <bb 226>;

  <bb 226>:

  <bb 227>:
  # bmx_57 = PHI <bmx_56(226), prephitmp_4728(225)>
  # bmy_173 = PHI <bmy_172(226), bmy_1142(225)>
  # bcost_298 = PHI <bcost_297(226), bcost_1479(225)>
  # DEBUG bcost => bcost_298
  # DEBUG bmy => bmy_173
  # DEBUG bmx => bmx_57
  if (bcost_298 > bcost_1487)
    goto <bb 229>;
  else
    goto <bb 228>;

  <bb 228>:

  <bb 229>:
  # bmx_58 = PHI <bmx_57(228), bmx_1064(227)>
  # bmy_174 = PHI <bmy_173(228), prephitmp_4736(227)>
  # bcost_299 = PHI <bcost_298(228), bcost_1487(227)>
  # DEBUG bcost => bcost_299
  # DEBUG bmy => bmy_174
  # DEBUG bmx => bmx_58
  if (bcost_299 > bcost_1493)
    goto <bb 231>;
  else
    goto <bb 230>;

  <bb 230>:

  <bb 231>:
  # bmx_59 = PHI <bmx_58(230), bmx_1082(229)>
  # bmy_175 = PHI <bmy_174(230), prephitmp_4736(229)>
  # bcost_300 = PHI <bcost_299(230), bcost_1493(229)>
  # DEBUG bcost => bcost_300
  # DEBUG bmy => bmy_175
  # DEBUG bmx => bmx_59
  if (bcost_300 == bcost_3363)
    goto <bb 454> (<L445>);
  else
    goto <bb 232>;

  <bb 232>:
  i_1495 = range_1173 + 2;
  # DEBUG cross_start => i_1495

  <bb 233>:
  # bmx_60 = PHI <bmx_28(143), bmx_3692(469), bmx_35(164), bmx_59(232)>
  # bmy_176 = PHI <bmy_143(143), bmy_3691(469), bmy_151(164), bmy_175(232)>
  # bcost_301 = PHI <bcost_268(143), bcost_3363(469), bcost_276(164), bcost_300(232)>
  # i_405 = PHI <1(143), 3(469), 3(164), i_1495(232)>
  # bmx_3244 = PHI <bmx_28(143), bmx_3692(469), bmx_3692(164), bmx_3692(232)>
  # bmy_3248 = PHI <bmy_143(143), bmy_3691(469), bmy_3691(164), bmy_3691(232)>
  # prephitmp_4351 = PHI <pretmp_4348(143), pretmp_4349(469), pretmp_4350(164), _1176(232)>
  # prephitmp_4354 = PHI <pretmp_4352(143), prephitmp_4710(469), prephitmp_4710(164), prephitmp_4710(232)>
  # prephitmp_4366 = PHI <pretmp_4363(143), pretmp_4364(469), pretmp_4365(164), _1287(232)>
  # prephitmp_4369 = PHI <pretmp_4367(143), prephitmp_4720(469), prephitmp_4720(164), prephitmp_4720(232)>
  # prephitmp_4381 = PHI <pretmp_4379(143), pretmp_4380(469), _1097(164), _1097(232)>
  # prephitmp_4384 = PHI <pretmp_4382(143), prephitmp_4712(469), prephitmp_4712(164), prephitmp_4712(232)>
  # prephitmp_4396 = PHI <pretmp_4394(143), pretmp_4395(469), _1057(164), _1057(232)>
  # prephitmp_4399 = PHI <pretmp_4397(143), prephitmp_4736(469), prephitmp_4736(164), prephitmp_4736(232)>
  # prephitmp_4411 = PHI <pretmp_4409(143), pretmp_4410(469), _1165(164), _1165(232)>
  # prephitmp_4414 = PHI <pretmp_4412(143), prephitmp_4728(469), prephitmp_4728(164), prephitmp_4728(232)>
  # prephitmp_4426 = PHI <pretmp_4424(143), pretmp_4425(469), _1131(164), _1131(232)>
  # DEBUG cross_start => i_405
  # DEBUG bcost => bcost_301
  # DEBUG bmy => bmy_176
  # DEBUG bmx => bmx_60
  if (i_mvc_574(D) != 0)
    goto <bb 234>;
  else
    goto <bb 251>;

  <bb 234>:
  # DEBUG denom => 1
  if (i_mvc_574(D) == 1)
    goto <bb 235>;
  else
    goto <bb 237>;

  <bb 235>:
  if (_506 == 0)
    goto <bb 470>;
  else
    goto <bb 236>;

  <bb 236>:
  _1496 = m_505(D)->mvp[0];
  _1497 = (int) _1496;
  _1498 = *mvc_577(D)[0];
  _1499 = (int) _1498;
  _1500 = _1497 - _1499;
  _1501 = ABS_EXPR <_1500>;
  _1502 = m_505(D)->mvp[1];
  _1503 = (int) _1502;
  _1504 = *mvc_577(D)[1];
  _1505 = (int) _1504;
  _1506 = _1503 - _1505;
  _1507 = ABS_EXPR <_1506>;
  mvd_1508 = _1501 + _1507;
  # DEBUG mvd => mvd_1508
  goto <bb 241>;

  <bb 237>:
  # DEBUG denom => i_mvc_574(D) + -1
  # DEBUG mvd => 0
  if (_506 != 0)
    goto <bb 239>;
  else
    goto <bb 238>;

  <bb 238>:
  i_mvc_1509 = i_mvc_574(D) + -1;
  goto <bb 240>;

  <bb 239>:
  _1510 = m_505(D)->mvp[0];
  _1511 = (int) _1510;
  _1512 = *mvc_577(D)[0];
  _1513 = (int) _1512;
  _1514 = _1511 - _1513;
  _1515 = ABS_EXPR <_1514>;
  _1516 = m_505(D)->mvp[1];
  _1517 = (int) _1516;
  _1518 = *mvc_577(D)[1];
  _1519 = (int) _1518;
  _1520 = _1517 - _1519;
  _1521 = ABS_EXPR <_1520>;
  mvd_1522 = _1515 + _1521;
  # DEBUG mvd => mvd_1522
  # DEBUG denom => i_mvc_574(D)

  <bb 240>:
  # mvd_406 = PHI <0(238), mvd_1522(239)>
  # i_mvc_408 = PHI <i_mvc_1509(238), i_mvc_574(D)(239)>
  # DEBUG denom => i_mvc_408
  # DEBUG mvd => mvd_406
  _1523 = (long int) i_mvc_574(D);
  # DEBUG mvc => mvc_577(D)
  # DEBUG i_mvc => _1523
  # DEBUG sum => 0
  __asm__("pxor    %%mm4, %%mm4 
test    $1, %1       
jnz 3f               
movd    -8(%2,%1,4), %%mm0 
movd    -4(%2,%1,4), %%mm3 
psubw   %%mm3, %%mm0 
jmp 2f               
3:                   
sub     $1,    %1    
1:                   
movq    -8(%2,%1,4), %%mm0 
psubw   -4(%2,%1,4), %%mm0 
2:                   
sub     $2,    %1    
pxor    %%mm2, %%mm2 
psubw   %%mm0, %%mm2 
pmaxsw  %%mm2, %%mm0 
paddusw %%mm0, %%mm4 
jg 1b                
movq    %%mm4, %0    
" : "=m" output, "=r" i_mvc_2952 : "r" mvc_577(D), "m" MEM[(struct  *)mvc_577(D)], "1" _1523);
  # DEBUG i_mvc => i_mvc_2952
  _2953 = output[0];
  _2954 = (int) _2953;
  _2955 = output[1];
  _2956 = (int) _2955;
  _2957 = _2954 + _2956;
  _2958 = output[2];
  _2959 = (int) _2958;
  _2960 = _2957 + _2959;
  _2961 = output[3];
  _2962 = (int) _2961;
  _2963 = _2960 + _2962;
  # DEBUG sum => _2963
  output ={v} {CLOBBER};
  # DEBUG mvc => NULL
  # DEBUG i_mvc => NULL
  mvd_1526 = mvd_406 + _2963;
  # DEBUG mvd => mvd_1526
  pretmp_4456 = i_mvc_408 * 10;

  <bb 241>:
  # mvd_407 = PHI <mvd_1508(236), mvd_1526(240)>
  # i_mvc_409 = PHI <1(236), i_mvc_408(240)>
  # prephitmp_4457 = PHI <10(236), pretmp_4456(240)>
  # DEBUG denom => i_mvc_409
  # DEBUG mvd => mvd_407
  _1527 = x264_pixel_size_shift[_506];
  _1528 = 1000 >> _1527;
  if (bcost_301 >= _1528)
    goto <bb 242>;
  else
    goto <bb 245>;

  <bb 242>:
  # mvd_486 = PHI <mvd_407(241), 25(470)>
  # i_mvc_181 = PHI <i_mvc_409(241), 1(470)>
  # _3001 = PHI <_1527(241), _469(470)>
  # prephitmp_4455 = PHI <prephitmp_4457(241), 10(470)>
  _1529 = 2000 >> _3001;
  if (bcost_301 >= _1529)
    goto <bb 243>;
  else
    goto <bb 245>;

  <bb 243>:
  _1530 = 4000 >> _3001;
  if (bcost_301 < _1530)
    goto <bb 244>;
  else
    goto <bb 245>;

  <bb 244>:

  <bb 245>:
  # sad_ctx_436 = PHI <1(242), 0(241), 3(243), 2(244)>
  # mvd_3676 = PHI <mvd_486(242), mvd_407(241), mvd_486(243), mvd_486(244)>
  # i_mvc_65 = PHI <i_mvc_181(242), i_mvc_409(241), i_mvc_181(243), i_mvc_181(244)>
  # prephitmp_4743 = PHI <prephitmp_4455(242), prephitmp_4457(241), prephitmp_4455(243), prephitmp_4455(244)>
  # DEBUG sad_ctx => sad_ctx_436
  if (mvd_3676 >= prephitmp_4743)
    goto <bb 246>;
  else
    goto <bb 250>;

  <bb 246>:
  pretmp_4452 = i_mvc_65 * 20;

  <bb 247>:
  # mvd_383 = PHI <mvd_3676(246), 25(470)>
  # i_mvc_3697 = PHI <i_mvc_65(246), 1(470)>
  # sad_ctx_3694 = PHI <sad_ctx_436(246), 0(470)>
  # prephitmp_4453 = PHI <pretmp_4452(246), 20(470)>
  # DEBUG sad_ctx => sad_ctx_3694
  if (mvd_383 >= prephitmp_4453)
    goto <bb 248>;
  else
    goto <bb 250>;

  <bb 248>:
  _1533 = i_mvc_3697 * 40;
  if (mvd_383 < _1533)
    goto <bb 250>;
  else
    goto <bb 249>;

  <bb 249>:

  <bb 250>:
  # mvd_ctx_439 = PHI <1(247), 0(245), 3(249), 2(248)>
  # sad_ctx_391 = PHI <sad_ctx_3694(247), sad_ctx_436(245), sad_ctx_3694(249), sad_ctx_3694(248)>
  # DEBUG mvd_ctx => mvd_ctx_439
  _1534 = range_mul[mvd_ctx_439][sad_ctx_391];
  _1535 = i_me_range_511 * _1534;
  i_me_range_1536 = _1535 / 4;
  # DEBUG i_me_range => i_me_range_1536

  <bb 251>:
  # i_me_range_2 = PHI <i_me_range_511(233), i_me_range_1536(250)>
  # DEBUG i_me_range => i_me_range_2
  # DEBUG i => i_405
  if (i_me_range_2 <= prephitmp_4351)
    goto <bb 252>;
  else
    goto <bb 253>;

  <bb 252>:
  # DEBUG i => i_405
  # DEBUG bcost => bcost_301
  # DEBUG bmy => bmy_176
  # DEBUG bmx => bmx_60
  _3280 = i_me_range_2 + -2;
  if (i_405 < _3280)
    goto <bb 254>;
  else
    goto <bb 253>;

  <bb 253>:
  # bmx_570 = PHI <bmx_60(251), bmx_4150(264), bmx_60(252)>
  # bmy_546 = PHI <bmy_176(251), bmy_4131(264), bmy_176(252)>
  # bcost_539 = PHI <bcost_301(251), bcost_4108(264), bcost_301(252)>
  # i_2968 = PHI <i_405(251), i_4083(264), i_405(252)>
  # DEBUG i => i_2968
  # DEBUG bcost => bcost_539
  # DEBUG bmy => bmy_546
  # DEBUG bmx => bmx_570
  if (i_me_range_2 > i_2968)
    goto <bb 266>;
  else
    goto <bb 276>;

  <bb 254>:
  pretmp_4448 = bmy_3248 << 2;
  pretmp_4449 = (long unsigned int) pretmp_4448;
  pretmp_4450 = pretmp_4449 * 2;
  pretmp_4451 = p_cost_mvy_528 + pretmp_4450;

  <bb 255>:
  # bmx_3347 = PHI <bmx_60(254), bmx_64(265)>
  # bmy_3233 = PHI <bmy_176(254), bmy_180(265)>
  # bcost_3604 = PHI <bcost_301(254), bcost_305(265)>
  # i_3586 = PHI <i_405(254), i_1611(265)>
  # DEBUG i => i_3586
  # DEBUG bcost => bcost_3604
  # DEBUG bmy => bmy_3233
  # DEBUG bmx => bmx_3347
  _1542 = m_505(D)->i_stride[0];
  _1543 = _1542 * bmy_3248;
  _1544 = (sizetype) _1543;
  _1545 = _1544 + prephitmp_4354;
  pix_base_1546 = p_fref_512 + _1545;
  # DEBUG pix_base => pix_base_1546
  _1547 = h_510(D)->pixf.fpelcmp_x4[_506];
  _1548 = -i_3586;
  _1549 = (sizetype) _1548;
  _1550 = _1549 + 18446744073709551614;
  _1551 = pix_base_1546 + _1550;
  _1552 = (sizetype) i_3586;
  _1553 = _1552 + 2;
  _1554 = pix_base_1546 + _1553;
  _1555 = pix_base_1546 + _1549;
  _1556 = pix_base_1546 + _1552;
  _1557 = m_505(D)->p_fenc[0];
  _1547 (_1557, _1556, _1555, _1554, _1551, _1542, &costs);
  _1559 = costs[0];
  bmx_1560 = bmx_3244 + i_3586;
  _1561 = bmx_1560 << 2;
  _1562 = (long unsigned int) _1561;
  _1563 = _1562 * 2;
  _1564 = p_cost_mvx_522 + _1563;
  _1565 = *_1564;
  _1566 = (int) _1565;
  _1571 = *pretmp_4451;
  _1572 = (int) _1571;
  _1573 = _1566 + _1572;
  bcost_1574 = _1559 + _1573;
  costs[0] = bcost_1574;
  _1576 = costs[1];
  bmx_1577 = bmx_3244 - i_3586;
  _1578 = bmx_1577 << 2;
  _1579 = (long unsigned int) _1578;
  _1580 = _1579 * 2;
  _1581 = p_cost_mvx_522 + _1580;
  _1582 = *_1581;
  _1583 = (int) _1582;
  _1584 = _1572 + _1583;
  bcost_1585 = _1576 + _1584;
  costs[1] = bcost_1585;
  _1587 = costs[2];
  _1588 = i_3586 + 2;
  bmx_1589 = _1588 + bmx_3244;
  _1590 = bmx_1589 << 2;
  _1591 = (long unsigned int) _1590;
  _1592 = _1591 * 2;
  _1593 = p_cost_mvx_522 + _1592;
  _1594 = *_1593;
  _1595 = (int) _1594;
  _1596 = _1572 + _1595;
  bcost_1597 = _1587 + _1596;
  costs[2] = bcost_1597;
  _1599 = costs[3];
  _1600 = -2 - i_3586;
  bmx_1601 = _1600 + bmx_3244;
  _1602 = bmx_1601 << 2;
  _1603 = (long unsigned int) _1602;
  _1604 = _1603 * 2;
  _1605 = p_cost_mvx_522 + _1604;
  _1606 = *_1605;
  _1607 = (int) _1606;
  _1608 = _1572 + _1607;
  bcost_1609 = _1599 + _1608;
  costs[3] = bcost_1609;
  if (bcost_1574 < bcost_3604)
    goto <bb 257>;
  else
    goto <bb 256>;

  <bb 256>:

  <bb 257>:
  # bmx_61 = PHI <bmx_3347(256), bmx_1560(255)>
  # bmy_177 = PHI <bmy_3233(256), bmy_3248(255)>
  # bcost_302 = PHI <bcost_3604(256), bcost_1574(255)>
  # DEBUG bcost => bcost_302
  # DEBUG bmy => bmy_177
  # DEBUG bmx => bmx_61
  if (bcost_302 > bcost_1585)
    goto <bb 259>;
  else
    goto <bb 258>;

  <bb 258>:

  <bb 259>:
  # bmx_62 = PHI <bmx_61(258), bmx_1577(257)>
  # bmy_178 = PHI <bmy_177(258), bmy_3248(257)>
  # bcost_303 = PHI <bcost_302(258), bcost_1585(257)>
  # DEBUG bcost => bcost_303
  # DEBUG bmy => bmy_178
  # DEBUG bmx => bmx_62
  if (bcost_303 > bcost_1597)
    goto <bb 261>;
  else
    goto <bb 260>;

  <bb 260>:

  <bb 261>:
  # bmx_63 = PHI <bmx_62(260), bmx_1589(259)>
  # bmy_179 = PHI <bmy_178(260), bmy_3248(259)>
  # bcost_304 = PHI <bcost_303(260), bcost_1597(259)>
  # DEBUG bcost => bcost_304
  # DEBUG bmy => bmy_179
  # DEBUG bmx => bmx_63
  if (bcost_304 > bcost_1609)
    goto <bb 263>;
  else
    goto <bb 262>;

  <bb 262>:

  <bb 263>:
  # bmx_64 = PHI <bmx_63(262), bmx_1601(261)>
  # bmy_180 = PHI <bmy_179(262), bmy_3248(261)>
  # bcost_305 = PHI <bcost_304(262), bcost_1609(261)>
  # DEBUG bcost => bcost_305
  # DEBUG bmy => bmy_180
  # DEBUG bmx => bmx_64
  i_1611 = i_3586 + 4;
  # DEBUG i => i_1611
  # DEBUG i => i_1611
  # DEBUG bcost => bcost_305
  # DEBUG bmy => bmy_180
  # DEBUG bmx => bmx_64
  if (i_1611 < _3280)
    goto <bb 265>;
  else
    goto <bb 264>;

  <bb 264>:
  # bmx_4150 = PHI <bmx_64(263)>
  # bmy_4131 = PHI <bmy_180(263)>
  # bcost_4108 = PHI <bcost_305(263)>
  _4714 = i_405 + 4;
  _4337 = (unsigned int) i_me_range_2;
  _4335 = (unsigned int) i_405;
  _4329 = _4337 - _4335;
  _4327 = _4329 + 4294967293;
  _4321 = _4327 / 4;
  _4319 = (int) _4321;
  _4313 = _4319 * 4;
  i_4083 = _4714 + _4313;
  goto <bb 253>;

  <bb 265>:
  goto <bb 255>;

  <bb 266>:
  _1628 = bmy_3248 << 2;
  _1629 = (long unsigned int) _1628;
  _1630 = _1629 * 2;
  _1631 = p_cost_mvy_528 + _1630;
  _1652 = bmy_3248 << 2;
  _1653 = (long unsigned int) _1652;
  _1654 = _1653 * 2;
  _1655 = p_cost_mvy_528 + _1654;

  <bb 267>:
  # bmx_3346 = PHI <bmx_570(266), bmx_67(275)>
  # bmy_3611 = PHI <bmy_546(266), bmy_183(275)>
  # bcost_3603 = PHI <bcost_539(266), bcost_308(275)>
  # i_3214 = PHI <i_2968(266), i_1660(275)>
  # DEBUG i => i_3214
  # DEBUG bcost => bcost_3603
  # DEBUG bmy => bmy_3611
  # DEBUG bmx => bmx_3346
  bmx_1612 = i_3214 + bmx_3244;
  if (mv_x_max_515 >= bmx_1612)
    goto <bb 268>;
  else
    goto <bb 270>;

  <bb 268>:
  _1613 = h_510(D)->pixf.fpelcmp[_506];
  _1614 = m_505(D)->i_stride[0];
  _1615 = _1614 * bmy_3248;
  _1616 = bmx_1612 + _1615;
  _1617 = (sizetype) _1616;
  _1618 = p_fref_512 + _1617;
  _1619 = m_505(D)->p_fenc[0];
  _1621 = _1613 (_1619, 16, _1618, _1614);
  _1622 = bmx_1612 << 2;
  _1623 = (long unsigned int) _1622;
  _1624 = _1623 * 2;
  _1625 = p_cost_mvx_522 + _1624;
  _1626 = *_1625;
  _1627 = (int) _1626;
  _1632 = *_1631;
  _1633 = (int) _1632;
  _1634 = _1627 + _1633;
  bcost_1635 = _1621 + _1634;
  # DEBUG cost => bcost_1635
  if (bcost_1635 < bcost_3603)
    goto <bb 270>;
  else
    goto <bb 269>;

  <bb 269>:

  <bb 270>:
  # bmx_66 = PHI <bmx_3346(267), bmx_3346(269), bmx_1612(268)>
  # bmy_182 = PHI <bmy_3611(267), bmy_3611(269), bmy_3248(268)>
  # bcost_307 = PHI <bcost_3603(267), bcost_3603(269), bcost_1635(268)>
  # DEBUG bcost => bcost_307
  # DEBUG bmy => bmy_182
  # DEBUG bmx => bmx_66
  bmx_1636 = bmx_3244 - i_3214;
  if (bmx_513 <= bmx_1636)
    goto <bb 271>;
  else
    goto <bb 273>;

  <bb 271>:
  _1637 = h_510(D)->pixf.fpelcmp[_506];
  _1638 = m_505(D)->i_stride[0];
  _1639 = _1638 * bmy_3248;
  _1640 = bmx_1636 + _1639;
  _1641 = (sizetype) _1640;
  _1642 = p_fref_512 + _1641;
  _1643 = m_505(D)->p_fenc[0];
  _1645 = _1637 (_1643, 16, _1642, _1638);
  _1646 = bmx_1636 << 2;
  _1647 = (long unsigned int) _1646;
  _1648 = _1647 * 2;
  _1649 = p_cost_mvx_522 + _1648;
  _1650 = *_1649;
  _1651 = (int) _1650;
  _1656 = *_1655;
  _1657 = (int) _1656;
  _1658 = _1651 + _1657;
  bcost_1659 = _1645 + _1658;
  # DEBUG cost => bcost_1659
  if (bcost_307 > bcost_1659)
    goto <bb 273>;
  else
    goto <bb 272>;

  <bb 272>:

  <bb 273>:
  # bmx_67 = PHI <bmx_66(270), bmx_66(272), bmx_1636(271)>
  # bmy_183 = PHI <bmy_182(270), bmy_182(272), bmy_3248(271)>
  # bcost_308 = PHI <bcost_307(270), bcost_307(272), bcost_1659(271)>
  # DEBUG bcost => bcost_308
  # DEBUG bmy => bmy_183
  # DEBUG bmx => bmx_67
  i_1660 = i_3214 + 2;
  # DEBUG i => i_1660
  # DEBUG i => i_1660
  # DEBUG bcost => bcost_308
  # DEBUG bmy => bmy_183
  # DEBUG bmx => bmx_67
  if (i_me_range_2 > i_1660)
    goto <bb 275>;
  else
    goto <bb 274>;

  <bb 274>:
  # bmx_4149 = PHI <bmx_67(273)>
  # bmy_4130 = PHI <bmy_183(273)>
  # bcost_4107 = PHI <bcost_308(273)>
  goto <bb 276>;

  <bb 275>:
  goto <bb 267>;

  <bb 276>:
  # bmx_3329 = PHI <bmx_4149(274), bmx_570(253)>
  # bmy_3234 = PHI <bmy_4130(274), bmy_546(253)>
  # bcost_3597 = PHI <bcost_4107(274), bcost_539(253)>
  # DEBUG i => i_405
  _1661 = i_me_range_2 / 2;
  if (_1661 <= prephitmp_4366)
    goto <bb 277>;
  else
    goto <bb 278>;

  <bb 277>:
  # DEBUG i => i_405
  # DEBUG bcost => bcost_3597
  # DEBUG bmy => bmy_3234
  # DEBUG bmx => bmx_3329
  _2997 = _1661 + -2;
  if (i_405 < _2997)
    goto <bb 279>;
  else
    goto <bb 278>;

  <bb 278>:
  # bmx_599 = PHI <bmx_3329(276), bmx_4148(289), bmx_3329(277)>
  # bmy_509 = PHI <bmy_3234(276), bmy_4129(289), bmy_3234(277)>
  # bcost_591 = PHI <bcost_3597(276), bcost_4106(289), bcost_3597(277)>
  # i_587 = PHI <i_405(276), i_4082(289), i_405(277)>
  # DEBUG i => i_587
  # DEBUG bcost => bcost_591
  # DEBUG bmy => bmy_509
  # DEBUG bmx => bmx_599
  if (i_587 < _1661)
    goto <bb 291>;
  else
    goto <bb 301>;

  <bb 279>:
  pretmp_4444 = bmx_3244 << 2;
  pretmp_4445 = (long unsigned int) pretmp_4444;
  pretmp_4446 = pretmp_4445 * 2;
  pretmp_4447 = p_cost_mvx_522 + pretmp_4446;

  <bb 280>:
  # bmx_3703 = PHI <bmx_3329(279), bmx_72(290)>
  # bmy_3608 = PHI <bmy_3234(279), bmy_188(290)>
  # bcost_3223 = PHI <bcost_3597(279), bcost_313(290)>
  # i_3582 = PHI <i_405(279), i_1740(290)>
  # DEBUG i => i_3582
  # DEBUG bcost => bcost_3223
  # DEBUG bmy => bmy_3608
  # DEBUG bmx => bmx_3703
  _1667 = m_505(D)->i_stride[0];
  _1668 = _1667 * bmy_3248;
  _1669 = (sizetype) _1668;
  _1670 = _1669 + prephitmp_4354;
  pix_base_1671 = p_fref_512 + _1670;
  # DEBUG pix_base => pix_base_1671
  _1672 = h_510(D)->pixf.fpelcmp_x4[_506];
  _1673 = -2 - i_3582;
  _1674 = _1667 * _1673;
  _1675 = (sizetype) _1674;
  _1676 = pix_base_1671 + _1675;
  _1677 = i_3582 + 2;
  _1678 = _1667 * _1677;
  _1679 = (sizetype) _1678;
  _1680 = pix_base_1671 + _1679;
  _1681 = -i_3582;
  _1682 = _1667 * _1681;
  _1683 = (sizetype) _1682;
  _1684 = pix_base_1671 + _1683;
  _1685 = _1667 * i_3582;
  _1686 = (sizetype) _1685;
  _1687 = pix_base_1671 + _1686;
  _1688 = m_505(D)->p_fenc[0];
  _1672 (_1688, _1687, _1684, _1680, _1676, _1667, &costs);
  _1690 = costs[0];
  _1695 = *pretmp_4447;
  _1696 = (int) _1695;
  bmy_1697 = bmy_3248 + i_3582;
  _1698 = bmy_1697 << 2;
  _1699 = (long unsigned int) _1698;
  _1700 = _1699 * 2;
  _1701 = p_cost_mvy_528 + _1700;
  _1702 = *_1701;
  _1703 = (int) _1702;
  _1704 = _1696 + _1703;
  bcost_1705 = _1690 + _1704;
  costs[0] = bcost_1705;
  _1707 = costs[1];
  bmy_1708 = bmy_3248 - i_3582;
  _1709 = bmy_1708 << 2;
  _1710 = (long unsigned int) _1709;
  _1711 = _1710 * 2;
  _1712 = p_cost_mvy_528 + _1711;
  _1713 = *_1712;
  _1714 = (int) _1713;
  _1715 = _1696 + _1714;
  bcost_1716 = _1707 + _1715;
  costs[1] = bcost_1716;
  _1718 = costs[2];
  bmy_1719 = _1677 + bmy_3248;
  _1720 = bmy_1719 << 2;
  _1721 = (long unsigned int) _1720;
  _1722 = _1721 * 2;
  _1723 = p_cost_mvy_528 + _1722;
  _1724 = *_1723;
  _1725 = (int) _1724;
  _1726 = _1696 + _1725;
  bcost_1727 = _1718 + _1726;
  costs[2] = bcost_1727;
  _1729 = costs[3];
  bmy_1730 = _1673 + bmy_3248;
  _1731 = bmy_1730 << 2;
  _1732 = (long unsigned int) _1731;
  _1733 = _1732 * 2;
  _1734 = p_cost_mvy_528 + _1733;
  _1735 = *_1734;
  _1736 = (int) _1735;
  _1737 = _1696 + _1736;
  bcost_1738 = _1729 + _1737;
  costs[3] = bcost_1738;
  if (bcost_1705 < bcost_3223)
    goto <bb 282>;
  else
    goto <bb 281>;

  <bb 281>:

  <bb 282>:
  # bmx_69 = PHI <bmx_3703(281), bmx_3244(280)>
  # bmy_185 = PHI <bmy_3608(281), bmy_1697(280)>
  # bcost_310 = PHI <bcost_3223(281), bcost_1705(280)>
  # DEBUG bcost => bcost_310
  # DEBUG bmy => bmy_185
  # DEBUG bmx => bmx_69
  if (bcost_310 > bcost_1716)
    goto <bb 284>;
  else
    goto <bb 283>;

  <bb 283>:

  <bb 284>:
  # bmx_70 = PHI <bmx_69(283), bmx_3244(282)>
  # bmy_186 = PHI <bmy_185(283), bmy_1708(282)>
  # bcost_311 = PHI <bcost_310(283), bcost_1716(282)>
  # DEBUG bcost => bcost_311
  # DEBUG bmy => bmy_186
  # DEBUG bmx => bmx_70
  if (bcost_311 > bcost_1727)
    goto <bb 286>;
  else
    goto <bb 285>;

  <bb 285>:

  <bb 286>:
  # bmx_71 = PHI <bmx_70(285), bmx_3244(284)>
  # bmy_187 = PHI <bmy_186(285), bmy_1719(284)>
  # bcost_312 = PHI <bcost_311(285), bcost_1727(284)>
  # DEBUG bcost => bcost_312
  # DEBUG bmy => bmy_187
  # DEBUG bmx => bmx_71
  if (bcost_312 > bcost_1738)
    goto <bb 288>;
  else
    goto <bb 287>;

  <bb 287>:

  <bb 288>:
  # bmx_72 = PHI <bmx_71(287), bmx_3244(286)>
  # bmy_188 = PHI <bmy_187(287), bmy_1730(286)>
  # bcost_313 = PHI <bcost_312(287), bcost_1738(286)>
  # DEBUG bcost => bcost_313
  # DEBUG bmy => bmy_188
  # DEBUG bmx => bmx_72
  i_1740 = i_3582 + 4;
  # DEBUG i => i_1740
  # DEBUG i => i_1740
  # DEBUG bcost => bcost_313
  # DEBUG bmy => bmy_188
  # DEBUG bmx => bmx_72
  if (i_1740 < _2997)
    goto <bb 290>;
  else
    goto <bb 289>;

  <bb 289>:
  # bmx_4148 = PHI <bmx_72(288)>
  # bmy_4129 = PHI <bmy_188(288)>
  # bcost_4106 = PHI <bcost_313(288)>
  _4265 = i_405 + 4;
  _4740 = (unsigned int) _1661;
  _4738 = (unsigned int) i_405;
  _4732 = _4740 - _4738;
  _4730 = _4732 + 4294967293;
  _4724 = _4730 / 4;
  _4722 = (int) _4724;
  _4716 = _4722 * 4;
  i_4082 = _4265 + _4716;
  goto <bb 278>;

  <bb 290>:
  goto <bb 280>;

  <bb 291>:
  _1751 = bmx_3244 << 2;
  _1752 = (long unsigned int) _1751;
  _1753 = _1752 * 2;
  _1754 = p_cost_mvx_522 + _1753;
  _1775 = bmx_3244 << 2;
  _1776 = (long unsigned int) _1775;
  _1777 = _1776 * 2;
  _1778 = p_cost_mvx_522 + _1777;

  <bb 292>:
  # bmx_3375 = PHI <bmx_599(291), bmx_75(300)>
  # bmy_3231 = PHI <bmy_509(291), bmy_191(300)>
  # bcost_3598 = PHI <bcost_591(291), bcost_316(300)>
  # i_3211 = PHI <i_587(291), i_1789(300)>
  # DEBUG i => i_3211
  # DEBUG bcost => bcost_3598
  # DEBUG bmy => bmy_3231
  # DEBUG bmx => bmx_3375
  bmy_1741 = i_3211 + bmy_3248;
  if (mv_y_max_516 >= bmy_1741)
    goto <bb 293>;
  else
    goto <bb 295>;

  <bb 293>:
  _1742 = h_510(D)->pixf.fpelcmp[_506];
  _1743 = m_505(D)->i_stride[0];
  _1744 = bmy_1741 * _1743;
  _1745 = _1744 + bmx_3244;
  _1746 = (sizetype) _1745;
  _1747 = p_fref_512 + _1746;
  _1748 = m_505(D)->p_fenc[0];
  _1750 = _1742 (_1748, 16, _1747, _1743);
  _1755 = *_1754;
  _1756 = (int) _1755;
  _1757 = bmy_1741 << 2;
  _1758 = (long unsigned int) _1757;
  _1759 = _1758 * 2;
  _1760 = p_cost_mvy_528 + _1759;
  _1761 = *_1760;
  _1762 = (int) _1761;
  _1763 = _1756 + _1762;
  bcost_1764 = _1750 + _1763;
  # DEBUG cost => bcost_1764
  if (bcost_1764 < bcost_3598)
    goto <bb 295>;
  else
    goto <bb 294>;

  <bb 294>:

  <bb 295>:
  # bmx_74 = PHI <bmx_3375(292), bmx_3375(294), bmx_3244(293)>
  # bmy_190 = PHI <bmy_3231(292), bmy_3231(294), bmy_1741(293)>
  # bcost_315 = PHI <bcost_3598(292), bcost_3598(294), bcost_1764(293)>
  # DEBUG bcost => bcost_315
  # DEBUG bmy => bmy_190
  # DEBUG bmx => bmx_74
  bmy_1765 = bmy_3248 - i_3211;
  if (bmy_514 <= bmy_1765)
    goto <bb 296>;
  else
    goto <bb 298>;

  <bb 296>:
  _1766 = h_510(D)->pixf.fpelcmp[_506];
  _1767 = m_505(D)->i_stride[0];
  _1768 = bmy_1765 * _1767;
  _1769 = _1768 + bmx_3244;
  _1770 = (sizetype) _1769;
  _1771 = p_fref_512 + _1770;
  _1772 = m_505(D)->p_fenc[0];
  _1774 = _1766 (_1772, 16, _1771, _1767);
  _1779 = *_1778;
  _1780 = (int) _1779;
  _1781 = bmy_1765 << 2;
  _1782 = (long unsigned int) _1781;
  _1783 = _1782 * 2;
  _1784 = p_cost_mvy_528 + _1783;
  _1785 = *_1784;
  _1786 = (int) _1785;
  _1787 = _1780 + _1786;
  bcost_1788 = _1774 + _1787;
  # DEBUG cost => bcost_1788
  if (bcost_315 > bcost_1788)
    goto <bb 298>;
  else
    goto <bb 297>;

  <bb 297>:

  <bb 298>:
  # bmx_75 = PHI <bmx_74(295), bmx_74(297), bmx_3244(296)>
  # bmy_191 = PHI <bmy_190(295), bmy_190(297), bmy_1765(296)>
  # bcost_316 = PHI <bcost_315(295), bcost_315(297), bcost_1788(296)>
  # DEBUG bcost => bcost_316
  # DEBUG bmy => bmy_191
  # DEBUG bmx => bmx_75
  i_1789 = i_3211 + 2;
  # DEBUG i => i_1789
  # DEBUG i => i_1789
  # DEBUG bcost => bcost_316
  # DEBUG bmy => bmy_191
  # DEBUG bmx => bmx_75
  if (_1661 > i_1789)
    goto <bb 300>;
  else
    goto <bb 299>;

  <bb 299>:
  # bmx_4147 = PHI <bmx_75(298)>
  # bmy_4128 = PHI <bmy_191(298)>
  # bcost_4105 = PHI <bcost_316(298)>
  goto <bb 301>;

  <bb 300>:
  goto <bb 292>;

  <bb 301>:
  # bmx_3704 = PHI <bmx_4147(299), bmx_599(278)>
  # bmy_3609 = PHI <bmy_4128(299), bmy_509(278)>
  # bcost_3224 = PHI <bcost_4105(299), bcost_591(278)>
  _1791 = m_505(D)->i_stride[0];
  _1792 = _1791 * bmy_3248;
  _1793 = (sizetype) _1792;
  _1794 = _1793 + prephitmp_4354;
  pix_base_1795 = p_fref_512 + _1794;
  # DEBUG pix_base => pix_base_1795
  _1796 = h_510(D)->pixf.fpelcmp_x4[_506];
  _1797 = _1791 * 2;
  _1798 = (sizetype) _1797;
  _1799 = _1798 + 2;
  _1800 = pix_base_1795 + _1799;
  _1801 = _1791 * -2;
  _1802 = (sizetype) _1801;
  _1803 = _1802 + 2;
  _1804 = pix_base_1795 + _1803;
  _1805 = _1798 + 18446744073709551614;
  _1806 = pix_base_1795 + _1805;
  _1807 = _1802 + 18446744073709551614;
  _1808 = pix_base_1795 + _1807;
  _1809 = m_505(D)->p_fenc[0];
  _1796 (_1809, _1808, _1806, _1804, _1800, _1791, &costs);
  _1811 = costs[0];
  _1817 = *prephitmp_4381;
  _1818 = (int) _1817;
  _1824 = *prephitmp_4396;
  _1825 = (int) _1824;
  _1826 = _1818 + _1825;
  bcost_1827 = _1811 + _1826;
  costs[0] = bcost_1827;
  _1829 = costs[1];
  _1835 = *prephitmp_4411;
  _1836 = (int) _1835;
  _1837 = _1818 + _1836;
  bcost_1838 = _1829 + _1837;
  costs[1] = bcost_1838;
  _1840 = costs[2];
  _1846 = *prephitmp_4426;
  _1847 = (int) _1846;
  _1848 = _1825 + _1847;
  bcost_1849 = _1840 + _1848;
  costs[2] = bcost_1849;
  _1851 = costs[3];
  _1852 = _1836 + _1847;
  bcost_1853 = _1851 + _1852;
  costs[3] = bcost_1853;
  if (bcost_1827 < bcost_3224)
    goto <bb 303>;
  else
    goto <bb 302>;

  <bb 302>:

  <bb 303>:
  # bmx_77 = PHI <bmx_3704(302), prephitmp_4369(301)>
  # bmy_193 = PHI <bmy_3609(302), prephitmp_4384(301)>
  # bcost_318 = PHI <bcost_3224(302), bcost_1827(301)>
  # DEBUG bcost => bcost_318
  # DEBUG bmy => bmy_193
  # DEBUG bmx => bmx_77
  if (bcost_318 > bcost_1838)
    goto <bb 305>;
  else
    goto <bb 304>;

  <bb 304>:

  <bb 305>:
  # bmx_78 = PHI <bmx_77(304), prephitmp_4369(303)>
  # bmy_194 = PHI <bmy_193(304), prephitmp_4399(303)>
  # bcost_319 = PHI <bcost_318(304), bcost_1838(303)>
  # DEBUG bcost => bcost_319
  # DEBUG bmy => bmy_194
  # DEBUG bmx => bmx_78
  if (bcost_319 > bcost_1849)
    goto <bb 307>;
  else
    goto <bb 306>;

  <bb 306>:

  <bb 307>:
  # bmx_79 = PHI <bmx_78(306), prephitmp_4414(305)>
  # bmy_195 = PHI <bmy_194(306), prephitmp_4384(305)>
  # bcost_320 = PHI <bcost_319(306), bcost_1849(305)>
  # DEBUG bcost => bcost_320
  # DEBUG bmy => bmy_195
  # DEBUG bmx => bmx_79
  if (bcost_320 > bcost_1853)
    goto <bb 309>;
  else
    goto <bb 308>;

  <bb 308>:

  <bb 309>:
  # bmx_80 = PHI <bmx_79(308), prephitmp_4414(307)>
  # bmy_196 = PHI <bmy_195(308), prephitmp_4399(307)>
  # bcost_321 = PHI <bcost_320(308), bcost_1853(307)>
  # DEBUG bcost => bcost_321
  # DEBUG bmy => bmy_196
  # DEBUG bmx => bmx_80
  # DEBUG omx => bmx_80
  # DEBUG omy => bmy_196
  # DEBUG i => 1
  pretmp_4428 = bmy_196 - bmy_514;
  pretmp_4429 = mv_y_max_516 - bmy_196;
  pretmp_4430 = MIN_EXPR <pretmp_4428, pretmp_4429>;
  pretmp_4431 = bmx_80 - bmx_513;
  pretmp_4432 = MIN_EXPR <pretmp_4430, pretmp_4431>;
  pretmp_4433 = mv_x_max_515 - bmx_80;
  pretmp_4434 = MIN_EXPR <pretmp_4432, pretmp_4433>;
  pretmp_4438 = i_me_range_2 / 4;
  _1955 = bmy_196 << 2;
  _1956 = (long unsigned int) _1955;
  _1957 = _1956 * 2;
  _1958 = p_cost_mvy_528 + _1957;
  _2090 = bmx_80 << 2;
  _2091 = (long unsigned int) _2090;
  _2092 = _2091 * 2;
  _2093 = p_cost_mvx_522 + _2092;

  <bb 310>:
  # bmx_81 = PHI <bmx_80(309), bmx_99(352)>
  # bmy_197 = PHI <bmy_196(309), bmy_215(352)>
  # bcost_322 = PHI <bcost_321(309), bcost_340(352)>
  # i_380 = PHI <1(309), i_2172(352)>
  # DEBUG i => i_380
  # DEBUG bcost => bcost_322
  # DEBUG bmy => bmy_197
  # DEBUG bmx => bmx_81
  _1855 = i_380 * 4;
  if (_1855 > pretmp_4434)
    goto <bb 311>;
  else
    goto <bb 319>;

  <bb 311>:

  <bb 312>:
  # bmx_3247 = PHI <bmx_81(311), bmx_82(318)>
  # bmy_3690 = PHI <bmy_197(311), bmy_198(318)>
  # bcost_3252 = PHI <bcost_322(311), bcost_323(318)>
  # j_3251 = PHI <0(311), j_1898(318)>
  # ivtmp_4214 = PHI <16(311), ivtmp_4209(318)>
  # DEBUG j => j_3251
  # DEBUG bcost => bcost_3252
  # DEBUG bmy => bmy_3690
  # DEBUG bmx => bmx_3247
  _1863 = hex4[j_3251][0];
  _1864 = i_380 * _1863;
  bmx_1865 = bmx_80 + _1864;
  # DEBUG mx => bmx_1865
  # DEBUG D#16 => hex4[j_3251][1]
  # DEBUG D#15 => i_380 * D#16
  # DEBUG my => bmy_196 + D#15
  _1869 = bmx_513 <= bmx_1865;
  _1870 = mv_x_max_515 >= bmx_1865;
  _1871 = _1869 & _1870;
  if (_1871 != 0)
    goto <bb 313>;
  else
    goto <bb 316>;

  <bb 313>:
  _1866 = hex4[j_3251][1];
  _1867 = i_380 * _1866;
  bmy_1868 = bmy_196 + _1867;
  _1872 = bmy_514 <= bmy_1868;
  _1873 = mv_y_max_516 >= bmy_1868;
  _1874 = _1872 & _1873;
  if (_1874 != 0)
    goto <bb 314>;
  else
    goto <bb 316>;

  <bb 314>:
  _1875 = h_510(D)->pixf.fpelcmp[_506];
  _1876 = m_505(D)->i_stride[0];
  _1877 = bmy_1868 * _1876;
  _1878 = bmx_1865 + _1877;
  _1879 = (sizetype) _1878;
  _1880 = p_fref_512 + _1879;
  _1881 = m_505(D)->p_fenc[0];
  _1883 = _1875 (_1881, 16, _1880, _1876);
  _1884 = bmx_1865 << 2;
  _1885 = (long unsigned int) _1884;
  _1886 = _1885 * 2;
  _1887 = p_cost_mvx_522 + _1886;
  _1888 = *_1887;
  _1889 = (int) _1888;
  _1890 = bmy_1868 << 2;
  _1891 = (long unsigned int) _1890;
  _1892 = _1891 * 2;
  _1893 = p_cost_mvy_528 + _1892;
  _1894 = *_1893;
  _1895 = (int) _1894;
  _1896 = _1889 + _1895;
  bcost_1897 = _1883 + _1896;
  # DEBUG cost => bcost_1897
  if (bcost_1897 < bcost_3252)
    goto <bb 316>;
  else
    goto <bb 315>;

  <bb 315>:

  <bb 316>:
  # bmx_82 = PHI <bmx_3247(312), bmx_3247(313), bmx_3247(315), bmx_1865(314)>
  # bmy_198 = PHI <bmy_3690(312), bmy_3690(313), bmy_3690(315), bmy_1868(314)>
  # bcost_323 = PHI <bcost_3252(312), bcost_3252(313), bcost_3252(315), bcost_1897(314)>
  # DEBUG bcost => bcost_323
  # DEBUG bmy => bmy_198
  # DEBUG bmx => bmx_82
  j_1898 = j_3251 + 1;
  # DEBUG j => j_1898
  # DEBUG j => j_1898
  # DEBUG bcost => bcost_323
  # DEBUG bmy => bmy_198
  # DEBUG bmx => bmx_82
  ivtmp_4209 = ivtmp_4214 - 1;
  if (ivtmp_4209 != 0)
    goto <bb 318>;
  else
    goto <bb 317>;

  <bb 317>:
  # bmx_4146 = PHI <bmx_82(316)>
  # bmy_4127 = PHI <bmy_198(316)>
  # bcost_4104 = PHI <bcost_323(316)>
  goto <bb 351>;

  <bb 318>:
  goto <bb 312>;

  <bb 319>:
  _1899 = (sizetype) bmx_80;
  _1900 = m_505(D)->i_stride[0];
  _1901 = bmy_196 * _1900;
  _1902 = (sizetype) _1901;
  _1903 = _1899 + _1902;
  pix_base_1904 = p_fref_512 + _1903;
  # DEBUG pix_base => pix_base_1904
  _1905 = h_510(D)->pixf.fpelcmp_x4[_506];
  _1906 = i_380 * -4;
  _1907 = (sizetype) _1906;
  _1908 = -i_380;
  _1909 = _1900 * _1908;
  _1910 = (sizetype) _1909;
  _1911 = _1907 + _1910;
  _1912 = pix_base_1904 + _1911;
  _1913 = pix_base_1904 + _1907;
  _1914 = i_380 * _1900;
  _1915 = (sizetype) _1914;
  _1916 = _1907 + _1915;
  _1917 = pix_base_1904 + _1916;
  _1918 = i_380 * 2;
  _1919 = _1900 * _1918;
  _1920 = (sizetype) _1919;
  _1921 = _1907 + _1920;
  _1922 = pix_base_1904 + _1921;
  _1923 = m_505(D)->p_fenc[0];
  _1905 (_1923, _1922, _1917, _1913, _1912, _1900, &costs);
  _1925 = costs[0];
  bmx_1926 = bmx_80 + _1906;
  _1927 = bmx_1926 << 2;
  _1928 = (long unsigned int) _1927;
  _1929 = _1928 * 2;
  _1930 = p_cost_mvx_522 + _1929;
  _1931 = *_1930;
  _1932 = (int) _1931;
  bmy_1933 = bmy_196 + _1918;
  _1934 = bmy_1933 << 2;
  _1935 = (long unsigned int) _1934;
  _1936 = _1935 * 2;
  _1937 = p_cost_mvy_528 + _1936;
  _1938 = *_1937;
  _1939 = (int) _1938;
  _1940 = _1932 + _1939;
  bcost_1941 = _1925 + _1940;
  costs[0] = bcost_1941;
  _1943 = costs[1];
  bmy_1944 = bmy_196 + i_380;
  _1945 = bmy_1944 << 2;
  _1946 = (long unsigned int) _1945;
  _1947 = _1946 * 2;
  _1948 = p_cost_mvy_528 + _1947;
  _1949 = *_1948;
  _1950 = (int) _1949;
  _1951 = _1932 + _1950;
  bcost_1952 = _1943 + _1951;
  costs[1] = bcost_1952;
  _1954 = costs[2];
  _1959 = *_1958;
  _1960 = (int) _1959;
  _1961 = _1932 + _1960;
  bcost_1962 = _1954 + _1961;
  costs[2] = bcost_1962;
  _1964 = costs[3];
  bmy_1965 = bmy_196 - i_380;
  _1966 = bmy_1965 << 2;
  _1967 = (long unsigned int) _1966;
  _1968 = _1967 * 2;
  _1969 = p_cost_mvy_528 + _1968;
  _1970 = *_1969;
  _1971 = (int) _1970;
  _1972 = _1932 + _1971;
  bcost_1973 = _1964 + _1972;
  costs[3] = bcost_1973;
  if (bcost_322 > bcost_1941)
    goto <bb 321>;
  else
    goto <bb 320>;

  <bb 320>:

  <bb 321>:
  # bmx_84 = PHI <bmx_81(320), bmx_1926(319)>
  # bmy_200 = PHI <bmy_197(320), bmy_1933(319)>
  # bcost_325 = PHI <bcost_322(320), bcost_1941(319)>
  # DEBUG bcost => bcost_325
  # DEBUG bmy => bmy_200
  # DEBUG bmx => bmx_84
  if (bcost_325 > bcost_1952)
    goto <bb 323>;
  else
    goto <bb 322>;

  <bb 322>:

  <bb 323>:
  # bmx_85 = PHI <bmx_84(322), bmx_1926(321)>
  # bmy_201 = PHI <bmy_200(322), bmy_1944(321)>
  # bcost_326 = PHI <bcost_325(322), bcost_1952(321)>
  # DEBUG bcost => bcost_326
  # DEBUG bmy => bmy_201
  # DEBUG bmx => bmx_85
  if (bcost_326 > bcost_1962)
    goto <bb 325>;
  else
    goto <bb 324>;

  <bb 324>:

  <bb 325>:
  # bmx_86 = PHI <bmx_85(324), bmx_1926(323)>
  # bmy_202 = PHI <bmy_201(324), bmy_196(323)>
  # bcost_327 = PHI <bcost_326(324), bcost_1962(323)>
  # DEBUG bcost => bcost_327
  # DEBUG bmy => bmy_202
  # DEBUG bmx => bmx_86
  if (bcost_327 > bcost_1973)
    goto <bb 327>;
  else
    goto <bb 326>;

  <bb 326>:

  <bb 327>:
  # bmx_87 = PHI <bmx_86(326), bmx_1926(325)>
  # bmy_203 = PHI <bmy_202(326), bmy_1965(325)>
  # bcost_328 = PHI <bcost_327(326), bcost_1973(325)>
  # DEBUG bcost => bcost_328
  # DEBUG bmy => bmy_203
  # DEBUG bmx => bmx_87
  _1975 = m_505(D)->i_stride[0];
  _1976 = bmy_196 * _1975;
  _1977 = (sizetype) _1976;
  _1978 = _1899 + _1977;
  pix_base_1979 = p_fref_512 + _1978;
  # DEBUG pix_base => pix_base_1979
  _1980 = h_510(D)->pixf.fpelcmp_x4[_506];
  _1981 = (sizetype) _1855;
  _1982 = pix_base_1979 + _1981;
  _1983 = _1908 * _1975;
  _1984 = (sizetype) _1983;
  _1985 = _1981 + _1984;
  _1986 = pix_base_1979 + _1985;
  _1987 = i_380 * -2;
  _1988 = _1975 * _1987;
  _1989 = (sizetype) _1988;
  _1990 = _1981 + _1989;
  _1991 = pix_base_1979 + _1990;
  _1992 = _1907 + _1989;
  _1993 = pix_base_1979 + _1992;
  _1994 = m_505(D)->p_fenc[0];
  _1980 (_1994, _1993, _1991, _1986, _1982, _1975, &costs);
  _1996 = costs[0];
  _1997 = *_1930;
  _1998 = (int) _1997;
  bmy_1999 = bmy_196 + _1987;
  _2000 = bmy_1999 << 2;
  _2001 = (long unsigned int) _2000;
  _2002 = _2001 * 2;
  _2003 = p_cost_mvy_528 + _2002;
  _2004 = *_2003;
  _2005 = (int) _2004;
  _2006 = _1998 + _2005;
  bcost_2007 = _1996 + _2006;
  costs[0] = bcost_2007;
  _2009 = costs[1];
  bmx_2010 = bmx_80 + _1855;
  _2011 = bmx_2010 << 2;
  _2012 = (long unsigned int) _2011;
  _2013 = _2012 * 2;
  _2014 = p_cost_mvx_522 + _2013;
  _2015 = *_2014;
  _2016 = (int) _2015;
  _2017 = _2005 + _2016;
  bcost_2018 = _2009 + _2017;
  costs[1] = bcost_2018;
  _2020 = costs[2];
  _2021 = *_1969;
  _2022 = (int) _2021;
  _2023 = _2016 + _2022;
  bcost_2024 = _2020 + _2023;
  costs[2] = bcost_2024;
  _2026 = costs[3];
  _2027 = *_1958;
  _2028 = (int) _2027;
  _2029 = _2016 + _2028;
  bcost_2030 = _2026 + _2029;
  costs[3] = bcost_2030;
  if (bcost_328 > bcost_2007)
    goto <bb 329>;
  else
    goto <bb 328>;

  <bb 328>:

  <bb 329>:
  # bmx_88 = PHI <bmx_87(328), bmx_1926(327)>
  # bmy_204 = PHI <bmy_203(328), bmy_1999(327)>
  # bcost_329 = PHI <bcost_328(328), bcost_2007(327)>
  # DEBUG bcost => bcost_329
  # DEBUG bmy => bmy_204
  # DEBUG bmx => bmx_88
  if (bcost_329 > bcost_2018)
    goto <bb 331>;
  else
    goto <bb 330>;

  <bb 330>:

  <bb 331>:
  # bmx_89 = PHI <bmx_88(330), bmx_2010(329)>
  # bmy_205 = PHI <bmy_204(330), bmy_1999(329)>
  # bcost_330 = PHI <bcost_329(330), bcost_2018(329)>
  # DEBUG bcost => bcost_330
  # DEBUG bmy => bmy_205
  # DEBUG bmx => bmx_89
  if (bcost_330 > bcost_2024)
    goto <bb 333>;
  else
    goto <bb 332>;

  <bb 332>:

  <bb 333>:
  # bmx_90 = PHI <bmx_89(332), bmx_2010(331)>
  # bmy_206 = PHI <bmy_205(332), bmy_1965(331)>
  # bcost_331 = PHI <bcost_330(332), bcost_2024(331)>
  # DEBUG bcost => bcost_331
  # DEBUG bmy => bmy_206
  # DEBUG bmx => bmx_90
  if (bcost_331 > bcost_2030)
    goto <bb 335>;
  else
    goto <bb 334>;

  <bb 334>:

  <bb 335>:
  # bmx_91 = PHI <bmx_90(334), bmx_2010(333)>
  # bmy_207 = PHI <bmy_206(334), bmy_196(333)>
  # bcost_332 = PHI <bcost_331(334), bcost_2030(333)>
  # DEBUG bcost => bcost_332
  # DEBUG bmy => bmy_207
  # DEBUG bmx => bmx_91
  _2032 = m_505(D)->i_stride[0];
  _2033 = bmy_196 * _2032;
  _2034 = (sizetype) _2033;
  _2035 = _1899 + _2034;
  pix_base_2036 = p_fref_512 + _2035;
  # DEBUG pix_base => pix_base_2036
  _2037 = h_510(D)->pixf.fpelcmp_x4[_506];
  _2038 = _1855 * _2032;
  _2039 = (sizetype) _2038;
  _2040 = pix_base_2036 + _2039;
  _2041 = (sizetype) _1918;
  _2042 = i_380 * 3;
  _2043 = _2032 * _2042;
  _2044 = (sizetype) _2043;
  _2045 = _2041 + _2044;
  _2046 = pix_base_2036 + _2045;
  _2047 = _1918 * _2032;
  _2048 = (sizetype) _2047;
  _2049 = _1981 + _2048;
  _2050 = pix_base_2036 + _2049;
  _2051 = i_380 * _2032;
  _2052 = (sizetype) _2051;
  _2053 = _1981 + _2052;
  _2054 = pix_base_2036 + _2053;
  _2055 = m_505(D)->p_fenc[0];
  _2037 (_2055, _2054, _2050, _2046, _2040, _2032, &costs);
  _2057 = costs[0];
  _2058 = *_2014;
  _2059 = (int) _2058;
  _2060 = *_1948;
  _2061 = (int) _2060;
  _2062 = _2059 + _2061;
  bcost_2063 = _2057 + _2062;
  costs[0] = bcost_2063;
  _2065 = costs[1];
  _2066 = *_1937;
  _2067 = (int) _2066;
  _2068 = _2059 + _2067;
  bcost_2069 = _2065 + _2068;
  costs[1] = bcost_2069;
  _2071 = costs[2];
  bmx_2072 = bmx_80 + _1918;
  _2073 = bmx_2072 << 2;
  _2074 = (long unsigned int) _2073;
  _2075 = _2074 * 2;
  _2076 = p_cost_mvx_522 + _2075;
  _2077 = *_2076;
  _2078 = (int) _2077;
  bmy_2079 = bmy_196 + _2042;
  _2080 = bmy_2079 << 2;
  _2081 = (long unsigned int) _2080;
  _2082 = _2081 * 2;
  _2083 = p_cost_mvy_528 + _2082;
  _2084 = *_2083;
  _2085 = (int) _2084;
  _2086 = _2078 + _2085;
  bcost_2087 = _2071 + _2086;
  costs[2] = bcost_2087;
  _2089 = costs[3];
  _2094 = *_2093;
  _2095 = (int) _2094;
  bmy_2096 = bmy_196 + _1855;
  _2097 = bmy_2096 << 2;
  _2098 = (long unsigned int) _2097;
  _2099 = _2098 * 2;
  _2100 = p_cost_mvy_528 + _2099;
  _2101 = *_2100;
  _2102 = (int) _2101;
  _2103 = _2095 + _2102;
  bcost_2104 = _2089 + _2103;
  costs[3] = bcost_2104;
  if (bcost_332 > bcost_2063)
    goto <bb 337>;
  else
    goto <bb 336>;

  <bb 336>:

  <bb 337>:
  # bmx_92 = PHI <bmx_91(336), bmx_2010(335)>
  # bmy_208 = PHI <bmy_207(336), bmy_1944(335)>
  # bcost_333 = PHI <bcost_332(336), bcost_2063(335)>
  # DEBUG bcost => bcost_333
  # DEBUG bmy => bmy_208
  # DEBUG bmx => bmx_92
  if (bcost_333 > bcost_2069)
    goto <bb 339>;
  else
    goto <bb 338>;

  <bb 338>:

  <bb 339>:
  # bmx_93 = PHI <bmx_92(338), bmx_2010(337)>
  # bmy_209 = PHI <bmy_208(338), bmy_1933(337)>
  # bcost_334 = PHI <bcost_333(338), bcost_2069(337)>
  # DEBUG bcost => bcost_334
  # DEBUG bmy => bmy_209
  # DEBUG bmx => bmx_93
  if (bcost_334 > bcost_2087)
    goto <bb 341>;
  else
    goto <bb 340>;

  <bb 340>:

  <bb 341>:
  # bmx_94 = PHI <bmx_93(340), bmx_2072(339)>
  # bmy_210 = PHI <bmy_209(340), bmy_2079(339)>
  # bcost_335 = PHI <bcost_334(340), bcost_2087(339)>
  # DEBUG bcost => bcost_335
  # DEBUG bmy => bmy_210
  # DEBUG bmx => bmx_94
  if (bcost_335 > bcost_2104)
    goto <bb 343>;
  else
    goto <bb 342>;

  <bb 342>:

  <bb 343>:
  # bmx_95 = PHI <bmx_94(342), bmx_80(341)>
  # bmy_211 = PHI <bmy_210(342), bmy_2096(341)>
  # bcost_336 = PHI <bcost_335(342), bcost_2104(341)>
  # DEBUG bcost => bcost_336
  # DEBUG bmy => bmy_211
  # DEBUG bmx => bmx_95
  _2106 = m_505(D)->i_stride[0];
  _2107 = bmy_196 * _2106;
  _2108 = (sizetype) _2107;
  _2109 = _1899 + _2108;
  pix_base_2110 = p_fref_512 + _2109;
  # DEBUG pix_base => pix_base_2110
  _2111 = h_510(D)->pixf.fpelcmp_x4[_506];
  _2112 = i_380 * -3;
  _2113 = _2106 * _2112;
  _2114 = (sizetype) _2113;
  _2115 = _2041 + _2114;
  _2116 = pix_base_2110 + _2115;
  _2117 = _1906 * _2106;
  _2118 = (sizetype) _2117;
  _2119 = pix_base_2110 + _2118;
  _2120 = (sizetype) _1987;
  _2121 = _2114 + _2120;
  _2122 = pix_base_2110 + _2121;
  _2123 = _2042 * _2106;
  _2124 = (sizetype) _2123;
  _2125 = _2120 + _2124;
  _2126 = pix_base_2110 + _2125;
  _2127 = m_505(D)->p_fenc[0];
  _2111 (_2127, _2126, _2122, _2119, _2116, _2106, &costs);
  _2129 = costs[0];
  bmx_2130 = bmx_80 + _1987;
  _2131 = bmx_2130 << 2;
  _2132 = (long unsigned int) _2131;
  _2133 = _2132 * 2;
  _2134 = p_cost_mvx_522 + _2133;
  _2135 = *_2134;
  _2136 = (int) _2135;
  _2137 = *_2083;
  _2138 = (int) _2137;
  _2139 = _2136 + _2138;
  bcost_2140 = _2129 + _2139;
  costs[0] = bcost_2140;
  _2142 = costs[1];
  bmy_2143 = bmy_196 + _2112;
  _2144 = bmy_2143 << 2;
  _2145 = (long unsigned int) _2144;
  _2146 = _2145 * 2;
  _2147 = p_cost_mvy_528 + _2146;
  _2148 = *_2147;
  _2149 = (int) _2148;
  _2150 = _2136 + _2149;
  bcost_2151 = _2142 + _2150;
  costs[1] = bcost_2151;
  _2153 = costs[2];
  _2154 = *_2093;
  _2155 = (int) _2154;
  bmy_2156 = bmy_196 + _1906;
  _2157 = bmy_2156 << 2;
  _2158 = (long unsigned int) _2157;
  _2159 = _2158 * 2;
  _2160 = p_cost_mvy_528 + _2159;
  _2161 = *_2160;
  _2162 = (int) _2161;
  _2163 = _2155 + _2162;
  bcost_2164 = _2153 + _2163;
  costs[2] = bcost_2164;
  _2166 = costs[3];
  _2167 = *_2076;
  _2168 = (int) _2167;
  _2169 = _2149 + _2168;
  bcost_2170 = _2166 + _2169;
  costs[3] = bcost_2170;
  if (bcost_336 > bcost_2140)
    goto <bb 345>;
  else
    goto <bb 344>;

  <bb 344>:

  <bb 345>:
  # bmx_96 = PHI <bmx_95(344), bmx_2130(343)>
  # bmy_212 = PHI <bmy_211(344), bmy_2079(343)>
  # bcost_337 = PHI <bcost_336(344), bcost_2140(343)>
  # DEBUG bcost => bcost_337
  # DEBUG bmy => bmy_212
  # DEBUG bmx => bmx_96
  if (bcost_337 > bcost_2151)
    goto <bb 347>;
  else
    goto <bb 346>;

  <bb 346>:

  <bb 347>:
  # bmx_97 = PHI <bmx_96(346), bmx_2130(345)>
  # bmy_213 = PHI <bmy_212(346), bmy_2143(345)>
  # bcost_338 = PHI <bcost_337(346), bcost_2151(345)>
  # DEBUG bcost => bcost_338
  # DEBUG bmy => bmy_213
  # DEBUG bmx => bmx_97
  if (bcost_338 > bcost_2164)
    goto <bb 349>;
  else
    goto <bb 348>;

  <bb 348>:

  <bb 349>:
  # bmx_98 = PHI <bmx_97(348), bmx_80(347)>
  # bmy_214 = PHI <bmy_213(348), bmy_2156(347)>
  # bcost_339 = PHI <bcost_338(348), bcost_2164(347)>
  # DEBUG bcost => bcost_339
  # DEBUG bmy => bmy_214
  # DEBUG bmx => bmx_98
  if (bcost_339 > bcost_2170)
    goto <bb 351>;
  else
    goto <bb 350>;

  <bb 350>:

  <bb 351>:
  # bmx_99 = PHI <bmx_4146(317), bmx_98(350), bmx_2072(349)>
  # bmy_215 = PHI <bmy_4127(317), bmy_214(350), bmy_2143(349)>
  # bcost_340 = PHI <bcost_4104(317), bcost_339(350), bcost_2170(349)>
  # DEBUG bcost => bcost_340
  # DEBUG bmy => bmy_215
  # DEBUG bmx => bmx_99
  i_2172 = i_380 + 1;
  # DEBUG i => i_2172
  if (i_2172 <= pretmp_4438)
    goto <bb 352>;
  else
    goto <bb 353>;

  <bb 352>:
  goto <bb 310>;

  <bb 353>:
  # bmx_4145 = PHI <bmx_99(351)>
  # bmy_4126 = PHI <bmy_215(351)>
  # bcost_4103 = PHI <bcost_340(351)>
  if (bmy_4126 <= mv_y_max_516)
    goto <bb 354>;
  else
    goto <bb 454> (<L445>);

  <bb 354>:
  pretmp_4461 = (sizetype) bmx_4145;
  pretmp_4465 = bmx_4145 + -2;
  pretmp_4469 = pretmp_4465 << 2;
  pretmp_4473 = (long unsigned int) pretmp_4469;
  pretmp_4477 = pretmp_4473 * 2;
  pretmp_4481 = bmy_4126 << 2;
  pretmp_4485 = (long unsigned int) pretmp_4481;
  pretmp_4489 = pretmp_4485 * 2;
  pretmp_4493 = bmx_4145 + -1;
  pretmp_4497 = pretmp_4493 << 2;
  pretmp_4501 = (long unsigned int) pretmp_4497;
  pretmp_4505 = pretmp_4501 * 2;
  pretmp_4509 = bmy_4126 + 2;
  pretmp_4513 = pretmp_4509 << 2;
  pretmp_4517 = (long unsigned int) pretmp_4513;
  pretmp_4521 = pretmp_4517 * 2;
  pretmp_4525 = bmx_4145 + 1;
  pretmp_4529 = pretmp_4525 << 2;
  pretmp_4533 = (long unsigned int) pretmp_4529;
  pretmp_4537 = pretmp_4533 * 2;
  pretmp_4541 = bmx_4145 + 2;
  pretmp_4545 = pretmp_4541 << 2;
  pretmp_4549 = (long unsigned int) pretmp_4545;
  pretmp_4553 = pretmp_4549 * 2;
  pretmp_4557 = bmy_4126 + -2;
  pretmp_4561 = pretmp_4557 << 2;
  pretmp_4565 = (long unsigned int) pretmp_4561;
  pretmp_4569 = pretmp_4565 * 2;
  goto <bb 61> (me_hex2);

<L342>:
  _2508 = bmx_7 - i_me_range_511;
  min_x_2509 = MAX_EXPR <bmx_513, _2508>;
  # DEBUG min_x => min_x_2509
  _2510 = bmy_116 - i_me_range_511;
  bmy_2511 = MAX_EXPR <bmy_514, _2510>;
  # DEBUG min_y => bmy_2511
  _2512 = bmx_7 + i_me_range_511;
  max_x_2513 = MIN_EXPR <mv_x_max_515, _2512>;
  # DEBUG max_x => max_x_2513
  _2514 = bmy_116 + i_me_range_511;
  max_y_2515 = MIN_EXPR <mv_y_max_516, _2514>;
  # DEBUG max_y => max_y_2515
  _2516 = max_x_2513 - min_x_2509;
  _2517 = _2516 + 3;
  width_2518 = _2517 & -4;
  # DEBUG width => width_2518
  stride_2519 = m_505(D)->i_stride[0];
  # DEBUG stride => stride_2519
  sums_base_2520 = m_505(D)->integral;
  # DEBUG sums_base => sums_base_2520
  if (_506 <= 3)
    goto <bb 356>;
  else
    goto <bb 357>;

  <bb 356>:

  <bb 357>:
  # sad_size_442 = PHI <3(356), 6(355)>
  # prephitmp_4249 = PHI <8(356), 4(355)>
  # prephitmp_4250 = PHI <8(356), 4(355)>
  # prephitmp_4252 = PHI <128(356), 64(355)>
  # prephitmp_4253 = PHI <136(356), 68(355)>
  # DEBUG sad_size => sad_size_442
  # DEBUG D#9 => x264_pixel_size[sad_size_442].w
  # DEBUG delta => D#9
  if (width_2518 <= 64)
    goto <bb 359>;
  else
    goto <bb 358>;

  <bb 358>:
  _2522 = width_2518 + 15;
  _2523 = (unsigned int) _2522;
  _2524 = _2523 * 2;
  _2525 = (int) _2524;
  xs_2527 = x264_malloc (_2525);

  <bb 359>:
  # xs_443 = PHI <&xs_buf(357), xs_2527(358)>
  # DEBUG xs => xs_443
  _2528 = h_510(D)->mb.i_qp;
  _2529 = m_505(D)->mvp[0];
  _2530 = (int) _2529;
  _2531 = -_2530;
  _2532 = _2531 & 3;
  _2533 = x264_cost_mv_fpel[_2528][_2532];
  _2534 = _2531 >> 2;
  _2535 = (long unsigned int) _2534;
  _2536 = _2535 * 2;
  cost_fpel_mvx_2537 = _2533 + _2536;
  # DEBUG cost_fpel_mvx => cost_fpel_mvx_2537
  _2538 = h_510(D)->pixf.sad_x4[sad_size_442];
  _2539 = m_505(D)->p_fenc[0];
  _2544 = _2539 + prephitmp_4253;
  _2545 = _2539 + prephitmp_4252;
  _2546 = _2539 + prephitmp_4250;
  _2538 (&zero, _2539, _2546, _2545, _2544, 16, &enc_dc);
  if (prephitmp_4249 == 4)
    goto <bb 360>;
  else
    goto <bb 361>;

  <bb 360>:
  _2548 = h_510(D)->fenc;
  _2549 = _2548->i_lines[0];
  _2550 = _2549 + 64;
  _2551 = stride_2519 * _2550;
  _2552 = (long unsigned int) _2551;
  _2553 = _2552 * 2;
  sums_base_2554 = sums_base_2520 + _2553;
  # DEBUG sums_base => sums_base_2554

  <bb 361>:
  # sums_base_412 = PHI <sums_base_2520(359), sums_base_2554(360)>
  # DEBUG sums_base => sums_base_412
  _2996 = _506 & -3;
  _2972 = _2996 == 0;
  _2556 = _506 == 2;
  _686 = _506 == 5;
  _685 = _686 | _2972;
  if (_685 != 0)
    goto <bb 362>;
  else
    goto <bb 363>;

  <bb 362>:
  delta_2558 = stride_2519 * prephitmp_4249;
  # DEBUG delta => delta_2558

  <bb 363>:
  # delta_413 = PHI <prephitmp_4249(361), delta_2558(362)>
  # DEBUG delta => delta_413
  _2560 = _686 | _2556;
  if (_2560 != 0)
    goto <bb 364>;
  else
    goto <bb 365>;

  <bb 364>:
  _2561 = enc_dc[2];
  enc_dc[1] = _2561;

  <bb 365>:
  _2563 = h_510(D)->mb.i_me_method;
  if (_2563 == 4)
    goto <bb 367>;
  else
    goto <bb 366>;

  <bb 366>:
  # DEBUG my => bmy_2511
  # DEBUG bcost => bcost_232
  # DEBUG bmy => bmy_116
  # DEBUG bmx => bmx_7
  if (bmy_2511 <= max_y_2515)
    goto <bb 428>;
  else
    goto <bb 451>;

  <bb 367>:
  _2564 = max_y_2515 - bmy_2511;
  _2565 = _2564 + 1;
  _2566 = width_2518 * _2565;
  _2567 = (unsigned int) _2566;
  _2568 = _2567 * 8;
  _2569 = (int) _2568;
  mvsads_2571 = x264_malloc (_2569);
  # DEBUG mvsads => mvsads_2571
  # DEBUG nmvsad => 0
  if (i_me_range_511 > 16)
    goto <bb 368>;
  else
    goto <bb 370>;

  <bb 368>:
  if (i_me_range_511 <= 24)
    goto <bb 369>;
  else
    goto <bb 370>;

  <bb 369>:

  <bb 370>:
  # sad_thresh_444 = PHI <12(368), 10(367), 11(369)>
  # DEBUG sad_thresh => sad_thresh_444
  _2572 = h_510(D)->pixf.sad[_506];
  _2573 = bmy_116 * stride_2519;
  _2574 = (sizetype) _2573;
  _2575 = (sizetype) bmx_7;
  _2576 = _2574 + _2575;
  _2577 = p_fref_512 + _2576;
  _2578 = m_505(D)->p_fenc[0];
  _2580 = _2572 (_2578, 16, _2577, stride_2519);
  _2581 = bmx_7 << 2;
  _2582 = (long unsigned int) _2581;
  _2583 = _2582 * 2;
  _2584 = p_cost_mvx_522 + _2583;
  _2585 = *_2584;
  _2586 = (int) _2585;
  _2587 = bmy_116 << 2;
  _2588 = (long unsigned int) _2587;
  _2589 = _2588 * 2;
  _2590 = p_cost_mvy_528 + _2589;
  _2591 = *_2590;
  _2592 = (int) _2591;
  _2593 = _2586 + _2592;
  bsad_2594 = _2580 + _2593;
  # DEBUG bsad => bsad_2594
  # DEBUG my => bmy_2511
  # DEBUG bsad => bsad_2594
  # DEBUG nmvsad => 0
  # DEBUG my => bmy_2511
  if (bmy_2511 <= max_y_2515)
    goto <bb 371>;
  else
    goto <bb 394>;

  <bb 371>:
  _2605 = (long unsigned int) min_x_2509;
  _2606 = _2605 * 2;
  _2607 = cost_fpel_mvx_2537 + _2606;

  <bb 372>:
  # bmy_3570 = PHI <bmy_2511(371), bmy_2702(393)>
  # nmvsad_3574 = PHI <0(371), nmvsad_419(393)>
  # bsad_3568 = PHI <bsad_2594(371), bsad_430(393)>
  # DEBUG bsad => bsad_3568
  # DEBUG nmvsad => nmvsad_3574
  # DEBUG my => bmy_3570
  _2595 = bmy_3570 << 2;
  _2596 = (long unsigned int) _2595;
  _2597 = _2596 * 2;
  _2598 = p_cost_mvy_528 + _2597;
  _2599 = *_2598;
  ycost_2600 = (int) _2599;
  # DEBUG ycost => ycost_2600
  if (ycost_2600 >= bsad_3568)
    goto <bb 391>;
  else
    goto <bb 373>;

  <bb 373>:
  bsad_2601 = bsad_3568 - ycost_2600;
  # DEBUG bsad => bsad_2601
  _2602 = h_510(D)->pixf.ads[_506];
  _2603 = bsad_2601 * 17;
  _2604 = _2603 / 16;
  _2608 = stride_2519 * bmy_3570;
  _2609 = (sizetype) _2608;
  _2610 = _2605 + _2609;
  _2611 = _2610 * 2;
  _2612 = sums_base_412 + _2611;
  xn_2614 = _2602 (&enc_dc, _2612, delta_413, _2607, xs_443, width_2518, _2604);
  # DEBUG xn => xn_2614
  # DEBUG i => 0
  # DEBUG bsad => bsad_2601
  # DEBUG nmvsad => nmvsad_3574
  # DEBUG i => 0
  _3672 = xn_2614 + -2;
  if (_3672 > 0)
    goto <bb 374>;
  else
    goto <bb 383>;

  <bb 374>:
  pretmp_4275 = p_fref_512 + _2610;

  <bb 375>:
  # i_3583 = PHI <0(374), i_2667(382)>
  # nmvsad_3209 = PHI <nmvsad_3574(374), nmvsad_4094(382)>
  # bsad_3572 = PHI <bsad_2601(374), bsad_4090(382)>
  # DEBUG bsad => bsad_3572
  # DEBUG nmvsad => nmvsad_3209
  # DEBUG i => i_3583
  # DEBUG ref => p_fref_512 + _2610
  _2617 = h_510(D)->pixf.sad_x3[_506];
  _2618 = (sizetype) i_3583;
  _2619 = _2618 + 2;
  _2620 = _2619 * 2;
  _2621 = xs_443 + _2620;
  _2622 = *_2621;
  _2623 = (sizetype) _2622;
  _2624 = pretmp_4275 + _2623;
  _2625 = _2618 + 1;
  _2626 = _2625 * 2;
  _2627 = xs_443 + _2626;
  _2628 = *_2627;
  _2629 = (sizetype) _2628;
  _2630 = pretmp_4275 + _2629;
  _2631 = _2618 * 2;
  _2632 = xs_443 + _2631;
  _2633 = *_2632;
  _2634 = (sizetype) _2633;
  _2635 = pretmp_4275 + _2634;
  _2636 = m_505(D)->p_fenc[0];
  _2617 (_2636, _2635, _2630, _2624, stride_2519, &sads);
  # DEBUG j => 0
  # DEBUG bsad => bsad_3572
  # DEBUG nmvsad => nmvsad_3209
  # DEBUG j => 0

  <bb 376>:
  # j_3687 = PHI <j_2665(379), 0(375)>
  # nmvsad_3685 = PHI <nmvsad_414(379), nmvsad_3209(375)>
  # bsad_3241 = PHI <bsad_424(379), bsad_3572(375)>
  # ivtmp_4204 = PHI <ivtmp_4199(379), 3(375)>
  # DEBUG bsad => bsad_3241
  # DEBUG nmvsad => nmvsad_3685
  # DEBUG j => j_3687
  _2638 = sads[j_3687];
  _2639 = i_3583 + j_3687;
  _2640 = (long unsigned int) _2639;
  _2641 = _2640 * 2;
  _2642 = xs_443 + _2641;
  _2643 = *_2642;
  _2644 = (long unsigned int) _2643;
  _2645 = _2644 * 2;
  _2646 = cost_fpel_mvx_2537 + _2645;
  _2647 = *_2646;
  _2648 = (int) _2647;
  bsad_2649 = _2638 + _2648;
  # DEBUG sad => bsad_2649
  _2650 = sad_thresh_444 * bsad_3241;
  _2651 = _2650 >> 3;
  if (bsad_2649 < _2651)
    goto <bb 377>;
  else
    goto <bb 378>;

  <bb 377>:
  bsad_3306 = MIN_EXPR <bsad_2649, bsad_3241>;
  # DEBUG bsad => bsad_3306
  _2652 = (long unsigned int) nmvsad_3685;
  _2653 = _2652 * 8;
  _2654 = mvsads_2571 + _2653;
  _2655 = ycost_2600 + bsad_2649;
  _2654->sad = _2655;
  _2657 = (unsigned short) _2643;
  _2658 = (unsigned short) min_x_2509;
  _2659 = _2657 + _2658;
  _2660 = (short int) _2659;
  _2654->mx = _2660;
  _2662 = (short int) bmy_3570;
  _2654->my = _2662;
  nmvsad_2664 = nmvsad_3685 + 1;
  # DEBUG nmvsad => nmvsad_2664

  <bb 378>:
  # nmvsad_414 = PHI <nmvsad_3685(376), nmvsad_2664(377)>
  # bsad_424 = PHI <bsad_3241(376), bsad_3306(377)>
  # DEBUG bsad => bsad_424
  # DEBUG nmvsad => nmvsad_414
  j_2665 = j_3687 + 1;
  # DEBUG j => j_2665
  # DEBUG bsad => bsad_424
  # DEBUG nmvsad => nmvsad_414
  # DEBUG j => j_2665
  ivtmp_4199 = ivtmp_4204 - 1;
  if (ivtmp_4199 != 0)
    goto <bb 379>;
  else
    goto <bb 380>;

  <bb 379>:
  goto <bb 376>;

  <bb 380>:
  # nmvsad_4094 = PHI <nmvsad_414(378)>
  # bsad_4090 = PHI <bsad_424(378)>
  sads ={v} {CLOBBER};
  i_2667 = i_3583 + 3;
  # DEBUG i => i_2667
  # DEBUG bsad => bsad_4090
  # DEBUG nmvsad => nmvsad_4094
  # DEBUG i => i_2667
  if (i_2667 < _3672)
    goto <bb 382>;
  else
    goto <bb 381>;

  <bb 381>:
  # nmvsad_4093 = PHI <nmvsad_4094(380)>
  # bsad_4089 = PHI <bsad_4090(380)>
  # i_4074 = PHI <i_2667(380)>
  goto <bb 383>;

  <bb 382>:
  goto <bb 375>;

  <bb 383>:
  # i_625 = PHI <i_4074(381), 0(373)>
  # nmvsad_624 = PHI <nmvsad_4093(381), nmvsad_3574(373)>
  # bsad_2981 = PHI <bsad_4089(381), bsad_2601(373)>
  # DEBUG bsad => bsad_2981
  # DEBUG nmvsad => nmvsad_624
  # DEBUG i => i_625
  if (i_625 < xn_2614)
    goto <bb 384>;
  else
    goto <bb 390>;

  <bb 384>:

  <bb 385>:
  # i_3212 = PHI <i_625(384), i_2700(389)>
  # nmvsad_3576 = PHI <nmvsad_624(384), nmvsad_417(389)>
  # bsad_3571 = PHI <bsad_2981(384), bsad_428(389)>
  # DEBUG bsad => bsad_3571
  # DEBUG nmvsad => nmvsad_3576
  # DEBUG i => i_3212
  _2668 = (long unsigned int) i_3212;
  _2669 = _2668 * 2;
  _2670 = xs_443 + _2669;
  _2671 = *_2670;
  _2672 = (int) _2671;
  mx_2673 = min_x_2509 + _2672;
  # DEBUG mx => mx_2673
  _2674 = h_510(D)->pixf.sad[_506];
  _2675 = (sizetype) mx_2673;
  _2676 = _2609 + _2675;
  _2677 = p_fref_512 + _2676;
  _2678 = m_505(D)->p_fenc[0];
  _2680 = _2674 (_2678, 16, _2677, stride_2519);
  _2681 = *_2670;
  _2682 = (long unsigned int) _2681;
  _2683 = _2682 * 2;
  _2684 = cost_fpel_mvx_2537 + _2683;
  _2685 = *_2684;
  _2686 = (int) _2685;
  bsad_2687 = _2680 + _2686;
  # DEBUG sad => bsad_2687
  _2688 = sad_thresh_444 * bsad_3571;
  _2689 = _2688 >> 3;
  if (bsad_2687 < _2689)
    goto <bb 386>;
  else
    goto <bb 387>;

  <bb 386>:
  bsad_684 = MIN_EXPR <bsad_2687, bsad_3571>;
  # DEBUG bsad => bsad_684
  _2690 = (long unsigned int) nmvsad_3576;
  _2691 = _2690 * 8;
  _2692 = mvsads_2571 + _2691;
  _2693 = ycost_2600 + bsad_2687;
  _2692->sad = _2693;
  _2695 = (short int) mx_2673;
  _2692->mx = _2695;
  _2697 = (short int) bmy_3570;
  _2692->my = _2697;
  nmvsad_2699 = nmvsad_3576 + 1;
  # DEBUG nmvsad => nmvsad_2699

  <bb 387>:
  # nmvsad_417 = PHI <nmvsad_3576(385), nmvsad_2699(386)>
  # bsad_428 = PHI <bsad_3571(385), bsad_684(386)>
  # DEBUG bsad => bsad_428
  # DEBUG nmvsad => nmvsad_417
  i_2700 = i_3212 + 1;
  # DEBUG i => i_2700
  # DEBUG bsad => bsad_428
  # DEBUG nmvsad => nmvsad_417
  # DEBUG i => i_2700
  if (xn_2614 > i_2700)
    goto <bb 389>;
  else
    goto <bb 388>;

  <bb 388>:
  # nmvsad_4092 = PHI <nmvsad_417(387)>
  # bsad_4088 = PHI <bsad_428(387)>
  goto <bb 390>;

  <bb 389>:
  goto <bb 385>;

  <bb 390>:
  # nmvsad_3210 = PHI <nmvsad_4092(388), nmvsad_624(383)>
  # bsad_3282 = PHI <bsad_4088(388), bsad_2981(383)>
  bsad_2701 = ycost_2600 + bsad_3282;
  # DEBUG bsad => bsad_2701

  <bb 391>:
  # nmvsad_419 = PHI <nmvsad_3574(372), nmvsad_3210(390)>
  # bsad_430 = PHI <bsad_3568(372), bsad_2701(390)>
  # DEBUG bsad => bsad_430
  # DEBUG nmvsad => nmvsad_419
  bmy_2702 = bmy_3570 + 1;
  # DEBUG my => bmy_2702
  # DEBUG bsad => bsad_430
  # DEBUG nmvsad => nmvsad_419
  # DEBUG my => bmy_2702
  if (max_y_2515 >= bmy_2702)
    goto <bb 393>;
  else
    goto <bb 392>;

  <bb 392>:
  # nmvsad_4091 = PHI <nmvsad_419(391)>
  # bsad_4087 = PHI <bsad_430(391)>
  goto <bb 394>;

  <bb 393>:
  goto <bb 372>;

  <bb 394>:
  # nmvsad_3573 = PHI <nmvsad_4091(392), 0(370)>
  # bsad_3205 = PHI <bsad_4087(392), bsad_2594(370)>
  nmvsad_2703 = i_me_range_511 / 2;
  # DEBUG limit => nmvsad_2703
  _2704 = nmvsad_2703 * 2;
  if (_2704 < nmvsad_3573)
    goto <bb 395>;
  else
    goto <bb 408>;

  <bb 395>:
  _2705 = sad_thresh_444 + 8;
  _2706 = _2705 * bsad_3205;
  bsad_2707 = _2706 >> 4;
  # DEBUG bsad => bsad_2707
  # DEBUG i => 0
  # DEBUG i => 0
  if (nmvsad_3573 > 0)
    goto <bb 396>;
  else
    goto <bb 472>;

  <bb 396>:
  _3709 = mvsads_2571->sad;
  if (bsad_2707 >= _3709)
    goto <bb 397>;
  else
    goto <bb 471>;

  <bb 397>:

  <bb 398>:
  # nmvsad_3579 = PHI <0(397), nmvsad_2712(401)>
  # DEBUG i => nmvsad_3579
  nmvsad_2712 = nmvsad_3579 + 1;
  # DEBUG i => nmvsad_2712
  # DEBUG i => nmvsad_2712
  if (nmvsad_2712 < nmvsad_3573)
    goto <bb 400>;
  else
    goto <bb 399>;

  <bb 399>:
  # nmvsad_4071 = PHI <nmvsad_2712(398)>
  goto <bb 472>;

  <bb 400>:
  _2708 = (long unsigned int) nmvsad_2712;
  _2709 = _2708 * 8;
  _2710 = mvsads_2571 + _2709;
  _2711 = _2710->sad;
  if (bsad_2707 >= _2711)
    goto <bb 401>;
  else
    goto <bb 402>;

  <bb 401>:
  goto <bb 398>;

  <bb 402>:
  # nmvsad_4072 = PHI <nmvsad_2712(400)>
  goto <bb 471>;

  <bb 403>:

  <bb 404>:
  # nmvsad_3207 = PHI <nmvsad_309(471), nmvsad_384(403)>
  # nmvsad_3578 = PHI <nmvsad_309(471), nmvsad_2723(403)>
  # DEBUG j => nmvsad_3578
  # DEBUG i => nmvsad_3207
  _2713 = (long unsigned int) nmvsad_3578;
  _2714 = _2713 * 8;
  _2715 = mvsads_2571 + _2714;
  _2716 = _2715->sad;
  if (bsad_2707 >= _2716)
    goto <bb 405>;
  else
    goto <bb 406>;

  <bb 405>:
  nmvsad_2717 = nmvsad_3207 + 1;
  # DEBUG i => nmvsad_2717
  _2718 = (long unsigned int) nmvsad_3207;
  _2719 = _2718 * 8;
  _2720 = mvsads_2571 + _2719;
  _2721 = MEM[(uint64_t *)_2715];
  *_2720 = _2721;

  <bb 406>:
  # nmvsad_384 = PHI <nmvsad_3207(404), nmvsad_2717(405)>
  # DEBUG i => nmvsad_384
  nmvsad_2723 = nmvsad_3578 + 1;
  # DEBUG j => nmvsad_2723
  # DEBUG j => nmvsad_2723
  # DEBUG i => nmvsad_384
  if (nmvsad_2723 < nmvsad_3573)
    goto <bb 403>;
  else
    goto <bb 407>;

  <bb 407>:
  # nmvsad_4095 = PHI <nmvsad_384(406)>

  <bb 408>:
  # nmvsad_421 = PHI <nmvsad_3573(394), nmvsad_4095(407), nmvsad_3696(472)>
  # DEBUG nmvsad => nmvsad_421
  if (nmvsad_421 > nmvsad_2703)
    goto <bb 409>;
  else
    goto <bb 420>;

  <bb 409>:
  # DEBUG i => 0
  if (nmvsad_2703 > 0)
    goto <bb 410>;
  else
    goto <bb 427>;

  <bb 410>:

  <bb 411>:
  # bj_3580 = PHI <0(410), bj_2728(419)>
  # DEBUG i => bj_3580
  # DEBUG bj => bj_3580
  _2724 = (long unsigned int) bj_3580;
  _2725 = _2724 * 8;
  _2726 = mvsads_2571 + _2725;
  bsad_2727 = _2726->sad;
  # DEBUG bsad => bsad_2727
  bj_2728 = bj_3580 + 1;
  # DEBUG j => bj_2728
  # DEBUG bsad => bsad_2727
  # DEBUG bj => bj_3580
  # DEBUG j => bj_2728
  if (nmvsad_421 > bj_2728)
    goto <bb 412>;
  else
    goto <bb 417>;

  <bb 412>:

  <bb 413>:
  # bj_3577 = PHI <bj_2728(412), bj_2733(414)>
  # bj_3569 = PHI <bj_3580(412), bj_432(414)>
  # bsad_3566 = PHI <bsad_2727(412), bsad_434(414)>
  # DEBUG bsad => NULL
  # DEBUG bj => NULL
  # DEBUG j => NULL
  _2729 = (long unsigned int) bj_3577;
  _2730 = _2729 * 8;
  _2731 = mvsads_2571 + _2730;
  bsad_2732 = _2731->sad;
  bj_432 = bsad_2732 < bsad_3566 ? bj_3577 : bj_3569;
  bsad_434 = MIN_EXPR <bsad_2732, bsad_3566>;
  # DEBUG bsad => bsad_434
  # DEBUG bj => bj_432
  bj_2733 = bj_3577 + 1;
  # DEBUG j => bj_2733
  # DEBUG bsad => bsad_434
  # DEBUG bj => bj_432
  # DEBUG j => bj_2733
  if (nmvsad_421 > bj_2733)
    goto <bb 414>;
  else
    goto <bb 415>;

  <bb 414>:
  goto <bb 413>;

  <bb 415>:
  # bj_4086 = PHI <bj_432(413)>
  if (bj_4086 > bj_3580)
    goto <bb 416>;
  else
    goto <bb 417>;

  <bb 416>:
  t_2734 = MEM[(uint64_t *)_2726];
  # DEBUG t => t_2734
  _2735 = (long unsigned int) bj_4086;
  _2736 = _2735 * 8;
  _2737 = mvsads_2571 + _2736;
  _2738 = *_2737;
  MEM[(uint64_t *)_2726] = _2738;
  *_2737 = t_2734;

  <bb 417>:
  # DEBUG i => bj_2728
  if (nmvsad_2703 > bj_2728)
    goto <bb 419>;
  else
    goto <bb 418>;

  <bb 418>:
  goto <bb 421>;

  <bb 419>:
  goto <bb 411>;

  <bb 420>:
  # DEBUG nmvsad => nmvsad_421
  # DEBUG i => 0
  # DEBUG i => 0
  # DEBUG bcost => bcost_232
  # DEBUG bmy => bmy_116
  # DEBUG bmx => bmx_7
  if (nmvsad_421 > 0)
    goto <bb 421>;
  else
    goto <bb 427>;

  <bb 421>:
  # nmvsad_3246 = PHI <nmvsad_421(420), nmvsad_2703(418)>
  # DEBUG nmvsad => nmvsad_3246
  # DEBUG i => 0
  # DEBUG bcost => bcost_232
  # DEBUG bmy => bmy_116
  # DEBUG bmx => bmx_7

  <bb 422>:
  # bmx_3618 = PHI <bmx_7(421), bmx_100(426)>
  # bmy_3232 = PHI <bmy_116(421), bmy_216(426)>
  # bcost_3595 = PHI <bcost_232(421), bcost_341(426)>
  # i_3208 = PHI <0(421), i_2775(426)>
  # DEBUG i => i_3208
  # DEBUG bcost => bcost_3595
  # DEBUG bmy => bmy_3232
  # DEBUG bmx => bmx_3618
  _2741 = h_510(D)->pixf.fpelcmp[_506];
  _2742 = (long unsigned int) i_3208;
  _2743 = _2742 * 8;
  _2744 = mvsads_2571 + _2743;
  _2745 = _2744->my;
  _2746 = (int) _2745;
  _2747 = m_505(D)->i_stride[0];
  _2748 = _2746 * _2747;
  _2749 = _2744->mx;
  _2750 = (int) _2749;
  _2751 = _2748 + _2750;
  _2752 = (sizetype) _2751;
  _2753 = p_fref_512 + _2752;
  _2754 = m_505(D)->p_fenc[0];
  _2756 = _2741 (_2754, 16, _2753, _2747);
  _2757 = _2744->mx;
  bmx_2758 = (int) _2757;
  _2759 = bmx_2758 << 2;
  _2760 = (long unsigned int) _2759;
  _2761 = _2760 * 2;
  _2762 = p_cost_mvx_522 + _2761;
  _2763 = *_2762;
  _2764 = (int) _2763;
  _2765 = _2744->my;
  bmy_2766 = (int) _2765;
  _2767 = bmy_2766 << 2;
  _2768 = (long unsigned int) _2767;
  _2769 = _2768 * 2;
  _2770 = p_cost_mvy_528 + _2769;
  _2771 = *_2770;
  _2772 = (int) _2771;
  _2773 = _2764 + _2772;
  bcost_2774 = _2756 + _2773;
  # DEBUG cost => bcost_2774
  if (bcost_2774 < bcost_3595)
    goto <bb 424>;
  else
    goto <bb 423>;

  <bb 423>:

  <bb 424>:
  # bmx_100 = PHI <bmx_3618(423), bmx_2758(422)>
  # bmy_216 = PHI <bmy_3232(423), bmy_2766(422)>
  # bcost_341 = PHI <bcost_3595(423), bcost_2774(422)>
  # DEBUG bcost => bcost_341
  # DEBUG bmy => bmy_216
  # DEBUG bmx => bmx_100
  i_2775 = i_3208 + 1;
  # DEBUG i => i_2775
  # DEBUG i => i_2775
  # DEBUG bcost => bcost_341
  # DEBUG bmy => bmy_216
  # DEBUG bmx => bmx_100
  if (i_2775 < nmvsad_3246)
    goto <bb 426>;
  else
    goto <bb 425>;

  <bb 425>:
  # bmx_4144 = PHI <bmx_100(424)>
  # bmy_4125 = PHI <bmy_216(424)>
  # bcost_4102 = PHI <bcost_341(424)>
  goto <bb 427>;

  <bb 426>:
  goto <bb 422>;

  <bb 427>:
  # bmx_3616 = PHI <bmx_4144(425), bmx_7(420), bmx_7(409)>
  # bmy_3605 = PHI <bmy_4125(425), bmy_116(420), bmy_116(409)>
  # bcost_3221 = PHI <bcost_4102(425), bcost_232(420), bcost_232(409)>
  x264_free (mvsads_2571);
  goto <bb 451>;

  <bb 428>:
  _2785 = (long unsigned int) min_x_2509;
  _2786 = _2785 * 2;
  _2787 = cost_fpel_mvx_2537 + _2786;

  <bb 429>:
  # bmx_3614 = PHI <bmx_7(428), bmx_108(450)>
  # bmy_3601 = PHI <bmy_116(428), bmy_224(450)>
  # bcost_3219 = PHI <bcost_232(428), bcost_349(450)>
  # bmy_3575 = PHI <bmy_2511(428), bmy_2896(450)>
  # DEBUG my => bmy_3575
  # DEBUG bcost => bcost_3219
  # DEBUG bmy => bmy_3601
  # DEBUG bmx => bmx_3614
  _2777 = bmy_3575 << 2;
  _2778 = (long unsigned int) _2777;
  _2779 = _2778 * 2;
  _2780 = p_cost_mvy_528 + _2779;
  _2781 = *_2780;
  ycost_2782 = (int) _2781;
  # DEBUG ycost => ycost_2782
  if (ycost_2782 >= bcost_3219)
    goto <bb 448>;
  else
    goto <bb 430>;

  <bb 430>:
  bcost_2783 = bcost_3219 - ycost_2782;
  # DEBUG bcost => bcost_2783
  _2784 = h_510(D)->pixf.ads[_506];
  _2788 = stride_2519 * bmy_3575;
  _2789 = (sizetype) _2788;
  _2790 = _2785 + _2789;
  _2791 = _2790 * 2;
  _2792 = sums_base_412 + _2791;
  xn_2794 = _2784 (&enc_dc, _2792, delta_413, _2787, xs_443, width_2518, bcost_2783);
  # DEBUG xn => xn_2794
  # DEBUG i => 0
  # DEBUG i => 0
  # DEBUG bcost => bcost_2783
  # DEBUG bmy => bmy_3601
  # DEBUG bmx => bmx_3614
  _3298 = xn_2794 + -2;
  if (_3298 > 0)
    goto <bb 431>;
  else
    goto <bb 441>;

  <bb 431>:

  <bb 432>:
  # bmx_3239 = PHI <bmx_3614(431), bmx_104(440)>
  # bmy_3229 = PHI <bmy_3601(431), bmy_220(440)>
  # bcost_3596 = PHI <bcost_2783(431), bcost_345(440)>
  # i_3587 = PHI <0(431), i_2865(440)>
  # DEBUG i => i_3587
  # DEBUG bcost => bcost_3596
  # DEBUG bmy => bmy_3229
  # DEBUG bmx => bmx_3239
  _2796 = h_510(D)->pixf.fpelcmp_x3[_506];
  _2797 = (sizetype) i_3587;
  _2798 = _2797 + 2;
  _2799 = _2798 * 2;
  _2800 = xs_443 + _2799;
  _2801 = *_2800;
  _2802 = (int) _2801;
  _2803 = min_x_2509 + _2802;
  _2804 = (sizetype) _2803;
  _2805 = m_505(D)->i_stride[0];
  _2806 = _2805 * bmy_3575;
  _2807 = (sizetype) _2806;
  _2808 = _2804 + _2807;
  _2809 = p_fref_512 + _2808;
  _2810 = _2797 + 1;
  _2811 = _2810 * 2;
  _2812 = xs_443 + _2811;
  _2813 = *_2812;
  _2814 = (int) _2813;
  _2815 = min_x_2509 + _2814;
  _2816 = (sizetype) _2815;
  _2817 = _2807 + _2816;
  _2818 = p_fref_512 + _2817;
  _2819 = _2797 * 2;
  _2820 = xs_443 + _2819;
  _2821 = *_2820;
  _2822 = (int) _2821;
  _2823 = min_x_2509 + _2822;
  _2824 = (sizetype) _2823;
  _2825 = _2807 + _2824;
  _2826 = p_fref_512 + _2825;
  _2827 = m_505(D)->p_fenc[0];
  _2796 (_2827, _2826, _2818, _2809, _2805, &costs);
  _2829 = costs[0];
  _2830 = *_2820;
  _2831 = (int) _2830;
  bmx_2832 = min_x_2509 + _2831;
  _2833 = bmx_2832 << 2;
  _2834 = (long unsigned int) _2833;
  _2835 = _2834 * 2;
  _2836 = p_cost_mvx_522 + _2835;
  _2837 = *_2836;
  _2838 = (int) _2837;
  bcost_2839 = _2829 + _2838;
  costs[0] = bcost_2839;
  _2841 = costs[1];
  _2842 = *_2812;
  _2843 = (int) _2842;
  bmx_2844 = min_x_2509 + _2843;
  _2845 = bmx_2844 << 2;
  _2846 = (long unsigned int) _2845;
  _2847 = _2846 * 2;
  _2848 = p_cost_mvx_522 + _2847;
  _2849 = *_2848;
  _2850 = (int) _2849;
  bcost_2851 = _2841 + _2850;
  costs[1] = bcost_2851;
  _2853 = costs[2];
  _2854 = *_2800;
  _2855 = (int) _2854;
  bmx_2856 = min_x_2509 + _2855;
  _2857 = bmx_2856 << 2;
  _2858 = (long unsigned int) _2857;
  _2859 = _2858 * 2;
  _2860 = p_cost_mvx_522 + _2859;
  _2861 = *_2860;
  _2862 = (int) _2861;
  bcost_2863 = _2853 + _2862;
  costs[2] = bcost_2863;
  if (bcost_2839 < bcost_3596)
    goto <bb 434>;
  else
    goto <bb 433>;

  <bb 433>:

  <bb 434>:
  # bmx_102 = PHI <bmx_3239(433), bmx_2832(432)>
  # bmy_218 = PHI <bmy_3229(433), bmy_3575(432)>
  # bcost_343 = PHI <bcost_3596(433), bcost_2839(432)>
  # DEBUG bcost => bcost_343
  # DEBUG bmy => bmy_218
  # DEBUG bmx => bmx_102
  if (bcost_343 > bcost_2851)
    goto <bb 436>;
  else
    goto <bb 435>;

  <bb 435>:

  <bb 436>:
  # bmx_103 = PHI <bmx_102(435), bmx_2844(434)>
  # bmy_219 = PHI <bmy_218(435), bmy_3575(434)>
  # bcost_344 = PHI <bcost_343(435), bcost_2851(434)>
  # DEBUG bcost => bcost_344
  # DEBUG bmy => bmy_219
  # DEBUG bmx => bmx_103
  if (bcost_344 > bcost_2863)
    goto <bb 438>;
  else
    goto <bb 437>;

  <bb 437>:

  <bb 438>:
  # bmx_104 = PHI <bmx_103(437), bmx_2856(436)>
  # bmy_220 = PHI <bmy_219(437), bmy_3575(436)>
  # bcost_345 = PHI <bcost_344(437), bcost_2863(436)>
  # DEBUG bcost => bcost_345
  # DEBUG bmy => bmy_220
  # DEBUG bmx => bmx_104
  i_2865 = i_3587 + 3;
  # DEBUG i => i_2865
  # DEBUG i => i_2865
  # DEBUG bcost => bcost_345
  # DEBUG bmy => bmy_220
  # DEBUG bmx => bmx_104
  if (i_2865 < _3298)
    goto <bb 440>;
  else
    goto <bb 439>;

  <bb 439>:
  # bmx_4143 = PHI <bmx_104(438)>
  # bmy_4124 = PHI <bmy_220(438)>
  # bcost_4101 = PHI <bcost_345(438)>
  # i_4070 = PHI <i_2865(438)>
  goto <bb 441>;

  <bb 440>:
  goto <bb 432>;

  <bb 441>:
  # bmx_3617 = PHI <bmx_4143(439), bmx_3614(430)>
  # bmy_3606 = PHI <bmy_4124(439), bmy_3601(430)>
  # bcost_3222 = PHI <bcost_4101(439), bcost_2783(430)>
  # i_3584 = PHI <i_4070(439), 0(430)>
  bcost_2866 = ycost_2782 + bcost_3222;
  # DEBUG bcost => bcost_2866
  # DEBUG i => i_3584
  # DEBUG bcost => bcost_2866
  # DEBUG bmy => bmy_3606
  # DEBUG bmx => bmx_3617
  if (xn_2794 > i_3584)
    goto <bb 442>;
  else
    goto <bb 448>;

  <bb 442>:

  <bb 443>:
  # bmx_3240 = PHI <bmx_3617(442), bmx_106(447)>
  # bmy_3230 = PHI <bmy_3606(442), bmy_222(447)>
  # bcost_3593 = PHI <bcost_2866(442), bcost_347(447)>
  # i_3581 = PHI <i_3584(442), i_2895(447)>
  # DEBUG i => i_3581
  # DEBUG bcost => bcost_3593
  # DEBUG bmy => bmy_3230
  # DEBUG bmx => bmx_3240
  _2867 = h_510(D)->pixf.fpelcmp[_506];
  _2868 = m_505(D)->i_stride[0];
  _2869 = _2868 * bmy_3575;
  _2870 = (long unsigned int) i_3581;
  _2871 = _2870 * 2;
  _2872 = xs_443 + _2871;
  _2873 = *_2872;
  _2874 = (int) _2873;
  _2875 = min_x_2509 + _2874;
  _2876 = _2869 + _2875;
  _2877 = (sizetype) _2876;
  _2878 = p_fref_512 + _2877;
  _2879 = m_505(D)->p_fenc[0];
  _2881 = _2867 (_2879, 16, _2878, _2868);
  _2882 = *_2872;
  _2883 = (int) _2882;
  bmx_2884 = min_x_2509 + _2883;
  _2885 = bmx_2884 << 2;
  _2886 = (long unsigned int) _2885;
  _2887 = _2886 * 2;
  _2888 = p_cost_mvx_522 + _2887;
  _2889 = *_2888;
  _2890 = (int) _2889;
  _2891 = *_2780;
  _2892 = (int) _2891;
  _2893 = _2890 + _2892;
  bcost_2894 = _2881 + _2893;
  # DEBUG cost => bcost_2894
  if (bcost_2894 < bcost_3593)
    goto <bb 445>;
  else
    goto <bb 444>;

  <bb 444>:

  <bb 445>:
  # bmx_106 = PHI <bmx_3240(444), bmx_2884(443)>
  # bmy_222 = PHI <bmy_3230(444), bmy_3575(443)>
  # bcost_347 = PHI <bcost_3593(444), bcost_2894(443)>
  # DEBUG bcost => bcost_347
  # DEBUG bmy => bmy_222
  # DEBUG bmx => bmx_106
  i_2895 = i_3581 + 1;
  # DEBUG i => i_2895
  # DEBUG i => i_2895
  # DEBUG bcost => bcost_347
  # DEBUG bmy => bmy_222
  # DEBUG bmx => bmx_106
  if (xn_2794 > i_2895)
    goto <bb 447>;
  else
    goto <bb 446>;

  <bb 446>:
  # bmx_4142 = PHI <bmx_106(445)>
  # bmy_4123 = PHI <bmy_222(445)>
  # bcost_4100 = PHI <bcost_347(445)>
  goto <bb 448>;

  <bb 447>:
  goto <bb 443>;

  <bb 448>:
  # bmx_108 = PHI <bmx_3614(429), bmx_4142(446), bmx_3617(441)>
  # bmy_224 = PHI <bmy_3601(429), bmy_4123(446), bmy_3606(441)>
  # bcost_349 = PHI <bcost_3219(429), bcost_4100(446), bcost_2866(441)>
  # DEBUG bcost => bcost_349
  # DEBUG bmy => bmy_224
  # DEBUG bmx => bmx_108
  bmy_2896 = bmy_3575 + 1;
  # DEBUG my => bmy_2896
  # DEBUG my => bmy_2896
  # DEBUG bcost => bcost_349
  # DEBUG bmy => bmy_224
  # DEBUG bmx => bmx_108
  if (max_y_2515 >= bmy_2896)
    goto <bb 450>;
  else
    goto <bb 449>;

  <bb 449>:
  # bmx_4141 = PHI <bmx_108(448)>
  # bmy_4122 = PHI <bmy_224(448)>
  # bcost_4099 = PHI <bcost_349(448)>
  goto <bb 451>;

  <bb 450>:
  goto <bb 429>;

  <bb 451>:
  # bmx_110 = PHI <bmx_3616(427), bmx_4141(449), bmx_7(366)>
  # bmy_226 = PHI <bmy_3605(427), bmy_4122(449), bmy_116(366)>
  # bcost_351 = PHI <bcost_3221(427), bcost_4099(449), bcost_232(366)>
  # DEBUG bcost => bcost_351
  # DEBUG bmy => bmy_226
  # DEBUG bmx => bmx_110
  if (&xs_buf != xs_443)
    goto <bb 452>;
  else
    goto <bb 453>;

  <bb 452>:
  x264_free (xs_443);

  <bb 453>:
  enc_dc ={v} {CLOBBER};
  xs_buf ={v} {CLOBBER};

  # bmx_111 = PHI <bmx_7(41), bmx_4157(54), prephitmp_4658(110), bmx_35(162), bmx_59(231), bmx_4145(353), bmx_110(453), bmx_4158(52), bmx_4155(58), bmx_4156(56), bmx_18(111)>
  # bmy_227 = PHI <bmy_116(41), bmy_4138(54), bmy_2427(110), bmy_151(162), bmy_175(231), bmy_4126(353), bmy_226(453), bmy_4139(52), bmy_4136(58), bmy_4137(56), bmy_131(111)>
  # bcost_352 = PHI <bcost_232(41), bcost_4119(54), bcost_2506(110), bcost_232(162), bcost_300(231), bcost_4103(353), bcost_351(453), bcost_4120(52), bcost_4117(58), bcost_4118(56), bcost_256(111)>
<L445>:
  # DEBUG bcost => bcost_352
  # DEBUG bmy => bmy_227
  # DEBUG bmx => bmx_111
  if (bcost_352 > bpred_cost_367)
    goto <bb 455>;
  else
    goto <bb 456>;

  <bb 455>:
  _2900 = (short int) bmx_357;
  m_505(D)->mv[0] = _2900;
  _2902 = (short int) bmy_362;
  m_505(D)->mv[1] = _2902;
  m_505(D)->cost = bpred_cost_367;
  goto <bb 457>;

  <bb 456>:
  _2905 = bmx_111 << 2;
  _2906 = (short int) _2905;
  m_505(D)->mv[0] = _2906;
  _2908 = bmy_227 << 2;
  _2909 = (short int) _2908;
  m_505(D)->mv[1] = _2909;
  m_505(D)->cost = bcost_352;

  <bb 457>:
  # prephitmp_4245 = PHI <_2900(455), _2906(456)>
  # prephitmp_4246 = PHI <_2902(455), _2909(456)>
  _2913 = (long unsigned int) prephitmp_4245;
  _2914 = _2913 * 2;
  _2915 = p_cost_mvx_522 + _2914;
  _2916 = *_2915;
  _2917 = (int) _2916;
  _2919 = (long unsigned int) prephitmp_4246;
  _2920 = _2919 * 2;
  _2921 = p_cost_mvy_528 + _2920;
  _2922 = *_2921;
  _2923 = (int) _2922;
  _2924 = _2917 + _2923;
  m_505(D)->cost_mv = _2924;
  _2926 = bmx_111 == bmx_541;
  _2927 = bmy_227 == bmy_543;
  _2928 = _2926 & _2927;
  if (_2928 != 0)
    goto <bb 459>;
  else
    goto <bb 458>;

  <bb 458>:
  pretmp_4247 = h_510(D)->mb.i_subpel_refine;
  goto <bb 461>;

  <bb 459>:
  _2929 = h_510(D)->mb.i_subpel_refine;
  if (_2929 <= 2)
    goto <bb 460>;
  else
    goto <bb 461>;

  <bb 460>:
  _2930 = m_505(D)->cost;
  _2931 = _2924 + _2930;
  m_505(D)->cost = _2931;

  <bb 461>:
  # prephitmp_4248 = PHI <pretmp_4247(458), _2929(459), _2929(460)>
  if (prephitmp_4248 > 1)
    goto <bb 462>;
  else
    goto <bb 463>;

  <bb 462>:
  hpel_2934 = subpel_iterations[prephitmp_4248][2];
  # DEBUG hpel => hpel_2934
  qpel_2935 = subpel_iterations[prephitmp_4248][3];
  # DEBUG qpel => qpel_2935
  refine_subpel (h_510(D), m_505(D), hpel_2934, qpel_2935, p_halfpel_thresh_2936(D), 0);
  goto <bb 465>;

  <bb 463>:
  _2938 = (int) prephitmp_4246;
  _2939 = h_510(D)->mb.mv_max_spel[1];
  if (_2938 > _2939)
    goto <bb 464>;
  else
    goto <bb 465>;

  <bb 464>:
  _2940 = (short int) _2939;
  m_505(D)->mv[1] = _2940;

  <bb 465>:
  pix ={v} {CLOBBER};
  costs ={v} {CLOBBER};
  return;

  <bb 466>:
  # DEBUG bcost => bcost_947
  # DEBUG bmx => 1
  # DEBUG bmy => 0
  # DEBUG bcost => bcost_947
  # DEBUG bmy => 0
  # DEBUG bmx => 1
  if (_506 == 6)
    goto <bb 61> (me_hex2);
  else
    goto <bb 132>;

  <bb 467>:
  # bmx_3302 = PHI <bmx_3695(133), 0(130)>
  # bmy_3699 = PHI <bmy_3693(133), 0(130)>
  # bcost_3249 = PHI <bcost_3689(133), bcost_264(130)>
  # prephitmp_4307 = PHI <prephitmp_4459(133), 0(130)>
  # prephitmp_4309 = PHI <pretmp_4308(133), -2(130)>
  # prephitmp_4315 = PHI <pretmp_4314(133), 18446744073709551600(130)>
  # prephitmp_4317 = PHI <pretmp_4316(133), -2(130)>
  # prephitmp_4323 = PHI <pretmp_4322(133), 18446744073709551600(130)>
  # prephitmp_4325 = PHI <pretmp_4324(133), 2(130)>
  # prephitmp_4331 = PHI <pretmp_4330(133), 16(130)>
  # prephitmp_4333 = PHI <pretmp_4332(133), 2(130)>
  # prephitmp_4339 = PHI <pretmp_4338(133), 16(130)>
  # DEBUG bcost => bcost_3249
  # DEBUG bmy => bmy_3699
  # DEBUG bmx => bmx_3302

  <bb 468>:
  # bmx_3692 = PHI <bmx_3302(467), bmx_28(144)>
  # bmy_3691 = PHI <bmy_3699(467), bmy_143(144)>
  # bcost_3363 = PHI <bcost_3249(467), bcost_268(144)>
  # prephitmp_4710 = PHI <prephitmp_4307(467), pretmp_4709(144)>
  # prephitmp_4712 = PHI <prephitmp_4309(467), pretmp_4711(144)>
  # prephitmp_4718 = PHI <prephitmp_4315(467), pretmp_4717(144)>
  # prephitmp_4720 = PHI <prephitmp_4317(467), pretmp_4719(144)>
  # prephitmp_4726 = PHI <prephitmp_4323(467), pretmp_4725(144)>
  # prephitmp_4728 = PHI <prephitmp_4325(467), pretmp_4727(144)>
  # prephitmp_4734 = PHI <prephitmp_4331(467), pretmp_4733(144)>
  # prephitmp_4736 = PHI <prephitmp_4333(467), pretmp_4735(144)>
  # prephitmp_4742 = PHI <prephitmp_4339(467), pretmp_4741(144)>
  # DEBUG bcost => bcost_3363
  # DEBUG bmy => bmy_3691
  # DEBUG bmx => bmx_3692
  # DEBUG cross_start => 3
  # DEBUG cross_start => 3
  # DEBUG omx => bmx_3692
  # DEBUG omy => bmy_3691
  # DEBUG cross_start => 3
  # DEBUG omx => bmx_3692
  # DEBUG omy => bmy_3691
  _1025 = x264_pixel_size_shift[_506];
  _1026 = 2000 >> _1025;
  if (_1026 > bcost_3363)
    goto <bb 145>;
  else
    goto <bb 469>;

  <bb 469>:
  pretmp_4341 = bmx_3692 - bmx_513;
  pretmp_4345 = mv_x_max_515 - bmx_3692;
  pretmp_4349 = MIN_EXPR <pretmp_4341, pretmp_4345>;
  pretmp_4356 = bmy_3691 - bmy_514;
  pretmp_4360 = mv_y_max_516 - bmy_3691;
  pretmp_4364 = MIN_EXPR <pretmp_4356, pretmp_4360>;
  pretmp_4380 = p_cost_mvx_522 + prephitmp_4726;
  pretmp_4395 = p_cost_mvy_528 + prephitmp_4718;
  pretmp_4410 = p_cost_mvy_528 + prephitmp_4742;
  pretmp_4425 = p_cost_mvx_522 + prephitmp_4734;
  goto <bb 233>;

  <bb 470>:
  # DEBUG denom => 1
  # DEBUG mvd => 25
  _469 = x264_pixel_size_shift[_506];
  _377 = 1000 >> _469;
  if (bcost_301 >= _377)
    goto <bb 242>;
  else
    goto <bb 247>;

  <bb 471>:
  # nmvsad_309 = PHI <0(396), nmvsad_4072(402)>
  # DEBUG j => nmvsad_309
  # DEBUG i => nmvsad_309
  # DEBUG j => nmvsad_309
  # DEBUG i => nmvsad_309
  goto <bb 404>;

  <bb 472>:
  # nmvsad_3696 = PHI <0(395), nmvsad_4071(399)>
  # DEBUG j => nmvsad_3696
  # DEBUG i => nmvsad_3696
  goto <bb 408>;

}



;; Function x264_me_refine_bidir_satd (x264_me_refine_bidir_satd, funcdef_no=120, decl_uid=5795, cgraph_uid=120, symbol_order=167)


Analyzing loop at encoder/me.c:905
encoder/me.c:905:9: note: ===== analyze_loop_nest =====
encoder/me.c:905:9: note: === vect_analyze_loop_form ===
encoder/me.c:905:9: note: not vectorized: control flow in loop.
encoder/me.c:905:9: note: bad loop form.
encoder/me.c:934:6: note: vectorized 0 loops in function.
x264_me_refine_bidir_satd (struct x264_t * h, struct x264_me_t * m0, struct x264_me_t * m1, int i_weight)
{
  const int bw;
  const int bh;
  const int16_t * p_cost_m0x;
  const int16_t * p_cost_m0y;
  const int16_t * p_cost_m1x;
  const int16_t * p_cost_m1y;
  uint8_t pix0[9][256];
  uint8_t pix1[9][256];
  uint8_t pix[256];
  int stride0[9];
  int stride1[9];
  int bm0x;
  int bm0y;
  int bm1x;
  int bm1y;
  int bcost;
  int pass;
  uint8_t visited[8][8][8];
  uint8_t * src0$4;
  uint8_t * src1$4;
  int iftmp.14_6;
  int _7;
  int16_t * _10;
  int _11;
  int _12;
  short int _13;
  int _14;
  _Bool _15;
  long unsigned int _16;
  long unsigned int _17;
  sizetype _18;
  short int _20;
  int _21;
  long unsigned int _23;
  long unsigned int _24;
  sizetype _25;
  int16_t * _27;
  short int _28;
  int _29;
  long unsigned int _31;
  long unsigned int _32;
  sizetype _33;
  short int _35;
  int _36;
  _Bool _37;
  long unsigned int _38;
  long unsigned int _39;
  sizetype _40;
  short int _42;
  short int _44;
  short int _46;
  short int _48;
  int _50;
  int _51;
  void (*<Tfb0>) (void *, int) _52;
  uint8_t * (*<Tf83>) (uint8_t *, int *, uint8_t * *, int, int, int, int, int) _53;
  int _54;
  uint8_t *[6] * _55;
  uint8_t * (*<Tf83>) (uint8_t *, int *, uint8_t * *, int, int, int, int, int) _57;
  int _58;
  uint8_t *[6] * _59;
  short int _61;
  short int _62;
  short int _63;
  int _64;
  int _65;
  int _66;
  unsigned char _67;
  signed char _68;
  short int _69;
  int _70;
  int _71;
  signed char _72;
  signed char _73;
  unsigned char _74;
  void (*<Tf8b>) (uint8_t *, int, uint8_t *, int, uint8_t *, int, int) _75;
  int _76;
  int _77;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _78;
  uint8_t * _79;
  int _80;
  long unsigned int _81;
  long unsigned int _82;
  const int16_t * _83;
  short int _84;
  int _85;
  int _86;
  long unsigned int _87;
  long unsigned int _88;
  const int16_t * _89;
  short int _90;
  int _91;
  int _92;
  long unsigned int _93;
  long unsigned int _94;
  const int16_t * _95;
  short int _96;
  int _97;
  int _98;
  long unsigned int _99;
  long unsigned int _100;
  const int16_t * _101;
  short int _102;
  int _103;
  uint8_t * (*<Tf83>) (uint8_t *, int *, uint8_t * *, int, int, int, int, int) _105;
  int _108;
  uint8_t * _110;
  uint8_t * (*<Tf83>) (uint8_t *, int *, uint8_t * *, int, int, int, int, int) _111;
  int _114;
  uint8_t * _116;
  uint8_t * (*<Tf83>) (uint8_t *, int *, uint8_t * *, int, int, int, int, int) _117;
  int _119;
  uint8_t * _120;
  uint8_t * (*<Tf83>) (uint8_t *, int *, uint8_t * *, int, int, int, int, int) _121;
  int _123;
  uint8_t * _124;
  uint8_t * (*<Tf83>) (uint8_t *, int *, uint8_t * *, int, int, int, int, int) _125;
  int _127;
  uint8_t * _128;
  uint8_t * (*<Tf83>) (uint8_t *, int *, uint8_t * *, int, int, int, int, int) _129;
  int _131;
  uint8_t * _132;
  uint8_t * (*<Tf83>) (uint8_t *, int *, uint8_t * *, int, int, int, int, int) _133;
  int _135;
  uint8_t * _136;
  uint8_t * (*<Tf83>) (uint8_t *, int *, uint8_t * *, int, int, int, int, int) _137;
  int _139;
  uint8_t * _140;
  uint8_t * (*<Tf83>) (uint8_t *, int *, uint8_t * *, int, int, int, int, int) _141;
  int _142;
  uint8_t * _143;
  uint8_t * (*<Tf83>) (uint8_t *, int *, uint8_t * *, int, int, int, int, int) _144;
  int _145;
  uint8_t * _146;
  uint8_t * (*<Tf83>) (uint8_t *, int *, uint8_t * *, int, int, int, int, int) _147;
  int _148;
  uint8_t * _149;
  uint8_t * (*<Tf83>) (uint8_t *, int *, uint8_t * *, int, int, int, int, int) _150;
  int _151;
  uint8_t * _152;
  uint8_t * (*<Tf83>) (uint8_t *, int *, uint8_t * *, int, int, int, int, int) _153;
  int _154;
  uint8_t * _155;
  uint8_t * (*<Tf83>) (uint8_t *, int *, uint8_t * *, int, int, int, int, int) _156;
  int _157;
  uint8_t * _158;
  uint8_t * (*<Tf83>) (uint8_t *, int *, uint8_t * *, int, int, int, int, int) _159;
  int _160;
  uint8_t * _161;
  uint8_t * (*<Tf83>) (uint8_t *, int *, uint8_t * *, int, int, int, int, int) _162;
  int _163;
  uint8_t * _164;
  int _166;
  int _167;
  int _168;
  unsigned char _169;
  int _170;
  int _171;
  int _172;
  int _173;
  signed char _178;
  int _180;
  signed char _181;
  signed char _182;
  unsigned char _183;
  void (*<Tf8b>) (uint8_t *, int, uint8_t *, int, uint8_t *, int, int) _184;
  int _185;
  int _186;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _188;
  uint8_t * _189;
  int _190;
  long unsigned int _191;
  long unsigned int _192;
  const int16_t * _193;
  short int _194;
  int _195;
  int _196;
  long unsigned int _197;
  long unsigned int _198;
  const int16_t * _199;
  short int _200;
  int _201;
  int _202;
  long unsigned int _203;
  long unsigned int _204;
  const int16_t * _205;
  short int _206;
  int _207;
  int _208;
  sizetype _209;
  sizetype _210;
  sizetype _211;
  const int16_t * _212;
  short int _213;
  int _214;
  int _222;
  int _223;
  int _224;
  signed char _229;
  int _231;
  signed char _232;
  signed char _233;
  unsigned char _234;
  void (*<Tf8b>) (uint8_t *, int, uint8_t *, int, uint8_t *, int, int) _235;
  int _236;
  int _237;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _238;
  uint8_t * _239;
  int _240;
  long unsigned int _241;
  long unsigned int _242;
  const int16_t * _243;
  short int _244;
  int _245;
  int _246;
  long unsigned int _247;
  long unsigned int _248;
  const int16_t * _249;
  short int _250;
  int _251;
  int _252;
  long unsigned int _253;
  long unsigned int _254;
  const int16_t * _255;
  short int _256;
  int _257;
  int _258;
  long unsigned int _259;
  long unsigned int _260;
  sizetype _261;
  const int16_t * _262;
  short int _263;
  int _264;
  int _269;
  unsigned char _270;
  int _271;
  int _272;
  int _273;
  int _274;
  signed char _279;
  int _281;
  signed char _282;
  signed char _283;
  unsigned char _284;
  void (*<Tf8b>) (uint8_t *, int, uint8_t *, int, uint8_t *, int, int) _285;
  int _286;
  int _287;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _288;
  uint8_t * _289;
  int _290;
  long unsigned int _291;
  long unsigned int _292;
  const int16_t * _293;
  short int _294;
  int _295;
  int _296;
  long unsigned int _297;
  long unsigned int _298;
  const int16_t * _299;
  short int _300;
  int _301;
  int _302;
  sizetype _303;
  sizetype _304;
  sizetype _305;
  const int16_t * _306;
  short int _307;
  int _308;
  int _309;
  long unsigned int _310;
  long unsigned int _311;
  const int16_t * _312;
  short int _313;
  int _314;
  int _319;
  unsigned char _320;
  int _321;
  int _323;
  int _324;
  signed char _329;
  int _331;
  signed char _332;
  signed char _333;
  unsigned char _334;
  void (*<Tf8b>) (uint8_t *, int, uint8_t *, int, uint8_t *, int, int) _335;
  int _336;
  int _337;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _338;
  uint8_t * _339;
  int _340;
  long unsigned int _341;
  long unsigned int _342;
  const int16_t * _343;
  short int _344;
  int _345;
  int _346;
  long unsigned int _347;
  long unsigned int _348;
  const int16_t * _349;
  short int _350;
  int _351;
  int _352;
  long unsigned int _353;
  long unsigned int _354;
  sizetype _355;
  const int16_t * _356;
  short int _357;
  int _358;
  int _359;
  long unsigned int _360;
  long unsigned int _361;
  const int16_t * _362;
  short int _363;
  int _364;
  int _368;
  unsigned char _370;
  int _371;
  int _373;
  int _374;
  signed char _379;
  int _381;
  signed char _382;
  signed char _383;
  unsigned char _384;
  void (*<Tf8b>) (uint8_t *, int, uint8_t *, int, uint8_t *, int, int) _385;
  int _386;
  int _387;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _389;
  uint8_t * _390;
  int _391;
  long unsigned int _392;
  long unsigned int _393;
  const int16_t * _394;
  short int _395;
  int _396;
  int _397;
  sizetype _398;
  sizetype _399;
  sizetype _400;
  const int16_t * _401;
  short int _402;
  int _403;
  int _404;
  long unsigned int _405;
  long unsigned int _406;
  const int16_t * _407;
  short int _408;
  int _409;
  int _410;
  long unsigned int _411;
  long unsigned int _412;
  const int16_t * _413;
  short int _414;
  int _415;
  int _419;
  unsigned char _421;
  int _422;
  int _424;
  int _425;
  signed char _430;
  int _432;
  signed char _433;
  signed char _434;
  unsigned char _435;
  void (*<Tf8b>) (uint8_t *, int, uint8_t *, int, uint8_t *, int, int) _436;
  int _437;
  int _438;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _439;
  uint8_t * _440;
  int _441;
  long unsigned int _442;
  long unsigned int _443;
  const int16_t * _444;
  short int _445;
  int _446;
  int _447;
  long unsigned int _448;
  long unsigned int _449;
  sizetype _450;
  const int16_t * _451;
  short int _452;
  int _453;
  int _454;
  long unsigned int _455;
  long unsigned int _456;
  const int16_t * _457;
  short int _458;
  int _459;
  int _460;
  long unsigned int _461;
  long unsigned int _462;
  const int16_t * _463;
  short int _464;
  int _465;
  int _468;
  unsigned char _471;
  int _472;
  int _474;
  int _475;
  signed char _480;
  int _482;
  signed char _483;
  signed char _484;
  unsigned char _485;
  void (*<Tf8b>) (uint8_t *, int, uint8_t *, int, uint8_t *, int, int) _486;
  int _487;
  int _488;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _489;
  uint8_t * _490;
  int _491;
  sizetype _492;
  sizetype _493;
  sizetype _494;
  const int16_t * _495;
  short int _496;
  int _497;
  int _498;
  long unsigned int _499;
  long unsigned int _500;
  const int16_t * _501;
  short int _502;
  int _503;
  int _504;
  long unsigned int _505;
  long unsigned int _506;
  const int16_t * _507;
  short int _508;
  int _509;
  int _510;
  long unsigned int _511;
  long unsigned int _512;
  const int16_t * _513;
  short int _514;
  int _515;
  int _518;
  unsigned char _521;
  int _522;
  int _524;
  int _525;
  signed char _530;
  int _532;
  signed char _533;
  signed char _534;
  unsigned char _535;
  void (*<Tf8b>) (uint8_t *, int, uint8_t *, int, uint8_t *, int, int) _536;
  int _537;
  int _538;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _539;
  uint8_t * _540;
  int _541;
  long unsigned int _542;
  long unsigned int _543;
  sizetype _544;
  const int16_t * _545;
  short int _546;
  int _547;
  int _548;
  long unsigned int _549;
  long unsigned int _550;
  const int16_t * _551;
  short int _552;
  int _553;
  int _554;
  long unsigned int _555;
  long unsigned int _556;
  const int16_t * _557;
  short int _558;
  int _559;
  int _560;
  long unsigned int _561;
  long unsigned int _562;
  const int16_t * _563;
  short int _564;
  int _565;
  unsigned char _571;
  int _572;
  int _574;
  int _575;
  signed char _580;
  int _582;
  signed char _583;
  signed char _584;
  unsigned char _585;
  void (*<Tf8b>) (uint8_t *, int, uint8_t *, int, uint8_t *, int, int) _586;
  int _587;
  int _588;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _589;
  uint8_t * _590;
  int _591;
  long unsigned int _592;
  long unsigned int _593;
  const int16_t * _594;
  short int _595;
  int _596;
  int _597;
  long unsigned int _598;
  long unsigned int _599;
  const int16_t * _600;
  short int _601;
  int _602;
  int _603;
  sizetype _604;
  sizetype _605;
  sizetype _606;
  const int16_t * _607;
  short int _608;
  int _609;
  int _610;
  sizetype _611;
  sizetype _612;
  sizetype _613;
  const int16_t * _614;
  short int _615;
  int _616;
  unsigned char _622;
  int _623;
  int _625;
  int _626;
  signed char _631;
  int _633;
  signed char _634;
  signed char _635;
  unsigned char _636;
  void (*<Tf8b>) (uint8_t *, int, uint8_t *, int, uint8_t *, int, int) _637;
  int _638;
  int _639;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _640;
  uint8_t * _641;
  int _642;
  long unsigned int _643;
  long unsigned int _644;
  const int16_t * _645;
  short int _646;
  int _647;
  int _648;
  long unsigned int _649;
  long unsigned int _650;
  const int16_t * _651;
  short int _652;
  int _653;
  int _654;
  long unsigned int _655;
  long unsigned int _656;
  sizetype _657;
  const int16_t * _658;
  short int _659;
  int _660;
  int _661;
  long unsigned int _662;
  long unsigned int _663;
  sizetype _664;
  const int16_t * _665;
  short int _666;
  int _667;
  unsigned char _673;
  int _674;
  int _676;
  int _677;
  signed char _682;
  int _684;
  signed char _685;
  signed char _686;
  unsigned char _687;
  void (*<Tf8b>) (uint8_t *, int, uint8_t *, int, uint8_t *, int, int) _688;
  int _689;
  int _690;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _691;
  uint8_t * _692;
  int _693;
  long unsigned int _694;
  long unsigned int _695;
  const int16_t * _696;
  short int _697;
  int _698;
  int _699;
  sizetype _700;
  sizetype _701;
  sizetype _702;
  const int16_t * _703;
  short int _704;
  int _705;
  int _706;
  sizetype _707;
  sizetype _708;
  sizetype _709;
  const int16_t * _710;
  short int _711;
  int _712;
  int _713;
  long unsigned int _714;
  long unsigned int _715;
  const int16_t * _716;
  short int _717;
  int _718;
  unsigned char _724;
  int _725;
  int _727;
  int _728;
  signed char _733;
  int _735;
  signed char _736;
  signed char _737;
  unsigned char _738;
  void (*<Tf8b>) (uint8_t *, int, uint8_t *, int, uint8_t *, int, int) _739;
  int _740;
  int _741;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _742;
  uint8_t * _743;
  int _744;
  long unsigned int _745;
  long unsigned int _746;
  const int16_t * _747;
  short int _748;
  int _749;
  int _750;
  long unsigned int _751;
  long unsigned int _752;
  sizetype _753;
  const int16_t * _754;
  short int _755;
  int _756;
  int _757;
  long unsigned int _758;
  long unsigned int _759;
  sizetype _760;
  const int16_t * _761;
  short int _762;
  int _763;
  int _764;
  long unsigned int _765;
  long unsigned int _766;
  const int16_t * _767;
  short int _768;
  int _769;
  unsigned char _775;
  int _776;
  int _778;
  int _779;
  signed char _784;
  int _786;
  signed char _787;
  signed char _788;
  unsigned char _789;
  void (*<Tf8b>) (uint8_t *, int, uint8_t *, int, uint8_t *, int, int) _790;
  int _791;
  int _792;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _793;
  uint8_t * _794;
  int _795;
  sizetype _796;
  sizetype _797;
  sizetype _798;
  const int16_t * _799;
  short int _800;
  int _801;
  int _802;
  sizetype _803;
  sizetype _804;
  sizetype _805;
  const int16_t * _806;
  short int _807;
  int _808;
  int _809;
  long unsigned int _810;
  long unsigned int _811;
  const int16_t * _812;
  short int _813;
  int _814;
  int _815;
  long unsigned int _816;
  long unsigned int _817;
  const int16_t * _818;
  short int _819;
  int _820;
  unsigned char _826;
  int _827;
  int _829;
  int _830;
  signed char _835;
  int _837;
  signed char _838;
  signed char _839;
  unsigned char _840;
  void (*<Tf8b>) (uint8_t *, int, uint8_t *, int, uint8_t *, int, int) _841;
  int _842;
  int _843;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _844;
  uint8_t * _845;
  int _846;
  long unsigned int _847;
  long unsigned int _848;
  sizetype _849;
  const int16_t * _850;
  short int _851;
  int _852;
  int _853;
  long unsigned int _854;
  long unsigned int _855;
  sizetype _856;
  const int16_t * _857;
  short int _858;
  int _859;
  int _860;
  long unsigned int _861;
  long unsigned int _862;
  const int16_t * _863;
  short int _864;
  int _865;
  int _866;
  long unsigned int _867;
  long unsigned int _868;
  const int16_t * _869;
  short int _870;
  int _871;
  unsigned char _877;
  int _878;
  int _880;
  int _881;
  signed char _886;
  int _888;
  signed char _889;
  signed char _890;
  unsigned char _891;
  void (*<Tf8b>) (uint8_t *, int, uint8_t *, int, uint8_t *, int, int) _892;
  int _893;
  int _894;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _895;
  uint8_t * _896;
  int _897;
  sizetype _898;
  sizetype _899;
  sizetype _900;
  const int16_t * _901;
  short int _902;
  int _903;
  int _904;
  long unsigned int _905;
  long unsigned int _906;
  const int16_t * _907;
  short int _908;
  int _909;
  int _910;
  long unsigned int _911;
  long unsigned int _912;
  const int16_t * _913;
  short int _914;
  int _915;
  int _916;
  sizetype _917;
  sizetype _918;
  sizetype _919;
  const int16_t * _920;
  short int _921;
  int _922;
  unsigned char _928;
  int _929;
  int _931;
  int _932;
  signed char _937;
  int _939;
  signed char _940;
  signed char _941;
  unsigned char _942;
  void (*<Tf8b>) (uint8_t *, int, uint8_t *, int, uint8_t *, int, int) _943;
  int _944;
  int _945;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _946;
  uint8_t * _947;
  int _948;
  long unsigned int _949;
  long unsigned int _950;
  sizetype _951;
  const int16_t * _952;
  short int _953;
  int _954;
  int _955;
  long unsigned int _956;
  long unsigned int _957;
  const int16_t * _958;
  short int _959;
  int _960;
  int _961;
  long unsigned int _962;
  long unsigned int _963;
  const int16_t * _964;
  short int _965;
  int _966;
  int _967;
  long unsigned int _968;
  long unsigned int _969;
  sizetype _970;
  const int16_t * _971;
  short int _972;
  int _973;
  unsigned char _979;
  int _980;
  int _982;
  int _983;
  signed char _988;
  int _990;
  signed char _991;
  signed char _992;
  unsigned char _993;
  void (*<Tf8b>) (uint8_t *, int, uint8_t *, int, uint8_t *, int, int) _994;
  int _995;
  int _996;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _997;
  uint8_t * _998;
  int _999;
  long unsigned int _1000;
  long unsigned int _1001;
  const int16_t * _1002;
  short int _1003;
  int _1004;
  int _1005;
  sizetype _1006;
  sizetype _1007;
  sizetype _1008;
  const int16_t * _1009;
  short int _1010;
  int _1011;
  int _1012;
  long unsigned int _1013;
  long unsigned int _1014;
  const int16_t * _1015;
  short int _1016;
  int _1017;
  int _1018;
  sizetype _1019;
  sizetype _1020;
  sizetype _1021;
  const int16_t * _1022;
  short int _1023;
  int _1024;
  unsigned char _1030;
  int _1031;
  int _1033;
  int _1034;
  signed char _1039;
  int _1041;
  signed char _1042;
  signed char _1043;
  unsigned char _1044;
  void (*<Tf8b>) (uint8_t *, int, uint8_t *, int, uint8_t *, int, int) _1045;
  int _1046;
  int _1047;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _1048;
  uint8_t * _1049;
  int _1050;
  long unsigned int _1051;
  long unsigned int _1052;
  const int16_t * _1053;
  short int _1054;
  int _1055;
  int _1056;
  long unsigned int _1057;
  long unsigned int _1058;
  sizetype _1059;
  const int16_t * _1060;
  short int _1061;
  int _1062;
  int _1063;
  long unsigned int _1064;
  long unsigned int _1065;
  const int16_t * _1066;
  short int _1067;
  int _1068;
  int _1069;
  long unsigned int _1070;
  long unsigned int _1071;
  sizetype _1072;
  const int16_t * _1073;
  short int _1074;
  int _1075;
  unsigned char _1093;
  int _1094;
  int _1096;
  int _1097;
  signed char _1102;
  int _1104;
  signed char _1105;
  signed char _1106;
  unsigned char _1107;
  void (*<Tf8b>) (uint8_t *, int, uint8_t *, int, uint8_t *, int, int) _1108;
  int _1109;
  int _1110;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _1111;
  uint8_t * _1112;
  int _1113;
  sizetype _1114;
  sizetype _1115;
  sizetype _1116;
  const int16_t * _1117;
  short int _1118;
  int _1119;
  int _1120;
  long unsigned int _1121;
  long unsigned int _1122;
  const int16_t * _1123;
  short int _1124;
  int _1125;
  int _1126;
  sizetype _1127;
  sizetype _1128;
  sizetype _1129;
  const int16_t * _1130;
  short int _1131;
  int _1132;
  int _1133;
  long unsigned int _1134;
  long unsigned int _1135;
  const int16_t * _1136;
  short int _1137;
  int _1138;
  unsigned char _1156;
  int _1157;
  int _1159;
  int _1160;
  signed char _1165;
  int _1167;
  signed char _1168;
  signed char _1169;
  unsigned char _1170;
  void (*<Tf8b>) (uint8_t *, int, uint8_t *, int, uint8_t *, int, int) _1171;
  int _1172;
  int _1173;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _1174;
  uint8_t * _1175;
  int _1176;
  long unsigned int _1177;
  long unsigned int _1178;
  sizetype _1179;
  const int16_t * _1180;
  short int _1181;
  int _1182;
  int _1183;
  long unsigned int _1184;
  long unsigned int _1185;
  const int16_t * _1186;
  short int _1187;
  int _1188;
  int _1189;
  long unsigned int _1190;
  long unsigned int _1191;
  sizetype _1192;
  const int16_t * _1193;
  short int _1194;
  int _1195;
  int _1196;
  long unsigned int _1197;
  long unsigned int _1198;
  const int16_t * _1199;
  short int _1200;
  int _1201;
  unsigned char _1219;
  int _1220;
  int _1222;
  int _1223;
  signed char _1228;
  int _1230;
  signed char _1231;
  signed char _1232;
  unsigned char _1233;
  void (*<Tf8b>) (uint8_t *, int, uint8_t *, int, uint8_t *, int, int) _1234;
  int _1235;
  int _1236;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _1237;
  uint8_t * _1238;
  int _1239;
  long unsigned int _1240;
  long unsigned int _1241;
  const int16_t * _1242;
  short int _1243;
  int _1244;
  int _1245;
  long unsigned int _1246;
  long unsigned int _1247;
  const int16_t * _1248;
  short int _1249;
  int _1250;
  int _1251;
  long unsigned int _1252;
  long unsigned int _1253;
  sizetype _1254;
  const int16_t * _1255;
  short int _1256;
  int _1257;
  int _1258;
  sizetype _1259;
  sizetype _1260;
  sizetype _1261;
  const int16_t * _1262;
  short int _1263;
  int _1264;
  unsigned char _1282;
  int _1283;
  int _1285;
  int _1286;
  signed char _1291;
  int _1293;
  signed char _1294;
  signed char _1295;
  unsigned char _1296;
  void (*<Tf8b>) (uint8_t *, int, uint8_t *, int, uint8_t *, int, int) _1297;
  int _1298;
  int _1299;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _1300;
  uint8_t * _1301;
  int _1302;
  long unsigned int _1303;
  long unsigned int _1304;
  const int16_t * _1305;
  short int _1306;
  int _1307;
  int _1308;
  long unsigned int _1309;
  long unsigned int _1310;
  const int16_t * _1311;
  short int _1312;
  int _1313;
  int _1314;
  sizetype _1315;
  sizetype _1316;
  sizetype _1317;
  const int16_t * _1318;
  short int _1319;
  int _1320;
  int _1321;
  long unsigned int _1322;
  long unsigned int _1323;
  sizetype _1324;
  const int16_t * _1325;
  short int _1326;
  int _1327;
  unsigned char _1345;
  int _1346;
  int _1348;
  int _1349;
  signed char _1354;
  int _1356;
  signed char _1357;
  signed char _1358;
  unsigned char _1359;
  void (*<Tf8b>) (uint8_t *, int, uint8_t *, int, uint8_t *, int, int) _1360;
  int _1361;
  int _1362;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _1363;
  uint8_t * _1364;
  int _1365;
  long unsigned int _1366;
  long unsigned int _1367;
  const int16_t * _1368;
  short int _1369;
  int _1370;
  int _1371;
  long unsigned int _1372;
  long unsigned int _1373;
  sizetype _1374;
  const int16_t * _1375;
  short int _1376;
  int _1377;
  int _1378;
  sizetype _1379;
  sizetype _1380;
  sizetype _1381;
  const int16_t * _1382;
  short int _1383;
  int _1384;
  int _1385;
  long unsigned int _1386;
  long unsigned int _1387;
  const int16_t * _1388;
  short int _1389;
  int _1390;
  unsigned char _1408;
  int _1409;
  int _1411;
  int _1412;
  signed char _1417;
  int _1419;
  signed char _1420;
  signed char _1421;
  unsigned char _1422;
  void (*<Tf8b>) (uint8_t *, int, uint8_t *, int, uint8_t *, int, int) _1423;
  int _1424;
  int _1425;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _1426;
  uint8_t * _1427;
  int _1428;
  long unsigned int _1429;
  long unsigned int _1430;
  const int16_t * _1431;
  short int _1432;
  int _1433;
  int _1434;
  sizetype _1435;
  sizetype _1436;
  sizetype _1437;
  const int16_t * _1438;
  short int _1439;
  int _1440;
  int _1441;
  long unsigned int _1442;
  long unsigned int _1443;
  sizetype _1444;
  const int16_t * _1445;
  short int _1446;
  int _1447;
  int _1448;
  long unsigned int _1449;
  long unsigned int _1450;
  const int16_t * _1451;
  short int _1452;
  int _1453;
  unsigned char _1471;
  int _1472;
  int _1474;
  int _1475;
  signed char _1480;
  int _1482;
  signed char _1483;
  signed char _1484;
  unsigned char _1485;
  void (*<Tf8b>) (uint8_t *, int, uint8_t *, int, uint8_t *, int, int) _1486;
  int _1487;
  int _1488;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _1489;
  uint8_t * _1490;
  int _1491;
  long unsigned int _1492;
  long unsigned int _1493;
  sizetype _1494;
  const int16_t * _1495;
  short int _1496;
  int _1497;
  int _1498;
  sizetype _1499;
  sizetype _1500;
  sizetype _1501;
  const int16_t * _1502;
  short int _1503;
  int _1504;
  int _1505;
  long unsigned int _1506;
  long unsigned int _1507;
  const int16_t * _1508;
  short int _1509;
  int _1510;
  int _1511;
  long unsigned int _1512;
  long unsigned int _1513;
  const int16_t * _1514;
  short int _1515;
  int _1516;
  unsigned char _1534;
  int _1535;
  int _1537;
  int _1538;
  signed char _1543;
  int _1545;
  signed char _1546;
  signed char _1547;
  unsigned char _1548;
  void (*<Tf8b>) (uint8_t *, int, uint8_t *, int, uint8_t *, int, int) _1549;
  int _1550;
  int _1551;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _1552;
  uint8_t * _1553;
  int _1554;
  sizetype _1555;
  sizetype _1556;
  sizetype _1557;
  const int16_t * _1558;
  short int _1559;
  int _1560;
  int _1561;
  long unsigned int _1562;
  long unsigned int _1563;
  sizetype _1564;
  const int16_t * _1565;
  short int _1566;
  int _1567;
  int _1568;
  long unsigned int _1569;
  long unsigned int _1570;
  const int16_t * _1571;
  short int _1572;
  int _1573;
  int _1574;
  long unsigned int _1575;
  long unsigned int _1576;
  const int16_t * _1577;
  short int _1578;
  int _1579;
  unsigned char _1597;
  int _1598;
  int _1600;
  int _1601;
  signed char _1606;
  int _1608;
  signed char _1609;
  signed char _1610;
  unsigned char _1611;
  void (*<Tf8b>) (uint8_t *, int, uint8_t *, int, uint8_t *, int, int) _1612;
  int _1613;
  int _1614;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _1615;
  uint8_t * _1616;
  int _1617;
  sizetype _1618;
  sizetype _1619;
  sizetype _1620;
  const int16_t * _1621;
  short int _1622;
  int _1623;
  int _1624;
  long unsigned int _1625;
  long unsigned int _1626;
  const int16_t * _1627;
  short int _1628;
  int _1629;
  int _1630;
  long unsigned int _1631;
  long unsigned int _1632;
  const int16_t * _1633;
  short int _1634;
  int _1635;
  int _1636;
  long unsigned int _1637;
  long unsigned int _1638;
  sizetype _1639;
  const int16_t * _1640;
  short int _1641;
  int _1642;
  unsigned char _1660;
  int _1661;
  int _1663;
  int _1664;
  signed char _1669;
  int _1671;
  signed char _1672;
  signed char _1673;
  unsigned char _1674;
  void (*<Tf8b>) (uint8_t *, int, uint8_t *, int, uint8_t *, int, int) _1675;
  int _1676;
  int _1677;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _1678;
  uint8_t * _1679;
  int _1680;
  long unsigned int _1681;
  long unsigned int _1682;
  sizetype _1683;
  const int16_t * _1684;
  short int _1685;
  int _1686;
  int _1687;
  long unsigned int _1688;
  long unsigned int _1689;
  const int16_t * _1690;
  short int _1691;
  int _1692;
  int _1693;
  long unsigned int _1694;
  long unsigned int _1695;
  const int16_t * _1696;
  short int _1697;
  int _1698;
  int _1699;
  sizetype _1700;
  sizetype _1701;
  sizetype _1702;
  const int16_t * _1703;
  short int _1704;
  int _1705;
  unsigned char _1723;
  int _1724;
  int _1726;
  int _1727;
  signed char _1732;
  int _1734;
  signed char _1735;
  signed char _1736;
  unsigned char _1737;
  void (*<Tf8b>) (uint8_t *, int, uint8_t *, int, uint8_t *, int, int) _1738;
  int _1739;
  int _1740;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _1741;
  uint8_t * _1742;
  int _1743;
  long unsigned int _1744;
  long unsigned int _1745;
  const int16_t * _1746;
  short int _1747;
  int _1748;
  int _1749;
  long unsigned int _1750;
  long unsigned int _1751;
  sizetype _1752;
  const int16_t * _1753;
  short int _1754;
  int _1755;
  int _1756;
  long unsigned int _1757;
  long unsigned int _1758;
  const int16_t * _1759;
  short int _1760;
  int _1761;
  int _1762;
  sizetype _1763;
  sizetype _1764;
  sizetype _1765;
  const int16_t * _1766;
  short int _1767;
  int _1768;
  unsigned char _1786;
  int _1787;
  int _1789;
  int _1790;
  signed char _1795;
  int _1797;
  signed char _1798;
  signed char _1799;
  unsigned char _1800;
  void (*<Tf8b>) (uint8_t *, int, uint8_t *, int, uint8_t *, int, int) _1801;
  int _1802;
  int _1803;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _1804;
  uint8_t * _1805;
  int _1806;
  long unsigned int _1807;
  long unsigned int _1808;
  const int16_t * _1809;
  short int _1810;
  int _1811;
  int _1812;
  sizetype _1813;
  sizetype _1814;
  sizetype _1815;
  const int16_t * _1816;
  short int _1817;
  int _1818;
  int _1819;
  long unsigned int _1820;
  long unsigned int _1821;
  const int16_t * _1822;
  short int _1823;
  int _1824;
  int _1825;
  long unsigned int _1826;
  long unsigned int _1827;
  sizetype _1828;
  const int16_t * _1829;
  short int _1830;
  int _1831;
  unsigned char _1845;
  int _1846;
  int _1848;
  int _1849;
  signed char _1854;
  int _1856;
  signed char _1857;
  signed char _1858;
  unsigned char _1859;
  void (*<Tf8b>) (uint8_t *, int, uint8_t *, int, uint8_t *, int, int) _1860;
  int _1861;
  int _1862;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _1863;
  uint8_t * _1864;
  int _1865;
  long unsigned int _1866;
  long unsigned int _1867;
  sizetype _1868;
  const int16_t * _1869;
  short int _1870;
  int _1871;
  int _1872;
  long unsigned int _1873;
  long unsigned int _1874;
  const int16_t * _1875;
  short int _1876;
  int _1877;
  int _1878;
  sizetype _1879;
  sizetype _1880;
  sizetype _1881;
  const int16_t * _1882;
  short int _1883;
  int _1884;
  int _1885;
  long unsigned int _1886;
  long unsigned int _1887;
  const int16_t * _1888;
  short int _1889;
  int _1890;
  unsigned char _1908;
  int _1909;
  int _1911;
  int _1912;
  signed char _1917;
  int _1919;
  signed char _1920;
  signed char _1921;
  unsigned char _1922;
  void (*<Tf8b>) (uint8_t *, int, uint8_t *, int, uint8_t *, int, int) _1923;
  int _1924;
  int _1925;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _1926;
  uint8_t * _1927;
  int _1928;
  sizetype _1929;
  sizetype _1930;
  sizetype _1931;
  const int16_t * _1932;
  short int _1933;
  int _1934;
  int _1935;
  long unsigned int _1936;
  long unsigned int _1937;
  const int16_t * _1938;
  short int _1939;
  int _1940;
  int _1941;
  long unsigned int _1942;
  long unsigned int _1943;
  sizetype _1944;
  const int16_t * _1945;
  short int _1946;
  int _1947;
  int _1948;
  long unsigned int _1949;
  long unsigned int _1950;
  const int16_t * _1951;
  short int _1952;
  int _1953;
  _Bool _1969;
  _Bool _1972;
  _Bool _1974;
  _Bool _1976;
  _Bool _1977;
  uint8_t * (*<Tf83>) (uint8_t *, int *, uint8_t * *, int, int, int, int, int) _1978;
  int _1979;
  uint8_t * (*<Tf83>) (uint8_t *, int *, uint8_t * *, int, int, int, int, int) _1981;
  int _1982;
  short int _1986;
  short int _1988;
  short int _1990;
  short int _1992;
  _Bool _1996;
  int iftmp.14_2125;
  int iftmp.14_2126;
  int iftmp.14_2127;
  int iftmp.14_2128;
  int iftmp.14_2129;
  int iftmp.14_2130;
  int iftmp.14_2131;
  unsigned int ivtmp_2776;
  unsigned int ivtmp_2777;
  _Bool pretmp_2790;
  _Bool pretmp_2791;
  _Bool prephitmp_2792;
  int prephitmp_2793;
  int prephitmp_2794;
  int prephitmp_2796;
  int prephitmp_2798;
  unsigned char pretmp_2799;
  unsigned char prephitmp_2800;
  int prephitmp_2801;
  int prephitmp_2802;
  int prephitmp_2804;
  int prephitmp_2806;
  int prephitmp_2808;
  int prephitmp_2810;
  unsigned char pretmp_2811;
  unsigned char prephitmp_2812;
  int prephitmp_2813;
  int prephitmp_2814;
  int prephitmp_2816;
  int prephitmp_2818;
  unsigned char pretmp_2819;
  unsigned char prephitmp_2820;
  int prephitmp_2821;
  int prephitmp_2822;
  int prephitmp_2824;
  int prephitmp_2825;
  int prephitmp_2826;
  int prephitmp_2828;
  unsigned char pretmp_2829;
  unsigned char prephitmp_2830;
  int prephitmp_2831;
  int prephitmp_2832;
  int prephitmp_2833;
  int prephitmp_2834;
  int prephitmp_2835;
  int prephitmp_2836;
  int prephitmp_2838;
  int prephitmp_2840;
  unsigned char pretmp_2841;
  unsigned char prephitmp_2842;
  int prephitmp_2843;
  int prephitmp_2844;
  int prephitmp_2845;
  int prephitmp_2846;
  int prephitmp_2848;
  int prephitmp_2849;
  int prephitmp_2851;
  int prephitmp_2852;
  unsigned char pretmp_2853;
  unsigned char prephitmp_2854;
  int prephitmp_2855;
  int prephitmp_2856;
  int prephitmp_2857;
  int prephitmp_2858;
  int prephitmp_2859;
  int prephitmp_2860;
  int prephitmp_2862;
  int prephitmp_2864;
  unsigned char pretmp_2865;
  unsigned char prephitmp_2866;
  int prephitmp_2867;
  int prephitmp_2868;
  int prephitmp_2869;
  int prephitmp_2870;
  int prephitmp_2872;
  int prephitmp_2873;
  int prephitmp_2874;
  int prephitmp_2876;
  unsigned char pretmp_2877;
  unsigned char prephitmp_2878;
  int prephitmp_2879;
  int prephitmp_2880;
  int prephitmp_2881;
  int prephitmp_2882;
  int prephitmp_2883;
  int prephitmp_2884;
  int prephitmp_2886;
  int prephitmp_2888;
  unsigned char pretmp_2889;
  unsigned char prephitmp_2890;
  int prephitmp_2891;
  int prephitmp_2892;
  int prephitmp_2893;
  int prephitmp_2894;
  int prephitmp_2895;
  int prephitmp_2896;
  int prephitmp_2898;
  int prephitmp_2900;
  unsigned char pretmp_2901;
  unsigned char prephitmp_2902;
  int prephitmp_2903;
  int prephitmp_2904;
  int prephitmp_2905;
  int prephitmp_2906;
  int prephitmp_2907;
  int prephitmp_2908;
  int prephitmp_2910;
  int prephitmp_2912;
  unsigned char pretmp_2913;
  unsigned char prephitmp_2914;
  int prephitmp_2915;
  int prephitmp_2916;
  int prephitmp_2917;
  int prephitmp_2918;
  int prephitmp_2920;
  int prephitmp_2921;
  int prephitmp_2923;
  int prephitmp_2924;
  unsigned char pretmp_2925;
  unsigned char prephitmp_2926;
  int prephitmp_2927;
  int prephitmp_2928;
  int prephitmp_2929;
  int prephitmp_2930;
  int prephitmp_2931;
  int prephitmp_2932;
  int prephitmp_2934;
  int prephitmp_2936;
  unsigned char pretmp_2937;
  unsigned char prephitmp_2938;
  int prephitmp_2939;
  int prephitmp_2940;
  int prephitmp_2941;
  int prephitmp_2942;
  int prephitmp_2944;
  int prephitmp_2946;
  int prephitmp_2948;
  int prephitmp_2950;
  unsigned char pretmp_2951;
  unsigned char prephitmp_2952;
  int prephitmp_2953;
  int prephitmp_2954;
  int prephitmp_2955;
  int prephitmp_2956;
  int prephitmp_2957;
  int prephitmp_2958;
  int prephitmp_2960;
  int prephitmp_2962;
  unsigned char pretmp_2963;
  unsigned char prephitmp_2964;
  int prephitmp_2965;
  int prephitmp_2966;
  int prephitmp_2967;
  int prephitmp_2968;
  int prephitmp_2970;
  int prephitmp_2971;
  int prephitmp_2973;
  int prephitmp_2975;
  unsigned char pretmp_2976;
  unsigned char prephitmp_2977;
  int prephitmp_2978;
  int prephitmp_2979;
  int prephitmp_2980;
  int prephitmp_2981;
  int prephitmp_2982;
  int prephitmp_2983;
  int prephitmp_2985;
  int prephitmp_2987;
  unsigned char pretmp_2988;
  unsigned char prephitmp_2989;
  int prephitmp_2990;
  int prephitmp_2991;
  int prephitmp_2992;
  int prephitmp_2993;
  int prephitmp_2995;
  int prephitmp_2996;
  int prephitmp_2998;
  int prephitmp_3000;
  unsigned char pretmp_3001;
  unsigned char prephitmp_3002;
  int prephitmp_3003;
  int prephitmp_3004;
  int prephitmp_3005;
  int prephitmp_3006;
  int prephitmp_3007;
  int prephitmp_3008;
  int prephitmp_3010;
  int prephitmp_3012;
  unsigned char pretmp_3013;
  unsigned char prephitmp_3014;
  int prephitmp_3015;
  int prephitmp_3016;
  int prephitmp_3017;
  int prephitmp_3018;
  int prephitmp_3020;
  int prephitmp_3021;
  int prephitmp_3023;
  int prephitmp_3025;
  unsigned char pretmp_3026;
  unsigned char prephitmp_3027;
  int prephitmp_3028;
  int prephitmp_3029;
  int prephitmp_3030;
  int prephitmp_3031;
  int prephitmp_3032;
  int prephitmp_3033;
  int prephitmp_3035;
  int prephitmp_3037;
  unsigned char pretmp_3038;
  unsigned char prephitmp_3039;
  int prephitmp_3040;
  int prephitmp_3041;
  int prephitmp_3042;
  int prephitmp_3043;
  int prephitmp_3044;
  int prephitmp_3046;
  int prephitmp_3048;
  int prephitmp_3050;
  unsigned char pretmp_3051;
  unsigned char prephitmp_3052;
  int prephitmp_3053;
  int prephitmp_3054;
  int prephitmp_3055;
  int prephitmp_3056;
  int prephitmp_3057;
  int prephitmp_3058;
  int prephitmp_3060;
  int prephitmp_3062;
  unsigned char pretmp_3063;
  unsigned char prephitmp_3064;
  int prephitmp_3065;
  int prephitmp_3066;
  int prephitmp_3067;
  int prephitmp_3068;
  int prephitmp_3070;
  int prephitmp_3071;
  int prephitmp_3073;
  int prephitmp_3075;
  unsigned char pretmp_3076;
  unsigned char prephitmp_3077;
  int prephitmp_3078;
  int prephitmp_3079;
  int prephitmp_3080;
  int prephitmp_3081;
  int prephitmp_3082;
  int prephitmp_3083;
  int prephitmp_3084;
  int pretmp_3085;
  int prephitmp_3086;
  unsigned char pretmp_3087;
  unsigned char prephitmp_3088;
  int prephitmp_3089;
  int prephitmp_3090;
  int prephitmp_3091;
  int prephitmp_3092;
  int prephitmp_3094;
  int prephitmp_3095;
  int prephitmp_3096;
  int pretmp_3097;
  int prephitmp_3098;
  unsigned char pretmp_3099;
  unsigned char prephitmp_3100;
  int prephitmp_3101;
  int prephitmp_3102;
  int prephitmp_3103;
  int prephitmp_3104;
  int prephitmp_3105;
  int prephitmp_3106;
  int prephitmp_3107;
  int pretmp_3108;
  int prephitmp_3109;
  unsigned char pretmp_3110;
  unsigned char prephitmp_3111;
  int prephitmp_3112;
  int prephitmp_3113;
  int prephitmp_3114;
  int prephitmp_3115;
  int prephitmp_3116;
  int prephitmp_3118;
  int prephitmp_3119;
  int pretmp_3120;
  int prephitmp_3121;
  unsigned char pretmp_3122;
  unsigned char prephitmp_3123;
  int prephitmp_3124;
  int prephitmp_3125;
  int prephitmp_3126;
  int prephitmp_3127;
  int prephitmp_3128;
  int prephitmp_3129;
  int prephitmp_3130;
  int pretmp_3131;
  int prephitmp_3132;
  unsigned char pretmp_3133;
  unsigned char prephitmp_3134;
  int prephitmp_3135;
  int prephitmp_3136;
  int prephitmp_3137;
  int prephitmp_3138;
  int prephitmp_3139;
  int prephitmp_3140;
  int pretmp_3141;
  int prephitmp_3142;
  unsigned char pretmp_3143;
  unsigned char prephitmp_3144;
  int pretmp_3145;
  int prephitmp_3146;
  int prephitmp_3147;
  int prephitmp_3148;
  int prephitmp_3149;
  int prephitmp_3150;
  int prephitmp_3151;
  int prephitmp_3152;
  int prephitmp_3153;
  unsigned char pretmp_3154;
  unsigned char prephitmp_3155;
  int pretmp_3156;
  int prephitmp_3157;
  int prephitmp_3158;
  int prephitmp_3159;
  int prephitmp_3160;
  int prephitmp_3161;
  unsigned char pretmp_3162;
  unsigned char prephitmp_3163;
  int pretmp_3164;
  int prephitmp_3165;
  int pretmp_3166;
  int prephitmp_3167;
  int pretmp_3168;
  int prephitmp_3169;
  int pretmp_3170;
  int prephitmp_3171;
  unsigned char pretmp_3172;
  unsigned char prephitmp_3173;
  int pretmp_3174;
  int prephitmp_3175;
  int prephitmp_3177;
  int prephitmp_3179;
  int prephitmp_3180;
  int prephitmp_3181;
  int prephitmp_3183;
  int prephitmp_3185;
  int prephitmp_3186;
  int prephitmp_3187;
  int prephitmp_3189;
  int prephitmp_3191;
  int prephitmp_3192;
  int prephitmp_3193;
  int prephitmp_3195;
  int prephitmp_3197;
  int prephitmp_3198;
  int prephitmp_3199;
  int prephitmp_3201;
  int prephitmp_3203;
  int prephitmp_3204;
  int prephitmp_3205;
  int prephitmp_3207;
  int prephitmp_3209;
  int prephitmp_3210;
  int prephitmp_3211;
  int prephitmp_3213;
  int prephitmp_3215;
  int prephitmp_3216;
  int prephitmp_3217;
  int prephitmp_3219;
  int prephitmp_3221;
  int prephitmp_3222;
  int prephitmp_3223;
  int prephitmp_3225;
  int prephitmp_3227;
  int prephitmp_3228;
  int prephitmp_3229;
  int prephitmp_3231;
  int prephitmp_3233;
  int prephitmp_3234;
  int prephitmp_3235;
  int prephitmp_3237;
  int prephitmp_3239;
  int prephitmp_3241;
  int prephitmp_3243;
  int prephitmp_3244;
  int prephitmp_3245;
  int prephitmp_3246;
  int prephitmp_3247;
  int prephitmp_3249;
  int prephitmp_3251;
  int prephitmp_3252;
  int prephitmp_3253;
  int prephitmp_3255;
  int prephitmp_3257;
  int prephitmp_3259;
  int prephitmp_3260;
  int prephitmp_3261;
  int prephitmp_3262;
  int prephitmp_3264;
  int prephitmp_3266;
  int prephitmp_3267;
  int prephitmp_3268;
  int prephitmp_3270;
  int prephitmp_3272;
  int prephitmp_3274;
  int prephitmp_3275;
  int prephitmp_3276;
  int prephitmp_3277;
  int prephitmp_3279;
  int prephitmp_3281;
  int prephitmp_3282;
  int prephitmp_3283;
  int prephitmp_3285;
  int prephitmp_3287;
  int prephitmp_3289;
  int prephitmp_3290;
  int prephitmp_3291;
  int prephitmp_3292;
  int prephitmp_3294;
  int prephitmp_3296;
  int prephitmp_3297;
  int prephitmp_3298;
  int prephitmp_3300;
  int prephitmp_3302;
  int prephitmp_3304;
  int prephitmp_3305;
  int prephitmp_3306;
  int prephitmp_3307;
  int prephitmp_3309;
  int prephitmp_3311;
  int prephitmp_3312;
  int prephitmp_3313;
  int prephitmp_3315;
  int prephitmp_3317;
  int prephitmp_3319;
  int prephitmp_3320;
  int prephitmp_3321;
  int prephitmp_3322;
  int prephitmp_3324;
  int prephitmp_3325;
  int prephitmp_3327;
  int prephitmp_3329;
  int prephitmp_3330;
  int prephitmp_3331;
  int prephitmp_3333;
  int prephitmp_3334;
  int prephitmp_3336;
  int prephitmp_3338;
  int prephitmp_3339;
  int prephitmp_3340;
  int prephitmp_3342;
  int prephitmp_3343;
  int prephitmp_3345;
  int prephitmp_3347;
  int prephitmp_3348;
  int prephitmp_3349;
  int prephitmp_3351;
  int prephitmp_3352;
  int prephitmp_3354;
  int prephitmp_3356;
  int prephitmp_3357;
  int prephitmp_3358;
  int prephitmp_3360;
  int prephitmp_3362;
  int prephitmp_3363;
  int prephitmp_3364;
  int prephitmp_3366;
  int prephitmp_3368;
  int prephitmp_3369;
  int prephitmp_3370;
  int prephitmp_3372;
  int prephitmp_3374;
  int prephitmp_3375;
  int prephitmp_3376;
  int prephitmp_3378;
  int prephitmp_3380;
  int prephitmp_3381;
  int prephitmp_3382;
  int prephitmp_3384;
  int prephitmp_3386;
  int prephitmp_3387;
  int prephitmp_3388;
  int prephitmp_3390;
  int prephitmp_3392;
  int prephitmp_3393;
  int prephitmp_3394;
  int prephitmp_3396;
  int prephitmp_3398;
  int prephitmp_3399;
  int prephitmp_3400;
  int prephitmp_3402;
  int prephitmp_3404;
  int prephitmp_3405;
  int prephitmp_3406;
  int prephitmp_3408;
  int prephitmp_3410;
  int prephitmp_3411;
  int prephitmp_3412;
  int prephitmp_3414;
  int prephitmp_3416;
  int prephitmp_3418;
  int prephitmp_3420;
  int prephitmp_3421;
  int prephitmp_3422;
  int prephitmp_3423;
  int prephitmp_3424;
  int prephitmp_3426;
  int prephitmp_3428;
  int prephitmp_3429;
  int prephitmp_3430;
  int prephitmp_3432;
  int prephitmp_3434;
  int prephitmp_3435;
  int prephitmp_3436;
  int prephitmp_3438;
  int prephitmp_3439;
  int prephitmp_3441;
  int prephitmp_3443;
  int prephitmp_3444;
  int prephitmp_3445;
  int prephitmp_3447;
  int prephitmp_3448;
  int prephitmp_3450;
  int prephitmp_3452;
  int prephitmp_3453;
  int prephitmp_3454;
  int prephitmp_3456;
  int prephitmp_3457;
  int prephitmp_3459;
  int prephitmp_3461;
  int prephitmp_3462;
  int prephitmp_3463;
  int prephitmp_3465;
  int prephitmp_3466;
  int prephitmp_3468;
  int prephitmp_3470;
  int prephitmp_3472;
  int prephitmp_3473;
  int prephitmp_3474;
  int prephitmp_3475;
  int prephitmp_3477;
  int prephitmp_3478;
  int prephitmp_3480;
  int prephitmp_3482;
  int prephitmp_3483;
  int prephitmp_3484;
  int prephitmp_3486;
  int prephitmp_3487;
  int prephitmp_3489;
  int prephitmp_3491;
  int prephitmp_3492;
  int prephitmp_3493;
  int prephitmp_3495;
  int prephitmp_3496;
  int prephitmp_3498;
  int prephitmp_3500;
  int prephitmp_3501;
  int prephitmp_3502;
  int prephitmp_3504;
  int prephitmp_3505;
  int prephitmp_3507;
  int prephitmp_3508;
  int prephitmp_3510;
  int prephitmp_3511;
  int prephitmp_3513;
  int prephitmp_3514;
  int prephitmp_3516;
  int prephitmp_3518;
  int prephitmp_3519;
  int prephitmp_3520;
  int prephitmp_3522;
  int prephitmp_3523;
  int prephitmp_3525;
  int prephitmp_3527;
  int prephitmp_3528;
  int prephitmp_3529;
  int prephitmp_3531;
  int prephitmp_3532;
  int prephitmp_3534;
  int prephitmp_3535;
  int prephitmp_3537;
  int prephitmp_3538;
  int prephitmp_3540;
  int prephitmp_3542;
  int prephitmp_3544;
  int prephitmp_3545;
  int prephitmp_3546;
  int prephitmp_3547;
  int prephitmp_3549;
  int prephitmp_3551;
  int prephitmp_3552;
  int prephitmp_3553;
  int prephitmp_3555;
  int prephitmp_3556;
  int prephitmp_3558;
  int prephitmp_3559;
  int prephitmp_3561;
  int prephitmp_3563;
  int prephitmp_3564;
  int prephitmp_3565;
  int prephitmp_3567;
  int prephitmp_3568;
  int prephitmp_3570;
  int prephitmp_3572;
  int prephitmp_3573;
  int prephitmp_3574;
  int prephitmp_3576;
  int prephitmp_3577;
  int prephitmp_3579;
  int prephitmp_3581;
  int prephitmp_3582;
  int prephitmp_3583;
  int prephitmp_3585;
  int prephitmp_3586;
  int prephitmp_3588;
  int prephitmp_3590;
  int prephitmp_3591;
  int prephitmp_3592;
  int prephitmp_3594;
  int prephitmp_3595;
  int prephitmp_3597;
  int prephitmp_3598;
  int prephitmp_3600;
  int prephitmp_3601;
  int prephitmp_3603;
  int prephitmp_3604;
  int prephitmp_3606;
  int prephitmp_3607;
  int prephitmp_3609;
  int prephitmp_3610;
  int prephitmp_3612;
  int prephitmp_3613;
  int prephitmp_3615;
  int prephitmp_3616;
  int prephitmp_3618;
  int prephitmp_3619;
  int prephitmp_3621;
  int prephitmp_3622;
  int prephitmp_3624;
  int prephitmp_3626;
  int prephitmp_3627;
  int prephitmp_3628;
  int prephitmp_3630;
  int prephitmp_3631;
  int prephitmp_3633;
  int prephitmp_3635;
  int prephitmp_3636;
  int prephitmp_3637;
  int prephitmp_3639;
  int prephitmp_3640;
  int prephitmp_3642;
  int prephitmp_3643;
  int prephitmp_3645;
  int prephitmp_3646;
  int prephitmp_3648;
  int prephitmp_3650;
  int prephitmp_3651;
  int prephitmp_3652;
  int prephitmp_3654;
  int prephitmp_3655;
  int prephitmp_3657;
  int prephitmp_3658;
  int prephitmp_3660;
  int prephitmp_3662;
  int prephitmp_3663;
  int prephitmp_3664;
  int prephitmp_3666;
  int prephitmp_3667;
  int prephitmp_3669;
  int prephitmp_3671;
  int prephitmp_3672;
  int prephitmp_3673;
  int prephitmp_3675;
  int prephitmp_3676;
  int prephitmp_3678;
  int prephitmp_3680;
  int prephitmp_3681;
  int prephitmp_3682;
  int prephitmp_3684;
  int prephitmp_3685;
  int prephitmp_3687;
  int prephitmp_3688;
  int prephitmp_3690;
  int prephitmp_3691;
  int prephitmp_3693;
  int prephitmp_3694;
  int prephitmp_3696;
  int prephitmp_3697;
  int prephitmp_3699;
  int prephitmp_3700;
  int prephitmp_3702;
  int prephitmp_3703;
  int prephitmp_3705;
  int prephitmp_3706;
  int prephitmp_3708;
  int prephitmp_3709;
  int prephitmp_3711;
  int prephitmp_3712;
  int prephitmp_3714;
  int prephitmp_3715;
  int prephitmp_3717;
  int prephitmp_3718;
  int prephitmp_3720;
  int prephitmp_3721;
  int prephitmp_3723;
  int prephitmp_3724;
  int prephitmp_3726;
  int prephitmp_3727;
  int prephitmp_3729;
  int prephitmp_3730;
  int prephitmp_3732;
  int prephitmp_3733;
  int prephitmp_3735;
  int prephitmp_3736;
  int prephitmp_3738;
  int prephitmp_3739;
  int prephitmp_3741;
  int prephitmp_3742;
  int prephitmp_3744;
  int prephitmp_3745;
  int prephitmp_3747;
  int prephitmp_3748;
  int prephitmp_3750;
  int prephitmp_3751;
  int prephitmp_3753;
  int prephitmp_3754;
  int prephitmp_3756;
  int prephitmp_3757;
  int prephitmp_3759;
  int prephitmp_3760;
  int prephitmp_3762;
  int prephitmp_3763;
  int prephitmp_3765;
  int prephitmp_3766;
  int prephitmp_3768;
  int prephitmp_3769;
  int prephitmp_3771;
  int prephitmp_3772;
  int prephitmp_3774;
  int prephitmp_3775;
  int prephitmp_3777;
  int prephitmp_3778;
  int prephitmp_3780;
  int prephitmp_3781;
  int prephitmp_3783;
  int prephitmp_3784;
  int prephitmp_3786;
  int prephitmp_3787;
  int prephitmp_3789;
  int prephitmp_3790;
  int prephitmp_3792;
  int prephitmp_3793;
  int prephitmp_3795;
  int prephitmp_3796;
  int prephitmp_3798;
  int prephitmp_3799;
  int prephitmp_3801;
  int prephitmp_3802;
  int prephitmp_3804;
  int prephitmp_3805;

  <bb 2>:
  # DEBUG h => h_2(D)
  # DEBUG m0 => m0_3(D)
  # DEBUG m1 => m1_4(D)
  # DEBUG i_weight => i_weight_5(D)
  # DEBUG i8 => 0
  # DEBUG i_lambda2 => 0
  # DEBUG rd => 0
  # DEBUG D#5 => &h_2(D)->mb.cache.mv[0][12]
  # DEBUG cache0_mv => D#5
  # DEBUG D#107 => m0_3(D)->i_pixel
  # DEBUG D#4 => pixel_mv_offs[D#107]
  # DEBUG D#3 => (long unsigned int) D#4
  # DEBUG D#2 => D#3 * 2
  # DEBUG cache0_mv2 => D#5 + D#2
  # DEBUG D#1 => &h_2(D)->mb.cache.mv[1][12]
  # DEBUG cache1_mv => D#1
  # DEBUG cache1_mv2 => D#1 + D#2
  # DEBUG i_pixel => D#107
  # DEBUG D#106 => x264_pixel_size[D#107].w
  # DEBUG bw => D#106
  # DEBUG D#105 => x264_pixel_size[D#107].h
  # DEBUG bh => D#105
  # DEBUG D#104 => m0_3(D)->p_cost_mv
  _11 = h_2(D)->mb.mv_max_spel[0];
  _12 = h_2(D)->mb.mv_min_spel[0];
  _13 = m0_3(D)->mvp[0];
  _14 = (int) _13;
  # DEBUG v => _14
  # DEBUG i_min => _12
  # DEBUG i_max => _11
  if (_12 <= _14)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  iftmp.14_2130 = MIN_EXPR <_11, _14>;

  <bb 4>:
  # iftmp.14_2131 = PHI <_12(2), iftmp.14_2130(3)>
  # DEBUG v => NULL
  # DEBUG i_min => NULL
  # DEBUG i_max => NULL
  # DEBUG D#103 => (long unsigned int) iftmp.14_2131
  # DEBUG D#102 => D#103 * 2
  # DEBUG D#101 => -D#102
  # DEBUG p_cost_m0x => D#104 + D#101
  _20 = m0_3(D)->mvp[1];
  _21 = (int) _20;
  # DEBUG v => _21
  # DEBUG i_min => _12
  # DEBUG i_max => _11
  if (_12 <= _21)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  iftmp.14_2128 = MIN_EXPR <_11, _21>;

  <bb 6>:
  # iftmp.14_2129 = PHI <_12(4), iftmp.14_2128(5)>
  # DEBUG v => NULL
  # DEBUG i_min => NULL
  # DEBUG i_max => NULL
  # DEBUG D#100 => (long unsigned int) iftmp.14_2129
  # DEBUG D#99 => D#100 * 2
  # DEBUG D#98 => -D#99
  # DEBUG p_cost_m0y => D#104 + D#98
  # DEBUG D#97 => m1_4(D)->p_cost_mv
  _28 = m1_4(D)->mvp[0];
  _29 = (int) _28;
  # DEBUG v => _29
  # DEBUG i_min => _12
  # DEBUG i_max => _11
  if (_12 <= _29)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  iftmp.14_2126 = MIN_EXPR <_11, _29>;

  <bb 8>:
  # iftmp.14_2127 = PHI <_12(6), iftmp.14_2126(7)>
  # DEBUG v => NULL
  # DEBUG i_min => NULL
  # DEBUG i_max => NULL
  # DEBUG D#96 => (long unsigned int) iftmp.14_2127
  # DEBUG D#95 => D#96 * 2
  # DEBUG D#94 => -D#95
  # DEBUG p_cost_m1x => D#97 + D#94
  _35 = m1_4(D)->mvp[1];
  _36 = (int) _35;
  # DEBUG v => _36
  # DEBUG i_min => _12
  # DEBUG i_max => _11
  if (_12 <= _36)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  iftmp.14_6 = MIN_EXPR <_11, _36>;

  <bb 10>:
  # iftmp.14_2125 = PHI <_12(8), iftmp.14_6(9)>
  # DEBUG v => NULL
  # DEBUG i_min => NULL
  # DEBUG i_max => NULL
  # DEBUG D#93 => (long unsigned int) iftmp.14_2125
  # DEBUG D#92 => D#93 * 2
  # DEBUG D#91 => -D#92
  # DEBUG p_cost_m1y => D#97 + D#91
  # DEBUG D#90 => m0_3(D)->mv[0]
  # DEBUG D#89 => (int) D#90
  # DEBUG bm0x => D#89
  # DEBUG om0x => D#89
  _44 = m0_3(D)->mv[1];
  bm0y_45 = (int) _44;
  # DEBUG bm0y => bm0y_45
  # DEBUG om0y => bm0y_45
  # DEBUG D#88 => m1_4(D)->mv[0]
  # DEBUG D#87 => (int) D#88
  # DEBUG bm1x => D#87
  # DEBUG om1x => D#87
  _48 = m1_4(D)->mv[1];
  bm1y_49 = (int) _48;
  # DEBUG bm1y => bm1y_49
  # DEBUG om1y => bm1y_49
  # DEBUG bcost => 268435456
  # DEBUG pass => 0
  # DEBUG bcostrd => 1152921504606846976
  _50 = h_2(D)->mb.mv_max_spel[1];
  _51 = _50 + -7;
  _37 = bm1y_49 >= _51;
  _1996 = bm0y_45 >= _51;
  _15 = _37 | _1996;
  if (_15 != 0)
    goto <bb 183>;
  else
    goto <bb 11>;

  <bb 11>:
  _7 = m0_3(D)->i_pixel;
  bw_8 = x264_pixel_size[_7].w;
  bh_9 = x264_pixel_size[_7].h;
  _10 = m0_3(D)->p_cost_mv;
  _16 = (long unsigned int) iftmp.14_2131;
  _17 = _16 * 2;
  _18 = -_17;
  p_cost_m0x_19 = _10 + _18;
  _23 = (long unsigned int) iftmp.14_2129;
  _24 = _23 * 2;
  _25 = -_24;
  p_cost_m0y_26 = _10 + _25;
  _27 = m1_4(D)->p_cost_mv;
  _31 = (long unsigned int) iftmp.14_2127;
  _32 = _31 * 2;
  _33 = -_32;
  p_cost_m1x_34 = _27 + _33;
  _38 = (long unsigned int) iftmp.14_2125;
  _39 = _38 * 2;
  _40 = -_39;
  p_cost_m1y_41 = _27 + _40;
  _42 = m0_3(D)->mv[0];
  bm0x_43 = (int) _42;
  _46 = m1_4(D)->mv[0];
  bm1x_47 = (int) _46;
  _52 = h_2(D)->mc.memzero_aligned;
  _52 (&visited, 512);
  # DEBUG i => 4
  stride0[4] = bw_8;
  stride1[4] = bw_8;
  _53 = h_2(D)->mc.get_ref;
  _54 = m0_3(D)->i_stride[0];
  _55 = &m0_3(D)->p_fref;
  src0$4_56 = _53 (&MEM[(void *)&pix0 + 1024B], &MEM[(void *)&stride0 + 16B], _55, _54, bm0x_43, bm0y_45, bw_8, bh_9);
  # DEBUG src0$4 => src0$4_56
  _57 = h_2(D)->mc.get_ref;
  _58 = m1_4(D)->i_stride[0];
  _59 = &m1_4(D)->p_fref;
  src1$4_60 = _57 (&MEM[(void *)&pix1 + 1024B], &MEM[(void *)&stride1 + 16B], _59, _58, bm1x_47, bm1y_49, bw_8, bh_9);
  # DEBUG src1$4 => src1$4_60
  # DEBUG i0 => 4
  # DEBUG i1 => 4
  _61 = _42 & 7;
  _62 = _44 & 7;
  _63 = _46 & 7;
  _64 = (int) _61;
  _65 = (int) _62;
  _66 = (int) _63;
  _67 = visited[_64][_65][_66];
  _68 = (signed char) _67;
  _69 = _48 & 7;
  _70 = (int) _69;
  _71 = 1 << _70;
  _72 = (signed char) _71;
  _73 = _68 | _72;
  _74 = (unsigned char) _73;
  visited[_64][_65][_66] = _74;
  _75 = h_2(D)->mc.avg[_7];
  _76 = stride1[4];
  _77 = stride0[4];
  _75 (&pix, bw_8, src0$4_56, _77, src1$4_60, _76, i_weight_5(D));
  _78 = h_2(D)->pixf.mbcmp[_7];
  _79 = m0_3(D)->p_fenc[0];
  _80 = _78 (_79, 16, &pix, bw_8);
  _81 = (long unsigned int) _42;
  _82 = _81 * 2;
  _83 = p_cost_m0x_19 + _82;
  _84 = *_83;
  _85 = (int) _84;
  _86 = _80 + _85;
  _87 = (long unsigned int) _44;
  _88 = _87 * 2;
  _89 = p_cost_m0y_26 + _88;
  _90 = *_89;
  _91 = (int) _90;
  _92 = _86 + _91;
  _93 = (long unsigned int) _46;
  _94 = _93 * 2;
  _95 = p_cost_m1x_34 + _94;
  _96 = *_95;
  _97 = (int) _96;
  _98 = _92 + _97;
  _99 = (long unsigned int) _48;
  _100 = _99 * 2;
  _101 = p_cost_m1y_41 + _100;
  _102 = *_101;
  _103 = (int) _102;
  bcost_104 = _98 + _103;
  # DEBUG cost => bcost_104
  if (bcost_104 <= 268435455)
    goto <bb 13>;
  else
    goto <bb 12>;

  <bb 12>:

  <bb 13>:
  # bcost_30 = PHI <bcost_104(11), 268435456(12)>
  # DEBUG src1$4 => src1$4_60
  # DEBUG src0$4 => src0$4_56
  # DEBUG bcostrd => 1152921504606846976
  # DEBUG pass => 0
  # DEBUG bcost => bcost_30
  # DEBUG om1y => bm1y_49
  # DEBUG bm1y => bm1y_49
  # DEBUG om1x => D#87
  # DEBUG bm1x => D#87
  # DEBUG om0y => bm0y_45
  # DEBUG bm0y => bm0y_45
  # DEBUG om0x => D#89
  # DEBUG bm0x => D#89

  <bb 14>:
  # bm0x_2325 = PHI <bm0x_1968(182), bm0x_43(13)>
  # bm0y_2323 = PHI <bm0y_1970(182), bm0y_45(13)>
  # bm1x_2326 = PHI <bm1x_1973(182), bm1x_47(13)>
  # bm1y_2324 = PHI <bm1y_1975(182), bm1y_49(13)>
  # pass_2189 = PHI <pass_1984(182), 0(13)>
  # src0$4_2156 = PHI <src0$4_1980(182), src0$4_56(13)>
  # bcost_2267 = PHI <bcost_2124(182), bcost_30(13)>
  # src1$4_2157 = PHI <src1$4_1983(182), src1$4_60(13)>
  # ivtmp_2777 = PHI <ivtmp_2776(182), 8(13)>
  # DEBUG src1$4 => src1$4_2157
  # DEBUG src0$4 => src0$4_2156
  # DEBUG bcostrd => 1152921504606846976
  # DEBUG pass => pass_2189
  # DEBUG bcost => bcost_2267
  # DEBUG om1y => bm1y_2324
  # DEBUG bm1y => bm1y_2324
  # DEBUG om1x => bm1x_2326
  # DEBUG bm1x => bm1x_2326
  # DEBUG om0y => bm0y_2323
  # DEBUG bm0y => bm0y_2323
  # DEBUG om0x => bm0x_2325
  # DEBUG bm0x => bm0x_2325
  # DEBUG i => 7
  stride0[7] = bw_8;
  stride1[7] = bw_8;
  _105 = h_2(D)->mc.get_ref;
  bm0x_107 = bm0x_2325 + 1;
  _108 = m0_3(D)->i_stride[0];
  _110 = _105 (&MEM[(void *)&pix0 + 1792B], &MEM[(void *)&stride0 + 28B], _55, _108, bm0x_107, bm0y_2323, bw_8, bh_9);
  # DEBUG src0$7 => _110
  _111 = h_2(D)->mc.get_ref;
  bm1x_113 = bm1x_2326 + 1;
  _114 = m1_4(D)->i_stride[0];
  _116 = _111 (&MEM[(void *)&pix1 + 1792B], &MEM[(void *)&stride1 + 28B], _59, _114, bm1x_113, bm1y_2324, bw_8, bh_9);
  # DEBUG src1$7 => _116
  # DEBUG i => 1
  stride0[1] = bw_8;
  stride1[1] = bw_8;
  _117 = h_2(D)->mc.get_ref;
  bm0x_118 = bm0x_2325 + -1;
  _119 = m0_3(D)->i_stride[0];
  _120 = _117 (&MEM[(void *)&pix0 + 256B], &MEM[(void *)&stride0 + 4B], _55, _119, bm0x_118, bm0y_2323, bw_8, bh_9);
  # DEBUG src0$1 => _120
  _121 = h_2(D)->mc.get_ref;
  bm1x_122 = bm1x_2326 + -1;
  _123 = m1_4(D)->i_stride[0];
  _124 = _121 (&MEM[(void *)&pix1 + 256B], &MEM[(void *)&stride1 + 4B], _59, _123, bm1x_122, bm1y_2324, bw_8, bh_9);
  # DEBUG src1$1 => _124
  # DEBUG i => 5
  stride0[5] = bw_8;
  stride1[5] = bw_8;
  _125 = h_2(D)->mc.get_ref;
  bm0y_126 = bm0y_2323 + 1;
  _127 = m0_3(D)->i_stride[0];
  _128 = _125 (&MEM[(void *)&pix0 + 1280B], &MEM[(void *)&stride0 + 20B], _55, _127, bm0x_2325, bm0y_126, bw_8, bh_9);
  # DEBUG src0$5 => _128
  _129 = h_2(D)->mc.get_ref;
  bm1y_130 = bm1y_2324 + 1;
  _131 = m1_4(D)->i_stride[0];
  _132 = _129 (&MEM[(void *)&pix1 + 1280B], &MEM[(void *)&stride1 + 20B], _59, _131, bm1x_2326, bm1y_130, bw_8, bh_9);
  # DEBUG src1$5 => _132
  # DEBUG i => 3
  stride0[3] = bw_8;
  stride1[3] = bw_8;
  _133 = h_2(D)->mc.get_ref;
  bm0y_134 = bm0y_2323 + -1;
  _135 = m0_3(D)->i_stride[0];
  _136 = _133 (&MEM[(void *)&pix0 + 768B], &MEM[(void *)&stride0 + 12B], _55, _135, bm0x_2325, bm0y_134, bw_8, bh_9);
  # DEBUG src0$3 => _136
  _137 = h_2(D)->mc.get_ref;
  bm1y_138 = bm1y_2324 + -1;
  _139 = m1_4(D)->i_stride[0];
  _140 = _137 (&MEM[(void *)&pix1 + 768B], &MEM[(void *)&stride1 + 12B], _59, _139, bm1x_2326, bm1y_138, bw_8, bh_9);
  # DEBUG src1$3 => _140
  # DEBUG i => 8
  stride0[8] = bw_8;
  stride1[8] = bw_8;
  _141 = h_2(D)->mc.get_ref;
  _142 = m0_3(D)->i_stride[0];
  _143 = _141 (&MEM[(void *)&pix0 + 2048B], &MEM[(void *)&stride0 + 32B], _55, _142, bm0x_107, bm0y_126, bw_8, bh_9);
  # DEBUG src0$8 => _143
  _144 = h_2(D)->mc.get_ref;
  _145 = m1_4(D)->i_stride[0];
  _146 = _144 (&MEM[(void *)&pix1 + 2048B], &MEM[(void *)&stride1 + 32B], _59, _145, bm1x_113, bm1y_130, bw_8, bh_9);
  # DEBUG src1$8 => _146
  # DEBUG i => 0
  stride0[0] = bw_8;
  stride1[0] = bw_8;
  _147 = h_2(D)->mc.get_ref;
  _148 = m0_3(D)->i_stride[0];
  _149 = _147 (&MEM[(void *)&pix0], &MEM[(void *)&stride0], _55, _148, bm0x_118, bm0y_134, bw_8, bh_9);
  # DEBUG src0$0 => _149
  _150 = h_2(D)->mc.get_ref;
  _151 = m1_4(D)->i_stride[0];
  _152 = _150 (&MEM[(void *)&pix1], &MEM[(void *)&stride1], _59, _151, bm1x_122, bm1y_138, bw_8, bh_9);
  # DEBUG src1$0 => _152
  # DEBUG i => 6
  stride0[6] = bw_8;
  stride1[6] = bw_8;
  _153 = h_2(D)->mc.get_ref;
  _154 = m0_3(D)->i_stride[0];
  _155 = _153 (&MEM[(void *)&pix0 + 1536B], &MEM[(void *)&stride0 + 24B], _55, _154, bm0x_107, bm0y_134, bw_8, bh_9);
  # DEBUG src0$6 => _155
  _156 = h_2(D)->mc.get_ref;
  _157 = m1_4(D)->i_stride[0];
  _158 = _156 (&MEM[(void *)&pix1 + 1536B], &MEM[(void *)&stride1 + 24B], _59, _157, bm1x_113, bm1y_138, bw_8, bh_9);
  # DEBUG src1$6 => _158
  # DEBUG i => 2
  stride0[2] = bw_8;
  stride1[2] = bw_8;
  _159 = h_2(D)->mc.get_ref;
  _160 = m0_3(D)->i_stride[0];
  _161 = _159 (&MEM[(void *)&pix0 + 512B], &MEM[(void *)&stride0 + 8B], _55, _160, bm0x_118, bm0y_126, bw_8, bh_9);
  # DEBUG src0$2 => _161
  _162 = h_2(D)->mc.get_ref;
  _163 = m1_4(D)->i_stride[0];
  _164 = _162 (&MEM[(void *)&pix1 + 512B], &MEM[(void *)&stride1 + 8B], _59, _163, bm1x_122, bm1y_130, bw_8, bh_9);
  # DEBUG src1$2 => _164
  if (pass_2189 == 0)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 15>:
  pretmp_3166 = bm0x_2325 & 7;
  pretmp_3168 = bm0y_2323 & 7;
  pretmp_3170 = bm1x_2326 & 7;
  pretmp_3172 = visited[pretmp_3166][pretmp_3168][pretmp_3170];
  pretmp_3174 = bm1y_130 & 7;
  goto <bb 17>;

  <bb 16>:
  _166 = bm0x_2325 & 7;
  _167 = bm0y_2323 & 7;
  _168 = bm1x_2326 & 7;
  _169 = visited[_166][_167][_168];
  _170 = (int) _169;
  _171 = bm1y_130 & 7;
  _172 = _170 >> _171;
  _173 = _172 & 1;
  if (_173 == 0)
    goto <bb 17>;
  else
    goto <bb 22>;

  <bb 17>:
  # prephitmp_3167 = PHI <pretmp_3166(15), _166(16)>
  # prephitmp_3169 = PHI <pretmp_3168(15), _167(16)>
  # prephitmp_3171 = PHI <pretmp_3170(15), _168(16)>
  # prephitmp_3173 = PHI <pretmp_3172(15), _169(16)>
  # prephitmp_3175 = PHI <pretmp_3174(15), _171(16)>
  # DEBUG i0 => 4
  # DEBUG i1 => 5
  _178 = (signed char) prephitmp_3173;
  _180 = 1 << prephitmp_3175;
  _181 = (signed char) _180;
  _182 = _178 | _181;
  _183 = (unsigned char) _182;
  visited[prephitmp_3167][prephitmp_3169][prephitmp_3171] = _183;
  _184 = h_2(D)->mc.avg[_7];
  _185 = stride1[5];
  _186 = stride0[4];
  _184 (&pix, bw_8, src0$4_2156, _186, _132, _185, i_weight_5(D));
  _188 = h_2(D)->pixf.mbcmp[_7];
  _189 = m0_3(D)->p_fenc[0];
  _190 = _188 (_189, 16, &pix, bw_8);
  _191 = (long unsigned int) bm0x_2325;
  _192 = _191 * 2;
  _193 = p_cost_m0x_19 + _192;
  _194 = *_193;
  _195 = (int) _194;
  _196 = _190 + _195;
  _197 = (long unsigned int) bm0y_2323;
  _198 = _197 * 2;
  _199 = p_cost_m0y_26 + _198;
  _200 = *_199;
  _201 = (int) _200;
  _202 = _196 + _201;
  _203 = (long unsigned int) bm1x_2326;
  _204 = _203 * 2;
  _205 = p_cost_m1x_34 + _204;
  _206 = *_205;
  _207 = (int) _206;
  _208 = _202 + _207;
  _209 = (sizetype) bm1y_2324;
  _210 = _209 + 1;
  _211 = _210 * 2;
  _212 = p_cost_m1y_41 + _211;
  _213 = *_212;
  _214 = (int) _213;
  bcost_215 = _208 + _214;
  # DEBUG cost => bcost_215
  if (bcost_215 < bcost_2267)
    goto <bb 19>;
  else
    goto <bb 18>;

  <bb 18>:

  <bb 19>:
  # bm1y_1997 = PHI <bm1y_2324(18), bm1y_130(17)>
  # bcost_266 = PHI <bcost_2267(18), bcost_215(17)>
  # DEBUG bcostrd => 1152921504606846976
  # DEBUG bcost => bcost_266
  # DEBUG bm1y => bm1y_1997
  # DEBUG bm1x => bm1x_2326
  # DEBUG bm0y => bm0y_2323
  # DEBUG bm0x => bm0x_2325
  if (pass_2189 == 0)
    goto <bb 20>;
  else
    goto <bb 21>;

  <bb 20>:
  pretmp_3154 = visited[prephitmp_3167][prephitmp_3169][prephitmp_3171];
  pretmp_3156 = bm1y_138 & 7;
  goto <bb 23>;

  <bb 21>:
  pretmp_3162 = visited[prephitmp_3167][prephitmp_3169][prephitmp_3171];
  pretmp_3164 = (int) pretmp_3162;

  <bb 22>:
  # bcost_2266 = PHI <bcost_266(21), bcost_2267(16)>
  # bm1y_2443 = PHI <bm1y_1997(21), bm1y_2324(16)>
  # prephitmp_3158 = PHI <prephitmp_3167(21), _166(16)>
  # prephitmp_3159 = PHI <prephitmp_3169(21), _167(16)>
  # prephitmp_3160 = PHI <prephitmp_3171(21), _168(16)>
  # prephitmp_3161 = PHI <prephitmp_3175(21), _171(16)>
  # prephitmp_3163 = PHI <pretmp_3162(21), _169(16)>
  # prephitmp_3165 = PHI <pretmp_3164(21), _170(16)>
  # DEBUG bcostrd => 1152921504606846976
  # DEBUG bcost => bcost_2266
  # DEBUG bm1y => bm1y_2443
  # DEBUG bm1x => bm1x_2326
  # DEBUG bm0y => bm0y_2323
  # DEBUG bm0x => bm0x_2325
  _222 = bm1y_138 & 7;
  _223 = prephitmp_3165 >> _222;
  _224 = _223 & 1;
  if (_224 == 0)
    goto <bb 23>;
  else
    goto <bb 27>;

  <bb 23>:
  # bcost_2321 = PHI <bcost_266(20), bcost_2266(22)>
  # bm1y_2444 = PHI <bm1y_1997(20), bm1y_2443(22)>
  # prephitmp_3151 = PHI <prephitmp_3167(20), prephitmp_3158(22)>
  # prephitmp_3152 = PHI <prephitmp_3169(20), prephitmp_3159(22)>
  # prephitmp_3153 = PHI <prephitmp_3171(20), prephitmp_3160(22)>
  # prephitmp_3155 = PHI <pretmp_3154(20), prephitmp_3163(22)>
  # prephitmp_3157 = PHI <pretmp_3156(20), _222(22)>
  # prephitmp_3352 = PHI <prephitmp_3175(20), prephitmp_3161(22)>
  # DEBUG i0 => 4
  # DEBUG i1 => 3
  _229 = (signed char) prephitmp_3155;
  _231 = 1 << prephitmp_3157;
  _232 = (signed char) _231;
  _233 = _229 | _232;
  _234 = (unsigned char) _233;
  visited[prephitmp_3151][prephitmp_3152][prephitmp_3153] = _234;
  _235 = h_2(D)->mc.avg[_7];
  _236 = stride1[3];
  _237 = stride0[4];
  _235 (&pix, bw_8, src0$4_2156, _237, _140, _236, i_weight_5(D));
  _238 = h_2(D)->pixf.mbcmp[_7];
  _239 = m0_3(D)->p_fenc[0];
  _240 = _238 (_239, 16, &pix, bw_8);
  _241 = (long unsigned int) bm0x_2325;
  _242 = _241 * 2;
  _243 = p_cost_m0x_19 + _242;
  _244 = *_243;
  _245 = (int) _244;
  _246 = _240 + _245;
  _247 = (long unsigned int) bm0y_2323;
  _248 = _247 * 2;
  _249 = p_cost_m0y_26 + _248;
  _250 = *_249;
  _251 = (int) _250;
  _252 = _246 + _251;
  _253 = (long unsigned int) bm1x_2326;
  _254 = _253 * 2;
  _255 = p_cost_m1x_34 + _254;
  _256 = *_255;
  _257 = (int) _256;
  _258 = _252 + _257;
  _259 = (long unsigned int) bm1y_2324;
  _260 = _259 * 2;
  _261 = _260 + 18446744073709551614;
  _262 = p_cost_m1y_41 + _261;
  _263 = *_262;
  _264 = (int) _263;
  bcost_265 = _258 + _264;
  # DEBUG cost => bcost_265
  if (bcost_265 < bcost_2321)
    goto <bb 25>;
  else
    goto <bb 24>;

  <bb 24>:

  <bb 25>:
  # bm1y_1998 = PHI <bm1y_2444(24), bm1y_138(23)>
  # bcost_316 = PHI <bcost_2321(24), bcost_265(23)>
  # DEBUG bcostrd => 1152921504606846976
  # DEBUG bcost => bcost_316
  # DEBUG bm1y => bm1y_1998
  # DEBUG bm1x => bm1x_2326
  # DEBUG bm0y => bm0y_2323
  # DEBUG bm0x => bm0x_2325
  if (pass_2189 == 0)
    goto <bb 26>;
  else
    goto <bb 27>;

  <bb 26>:
  pretmp_3141 = bm1x_113 & 7;
  pretmp_3143 = visited[prephitmp_3151][prephitmp_3152][pretmp_3141];
  pretmp_3145 = bm1y_2324 & 7;
  goto <bb 28>;

  <bb 27>:
  # bcost_2319 = PHI <bcost_316(25), bcost_2266(22)>
  # bm1y_2445 = PHI <bm1y_1998(25), bm1y_2443(22)>
  # prephitmp_3147 = PHI <prephitmp_3151(25), prephitmp_3158(22)>
  # prephitmp_3148 = PHI <prephitmp_3152(25), prephitmp_3159(22)>
  # prephitmp_3149 = PHI <prephitmp_3153(25), prephitmp_3160(22)>
  # prephitmp_3150 = PHI <prephitmp_3157(25), _222(22)>
  # prephitmp_3351 = PHI <prephitmp_3352(25), prephitmp_3161(22)>
  # DEBUG bcostrd => 1152921504606846976
  # DEBUG bcost => bcost_2319
  # DEBUG bm1y => bm1y_2445
  # DEBUG bm1x => bm1x_2326
  # DEBUG bm0y => bm0y_2323
  # DEBUG bm0x => bm0x_2325
  _269 = bm1x_113 & 7;
  _270 = visited[prephitmp_3147][prephitmp_3148][_269];
  _271 = (int) _270;
  _272 = bm1y_2324 & 7;
  _273 = _271 >> _272;
  _274 = _273 & 1;
  if (_274 == 0)
    goto <bb 28>;
  else
    goto <bb 32>;

  <bb 28>:
  # bcost_2322 = PHI <bcost_316(26), bcost_2319(27)>
  # bm1y_2446 = PHI <bm1y_1998(26), bm1y_2445(27)>
  # prephitmp_3139 = PHI <prephitmp_3151(26), prephitmp_3147(27)>
  # prephitmp_3140 = PHI <prephitmp_3152(26), prephitmp_3148(27)>
  # prephitmp_3142 = PHI <pretmp_3141(26), _269(27)>
  # prephitmp_3144 = PHI <pretmp_3143(26), _270(27)>
  # prephitmp_3146 = PHI <pretmp_3145(26), _272(27)>
  # prephitmp_3348 = PHI <prephitmp_3153(26), prephitmp_3149(27)>
  # prephitmp_3349 = PHI <prephitmp_3157(26), prephitmp_3150(27)>
  # prephitmp_3505 = PHI <prephitmp_3352(26), prephitmp_3351(27)>
  # DEBUG i0 => 4
  # DEBUG i1 => 7
  _279 = (signed char) prephitmp_3144;
  _281 = 1 << prephitmp_3146;
  _282 = (signed char) _281;
  _283 = _279 | _282;
  _284 = (unsigned char) _283;
  visited[prephitmp_3139][prephitmp_3140][prephitmp_3142] = _284;
  _285 = h_2(D)->mc.avg[_7];
  _286 = stride1[7];
  _287 = stride0[4];
  _285 (&pix, bw_8, src0$4_2156, _287, _116, _286, i_weight_5(D));
  _288 = h_2(D)->pixf.mbcmp[_7];
  _289 = m0_3(D)->p_fenc[0];
  _290 = _288 (_289, 16, &pix, bw_8);
  _291 = (long unsigned int) bm0x_2325;
  _292 = _291 * 2;
  _293 = p_cost_m0x_19 + _292;
  _294 = *_293;
  _295 = (int) _294;
  _296 = _290 + _295;
  _297 = (long unsigned int) bm0y_2323;
  _298 = _297 * 2;
  _299 = p_cost_m0y_26 + _298;
  _300 = *_299;
  _301 = (int) _300;
  _302 = _296 + _301;
  _303 = (sizetype) bm1x_2326;
  _304 = _303 + 1;
  _305 = _304 * 2;
  _306 = p_cost_m1x_34 + _305;
  _307 = *_306;
  _308 = (int) _307;
  _309 = _302 + _308;
  _310 = (long unsigned int) bm1y_2324;
  _311 = _310 * 2;
  _312 = p_cost_m1y_41 + _311;
  _313 = *_312;
  _314 = (int) _313;
  bcost_315 = _309 + _314;
  # DEBUG cost => bcost_315
  if (bcost_315 < bcost_2322)
    goto <bb 30>;
  else
    goto <bb 29>;

  <bb 29>:

  <bb 30>:
  # bm1x_1999 = PHI <bm1x_2326(29), bm1x_113(28)>
  # bm1y_2000 = PHI <bm1y_2446(29), bm1y_2324(28)>
  # bcost_366 = PHI <bcost_2322(29), bcost_315(28)>
  # DEBUG bcostrd => 1152921504606846976
  # DEBUG bcost => bcost_366
  # DEBUG bm1y => bm1y_2000
  # DEBUG bm1x => bm1x_1999
  # DEBUG bm0y => bm0y_2323
  # DEBUG bm0x => bm0x_2325
  if (pass_2189 == 0)
    goto <bb 31>;
  else
    goto <bb 32>;

  <bb 31>:
  pretmp_3131 = bm1x_122 & 7;
  pretmp_3133 = visited[prephitmp_3139][prephitmp_3140][pretmp_3131];
  goto <bb 33>;

  <bb 32>:
  # bcost_2320 = PHI <bcost_366(30), bcost_2319(27)>
  # bm1x_2447 = PHI <bm1x_1999(30), bm1x_2326(27)>
  # bm1y_2449 = PHI <bm1y_2000(30), bm1y_2445(27)>
  # prephitmp_3135 = PHI <prephitmp_3139(30), prephitmp_3147(27)>
  # prephitmp_3136 = PHI <prephitmp_3140(30), prephitmp_3148(27)>
  # prephitmp_3137 = PHI <prephitmp_3142(30), _269(27)>
  # prephitmp_3138 = PHI <prephitmp_3146(30), _272(27)>
  # prephitmp_3345 = PHI <prephitmp_3348(30), prephitmp_3149(27)>
  # prephitmp_3347 = PHI <prephitmp_3349(30), prephitmp_3150(27)>
  # prephitmp_3504 = PHI <prephitmp_3505(30), prephitmp_3351(27)>
  # DEBUG bcostrd => 1152921504606846976
  # DEBUG bcost => bcost_2320
  # DEBUG bm1y => bm1y_2449
  # DEBUG bm1x => bm1x_2447
  # DEBUG bm0y => bm0y_2323
  # DEBUG bm0x => bm0x_2325
  _319 = bm1x_122 & 7;
  _320 = visited[prephitmp_3135][prephitmp_3136][_319];
  _321 = (int) _320;
  _323 = _321 >> prephitmp_3138;
  _324 = _323 & 1;
  if (_324 == 0)
    goto <bb 33>;
  else
    goto <bb 37>;

  <bb 33>:
  # bcost_2190 = PHI <bcost_366(31), bcost_2320(32)>
  # bm1x_2448 = PHI <bm1x_1999(31), bm1x_2447(32)>
  # bm1y_2450 = PHI <bm1y_2000(31), bm1y_2449(32)>
  # prephitmp_3128 = PHI <prephitmp_3139(31), prephitmp_3135(32)>
  # prephitmp_3129 = PHI <prephitmp_3140(31), prephitmp_3136(32)>
  # prephitmp_3130 = PHI <prephitmp_3146(31), prephitmp_3138(32)>
  # prephitmp_3132 = PHI <pretmp_3131(31), _319(32)>
  # prephitmp_3134 = PHI <pretmp_3133(31), _320(32)>
  # prephitmp_3343 = PHI <prephitmp_3142(31), prephitmp_3137(32)>
  # prephitmp_3501 = PHI <prephitmp_3348(31), prephitmp_3345(32)>
  # prephitmp_3502 = PHI <prephitmp_3349(31), prephitmp_3347(32)>
  # prephitmp_3613 = PHI <prephitmp_3505(31), prephitmp_3504(32)>
  # DEBUG i0 => 4
  # DEBUG i1 => 1
  _329 = (signed char) prephitmp_3134;
  _331 = 1 << prephitmp_3130;
  _332 = (signed char) _331;
  _333 = _329 | _332;
  _334 = (unsigned char) _333;
  visited[prephitmp_3128][prephitmp_3129][prephitmp_3132] = _334;
  _335 = h_2(D)->mc.avg[_7];
  _336 = stride1[1];
  _337 = stride0[4];
  _335 (&pix, bw_8, src0$4_2156, _337, _124, _336, i_weight_5(D));
  _338 = h_2(D)->pixf.mbcmp[_7];
  _339 = m0_3(D)->p_fenc[0];
  _340 = _338 (_339, 16, &pix, bw_8);
  _341 = (long unsigned int) bm0x_2325;
  _342 = _341 * 2;
  _343 = p_cost_m0x_19 + _342;
  _344 = *_343;
  _345 = (int) _344;
  _346 = _340 + _345;
  _347 = (long unsigned int) bm0y_2323;
  _348 = _347 * 2;
  _349 = p_cost_m0y_26 + _348;
  _350 = *_349;
  _351 = (int) _350;
  _352 = _346 + _351;
  _353 = (long unsigned int) bm1x_2326;
  _354 = _353 * 2;
  _355 = _354 + 18446744073709551614;
  _356 = p_cost_m1x_34 + _355;
  _357 = *_356;
  _358 = (int) _357;
  _359 = _352 + _358;
  _360 = (long unsigned int) bm1y_2324;
  _361 = _360 * 2;
  _362 = p_cost_m1y_41 + _361;
  _363 = *_362;
  _364 = (int) _363;
  bcost_365 = _359 + _364;
  # DEBUG cost => bcost_365
  if (bcost_365 < bcost_2190)
    goto <bb 35>;
  else
    goto <bb 34>;

  <bb 34>:

  <bb 35>:
  # bm1x_2001 = PHI <bm1x_2448(34), bm1x_122(33)>
  # bm1y_2002 = PHI <bm1y_2450(34), bm1y_2324(33)>
  # bcost_417 = PHI <bcost_2190(34), bcost_365(33)>
  # DEBUG bcostrd => 1152921504606846976
  # DEBUG bcost => bcost_417
  # DEBUG bm1y => bm1y_2002
  # DEBUG bm1x => bm1x_2001
  # DEBUG bm0y => bm0y_2323
  # DEBUG bm0x => bm0x_2325
  if (pass_2189 == 0)
    goto <bb 36>;
  else
    goto <bb 37>;

  <bb 36>:
  pretmp_3120 = bm0y_126 & 7;
  pretmp_3122 = visited[prephitmp_3128][pretmp_3120][prephitmp_3501];
  goto <bb 38>;

  <bb 37>:
  # bcost_2269 = PHI <bcost_417(35), bcost_2320(32)>
  # bm1x_2451 = PHI <bm1x_2001(35), bm1x_2447(32)>
  # bm1y_2453 = PHI <bm1y_2002(35), bm1y_2449(32)>
  # prephitmp_3124 = PHI <prephitmp_3128(35), prephitmp_3135(32)>
  # prephitmp_3125 = PHI <prephitmp_3129(35), prephitmp_3136(32)>
  # prephitmp_3126 = PHI <prephitmp_3130(35), prephitmp_3138(32)>
  # prephitmp_3127 = PHI <prephitmp_3132(35), _319(32)>
  # prephitmp_3342 = PHI <prephitmp_3343(35), prephitmp_3137(32)>
  # prephitmp_3498 = PHI <prephitmp_3501(35), prephitmp_3345(32)>
  # prephitmp_3500 = PHI <prephitmp_3502(35), prephitmp_3347(32)>
  # prephitmp_3612 = PHI <prephitmp_3613(35), prephitmp_3504(32)>
  # DEBUG bcostrd => 1152921504606846976
  # DEBUG bcost => bcost_2269
  # DEBUG bm1y => bm1y_2453
  # DEBUG bm1x => bm1x_2451
  # DEBUG bm0y => bm0y_2323
  # DEBUG bm0x => bm0x_2325
  _368 = bm0y_126 & 7;
  _370 = visited[prephitmp_3124][_368][prephitmp_3498];
  _371 = (int) _370;
  _373 = _371 >> prephitmp_3126;
  _374 = _373 & 1;
  if (_374 == 0)
    goto <bb 38>;
  else
    goto <bb 42>;

  <bb 38>:
  # bcost_2268 = PHI <bcost_417(36), bcost_2269(37)>
  # bm1x_2452 = PHI <bm1x_2001(36), bm1x_2451(37)>
  # bm1y_2454 = PHI <bm1y_2002(36), bm1y_2453(37)>
  # prephitmp_3116 = PHI <prephitmp_3128(36), prephitmp_3124(37)>
  # prephitmp_3118 = PHI <prephitmp_3501(36), prephitmp_3498(37)>
  # prephitmp_3119 = PHI <prephitmp_3130(36), prephitmp_3126(37)>
  # prephitmp_3121 = PHI <pretmp_3120(36), _368(37)>
  # prephitmp_3123 = PHI <pretmp_3122(36), _370(37)>
  # prephitmp_3339 = PHI <prephitmp_3129(36), prephitmp_3125(37)>
  # prephitmp_3340 = PHI <prephitmp_3132(36), prephitmp_3127(37)>
  # prephitmp_3496 = PHI <prephitmp_3343(36), prephitmp_3342(37)>
  # prephitmp_3610 = PHI <prephitmp_3502(36), prephitmp_3500(37)>
  # prephitmp_3703 = PHI <prephitmp_3613(36), prephitmp_3612(37)>
  # DEBUG i0 => 5
  # DEBUG i1 => 4
  _379 = (signed char) prephitmp_3123;
  _381 = 1 << prephitmp_3119;
  _382 = (signed char) _381;
  _383 = _379 | _382;
  _384 = (unsigned char) _383;
  visited[prephitmp_3116][prephitmp_3121][prephitmp_3118] = _384;
  _385 = h_2(D)->mc.avg[_7];
  _386 = stride1[4];
  _387 = stride0[5];
  _385 (&pix, bw_8, _128, _387, src1$4_2157, _386, i_weight_5(D));
  _389 = h_2(D)->pixf.mbcmp[_7];
  _390 = m0_3(D)->p_fenc[0];
  _391 = _389 (_390, 16, &pix, bw_8);
  _392 = (long unsigned int) bm0x_2325;
  _393 = _392 * 2;
  _394 = p_cost_m0x_19 + _393;
  _395 = *_394;
  _396 = (int) _395;
  _397 = _391 + _396;
  _398 = (sizetype) bm0y_2323;
  _399 = _398 + 1;
  _400 = _399 * 2;
  _401 = p_cost_m0y_26 + _400;
  _402 = *_401;
  _403 = (int) _402;
  _404 = _397 + _403;
  _405 = (long unsigned int) bm1x_2326;
  _406 = _405 * 2;
  _407 = p_cost_m1x_34 + _406;
  _408 = *_407;
  _409 = (int) _408;
  _410 = _404 + _409;
  _411 = (long unsigned int) bm1y_2324;
  _412 = _411 * 2;
  _413 = p_cost_m1y_41 + _412;
  _414 = *_413;
  _415 = (int) _414;
  bcost_416 = _410 + _415;
  # DEBUG cost => bcost_416
  if (bcost_416 < bcost_2268)
    goto <bb 40>;
  else
    goto <bb 39>;

  <bb 39>:

  <bb 40>:
  # bm0y_2003 = PHI <bm0y_2323(39), bm0y_126(38)>
  # bm1x_2004 = PHI <bm1x_2452(39), bm1x_2326(38)>
  # bm1y_2005 = PHI <bm1y_2454(39), bm1y_2324(38)>
  # bcost_467 = PHI <bcost_2268(39), bcost_416(38)>
  # DEBUG bcostrd => 1152921504606846976
  # DEBUG bcost => bcost_467
  # DEBUG bm1y => bm1y_2005
  # DEBUG bm1x => bm1x_2004
  # DEBUG bm0y => bm0y_2003
  # DEBUG bm0x => bm0x_2325
  if (pass_2189 == 0)
    goto <bb 41>;
  else
    goto <bb 42>;

  <bb 41>:
  pretmp_3108 = bm0y_134 & 7;
  pretmp_3110 = visited[prephitmp_3116][pretmp_3108][prephitmp_3118];
  goto <bb 43>;

  <bb 42>:
  # bcost_2317 = PHI <bcost_467(40), bcost_2269(37)>
  # bm0y_2455 = PHI <bm0y_2003(40), bm0y_2323(37)>
  # bm1x_2457 = PHI <bm1x_2004(40), bm1x_2451(37)>
  # bm1y_2459 = PHI <bm1y_2005(40), bm1y_2453(37)>
  # prephitmp_3112 = PHI <prephitmp_3116(40), prephitmp_3124(37)>
  # prephitmp_3113 = PHI <prephitmp_3118(40), prephitmp_3498(37)>
  # prephitmp_3114 = PHI <prephitmp_3119(40), prephitmp_3126(37)>
  # prephitmp_3115 = PHI <prephitmp_3121(40), _368(37)>
  # prephitmp_3336 = PHI <prephitmp_3339(40), prephitmp_3125(37)>
  # prephitmp_3338 = PHI <prephitmp_3340(40), prephitmp_3127(37)>
  # prephitmp_3495 = PHI <prephitmp_3496(40), prephitmp_3342(37)>
  # prephitmp_3609 = PHI <prephitmp_3610(40), prephitmp_3500(37)>
  # prephitmp_3702 = PHI <prephitmp_3703(40), prephitmp_3612(37)>
  # DEBUG bcostrd => 1152921504606846976
  # DEBUG bcost => bcost_2317
  # DEBUG bm1y => bm1y_2459
  # DEBUG bm1x => bm1x_2457
  # DEBUG bm0y => bm0y_2455
  # DEBUG bm0x => bm0x_2325
  _419 = bm0y_134 & 7;
  _421 = visited[prephitmp_3112][_419][prephitmp_3113];
  _422 = (int) _421;
  _424 = _422 >> prephitmp_3114;
  _425 = _424 & 1;
  if (_425 == 0)
    goto <bb 43>;
  else
    goto <bb 47>;

  <bb 43>:
  # bcost_2315 = PHI <bcost_467(41), bcost_2317(42)>
  # bm0y_2456 = PHI <bm0y_2003(41), bm0y_2455(42)>
  # bm1x_2458 = PHI <bm1x_2004(41), bm1x_2457(42)>
  # bm1y_2460 = PHI <bm1y_2005(41), bm1y_2459(42)>
  # prephitmp_3105 = PHI <prephitmp_3116(41), prephitmp_3112(42)>
  # prephitmp_3106 = PHI <prephitmp_3118(41), prephitmp_3113(42)>
  # prephitmp_3107 = PHI <prephitmp_3119(41), prephitmp_3114(42)>
  # prephitmp_3109 = PHI <pretmp_3108(41), _419(42)>
  # prephitmp_3111 = PHI <pretmp_3110(41), _421(42)>
  # prephitmp_3334 = PHI <prephitmp_3121(41), prephitmp_3115(42)>
  # prephitmp_3492 = PHI <prephitmp_3339(41), prephitmp_3336(42)>
  # prephitmp_3493 = PHI <prephitmp_3340(41), prephitmp_3338(42)>
  # prephitmp_3607 = PHI <prephitmp_3496(41), prephitmp_3495(42)>
  # prephitmp_3700 = PHI <prephitmp_3610(41), prephitmp_3609(42)>
  # prephitmp_3757 = PHI <prephitmp_3703(41), prephitmp_3702(42)>
  # DEBUG i0 => 3
  # DEBUG i1 => 4
  _430 = (signed char) prephitmp_3111;
  _432 = 1 << prephitmp_3107;
  _433 = (signed char) _432;
  _434 = _430 | _433;
  _435 = (unsigned char) _434;
  visited[prephitmp_3105][prephitmp_3109][prephitmp_3106] = _435;
  _436 = h_2(D)->mc.avg[_7];
  _437 = stride1[4];
  _438 = stride0[3];
  _436 (&pix, bw_8, _136, _438, src1$4_2157, _437, i_weight_5(D));
  _439 = h_2(D)->pixf.mbcmp[_7];
  _440 = m0_3(D)->p_fenc[0];
  _441 = _439 (_440, 16, &pix, bw_8);
  _442 = (long unsigned int) bm0x_2325;
  _443 = _442 * 2;
  _444 = p_cost_m0x_19 + _443;
  _445 = *_444;
  _446 = (int) _445;
  _447 = _441 + _446;
  _448 = (long unsigned int) bm0y_2323;
  _449 = _448 * 2;
  _450 = _449 + 18446744073709551614;
  _451 = p_cost_m0y_26 + _450;
  _452 = *_451;
  _453 = (int) _452;
  _454 = _447 + _453;
  _455 = (long unsigned int) bm1x_2326;
  _456 = _455 * 2;
  _457 = p_cost_m1x_34 + _456;
  _458 = *_457;
  _459 = (int) _458;
  _460 = _454 + _459;
  _461 = (long unsigned int) bm1y_2324;
  _462 = _461 * 2;
  _463 = p_cost_m1y_41 + _462;
  _464 = *_463;
  _465 = (int) _464;
  bcost_466 = _460 + _465;
  # DEBUG cost => bcost_466
  if (bcost_466 < bcost_2315)
    goto <bb 45>;
  else
    goto <bb 44>;

  <bb 44>:

  <bb 45>:
  # bm0y_2006 = PHI <bm0y_2456(44), bm0y_134(43)>
  # bm1x_2007 = PHI <bm1x_2458(44), bm1x_2326(43)>
  # bm1y_2008 = PHI <bm1y_2460(44), bm1y_2324(43)>
  # bcost_517 = PHI <bcost_2315(44), bcost_466(43)>
  # DEBUG bcostrd => 1152921504606846976
  # DEBUG bcost => bcost_517
  # DEBUG bm1y => bm1y_2008
  # DEBUG bm1x => bm1x_2007
  # DEBUG bm0y => bm0y_2006
  # DEBUG bm0x => bm0x_2325
  if (pass_2189 == 0)
    goto <bb 46>;
  else
    goto <bb 47>;

  <bb 46>:
  pretmp_3097 = bm0x_107 & 7;
  pretmp_3099 = visited[pretmp_3097][prephitmp_3492][prephitmp_3106];
  goto <bb 48>;

  <bb 47>:
  # bcost_2318 = PHI <bcost_517(45), bcost_2317(42)>
  # bm0y_2461 = PHI <bm0y_2006(45), bm0y_2455(42)>
  # bm1x_2463 = PHI <bm1x_2007(45), bm1x_2457(42)>
  # bm1y_2465 = PHI <bm1y_2008(45), bm1y_2459(42)>
  # prephitmp_3101 = PHI <prephitmp_3105(45), prephitmp_3112(42)>
  # prephitmp_3102 = PHI <prephitmp_3106(45), prephitmp_3113(42)>
  # prephitmp_3103 = PHI <prephitmp_3107(45), prephitmp_3114(42)>
  # prephitmp_3104 = PHI <prephitmp_3109(45), _419(42)>
  # prephitmp_3333 = PHI <prephitmp_3334(45), prephitmp_3115(42)>
  # prephitmp_3489 = PHI <prephitmp_3492(45), prephitmp_3336(42)>
  # prephitmp_3491 = PHI <prephitmp_3493(45), prephitmp_3338(42)>
  # prephitmp_3606 = PHI <prephitmp_3607(45), prephitmp_3495(42)>
  # prephitmp_3699 = PHI <prephitmp_3700(45), prephitmp_3609(42)>
  # prephitmp_3756 = PHI <prephitmp_3757(45), prephitmp_3702(42)>
  # DEBUG bcostrd => 1152921504606846976
  # DEBUG bcost => bcost_2318
  # DEBUG bm1y => bm1y_2465
  # DEBUG bm1x => bm1x_2463
  # DEBUG bm0y => bm0y_2461
  # DEBUG bm0x => bm0x_2325
  _468 = bm0x_107 & 7;
  _471 = visited[_468][prephitmp_3489][prephitmp_3102];
  _472 = (int) _471;
  _474 = _472 >> prephitmp_3103;
  _475 = _474 & 1;
  if (_475 == 0)
    goto <bb 48>;
  else
    goto <bb 52>;

  <bb 48>:
  # bcost_2316 = PHI <bcost_517(46), bcost_2318(47)>
  # bm0y_2462 = PHI <bm0y_2006(46), bm0y_2461(47)>
  # bm1x_2464 = PHI <bm1x_2007(46), bm1x_2463(47)>
  # bm1y_2466 = PHI <bm1y_2008(46), bm1y_2465(47)>
  # prephitmp_3094 = PHI <prephitmp_3492(46), prephitmp_3489(47)>
  # prephitmp_3095 = PHI <prephitmp_3106(46), prephitmp_3102(47)>
  # prephitmp_3096 = PHI <prephitmp_3107(46), prephitmp_3103(47)>
  # prephitmp_3098 = PHI <pretmp_3097(46), _468(47)>
  # prephitmp_3100 = PHI <pretmp_3099(46), _471(47)>
  # prephitmp_3330 = PHI <prephitmp_3105(46), prephitmp_3101(47)>
  # prephitmp_3331 = PHI <prephitmp_3109(46), prephitmp_3104(47)>
  # prephitmp_3487 = PHI <prephitmp_3334(46), prephitmp_3333(47)>
  # prephitmp_3604 = PHI <prephitmp_3493(46), prephitmp_3491(47)>
  # prephitmp_3697 = PHI <prephitmp_3607(46), prephitmp_3606(47)>
  # prephitmp_3754 = PHI <prephitmp_3700(46), prephitmp_3699(47)>
  # prephitmp_3787 = PHI <prephitmp_3757(46), prephitmp_3756(47)>
  # DEBUG i0 => 7
  # DEBUG i1 => 4
  _480 = (signed char) prephitmp_3100;
  _482 = 1 << prephitmp_3096;
  _483 = (signed char) _482;
  _484 = _480 | _483;
  _485 = (unsigned char) _484;
  visited[prephitmp_3098][prephitmp_3094][prephitmp_3095] = _485;
  _486 = h_2(D)->mc.avg[_7];
  _487 = stride1[4];
  _488 = stride0[7];
  _486 (&pix, bw_8, _110, _488, src1$4_2157, _487, i_weight_5(D));
  _489 = h_2(D)->pixf.mbcmp[_7];
  _490 = m0_3(D)->p_fenc[0];
  _491 = _489 (_490, 16, &pix, bw_8);
  _492 = (sizetype) bm0x_2325;
  _493 = _492 + 1;
  _494 = _493 * 2;
  _495 = p_cost_m0x_19 + _494;
  _496 = *_495;
  _497 = (int) _496;
  _498 = _491 + _497;
  _499 = (long unsigned int) bm0y_2323;
  _500 = _499 * 2;
  _501 = p_cost_m0y_26 + _500;
  _502 = *_501;
  _503 = (int) _502;
  _504 = _498 + _503;
  _505 = (long unsigned int) bm1x_2326;
  _506 = _505 * 2;
  _507 = p_cost_m1x_34 + _506;
  _508 = *_507;
  _509 = (int) _508;
  _510 = _504 + _509;
  _511 = (long unsigned int) bm1y_2324;
  _512 = _511 * 2;
  _513 = p_cost_m1y_41 + _512;
  _514 = *_513;
  _515 = (int) _514;
  bcost_516 = _510 + _515;
  # DEBUG cost => bcost_516
  if (bcost_516 < bcost_2316)
    goto <bb 50>;
  else
    goto <bb 49>;

  <bb 49>:

  <bb 50>:
  # bm0x_2009 = PHI <bm0x_2325(49), bm0x_107(48)>
  # bm0y_2010 = PHI <bm0y_2462(49), bm0y_2323(48)>
  # bm1x_2011 = PHI <bm1x_2464(49), bm1x_2326(48)>
  # bm1y_2012 = PHI <bm1y_2466(49), bm1y_2324(48)>
  # bcost_567 = PHI <bcost_2316(49), bcost_516(48)>
  # DEBUG bcostrd => 1152921504606846976
  # DEBUG bcost => bcost_567
  # DEBUG bm1y => bm1y_2012
  # DEBUG bm1x => bm1x_2011
  # DEBUG bm0y => bm0y_2010
  # DEBUG bm0x => bm0x_2009
  if (pass_2189 == 0)
    goto <bb 51>;
  else
    goto <bb 52>;

  <bb 51>:
  pretmp_3085 = bm0x_118 & 7;
  pretmp_3087 = visited[pretmp_3085][prephitmp_3094][prephitmp_3095];
  goto <bb 53>;

  <bb 52>:
  # bcost_2191 = PHI <bcost_567(50), bcost_2318(47)>
  # bm0x_2467 = PHI <bm0x_2009(50), bm0x_2325(47)>
  # bm0y_2469 = PHI <bm0y_2010(50), bm0y_2461(47)>
  # bm1x_2471 = PHI <bm1x_2011(50), bm1x_2463(47)>
  # bm1y_2473 = PHI <bm1y_2012(50), bm1y_2465(47)>
  # prephitmp_3089 = PHI <prephitmp_3094(50), prephitmp_3489(47)>
  # prephitmp_3090 = PHI <prephitmp_3095(50), prephitmp_3102(47)>
  # prephitmp_3091 = PHI <prephitmp_3096(50), prephitmp_3103(47)>
  # prephitmp_3092 = PHI <prephitmp_3098(50), _468(47)>
  # prephitmp_3327 = PHI <prephitmp_3330(50), prephitmp_3101(47)>
  # prephitmp_3329 = PHI <prephitmp_3331(50), prephitmp_3104(47)>
  # prephitmp_3486 = PHI <prephitmp_3487(50), prephitmp_3333(47)>
  # prephitmp_3603 = PHI <prephitmp_3604(50), prephitmp_3491(47)>
  # prephitmp_3696 = PHI <prephitmp_3697(50), prephitmp_3606(47)>
  # prephitmp_3753 = PHI <prephitmp_3754(50), prephitmp_3699(47)>
  # prephitmp_3786 = PHI <prephitmp_3787(50), prephitmp_3756(47)>
  # DEBUG bcostrd => 1152921504606846976
  # DEBUG bcost => bcost_2191
  # DEBUG bm1y => bm1y_2473
  # DEBUG bm1x => bm1x_2471
  # DEBUG bm0y => bm0y_2469
  # DEBUG bm0x => bm0x_2467
  _518 = bm0x_118 & 7;
  _521 = visited[_518][prephitmp_3089][prephitmp_3090];
  _522 = (int) _521;
  _524 = _522 >> prephitmp_3091;
  _525 = _524 & 1;
  if (_525 == 0)
    goto <bb 53>;
  else
    goto <bb 57>;

  <bb 53>:
  # bcost_2158 = PHI <bcost_567(51), bcost_2191(52)>
  # bm0x_2468 = PHI <bm0x_2009(51), bm0x_2467(52)>
  # bm0y_2470 = PHI <bm0y_2010(51), bm0y_2469(52)>
  # bm1x_2472 = PHI <bm1x_2011(51), bm1x_2471(52)>
  # bm1y_2474 = PHI <bm1y_2012(51), bm1y_2473(52)>
  # prephitmp_3082 = PHI <prephitmp_3094(51), prephitmp_3089(52)>
  # prephitmp_3083 = PHI <prephitmp_3095(51), prephitmp_3090(52)>
  # prephitmp_3084 = PHI <prephitmp_3096(51), prephitmp_3091(52)>
  # prephitmp_3086 = PHI <pretmp_3085(51), _518(52)>
  # prephitmp_3088 = PHI <pretmp_3087(51), _521(52)>
  # prephitmp_3325 = PHI <prephitmp_3098(51), prephitmp_3092(52)>
  # prephitmp_3483 = PHI <prephitmp_3330(51), prephitmp_3327(52)>
  # prephitmp_3484 = PHI <prephitmp_3331(51), prephitmp_3329(52)>
  # prephitmp_3601 = PHI <prephitmp_3487(51), prephitmp_3486(52)>
  # prephitmp_3694 = PHI <prephitmp_3604(51), prephitmp_3603(52)>
  # prephitmp_3751 = PHI <prephitmp_3697(51), prephitmp_3696(52)>
  # prephitmp_3784 = PHI <prephitmp_3754(51), prephitmp_3753(52)>
  # prephitmp_3805 = PHI <prephitmp_3787(51), prephitmp_3786(52)>
  # DEBUG i0 => 1
  # DEBUG i1 => 4
  _530 = (signed char) prephitmp_3088;
  _532 = 1 << prephitmp_3084;
  _533 = (signed char) _532;
  _534 = _530 | _533;
  _535 = (unsigned char) _534;
  visited[prephitmp_3086][prephitmp_3082][prephitmp_3083] = _535;
  _536 = h_2(D)->mc.avg[_7];
  _537 = stride1[4];
  _538 = stride0[1];
  _536 (&pix, bw_8, _120, _538, src1$4_2157, _537, i_weight_5(D));
  _539 = h_2(D)->pixf.mbcmp[_7];
  _540 = m0_3(D)->p_fenc[0];
  _541 = _539 (_540, 16, &pix, bw_8);
  _542 = (long unsigned int) bm0x_2325;
  _543 = _542 * 2;
  _544 = _543 + 18446744073709551614;
  _545 = p_cost_m0x_19 + _544;
  _546 = *_545;
  _547 = (int) _546;
  _548 = _541 + _547;
  _549 = (long unsigned int) bm0y_2323;
  _550 = _549 * 2;
  _551 = p_cost_m0y_26 + _550;
  _552 = *_551;
  _553 = (int) _552;
  _554 = _548 + _553;
  _555 = (long unsigned int) bm1x_2326;
  _556 = _555 * 2;
  _557 = p_cost_m1x_34 + _556;
  _558 = *_557;
  _559 = (int) _558;
  _560 = _554 + _559;
  _561 = (long unsigned int) bm1y_2324;
  _562 = _561 * 2;
  _563 = p_cost_m1y_41 + _562;
  _564 = *_563;
  _565 = (int) _564;
  bcost_566 = _560 + _565;
  # DEBUG cost => bcost_566
  if (bcost_566 < bcost_2158)
    goto <bb 55>;
  else
    goto <bb 54>;

  <bb 54>:

  <bb 55>:
  # bm0x_2013 = PHI <bm0x_2468(54), bm0x_118(53)>
  # bm0y_2014 = PHI <bm0y_2470(54), bm0y_2323(53)>
  # bm1x_2015 = PHI <bm1x_2472(54), bm1x_2326(53)>
  # bm1y_2016 = PHI <bm1y_2474(54), bm1y_2324(53)>
  # bcost_618 = PHI <bcost_2158(54), bcost_566(53)>
  # DEBUG bcostrd => 1152921504606846976
  # DEBUG bcost => bcost_618
  # DEBUG bm1y => bm1y_2016
  # DEBUG bm1x => bm1x_2015
  # DEBUG bm0y => bm0y_2014
  # DEBUG bm0x => bm0x_2013
  if (pass_2189 == 0)
    goto <bb 56>;
  else
    goto <bb 57>;

  <bb 56>:
  pretmp_3076 = visited[prephitmp_3483][prephitmp_3082][prephitmp_3751];
  goto <bb 58>;

  <bb 57>:
  # bcost_2271 = PHI <bcost_618(55), bcost_2191(52)>
  # bm0x_2475 = PHI <bm0x_2013(55), bm0x_2467(52)>
  # bm0y_2477 = PHI <bm0y_2014(55), bm0y_2469(52)>
  # bm1x_2479 = PHI <bm1x_2015(55), bm1x_2471(52)>
  # bm1y_2481 = PHI <bm1y_2016(55), bm1y_2473(52)>
  # prephitmp_3078 = PHI <prephitmp_3082(55), prephitmp_3089(52)>
  # prephitmp_3079 = PHI <prephitmp_3083(55), prephitmp_3090(52)>
  # prephitmp_3080 = PHI <prephitmp_3084(55), prephitmp_3091(52)>
  # prephitmp_3081 = PHI <prephitmp_3086(55), _518(52)>
  # prephitmp_3324 = PHI <prephitmp_3325(55), prephitmp_3092(52)>
  # prephitmp_3480 = PHI <prephitmp_3483(55), prephitmp_3327(52)>
  # prephitmp_3482 = PHI <prephitmp_3484(55), prephitmp_3329(52)>
  # prephitmp_3600 = PHI <prephitmp_3601(55), prephitmp_3486(52)>
  # prephitmp_3693 = PHI <prephitmp_3694(55), prephitmp_3603(52)>
  # prephitmp_3750 = PHI <prephitmp_3751(55), prephitmp_3696(52)>
  # prephitmp_3783 = PHI <prephitmp_3784(55), prephitmp_3753(52)>
  # prephitmp_3804 = PHI <prephitmp_3805(55), prephitmp_3786(52)>
  # DEBUG bcostrd => 1152921504606846976
  # DEBUG bcost => bcost_2271
  # DEBUG bm1y => bm1y_2481
  # DEBUG bm1x => bm1x_2479
  # DEBUG bm0y => bm0y_2477
  # DEBUG bm0x => bm0x_2475
  _571 = visited[prephitmp_3480][prephitmp_3078][prephitmp_3750];
  _572 = (int) _571;
  _574 = _572 >> prephitmp_3804;
  _575 = _574 & 1;
  if (_575 == 0)
    goto <bb 58>;
  else
    goto <bb 62>;

  <bb 58>:
  # bcost_2270 = PHI <bcost_618(56), bcost_2271(57)>
  # bm0x_2476 = PHI <bm0x_2013(56), bm0x_2475(57)>
  # bm0y_2478 = PHI <bm0y_2014(56), bm0y_2477(57)>
  # bm1x_2480 = PHI <bm1x_2015(56), bm1x_2479(57)>
  # bm1y_2482 = PHI <bm1y_2016(56), bm1y_2481(57)>
  # prephitmp_3070 = PHI <prephitmp_3483(56), prephitmp_3480(57)>
  # prephitmp_3071 = PHI <prephitmp_3082(56), prephitmp_3078(57)>
  # prephitmp_3073 = PHI <prephitmp_3805(56), prephitmp_3804(57)>
  # prephitmp_3075 = PHI <prephitmp_3751(56), prephitmp_3750(57)>
  # prephitmp_3077 = PHI <pretmp_3076(56), _571(57)>
  # prephitmp_3320 = PHI <prephitmp_3083(56), prephitmp_3079(57)>
  # prephitmp_3321 = PHI <prephitmp_3084(56), prephitmp_3080(57)>
  # prephitmp_3322 = PHI <prephitmp_3086(56), prephitmp_3081(57)>
  # prephitmp_3478 = PHI <prephitmp_3325(56), prephitmp_3324(57)>
  # prephitmp_3598 = PHI <prephitmp_3484(56), prephitmp_3482(57)>
  # prephitmp_3691 = PHI <prephitmp_3601(56), prephitmp_3600(57)>
  # prephitmp_3748 = PHI <prephitmp_3694(56), prephitmp_3693(57)>
  # prephitmp_3802 = PHI <prephitmp_3784(56), prephitmp_3783(57)>
  # DEBUG i0 => 4
  # DEBUG i1 => 8
  _580 = (signed char) prephitmp_3077;
  _582 = 1 << prephitmp_3073;
  _583 = (signed char) _582;
  _584 = _580 | _583;
  _585 = (unsigned char) _584;
  visited[prephitmp_3070][prephitmp_3071][prephitmp_3075] = _585;
  _586 = h_2(D)->mc.avg[_7];
  _587 = stride1[8];
  _588 = stride0[4];
  _586 (&pix, bw_8, src0$4_2156, _588, _146, _587, i_weight_5(D));
  _589 = h_2(D)->pixf.mbcmp[_7];
  _590 = m0_3(D)->p_fenc[0];
  _591 = _589 (_590, 16, &pix, bw_8);
  _592 = (long unsigned int) bm0x_2325;
  _593 = _592 * 2;
  _594 = p_cost_m0x_19 + _593;
  _595 = *_594;
  _596 = (int) _595;
  _597 = _591 + _596;
  _598 = (long unsigned int) bm0y_2323;
  _599 = _598 * 2;
  _600 = p_cost_m0y_26 + _599;
  _601 = *_600;
  _602 = (int) _601;
  _603 = _597 + _602;
  _604 = (sizetype) bm1x_2326;
  _605 = _604 + 1;
  _606 = _605 * 2;
  _607 = p_cost_m1x_34 + _606;
  _608 = *_607;
  _609 = (int) _608;
  _610 = _603 + _609;
  _611 = (sizetype) bm1y_2324;
  _612 = _611 + 1;
  _613 = _612 * 2;
  _614 = p_cost_m1y_41 + _613;
  _615 = *_614;
  _616 = (int) _615;
  bcost_617 = _610 + _616;
  # DEBUG cost => bcost_617
  if (bcost_617 < bcost_2270)
    goto <bb 60>;
  else
    goto <bb 59>;

  <bb 59>:

  <bb 60>:
  # bm0x_2017 = PHI <bm0x_2476(59), bm0x_2325(58)>
  # bm0y_2018 = PHI <bm0y_2478(59), bm0y_2323(58)>
  # bm1x_2019 = PHI <bm1x_2480(59), bm1x_113(58)>
  # bm1y_2020 = PHI <bm1y_2482(59), bm1y_130(58)>
  # bcost_669 = PHI <bcost_2270(59), bcost_617(58)>
  # DEBUG bcostrd => 1152921504606846976
  # DEBUG bcost => bcost_669
  # DEBUG bm1y => bm1y_2020
  # DEBUG bm1x => bm1x_2019
  # DEBUG bm0y => bm0y_2018
  # DEBUG bm0x => bm0x_2017
  if (pass_2189 == 0)
    goto <bb 61>;
  else
    goto <bb 62>;

  <bb 61>:
  pretmp_3063 = visited[prephitmp_3070][prephitmp_3071][prephitmp_3748];
  goto <bb 63>;

  <bb 62>:
  # bcost_2313 = PHI <bcost_669(60), bcost_2271(57)>
  # bm0x_2483 = PHI <bm0x_2017(60), bm0x_2475(57)>
  # bm0y_2485 = PHI <bm0y_2018(60), bm0y_2477(57)>
  # bm1x_2487 = PHI <bm1x_2019(60), bm1x_2479(57)>
  # bm1y_2489 = PHI <bm1y_2020(60), bm1y_2481(57)>
  # prephitmp_3065 = PHI <prephitmp_3070(60), prephitmp_3480(57)>
  # prephitmp_3066 = PHI <prephitmp_3071(60), prephitmp_3078(57)>
  # prephitmp_3067 = PHI <prephitmp_3073(60), prephitmp_3804(57)>
  # prephitmp_3068 = PHI <prephitmp_3075(60), prephitmp_3750(57)>
  # prephitmp_3315 = PHI <prephitmp_3320(60), prephitmp_3079(57)>
  # prephitmp_3317 = PHI <prephitmp_3321(60), prephitmp_3080(57)>
  # prephitmp_3319 = PHI <prephitmp_3322(60), prephitmp_3081(57)>
  # prephitmp_3477 = PHI <prephitmp_3478(60), prephitmp_3324(57)>
  # prephitmp_3597 = PHI <prephitmp_3598(60), prephitmp_3482(57)>
  # prephitmp_3690 = PHI <prephitmp_3691(60), prephitmp_3600(57)>
  # prephitmp_3747 = PHI <prephitmp_3748(60), prephitmp_3693(57)>
  # prephitmp_3801 = PHI <prephitmp_3802(60), prephitmp_3783(57)>
  # DEBUG bcostrd => 1152921504606846976
  # DEBUG bcost => bcost_2313
  # DEBUG bm1y => bm1y_2489
  # DEBUG bm1x => bm1x_2487
  # DEBUG bm0y => bm0y_2485
  # DEBUG bm0x => bm0x_2483
  _622 = visited[prephitmp_3065][prephitmp_3066][prephitmp_3747];
  _623 = (int) _622;
  _625 = _623 >> prephitmp_3801;
  _626 = _625 & 1;
  if (_626 == 0)
    goto <bb 63>;
  else
    goto <bb 67>;

  <bb 63>:
  # bcost_2311 = PHI <bcost_669(61), bcost_2313(62)>
  # bm0x_2484 = PHI <bm0x_2017(61), bm0x_2483(62)>
  # bm0y_2486 = PHI <bm0y_2018(61), bm0y_2485(62)>
  # bm1x_2488 = PHI <bm1x_2019(61), bm1x_2487(62)>
  # bm1y_2490 = PHI <bm1y_2020(61), bm1y_2489(62)>
  # prephitmp_3057 = PHI <prephitmp_3070(61), prephitmp_3065(62)>
  # prephitmp_3058 = PHI <prephitmp_3071(61), prephitmp_3066(62)>
  # prephitmp_3060 = PHI <prephitmp_3802(61), prephitmp_3801(62)>
  # prephitmp_3062 = PHI <prephitmp_3748(61), prephitmp_3747(62)>
  # prephitmp_3064 = PHI <pretmp_3063(61), _622(62)>
  # prephitmp_3312 = PHI <prephitmp_3073(61), prephitmp_3067(62)>
  # prephitmp_3313 = PHI <prephitmp_3075(61), prephitmp_3068(62)>
  # prephitmp_3473 = PHI <prephitmp_3320(61), prephitmp_3315(62)>
  # prephitmp_3474 = PHI <prephitmp_3321(61), prephitmp_3317(62)>
  # prephitmp_3475 = PHI <prephitmp_3322(61), prephitmp_3319(62)>
  # prephitmp_3595 = PHI <prephitmp_3478(61), prephitmp_3477(62)>
  # prephitmp_3688 = PHI <prephitmp_3598(61), prephitmp_3597(62)>
  # prephitmp_3745 = PHI <prephitmp_3691(61), prephitmp_3690(62)>
  # DEBUG i0 => 4
  # DEBUG i1 => 0
  _631 = (signed char) prephitmp_3064;
  _633 = 1 << prephitmp_3060;
  _634 = (signed char) _633;
  _635 = _631 | _634;
  _636 = (unsigned char) _635;
  visited[prephitmp_3057][prephitmp_3058][prephitmp_3062] = _636;
  _637 = h_2(D)->mc.avg[_7];
  _638 = stride1[0];
  _639 = stride0[4];
  _637 (&pix, bw_8, src0$4_2156, _639, _152, _638, i_weight_5(D));
  _640 = h_2(D)->pixf.mbcmp[_7];
  _641 = m0_3(D)->p_fenc[0];
  _642 = _640 (_641, 16, &pix, bw_8);
  _643 = (long unsigned int) bm0x_2325;
  _644 = _643 * 2;
  _645 = p_cost_m0x_19 + _644;
  _646 = *_645;
  _647 = (int) _646;
  _648 = _642 + _647;
  _649 = (long unsigned int) bm0y_2323;
  _650 = _649 * 2;
  _651 = p_cost_m0y_26 + _650;
  _652 = *_651;
  _653 = (int) _652;
  _654 = _648 + _653;
  _655 = (long unsigned int) bm1x_2326;
  _656 = _655 * 2;
  _657 = _656 + 18446744073709551614;
  _658 = p_cost_m1x_34 + _657;
  _659 = *_658;
  _660 = (int) _659;
  _661 = _654 + _660;
  _662 = (long unsigned int) bm1y_2324;
  _663 = _662 * 2;
  _664 = _663 + 18446744073709551614;
  _665 = p_cost_m1y_41 + _664;
  _666 = *_665;
  _667 = (int) _666;
  bcost_668 = _661 + _667;
  # DEBUG cost => bcost_668
  if (bcost_668 < bcost_2311)
    goto <bb 65>;
  else
    goto <bb 64>;

  <bb 64>:

  <bb 65>:
  # bm0x_2021 = PHI <bm0x_2484(64), bm0x_2325(63)>
  # bm0y_2022 = PHI <bm0y_2486(64), bm0y_2323(63)>
  # bm1x_2023 = PHI <bm1x_2488(64), bm1x_122(63)>
  # bm1y_2024 = PHI <bm1y_2490(64), bm1y_138(63)>
  # bcost_720 = PHI <bcost_2311(64), bcost_668(63)>
  # DEBUG bcostrd => 1152921504606846976
  # DEBUG bcost => bcost_720
  # DEBUG bm1y => bm1y_2024
  # DEBUG bm1x => bm1x_2023
  # DEBUG bm0y => bm0y_2022
  # DEBUG bm0x => bm0x_2021
  if (pass_2189 == 0)
    goto <bb 66>;
  else
    goto <bb 67>;

  <bb 66>:
  pretmp_3051 = visited[prephitmp_3057][prephitmp_3745][prephitmp_3313];
  goto <bb 68>;

  <bb 67>:
  # bcost_2314 = PHI <bcost_720(65), bcost_2313(62)>
  # bm0x_2491 = PHI <bm0x_2021(65), bm0x_2483(62)>
  # bm0y_2493 = PHI <bm0y_2022(65), bm0y_2485(62)>
  # bm1x_2495 = PHI <bm1x_2023(65), bm1x_2487(62)>
  # bm1y_2497 = PHI <bm1y_2024(65), bm1y_2489(62)>
  # prephitmp_3053 = PHI <prephitmp_3057(65), prephitmp_3065(62)>
  # prephitmp_3054 = PHI <prephitmp_3058(65), prephitmp_3066(62)>
  # prephitmp_3055 = PHI <prephitmp_3060(65), prephitmp_3801(62)>
  # prephitmp_3056 = PHI <prephitmp_3062(65), prephitmp_3747(62)>
  # prephitmp_3309 = PHI <prephitmp_3312(65), prephitmp_3067(62)>
  # prephitmp_3311 = PHI <prephitmp_3313(65), prephitmp_3068(62)>
  # prephitmp_3468 = PHI <prephitmp_3473(65), prephitmp_3315(62)>
  # prephitmp_3470 = PHI <prephitmp_3474(65), prephitmp_3317(62)>
  # prephitmp_3472 = PHI <prephitmp_3475(65), prephitmp_3319(62)>
  # prephitmp_3594 = PHI <prephitmp_3595(65), prephitmp_3477(62)>
  # prephitmp_3687 = PHI <prephitmp_3688(65), prephitmp_3597(62)>
  # prephitmp_3744 = PHI <prephitmp_3745(65), prephitmp_3690(62)>
  # DEBUG bcostrd => 1152921504606846976
  # DEBUG bcost => bcost_2314
  # DEBUG bm1y => bm1y_2497
  # DEBUG bm1x => bm1x_2495
  # DEBUG bm0y => bm0y_2493
  # DEBUG bm0x => bm0x_2491
  _673 = visited[prephitmp_3053][prephitmp_3744][prephitmp_3311];
  _674 = (int) _673;
  _676 = _674 >> prephitmp_3470;
  _677 = _676 & 1;
  if (_677 == 0)
    goto <bb 68>;
  else
    goto <bb 72>;

  <bb 68>:
  # bcost_2312 = PHI <bcost_720(66), bcost_2314(67)>
  # bm0x_2492 = PHI <bm0x_2021(66), bm0x_2491(67)>
  # bm0y_2494 = PHI <bm0y_2022(66), bm0y_2493(67)>
  # bm1x_2496 = PHI <bm1x_2023(66), bm1x_2495(67)>
  # bm1y_2498 = PHI <bm1y_2024(66), bm1y_2497(67)>
  # prephitmp_3044 = PHI <prephitmp_3057(66), prephitmp_3053(67)>
  # prephitmp_3046 = PHI <prephitmp_3313(66), prephitmp_3311(67)>
  # prephitmp_3048 = PHI <prephitmp_3474(66), prephitmp_3470(67)>
  # prephitmp_3050 = PHI <prephitmp_3745(66), prephitmp_3744(67)>
  # prephitmp_3052 = PHI <pretmp_3051(66), _673(67)>
  # prephitmp_3305 = PHI <prephitmp_3058(66), prephitmp_3054(67)>
  # prephitmp_3306 = PHI <prephitmp_3060(66), prephitmp_3055(67)>
  # prephitmp_3307 = PHI <prephitmp_3062(66), prephitmp_3056(67)>
  # prephitmp_3466 = PHI <prephitmp_3312(66), prephitmp_3309(67)>
  # prephitmp_3591 = PHI <prephitmp_3473(66), prephitmp_3468(67)>
  # prephitmp_3592 = PHI <prephitmp_3475(66), prephitmp_3472(67)>
  # prephitmp_3685 = PHI <prephitmp_3595(66), prephitmp_3594(67)>
  # prephitmp_3742 = PHI <prephitmp_3688(66), prephitmp_3687(67)>
  # DEBUG i0 => 5
  # DEBUG i1 => 7
  _682 = (signed char) prephitmp_3052;
  _684 = 1 << prephitmp_3048;
  _685 = (signed char) _684;
  _686 = _682 | _685;
  _687 = (unsigned char) _686;
  visited[prephitmp_3044][prephitmp_3050][prephitmp_3046] = _687;
  _688 = h_2(D)->mc.avg[_7];
  _689 = stride1[7];
  _690 = stride0[5];
  _688 (&pix, bw_8, _128, _690, _116, _689, i_weight_5(D));
  _691 = h_2(D)->pixf.mbcmp[_7];
  _692 = m0_3(D)->p_fenc[0];
  _693 = _691 (_692, 16, &pix, bw_8);
  _694 = (long unsigned int) bm0x_2325;
  _695 = _694 * 2;
  _696 = p_cost_m0x_19 + _695;
  _697 = *_696;
  _698 = (int) _697;
  _699 = _693 + _698;
  _700 = (sizetype) bm0y_2323;
  _701 = _700 + 1;
  _702 = _701 * 2;
  _703 = p_cost_m0y_26 + _702;
  _704 = *_703;
  _705 = (int) _704;
  _706 = _699 + _705;
  _707 = (sizetype) bm1x_2326;
  _708 = _707 + 1;
  _709 = _708 * 2;
  _710 = p_cost_m1x_34 + _709;
  _711 = *_710;
  _712 = (int) _711;
  _713 = _706 + _712;
  _714 = (long unsigned int) bm1y_2324;
  _715 = _714 * 2;
  _716 = p_cost_m1y_41 + _715;
  _717 = *_716;
  _718 = (int) _717;
  bcost_719 = _713 + _718;
  # DEBUG cost => bcost_719
  if (bcost_719 < bcost_2312)
    goto <bb 70>;
  else
    goto <bb 69>;

  <bb 69>:

  <bb 70>:
  # bm0x_2025 = PHI <bm0x_2492(69), bm0x_2325(68)>
  # bm0y_2026 = PHI <bm0y_2494(69), bm0y_126(68)>
  # bm1x_2027 = PHI <bm1x_2496(69), bm1x_113(68)>
  # bm1y_2028 = PHI <bm1y_2498(69), bm1y_2324(68)>
  # bcost_771 = PHI <bcost_2312(69), bcost_719(68)>
  # DEBUG bcostrd => 1152921504606846976
  # DEBUG bcost => bcost_771
  # DEBUG bm1y => bm1y_2028
  # DEBUG bm1x => bm1x_2027
  # DEBUG bm0y => bm0y_2026
  # DEBUG bm0x => bm0x_2025
  if (pass_2189 == 0)
    goto <bb 71>;
  else
    goto <bb 72>;

  <bb 71>:
  pretmp_3038 = visited[prephitmp_3044][prephitmp_3742][prephitmp_3307];
  goto <bb 73>;

  <bb 72>:
  # bcost_2192 = PHI <bcost_771(70), bcost_2314(67)>
  # bm0x_2499 = PHI <bm0x_2025(70), bm0x_2491(67)>
  # bm0y_2501 = PHI <bm0y_2026(70), bm0y_2493(67)>
  # bm1x_2503 = PHI <bm1x_2027(70), bm1x_2495(67)>
  # bm1y_2505 = PHI <bm1y_2028(70), bm1y_2497(67)>
  # prephitmp_3040 = PHI <prephitmp_3044(70), prephitmp_3053(67)>
  # prephitmp_3041 = PHI <prephitmp_3046(70), prephitmp_3311(67)>
  # prephitmp_3042 = PHI <prephitmp_3048(70), prephitmp_3470(67)>
  # prephitmp_3043 = PHI <prephitmp_3050(70), prephitmp_3744(67)>
  # prephitmp_3300 = PHI <prephitmp_3305(70), prephitmp_3054(67)>
  # prephitmp_3302 = PHI <prephitmp_3306(70), prephitmp_3055(67)>
  # prephitmp_3304 = PHI <prephitmp_3307(70), prephitmp_3056(67)>
  # prephitmp_3465 = PHI <prephitmp_3466(70), prephitmp_3309(67)>
  # prephitmp_3588 = PHI <prephitmp_3591(70), prephitmp_3468(67)>
  # prephitmp_3590 = PHI <prephitmp_3592(70), prephitmp_3472(67)>
  # prephitmp_3684 = PHI <prephitmp_3685(70), prephitmp_3594(67)>
  # prephitmp_3741 = PHI <prephitmp_3742(70), prephitmp_3687(67)>
  # DEBUG bcostrd => 1152921504606846976
  # DEBUG bcost => bcost_2192
  # DEBUG bm1y => bm1y_2505
  # DEBUG bm1x => bm1x_2503
  # DEBUG bm0y => bm0y_2501
  # DEBUG bm0x => bm0x_2499
  _724 = visited[prephitmp_3040][prephitmp_3741][prephitmp_3304];
  _725 = (int) _724;
  _727 = _725 >> prephitmp_3042;
  _728 = _727 & 1;
  if (_728 == 0)
    goto <bb 73>;
  else
    goto <bb 77>;

  <bb 73>:
  # bcost_2159 = PHI <bcost_771(71), bcost_2192(72)>
  # bm0x_2500 = PHI <bm0x_2025(71), bm0x_2499(72)>
  # bm0y_2502 = PHI <bm0y_2026(71), bm0y_2501(72)>
  # bm1x_2504 = PHI <bm1x_2027(71), bm1x_2503(72)>
  # bm1y_2506 = PHI <bm1y_2028(71), bm1y_2505(72)>
  # prephitmp_3032 = PHI <prephitmp_3044(71), prephitmp_3040(72)>
  # prephitmp_3033 = PHI <prephitmp_3048(71), prephitmp_3042(72)>
  # prephitmp_3035 = PHI <prephitmp_3307(71), prephitmp_3304(72)>
  # prephitmp_3037 = PHI <prephitmp_3742(71), prephitmp_3741(72)>
  # prephitmp_3039 = PHI <pretmp_3038(71), _724(72)>
  # prephitmp_3297 = PHI <prephitmp_3046(71), prephitmp_3041(72)>
  # prephitmp_3298 = PHI <prephitmp_3050(71), prephitmp_3043(72)>
  # prephitmp_3462 = PHI <prephitmp_3305(71), prephitmp_3300(72)>
  # prephitmp_3463 = PHI <prephitmp_3306(71), prephitmp_3302(72)>
  # prephitmp_3586 = PHI <prephitmp_3466(71), prephitmp_3465(72)>
  # prephitmp_3681 = PHI <prephitmp_3591(71), prephitmp_3588(72)>
  # prephitmp_3682 = PHI <prephitmp_3592(71), prephitmp_3590(72)>
  # prephitmp_3739 = PHI <prephitmp_3685(71), prephitmp_3684(72)>
  # DEBUG i0 => 3
  # DEBUG i1 => 1
  _733 = (signed char) prephitmp_3039;
  _735 = 1 << prephitmp_3033;
  _736 = (signed char) _735;
  _737 = _733 | _736;
  _738 = (unsigned char) _737;
  visited[prephitmp_3032][prephitmp_3037][prephitmp_3035] = _738;
  _739 = h_2(D)->mc.avg[_7];
  _740 = stride1[1];
  _741 = stride0[3];
  _739 (&pix, bw_8, _136, _741, _124, _740, i_weight_5(D));
  _742 = h_2(D)->pixf.mbcmp[_7];
  _743 = m0_3(D)->p_fenc[0];
  _744 = _742 (_743, 16, &pix, bw_8);
  _745 = (long unsigned int) bm0x_2325;
  _746 = _745 * 2;
  _747 = p_cost_m0x_19 + _746;
  _748 = *_747;
  _749 = (int) _748;
  _750 = _744 + _749;
  _751 = (long unsigned int) bm0y_2323;
  _752 = _751 * 2;
  _753 = _752 + 18446744073709551614;
  _754 = p_cost_m0y_26 + _753;
  _755 = *_754;
  _756 = (int) _755;
  _757 = _750 + _756;
  _758 = (long unsigned int) bm1x_2326;
  _759 = _758 * 2;
  _760 = _759 + 18446744073709551614;
  _761 = p_cost_m1x_34 + _760;
  _762 = *_761;
  _763 = (int) _762;
  _764 = _757 + _763;
  _765 = (long unsigned int) bm1y_2324;
  _766 = _765 * 2;
  _767 = p_cost_m1y_41 + _766;
  _768 = *_767;
  _769 = (int) _768;
  bcost_770 = _764 + _769;
  # DEBUG cost => bcost_770
  if (bcost_770 < bcost_2159)
    goto <bb 75>;
  else
    goto <bb 74>;

  <bb 74>:

  <bb 75>:
  # bm0x_2029 = PHI <bm0x_2500(74), bm0x_2325(73)>
  # bm0y_2030 = PHI <bm0y_2502(74), bm0y_134(73)>
  # bm1x_2031 = PHI <bm1x_2504(74), bm1x_122(73)>
  # bm1y_2032 = PHI <bm1y_2506(74), bm1y_2324(73)>
  # bcost_822 = PHI <bcost_2159(74), bcost_770(73)>
  # DEBUG bcostrd => 1152921504606846976
  # DEBUG bcost => bcost_822
  # DEBUG bm1y => bm1y_2032
  # DEBUG bm1x => bm1x_2031
  # DEBUG bm0y => bm0y_2030
  # DEBUG bm0x => bm0x_2029
  if (pass_2189 == 0)
    goto <bb 76>;
  else
    goto <bb 77>;

  <bb 76>:
  pretmp_3026 = visited[prephitmp_3739][prephitmp_3298][prephitmp_3681];
  goto <bb 78>;

  <bb 77>:
  # bcost_2273 = PHI <bcost_822(75), bcost_2192(72)>
  # bm0x_2507 = PHI <bm0x_2029(75), bm0x_2499(72)>
  # bm0y_2509 = PHI <bm0y_2030(75), bm0y_2501(72)>
  # bm1x_2511 = PHI <bm1x_2031(75), bm1x_2503(72)>
  # bm1y_2513 = PHI <bm1y_2032(75), bm1y_2505(72)>
  # prephitmp_3028 = PHI <prephitmp_3032(75), prephitmp_3040(72)>
  # prephitmp_3029 = PHI <prephitmp_3033(75), prephitmp_3042(72)>
  # prephitmp_3030 = PHI <prephitmp_3035(75), prephitmp_3304(72)>
  # prephitmp_3031 = PHI <prephitmp_3037(75), prephitmp_3741(72)>
  # prephitmp_3294 = PHI <prephitmp_3297(75), prephitmp_3041(72)>
  # prephitmp_3296 = PHI <prephitmp_3298(75), prephitmp_3043(72)>
  # prephitmp_3459 = PHI <prephitmp_3462(75), prephitmp_3300(72)>
  # prephitmp_3461 = PHI <prephitmp_3463(75), prephitmp_3302(72)>
  # prephitmp_3585 = PHI <prephitmp_3586(75), prephitmp_3465(72)>
  # prephitmp_3678 = PHI <prephitmp_3681(75), prephitmp_3588(72)>
  # prephitmp_3680 = PHI <prephitmp_3682(75), prephitmp_3590(72)>
  # prephitmp_3738 = PHI <prephitmp_3739(75), prephitmp_3684(72)>
  # DEBUG bcostrd => 1152921504606846976
  # DEBUG bcost => bcost_2273
  # DEBUG bm1y => bm1y_2513
  # DEBUG bm1x => bm1x_2511
  # DEBUG bm0y => bm0y_2509
  # DEBUG bm0x => bm0x_2507
  _775 = visited[prephitmp_3738][prephitmp_3296][prephitmp_3678];
  _776 = (int) _775;
  _778 = _776 >> prephitmp_3029;
  _779 = _778 & 1;
  if (_779 == 0)
    goto <bb 78>;
  else
    goto <bb 82>;

  <bb 78>:
  # bcost_2272 = PHI <bcost_822(76), bcost_2273(77)>
  # bm0x_2508 = PHI <bm0x_2029(76), bm0x_2507(77)>
  # bm0y_2510 = PHI <bm0y_2030(76), bm0y_2509(77)>
  # bm1x_2512 = PHI <bm1x_2031(76), bm1x_2511(77)>
  # bm1y_2514 = PHI <bm1y_2032(76), bm1y_2513(77)>
  # prephitmp_3020 = PHI <prephitmp_3681(76), prephitmp_3678(77)>
  # prephitmp_3021 = PHI <prephitmp_3033(76), prephitmp_3029(77)>
  # prephitmp_3023 = PHI <prephitmp_3298(76), prephitmp_3296(77)>
  # prephitmp_3025 = PHI <prephitmp_3739(76), prephitmp_3738(77)>
  # prephitmp_3027 = PHI <pretmp_3026(76), _775(77)>
  # prephitmp_3290 = PHI <prephitmp_3032(76), prephitmp_3028(77)>
  # prephitmp_3291 = PHI <prephitmp_3035(76), prephitmp_3030(77)>
  # prephitmp_3292 = PHI <prephitmp_3037(76), prephitmp_3031(77)>
  # prephitmp_3457 = PHI <prephitmp_3297(76), prephitmp_3294(77)>
  # prephitmp_3582 = PHI <prephitmp_3462(76), prephitmp_3459(77)>
  # prephitmp_3583 = PHI <prephitmp_3463(76), prephitmp_3461(77)>
  # prephitmp_3676 = PHI <prephitmp_3586(76), prephitmp_3585(77)>
  # prephitmp_3736 = PHI <prephitmp_3682(76), prephitmp_3680(77)>
  # DEBUG i0 => 8
  # DEBUG i1 => 4
  _784 = (signed char) prephitmp_3027;
  _786 = 1 << prephitmp_3021;
  _787 = (signed char) _786;
  _788 = _784 | _787;
  _789 = (unsigned char) _788;
  visited[prephitmp_3025][prephitmp_3023][prephitmp_3020] = _789;
  _790 = h_2(D)->mc.avg[_7];
  _791 = stride1[4];
  _792 = stride0[8];
  _790 (&pix, bw_8, _143, _792, src1$4_2157, _791, i_weight_5(D));
  _793 = h_2(D)->pixf.mbcmp[_7];
  _794 = m0_3(D)->p_fenc[0];
  _795 = _793 (_794, 16, &pix, bw_8);
  _796 = (sizetype) bm0x_2325;
  _797 = _796 + 1;
  _798 = _797 * 2;
  _799 = p_cost_m0x_19 + _798;
  _800 = *_799;
  _801 = (int) _800;
  _802 = _795 + _801;
  _803 = (sizetype) bm0y_2323;
  _804 = _803 + 1;
  _805 = _804 * 2;
  _806 = p_cost_m0y_26 + _805;
  _807 = *_806;
  _808 = (int) _807;
  _809 = _802 + _808;
  _810 = (long unsigned int) bm1x_2326;
  _811 = _810 * 2;
  _812 = p_cost_m1x_34 + _811;
  _813 = *_812;
  _814 = (int) _813;
  _815 = _809 + _814;
  _816 = (long unsigned int) bm1y_2324;
  _817 = _816 * 2;
  _818 = p_cost_m1y_41 + _817;
  _819 = *_818;
  _820 = (int) _819;
  bcost_821 = _815 + _820;
  # DEBUG cost => bcost_821
  if (bcost_821 < bcost_2272)
    goto <bb 80>;
  else
    goto <bb 79>;

  <bb 79>:

  <bb 80>:
  # bm0x_2033 = PHI <bm0x_2508(79), bm0x_107(78)>
  # bm0y_2034 = PHI <bm0y_2510(79), bm0y_126(78)>
  # bm1x_2035 = PHI <bm1x_2512(79), bm1x_2326(78)>
  # bm1y_2036 = PHI <bm1y_2514(79), bm1y_2324(78)>
  # bcost_873 = PHI <bcost_2272(79), bcost_821(78)>
  # DEBUG bcostrd => 1152921504606846976
  # DEBUG bcost => bcost_873
  # DEBUG bm1y => bm1y_2036
  # DEBUG bm1x => bm1x_2035
  # DEBUG bm0y => bm0y_2034
  # DEBUG bm0x => bm0x_2033
  if (pass_2189 == 0)
    goto <bb 81>;
  else
    goto <bb 82>;

  <bb 81>:
  pretmp_3013 = visited[prephitmp_3736][prephitmp_3292][prephitmp_3020];
  goto <bb 83>;

  <bb 82>:
  # bcost_2309 = PHI <bcost_873(80), bcost_2273(77)>
  # bm0x_2515 = PHI <bm0x_2033(80), bm0x_2507(77)>
  # bm0y_2517 = PHI <bm0y_2034(80), bm0y_2509(77)>
  # bm1x_2519 = PHI <bm1x_2035(80), bm1x_2511(77)>
  # bm1y_2521 = PHI <bm1y_2036(80), bm1y_2513(77)>
  # prephitmp_3015 = PHI <prephitmp_3020(80), prephitmp_3678(77)>
  # prephitmp_3016 = PHI <prephitmp_3021(80), prephitmp_3029(77)>
  # prephitmp_3017 = PHI <prephitmp_3023(80), prephitmp_3296(77)>
  # prephitmp_3018 = PHI <prephitmp_3025(80), prephitmp_3738(77)>
  # prephitmp_3285 = PHI <prephitmp_3290(80), prephitmp_3028(77)>
  # prephitmp_3287 = PHI <prephitmp_3291(80), prephitmp_3030(77)>
  # prephitmp_3289 = PHI <prephitmp_3292(80), prephitmp_3031(77)>
  # prephitmp_3456 = PHI <prephitmp_3457(80), prephitmp_3294(77)>
  # prephitmp_3579 = PHI <prephitmp_3582(80), prephitmp_3459(77)>
  # prephitmp_3581 = PHI <prephitmp_3583(80), prephitmp_3461(77)>
  # prephitmp_3675 = PHI <prephitmp_3676(80), prephitmp_3585(77)>
  # prephitmp_3735 = PHI <prephitmp_3736(80), prephitmp_3680(77)>
  # DEBUG bcostrd => 1152921504606846976
  # DEBUG bcost => bcost_2309
  # DEBUG bm1y => bm1y_2521
  # DEBUG bm1x => bm1x_2519
  # DEBUG bm0y => bm0y_2517
  # DEBUG bm0x => bm0x_2515
  _826 = visited[prephitmp_3735][prephitmp_3289][prephitmp_3015];
  _827 = (int) _826;
  _829 = _827 >> prephitmp_3016;
  _830 = _829 & 1;
  if (_830 == 0)
    goto <bb 83>;
  else
    goto <bb 87>;

  <bb 83>:
  # bcost_2307 = PHI <bcost_873(81), bcost_2309(82)>
  # bm0x_2516 = PHI <bm0x_2033(81), bm0x_2515(82)>
  # bm0y_2518 = PHI <bm0y_2034(81), bm0y_2517(82)>
  # bm1x_2520 = PHI <bm1x_2035(81), bm1x_2519(82)>
  # bm1y_2522 = PHI <bm1y_2036(81), bm1y_2521(82)>
  # prephitmp_3007 = PHI <prephitmp_3020(81), prephitmp_3015(82)>
  # prephitmp_3008 = PHI <prephitmp_3021(81), prephitmp_3016(82)>
  # prephitmp_3010 = PHI <prephitmp_3292(81), prephitmp_3289(82)>
  # prephitmp_3012 = PHI <prephitmp_3736(81), prephitmp_3735(82)>
  # prephitmp_3014 = PHI <pretmp_3013(81), _826(82)>
  # prephitmp_3282 = PHI <prephitmp_3023(81), prephitmp_3017(82)>
  # prephitmp_3283 = PHI <prephitmp_3025(81), prephitmp_3018(82)>
  # prephitmp_3453 = PHI <prephitmp_3290(81), prephitmp_3285(82)>
  # prephitmp_3454 = PHI <prephitmp_3291(81), prephitmp_3287(82)>
  # prephitmp_3577 = PHI <prephitmp_3457(81), prephitmp_3456(82)>
  # prephitmp_3672 = PHI <prephitmp_3582(81), prephitmp_3579(82)>
  # prephitmp_3673 = PHI <prephitmp_3583(81), prephitmp_3581(82)>
  # prephitmp_3733 = PHI <prephitmp_3676(81), prephitmp_3675(82)>
  # DEBUG i0 => 0
  # DEBUG i1 => 4
  _835 = (signed char) prephitmp_3014;
  _837 = 1 << prephitmp_3008;
  _838 = (signed char) _837;
  _839 = _835 | _838;
  _840 = (unsigned char) _839;
  visited[prephitmp_3012][prephitmp_3010][prephitmp_3007] = _840;
  _841 = h_2(D)->mc.avg[_7];
  _842 = stride1[4];
  _843 = stride0[0];
  _841 (&pix, bw_8, _149, _843, src1$4_2157, _842, i_weight_5(D));
  _844 = h_2(D)->pixf.mbcmp[_7];
  _845 = m0_3(D)->p_fenc[0];
  _846 = _844 (_845, 16, &pix, bw_8);
  _847 = (long unsigned int) bm0x_2325;
  _848 = _847 * 2;
  _849 = _848 + 18446744073709551614;
  _850 = p_cost_m0x_19 + _849;
  _851 = *_850;
  _852 = (int) _851;
  _853 = _846 + _852;
  _854 = (long unsigned int) bm0y_2323;
  _855 = _854 * 2;
  _856 = _855 + 18446744073709551614;
  _857 = p_cost_m0y_26 + _856;
  _858 = *_857;
  _859 = (int) _858;
  _860 = _853 + _859;
  _861 = (long unsigned int) bm1x_2326;
  _862 = _861 * 2;
  _863 = p_cost_m1x_34 + _862;
  _864 = *_863;
  _865 = (int) _864;
  _866 = _860 + _865;
  _867 = (long unsigned int) bm1y_2324;
  _868 = _867 * 2;
  _869 = p_cost_m1y_41 + _868;
  _870 = *_869;
  _871 = (int) _870;
  bcost_872 = _866 + _871;
  # DEBUG cost => bcost_872
  if (bcost_872 < bcost_2307)
    goto <bb 85>;
  else
    goto <bb 84>;

  <bb 84>:

  <bb 85>:
  # bm0x_2037 = PHI <bm0x_2516(84), bm0x_118(83)>
  # bm0y_2038 = PHI <bm0y_2518(84), bm0y_134(83)>
  # bm1x_2039 = PHI <bm1x_2520(84), bm1x_2326(83)>
  # bm1y_2040 = PHI <bm1y_2522(84), bm1y_2324(83)>
  # bcost_924 = PHI <bcost_2307(84), bcost_872(83)>
  # DEBUG bcostrd => 1152921504606846976
  # DEBUG bcost => bcost_924
  # DEBUG bm1y => bm1y_2040
  # DEBUG bm1x => bm1x_2039
  # DEBUG bm0y => bm0y_2038
  # DEBUG bm0x => bm0x_2037
  if (pass_2189 == 0)
    goto <bb 86>;
  else
    goto <bb 87>;

  <bb 86>:
  pretmp_3001 = visited[prephitmp_3283][prephitmp_3672][prephitmp_3007];
  goto <bb 88>;

  <bb 87>:
  # bcost_2310 = PHI <bcost_924(85), bcost_2309(82)>
  # bm0x_2523 = PHI <bm0x_2037(85), bm0x_2515(82)>
  # bm0y_2525 = PHI <bm0y_2038(85), bm0y_2517(82)>
  # bm1x_2527 = PHI <bm1x_2039(85), bm1x_2519(82)>
  # bm1y_2529 = PHI <bm1y_2040(85), bm1y_2521(82)>
  # prephitmp_3003 = PHI <prephitmp_3007(85), prephitmp_3015(82)>
  # prephitmp_3004 = PHI <prephitmp_3008(85), prephitmp_3016(82)>
  # prephitmp_3005 = PHI <prephitmp_3010(85), prephitmp_3289(82)>
  # prephitmp_3006 = PHI <prephitmp_3012(85), prephitmp_3735(82)>
  # prephitmp_3279 = PHI <prephitmp_3282(85), prephitmp_3017(82)>
  # prephitmp_3281 = PHI <prephitmp_3283(85), prephitmp_3018(82)>
  # prephitmp_3450 = PHI <prephitmp_3453(85), prephitmp_3285(82)>
  # prephitmp_3452 = PHI <prephitmp_3454(85), prephitmp_3287(82)>
  # prephitmp_3576 = PHI <prephitmp_3577(85), prephitmp_3456(82)>
  # prephitmp_3669 = PHI <prephitmp_3672(85), prephitmp_3579(82)>
  # prephitmp_3671 = PHI <prephitmp_3673(85), prephitmp_3581(82)>
  # prephitmp_3732 = PHI <prephitmp_3733(85), prephitmp_3675(82)>
  # DEBUG bcostrd => 1152921504606846976
  # DEBUG bcost => bcost_2310
  # DEBUG bm1y => bm1y_2529
  # DEBUG bm1x => bm1x_2527
  # DEBUG bm0y => bm0y_2525
  # DEBUG bm0x => bm0x_2523
  _877 = visited[prephitmp_3281][prephitmp_3669][prephitmp_3003];
  _878 = (int) _877;
  _880 = _878 >> prephitmp_3732;
  _881 = _880 & 1;
  if (_881 == 0)
    goto <bb 88>;
  else
    goto <bb 92>;

  <bb 88>:
  # bcost_2308 = PHI <bcost_924(86), bcost_2310(87)>
  # bm0x_2524 = PHI <bm0x_2037(86), bm0x_2523(87)>
  # bm0y_2526 = PHI <bm0y_2038(86), bm0y_2525(87)>
  # bm1x_2528 = PHI <bm1x_2039(86), bm1x_2527(87)>
  # bm1y_2530 = PHI <bm1y_2040(86), bm1y_2529(87)>
  # prephitmp_2995 = PHI <prephitmp_3672(86), prephitmp_3669(87)>
  # prephitmp_2996 = PHI <prephitmp_3007(86), prephitmp_3003(87)>
  # prephitmp_2998 = PHI <prephitmp_3733(86), prephitmp_3732(87)>
  # prephitmp_3000 = PHI <prephitmp_3283(86), prephitmp_3281(87)>
  # prephitmp_3002 = PHI <pretmp_3001(86), _877(87)>
  # prephitmp_3275 = PHI <prephitmp_3008(86), prephitmp_3004(87)>
  # prephitmp_3276 = PHI <prephitmp_3010(86), prephitmp_3005(87)>
  # prephitmp_3277 = PHI <prephitmp_3012(86), prephitmp_3006(87)>
  # prephitmp_3448 = PHI <prephitmp_3282(86), prephitmp_3279(87)>
  # prephitmp_3573 = PHI <prephitmp_3453(86), prephitmp_3450(87)>
  # prephitmp_3574 = PHI <prephitmp_3454(86), prephitmp_3452(87)>
  # prephitmp_3667 = PHI <prephitmp_3577(86), prephitmp_3576(87)>
  # prephitmp_3730 = PHI <prephitmp_3673(86), prephitmp_3671(87)>
  # DEBUG i0 => 7
  # DEBUG i1 => 5
  _886 = (signed char) prephitmp_3002;
  _888 = 1 << prephitmp_2998;
  _889 = (signed char) _888;
  _890 = _886 | _889;
  _891 = (unsigned char) _890;
  visited[prephitmp_3000][prephitmp_2995][prephitmp_2996] = _891;
  _892 = h_2(D)->mc.avg[_7];
  _893 = stride1[5];
  _894 = stride0[7];
  _892 (&pix, bw_8, _110, _894, _132, _893, i_weight_5(D));
  _895 = h_2(D)->pixf.mbcmp[_7];
  _896 = m0_3(D)->p_fenc[0];
  _897 = _895 (_896, 16, &pix, bw_8);
  _898 = (sizetype) bm0x_2325;
  _899 = _898 + 1;
  _900 = _899 * 2;
  _901 = p_cost_m0x_19 + _900;
  _902 = *_901;
  _903 = (int) _902;
  _904 = _897 + _903;
  _905 = (long unsigned int) bm0y_2323;
  _906 = _905 * 2;
  _907 = p_cost_m0y_26 + _906;
  _908 = *_907;
  _909 = (int) _908;
  _910 = _904 + _909;
  _911 = (long unsigned int) bm1x_2326;
  _912 = _911 * 2;
  _913 = p_cost_m1x_34 + _912;
  _914 = *_913;
  _915 = (int) _914;
  _916 = _910 + _915;
  _917 = (sizetype) bm1y_2324;
  _918 = _917 + 1;
  _919 = _918 * 2;
  _920 = p_cost_m1y_41 + _919;
  _921 = *_920;
  _922 = (int) _921;
  bcost_923 = _916 + _922;
  # DEBUG cost => bcost_923
  if (bcost_923 < bcost_2308)
    goto <bb 90>;
  else
    goto <bb 89>;

  <bb 89>:

  <bb 90>:
  # bm0x_2041 = PHI <bm0x_2524(89), bm0x_107(88)>
  # bm0y_2042 = PHI <bm0y_2526(89), bm0y_2323(88)>
  # bm1x_2043 = PHI <bm1x_2528(89), bm1x_2326(88)>
  # bm1y_2044 = PHI <bm1y_2530(89), bm1y_130(88)>
  # bcost_975 = PHI <bcost_2308(89), bcost_923(88)>
  # DEBUG bcostrd => 1152921504606846976
  # DEBUG bcost => bcost_975
  # DEBUG bm1y => bm1y_2044
  # DEBUG bm1x => bm1x_2043
  # DEBUG bm0y => bm0y_2042
  # DEBUG bm0x => bm0x_2041
  if (pass_2189 == 0)
    goto <bb 91>;
  else
    goto <bb 92>;

  <bb 91>:
  pretmp_2988 = visited[prephitmp_3277][prephitmp_2995][prephitmp_2996];
  goto <bb 93>;

  <bb 92>:
  # bcost_2193 = PHI <bcost_975(90), bcost_2310(87)>
  # bm0x_2531 = PHI <bm0x_2041(90), bm0x_2523(87)>
  # bm0y_2533 = PHI <bm0y_2042(90), bm0y_2525(87)>
  # bm1x_2535 = PHI <bm1x_2043(90), bm1x_2527(87)>
  # bm1y_2537 = PHI <bm1y_2044(90), bm1y_2529(87)>
  # prephitmp_2990 = PHI <prephitmp_2995(90), prephitmp_3669(87)>
  # prephitmp_2991 = PHI <prephitmp_2996(90), prephitmp_3003(87)>
  # prephitmp_2992 = PHI <prephitmp_2998(90), prephitmp_3732(87)>
  # prephitmp_2993 = PHI <prephitmp_3000(90), prephitmp_3281(87)>
  # prephitmp_3270 = PHI <prephitmp_3275(90), prephitmp_3004(87)>
  # prephitmp_3272 = PHI <prephitmp_3276(90), prephitmp_3005(87)>
  # prephitmp_3274 = PHI <prephitmp_3277(90), prephitmp_3006(87)>
  # prephitmp_3447 = PHI <prephitmp_3448(90), prephitmp_3279(87)>
  # prephitmp_3570 = PHI <prephitmp_3573(90), prephitmp_3450(87)>
  # prephitmp_3572 = PHI <prephitmp_3574(90), prephitmp_3452(87)>
  # prephitmp_3666 = PHI <prephitmp_3667(90), prephitmp_3576(87)>
  # prephitmp_3729 = PHI <prephitmp_3730(90), prephitmp_3671(87)>
  # DEBUG bcostrd => 1152921504606846976
  # DEBUG bcost => bcost_2193
  # DEBUG bm1y => bm1y_2537
  # DEBUG bm1x => bm1x_2535
  # DEBUG bm0y => bm0y_2533
  # DEBUG bm0x => bm0x_2531
  _928 = visited[prephitmp_3274][prephitmp_2990][prephitmp_2991];
  _929 = (int) _928;
  _931 = _929 >> prephitmp_3729;
  _932 = _931 & 1;
  if (_932 == 0)
    goto <bb 93>;
  else
    goto <bb 97>;

  <bb 93>:
  # bcost_2160 = PHI <bcost_975(91), bcost_2193(92)>
  # bm0x_2532 = PHI <bm0x_2041(91), bm0x_2531(92)>
  # bm0y_2534 = PHI <bm0y_2042(91), bm0y_2533(92)>
  # bm1x_2536 = PHI <bm1x_2043(91), bm1x_2535(92)>
  # bm1y_2538 = PHI <bm1y_2044(91), bm1y_2537(92)>
  # prephitmp_2982 = PHI <prephitmp_2995(91), prephitmp_2990(92)>
  # prephitmp_2983 = PHI <prephitmp_2996(91), prephitmp_2991(92)>
  # prephitmp_2985 = PHI <prephitmp_3730(91), prephitmp_3729(92)>
  # prephitmp_2987 = PHI <prephitmp_3277(91), prephitmp_3274(92)>
  # prephitmp_2989 = PHI <pretmp_2988(91), _928(92)>
  # prephitmp_3267 = PHI <prephitmp_2998(91), prephitmp_2992(92)>
  # prephitmp_3268 = PHI <prephitmp_3000(91), prephitmp_2993(92)>
  # prephitmp_3444 = PHI <prephitmp_3275(91), prephitmp_3270(92)>
  # prephitmp_3445 = PHI <prephitmp_3276(91), prephitmp_3272(92)>
  # prephitmp_3568 = PHI <prephitmp_3448(91), prephitmp_3447(92)>
  # prephitmp_3663 = PHI <prephitmp_3573(91), prephitmp_3570(92)>
  # prephitmp_3664 = PHI <prephitmp_3574(91), prephitmp_3572(92)>
  # prephitmp_3727 = PHI <prephitmp_3667(91), prephitmp_3666(92)>
  # DEBUG i0 => 1
  # DEBUG i1 => 3
  _937 = (signed char) prephitmp_2989;
  _939 = 1 << prephitmp_2985;
  _940 = (signed char) _939;
  _941 = _937 | _940;
  _942 = (unsigned char) _941;
  visited[prephitmp_2987][prephitmp_2982][prephitmp_2983] = _942;
  _943 = h_2(D)->mc.avg[_7];
  _944 = stride1[3];
  _945 = stride0[1];
  _943 (&pix, bw_8, _120, _945, _140, _944, i_weight_5(D));
  _946 = h_2(D)->pixf.mbcmp[_7];
  _947 = m0_3(D)->p_fenc[0];
  _948 = _946 (_947, 16, &pix, bw_8);
  _949 = (long unsigned int) bm0x_2325;
  _950 = _949 * 2;
  _951 = _950 + 18446744073709551614;
  _952 = p_cost_m0x_19 + _951;
  _953 = *_952;
  _954 = (int) _953;
  _955 = _948 + _954;
  _956 = (long unsigned int) bm0y_2323;
  _957 = _956 * 2;
  _958 = p_cost_m0y_26 + _957;
  _959 = *_958;
  _960 = (int) _959;
  _961 = _955 + _960;
  _962 = (long unsigned int) bm1x_2326;
  _963 = _962 * 2;
  _964 = p_cost_m1x_34 + _963;
  _965 = *_964;
  _966 = (int) _965;
  _967 = _961 + _966;
  _968 = (long unsigned int) bm1y_2324;
  _969 = _968 * 2;
  _970 = _969 + 18446744073709551614;
  _971 = p_cost_m1y_41 + _970;
  _972 = *_971;
  _973 = (int) _972;
  bcost_974 = _967 + _973;
  # DEBUG cost => bcost_974
  if (bcost_974 < bcost_2160)
    goto <bb 95>;
  else
    goto <bb 94>;

  <bb 94>:

  <bb 95>:
  # bm0x_2045 = PHI <bm0x_2532(94), bm0x_118(93)>
  # bm0y_2046 = PHI <bm0y_2534(94), bm0y_2323(93)>
  # bm1x_2047 = PHI <bm1x_2536(94), bm1x_2326(93)>
  # bm1y_2048 = PHI <bm1y_2538(94), bm1y_138(93)>
  # bcost_1026 = PHI <bcost_2160(94), bcost_974(93)>
  # DEBUG bcostrd => 1152921504606846976
  # DEBUG bcost => bcost_1026
  # DEBUG bm1y => bm1y_2048
  # DEBUG bm1x => bm1x_2047
  # DEBUG bm0y => bm0y_2046
  # DEBUG bm0x => bm0x_2045
  if (pass_2189 == 0)
    goto <bb 96>;
  else
    goto <bb 97>;

  <bb 96>:
  pretmp_2976 = visited[prephitmp_3663][prephitmp_3568][prephitmp_2983];
  goto <bb 98>;

  <bb 97>:
  # bcost_2275 = PHI <bcost_1026(95), bcost_2193(92)>
  # bm0x_2539 = PHI <bm0x_2045(95), bm0x_2531(92)>
  # bm0y_2541 = PHI <bm0y_2046(95), bm0y_2533(92)>
  # bm1x_2543 = PHI <bm1x_2047(95), bm1x_2535(92)>
  # bm1y_2545 = PHI <bm1y_2048(95), bm1y_2537(92)>
  # prephitmp_2978 = PHI <prephitmp_2982(95), prephitmp_2990(92)>
  # prephitmp_2979 = PHI <prephitmp_2983(95), prephitmp_2991(92)>
  # prephitmp_2980 = PHI <prephitmp_2985(95), prephitmp_3729(92)>
  # prephitmp_2981 = PHI <prephitmp_2987(95), prephitmp_3274(92)>
  # prephitmp_3264 = PHI <prephitmp_3267(95), prephitmp_2992(92)>
  # prephitmp_3266 = PHI <prephitmp_3268(95), prephitmp_2993(92)>
  # prephitmp_3441 = PHI <prephitmp_3444(95), prephitmp_3270(92)>
  # prephitmp_3443 = PHI <prephitmp_3445(95), prephitmp_3272(92)>
  # prephitmp_3567 = PHI <prephitmp_3568(95), prephitmp_3447(92)>
  # prephitmp_3660 = PHI <prephitmp_3663(95), prephitmp_3570(92)>
  # prephitmp_3662 = PHI <prephitmp_3664(95), prephitmp_3572(92)>
  # prephitmp_3726 = PHI <prephitmp_3727(95), prephitmp_3666(92)>
  # DEBUG bcostrd => 1152921504606846976
  # DEBUG bcost => bcost_2275
  # DEBUG bm1y => bm1y_2545
  # DEBUG bm1x => bm1x_2543
  # DEBUG bm0y => bm0y_2541
  # DEBUG bm0x => bm0x_2539
  _979 = visited[prephitmp_3660][prephitmp_3567][prephitmp_2979];
  _980 = (int) _979;
  _982 = _980 >> prephitmp_3264;
  _983 = _982 & 1;
  if (_983 == 0)
    goto <bb 98>;
  else
    goto <bb 102>;

  <bb 98>:
  # bcost_2274 = PHI <bcost_1026(96), bcost_2275(97)>
  # bm0x_2540 = PHI <bm0x_2045(96), bm0x_2539(97)>
  # bm0y_2542 = PHI <bm0y_2046(96), bm0y_2541(97)>
  # bm1x_2544 = PHI <bm1x_2047(96), bm1x_2543(97)>
  # bm1y_2546 = PHI <bm1y_2048(96), bm1y_2545(97)>
  # prephitmp_2970 = PHI <prephitmp_3663(96), prephitmp_3660(97)>
  # prephitmp_2971 = PHI <prephitmp_2983(96), prephitmp_2979(97)>
  # prephitmp_2973 = PHI <prephitmp_3267(96), prephitmp_3264(97)>
  # prephitmp_2975 = PHI <prephitmp_3568(96), prephitmp_3567(97)>
  # prephitmp_2977 = PHI <pretmp_2976(96), _979(97)>
  # prephitmp_3260 = PHI <prephitmp_2982(96), prephitmp_2978(97)>
  # prephitmp_3261 = PHI <prephitmp_2985(96), prephitmp_2980(97)>
  # prephitmp_3262 = PHI <prephitmp_2987(96), prephitmp_2981(97)>
  # prephitmp_3439 = PHI <prephitmp_3268(96), prephitmp_3266(97)>
  # prephitmp_3564 = PHI <prephitmp_3444(96), prephitmp_3441(97)>
  # prephitmp_3565 = PHI <prephitmp_3445(96), prephitmp_3443(97)>
  # prephitmp_3724 = PHI <prephitmp_3664(96), prephitmp_3662(97)>
  # prephitmp_3781 = PHI <prephitmp_3727(96), prephitmp_3726(97)>
  # DEBUG i0 => 5
  # DEBUG i1 => 5
  _988 = (signed char) prephitmp_2977;
  _990 = 1 << prephitmp_2973;
  _991 = (signed char) _990;
  _992 = _988 | _991;
  _993 = (unsigned char) _992;
  visited[prephitmp_2970][prephitmp_2975][prephitmp_2971] = _993;
  _994 = h_2(D)->mc.avg[_7];
  _995 = stride1[5];
  _996 = stride0[5];
  _994 (&pix, bw_8, _128, _996, _132, _995, i_weight_5(D));
  _997 = h_2(D)->pixf.mbcmp[_7];
  _998 = m0_3(D)->p_fenc[0];
  _999 = _997 (_998, 16, &pix, bw_8);
  _1000 = (long unsigned int) bm0x_2325;
  _1001 = _1000 * 2;
  _1002 = p_cost_m0x_19 + _1001;
  _1003 = *_1002;
  _1004 = (int) _1003;
  _1005 = _999 + _1004;
  _1006 = (sizetype) bm0y_2323;
  _1007 = _1006 + 1;
  _1008 = _1007 * 2;
  _1009 = p_cost_m0y_26 + _1008;
  _1010 = *_1009;
  _1011 = (int) _1010;
  _1012 = _1005 + _1011;
  _1013 = (long unsigned int) bm1x_2326;
  _1014 = _1013 * 2;
  _1015 = p_cost_m1x_34 + _1014;
  _1016 = *_1015;
  _1017 = (int) _1016;
  _1018 = _1012 + _1017;
  _1019 = (sizetype) bm1y_2324;
  _1020 = _1019 + 1;
  _1021 = _1020 * 2;
  _1022 = p_cost_m1y_41 + _1021;
  _1023 = *_1022;
  _1024 = (int) _1023;
  bcost_1025 = _1018 + _1024;
  # DEBUG cost => bcost_1025
  if (bcost_1025 < bcost_2274)
    goto <bb 100>;
  else
    goto <bb 99>;

  <bb 99>:

  <bb 100>:
  # bm0x_2049 = PHI <bm0x_2540(99), bm0x_2325(98)>
  # bm0y_2050 = PHI <bm0y_2542(99), bm0y_126(98)>
  # bm1x_2051 = PHI <bm1x_2544(99), bm1x_2326(98)>
  # bm1y_2052 = PHI <bm1y_2546(99), bm1y_130(98)>
  # bcost_1077 = PHI <bcost_2274(99), bcost_1025(98)>
  # DEBUG bcostrd => 1152921504606846976
  # DEBUG bcost => bcost_1077
  # DEBUG bm1y => bm1y_2052
  # DEBUG bm1x => bm1x_2051
  # DEBUG bm0y => bm0y_2050
  # DEBUG bm0x => bm0x_2049
  if (pass_2189 == 0)
    goto <bb 101>;
  else
    goto <bb 102>;

  <bb 101>:
  pretmp_2963 = visited[prephitmp_2970][prephitmp_3565][prephitmp_2971];
  goto <bb 103>;

  <bb 102>:
  # bcost_2305 = PHI <bcost_1077(100), bcost_2275(97)>
  # bm0x_2547 = PHI <bm0x_2049(100), bm0x_2539(97)>
  # bm0y_2549 = PHI <bm0y_2050(100), bm0y_2541(97)>
  # bm1x_2551 = PHI <bm1x_2051(100), bm1x_2543(97)>
  # bm1y_2553 = PHI <bm1y_2052(100), bm1y_2545(97)>
  # prephitmp_2965 = PHI <prephitmp_2970(100), prephitmp_3660(97)>
  # prephitmp_2966 = PHI <prephitmp_2971(100), prephitmp_2979(97)>
  # prephitmp_2967 = PHI <prephitmp_2973(100), prephitmp_3264(97)>
  # prephitmp_2968 = PHI <prephitmp_2975(100), prephitmp_3567(97)>
  # prephitmp_3255 = PHI <prephitmp_3260(100), prephitmp_2978(97)>
  # prephitmp_3257 = PHI <prephitmp_3261(100), prephitmp_2980(97)>
  # prephitmp_3259 = PHI <prephitmp_3262(100), prephitmp_2981(97)>
  # prephitmp_3438 = PHI <prephitmp_3439(100), prephitmp_3266(97)>
  # prephitmp_3561 = PHI <prephitmp_3564(100), prephitmp_3441(97)>
  # prephitmp_3563 = PHI <prephitmp_3565(100), prephitmp_3443(97)>
  # prephitmp_3723 = PHI <prephitmp_3724(100), prephitmp_3662(97)>
  # prephitmp_3780 = PHI <prephitmp_3781(100), prephitmp_3726(97)>
  # DEBUG bcostrd => 1152921504606846976
  # DEBUG bcost => bcost_2305
  # DEBUG bm1y => bm1y_2553
  # DEBUG bm1x => bm1x_2551
  # DEBUG bm0y => bm0y_2549
  # DEBUG bm0x => bm0x_2547
  _1030 = visited[prephitmp_2965][prephitmp_3563][prephitmp_2966];
  _1031 = (int) _1030;
  _1033 = _1031 >> prephitmp_3257;
  _1034 = _1033 & 1;
  if (_1034 == 0)
    goto <bb 103>;
  else
    goto <bb 107>;

  <bb 103>:
  # bcost_2303 = PHI <bcost_1077(101), bcost_2305(102)>
  # bm0x_2548 = PHI <bm0x_2049(101), bm0x_2547(102)>
  # bm0y_2550 = PHI <bm0y_2050(101), bm0y_2549(102)>
  # bm1x_2552 = PHI <bm1x_2051(101), bm1x_2551(102)>
  # bm1y_2554 = PHI <bm1y_2052(101), bm1y_2553(102)>
  # prephitmp_2957 = PHI <prephitmp_2970(101), prephitmp_2965(102)>
  # prephitmp_2958 = PHI <prephitmp_2971(101), prephitmp_2966(102)>
  # prephitmp_2960 = PHI <prephitmp_3261(101), prephitmp_3257(102)>
  # prephitmp_2962 = PHI <prephitmp_3565(101), prephitmp_3563(102)>
  # prephitmp_2964 = PHI <pretmp_2963(101), _1030(102)>
  # prephitmp_3252 = PHI <prephitmp_2973(101), prephitmp_2967(102)>
  # prephitmp_3253 = PHI <prephitmp_2975(101), prephitmp_2968(102)>
  # prephitmp_3435 = PHI <prephitmp_3260(101), prephitmp_3255(102)>
  # prephitmp_3436 = PHI <prephitmp_3262(101), prephitmp_3259(102)>
  # prephitmp_3559 = PHI <prephitmp_3439(101), prephitmp_3438(102)>
  # prephitmp_3658 = PHI <prephitmp_3564(101), prephitmp_3561(102)>
  # prephitmp_3778 = PHI <prephitmp_3724(101), prephitmp_3723(102)>
  # prephitmp_3799 = PHI <prephitmp_3781(101), prephitmp_3780(102)>
  # DEBUG i0 => 3
  # DEBUG i1 => 3
  _1039 = (signed char) prephitmp_2964;
  _1041 = 1 << prephitmp_2960;
  _1042 = (signed char) _1041;
  _1043 = _1039 | _1042;
  _1044 = (unsigned char) _1043;
  visited[prephitmp_2957][prephitmp_2962][prephitmp_2958] = _1044;
  _1045 = h_2(D)->mc.avg[_7];
  _1046 = stride1[3];
  _1047 = stride0[3];
  _1045 (&pix, bw_8, _136, _1047, _140, _1046, i_weight_5(D));
  _1048 = h_2(D)->pixf.mbcmp[_7];
  _1049 = m0_3(D)->p_fenc[0];
  _1050 = _1048 (_1049, 16, &pix, bw_8);
  _1051 = (long unsigned int) bm0x_2325;
  _1052 = _1051 * 2;
  _1053 = p_cost_m0x_19 + _1052;
  _1054 = *_1053;
  _1055 = (int) _1054;
  _1056 = _1050 + _1055;
  _1057 = (long unsigned int) bm0y_2323;
  _1058 = _1057 * 2;
  _1059 = _1058 + 18446744073709551614;
  _1060 = p_cost_m0y_26 + _1059;
  _1061 = *_1060;
  _1062 = (int) _1061;
  _1063 = _1056 + _1062;
  _1064 = (long unsigned int) bm1x_2326;
  _1065 = _1064 * 2;
  _1066 = p_cost_m1x_34 + _1065;
  _1067 = *_1066;
  _1068 = (int) _1067;
  _1069 = _1063 + _1068;
  _1070 = (long unsigned int) bm1y_2324;
  _1071 = _1070 * 2;
  _1072 = _1071 + 18446744073709551614;
  _1073 = p_cost_m1y_41 + _1072;
  _1074 = *_1073;
  _1075 = (int) _1074;
  bcost_1076 = _1069 + _1075;
  # DEBUG cost => bcost_1076
  if (bcost_1076 < bcost_2303)
    goto <bb 105>;
  else
    goto <bb 104>;

  <bb 104>:

  <bb 105>:
  # bm0x_2054 = PHI <bm0x_2548(104), bm0x_2325(103)>
  # bm0y_2055 = PHI <bm0y_2550(104), bm0y_134(103)>
  # bm1x_2056 = PHI <bm1x_2552(104), bm1x_2326(103)>
  # bm1y_2057 = PHI <bm1y_2554(104), bm1y_138(103)>
  # bcost_1140 = PHI <bcost_2303(104), bcost_1076(103)>
  # DEBUG bcostrd => 1152921504606846976
  # DEBUG bcost => bcost_1140
  # DEBUG bm1y => bm1y_2057
  # DEBUG bm1x => bm1x_2056
  # DEBUG bm0y => bm0y_2055
  # DEBUG bm0x => bm0x_2054
  if (pass_2189 == 0)
    goto <bb 106>;
  else
    goto <bb 107>;

  <bb 106>:
  pretmp_2951 = visited[prephitmp_3559][prephitmp_3435][prephitmp_3799];
  goto <bb 108>;

  <bb 107>:
  # bcost_2306 = PHI <bcost_1140(105), bcost_2305(102)>
  # bm0x_2555 = PHI <bm0x_2054(105), bm0x_2547(102)>
  # bm0y_2557 = PHI <bm0y_2055(105), bm0y_2549(102)>
  # bm1x_2559 = PHI <bm1x_2056(105), bm1x_2551(102)>
  # bm1y_2561 = PHI <bm1y_2057(105), bm1y_2553(102)>
  # prephitmp_2953 = PHI <prephitmp_2957(105), prephitmp_2965(102)>
  # prephitmp_2954 = PHI <prephitmp_2958(105), prephitmp_2966(102)>
  # prephitmp_2955 = PHI <prephitmp_2960(105), prephitmp_3257(102)>
  # prephitmp_2956 = PHI <prephitmp_2962(105), prephitmp_3563(102)>
  # prephitmp_3249 = PHI <prephitmp_3252(105), prephitmp_2967(102)>
  # prephitmp_3251 = PHI <prephitmp_3253(105), prephitmp_2968(102)>
  # prephitmp_3432 = PHI <prephitmp_3435(105), prephitmp_3255(102)>
  # prephitmp_3434 = PHI <prephitmp_3436(105), prephitmp_3259(102)>
  # prephitmp_3558 = PHI <prephitmp_3559(105), prephitmp_3438(102)>
  # prephitmp_3657 = PHI <prephitmp_3658(105), prephitmp_3561(102)>
  # prephitmp_3777 = PHI <prephitmp_3778(105), prephitmp_3723(102)>
  # prephitmp_3798 = PHI <prephitmp_3799(105), prephitmp_3780(102)>
  # DEBUG bcostrd => 1152921504606846976
  # DEBUG bcost => bcost_2306
  # DEBUG bm1y => bm1y_2561
  # DEBUG bm1x => bm1x_2559
  # DEBUG bm0y => bm0y_2557
  # DEBUG bm0x => bm0x_2555
  _1093 = visited[prephitmp_3558][prephitmp_3432][prephitmp_3798];
  _1094 = (int) _1093;
  _1096 = _1094 >> prephitmp_3657;
  _1097 = _1096 & 1;
  if (_1097 == 0)
    goto <bb 108>;
  else
    goto <bb 112>;

  <bb 108>:
  # bcost_2304 = PHI <bcost_1140(106), bcost_2306(107)>
  # bm0x_2556 = PHI <bm0x_2054(106), bm0x_2555(107)>
  # bm0y_2558 = PHI <bm0y_2055(106), bm0y_2557(107)>
  # bm1x_2560 = PHI <bm1x_2056(106), bm1x_2559(107)>
  # bm1y_2562 = PHI <bm1y_2057(106), bm1y_2561(107)>
  # prephitmp_2944 = PHI <prephitmp_3435(106), prephitmp_3432(107)>
  # prephitmp_2946 = PHI <prephitmp_3799(106), prephitmp_3798(107)>
  # prephitmp_2948 = PHI <prephitmp_3658(106), prephitmp_3657(107)>
  # prephitmp_2950 = PHI <prephitmp_3559(106), prephitmp_3558(107)>
  # prephitmp_2952 = PHI <pretmp_2951(106), _1093(107)>
  # prephitmp_3244 = PHI <prephitmp_2957(106), prephitmp_2953(107)>
  # prephitmp_3245 = PHI <prephitmp_2958(106), prephitmp_2954(107)>
  # prephitmp_3246 = PHI <prephitmp_2960(106), prephitmp_2955(107)>
  # prephitmp_3247 = PHI <prephitmp_2962(106), prephitmp_2956(107)>
  # prephitmp_3429 = PHI <prephitmp_3252(106), prephitmp_3249(107)>
  # prephitmp_3430 = PHI <prephitmp_3253(106), prephitmp_3251(107)>
  # prephitmp_3556 = PHI <prephitmp_3436(106), prephitmp_3434(107)>
  # prephitmp_3796 = PHI <prephitmp_3778(106), prephitmp_3777(107)>
  # DEBUG i0 => 7
  # DEBUG i1 => 7
  _1102 = (signed char) prephitmp_2952;
  _1104 = 1 << prephitmp_2948;
  _1105 = (signed char) _1104;
  _1106 = _1102 | _1105;
  _1107 = (unsigned char) _1106;
  visited[prephitmp_2950][prephitmp_2944][prephitmp_2946] = _1107;
  _1108 = h_2(D)->mc.avg[_7];
  _1109 = stride1[7];
  _1110 = stride0[7];
  _1108 (&pix, bw_8, _110, _1110, _116, _1109, i_weight_5(D));
  _1111 = h_2(D)->pixf.mbcmp[_7];
  _1112 = m0_3(D)->p_fenc[0];
  _1113 = _1111 (_1112, 16, &pix, bw_8);
  _1114 = (sizetype) bm0x_2325;
  _1115 = _1114 + 1;
  _1116 = _1115 * 2;
  _1117 = p_cost_m0x_19 + _1116;
  _1118 = *_1117;
  _1119 = (int) _1118;
  _1120 = _1113 + _1119;
  _1121 = (long unsigned int) bm0y_2323;
  _1122 = _1121 * 2;
  _1123 = p_cost_m0y_26 + _1122;
  _1124 = *_1123;
  _1125 = (int) _1124;
  _1126 = _1120 + _1125;
  _1127 = (sizetype) bm1x_2326;
  _1128 = _1127 + 1;
  _1129 = _1128 * 2;
  _1130 = p_cost_m1x_34 + _1129;
  _1131 = *_1130;
  _1132 = (int) _1131;
  _1133 = _1126 + _1132;
  _1134 = (long unsigned int) bm1y_2324;
  _1135 = _1134 * 2;
  _1136 = p_cost_m1y_41 + _1135;
  _1137 = *_1136;
  _1138 = (int) _1137;
  bcost_1139 = _1133 + _1138;
  # DEBUG cost => bcost_1139
  if (bcost_1139 < bcost_2304)
    goto <bb 110>;
  else
    goto <bb 109>;

  <bb 109>:

  <bb 110>:
  # bm0x_2059 = PHI <bm0x_2556(109), bm0x_107(108)>
  # bm0y_2060 = PHI <bm0y_2558(109), bm0y_2323(108)>
  # bm1x_2061 = PHI <bm1x_2560(109), bm1x_113(108)>
  # bm1y_2062 = PHI <bm1y_2562(109), bm1y_2324(108)>
  # bcost_1203 = PHI <bcost_2304(109), bcost_1139(108)>
  # DEBUG bcostrd => 1152921504606846976
  # DEBUG bcost => bcost_1203
  # DEBUG bm1y => bm1y_2062
  # DEBUG bm1x => bm1x_2061
  # DEBUG bm0y => bm0y_2060
  # DEBUG bm0x => bm0x_2059
  if (pass_2189 == 0)
    goto <bb 111>;
  else
    goto <bb 112>;

  <bb 111>:
  pretmp_2937 = visited[prephitmp_3556][prephitmp_2944][prephitmp_3796];
  goto <bb 113>;

  <bb 112>:
  # bcost_2194 = PHI <bcost_1203(110), bcost_2306(107)>
  # bm0x_2563 = PHI <bm0x_2059(110), bm0x_2555(107)>
  # bm0y_2565 = PHI <bm0y_2060(110), bm0y_2557(107)>
  # bm1x_2567 = PHI <bm1x_2061(110), bm1x_2559(107)>
  # bm1y_2569 = PHI <bm1y_2062(110), bm1y_2561(107)>
  # prephitmp_2939 = PHI <prephitmp_2944(110), prephitmp_3432(107)>
  # prephitmp_2940 = PHI <prephitmp_2946(110), prephitmp_3798(107)>
  # prephitmp_2941 = PHI <prephitmp_2948(110), prephitmp_3657(107)>
  # prephitmp_2942 = PHI <prephitmp_2950(110), prephitmp_3558(107)>
  # prephitmp_3237 = PHI <prephitmp_3244(110), prephitmp_2953(107)>
  # prephitmp_3239 = PHI <prephitmp_3245(110), prephitmp_2954(107)>
  # prephitmp_3241 = PHI <prephitmp_3246(110), prephitmp_2955(107)>
  # prephitmp_3243 = PHI <prephitmp_3247(110), prephitmp_2956(107)>
  # prephitmp_3426 = PHI <prephitmp_3429(110), prephitmp_3249(107)>
  # prephitmp_3428 = PHI <prephitmp_3430(110), prephitmp_3251(107)>
  # prephitmp_3555 = PHI <prephitmp_3556(110), prephitmp_3434(107)>
  # prephitmp_3795 = PHI <prephitmp_3796(110), prephitmp_3777(107)>
  # DEBUG bcostrd => 1152921504606846976
  # DEBUG bcost => bcost_2194
  # DEBUG bm1y => bm1y_2569
  # DEBUG bm1x => bm1x_2567
  # DEBUG bm0y => bm0y_2565
  # DEBUG bm0x => bm0x_2563
  _1156 = visited[prephitmp_3555][prephitmp_2939][prephitmp_3795];
  _1157 = (int) _1156;
  _1159 = _1157 >> prephitmp_2941;
  _1160 = _1159 & 1;
  if (_1160 == 0)
    goto <bb 113>;
  else
    goto <bb 117>;

  <bb 113>:
  # bcost_2161 = PHI <bcost_1203(111), bcost_2194(112)>
  # bm0x_2564 = PHI <bm0x_2059(111), bm0x_2563(112)>
  # bm0y_2566 = PHI <bm0y_2060(111), bm0y_2565(112)>
  # bm1x_2568 = PHI <bm1x_2061(111), bm1x_2567(112)>
  # bm1y_2570 = PHI <bm1y_2062(111), bm1y_2569(112)>
  # prephitmp_2931 = PHI <prephitmp_2944(111), prephitmp_2939(112)>
  # prephitmp_2932 = PHI <prephitmp_2948(111), prephitmp_2941(112)>
  # prephitmp_2934 = PHI <prephitmp_3796(111), prephitmp_3795(112)>
  # prephitmp_2936 = PHI <prephitmp_3556(111), prephitmp_3555(112)>
  # prephitmp_2938 = PHI <pretmp_2937(111), _1156(112)>
  # prephitmp_3234 = PHI <prephitmp_2946(111), prephitmp_2940(112)>
  # prephitmp_3235 = PHI <prephitmp_2950(111), prephitmp_2942(112)>
  # prephitmp_3421 = PHI <prephitmp_3244(111), prephitmp_3237(112)>
  # prephitmp_3422 = PHI <prephitmp_3245(111), prephitmp_3239(112)>
  # prephitmp_3423 = PHI <prephitmp_3246(111), prephitmp_3241(112)>
  # prephitmp_3424 = PHI <prephitmp_3247(111), prephitmp_3243(112)>
  # prephitmp_3552 = PHI <prephitmp_3429(111), prephitmp_3426(112)>
  # prephitmp_3553 = PHI <prephitmp_3430(111), prephitmp_3428(112)>
  # DEBUG i0 => 1
  # DEBUG i1 => 1
  _1165 = (signed char) prephitmp_2938;
  _1167 = 1 << prephitmp_2932;
  _1168 = (signed char) _1167;
  _1169 = _1165 | _1168;
  _1170 = (unsigned char) _1169;
  visited[prephitmp_2936][prephitmp_2931][prephitmp_2934] = _1170;
  _1171 = h_2(D)->mc.avg[_7];
  _1172 = stride1[1];
  _1173 = stride0[1];
  _1171 (&pix, bw_8, _120, _1173, _124, _1172, i_weight_5(D));
  _1174 = h_2(D)->pixf.mbcmp[_7];
  _1175 = m0_3(D)->p_fenc[0];
  _1176 = _1174 (_1175, 16, &pix, bw_8);
  _1177 = (long unsigned int) bm0x_2325;
  _1178 = _1177 * 2;
  _1179 = _1178 + 18446744073709551614;
  _1180 = p_cost_m0x_19 + _1179;
  _1181 = *_1180;
  _1182 = (int) _1181;
  _1183 = _1176 + _1182;
  _1184 = (long unsigned int) bm0y_2323;
  _1185 = _1184 * 2;
  _1186 = p_cost_m0y_26 + _1185;
  _1187 = *_1186;
  _1188 = (int) _1187;
  _1189 = _1183 + _1188;
  _1190 = (long unsigned int) bm1x_2326;
  _1191 = _1190 * 2;
  _1192 = _1191 + 18446744073709551614;
  _1193 = p_cost_m1x_34 + _1192;
  _1194 = *_1193;
  _1195 = (int) _1194;
  _1196 = _1189 + _1195;
  _1197 = (long unsigned int) bm1y_2324;
  _1198 = _1197 * 2;
  _1199 = p_cost_m1y_41 + _1198;
  _1200 = *_1199;
  _1201 = (int) _1200;
  bcost_1202 = _1196 + _1201;
  # DEBUG cost => bcost_1202
  if (bcost_1202 < bcost_2161)
    goto <bb 115>;
  else
    goto <bb 114>;

  <bb 114>:

  <bb 115>:
  # bm0x_2064 = PHI <bm0x_2564(114), bm0x_118(113)>
  # bm0y_2065 = PHI <bm0y_2566(114), bm0y_2323(113)>
  # bm1x_2066 = PHI <bm1x_2568(114), bm1x_122(113)>
  # bm1y_2067 = PHI <bm1y_2570(114), bm1y_2324(113)>
  # bcost_1266 = PHI <bcost_2161(114), bcost_1202(113)>
  # DEBUG bcostrd => 1152921504606846976
  # DEBUG bcost => bcost_1266
  # DEBUG bm1y => bm1y_2067
  # DEBUG bm1x => bm1x_2066
  # DEBUG bm0y => bm0y_2065
  # DEBUG bm0x => bm0x_2064
  if (pass_2189 == 0)
    goto <bb 116>;
  else
    goto <bb 117>;

  <bb 116>:
  pretmp_2925 = visited[prephitmp_3421][prephitmp_2931][prephitmp_2934];
  goto <bb 118>;

  <bb 117>:
  # bcost_2277 = PHI <bcost_1266(115), bcost_2194(112)>
  # bm0x_2571 = PHI <bm0x_2064(115), bm0x_2563(112)>
  # bm0y_2573 = PHI <bm0y_2065(115), bm0y_2565(112)>
  # bm1x_2575 = PHI <bm1x_2066(115), bm1x_2567(112)>
  # bm1y_2577 = PHI <bm1y_2067(115), bm1y_2569(112)>
  # prephitmp_2927 = PHI <prephitmp_2931(115), prephitmp_2939(112)>
  # prephitmp_2928 = PHI <prephitmp_2932(115), prephitmp_2941(112)>
  # prephitmp_2929 = PHI <prephitmp_2934(115), prephitmp_3795(112)>
  # prephitmp_2930 = PHI <prephitmp_2936(115), prephitmp_3555(112)>
  # prephitmp_3231 = PHI <prephitmp_3234(115), prephitmp_2940(112)>
  # prephitmp_3233 = PHI <prephitmp_3235(115), prephitmp_2942(112)>
  # prephitmp_3414 = PHI <prephitmp_3421(115), prephitmp_3237(112)>
  # prephitmp_3416 = PHI <prephitmp_3422(115), prephitmp_3239(112)>
  # prephitmp_3418 = PHI <prephitmp_3423(115), prephitmp_3241(112)>
  # prephitmp_3420 = PHI <prephitmp_3424(115), prephitmp_3243(112)>
  # prephitmp_3549 = PHI <prephitmp_3552(115), prephitmp_3426(112)>
  # prephitmp_3551 = PHI <prephitmp_3553(115), prephitmp_3428(112)>
  # DEBUG bcostrd => 1152921504606846976
  # DEBUG bcost => bcost_2277
  # DEBUG bm1y => bm1y_2577
  # DEBUG bm1x => bm1x_2575
  # DEBUG bm0y => bm0y_2573
  # DEBUG bm0x => bm0x_2571
  _1219 = visited[prephitmp_3414][prephitmp_2927][prephitmp_2929];
  _1220 = (int) _1219;
  _1222 = _1220 >> prephitmp_3549;
  _1223 = _1222 & 1;
  if (_1223 == 0)
    goto <bb 118>;
  else
    goto <bb 122>;

  <bb 118>:
  # bcost_2276 = PHI <bcost_1266(116), bcost_2277(117)>
  # bm0x_2572 = PHI <bm0x_2064(116), bm0x_2571(117)>
  # bm0y_2574 = PHI <bm0y_2065(116), bm0y_2573(117)>
  # bm1x_2576 = PHI <bm1x_2066(116), bm1x_2575(117)>
  # bm1y_2578 = PHI <bm1y_2067(116), bm1y_2577(117)>
  # prephitmp_2920 = PHI <prephitmp_3421(116), prephitmp_3414(117)>
  # prephitmp_2921 = PHI <prephitmp_2931(116), prephitmp_2927(117)>
  # prephitmp_2923 = PHI <prephitmp_3552(116), prephitmp_3549(117)>
  # prephitmp_2924 = PHI <prephitmp_2934(116), prephitmp_2929(117)>
  # prephitmp_2926 = PHI <pretmp_2925(116), _1219(117)>
  # prephitmp_3228 = PHI <prephitmp_2932(116), prephitmp_2928(117)>
  # prephitmp_3229 = PHI <prephitmp_2936(116), prephitmp_2930(117)>
  # prephitmp_3411 = PHI <prephitmp_3234(116), prephitmp_3231(117)>
  # prephitmp_3412 = PHI <prephitmp_3235(116), prephitmp_3233(117)>
  # prephitmp_3545 = PHI <prephitmp_3422(116), prephitmp_3416(117)>
  # prephitmp_3546 = PHI <prephitmp_3423(116), prephitmp_3418(117)>
  # prephitmp_3547 = PHI <prephitmp_3424(116), prephitmp_3420(117)>
  # prephitmp_3655 = PHI <prephitmp_3553(116), prephitmp_3551(117)>
  # DEBUG i0 => 4
  # DEBUG i1 => 2
  _1228 = (signed char) prephitmp_2926;
  _1230 = 1 << prephitmp_2923;
  _1231 = (signed char) _1230;
  _1232 = _1228 | _1231;
  _1233 = (unsigned char) _1232;
  visited[prephitmp_2920][prephitmp_2921][prephitmp_2924] = _1233;
  _1234 = h_2(D)->mc.avg[_7];
  _1235 = stride1[2];
  _1236 = stride0[4];
  _1234 (&pix, bw_8, src0$4_2156, _1236, _164, _1235, i_weight_5(D));
  _1237 = h_2(D)->pixf.mbcmp[_7];
  _1238 = m0_3(D)->p_fenc[0];
  _1239 = _1237 (_1238, 16, &pix, bw_8);
  _1240 = (long unsigned int) bm0x_2325;
  _1241 = _1240 * 2;
  _1242 = p_cost_m0x_19 + _1241;
  _1243 = *_1242;
  _1244 = (int) _1243;
  _1245 = _1239 + _1244;
  _1246 = (long unsigned int) bm0y_2323;
  _1247 = _1246 * 2;
  _1248 = p_cost_m0y_26 + _1247;
  _1249 = *_1248;
  _1250 = (int) _1249;
  _1251 = _1245 + _1250;
  _1252 = (long unsigned int) bm1x_2326;
  _1253 = _1252 * 2;
  _1254 = _1253 + 18446744073709551614;
  _1255 = p_cost_m1x_34 + _1254;
  _1256 = *_1255;
  _1257 = (int) _1256;
  _1258 = _1251 + _1257;
  _1259 = (sizetype) bm1y_2324;
  _1260 = _1259 + 1;
  _1261 = _1260 * 2;
  _1262 = p_cost_m1y_41 + _1261;
  _1263 = *_1262;
  _1264 = (int) _1263;
  bcost_1265 = _1258 + _1264;
  # DEBUG cost => bcost_1265
  if (bcost_1265 < bcost_2276)
    goto <bb 120>;
  else
    goto <bb 119>;

  <bb 119>:

  <bb 120>:
  # bm0x_2069 = PHI <bm0x_2572(119), bm0x_2325(118)>
  # bm0y_2070 = PHI <bm0y_2574(119), bm0y_2323(118)>
  # bm1x_2071 = PHI <bm1x_2576(119), bm1x_122(118)>
  # bm1y_2072 = PHI <bm1y_2578(119), bm1y_130(118)>
  # bcost_1329 = PHI <bcost_2276(119), bcost_1265(118)>
  # DEBUG bcostrd => 1152921504606846976
  # DEBUG bcost => bcost_1329
  # DEBUG bm1y => bm1y_2072
  # DEBUG bm1x => bm1x_2071
  # DEBUG bm0y => bm0y_2070
  # DEBUG bm0x => bm0x_2069
  if (pass_2189 == 0)
    goto <bb 121>;
  else
    goto <bb 122>;

  <bb 121>:
  pretmp_2913 = visited[prephitmp_2920][prephitmp_2921][prephitmp_3411];
  goto <bb 123>;

  <bb 122>:
  # bcost_2301 = PHI <bcost_1329(120), bcost_2277(117)>
  # bm0x_2579 = PHI <bm0x_2069(120), bm0x_2571(117)>
  # bm0y_2581 = PHI <bm0y_2070(120), bm0y_2573(117)>
  # bm1x_2583 = PHI <bm1x_2071(120), bm1x_2575(117)>
  # bm1y_2585 = PHI <bm1y_2072(120), bm1y_2577(117)>
  # prephitmp_2915 = PHI <prephitmp_2920(120), prephitmp_3414(117)>
  # prephitmp_2916 = PHI <prephitmp_2921(120), prephitmp_2927(117)>
  # prephitmp_2917 = PHI <prephitmp_2923(120), prephitmp_3549(117)>
  # prephitmp_2918 = PHI <prephitmp_2924(120), prephitmp_2929(117)>
  # prephitmp_3225 = PHI <prephitmp_3228(120), prephitmp_2928(117)>
  # prephitmp_3227 = PHI <prephitmp_3229(120), prephitmp_2930(117)>
  # prephitmp_3408 = PHI <prephitmp_3411(120), prephitmp_3231(117)>
  # prephitmp_3410 = PHI <prephitmp_3412(120), prephitmp_3233(117)>
  # prephitmp_3540 = PHI <prephitmp_3545(120), prephitmp_3416(117)>
  # prephitmp_3542 = PHI <prephitmp_3546(120), prephitmp_3418(117)>
  # prephitmp_3544 = PHI <prephitmp_3547(120), prephitmp_3420(117)>
  # prephitmp_3654 = PHI <prephitmp_3655(120), prephitmp_3551(117)>
  # DEBUG bcostrd => 1152921504606846976
  # DEBUG bcost => bcost_2301
  # DEBUG bm1y => bm1y_2585
  # DEBUG bm1x => bm1x_2583
  # DEBUG bm0y => bm0y_2581
  # DEBUG bm0x => bm0x_2579
  _1282 = visited[prephitmp_2915][prephitmp_2916][prephitmp_3408];
  _1283 = (int) _1282;
  _1285 = _1283 >> prephitmp_3542;
  _1286 = _1285 & 1;
  if (_1286 == 0)
    goto <bb 123>;
  else
    goto <bb 127>;

  <bb 123>:
  # bcost_2299 = PHI <bcost_1329(121), bcost_2301(122)>
  # bm0x_2580 = PHI <bm0x_2069(121), bm0x_2579(122)>
  # bm0y_2582 = PHI <bm0y_2070(121), bm0y_2581(122)>
  # bm1x_2584 = PHI <bm1x_2071(121), bm1x_2583(122)>
  # bm1y_2586 = PHI <bm1y_2072(121), bm1y_2585(122)>
  # prephitmp_2907 = PHI <prephitmp_2920(121), prephitmp_2915(122)>
  # prephitmp_2908 = PHI <prephitmp_2921(121), prephitmp_2916(122)>
  # prephitmp_2910 = PHI <prephitmp_3546(121), prephitmp_3542(122)>
  # prephitmp_2912 = PHI <prephitmp_3411(121), prephitmp_3408(122)>
  # prephitmp_2914 = PHI <pretmp_2913(121), _1282(122)>
  # prephitmp_3222 = PHI <prephitmp_2923(121), prephitmp_2917(122)>
  # prephitmp_3223 = PHI <prephitmp_2924(121), prephitmp_2918(122)>
  # prephitmp_3405 = PHI <prephitmp_3228(121), prephitmp_3225(122)>
  # prephitmp_3406 = PHI <prephitmp_3229(121), prephitmp_3227(122)>
  # prephitmp_3538 = PHI <prephitmp_3412(121), prephitmp_3410(122)>
  # prephitmp_3651 = PHI <prephitmp_3545(121), prephitmp_3540(122)>
  # prephitmp_3652 = PHI <prephitmp_3547(121), prephitmp_3544(122)>
  # prephitmp_3721 = PHI <prephitmp_3655(121), prephitmp_3654(122)>
  # DEBUG i0 => 4
  # DEBUG i1 => 6
  _1291 = (signed char) prephitmp_2914;
  _1293 = 1 << prephitmp_2910;
  _1294 = (signed char) _1293;
  _1295 = _1291 | _1294;
  _1296 = (unsigned char) _1295;
  visited[prephitmp_2907][prephitmp_2908][prephitmp_2912] = _1296;
  _1297 = h_2(D)->mc.avg[_7];
  _1298 = stride1[6];
  _1299 = stride0[4];
  _1297 (&pix, bw_8, src0$4_2156, _1299, _158, _1298, i_weight_5(D));
  _1300 = h_2(D)->pixf.mbcmp[_7];
  _1301 = m0_3(D)->p_fenc[0];
  _1302 = _1300 (_1301, 16, &pix, bw_8);
  _1303 = (long unsigned int) bm0x_2325;
  _1304 = _1303 * 2;
  _1305 = p_cost_m0x_19 + _1304;
  _1306 = *_1305;
  _1307 = (int) _1306;
  _1308 = _1302 + _1307;
  _1309 = (long unsigned int) bm0y_2323;
  _1310 = _1309 * 2;
  _1311 = p_cost_m0y_26 + _1310;
  _1312 = *_1311;
  _1313 = (int) _1312;
  _1314 = _1308 + _1313;
  _1315 = (sizetype) bm1x_2326;
  _1316 = _1315 + 1;
  _1317 = _1316 * 2;
  _1318 = p_cost_m1x_34 + _1317;
  _1319 = *_1318;
  _1320 = (int) _1319;
  _1321 = _1314 + _1320;
  _1322 = (long unsigned int) bm1y_2324;
  _1323 = _1322 * 2;
  _1324 = _1323 + 18446744073709551614;
  _1325 = p_cost_m1y_41 + _1324;
  _1326 = *_1325;
  _1327 = (int) _1326;
  bcost_1328 = _1321 + _1327;
  # DEBUG cost => bcost_1328
  if (bcost_1328 < bcost_2299)
    goto <bb 125>;
  else
    goto <bb 124>;

  <bb 124>:

  <bb 125>:
  # bm0x_2074 = PHI <bm0x_2580(124), bm0x_2325(123)>
  # bm0y_2075 = PHI <bm0y_2582(124), bm0y_2323(123)>
  # bm1x_2076 = PHI <bm1x_2584(124), bm1x_113(123)>
  # bm1y_2077 = PHI <bm1y_2586(124), bm1y_138(123)>
  # bcost_1392 = PHI <bcost_2299(124), bcost_1328(123)>
  # DEBUG bcostrd => 1152921504606846976
  # DEBUG bcost => bcost_1392
  # DEBUG bm1y => bm1y_2077
  # DEBUG bm1x => bm1x_2076
  # DEBUG bm0y => bm0y_2075
  # DEBUG bm0x => bm0x_2074
  if (pass_2189 == 0)
    goto <bb 126>;
  else
    goto <bb 127>;

  <bb 126>:
  pretmp_2901 = visited[prephitmp_2907][prephitmp_3652][prephitmp_2912];
  goto <bb 128>;

  <bb 127>:
  # bcost_2302 = PHI <bcost_1392(125), bcost_2301(122)>
  # bm0x_2587 = PHI <bm0x_2074(125), bm0x_2579(122)>
  # bm0y_2589 = PHI <bm0y_2075(125), bm0y_2581(122)>
  # bm1x_2591 = PHI <bm1x_2076(125), bm1x_2583(122)>
  # bm1y_2593 = PHI <bm1y_2077(125), bm1y_2585(122)>
  # prephitmp_2903 = PHI <prephitmp_2907(125), prephitmp_2915(122)>
  # prephitmp_2904 = PHI <prephitmp_2908(125), prephitmp_2916(122)>
  # prephitmp_2905 = PHI <prephitmp_2910(125), prephitmp_3542(122)>
  # prephitmp_2906 = PHI <prephitmp_2912(125), prephitmp_3408(122)>
  # prephitmp_3219 = PHI <prephitmp_3222(125), prephitmp_2917(122)>
  # prephitmp_3221 = PHI <prephitmp_3223(125), prephitmp_2918(122)>
  # prephitmp_3402 = PHI <prephitmp_3405(125), prephitmp_3225(122)>
  # prephitmp_3404 = PHI <prephitmp_3406(125), prephitmp_3227(122)>
  # prephitmp_3537 = PHI <prephitmp_3538(125), prephitmp_3410(122)>
  # prephitmp_3648 = PHI <prephitmp_3651(125), prephitmp_3540(122)>
  # prephitmp_3650 = PHI <prephitmp_3652(125), prephitmp_3544(122)>
  # prephitmp_3720 = PHI <prephitmp_3721(125), prephitmp_3654(122)>
  # DEBUG bcostrd => 1152921504606846976
  # DEBUG bcost => bcost_2302
  # DEBUG bm1y => bm1y_2593
  # DEBUG bm1x => bm1x_2591
  # DEBUG bm0y => bm0y_2589
  # DEBUG bm0x => bm0x_2587
  _1345 = visited[prephitmp_2903][prephitmp_3650][prephitmp_2906];
  _1346 = (int) _1345;
  _1348 = _1346 >> prephitmp_3402;
  _1349 = _1348 & 1;
  if (_1349 == 0)
    goto <bb 128>;
  else
    goto <bb 132>;

  <bb 128>:
  # bcost_2300 = PHI <bcost_1392(126), bcost_2302(127)>
  # bm0x_2588 = PHI <bm0x_2074(126), bm0x_2587(127)>
  # bm0y_2590 = PHI <bm0y_2075(126), bm0y_2589(127)>
  # bm1x_2592 = PHI <bm1x_2076(126), bm1x_2591(127)>
  # bm1y_2594 = PHI <bm1y_2077(126), bm1y_2593(127)>
  # prephitmp_2895 = PHI <prephitmp_2907(126), prephitmp_2903(127)>
  # prephitmp_2896 = PHI <prephitmp_2912(126), prephitmp_2906(127)>
  # prephitmp_2898 = PHI <prephitmp_3405(126), prephitmp_3402(127)>
  # prephitmp_2900 = PHI <prephitmp_3652(126), prephitmp_3650(127)>
  # prephitmp_2902 = PHI <pretmp_2901(126), _1345(127)>
  # prephitmp_3216 = PHI <prephitmp_2908(126), prephitmp_2904(127)>
  # prephitmp_3217 = PHI <prephitmp_2910(126), prephitmp_2905(127)>
  # prephitmp_3399 = PHI <prephitmp_3222(126), prephitmp_3219(127)>
  # prephitmp_3400 = PHI <prephitmp_3223(126), prephitmp_3221(127)>
  # prephitmp_3535 = PHI <prephitmp_3406(126), prephitmp_3404(127)>
  # prephitmp_3646 = PHI <prephitmp_3538(126), prephitmp_3537(127)>
  # prephitmp_3718 = PHI <prephitmp_3651(126), prephitmp_3648(127)>
  # prephitmp_3775 = PHI <prephitmp_3721(126), prephitmp_3720(127)>
  # DEBUG i0 => 3
  # DEBUG i1 => 7
  _1354 = (signed char) prephitmp_2902;
  _1356 = 1 << prephitmp_2898;
  _1357 = (signed char) _1356;
  _1358 = _1354 | _1357;
  _1359 = (unsigned char) _1358;
  visited[prephitmp_2895][prephitmp_2900][prephitmp_2896] = _1359;
  _1360 = h_2(D)->mc.avg[_7];
  _1361 = stride1[7];
  _1362 = stride0[3];
  _1360 (&pix, bw_8, _136, _1362, _116, _1361, i_weight_5(D));
  _1363 = h_2(D)->pixf.mbcmp[_7];
  _1364 = m0_3(D)->p_fenc[0];
  _1365 = _1363 (_1364, 16, &pix, bw_8);
  _1366 = (long unsigned int) bm0x_2325;
  _1367 = _1366 * 2;
  _1368 = p_cost_m0x_19 + _1367;
  _1369 = *_1368;
  _1370 = (int) _1369;
  _1371 = _1365 + _1370;
  _1372 = (long unsigned int) bm0y_2323;
  _1373 = _1372 * 2;
  _1374 = _1373 + 18446744073709551614;
  _1375 = p_cost_m0y_26 + _1374;
  _1376 = *_1375;
  _1377 = (int) _1376;
  _1378 = _1371 + _1377;
  _1379 = (sizetype) bm1x_2326;
  _1380 = _1379 + 1;
  _1381 = _1380 * 2;
  _1382 = p_cost_m1x_34 + _1381;
  _1383 = *_1382;
  _1384 = (int) _1383;
  _1385 = _1378 + _1384;
  _1386 = (long unsigned int) bm1y_2324;
  _1387 = _1386 * 2;
  _1388 = p_cost_m1y_41 + _1387;
  _1389 = *_1388;
  _1390 = (int) _1389;
  bcost_1391 = _1385 + _1390;
  # DEBUG cost => bcost_1391
  if (bcost_1391 < bcost_2300)
    goto <bb 130>;
  else
    goto <bb 129>;

  <bb 129>:

  <bb 130>:
  # bm0x_2079 = PHI <bm0x_2588(129), bm0x_2325(128)>
  # bm0y_2080 = PHI <bm0y_2590(129), bm0y_134(128)>
  # bm1x_2081 = PHI <bm1x_2592(129), bm1x_113(128)>
  # bm1y_2082 = PHI <bm1y_2594(129), bm1y_2324(128)>
  # bcost_1455 = PHI <bcost_2300(129), bcost_1391(128)>
  # DEBUG bcostrd => 1152921504606846976
  # DEBUG bcost => bcost_1455
  # DEBUG bm1y => bm1y_2082
  # DEBUG bm1x => bm1x_2081
  # DEBUG bm0y => bm0y_2080
  # DEBUG bm0x => bm0x_2079
  if (pass_2189 == 0)
    goto <bb 131>;
  else
    goto <bb 132>;

  <bb 131>:
  pretmp_2889 = visited[prephitmp_2895][prephitmp_3775][prephitmp_3400];
  goto <bb 133>;

  <bb 132>:
  # bcost_2195 = PHI <bcost_1455(130), bcost_2302(127)>
  # bm0x_2595 = PHI <bm0x_2079(130), bm0x_2587(127)>
  # bm0y_2597 = PHI <bm0y_2080(130), bm0y_2589(127)>
  # bm1x_2599 = PHI <bm1x_2081(130), bm1x_2591(127)>
  # bm1y_2601 = PHI <bm1y_2082(130), bm1y_2593(127)>
  # prephitmp_2891 = PHI <prephitmp_2895(130), prephitmp_2903(127)>
  # prephitmp_2892 = PHI <prephitmp_2896(130), prephitmp_2906(127)>
  # prephitmp_2893 = PHI <prephitmp_2898(130), prephitmp_3402(127)>
  # prephitmp_2894 = PHI <prephitmp_2900(130), prephitmp_3650(127)>
  # prephitmp_3213 = PHI <prephitmp_3216(130), prephitmp_2904(127)>
  # prephitmp_3215 = PHI <prephitmp_3217(130), prephitmp_2905(127)>
  # prephitmp_3396 = PHI <prephitmp_3399(130), prephitmp_3219(127)>
  # prephitmp_3398 = PHI <prephitmp_3400(130), prephitmp_3221(127)>
  # prephitmp_3534 = PHI <prephitmp_3535(130), prephitmp_3404(127)>
  # prephitmp_3645 = PHI <prephitmp_3646(130), prephitmp_3537(127)>
  # prephitmp_3717 = PHI <prephitmp_3718(130), prephitmp_3648(127)>
  # prephitmp_3774 = PHI <prephitmp_3775(130), prephitmp_3720(127)>
  # DEBUG bcostrd => 1152921504606846976
  # DEBUG bcost => bcost_2195
  # DEBUG bm1y => bm1y_2601
  # DEBUG bm1x => bm1x_2599
  # DEBUG bm0y => bm0y_2597
  # DEBUG bm0x => bm0x_2595
  _1408 = visited[prephitmp_2891][prephitmp_3774][prephitmp_3398];
  _1409 = (int) _1408;
  _1411 = _1409 >> prephitmp_2893;
  _1412 = _1411 & 1;
  if (_1412 == 0)
    goto <bb 133>;
  else
    goto <bb 137>;

  <bb 133>:
  # bcost_2162 = PHI <bcost_1455(131), bcost_2195(132)>
  # bm0x_2596 = PHI <bm0x_2079(131), bm0x_2595(132)>
  # bm0y_2598 = PHI <bm0y_2080(131), bm0y_2597(132)>
  # bm1x_2600 = PHI <bm1x_2081(131), bm1x_2599(132)>
  # bm1y_2602 = PHI <bm1y_2082(131), bm1y_2601(132)>
  # prephitmp_2883 = PHI <prephitmp_2895(131), prephitmp_2891(132)>
  # prephitmp_2884 = PHI <prephitmp_2898(131), prephitmp_2893(132)>
  # prephitmp_2886 = PHI <prephitmp_3400(131), prephitmp_3398(132)>
  # prephitmp_2888 = PHI <prephitmp_3775(131), prephitmp_3774(132)>
  # prephitmp_2890 = PHI <pretmp_2889(131), _1408(132)>
  # prephitmp_3210 = PHI <prephitmp_2896(131), prephitmp_2892(132)>
  # prephitmp_3211 = PHI <prephitmp_2900(131), prephitmp_2894(132)>
  # prephitmp_3393 = PHI <prephitmp_3216(131), prephitmp_3213(132)>
  # prephitmp_3394 = PHI <prephitmp_3217(131), prephitmp_3215(132)>
  # prephitmp_3532 = PHI <prephitmp_3399(131), prephitmp_3396(132)>
  # prephitmp_3643 = PHI <prephitmp_3535(131), prephitmp_3534(132)>
  # prephitmp_3715 = PHI <prephitmp_3646(131), prephitmp_3645(132)>
  # prephitmp_3772 = PHI <prephitmp_3718(131), prephitmp_3717(132)>
  # DEBUG i0 => 5
  # DEBUG i1 => 1
  _1417 = (signed char) prephitmp_2890;
  _1419 = 1 << prephitmp_2884;
  _1420 = (signed char) _1419;
  _1421 = _1417 | _1420;
  _1422 = (unsigned char) _1421;
  visited[prephitmp_2883][prephitmp_2888][prephitmp_2886] = _1422;
  _1423 = h_2(D)->mc.avg[_7];
  _1424 = stride1[1];
  _1425 = stride0[5];
  _1423 (&pix, bw_8, _128, _1425, _124, _1424, i_weight_5(D));
  _1426 = h_2(D)->pixf.mbcmp[_7];
  _1427 = m0_3(D)->p_fenc[0];
  _1428 = _1426 (_1427, 16, &pix, bw_8);
  _1429 = (long unsigned int) bm0x_2325;
  _1430 = _1429 * 2;
  _1431 = p_cost_m0x_19 + _1430;
  _1432 = *_1431;
  _1433 = (int) _1432;
  _1434 = _1428 + _1433;
  _1435 = (sizetype) bm0y_2323;
  _1436 = _1435 + 1;
  _1437 = _1436 * 2;
  _1438 = p_cost_m0y_26 + _1437;
  _1439 = *_1438;
  _1440 = (int) _1439;
  _1441 = _1434 + _1440;
  _1442 = (long unsigned int) bm1x_2326;
  _1443 = _1442 * 2;
  _1444 = _1443 + 18446744073709551614;
  _1445 = p_cost_m1x_34 + _1444;
  _1446 = *_1445;
  _1447 = (int) _1446;
  _1448 = _1441 + _1447;
  _1449 = (long unsigned int) bm1y_2324;
  _1450 = _1449 * 2;
  _1451 = p_cost_m1y_41 + _1450;
  _1452 = *_1451;
  _1453 = (int) _1452;
  bcost_1454 = _1448 + _1453;
  # DEBUG cost => bcost_1454
  if (bcost_1454 < bcost_2162)
    goto <bb 135>;
  else
    goto <bb 134>;

  <bb 134>:

  <bb 135>:
  # bm0x_2084 = PHI <bm0x_2596(134), bm0x_2325(133)>
  # bm0y_2085 = PHI <bm0y_2598(134), bm0y_126(133)>
  # bm1x_2086 = PHI <bm1x_2600(134), bm1x_122(133)>
  # bm1y_2087 = PHI <bm1y_2602(134), bm1y_2324(133)>
  # bcost_1518 = PHI <bcost_2162(134), bcost_1454(133)>
  # DEBUG bcostrd => 1152921504606846976
  # DEBUG bcost => bcost_1518
  # DEBUG bm1y => bm1y_2087
  # DEBUG bm1x => bm1x_2086
  # DEBUG bm0y => bm0y_2085
  # DEBUG bm0x => bm0x_2084
  if (pass_2189 == 0)
    goto <bb 136>;
  else
    goto <bb 137>;

  <bb 136>:
  pretmp_2877 = visited[prephitmp_3643][prephitmp_2888][prephitmp_3772];
  goto <bb 138>;

  <bb 137>:
  # bcost_2279 = PHI <bcost_1518(135), bcost_2195(132)>
  # bm0x_2603 = PHI <bm0x_2084(135), bm0x_2595(132)>
  # bm0y_2605 = PHI <bm0y_2085(135), bm0y_2597(132)>
  # bm1x_2607 = PHI <bm1x_2086(135), bm1x_2599(132)>
  # bm1y_2609 = PHI <bm1y_2087(135), bm1y_2601(132)>
  # prephitmp_2879 = PHI <prephitmp_2883(135), prephitmp_2891(132)>
  # prephitmp_2880 = PHI <prephitmp_2884(135), prephitmp_2893(132)>
  # prephitmp_2881 = PHI <prephitmp_2886(135), prephitmp_3398(132)>
  # prephitmp_2882 = PHI <prephitmp_2888(135), prephitmp_3774(132)>
  # prephitmp_3207 = PHI <prephitmp_3210(135), prephitmp_2892(132)>
  # prephitmp_3209 = PHI <prephitmp_3211(135), prephitmp_2894(132)>
  # prephitmp_3390 = PHI <prephitmp_3393(135), prephitmp_3213(132)>
  # prephitmp_3392 = PHI <prephitmp_3394(135), prephitmp_3215(132)>
  # prephitmp_3531 = PHI <prephitmp_3532(135), prephitmp_3396(132)>
  # prephitmp_3642 = PHI <prephitmp_3643(135), prephitmp_3534(132)>
  # prephitmp_3714 = PHI <prephitmp_3715(135), prephitmp_3645(132)>
  # prephitmp_3771 = PHI <prephitmp_3772(135), prephitmp_3717(132)>
  # DEBUG bcostrd => 1152921504606846976
  # DEBUG bcost => bcost_2279
  # DEBUG bm1y => bm1y_2609
  # DEBUG bm1x => bm1x_2607
  # DEBUG bm0y => bm0y_2605
  # DEBUG bm0x => bm0x_2603
  _1471 = visited[prephitmp_3642][prephitmp_2882][prephitmp_3771];
  _1472 = (int) _1471;
  _1474 = _1472 >> prephitmp_2880;
  _1475 = _1474 & 1;
  if (_1475 == 0)
    goto <bb 138>;
  else
    goto <bb 142>;

  <bb 138>:
  # bcost_2278 = PHI <bcost_1518(136), bcost_2279(137)>
  # bm0x_2604 = PHI <bm0x_2084(136), bm0x_2603(137)>
  # bm0y_2606 = PHI <bm0y_2085(136), bm0y_2605(137)>
  # bm1x_2608 = PHI <bm1x_2086(136), bm1x_2607(137)>
  # bm1y_2610 = PHI <bm1y_2087(136), bm1y_2609(137)>
  # prephitmp_2872 = PHI <prephitmp_3772(136), prephitmp_3771(137)>
  # prephitmp_2873 = PHI <prephitmp_2884(136), prephitmp_2880(137)>
  # prephitmp_2874 = PHI <prephitmp_2888(136), prephitmp_2882(137)>
  # prephitmp_2876 = PHI <prephitmp_3643(136), prephitmp_3642(137)>
  # prephitmp_2878 = PHI <pretmp_2877(136), _1471(137)>
  # prephitmp_3204 = PHI <prephitmp_2883(136), prephitmp_2879(137)>
  # prephitmp_3205 = PHI <prephitmp_2886(136), prephitmp_2881(137)>
  # prephitmp_3387 = PHI <prephitmp_3210(136), prephitmp_3207(137)>
  # prephitmp_3388 = PHI <prephitmp_3211(136), prephitmp_3209(137)>
  # prephitmp_3528 = PHI <prephitmp_3393(136), prephitmp_3390(137)>
  # prephitmp_3529 = PHI <prephitmp_3394(136), prephitmp_3392(137)>
  # prephitmp_3640 = PHI <prephitmp_3532(136), prephitmp_3531(137)>
  # prephitmp_3769 = PHI <prephitmp_3715(136), prephitmp_3714(137)>
  # DEBUG i0 => 2
  # DEBUG i1 => 4
  _1480 = (signed char) prephitmp_2878;
  _1482 = 1 << prephitmp_2873;
  _1483 = (signed char) _1482;
  _1484 = _1480 | _1483;
  _1485 = (unsigned char) _1484;
  visited[prephitmp_2876][prephitmp_2874][prephitmp_2872] = _1485;
  _1486 = h_2(D)->mc.avg[_7];
  _1487 = stride1[4];
  _1488 = stride0[2];
  _1486 (&pix, bw_8, _161, _1488, src1$4_2157, _1487, i_weight_5(D));
  _1489 = h_2(D)->pixf.mbcmp[_7];
  _1490 = m0_3(D)->p_fenc[0];
  _1491 = _1489 (_1490, 16, &pix, bw_8);
  _1492 = (long unsigned int) bm0x_2325;
  _1493 = _1492 * 2;
  _1494 = _1493 + 18446744073709551614;
  _1495 = p_cost_m0x_19 + _1494;
  _1496 = *_1495;
  _1497 = (int) _1496;
  _1498 = _1491 + _1497;
  _1499 = (sizetype) bm0y_2323;
  _1500 = _1499 + 1;
  _1501 = _1500 * 2;
  _1502 = p_cost_m0y_26 + _1501;
  _1503 = *_1502;
  _1504 = (int) _1503;
  _1505 = _1498 + _1504;
  _1506 = (long unsigned int) bm1x_2326;
  _1507 = _1506 * 2;
  _1508 = p_cost_m1x_34 + _1507;
  _1509 = *_1508;
  _1510 = (int) _1509;
  _1511 = _1505 + _1510;
  _1512 = (long unsigned int) bm1y_2324;
  _1513 = _1512 * 2;
  _1514 = p_cost_m1y_41 + _1513;
  _1515 = *_1514;
  _1516 = (int) _1515;
  bcost_1517 = _1511 + _1516;
  # DEBUG cost => bcost_1517
  if (bcost_1517 < bcost_2278)
    goto <bb 140>;
  else
    goto <bb 139>;

  <bb 139>:

  <bb 140>:
  # bm0x_2089 = PHI <bm0x_2604(139), bm0x_118(138)>
  # bm0y_2090 = PHI <bm0y_2606(139), bm0y_126(138)>
  # bm1x_2091 = PHI <bm1x_2608(139), bm1x_2326(138)>
  # bm1y_2092 = PHI <bm1y_2610(139), bm1y_2324(138)>
  # bcost_1581 = PHI <bcost_2278(139), bcost_1517(138)>
  # DEBUG bcostrd => 1152921504606846976
  # DEBUG bcost => bcost_1581
  # DEBUG bm1y => bm1y_2092
  # DEBUG bm1x => bm1x_2091
  # DEBUG bm0y => bm0y_2090
  # DEBUG bm0x => bm0x_2089
  if (pass_2189 == 0)
    goto <bb 141>;
  else
    goto <bb 142>;

  <bb 141>:
  pretmp_2865 = visited[prephitmp_3769][prephitmp_3388][prephitmp_2872];
  goto <bb 143>;

  <bb 142>:
  # bcost_2297 = PHI <bcost_1581(140), bcost_2279(137)>
  # bm0x_2611 = PHI <bm0x_2089(140), bm0x_2603(137)>
  # bm0y_2613 = PHI <bm0y_2090(140), bm0y_2605(137)>
  # bm1x_2615 = PHI <bm1x_2091(140), bm1x_2607(137)>
  # bm1y_2617 = PHI <bm1y_2092(140), bm1y_2609(137)>
  # prephitmp_2867 = PHI <prephitmp_2872(140), prephitmp_3771(137)>
  # prephitmp_2868 = PHI <prephitmp_2873(140), prephitmp_2880(137)>
  # prephitmp_2869 = PHI <prephitmp_2874(140), prephitmp_2882(137)>
  # prephitmp_2870 = PHI <prephitmp_2876(140), prephitmp_3642(137)>
  # prephitmp_3201 = PHI <prephitmp_3204(140), prephitmp_2879(137)>
  # prephitmp_3203 = PHI <prephitmp_3205(140), prephitmp_2881(137)>
  # prephitmp_3384 = PHI <prephitmp_3387(140), prephitmp_3207(137)>
  # prephitmp_3386 = PHI <prephitmp_3388(140), prephitmp_3209(137)>
  # prephitmp_3525 = PHI <prephitmp_3528(140), prephitmp_3390(137)>
  # prephitmp_3527 = PHI <prephitmp_3529(140), prephitmp_3392(137)>
  # prephitmp_3639 = PHI <prephitmp_3640(140), prephitmp_3531(137)>
  # prephitmp_3768 = PHI <prephitmp_3769(140), prephitmp_3714(137)>
  # DEBUG bcostrd => 1152921504606846976
  # DEBUG bcost => bcost_2297
  # DEBUG bm1y => bm1y_2617
  # DEBUG bm1x => bm1x_2615
  # DEBUG bm0y => bm0y_2613
  # DEBUG bm0x => bm0x_2611
  _1534 = visited[prephitmp_3768][prephitmp_3386][prephitmp_2867];
  _1535 = (int) _1534;
  _1537 = _1535 >> prephitmp_2868;
  _1538 = _1537 & 1;
  if (_1538 == 0)
    goto <bb 143>;
  else
    goto <bb 147>;

  <bb 143>:
  # bcost_2295 = PHI <bcost_1581(141), bcost_2297(142)>
  # bm0x_2612 = PHI <bm0x_2089(141), bm0x_2611(142)>
  # bm0y_2614 = PHI <bm0y_2090(141), bm0y_2613(142)>
  # bm1x_2616 = PHI <bm1x_2091(141), bm1x_2615(142)>
  # bm1y_2618 = PHI <bm1y_2092(141), bm1y_2617(142)>
  # prephitmp_2859 = PHI <prephitmp_2872(141), prephitmp_2867(142)>
  # prephitmp_2860 = PHI <prephitmp_2873(141), prephitmp_2868(142)>
  # prephitmp_2862 = PHI <prephitmp_3388(141), prephitmp_3386(142)>
  # prephitmp_2864 = PHI <prephitmp_3769(141), prephitmp_3768(142)>
  # prephitmp_2866 = PHI <pretmp_2865(141), _1534(142)>
  # prephitmp_3198 = PHI <prephitmp_2874(141), prephitmp_2869(142)>
  # prephitmp_3199 = PHI <prephitmp_2876(141), prephitmp_2870(142)>
  # prephitmp_3381 = PHI <prephitmp_3204(141), prephitmp_3201(142)>
  # prephitmp_3382 = PHI <prephitmp_3205(141), prephitmp_3203(142)>
  # prephitmp_3523 = PHI <prephitmp_3387(141), prephitmp_3384(142)>
  # prephitmp_3636 = PHI <prephitmp_3528(141), prephitmp_3525(142)>
  # prephitmp_3637 = PHI <prephitmp_3529(141), prephitmp_3527(142)>
  # prephitmp_3712 = PHI <prephitmp_3640(141), prephitmp_3639(142)>
  # DEBUG i0 => 6
  # DEBUG i1 => 4
  _1543 = (signed char) prephitmp_2866;
  _1545 = 1 << prephitmp_2860;
  _1546 = (signed char) _1545;
  _1547 = _1543 | _1546;
  _1548 = (unsigned char) _1547;
  visited[prephitmp_2864][prephitmp_2862][prephitmp_2859] = _1548;
  _1549 = h_2(D)->mc.avg[_7];
  _1550 = stride1[4];
  _1551 = stride0[6];
  _1549 (&pix, bw_8, _155, _1551, src1$4_2157, _1550, i_weight_5(D));
  _1552 = h_2(D)->pixf.mbcmp[_7];
  _1553 = m0_3(D)->p_fenc[0];
  _1554 = _1552 (_1553, 16, &pix, bw_8);
  _1555 = (sizetype) bm0x_2325;
  _1556 = _1555 + 1;
  _1557 = _1556 * 2;
  _1558 = p_cost_m0x_19 + _1557;
  _1559 = *_1558;
  _1560 = (int) _1559;
  _1561 = _1554 + _1560;
  _1562 = (long unsigned int) bm0y_2323;
  _1563 = _1562 * 2;
  _1564 = _1563 + 18446744073709551614;
  _1565 = p_cost_m0y_26 + _1564;
  _1566 = *_1565;
  _1567 = (int) _1566;
  _1568 = _1561 + _1567;
  _1569 = (long unsigned int) bm1x_2326;
  _1570 = _1569 * 2;
  _1571 = p_cost_m1x_34 + _1570;
  _1572 = *_1571;
  _1573 = (int) _1572;
  _1574 = _1568 + _1573;
  _1575 = (long unsigned int) bm1y_2324;
  _1576 = _1575 * 2;
  _1577 = p_cost_m1y_41 + _1576;
  _1578 = *_1577;
  _1579 = (int) _1578;
  bcost_1580 = _1574 + _1579;
  # DEBUG cost => bcost_1580
  if (bcost_1580 < bcost_2295)
    goto <bb 145>;
  else
    goto <bb 144>;

  <bb 144>:

  <bb 145>:
  # bm0x_2094 = PHI <bm0x_2612(144), bm0x_107(143)>
  # bm0y_2095 = PHI <bm0y_2614(144), bm0y_134(143)>
  # bm1x_2096 = PHI <bm1x_2616(144), bm1x_2326(143)>
  # bm1y_2097 = PHI <bm1y_2618(144), bm1y_2324(143)>
  # bcost_1644 = PHI <bcost_2295(144), bcost_1580(143)>
  # DEBUG bcostrd => 1152921504606846976
  # DEBUG bcost => bcost_1644
  # DEBUG bm1y => bm1y_2097
  # DEBUG bm1x => bm1x_2096
  # DEBUG bm0y => bm0y_2095
  # DEBUG bm0x => bm0x_2094
  if (pass_2189 == 0)
    goto <bb 146>;
  else
    goto <bb 147>;

  <bb 146>:
  pretmp_2853 = visited[prephitmp_2864][prephitmp_3636][prephitmp_2859];
  goto <bb 148>;

  <bb 147>:
  # bcost_2298 = PHI <bcost_1644(145), bcost_2297(142)>
  # bm0x_2619 = PHI <bm0x_2094(145), bm0x_2611(142)>
  # bm0y_2621 = PHI <bm0y_2095(145), bm0y_2613(142)>
  # bm1x_2623 = PHI <bm1x_2096(145), bm1x_2615(142)>
  # bm1y_2625 = PHI <bm1y_2097(145), bm1y_2617(142)>
  # prephitmp_2855 = PHI <prephitmp_2859(145), prephitmp_2867(142)>
  # prephitmp_2856 = PHI <prephitmp_2860(145), prephitmp_2868(142)>
  # prephitmp_2857 = PHI <prephitmp_2862(145), prephitmp_3386(142)>
  # prephitmp_2858 = PHI <prephitmp_2864(145), prephitmp_3768(142)>
  # prephitmp_3195 = PHI <prephitmp_3198(145), prephitmp_2869(142)>
  # prephitmp_3197 = PHI <prephitmp_3199(145), prephitmp_2870(142)>
  # prephitmp_3378 = PHI <prephitmp_3381(145), prephitmp_3201(142)>
  # prephitmp_3380 = PHI <prephitmp_3382(145), prephitmp_3203(142)>
  # prephitmp_3522 = PHI <prephitmp_3523(145), prephitmp_3384(142)>
  # prephitmp_3633 = PHI <prephitmp_3636(145), prephitmp_3525(142)>
  # prephitmp_3635 = PHI <prephitmp_3637(145), prephitmp_3527(142)>
  # prephitmp_3711 = PHI <prephitmp_3712(145), prephitmp_3639(142)>
  # DEBUG bcostrd => 1152921504606846976
  # DEBUG bcost => bcost_2298
  # DEBUG bm1y => bm1y_2625
  # DEBUG bm1x => bm1x_2623
  # DEBUG bm0y => bm0y_2621
  # DEBUG bm0x => bm0x_2619
  _1597 = visited[prephitmp_2858][prephitmp_3633][prephitmp_2855];
  _1598 = (int) _1597;
  _1600 = _1598 >> prephitmp_3635;
  _1601 = _1600 & 1;
  if (_1601 == 0)
    goto <bb 148>;
  else
    goto <bb 152>;

  <bb 148>:
  # bcost_2296 = PHI <bcost_1644(146), bcost_2298(147)>
  # bm0x_2620 = PHI <bm0x_2094(146), bm0x_2619(147)>
  # bm0y_2622 = PHI <bm0y_2095(146), bm0y_2621(147)>
  # bm1x_2624 = PHI <bm1x_2096(146), bm1x_2623(147)>
  # bm1y_2626 = PHI <bm1y_2097(146), bm1y_2625(147)>
  # prephitmp_2848 = PHI <prephitmp_3636(146), prephitmp_3633(147)>
  # prephitmp_2849 = PHI <prephitmp_2859(146), prephitmp_2855(147)>
  # prephitmp_2851 = PHI <prephitmp_3637(146), prephitmp_3635(147)>
  # prephitmp_2852 = PHI <prephitmp_2864(146), prephitmp_2858(147)>
  # prephitmp_2854 = PHI <pretmp_2853(146), _1597(147)>
  # prephitmp_3192 = PHI <prephitmp_2860(146), prephitmp_2856(147)>
  # prephitmp_3193 = PHI <prephitmp_2862(146), prephitmp_2857(147)>
  # prephitmp_3375 = PHI <prephitmp_3198(146), prephitmp_3195(147)>
  # prephitmp_3376 = PHI <prephitmp_3199(146), prephitmp_3197(147)>
  # prephitmp_3519 = PHI <prephitmp_3381(146), prephitmp_3378(147)>
  # prephitmp_3520 = PHI <prephitmp_3382(146), prephitmp_3380(147)>
  # prephitmp_3631 = PHI <prephitmp_3523(146), prephitmp_3522(147)>
  # prephitmp_3766 = PHI <prephitmp_3712(146), prephitmp_3711(147)>
  # DEBUG i0 => 7
  # DEBUG i1 => 3
  _1606 = (signed char) prephitmp_2854;
  _1608 = 1 << prephitmp_2851;
  _1609 = (signed char) _1608;
  _1610 = _1606 | _1609;
  _1611 = (unsigned char) _1610;
  visited[prephitmp_2852][prephitmp_2848][prephitmp_2849] = _1611;
  _1612 = h_2(D)->mc.avg[_7];
  _1613 = stride1[3];
  _1614 = stride0[7];
  _1612 (&pix, bw_8, _110, _1614, _140, _1613, i_weight_5(D));
  _1615 = h_2(D)->pixf.mbcmp[_7];
  _1616 = m0_3(D)->p_fenc[0];
  _1617 = _1615 (_1616, 16, &pix, bw_8);
  _1618 = (sizetype) bm0x_2325;
  _1619 = _1618 + 1;
  _1620 = _1619 * 2;
  _1621 = p_cost_m0x_19 + _1620;
  _1622 = *_1621;
  _1623 = (int) _1622;
  _1624 = _1617 + _1623;
  _1625 = (long unsigned int) bm0y_2323;
  _1626 = _1625 * 2;
  _1627 = p_cost_m0y_26 + _1626;
  _1628 = *_1627;
  _1629 = (int) _1628;
  _1630 = _1624 + _1629;
  _1631 = (long unsigned int) bm1x_2326;
  _1632 = _1631 * 2;
  _1633 = p_cost_m1x_34 + _1632;
  _1634 = *_1633;
  _1635 = (int) _1634;
  _1636 = _1630 + _1635;
  _1637 = (long unsigned int) bm1y_2324;
  _1638 = _1637 * 2;
  _1639 = _1638 + 18446744073709551614;
  _1640 = p_cost_m1y_41 + _1639;
  _1641 = *_1640;
  _1642 = (int) _1641;
  bcost_1643 = _1636 + _1642;
  # DEBUG cost => bcost_1643
  if (bcost_1643 < bcost_2296)
    goto <bb 150>;
  else
    goto <bb 149>;

  <bb 149>:

  <bb 150>:
  # bm0x_2099 = PHI <bm0x_2620(149), bm0x_107(148)>
  # bm0y_2100 = PHI <bm0y_2622(149), bm0y_2323(148)>
  # bm1x_2101 = PHI <bm1x_2624(149), bm1x_2326(148)>
  # bm1y_2102 = PHI <bm1y_2626(149), bm1y_138(148)>
  # bcost_1707 = PHI <bcost_2296(149), bcost_1643(148)>
  # DEBUG bcostrd => 1152921504606846976
  # DEBUG bcost => bcost_1707
  # DEBUG bm1y => bm1y_2102
  # DEBUG bm1x => bm1x_2101
  # DEBUG bm0y => bm0y_2100
  # DEBUG bm0x => bm0x_2099
  if (pass_2189 == 0)
    goto <bb 151>;
  else
    goto <bb 152>;

  <bb 151>:
  pretmp_2841 = visited[prephitmp_3376][prephitmp_2848][prephitmp_2849];
  goto <bb 153>;

  <bb 152>:
  # bcost_2196 = PHI <bcost_1707(150), bcost_2298(147)>
  # bm0x_2627 = PHI <bm0x_2099(150), bm0x_2619(147)>
  # bm0y_2629 = PHI <bm0y_2100(150), bm0y_2621(147)>
  # bm1x_2631 = PHI <bm1x_2101(150), bm1x_2623(147)>
  # bm1y_2633 = PHI <bm1y_2102(150), bm1y_2625(147)>
  # prephitmp_2843 = PHI <prephitmp_2848(150), prephitmp_3633(147)>
  # prephitmp_2844 = PHI <prephitmp_2849(150), prephitmp_2855(147)>
  # prephitmp_2845 = PHI <prephitmp_2851(150), prephitmp_3635(147)>
  # prephitmp_2846 = PHI <prephitmp_2852(150), prephitmp_2858(147)>
  # prephitmp_3189 = PHI <prephitmp_3192(150), prephitmp_2856(147)>
  # prephitmp_3191 = PHI <prephitmp_3193(150), prephitmp_2857(147)>
  # prephitmp_3372 = PHI <prephitmp_3375(150), prephitmp_3195(147)>
  # prephitmp_3374 = PHI <prephitmp_3376(150), prephitmp_3197(147)>
  # prephitmp_3516 = PHI <prephitmp_3519(150), prephitmp_3378(147)>
  # prephitmp_3518 = PHI <prephitmp_3520(150), prephitmp_3380(147)>
  # prephitmp_3630 = PHI <prephitmp_3631(150), prephitmp_3522(147)>
  # prephitmp_3765 = PHI <prephitmp_3766(150), prephitmp_3711(147)>
  # DEBUG bcostrd => 1152921504606846976
  # DEBUG bcost => bcost_2196
  # DEBUG bm1y => bm1y_2633
  # DEBUG bm1x => bm1x_2631
  # DEBUG bm0y => bm0y_2629
  # DEBUG bm0x => bm0x_2627
  _1660 = visited[prephitmp_3374][prephitmp_2843][prephitmp_2844];
  _1661 = (int) _1660;
  _1663 = _1661 >> prephitmp_3765;
  _1664 = _1663 & 1;
  if (_1664 == 0)
    goto <bb 153>;
  else
    goto <bb 157>;

  <bb 153>:
  # bcost_2163 = PHI <bcost_1707(151), bcost_2196(152)>
  # bm0x_2628 = PHI <bm0x_2099(151), bm0x_2627(152)>
  # bm0y_2630 = PHI <bm0y_2100(151), bm0y_2629(152)>
  # bm1x_2632 = PHI <bm1x_2101(151), bm1x_2631(152)>
  # bm1y_2634 = PHI <bm1y_2102(151), bm1y_2633(152)>
  # prephitmp_2835 = PHI <prephitmp_2848(151), prephitmp_2843(152)>
  # prephitmp_2836 = PHI <prephitmp_2849(151), prephitmp_2844(152)>
  # prephitmp_2838 = PHI <prephitmp_3766(151), prephitmp_3765(152)>
  # prephitmp_2840 = PHI <prephitmp_3376(151), prephitmp_3374(152)>
  # prephitmp_2842 = PHI <pretmp_2841(151), _1660(152)>
  # prephitmp_3186 = PHI <prephitmp_2851(151), prephitmp_2845(152)>
  # prephitmp_3187 = PHI <prephitmp_2852(151), prephitmp_2846(152)>
  # prephitmp_3369 = PHI <prephitmp_3192(151), prephitmp_3189(152)>
  # prephitmp_3370 = PHI <prephitmp_3193(151), prephitmp_3191(152)>
  # prephitmp_3514 = PHI <prephitmp_3375(151), prephitmp_3372(152)>
  # prephitmp_3627 = PHI <prephitmp_3519(151), prephitmp_3516(152)>
  # prephitmp_3628 = PHI <prephitmp_3520(151), prephitmp_3518(152)>
  # prephitmp_3709 = PHI <prephitmp_3631(151), prephitmp_3630(152)>
  # DEBUG i0 => 1
  # DEBUG i1 => 5
  _1669 = (signed char) prephitmp_2842;
  _1671 = 1 << prephitmp_2838;
  _1672 = (signed char) _1671;
  _1673 = _1669 | _1672;
  _1674 = (unsigned char) _1673;
  visited[prephitmp_2840][prephitmp_2835][prephitmp_2836] = _1674;
  _1675 = h_2(D)->mc.avg[_7];
  _1676 = stride1[5];
  _1677 = stride0[1];
  _1675 (&pix, bw_8, _120, _1677, _132, _1676, i_weight_5(D));
  _1678 = h_2(D)->pixf.mbcmp[_7];
  _1679 = m0_3(D)->p_fenc[0];
  _1680 = _1678 (_1679, 16, &pix, bw_8);
  _1681 = (long unsigned int) bm0x_2325;
  _1682 = _1681 * 2;
  _1683 = _1682 + 18446744073709551614;
  _1684 = p_cost_m0x_19 + _1683;
  _1685 = *_1684;
  _1686 = (int) _1685;
  _1687 = _1680 + _1686;
  _1688 = (long unsigned int) bm0y_2323;
  _1689 = _1688 * 2;
  _1690 = p_cost_m0y_26 + _1689;
  _1691 = *_1690;
  _1692 = (int) _1691;
  _1693 = _1687 + _1692;
  _1694 = (long unsigned int) bm1x_2326;
  _1695 = _1694 * 2;
  _1696 = p_cost_m1x_34 + _1695;
  _1697 = *_1696;
  _1698 = (int) _1697;
  _1699 = _1693 + _1698;
  _1700 = (sizetype) bm1y_2324;
  _1701 = _1700 + 1;
  _1702 = _1701 * 2;
  _1703 = p_cost_m1y_41 + _1702;
  _1704 = *_1703;
  _1705 = (int) _1704;
  bcost_1706 = _1699 + _1705;
  # DEBUG cost => bcost_1706
  if (bcost_1706 < bcost_2163)
    goto <bb 155>;
  else
    goto <bb 154>;

  <bb 154>:

  <bb 155>:
  # bm0x_2104 = PHI <bm0x_2628(154), bm0x_118(153)>
  # bm0y_2105 = PHI <bm0y_2630(154), bm0y_2323(153)>
  # bm1x_2106 = PHI <bm1x_2632(154), bm1x_2326(153)>
  # bm1y_2107 = PHI <bm1y_2634(154), bm1y_130(153)>
  # bcost_1770 = PHI <bcost_2163(154), bcost_1706(153)>
  # DEBUG bcostrd => 1152921504606846976
  # DEBUG bcost => bcost_1770
  # DEBUG bm1y => bm1y_2107
  # DEBUG bm1x => bm1x_2106
  # DEBUG bm0y => bm0y_2105
  # DEBUG bm0x => bm0x_2104
  if (pass_2189 == 0)
    goto <bb 156>;
  else
    goto <bb 157>;

  <bb 156>:
  pretmp_2829 = visited[prephitmp_3627][prephitmp_3370][prephitmp_2836];
  goto <bb 158>;

  <bb 157>:
  # bcost_2281 = PHI <bcost_1770(155), bcost_2196(152)>
  # bm0x_2635 = PHI <bm0x_2104(155), bm0x_2627(152)>
  # bm0y_2637 = PHI <bm0y_2105(155), bm0y_2629(152)>
  # bm1x_2639 = PHI <bm1x_2106(155), bm1x_2631(152)>
  # bm1y_2641 = PHI <bm1y_2107(155), bm1y_2633(152)>
  # prephitmp_2831 = PHI <prephitmp_2835(155), prephitmp_2843(152)>
  # prephitmp_2832 = PHI <prephitmp_2836(155), prephitmp_2844(152)>
  # prephitmp_2833 = PHI <prephitmp_2838(155), prephitmp_3765(152)>
  # prephitmp_2834 = PHI <prephitmp_2840(155), prephitmp_3374(152)>
  # prephitmp_3183 = PHI <prephitmp_3186(155), prephitmp_2845(152)>
  # prephitmp_3185 = PHI <prephitmp_3187(155), prephitmp_2846(152)>
  # prephitmp_3366 = PHI <prephitmp_3369(155), prephitmp_3189(152)>
  # prephitmp_3368 = PHI <prephitmp_3370(155), prephitmp_3191(152)>
  # prephitmp_3513 = PHI <prephitmp_3514(155), prephitmp_3372(152)>
  # prephitmp_3624 = PHI <prephitmp_3627(155), prephitmp_3516(152)>
  # prephitmp_3626 = PHI <prephitmp_3628(155), prephitmp_3518(152)>
  # prephitmp_3708 = PHI <prephitmp_3709(155), prephitmp_3630(152)>
  # DEBUG bcostrd => 1152921504606846976
  # DEBUG bcost => bcost_2281
  # DEBUG bm1y => bm1y_2641
  # DEBUG bm1x => bm1x_2639
  # DEBUG bm0y => bm0y_2637
  # DEBUG bm0x => bm0x_2635
  _1723 = visited[prephitmp_3624][prephitmp_3368][prephitmp_2832];
  _1724 = (int) _1723;
  _1726 = _1724 >> prephitmp_2833;
  _1727 = _1726 & 1;
  if (_1727 == 0)
    goto <bb 158>;
  else
    goto <bb 162>;

  <bb 158>:
  # bcost_2280 = PHI <bcost_1770(156), bcost_2281(157)>
  # bm0x_2636 = PHI <bm0x_2104(156), bm0x_2635(157)>
  # bm0y_2638 = PHI <bm0y_2105(156), bm0y_2637(157)>
  # bm1x_2640 = PHI <bm1x_2106(156), bm1x_2639(157)>
  # bm1y_2642 = PHI <bm1y_2107(156), bm1y_2641(157)>
  # prephitmp_2824 = PHI <prephitmp_3627(156), prephitmp_3624(157)>
  # prephitmp_2825 = PHI <prephitmp_2836(156), prephitmp_2832(157)>
  # prephitmp_2826 = PHI <prephitmp_2838(156), prephitmp_2833(157)>
  # prephitmp_2828 = PHI <prephitmp_3370(156), prephitmp_3368(157)>
  # prephitmp_2830 = PHI <pretmp_2829(156), _1723(157)>
  # prephitmp_3180 = PHI <prephitmp_2835(156), prephitmp_2831(157)>
  # prephitmp_3181 = PHI <prephitmp_2840(156), prephitmp_2834(157)>
  # prephitmp_3363 = PHI <prephitmp_3186(156), prephitmp_3183(157)>
  # prephitmp_3364 = PHI <prephitmp_3187(156), prephitmp_3185(157)>
  # prephitmp_3511 = PHI <prephitmp_3369(156), prephitmp_3366(157)>
  # prephitmp_3622 = PHI <prephitmp_3514(156), prephitmp_3513(157)>
  # prephitmp_3706 = PHI <prephitmp_3628(156), prephitmp_3626(157)>
  # prephitmp_3763 = PHI <prephitmp_3709(156), prephitmp_3708(157)>
  # DEBUG i0 => 3
  # DEBUG i1 => 5
  _1732 = (signed char) prephitmp_2830;
  _1734 = 1 << prephitmp_2826;
  _1735 = (signed char) _1734;
  _1736 = _1732 | _1735;
  _1737 = (unsigned char) _1736;
  visited[prephitmp_2824][prephitmp_2828][prephitmp_2825] = _1737;
  _1738 = h_2(D)->mc.avg[_7];
  _1739 = stride1[5];
  _1740 = stride0[3];
  _1738 (&pix, bw_8, _136, _1740, _132, _1739, i_weight_5(D));
  _1741 = h_2(D)->pixf.mbcmp[_7];
  _1742 = m0_3(D)->p_fenc[0];
  _1743 = _1741 (_1742, 16, &pix, bw_8);
  _1744 = (long unsigned int) bm0x_2325;
  _1745 = _1744 * 2;
  _1746 = p_cost_m0x_19 + _1745;
  _1747 = *_1746;
  _1748 = (int) _1747;
  _1749 = _1743 + _1748;
  _1750 = (long unsigned int) bm0y_2323;
  _1751 = _1750 * 2;
  _1752 = _1751 + 18446744073709551614;
  _1753 = p_cost_m0y_26 + _1752;
  _1754 = *_1753;
  _1755 = (int) _1754;
  _1756 = _1749 + _1755;
  _1757 = (long unsigned int) bm1x_2326;
  _1758 = _1757 * 2;
  _1759 = p_cost_m1x_34 + _1758;
  _1760 = *_1759;
  _1761 = (int) _1760;
  _1762 = _1756 + _1761;
  _1763 = (sizetype) bm1y_2324;
  _1764 = _1763 + 1;
  _1765 = _1764 * 2;
  _1766 = p_cost_m1y_41 + _1765;
  _1767 = *_1766;
  _1768 = (int) _1767;
  bcost_1769 = _1762 + _1768;
  # DEBUG cost => bcost_1769
  if (bcost_1769 < bcost_2280)
    goto <bb 160>;
  else
    goto <bb 159>;

  <bb 159>:

  <bb 160>:
  # bm0x_2109 = PHI <bm0x_2636(159), bm0x_2325(158)>
  # bm0y_2110 = PHI <bm0y_2638(159), bm0y_134(158)>
  # bm1x_2111 = PHI <bm1x_2640(159), bm1x_2326(158)>
  # bm1y_2112 = PHI <bm1y_2642(159), bm1y_130(158)>
  # bcost_1833 = PHI <bcost_2280(159), bcost_1769(158)>
  # DEBUG bcostrd => 1152921504606846976
  # DEBUG bcost => bcost_1833
  # DEBUG bm1y => bm1y_2112
  # DEBUG bm1x => bm1x_2111
  # DEBUG bm0y => bm0y_2110
  # DEBUG bm0x => bm0x_2109
  if (pass_2189 == 0)
    goto <bb 161>;
  else
    goto <bb 162>;

  <bb 161>:
  pretmp_2819 = visited[prephitmp_2824][prephitmp_3622][prephitmp_2825];
  goto <bb 163>;

  <bb 162>:
  # bcost_2293 = PHI <bcost_1833(160), bcost_2281(157)>
  # bm0x_2643 = PHI <bm0x_2109(160), bm0x_2635(157)>
  # bm0y_2645 = PHI <bm0y_2110(160), bm0y_2637(157)>
  # bm1x_2647 = PHI <bm1x_2111(160), bm1x_2639(157)>
  # bm1y_2649 = PHI <bm1y_2112(160), bm1y_2641(157)>
  # prephitmp_2821 = PHI <prephitmp_2824(160), prephitmp_3624(157)>
  # prephitmp_2822 = PHI <prephitmp_2825(160), prephitmp_2832(157)>
  # prephitmp_3177 = PHI <prephitmp_3180(160), prephitmp_2831(157)>
  # prephitmp_3179 = PHI <prephitmp_3181(160), prephitmp_2834(157)>
  # prephitmp_3360 = PHI <prephitmp_3363(160), prephitmp_3183(157)>
  # prephitmp_3362 = PHI <prephitmp_3364(160), prephitmp_3185(157)>
  # prephitmp_3510 = PHI <prephitmp_3511(160), prephitmp_3366(157)>
  # prephitmp_3621 = PHI <prephitmp_3622(160), prephitmp_3513(157)>
  # prephitmp_3705 = PHI <prephitmp_3706(160), prephitmp_3626(157)>
  # prephitmp_3762 = PHI <prephitmp_3763(160), prephitmp_3708(157)>
  # DEBUG bcostrd => 1152921504606846976
  # DEBUG bcost => bcost_2293
  # DEBUG bm1y => bm1y_2649
  # DEBUG bm1x => bm1x_2647
  # DEBUG bm0y => bm0y_2645
  # DEBUG bm0x => bm0x_2643
  _1786 = visited[prephitmp_2821][prephitmp_3621][prephitmp_2822];
  _1787 = (int) _1786;
  _1789 = _1787 >> prephitmp_3360;
  _1790 = _1789 & 1;
  if (_1790 == 0)
    goto <bb 163>;
  else
    goto <bb 167>;

  <bb 163>:
  # bcost_2291 = PHI <bcost_1833(161), bcost_2293(162)>
  # bm0x_2644 = PHI <bm0x_2109(161), bm0x_2643(162)>
  # bm0y_2646 = PHI <bm0y_2110(161), bm0y_2645(162)>
  # bm1x_2648 = PHI <bm1x_2111(161), bm1x_2647(162)>
  # bm1y_2650 = PHI <bm1y_2112(161), bm1y_2649(162)>
  # prephitmp_2813 = PHI <prephitmp_2824(161), prephitmp_2821(162)>
  # prephitmp_2814 = PHI <prephitmp_2825(161), prephitmp_2822(162)>
  # prephitmp_2816 = PHI <prephitmp_3363(161), prephitmp_3360(162)>
  # prephitmp_2818 = PHI <prephitmp_3622(161), prephitmp_3621(162)>
  # prephitmp_2820 = PHI <pretmp_2819(161), _1786(162)>
  # prephitmp_3357 = PHI <prephitmp_3180(161), prephitmp_3177(162)>
  # prephitmp_3358 = PHI <prephitmp_3181(161), prephitmp_3179(162)>
  # prephitmp_3508 = PHI <prephitmp_3364(161), prephitmp_3362(162)>
  # prephitmp_3619 = PHI <prephitmp_3511(161), prephitmp_3510(162)>
  # prephitmp_3760 = PHI <prephitmp_3706(161), prephitmp_3705(162)>
  # prephitmp_3793 = PHI <prephitmp_3763(161), prephitmp_3762(162)>
  # DEBUG i0 => 5
  # DEBUG i1 => 3
  _1795 = (signed char) prephitmp_2820;
  _1797 = 1 << prephitmp_2816;
  _1798 = (signed char) _1797;
  _1799 = _1795 | _1798;
  _1800 = (unsigned char) _1799;
  visited[prephitmp_2813][prephitmp_2818][prephitmp_2814] = _1800;
  _1801 = h_2(D)->mc.avg[_7];
  _1802 = stride1[3];
  _1803 = stride0[5];
  _1801 (&pix, bw_8, _128, _1803, _140, _1802, i_weight_5(D));
  _1804 = h_2(D)->pixf.mbcmp[_7];
  _1805 = m0_3(D)->p_fenc[0];
  _1806 = _1804 (_1805, 16, &pix, bw_8);
  _1807 = (long unsigned int) bm0x_2325;
  _1808 = _1807 * 2;
  _1809 = p_cost_m0x_19 + _1808;
  _1810 = *_1809;
  _1811 = (int) _1810;
  _1812 = _1806 + _1811;
  _1813 = (sizetype) bm0y_2323;
  _1814 = _1813 + 1;
  _1815 = _1814 * 2;
  _1816 = p_cost_m0y_26 + _1815;
  _1817 = *_1816;
  _1818 = (int) _1817;
  _1819 = _1812 + _1818;
  _1820 = (long unsigned int) bm1x_2326;
  _1821 = _1820 * 2;
  _1822 = p_cost_m1x_34 + _1821;
  _1823 = *_1822;
  _1824 = (int) _1823;
  _1825 = _1819 + _1824;
  _1826 = (long unsigned int) bm1y_2324;
  _1827 = _1826 * 2;
  _1828 = _1827 + 18446744073709551614;
  _1829 = p_cost_m1y_41 + _1828;
  _1830 = *_1829;
  _1831 = (int) _1830;
  bcost_1832 = _1825 + _1831;
  # DEBUG cost => bcost_1832
  if (bcost_1832 < bcost_2291)
    goto <bb 165>;
  else
    goto <bb 164>;

  <bb 164>:

  <bb 165>:
  # bm0x_2114 = PHI <bm0x_2644(164), bm0x_2325(163)>
  # bm0y_2115 = PHI <bm0y_2646(164), bm0y_126(163)>
  # bm1x_2116 = PHI <bm1x_2648(164), bm1x_2326(163)>
  # bm1y_2117 = PHI <bm1y_2650(164), bm1y_138(163)>
  # bcost_1892 = PHI <bcost_2291(164), bcost_1832(163)>
  # DEBUG bcostrd => 1152921504606846976
  # DEBUG bcost => bcost_1892
  # DEBUG bm1y => bm1y_2117
  # DEBUG bm1x => bm1x_2116
  # DEBUG bm0y => bm0y_2115
  # DEBUG bm0x => bm0x_2114
  if (pass_2189 == 0)
    goto <bb 166>;
  else
    goto <bb 167>;

  <bb 166>:
  pretmp_2811 = visited[prephitmp_3358][prephitmp_3357][prephitmp_3793];
  goto <bb 168>;

  <bb 167>:
  # bcost_2288 = PHI <bcost_1892(165), bcost_2293(162)>
  # bm0x_2653 = PHI <bm0x_2114(165), bm0x_2643(162)>
  # bm0y_2655 = PHI <bm0y_2115(165), bm0y_2645(162)>
  # bm1x_2657 = PHI <bm1x_2116(165), bm1x_2647(162)>
  # bm1y_2659 = PHI <bm1y_2117(165), bm1y_2649(162)>
  # prephitmp_3354 = PHI <prephitmp_3357(165), prephitmp_3177(162)>
  # prephitmp_3356 = PHI <prephitmp_3358(165), prephitmp_3179(162)>
  # prephitmp_3507 = PHI <prephitmp_3508(165), prephitmp_3362(162)>
  # prephitmp_3618 = PHI <prephitmp_3619(165), prephitmp_3510(162)>
  # prephitmp_3759 = PHI <prephitmp_3760(165), prephitmp_3705(162)>
  # prephitmp_3792 = PHI <prephitmp_3793(165), prephitmp_3762(162)>
  # DEBUG bcostrd => 1152921504606846976
  # DEBUG bcost => bcost_2288
  # DEBUG bm1y => bm1y_2659
  # DEBUG bm1x => bm1x_2657
  # DEBUG bm0y => bm0y_2655
  # DEBUG bm0x => bm0x_2653
  _1845 = visited[prephitmp_3356][prephitmp_3354][prephitmp_3792];
  _1846 = (int) _1845;
  _1848 = _1846 >> prephitmp_3618;
  _1849 = _1848 & 1;
  if (_1849 == 0)
    goto <bb 168>;
  else
    goto <bb 172>;

  <bb 168>:
  # bcost_2198 = PHI <bcost_1892(166), bcost_2288(167)>
  # bm0x_2654 = PHI <bm0x_2114(166), bm0x_2653(167)>
  # bm0y_2656 = PHI <bm0y_2115(166), bm0y_2655(167)>
  # bm1x_2658 = PHI <bm1x_2116(166), bm1x_2657(167)>
  # bm1y_2660 = PHI <bm1y_2117(166), bm1y_2659(167)>
  # prephitmp_2804 = PHI <prephitmp_3357(166), prephitmp_3354(167)>
  # prephitmp_2806 = PHI <prephitmp_3793(166), prephitmp_3792(167)>
  # prephitmp_2808 = PHI <prephitmp_3619(166), prephitmp_3618(167)>
  # prephitmp_2810 = PHI <prephitmp_3358(166), prephitmp_3356(167)>
  # prephitmp_2812 = PHI <pretmp_2811(166), _1845(167)>
  # prephitmp_3616 = PHI <prephitmp_3508(166), prephitmp_3507(167)>
  # prephitmp_3790 = PHI <prephitmp_3760(166), prephitmp_3759(167)>
  # DEBUG i0 => 1
  # DEBUG i1 => 7
  _1854 = (signed char) prephitmp_2812;
  _1856 = 1 << prephitmp_2808;
  _1857 = (signed char) _1856;
  _1858 = _1854 | _1857;
  _1859 = (unsigned char) _1858;
  visited[prephitmp_2810][prephitmp_2804][prephitmp_2806] = _1859;
  _1860 = h_2(D)->mc.avg[_7];
  _1861 = stride1[7];
  _1862 = stride0[1];
  _1860 (&pix, bw_8, _120, _1862, _116, _1861, i_weight_5(D));
  _1863 = h_2(D)->pixf.mbcmp[_7];
  _1864 = m0_3(D)->p_fenc[0];
  _1865 = _1863 (_1864, 16, &pix, bw_8);
  _1866 = (long unsigned int) bm0x_2325;
  _1867 = _1866 * 2;
  _1868 = _1867 + 18446744073709551614;
  _1869 = p_cost_m0x_19 + _1868;
  _1870 = *_1869;
  _1871 = (int) _1870;
  _1872 = _1865 + _1871;
  _1873 = (long unsigned int) bm0y_2323;
  _1874 = _1873 * 2;
  _1875 = p_cost_m0y_26 + _1874;
  _1876 = *_1875;
  _1877 = (int) _1876;
  _1878 = _1872 + _1877;
  _1879 = (sizetype) bm1x_2326;
  _1880 = _1879 + 1;
  _1881 = _1880 * 2;
  _1882 = p_cost_m1x_34 + _1881;
  _1883 = *_1882;
  _1884 = (int) _1883;
  _1885 = _1878 + _1884;
  _1886 = (long unsigned int) bm1y_2324;
  _1887 = _1886 * 2;
  _1888 = p_cost_m1y_41 + _1887;
  _1889 = *_1888;
  _1890 = (int) _1889;
  bcost_1891 = _1885 + _1890;
  # DEBUG cost => bcost_1891
  if (bcost_1891 < bcost_2198)
    goto <bb 170>;
  else
    goto <bb 169>;

  <bb 169>:

  <bb 170>:
  # bm0x_2119 = PHI <bm0x_2654(169), bm0x_118(168)>
  # bm0y_2120 = PHI <bm0y_2656(169), bm0y_2323(168)>
  # bm1x_2121 = PHI <bm1x_2658(169), bm1x_113(168)>
  # bm1y_2122 = PHI <bm1y_2660(169), bm1y_2324(168)>
  # bcost_1955 = PHI <bcost_2198(169), bcost_1891(168)>
  # DEBUG bcostrd => 1152921504606846976
  # DEBUG bcost => bcost_1955
  # DEBUG bm1y => bm1y_2122
  # DEBUG bm1x => bm1x_2121
  # DEBUG bm0y => bm0y_2120
  # DEBUG bm0x => bm0x_2119
  if (pass_2189 == 0)
    goto <bb 171>;
  else
    goto <bb 172>;

  <bb 171>:
  pretmp_2799 = visited[prephitmp_3616][prephitmp_2804][prephitmp_3790];
  goto <bb 174>;

  <bb 172>:
  # bcost_2133 = PHI <bcost_1955(170), bcost_2288(167)>
  # bm0x_2663 = PHI <bm0x_2119(170), bm0x_2653(167)>
  # bm0y_2665 = PHI <bm0y_2120(170), bm0y_2655(167)>
  # bm1x_2667 = PHI <bm1x_2121(170), bm1x_2657(167)>
  # bm1y_2669 = PHI <bm1y_2122(170), bm1y_2659(167)>
  # prephitmp_2801 = PHI <prephitmp_2804(170), prephitmp_3354(167)>
  # prephitmp_2802 = PHI <prephitmp_2808(170), prephitmp_3618(167)>
  # prephitmp_3615 = PHI <prephitmp_3616(170), prephitmp_3507(167)>
  # prephitmp_3789 = PHI <prephitmp_3790(170), prephitmp_3759(167)>
  # DEBUG bcostrd => 1152921504606846976
  # DEBUG bcost => bcost_2133
  # DEBUG bm1y => bm1y_2669
  # DEBUG bm1x => bm1x_2667
  # DEBUG bm0y => bm0y_2665
  # DEBUG bm0x => bm0x_2663
  _1908 = visited[prephitmp_3615][prephitmp_2801][prephitmp_3789];
  _1909 = (int) _1908;
  _1911 = _1909 >> prephitmp_2802;
  _1912 = _1911 & 1;
  if (_1912 == 0)
    goto <bb 174>;
  else
    goto <bb 173>;

  <bb 173>:
  pretmp_2790 = bm0y_2323 == bm0y_2665;
  goto <bb 176>;

  <bb 174>:
  # bcost_2166 = PHI <bcost_1955(171), bcost_2133(172)>
  # bm0x_2664 = PHI <bm0x_2119(171), bm0x_2663(172)>
  # bm0y_2666 = PHI <bm0y_2120(171), bm0y_2665(172)>
  # bm1x_2668 = PHI <bm1x_2121(171), bm1x_2667(172)>
  # bm1y_2670 = PHI <bm1y_2122(171), bm1y_2669(172)>
  # prephitmp_2793 = PHI <prephitmp_2804(171), prephitmp_2801(172)>
  # prephitmp_2794 = PHI <prephitmp_2808(171), prephitmp_2802(172)>
  # prephitmp_2796 = PHI <prephitmp_3790(171), prephitmp_3789(172)>
  # prephitmp_2798 = PHI <prephitmp_3616(171), prephitmp_3615(172)>
  # prephitmp_2800 = PHI <pretmp_2799(171), _1908(172)>
  # DEBUG i0 => 7
  # DEBUG i1 => 1
  _1917 = (signed char) prephitmp_2800;
  _1919 = 1 << prephitmp_2794;
  _1920 = (signed char) _1919;
  _1921 = _1917 | _1920;
  _1922 = (unsigned char) _1921;
  visited[prephitmp_2798][prephitmp_2793][prephitmp_2796] = _1922;
  _1923 = h_2(D)->mc.avg[_7];
  _1924 = stride1[1];
  _1925 = stride0[7];
  _1923 (&pix, bw_8, _110, _1925, _124, _1924, i_weight_5(D));
  _1926 = h_2(D)->pixf.mbcmp[_7];
  _1927 = m0_3(D)->p_fenc[0];
  _1928 = _1926 (_1927, 16, &pix, bw_8);
  _1929 = (sizetype) bm0x_2325;
  _1930 = _1929 + 1;
  _1931 = _1930 * 2;
  _1932 = p_cost_m0x_19 + _1931;
  _1933 = *_1932;
  _1934 = (int) _1933;
  _1935 = _1928 + _1934;
  _1936 = (long unsigned int) bm0y_2323;
  _1937 = _1936 * 2;
  _1938 = p_cost_m0y_26 + _1937;
  _1939 = *_1938;
  _1940 = (int) _1939;
  _1941 = _1935 + _1940;
  _1942 = (long unsigned int) bm1x_2326;
  _1943 = _1942 * 2;
  _1944 = _1943 + 18446744073709551614;
  _1945 = p_cost_m1x_34 + _1944;
  _1946 = *_1945;
  _1947 = (int) _1946;
  _1948 = _1941 + _1947;
  _1949 = (long unsigned int) bm1y_2324;
  _1950 = _1949 * 2;
  _1951 = p_cost_m1y_41 + _1950;
  _1952 = *_1951;
  _1953 = (int) _1952;
  bcost_1954 = _1948 + _1953;
  # DEBUG cost => bcost_1954
  if (bcost_1954 < bcost_2166)
    goto <bb 176>;
  else
    goto <bb 175>;

  <bb 175>:
  pretmp_2791 = bm0y_2323 == bm0y_2666;

  <bb 176>:
  # bm0x_1968 = PHI <bm0x_2663(173), bm0x_107(174), bm0x_2664(175)>
  # bm0y_1970 = PHI <bm0y_2665(173), bm0y_2323(174), bm0y_2666(175)>
  # bm1x_1973 = PHI <bm1x_2667(173), bm1x_122(174), bm1x_2668(175)>
  # bm1y_1975 = PHI <bm1y_2669(173), bm1y_2324(174), bm1y_2670(175)>
  # bcost_2124 = PHI <bcost_2133(173), bcost_1954(174), bcost_2166(175)>
  # prephitmp_2792 = PHI <pretmp_2790(173), 1(174), pretmp_2791(175)>
  # DEBUG bcostrd => 1152921504606846976
  # DEBUG bcost => bcost_2124
  # DEBUG bm1y => bm1y_1975
  # DEBUG bm1x => bm1x_1973
  # DEBUG bm0y => bm0y_1970
  # DEBUG bm0x => bm0x_1968
  _1969 = bm0x_1968 == bm0x_2325;
  _1972 = _1969 & prephitmp_2792;
  if (_1972 != 0)
    goto <bb 177>;
  else
    goto <bb 180>;

  <bb 177>:
  _1974 = bm1x_1973 == bm1x_2326;
  _1976 = bm1y_1975 == bm1y_2324;
  _1977 = _1974 & _1976;
  if (_1977 != 0)
    goto <bb 178>;
  else
    goto <bb 180>;

  <bb 178>:
  # bm0x_1840 = PHI <bm0x_1968(177)>
  # bm0y_2787 = PHI <bm0y_1970(177)>
  # bm1x_2785 = PHI <bm1x_1973(177)>
  # bm1y_2783 = PHI <bm1y_1975(177)>

  <bb 179>:
  # bm0x_2781 = PHI <bm0x_1840(178), bm0x_2788(181)>
  # bm0y_2780 = PHI <bm0y_2787(178), bm0y_2786(181)>
  # bm1x_2779 = PHI <bm1x_2785(178), bm1x_2784(181)>
  # bm1y_2778 = PHI <bm1y_2783(178), bm1y_2782(181)>
  # DEBUG bm1y => bm1y_2778
  # DEBUG bm1x => bm1x_2779
  # DEBUG bm0y => bm0y_2780
  # DEBUG bm0x => bm0x_2781
  _1986 = (short int) bm0x_2781;
  m0_3(D)->mv[0] = _1986;
  _1988 = (short int) bm0y_2780;
  m0_3(D)->mv[1] = _1988;
  _1990 = (short int) bm1x_2779;
  m1_4(D)->mv[0] = _1990;
  _1992 = (short int) bm1y_2778;
  m1_4(D)->mv[1] = _1992;
  pix0 ={v} {CLOBBER};
  pix1 ={v} {CLOBBER};
  pix ={v} {CLOBBER};
  stride0 ={v} {CLOBBER};
  stride1 ={v} {CLOBBER};
  visited ={v} {CLOBBER};
  goto <bb 184>;

  <bb 180>:
  # DEBUG om0x => bm0x_1968
  # DEBUG om0y => bm0y_1970
  # DEBUG om1x => bm1x_1973
  # DEBUG om1y => bm1y_1975
  # DEBUG i => 4
  stride0[4] = bw_8;
  stride1[4] = bw_8;
  _1978 = h_2(D)->mc.get_ref;
  _1979 = m0_3(D)->i_stride[0];
  src0$4_1980 = _1978 (&MEM[(void *)&pix0 + 1024B], &MEM[(void *)&stride0 + 16B], _55, _1979, bm0x_1968, bm0y_1970, bw_8, bh_9);
  # DEBUG src0$4 => src0$4_1980
  _1981 = h_2(D)->mc.get_ref;
  _1982 = m1_4(D)->i_stride[0];
  src1$4_1983 = _1981 (&MEM[(void *)&pix1 + 1024B], &MEM[(void *)&stride1 + 16B], _59, _1982, bm1x_1973, bm1y_1975, bw_8, bh_9);
  # DEBUG src1$4 => src1$4_1983
  pass_1984 = pass_2189 + 1;
  # DEBUG pass => pass_1984
  # DEBUG src1$4 => src1$4_1983
  # DEBUG src0$4 => src0$4_1980
  # DEBUG bcostrd => 1152921504606846976
  # DEBUG pass => pass_1984
  # DEBUG bcost => bcost_2124
  # DEBUG om1y => bm1y_1975
  # DEBUG bm1y => bm1y_1975
  # DEBUG om1x => bm1x_1973
  # DEBUG bm1x => bm1x_1973
  # DEBUG om0y => bm0y_1970
  # DEBUG bm0y => bm0y_1970
  # DEBUG om0x => bm0x_1968
  # DEBUG bm0x => bm0x_1968
  ivtmp_2776 = ivtmp_2777 - 1;
  if (ivtmp_2776 != 0)
    goto <bb 182>;
  else
    goto <bb 181>;

  <bb 181>:
  # bm0x_2788 = PHI <bm0x_1968(180)>
  # bm0y_2786 = PHI <bm0y_1970(180)>
  # bm1x_2784 = PHI <bm1x_1973(180)>
  # bm1y_2782 = PHI <bm1y_1975(180)>
  goto <bb 179>;

  <bb 182>:
  goto <bb 14>;

  <bb 183>:
  pix0 ={v} {CLOBBER};
  pix1 ={v} {CLOBBER};
  pix ={v} {CLOBBER};
  stride0 ={v} {CLOBBER};
  stride1 ={v} {CLOBBER};
  visited ={v} {CLOBBER};

  <bb 184>:
  # DEBUG h => NULL
  # DEBUG m0 => NULL
  # DEBUG m1 => NULL
  # DEBUG i_weight => NULL
  # DEBUG i8 => NULL
  # DEBUG i_lambda2 => NULL
  # DEBUG rd => NULL
  # DEBUG src1$4 => NULL
  # DEBUG src0$4 => NULL
  # DEBUG bcostrd => NULL
  # DEBUG pass => NULL
  # DEBUG bcost => NULL
  # DEBUG bm1y => NULL
  # DEBUG bm1x => NULL
  # DEBUG bm0y => NULL
  # DEBUG bm0x => NULL
  # DEBUG p_cost_m1y => NULL
  # DEBUG p_cost_m1x => NULL
  # DEBUG p_cost_m0y => NULL
  # DEBUG p_cost_m0x => NULL
  # DEBUG bh => NULL
  # DEBUG bw => NULL
  # DEBUG cache1_mv2 => NULL
  # DEBUG cache1_mv => NULL
  # DEBUG cache0_mv2 => NULL
  # DEBUG cache0_mv => NULL
  return;

}



;; Function x264_me_refine_bidir_rd (x264_me_refine_bidir_rd, funcdef_no=121, decl_uid=5790, cgraph_uid=121, symbol_order=168)


Analyzing loop at encoder/me.c:905
encoder/me.c:905:9: note: ===== analyze_loop_nest =====
encoder/me.c:905:9: note: === vect_analyze_loop_form ===
encoder/me.c:905:9: note: not vectorized: control flow in loop.
encoder/me.c:905:9: note: bad loop form.
encoder/me.c:939:6: note: vectorized 0 loops in function.
x264_me_refine_bidir_rd (struct x264_t * h, struct x264_me_t * m0, struct x264_me_t * m1, int i_weight, int i8, int i_lambda2)
{
  int16_t * cache0_mv;
  int16_t * cache0_mv2;
  int16_t * cache1_mv;
  int16_t * cache1_mv2;
  const int bw;
  const int bh;
  const int16_t * p_cost_m0x;
  const int16_t * p_cost_m0y;
  const int16_t * p_cost_m1x;
  const int16_t * p_cost_m1y;
  uint8_t pix0[9][256];
  uint8_t pix1[9][256];
  uint8_t pix[256];
  int stride0[9];
  int stride1[9];
  int bm0x;
  int bm0y;
  int bm1x;
  int bm1y;
  int bcost;
  int pass;
  uint64_t bcostrd;
  uint8_t visited[8][8][8];
  uint8_t * src0$4;
  uint8_t * src1$4;
  static const int pixel_mv_offs[4] = {0, 4, 32, 0};
  int iftmp.14_8;
  int _9;
  int _10;
  int _12;
  int _13;
  long unsigned int _14;
  long unsigned int _15;
  int16_t * _21;
  int _22;
  int _23;
  short int _24;
  int _25;
  long unsigned int _27;
  long unsigned int _28;
  sizetype _29;
  short int _31;
  int _32;
  long unsigned int _34;
  long unsigned int _35;
  sizetype _36;
  int16_t * _38;
  short int _39;
  int _40;
  long unsigned int _42;
  long unsigned int _43;
  sizetype _44;
  short int _46;
  int _47;
  _Bool _48;
  long unsigned int _49;
  long unsigned int _50;
  sizetype _51;
  short int _53;
  short int _55;
  short int _57;
  short int _59;
  int _61;
  int _62;
  void (*<Tfb0>) (void *, int) _63;
  uint8_t * (*<Tf83>) (uint8_t *, int *, uint8_t * *, int, int, int, int, int) _64;
  int _65;
  uint8_t *[6] * _66;
  uint8_t * (*<Tf83>) (uint8_t *, int *, uint8_t * *, int, int, int, int, int) _68;
  int _69;
  uint8_t *[6] * _70;
  short int _72;
  short int _73;
  short int _74;
  int _75;
  int _76;
  int _77;
  unsigned char _78;
  signed char _79;
  short int _80;
  int _81;
  int _82;
  signed char _83;
  signed char _84;
  unsigned char _85;
  void (*<Tf8b>) (uint8_t *, int, uint8_t *, int, uint8_t *, int, int) _86;
  int _87;
  int _88;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _89;
  uint8_t * _90;
  int _91;
  long unsigned int _92;
  long unsigned int _93;
  const int16_t * _94;
  short int _95;
  int _96;
  int _97;
  long unsigned int _98;
  long unsigned int _99;
  const int16_t * _100;
  short int _101;
  int _102;
  int _103;
  long unsigned int _104;
  long unsigned int _105;
  const int16_t * _106;
  short int _107;
  int _108;
  int _109;
  long unsigned int _110;
  long unsigned int _111;
  const int16_t * _112;
  short int _113;
  int _114;
  int _116;
  int _117;
  int _118;
  unsigned int _119;
  int _120;
  int _121;
  int _122;
  unsigned int _123;
  int _124;
  uint8_t * (*<Tf83>) (uint8_t *, int *, uint8_t * *, int, int, int, int, int) _126;
  int _129;
  uint8_t * _131;
  uint8_t * (*<Tf83>) (uint8_t *, int *, uint8_t * *, int, int, int, int, int) _132;
  int _135;
  uint8_t * _137;
  uint8_t * (*<Tf83>) (uint8_t *, int *, uint8_t * *, int, int, int, int, int) _138;
  int _140;
  uint8_t * _141;
  uint8_t * (*<Tf83>) (uint8_t *, int *, uint8_t * *, int, int, int, int, int) _142;
  int _144;
  uint8_t * _145;
  uint8_t * (*<Tf83>) (uint8_t *, int *, uint8_t * *, int, int, int, int, int) _146;
  int _148;
  uint8_t * _149;
  uint8_t * (*<Tf83>) (uint8_t *, int *, uint8_t * *, int, int, int, int, int) _150;
  int _152;
  uint8_t * _153;
  uint8_t * (*<Tf83>) (uint8_t *, int *, uint8_t * *, int, int, int, int, int) _154;
  int _156;
  uint8_t * _157;
  uint8_t * (*<Tf83>) (uint8_t *, int *, uint8_t * *, int, int, int, int, int) _158;
  int _160;
  uint8_t * _161;
  uint8_t * (*<Tf83>) (uint8_t *, int *, uint8_t * *, int, int, int, int, int) _162;
  int _163;
  uint8_t * _164;
  uint8_t * (*<Tf83>) (uint8_t *, int *, uint8_t * *, int, int, int, int, int) _165;
  int _166;
  uint8_t * _167;
  uint8_t * (*<Tf83>) (uint8_t *, int *, uint8_t * *, int, int, int, int, int) _168;
  int _169;
  uint8_t * _170;
  uint8_t * (*<Tf83>) (uint8_t *, int *, uint8_t * *, int, int, int, int, int) _171;
  int _172;
  uint8_t * _173;
  uint8_t * (*<Tf83>) (uint8_t *, int *, uint8_t * *, int, int, int, int, int) _174;
  int _175;
  uint8_t * _176;
  uint8_t * (*<Tf83>) (uint8_t *, int *, uint8_t * *, int, int, int, int, int) _177;
  int _178;
  uint8_t * _179;
  uint8_t * (*<Tf83>) (uint8_t *, int *, uint8_t * *, int, int, int, int, int) _180;
  int _181;
  uint8_t * _182;
  uint8_t * (*<Tf83>) (uint8_t *, int *, uint8_t * *, int, int, int, int, int) _183;
  int _184;
  uint8_t * _185;
  int _187;
  int _188;
  int _189;
  unsigned char _190;
  int _191;
  int _192;
  int _193;
  int _194;
  signed char _199;
  int _201;
  signed char _202;
  signed char _203;
  unsigned char _204;
  void (*<Tf8b>) (uint8_t *, int, uint8_t *, int, uint8_t *, int, int) _205;
  int _206;
  int _207;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _209;
  uint8_t * _210;
  int _211;
  long unsigned int _212;
  long unsigned int _213;
  const int16_t * _214;
  short int _215;
  int _216;
  int _217;
  long unsigned int _218;
  long unsigned int _219;
  const int16_t * _220;
  short int _221;
  int _222;
  int _223;
  long unsigned int _224;
  long unsigned int _225;
  const int16_t * _226;
  short int _227;
  int _228;
  int _229;
  sizetype _230;
  sizetype _231;
  sizetype _232;
  const int16_t * _233;
  short int _234;
  int _235;
  int _238;
  int _239;
  int _240;
  int _241;
  int _242;
  unsigned int _243;
  int _244;
  int _245;
  int _246;
  unsigned int _247;
  int _248;
  int _256;
  int _257;
  int _258;
  signed char _263;
  int _265;
  signed char _266;
  signed char _267;
  unsigned char _268;
  void (*<Tf8b>) (uint8_t *, int, uint8_t *, int, uint8_t *, int, int) _269;
  int _270;
  int _271;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _272;
  uint8_t * _273;
  int _274;
  long unsigned int _275;
  long unsigned int _276;
  const int16_t * _277;
  short int _278;
  int _279;
  int _280;
  long unsigned int _281;
  long unsigned int _282;
  const int16_t * _283;
  short int _284;
  int _285;
  int _286;
  long unsigned int _287;
  long unsigned int _288;
  const int16_t * _289;
  short int _290;
  int _291;
  int _292;
  long unsigned int _293;
  long unsigned int _294;
  sizetype _295;
  const int16_t * _296;
  short int _297;
  int _298;
  int _301;
  int _302;
  int _303;
  int _304;
  int _305;
  unsigned int _306;
  int _307;
  int _308;
  int _309;
  unsigned int _310;
  int _311;
  int _316;
  unsigned char _317;
  int _318;
  int _319;
  int _320;
  int _321;
  signed char _326;
  int _328;
  signed char _329;
  signed char _330;
  unsigned char _331;
  void (*<Tf8b>) (uint8_t *, int, uint8_t *, int, uint8_t *, int, int) _332;
  int _333;
  int _334;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _335;
  uint8_t * _336;
  int _337;
  long unsigned int _338;
  long unsigned int _339;
  const int16_t * _340;
  short int _341;
  int _342;
  int _343;
  long unsigned int _344;
  long unsigned int _345;
  const int16_t * _346;
  short int _347;
  int _348;
  int _349;
  sizetype _350;
  sizetype _351;
  sizetype _352;
  const int16_t * _353;
  short int _354;
  int _355;
  int _356;
  long unsigned int _357;
  long unsigned int _358;
  const int16_t * _359;
  short int _360;
  int _361;
  int _364;
  int _365;
  int _366;
  int _367;
  int _368;
  unsigned int _369;
  int _370;
  int _371;
  int _372;
  unsigned int _373;
  int _374;
  int _379;
  unsigned char _380;
  int _381;
  int _383;
  int _384;
  signed char _389;
  int _391;
  signed char _392;
  signed char _393;
  unsigned char _394;
  void (*<Tf8b>) (uint8_t *, int, uint8_t *, int, uint8_t *, int, int) _395;
  int _396;
  int _397;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _398;
  uint8_t * _399;
  int _400;
  long unsigned int _401;
  long unsigned int _402;
  const int16_t * _403;
  short int _404;
  int _405;
  int _406;
  long unsigned int _407;
  long unsigned int _408;
  const int16_t * _409;
  short int _410;
  int _411;
  int _412;
  long unsigned int _413;
  long unsigned int _414;
  sizetype _415;
  const int16_t * _416;
  short int _417;
  int _418;
  int _419;
  long unsigned int _420;
  long unsigned int _421;
  const int16_t * _422;
  short int _423;
  int _424;
  int _427;
  int _428;
  int _429;
  int _430;
  int _431;
  unsigned int _432;
  int _433;
  int _434;
  int _435;
  unsigned int _436;
  int _437;
  int _441;
  unsigned char _443;
  int _444;
  int _446;
  int _447;
  signed char _452;
  int _454;
  signed char _455;
  signed char _456;
  unsigned char _457;
  void (*<Tf8b>) (uint8_t *, int, uint8_t *, int, uint8_t *, int, int) _458;
  int _459;
  int _460;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _462;
  uint8_t * _463;
  int _464;
  long unsigned int _465;
  long unsigned int _466;
  const int16_t * _467;
  short int _468;
  int _469;
  int _470;
  sizetype _471;
  sizetype _472;
  sizetype _473;
  const int16_t * _474;
  short int _475;
  int _476;
  int _477;
  long unsigned int _478;
  long unsigned int _479;
  const int16_t * _480;
  short int _481;
  int _482;
  int _483;
  long unsigned int _484;
  long unsigned int _485;
  const int16_t * _486;
  short int _487;
  int _488;
  int _491;
  int _492;
  int _493;
  int _494;
  int _495;
  unsigned int _496;
  int _497;
  int _498;
  int _499;
  unsigned int _500;
  int _501;
  int _505;
  unsigned char _507;
  int _508;
  int _510;
  int _511;
  signed char _516;
  int _518;
  signed char _519;
  signed char _520;
  unsigned char _521;
  void (*<Tf8b>) (uint8_t *, int, uint8_t *, int, uint8_t *, int, int) _522;
  int _523;
  int _524;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _525;
  uint8_t * _526;
  int _527;
  long unsigned int _528;
  long unsigned int _529;
  const int16_t * _530;
  short int _531;
  int _532;
  int _533;
  long unsigned int _534;
  long unsigned int _535;
  sizetype _536;
  const int16_t * _537;
  short int _538;
  int _539;
  int _540;
  long unsigned int _541;
  long unsigned int _542;
  const int16_t * _543;
  short int _544;
  int _545;
  int _546;
  long unsigned int _547;
  long unsigned int _548;
  const int16_t * _549;
  short int _550;
  int _551;
  int _554;
  int _555;
  int _556;
  int _557;
  int _558;
  unsigned int _559;
  int _560;
  int _561;
  int _562;
  unsigned int _563;
  int _564;
  int _567;
  unsigned char _570;
  int _571;
  int _573;
  int _574;
  signed char _579;
  int _581;
  signed char _582;
  signed char _583;
  unsigned char _584;
  void (*<Tf8b>) (uint8_t *, int, uint8_t *, int, uint8_t *, int, int) _585;
  int _586;
  int _587;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _588;
  uint8_t * _589;
  int _590;
  sizetype _591;
  sizetype _592;
  sizetype _593;
  const int16_t * _594;
  short int _595;
  int _596;
  int _597;
  long unsigned int _598;
  long unsigned int _599;
  const int16_t * _600;
  short int _601;
  int _602;
  int _603;
  long unsigned int _604;
  long unsigned int _605;
  const int16_t * _606;
  short int _607;
  int _608;
  int _609;
  long unsigned int _610;
  long unsigned int _611;
  const int16_t * _612;
  short int _613;
  int _614;
  int _617;
  int _618;
  int _619;
  int _620;
  int _621;
  unsigned int _622;
  int _623;
  int _624;
  int _625;
  unsigned int _626;
  int _627;
  int _630;
  unsigned char _633;
  int _634;
  int _636;
  int _637;
  signed char _642;
  int _644;
  signed char _645;
  signed char _646;
  unsigned char _647;
  void (*<Tf8b>) (uint8_t *, int, uint8_t *, int, uint8_t *, int, int) _648;
  int _649;
  int _650;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _651;
  uint8_t * _652;
  int _653;
  long unsigned int _654;
  long unsigned int _655;
  sizetype _656;
  const int16_t * _657;
  short int _658;
  int _659;
  int _660;
  long unsigned int _661;
  long unsigned int _662;
  const int16_t * _663;
  short int _664;
  int _665;
  int _666;
  long unsigned int _667;
  long unsigned int _668;
  const int16_t * _669;
  short int _670;
  int _671;
  int _672;
  long unsigned int _673;
  long unsigned int _674;
  const int16_t * _675;
  short int _676;
  int _677;
  int _680;
  int _681;
  int _682;
  int _683;
  int _684;
  unsigned int _685;
  int _686;
  int _687;
  int _688;
  unsigned int _689;
  int _690;
  unsigned char _696;
  int _697;
  int _699;
  int _700;
  signed char _705;
  int _707;
  signed char _708;
  signed char _709;
  unsigned char _710;
  void (*<Tf8b>) (uint8_t *, int, uint8_t *, int, uint8_t *, int, int) _711;
  int _712;
  int _713;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _714;
  uint8_t * _715;
  int _716;
  long unsigned int _717;
  long unsigned int _718;
  const int16_t * _719;
  short int _720;
  int _721;
  int _722;
  long unsigned int _723;
  long unsigned int _724;
  const int16_t * _725;
  short int _726;
  int _727;
  int _728;
  sizetype _729;
  sizetype _730;
  sizetype _731;
  const int16_t * _732;
  short int _733;
  int _734;
  int _735;
  sizetype _736;
  sizetype _737;
  sizetype _738;
  const int16_t * _739;
  short int _740;
  int _741;
  int _744;
  int _745;
  int _746;
  int _747;
  int _748;
  unsigned int _749;
  int _750;
  int _751;
  int _752;
  unsigned int _753;
  int _754;
  unsigned char _760;
  int _761;
  int _763;
  int _764;
  signed char _769;
  int _771;
  signed char _772;
  signed char _773;
  unsigned char _774;
  void (*<Tf8b>) (uint8_t *, int, uint8_t *, int, uint8_t *, int, int) _775;
  int _776;
  int _777;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _778;
  uint8_t * _779;
  int _780;
  long unsigned int _781;
  long unsigned int _782;
  const int16_t * _783;
  short int _784;
  int _785;
  int _786;
  long unsigned int _787;
  long unsigned int _788;
  const int16_t * _789;
  short int _790;
  int _791;
  int _792;
  long unsigned int _793;
  long unsigned int _794;
  sizetype _795;
  const int16_t * _796;
  short int _797;
  int _798;
  int _799;
  long unsigned int _800;
  long unsigned int _801;
  sizetype _802;
  const int16_t * _803;
  short int _804;
  int _805;
  int _808;
  int _809;
  int _810;
  int _811;
  int _812;
  unsigned int _813;
  int _814;
  int _815;
  int _816;
  unsigned int _817;
  int _818;
  unsigned char _824;
  int _825;
  int _827;
  int _828;
  signed char _833;
  int _835;
  signed char _836;
  signed char _837;
  unsigned char _838;
  void (*<Tf8b>) (uint8_t *, int, uint8_t *, int, uint8_t *, int, int) _839;
  int _840;
  int _841;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _842;
  uint8_t * _843;
  int _844;
  long unsigned int _845;
  long unsigned int _846;
  const int16_t * _847;
  short int _848;
  int _849;
  int _850;
  sizetype _851;
  sizetype _852;
  sizetype _853;
  const int16_t * _854;
  short int _855;
  int _856;
  int _857;
  sizetype _858;
  sizetype _859;
  sizetype _860;
  const int16_t * _861;
  short int _862;
  int _863;
  int _864;
  long unsigned int _865;
  long unsigned int _866;
  const int16_t * _867;
  short int _868;
  int _869;
  int _872;
  int _873;
  int _874;
  int _875;
  int _876;
  unsigned int _877;
  int _878;
  int _879;
  int _880;
  unsigned int _881;
  int _882;
  unsigned char _888;
  int _889;
  int _891;
  int _892;
  signed char _897;
  int _899;
  signed char _900;
  signed char _901;
  unsigned char _902;
  void (*<Tf8b>) (uint8_t *, int, uint8_t *, int, uint8_t *, int, int) _903;
  int _904;
  int _905;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _906;
  uint8_t * _907;
  int _908;
  long unsigned int _909;
  long unsigned int _910;
  const int16_t * _911;
  short int _912;
  int _913;
  int _914;
  long unsigned int _915;
  long unsigned int _916;
  sizetype _917;
  const int16_t * _918;
  short int _919;
  int _920;
  int _921;
  long unsigned int _922;
  long unsigned int _923;
  sizetype _924;
  const int16_t * _925;
  short int _926;
  int _927;
  int _928;
  long unsigned int _929;
  long unsigned int _930;
  const int16_t * _931;
  short int _932;
  int _933;
  int _936;
  int _937;
  int _938;
  int _939;
  int _940;
  unsigned int _941;
  int _942;
  int _943;
  int _944;
  unsigned int _945;
  int _946;
  unsigned char _952;
  int _953;
  int _955;
  int _956;
  signed char _961;
  int _963;
  signed char _964;
  signed char _965;
  unsigned char _966;
  void (*<Tf8b>) (uint8_t *, int, uint8_t *, int, uint8_t *, int, int) _967;
  int _968;
  int _969;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _970;
  uint8_t * _971;
  int _972;
  sizetype _973;
  sizetype _974;
  sizetype _975;
  const int16_t * _976;
  short int _977;
  int _978;
  int _979;
  sizetype _980;
  sizetype _981;
  sizetype _982;
  const int16_t * _983;
  short int _984;
  int _985;
  int _986;
  long unsigned int _987;
  long unsigned int _988;
  const int16_t * _989;
  short int _990;
  int _991;
  int _992;
  long unsigned int _993;
  long unsigned int _994;
  const int16_t * _995;
  short int _996;
  int _997;
  int _1000;
  int _1001;
  int _1002;
  int _1003;
  int _1004;
  unsigned int _1005;
  int _1006;
  int _1007;
  int _1008;
  unsigned int _1009;
  int _1010;
  unsigned char _1016;
  int _1017;
  int _1019;
  int _1020;
  signed char _1025;
  int _1027;
  signed char _1028;
  signed char _1029;
  unsigned char _1030;
  void (*<Tf8b>) (uint8_t *, int, uint8_t *, int, uint8_t *, int, int) _1031;
  int _1032;
  int _1033;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _1034;
  uint8_t * _1035;
  int _1036;
  long unsigned int _1037;
  long unsigned int _1038;
  sizetype _1039;
  const int16_t * _1040;
  short int _1041;
  int _1042;
  int _1043;
  long unsigned int _1044;
  long unsigned int _1045;
  sizetype _1046;
  const int16_t * _1047;
  short int _1048;
  int _1049;
  int _1050;
  long unsigned int _1051;
  long unsigned int _1052;
  const int16_t * _1053;
  short int _1054;
  int _1055;
  int _1056;
  long unsigned int _1057;
  long unsigned int _1058;
  const int16_t * _1059;
  short int _1060;
  int _1061;
  int _1064;
  int _1065;
  int _1066;
  int _1067;
  int _1068;
  unsigned int _1069;
  int _1070;
  int _1071;
  int _1072;
  unsigned int _1073;
  int _1074;
  unsigned char _1080;
  int _1081;
  int _1083;
  int _1084;
  signed char _1089;
  int _1091;
  signed char _1092;
  signed char _1093;
  unsigned char _1094;
  void (*<Tf8b>) (uint8_t *, int, uint8_t *, int, uint8_t *, int, int) _1095;
  int _1096;
  int _1097;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _1098;
  uint8_t * _1099;
  int _1100;
  sizetype _1101;
  sizetype _1102;
  sizetype _1103;
  const int16_t * _1104;
  short int _1105;
  int _1106;
  int _1107;
  long unsigned int _1108;
  long unsigned int _1109;
  const int16_t * _1110;
  short int _1111;
  int _1112;
  int _1113;
  long unsigned int _1114;
  long unsigned int _1115;
  const int16_t * _1116;
  short int _1117;
  int _1118;
  int _1119;
  sizetype _1120;
  sizetype _1121;
  sizetype _1122;
  const int16_t * _1123;
  short int _1124;
  int _1125;
  int _1128;
  int _1129;
  int _1130;
  int _1131;
  int _1132;
  unsigned int _1133;
  int _1134;
  int _1135;
  int _1136;
  unsigned int _1137;
  int _1138;
  unsigned char _1144;
  int _1145;
  int _1147;
  int _1148;
  signed char _1153;
  int _1155;
  signed char _1156;
  signed char _1157;
  unsigned char _1158;
  void (*<Tf8b>) (uint8_t *, int, uint8_t *, int, uint8_t *, int, int) _1159;
  int _1160;
  int _1161;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _1162;
  uint8_t * _1163;
  int _1164;
  long unsigned int _1165;
  long unsigned int _1166;
  sizetype _1167;
  const int16_t * _1168;
  short int _1169;
  int _1170;
  int _1171;
  long unsigned int _1172;
  long unsigned int _1173;
  const int16_t * _1174;
  short int _1175;
  int _1176;
  int _1177;
  long unsigned int _1178;
  long unsigned int _1179;
  const int16_t * _1180;
  short int _1181;
  int _1182;
  int _1183;
  long unsigned int _1184;
  long unsigned int _1185;
  sizetype _1186;
  const int16_t * _1187;
  short int _1188;
  int _1189;
  int _1192;
  int _1193;
  int _1194;
  int _1195;
  int _1196;
  unsigned int _1197;
  int _1198;
  int _1199;
  int _1200;
  unsigned int _1201;
  int _1202;
  unsigned char _1208;
  int _1209;
  int _1211;
  int _1212;
  signed char _1217;
  int _1219;
  signed char _1220;
  signed char _1221;
  unsigned char _1222;
  void (*<Tf8b>) (uint8_t *, int, uint8_t *, int, uint8_t *, int, int) _1223;
  int _1224;
  int _1225;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _1226;
  uint8_t * _1227;
  int _1228;
  long unsigned int _1229;
  long unsigned int _1230;
  const int16_t * _1231;
  short int _1232;
  int _1233;
  int _1234;
  sizetype _1235;
  sizetype _1236;
  sizetype _1237;
  const int16_t * _1238;
  short int _1239;
  int _1240;
  int _1241;
  long unsigned int _1242;
  long unsigned int _1243;
  const int16_t * _1244;
  short int _1245;
  int _1246;
  int _1247;
  sizetype _1248;
  sizetype _1249;
  sizetype _1250;
  const int16_t * _1251;
  short int _1252;
  int _1253;
  int _1256;
  int _1257;
  int _1258;
  int _1259;
  int _1260;
  unsigned int _1261;
  int _1262;
  int _1263;
  int _1264;
  unsigned int _1265;
  int _1266;
  unsigned char _1272;
  int _1273;
  int _1275;
  int _1276;
  signed char _1281;
  int _1283;
  signed char _1284;
  signed char _1285;
  unsigned char _1286;
  void (*<Tf8b>) (uint8_t *, int, uint8_t *, int, uint8_t *, int, int) _1287;
  int _1288;
  int _1289;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _1290;
  uint8_t * _1291;
  int _1292;
  long unsigned int _1293;
  long unsigned int _1294;
  const int16_t * _1295;
  short int _1296;
  int _1297;
  int _1298;
  long unsigned int _1299;
  long unsigned int _1300;
  sizetype _1301;
  const int16_t * _1302;
  short int _1303;
  int _1304;
  int _1305;
  long unsigned int _1306;
  long unsigned int _1307;
  const int16_t * _1308;
  short int _1309;
  int _1310;
  int _1311;
  long unsigned int _1312;
  long unsigned int _1313;
  sizetype _1314;
  const int16_t * _1315;
  short int _1316;
  int _1317;
  int _1320;
  int _1321;
  int _1322;
  int _1323;
  int _1324;
  unsigned int _1325;
  int _1326;
  int _1327;
  int _1328;
  unsigned int _1329;
  int _1330;
  unsigned char _1336;
  int _1337;
  int _1339;
  int _1340;
  signed char _1345;
  int _1347;
  signed char _1348;
  signed char _1349;
  unsigned char _1350;
  void (*<Tf8b>) (uint8_t *, int, uint8_t *, int, uint8_t *, int, int) _1351;
  int _1352;
  int _1353;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _1354;
  uint8_t * _1355;
  int _1356;
  sizetype _1357;
  sizetype _1358;
  sizetype _1359;
  const int16_t * _1360;
  short int _1361;
  int _1362;
  int _1363;
  long unsigned int _1364;
  long unsigned int _1365;
  const int16_t * _1366;
  short int _1367;
  int _1368;
  int _1369;
  sizetype _1370;
  sizetype _1371;
  sizetype _1372;
  const int16_t * _1373;
  short int _1374;
  int _1375;
  int _1376;
  long unsigned int _1377;
  long unsigned int _1378;
  const int16_t * _1379;
  short int _1380;
  int _1381;
  int _1384;
  int _1385;
  int _1386;
  int _1387;
  int _1388;
  unsigned int _1389;
  int _1390;
  int _1391;
  int _1392;
  unsigned int _1393;
  int _1394;
  unsigned char _1400;
  int _1401;
  int _1403;
  int _1404;
  signed char _1409;
  int _1411;
  signed char _1412;
  signed char _1413;
  unsigned char _1414;
  void (*<Tf8b>) (uint8_t *, int, uint8_t *, int, uint8_t *, int, int) _1415;
  int _1416;
  int _1417;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _1418;
  uint8_t * _1419;
  int _1420;
  long unsigned int _1421;
  long unsigned int _1422;
  sizetype _1423;
  const int16_t * _1424;
  short int _1425;
  int _1426;
  int _1427;
  long unsigned int _1428;
  long unsigned int _1429;
  const int16_t * _1430;
  short int _1431;
  int _1432;
  int _1433;
  long unsigned int _1434;
  long unsigned int _1435;
  sizetype _1436;
  const int16_t * _1437;
  short int _1438;
  int _1439;
  int _1440;
  long unsigned int _1441;
  long unsigned int _1442;
  const int16_t * _1443;
  short int _1444;
  int _1445;
  int _1448;
  int _1449;
  int _1450;
  int _1451;
  int _1452;
  unsigned int _1453;
  int _1454;
  int _1455;
  int _1456;
  unsigned int _1457;
  int _1458;
  unsigned char _1464;
  int _1465;
  int _1467;
  int _1468;
  signed char _1473;
  int _1475;
  signed char _1476;
  signed char _1477;
  unsigned char _1478;
  void (*<Tf8b>) (uint8_t *, int, uint8_t *, int, uint8_t *, int, int) _1479;
  int _1480;
  int _1481;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _1482;
  uint8_t * _1483;
  int _1484;
  long unsigned int _1485;
  long unsigned int _1486;
  const int16_t * _1487;
  short int _1488;
  int _1489;
  int _1490;
  long unsigned int _1491;
  long unsigned int _1492;
  const int16_t * _1493;
  short int _1494;
  int _1495;
  int _1496;
  long unsigned int _1497;
  long unsigned int _1498;
  sizetype _1499;
  const int16_t * _1500;
  short int _1501;
  int _1502;
  int _1503;
  sizetype _1504;
  sizetype _1505;
  sizetype _1506;
  const int16_t * _1507;
  short int _1508;
  int _1509;
  int _1512;
  int _1513;
  int _1514;
  int _1515;
  int _1516;
  unsigned int _1517;
  int _1518;
  int _1519;
  int _1520;
  unsigned int _1521;
  int _1522;
  unsigned char _1528;
  int _1529;
  int _1531;
  int _1532;
  signed char _1537;
  int _1539;
  signed char _1540;
  signed char _1541;
  unsigned char _1542;
  void (*<Tf8b>) (uint8_t *, int, uint8_t *, int, uint8_t *, int, int) _1543;
  int _1544;
  int _1545;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _1546;
  uint8_t * _1547;
  int _1548;
  long unsigned int _1549;
  long unsigned int _1550;
  const int16_t * _1551;
  short int _1552;
  int _1553;
  int _1554;
  long unsigned int _1555;
  long unsigned int _1556;
  const int16_t * _1557;
  short int _1558;
  int _1559;
  int _1560;
  sizetype _1561;
  sizetype _1562;
  sizetype _1563;
  const int16_t * _1564;
  short int _1565;
  int _1566;
  int _1567;
  long unsigned int _1568;
  long unsigned int _1569;
  sizetype _1570;
  const int16_t * _1571;
  short int _1572;
  int _1573;
  int _1576;
  int _1577;
  int _1578;
  int _1579;
  int _1580;
  unsigned int _1581;
  int _1582;
  int _1583;
  int _1584;
  unsigned int _1585;
  int _1586;
  unsigned char _1592;
  int _1593;
  int _1595;
  int _1596;
  signed char _1601;
  int _1603;
  signed char _1604;
  signed char _1605;
  unsigned char _1606;
  void (*<Tf8b>) (uint8_t *, int, uint8_t *, int, uint8_t *, int, int) _1607;
  int _1608;
  int _1609;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _1610;
  uint8_t * _1611;
  int _1612;
  long unsigned int _1613;
  long unsigned int _1614;
  const int16_t * _1615;
  short int _1616;
  int _1617;
  int _1618;
  long unsigned int _1619;
  long unsigned int _1620;
  sizetype _1621;
  const int16_t * _1622;
  short int _1623;
  int _1624;
  int _1625;
  sizetype _1626;
  sizetype _1627;
  sizetype _1628;
  const int16_t * _1629;
  short int _1630;
  int _1631;
  int _1632;
  long unsigned int _1633;
  long unsigned int _1634;
  const int16_t * _1635;
  short int _1636;
  int _1637;
  int _1640;
  int _1641;
  int _1642;
  int _1643;
  int _1644;
  unsigned int _1645;
  int _1646;
  int _1647;
  int _1648;
  unsigned int _1649;
  int _1650;
  unsigned char _1656;
  int _1657;
  int _1659;
  int _1660;
  signed char _1665;
  int _1667;
  signed char _1668;
  signed char _1669;
  unsigned char _1670;
  void (*<Tf8b>) (uint8_t *, int, uint8_t *, int, uint8_t *, int, int) _1671;
  int _1672;
  int _1673;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _1674;
  uint8_t * _1675;
  int _1676;
  long unsigned int _1677;
  long unsigned int _1678;
  const int16_t * _1679;
  short int _1680;
  int _1681;
  int _1682;
  sizetype _1683;
  sizetype _1684;
  sizetype _1685;
  const int16_t * _1686;
  short int _1687;
  int _1688;
  int _1689;
  long unsigned int _1690;
  long unsigned int _1691;
  sizetype _1692;
  const int16_t * _1693;
  short int _1694;
  int _1695;
  int _1696;
  long unsigned int _1697;
  long unsigned int _1698;
  const int16_t * _1699;
  short int _1700;
  int _1701;
  int _1704;
  int _1705;
  int _1706;
  int _1707;
  int _1708;
  unsigned int _1709;
  int _1710;
  int _1711;
  int _1712;
  unsigned int _1713;
  int _1714;
  unsigned char _1720;
  int _1721;
  int _1723;
  int _1724;
  signed char _1729;
  int _1731;
  signed char _1732;
  signed char _1733;
  unsigned char _1734;
  void (*<Tf8b>) (uint8_t *, int, uint8_t *, int, uint8_t *, int, int) _1735;
  int _1736;
  int _1737;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _1738;
  uint8_t * _1739;
  int _1740;
  long unsigned int _1741;
  long unsigned int _1742;
  sizetype _1743;
  const int16_t * _1744;
  short int _1745;
  int _1746;
  int _1747;
  sizetype _1748;
  sizetype _1749;
  sizetype _1750;
  const int16_t * _1751;
  short int _1752;
  int _1753;
  int _1754;
  long unsigned int _1755;
  long unsigned int _1756;
  const int16_t * _1757;
  short int _1758;
  int _1759;
  int _1760;
  long unsigned int _1761;
  long unsigned int _1762;
  const int16_t * _1763;
  short int _1764;
  int _1765;
  int _1768;
  int _1769;
  int _1770;
  int _1771;
  int _1772;
  unsigned int _1773;
  int _1774;
  int _1775;
  int _1776;
  unsigned int _1777;
  int _1778;
  unsigned char _1784;
  int _1785;
  int _1787;
  int _1788;
  signed char _1793;
  int _1795;
  signed char _1796;
  signed char _1797;
  unsigned char _1798;
  void (*<Tf8b>) (uint8_t *, int, uint8_t *, int, uint8_t *, int, int) _1799;
  int _1800;
  int _1801;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _1802;
  uint8_t * _1803;
  int _1804;
  sizetype _1805;
  sizetype _1806;
  sizetype _1807;
  const int16_t * _1808;
  short int _1809;
  int _1810;
  int _1811;
  long unsigned int _1812;
  long unsigned int _1813;
  sizetype _1814;
  const int16_t * _1815;
  short int _1816;
  int _1817;
  int _1818;
  long unsigned int _1819;
  long unsigned int _1820;
  const int16_t * _1821;
  short int _1822;
  int _1823;
  int _1824;
  long unsigned int _1825;
  long unsigned int _1826;
  const int16_t * _1827;
  short int _1828;
  int _1829;
  int _1832;
  int _1833;
  int _1834;
  int _1835;
  int _1836;
  unsigned int _1837;
  int _1838;
  int _1839;
  int _1840;
  unsigned int _1841;
  int _1842;
  unsigned char _1848;
  int _1849;
  int _1851;
  int _1852;
  signed char _1857;
  int _1859;
  signed char _1860;
  signed char _1861;
  unsigned char _1862;
  void (*<Tf8b>) (uint8_t *, int, uint8_t *, int, uint8_t *, int, int) _1863;
  int _1864;
  int _1865;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _1866;
  uint8_t * _1867;
  int _1868;
  sizetype _1869;
  sizetype _1870;
  sizetype _1871;
  const int16_t * _1872;
  short int _1873;
  int _1874;
  int _1875;
  long unsigned int _1876;
  long unsigned int _1877;
  const int16_t * _1878;
  short int _1879;
  int _1880;
  int _1881;
  long unsigned int _1882;
  long unsigned int _1883;
  const int16_t * _1884;
  short int _1885;
  int _1886;
  int _1887;
  long unsigned int _1888;
  long unsigned int _1889;
  sizetype _1890;
  const int16_t * _1891;
  short int _1892;
  int _1893;
  int _1896;
  int _1897;
  int _1898;
  int _1899;
  int _1900;
  unsigned int _1901;
  int _1902;
  int _1903;
  int _1904;
  unsigned int _1905;
  int _1906;
  unsigned char _1912;
  int _1913;
  int _1915;
  int _1916;
  signed char _1921;
  int _1923;
  signed char _1924;
  signed char _1925;
  unsigned char _1926;
  void (*<Tf8b>) (uint8_t *, int, uint8_t *, int, uint8_t *, int, int) _1927;
  int _1928;
  int _1929;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _1930;
  uint8_t * _1931;
  int _1932;
  long unsigned int _1933;
  long unsigned int _1934;
  sizetype _1935;
  const int16_t * _1936;
  short int _1937;
  int _1938;
  int _1939;
  long unsigned int _1940;
  long unsigned int _1941;
  const int16_t * _1942;
  short int _1943;
  int _1944;
  int _1945;
  long unsigned int _1946;
  long unsigned int _1947;
  const int16_t * _1948;
  short int _1949;
  int _1950;
  int _1951;
  sizetype _1952;
  sizetype _1953;
  sizetype _1954;
  const int16_t * _1955;
  short int _1956;
  int _1957;
  int _1960;
  int _1961;
  int _1962;
  int _1963;
  int _1964;
  unsigned int _1965;
  int _1966;
  int _1967;
  int _1968;
  unsigned int _1969;
  int _1970;
  unsigned char _1976;
  int _1977;
  int _1979;
  int _1980;
  signed char _1985;
  int _1987;
  signed char _1988;
  signed char _1989;
  unsigned char _1990;
  void (*<Tf8b>) (uint8_t *, int, uint8_t *, int, uint8_t *, int, int) _1991;
  int _1992;
  int _1993;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _1994;
  uint8_t * _1995;
  int _1996;
  long unsigned int _1997;
  long unsigned int _1998;
  const int16_t * _1999;
  short int _2000;
  int _2001;
  int _2002;
  long unsigned int _2003;
  long unsigned int _2004;
  sizetype _2005;
  const int16_t * _2006;
  short int _2007;
  int _2008;
  int _2009;
  long unsigned int _2010;
  long unsigned int _2011;
  const int16_t * _2012;
  short int _2013;
  int _2014;
  int _2015;
  sizetype _2016;
  sizetype _2017;
  sizetype _2018;
  const int16_t * _2019;
  short int _2020;
  int _2021;
  int _2024;
  int _2025;
  int _2026;
  int _2027;
  int _2028;
  unsigned int _2029;
  int _2030;
  int _2031;
  int _2032;
  unsigned int _2033;
  int _2034;
  unsigned char _2040;
  int _2041;
  int _2043;
  int _2044;
  signed char _2049;
  int _2051;
  signed char _2052;
  signed char _2053;
  unsigned char _2054;
  void (*<Tf8b>) (uint8_t *, int, uint8_t *, int, uint8_t *, int, int) _2055;
  int _2056;
  int _2057;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _2058;
  uint8_t * _2059;
  int _2060;
  long unsigned int _2061;
  long unsigned int _2062;
  const int16_t * _2063;
  short int _2064;
  int _2065;
  int _2066;
  sizetype _2067;
  sizetype _2068;
  sizetype _2069;
  const int16_t * _2070;
  short int _2071;
  int _2072;
  int _2073;
  long unsigned int _2074;
  long unsigned int _2075;
  const int16_t * _2076;
  short int _2077;
  int _2078;
  int _2079;
  long unsigned int _2080;
  long unsigned int _2081;
  sizetype _2082;
  const int16_t * _2083;
  short int _2084;
  int _2085;
  int _2088;
  int _2089;
  int _2090;
  int _2091;
  int _2092;
  unsigned int _2093;
  int _2094;
  int _2095;
  int _2096;
  unsigned int _2097;
  int _2098;
  unsigned char _2104;
  int _2105;
  int _2107;
  int _2108;
  signed char _2113;
  int _2115;
  signed char _2116;
  signed char _2117;
  unsigned char _2118;
  void (*<Tf8b>) (uint8_t *, int, uint8_t *, int, uint8_t *, int, int) _2119;
  int _2120;
  int _2121;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _2122;
  uint8_t * _2123;
  int _2124;
  long unsigned int _2125;
  long unsigned int _2126;
  sizetype _2127;
  const int16_t * _2128;
  short int _2129;
  int _2130;
  int _2131;
  long unsigned int _2132;
  long unsigned int _2133;
  const int16_t * _2134;
  short int _2135;
  int _2136;
  int _2137;
  sizetype _2138;
  sizetype _2139;
  sizetype _2140;
  const int16_t * _2141;
  short int _2142;
  int _2143;
  int _2144;
  long unsigned int _2145;
  long unsigned int _2146;
  const int16_t * _2147;
  short int _2148;
  int _2149;
  int _2152;
  int _2153;
  int _2154;
  int _2155;
  int _2156;
  unsigned int _2157;
  int _2158;
  int _2159;
  int _2160;
  unsigned int _2161;
  int _2162;
  unsigned char _2168;
  int _2169;
  int _2171;
  int _2172;
  signed char _2177;
  int _2179;
  signed char _2180;
  signed char _2181;
  unsigned char _2182;
  void (*<Tf8b>) (uint8_t *, int, uint8_t *, int, uint8_t *, int, int) _2183;
  int _2184;
  int _2185;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _2186;
  uint8_t * _2187;
  int _2188;
  sizetype _2189;
  sizetype _2190;
  sizetype _2191;
  const int16_t * _2192;
  short int _2193;
  int _2194;
  int _2195;
  long unsigned int _2196;
  long unsigned int _2197;
  const int16_t * _2198;
  short int _2199;
  int _2200;
  int _2201;
  long unsigned int _2202;
  long unsigned int _2203;
  sizetype _2204;
  const int16_t * _2205;
  short int _2206;
  int _2207;
  int _2208;
  long unsigned int _2209;
  long unsigned int _2210;
  const int16_t * _2211;
  short int _2212;
  int _2213;
  int _2216;
  int _2217;
  int _2218;
  int _2219;
  int _2220;
  unsigned int _2221;
  int _2222;
  int _2223;
  int _2224;
  unsigned int _2225;
  int _2226;
  _Bool _2230;
  _Bool _2233;
  _Bool _2235;
  _Bool _2237;
  _Bool _2238;
  uint8_t * (*<Tf83>) (uint8_t *, int *, uint8_t * *, int, int, int, int, int) _2239;
  int _2240;
  uint8_t * (*<Tf83>) (uint8_t *, int *, uint8_t * *, int, int, int, int, int) _2242;
  int _2243;
  short int _2247;
  short int _2249;
  short int _2251;
  short int _2253;
  _Bool _2254;
  _Bool _2257;
  int iftmp.14_2406;
  int iftmp.14_2407;
  int iftmp.14_2408;
  int iftmp.14_2409;
  int iftmp.14_2410;
  int iftmp.14_2411;
  int iftmp.14_2412;
  unsigned int ivtmp_3568;
  unsigned int ivtmp_3569;
  _Bool pretmp_3582;
  _Bool pretmp_3583;
  _Bool pretmp_3584;
  _Bool prephitmp_3585;
  int prephitmp_3586;
  int prephitmp_3587;
  int prephitmp_3589;
  int prephitmp_3591;
  unsigned char pretmp_3592;
  unsigned char prephitmp_3593;
  int prephitmp_3594;
  int prephitmp_3595;
  int prephitmp_3597;
  int prephitmp_3599;
  int prephitmp_3601;
  int prephitmp_3603;
  unsigned char pretmp_3604;
  unsigned char prephitmp_3605;
  int prephitmp_3606;
  int prephitmp_3607;
  int prephitmp_3609;
  int prephitmp_3611;
  unsigned char pretmp_3612;
  unsigned char prephitmp_3613;
  int prephitmp_3614;
  int prephitmp_3615;
  int prephitmp_3617;
  int prephitmp_3618;
  int prephitmp_3619;
  int prephitmp_3621;
  unsigned char pretmp_3622;
  unsigned char prephitmp_3623;
  int prephitmp_3624;
  int prephitmp_3625;
  int prephitmp_3626;
  int prephitmp_3627;
  int prephitmp_3628;
  int prephitmp_3629;
  int prephitmp_3631;
  int prephitmp_3633;
  unsigned char pretmp_3634;
  unsigned char prephitmp_3635;
  int prephitmp_3636;
  int prephitmp_3637;
  int prephitmp_3638;
  int prephitmp_3639;
  int prephitmp_3641;
  int prephitmp_3642;
  int prephitmp_3644;
  int prephitmp_3645;
  unsigned char pretmp_3646;
  unsigned char prephitmp_3647;
  int prephitmp_3648;
  int prephitmp_3649;
  int prephitmp_3650;
  int prephitmp_3651;
  int prephitmp_3652;
  int prephitmp_3653;
  int prephitmp_3655;
  int prephitmp_3657;
  unsigned char pretmp_3658;
  unsigned char prephitmp_3659;
  int prephitmp_3660;
  int prephitmp_3661;
  int prephitmp_3662;
  int prephitmp_3663;
  int prephitmp_3665;
  int prephitmp_3666;
  int prephitmp_3667;
  int prephitmp_3669;
  unsigned char pretmp_3670;
  unsigned char prephitmp_3671;
  int prephitmp_3672;
  int prephitmp_3673;
  int prephitmp_3674;
  int prephitmp_3675;
  int prephitmp_3676;
  int prephitmp_3677;
  int prephitmp_3679;
  int prephitmp_3681;
  unsigned char pretmp_3682;
  unsigned char prephitmp_3683;
  int prephitmp_3684;
  int prephitmp_3685;
  int prephitmp_3686;
  int prephitmp_3687;
  int prephitmp_3688;
  int prephitmp_3689;
  int prephitmp_3691;
  int prephitmp_3693;
  unsigned char pretmp_3694;
  unsigned char prephitmp_3695;
  int prephitmp_3696;
  int prephitmp_3697;
  int prephitmp_3698;
  int prephitmp_3699;
  int prephitmp_3700;
  int prephitmp_3701;
  int prephitmp_3703;
  int prephitmp_3705;
  unsigned char pretmp_3706;
  unsigned char prephitmp_3707;
  int prephitmp_3708;
  int prephitmp_3709;
  int prephitmp_3710;
  int prephitmp_3711;
  int prephitmp_3713;
  int prephitmp_3714;
  int prephitmp_3716;
  int prephitmp_3717;
  unsigned char pretmp_3718;
  unsigned char prephitmp_3719;
  int prephitmp_3720;
  int prephitmp_3721;
  int prephitmp_3722;
  int prephitmp_3723;
  int prephitmp_3724;
  int prephitmp_3725;
  int prephitmp_3727;
  int prephitmp_3729;
  unsigned char pretmp_3730;
  unsigned char prephitmp_3731;
  int prephitmp_3732;
  int prephitmp_3733;
  int prephitmp_3734;
  int prephitmp_3735;
  int prephitmp_3737;
  int prephitmp_3739;
  int prephitmp_3741;
  int prephitmp_3743;
  unsigned char pretmp_3744;
  unsigned char prephitmp_3745;
  int prephitmp_3746;
  int prephitmp_3747;
  int prephitmp_3748;
  int prephitmp_3749;
  int prephitmp_3750;
  int prephitmp_3751;
  int prephitmp_3753;
  int prephitmp_3755;
  unsigned char pretmp_3756;
  unsigned char prephitmp_3757;
  int prephitmp_3758;
  int prephitmp_3759;
  int prephitmp_3760;
  int prephitmp_3761;
  int prephitmp_3763;
  int prephitmp_3764;
  int prephitmp_3766;
  int prephitmp_3768;
  unsigned char pretmp_3769;
  unsigned char prephitmp_3770;
  int prephitmp_3771;
  int prephitmp_3772;
  int prephitmp_3773;
  int prephitmp_3774;
  int prephitmp_3775;
  int prephitmp_3776;
  int prephitmp_3778;
  int prephitmp_3780;
  unsigned char pretmp_3781;
  unsigned char prephitmp_3782;
  int prephitmp_3783;
  int prephitmp_3784;
  int prephitmp_3785;
  int prephitmp_3786;
  int prephitmp_3788;
  int prephitmp_3789;
  int prephitmp_3791;
  int prephitmp_3793;
  unsigned char pretmp_3794;
  unsigned char prephitmp_3795;
  int prephitmp_3796;
  int prephitmp_3797;
  int prephitmp_3798;
  int prephitmp_3799;
  int prephitmp_3800;
  int prephitmp_3801;
  int prephitmp_3803;
  int prephitmp_3805;
  unsigned char pretmp_3806;
  unsigned char prephitmp_3807;
  int prephitmp_3808;
  int prephitmp_3809;
  int prephitmp_3810;
  int prephitmp_3811;
  int prephitmp_3813;
  int prephitmp_3814;
  int prephitmp_3816;
  int prephitmp_3818;
  unsigned char pretmp_3819;
  unsigned char prephitmp_3820;
  int prephitmp_3821;
  int prephitmp_3822;
  int prephitmp_3823;
  int prephitmp_3824;
  int prephitmp_3825;
  int prephitmp_3826;
  int prephitmp_3828;
  int prephitmp_3830;
  unsigned char pretmp_3831;
  unsigned char prephitmp_3832;
  int prephitmp_3833;
  int prephitmp_3834;
  int prephitmp_3835;
  int prephitmp_3836;
  int prephitmp_3837;
  int prephitmp_3839;
  int prephitmp_3841;
  int prephitmp_3843;
  unsigned char pretmp_3844;
  unsigned char prephitmp_3845;
  int prephitmp_3846;
  int prephitmp_3847;
  int prephitmp_3848;
  int prephitmp_3849;
  int prephitmp_3850;
  int prephitmp_3851;
  int prephitmp_3853;
  int prephitmp_3855;
  unsigned char pretmp_3856;
  unsigned char prephitmp_3857;
  int prephitmp_3858;
  int prephitmp_3859;
  int prephitmp_3860;
  int prephitmp_3861;
  int prephitmp_3863;
  int prephitmp_3864;
  int prephitmp_3866;
  int prephitmp_3868;
  unsigned char pretmp_3869;
  unsigned char prephitmp_3870;
  int prephitmp_3871;
  int prephitmp_3872;
  int prephitmp_3873;
  int prephitmp_3874;
  int prephitmp_3875;
  int prephitmp_3876;
  int prephitmp_3877;
  int pretmp_3878;
  int prephitmp_3879;
  unsigned char pretmp_3880;
  unsigned char prephitmp_3881;
  int prephitmp_3882;
  int prephitmp_3883;
  int prephitmp_3884;
  int prephitmp_3885;
  int prephitmp_3887;
  int prephitmp_3888;
  int prephitmp_3889;
  int pretmp_3890;
  int prephitmp_3891;
  unsigned char pretmp_3892;
  unsigned char prephitmp_3893;
  int prephitmp_3894;
  int prephitmp_3895;
  int prephitmp_3896;
  int prephitmp_3897;
  int prephitmp_3898;
  int prephitmp_3899;
  int prephitmp_3900;
  int pretmp_3901;
  int prephitmp_3902;
  unsigned char pretmp_3903;
  unsigned char prephitmp_3904;
  int prephitmp_3905;
  int prephitmp_3906;
  int prephitmp_3907;
  int prephitmp_3908;
  int prephitmp_3909;
  int prephitmp_3911;
  int prephitmp_3912;
  int pretmp_3913;
  int prephitmp_3914;
  unsigned char pretmp_3915;
  unsigned char prephitmp_3916;
  int prephitmp_3917;
  int prephitmp_3918;
  int prephitmp_3919;
  int prephitmp_3920;
  int prephitmp_3921;
  int prephitmp_3922;
  int prephitmp_3923;
  int pretmp_3924;
  int prephitmp_3925;
  unsigned char pretmp_3926;
  unsigned char prephitmp_3927;
  int prephitmp_3928;
  int prephitmp_3929;
  int prephitmp_3930;
  int prephitmp_3931;
  int prephitmp_3932;
  int prephitmp_3933;
  int pretmp_3934;
  int prephitmp_3935;
  unsigned char pretmp_3936;
  unsigned char prephitmp_3937;
  int pretmp_3938;
  int prephitmp_3939;
  int prephitmp_3940;
  int prephitmp_3941;
  int prephitmp_3942;
  int prephitmp_3943;
  int prephitmp_3944;
  int prephitmp_3945;
  int prephitmp_3946;
  unsigned char pretmp_3947;
  unsigned char prephitmp_3948;
  int pretmp_3949;
  int prephitmp_3950;
  int prephitmp_3951;
  int prephitmp_3952;
  int prephitmp_3953;
  int prephitmp_3954;
  unsigned char pretmp_3955;
  unsigned char prephitmp_3956;
  int pretmp_3957;
  int prephitmp_3958;
  int pretmp_3959;
  int prephitmp_3960;
  int pretmp_3961;
  int prephitmp_3962;
  int pretmp_3963;
  int prephitmp_3964;
  unsigned char pretmp_3965;
  unsigned char prephitmp_3966;
  int pretmp_3967;
  int prephitmp_3968;
  int prephitmp_3970;
  int prephitmp_3972;
  int prephitmp_3973;
  int prephitmp_3974;
  int prephitmp_3976;
  int prephitmp_3978;
  int prephitmp_3979;
  int prephitmp_3980;
  int prephitmp_3982;
  int prephitmp_3984;
  int prephitmp_3985;
  int prephitmp_3986;
  int prephitmp_3988;
  int prephitmp_3990;
  int prephitmp_3991;
  int prephitmp_3992;
  int prephitmp_3994;
  int prephitmp_3996;
  int prephitmp_3997;
  int prephitmp_3998;
  int prephitmp_4000;
  int prephitmp_4002;
  int prephitmp_4003;
  int prephitmp_4004;
  int prephitmp_4006;
  int prephitmp_4008;
  int prephitmp_4009;
  int prephitmp_4010;
  int prephitmp_4012;
  int prephitmp_4014;
  int prephitmp_4015;
  int prephitmp_4016;
  int prephitmp_4018;
  int prephitmp_4020;
  int prephitmp_4021;
  int prephitmp_4022;
  int prephitmp_4024;
  int prephitmp_4026;
  int prephitmp_4027;
  int prephitmp_4028;
  int prephitmp_4030;
  int prephitmp_4032;
  int prephitmp_4034;
  int prephitmp_4036;
  int prephitmp_4037;
  int prephitmp_4038;
  int prephitmp_4039;
  int prephitmp_4040;
  int prephitmp_4042;
  int prephitmp_4044;
  int prephitmp_4045;
  int prephitmp_4046;
  int prephitmp_4048;
  int prephitmp_4050;
  int prephitmp_4052;
  int prephitmp_4053;
  int prephitmp_4054;
  int prephitmp_4055;
  int prephitmp_4057;
  int prephitmp_4059;
  int prephitmp_4060;
  int prephitmp_4061;
  int prephitmp_4063;
  int prephitmp_4065;
  int prephitmp_4067;
  int prephitmp_4068;
  int prephitmp_4069;
  int prephitmp_4070;
  int prephitmp_4072;
  int prephitmp_4074;
  int prephitmp_4075;
  int prephitmp_4076;
  int prephitmp_4078;
  int prephitmp_4080;
  int prephitmp_4082;
  int prephitmp_4083;
  int prephitmp_4084;
  int prephitmp_4085;
  int prephitmp_4087;
  int prephitmp_4089;
  int prephitmp_4090;
  int prephitmp_4091;
  int prephitmp_4093;
  int prephitmp_4095;
  int prephitmp_4097;
  int prephitmp_4098;
  int prephitmp_4099;
  int prephitmp_4100;
  int prephitmp_4102;
  int prephitmp_4104;
  int prephitmp_4105;
  int prephitmp_4106;
  int prephitmp_4108;
  int prephitmp_4110;
  int prephitmp_4112;
  int prephitmp_4113;
  int prephitmp_4114;
  int prephitmp_4115;
  int prephitmp_4117;
  int prephitmp_4118;
  int prephitmp_4120;
  int prephitmp_4122;
  int prephitmp_4123;
  int prephitmp_4124;
  int prephitmp_4126;
  int prephitmp_4127;
  int prephitmp_4129;
  int prephitmp_4131;
  int prephitmp_4132;
  int prephitmp_4133;
  int prephitmp_4135;
  int prephitmp_4136;
  int prephitmp_4138;
  int prephitmp_4140;
  int prephitmp_4141;
  int prephitmp_4142;
  int prephitmp_4144;
  int prephitmp_4145;
  int prephitmp_4147;
  int prephitmp_4149;
  int prephitmp_4150;
  int prephitmp_4151;
  int prephitmp_4153;
  int prephitmp_4155;
  int prephitmp_4156;
  int prephitmp_4157;
  int prephitmp_4159;
  int prephitmp_4161;
  int prephitmp_4162;
  int prephitmp_4163;
  int prephitmp_4165;
  int prephitmp_4167;
  int prephitmp_4168;
  int prephitmp_4169;
  int prephitmp_4171;
  int prephitmp_4173;
  int prephitmp_4174;
  int prephitmp_4175;
  int prephitmp_4177;
  int prephitmp_4179;
  int prephitmp_4180;
  int prephitmp_4181;
  int prephitmp_4183;
  int prephitmp_4185;
  int prephitmp_4186;
  int prephitmp_4187;
  int prephitmp_4189;
  int prephitmp_4191;
  int prephitmp_4192;
  int prephitmp_4193;
  int prephitmp_4195;
  int prephitmp_4197;
  int prephitmp_4198;
  int prephitmp_4199;
  int prephitmp_4201;
  int prephitmp_4203;
  int prephitmp_4204;
  int prephitmp_4205;
  int prephitmp_4207;
  int prephitmp_4209;
  int prephitmp_4211;
  int prephitmp_4213;
  int prephitmp_4214;
  int prephitmp_4215;
  int prephitmp_4216;
  int prephitmp_4217;
  int prephitmp_4219;
  int prephitmp_4221;
  int prephitmp_4222;
  int prephitmp_4223;
  int prephitmp_4225;
  int prephitmp_4227;
  int prephitmp_4228;
  int prephitmp_4229;
  int prephitmp_4231;
  int prephitmp_4232;
  int prephitmp_4234;
  int prephitmp_4236;
  int prephitmp_4237;
  int prephitmp_4238;
  int prephitmp_4240;
  int prephitmp_4241;
  int prephitmp_4243;
  int prephitmp_4245;
  int prephitmp_4246;
  int prephitmp_4247;
  int prephitmp_4249;
  int prephitmp_4250;
  int prephitmp_4252;
  int prephitmp_4254;
  int prephitmp_4255;
  int prephitmp_4256;
  int prephitmp_4258;
  int prephitmp_4259;
  int prephitmp_4261;
  int prephitmp_4263;
  int prephitmp_4265;
  int prephitmp_4266;
  int prephitmp_4267;
  int prephitmp_4268;
  int prephitmp_4270;
  int prephitmp_4271;
  int prephitmp_4273;
  int prephitmp_4275;
  int prephitmp_4276;
  int prephitmp_4277;
  int prephitmp_4279;
  int prephitmp_4280;
  int prephitmp_4282;
  int prephitmp_4284;
  int prephitmp_4285;
  int prephitmp_4286;
  int prephitmp_4288;
  int prephitmp_4289;
  int prephitmp_4291;
  int prephitmp_4293;
  int prephitmp_4294;
  int prephitmp_4295;
  int prephitmp_4297;
  int prephitmp_4298;
  int prephitmp_4300;
  int prephitmp_4301;
  int prephitmp_4303;
  int prephitmp_4304;
  int prephitmp_4306;
  int prephitmp_4307;
  int prephitmp_4309;
  int prephitmp_4311;
  int prephitmp_4312;
  int prephitmp_4313;
  int prephitmp_4315;
  int prephitmp_4316;
  int prephitmp_4318;
  int prephitmp_4320;
  int prephitmp_4321;
  int prephitmp_4322;
  int prephitmp_4324;
  int prephitmp_4325;
  int prephitmp_4327;
  int prephitmp_4328;
  int prephitmp_4330;
  int prephitmp_4331;
  int prephitmp_4333;
  int prephitmp_4335;
  int prephitmp_4337;
  int prephitmp_4338;
  int prephitmp_4339;
  int prephitmp_4340;
  int prephitmp_4342;
  int prephitmp_4344;
  int prephitmp_4345;
  int prephitmp_4346;
  int prephitmp_4348;
  int prephitmp_4349;
  int prephitmp_4351;
  int prephitmp_4352;
  int prephitmp_4354;
  int prephitmp_4356;
  int prephitmp_4357;
  int prephitmp_4358;
  int prephitmp_4360;
  int prephitmp_4361;
  int prephitmp_4363;
  int prephitmp_4365;
  int prephitmp_4366;
  int prephitmp_4367;
  int prephitmp_4369;
  int prephitmp_4370;
  int prephitmp_4372;
  int prephitmp_4374;
  int prephitmp_4375;
  int prephitmp_4376;
  int prephitmp_4378;
  int prephitmp_4379;
  int prephitmp_4381;
  int prephitmp_4383;
  int prephitmp_4384;
  int prephitmp_4385;
  int prephitmp_4387;
  int prephitmp_4388;
  int prephitmp_4390;
  int prephitmp_4391;
  int prephitmp_4393;
  int prephitmp_4394;
  int prephitmp_4396;
  int prephitmp_4397;
  int prephitmp_4399;
  int prephitmp_4400;
  int prephitmp_4402;
  int prephitmp_4403;
  int prephitmp_4405;
  int prephitmp_4406;
  int prephitmp_4408;
  int prephitmp_4409;
  int prephitmp_4411;
  int prephitmp_4412;
  int prephitmp_4414;
  int prephitmp_4415;
  int prephitmp_4417;
  int prephitmp_4419;
  int prephitmp_4420;
  int prephitmp_4421;
  int prephitmp_4423;
  int prephitmp_4424;
  int prephitmp_4426;
  int prephitmp_4428;
  int prephitmp_4429;
  int prephitmp_4430;
  int prephitmp_4432;
  int prephitmp_4433;
  int prephitmp_4435;
  int prephitmp_4436;
  int prephitmp_4438;
  int prephitmp_4439;
  int prephitmp_4441;
  int prephitmp_4443;
  int prephitmp_4444;
  int prephitmp_4445;
  int prephitmp_4447;
  int prephitmp_4448;
  int prephitmp_4450;
  int prephitmp_4451;
  int prephitmp_4453;
  int prephitmp_4455;
  int prephitmp_4456;
  int prephitmp_4457;
  int prephitmp_4459;
  int prephitmp_4460;
  int prephitmp_4462;
  int prephitmp_4464;
  int prephitmp_4465;
  int prephitmp_4466;
  int prephitmp_4468;
  int prephitmp_4469;
  int prephitmp_4471;
  int prephitmp_4473;
  int prephitmp_4474;
  int prephitmp_4475;
  int prephitmp_4477;
  int prephitmp_4478;
  int prephitmp_4480;
  int prephitmp_4481;
  int prephitmp_4483;
  int prephitmp_4484;
  int prephitmp_4486;
  int prephitmp_4487;
  int prephitmp_4489;
  int prephitmp_4490;
  int prephitmp_4492;
  int prephitmp_4493;
  int prephitmp_4495;
  int prephitmp_4496;
  int prephitmp_4498;
  int prephitmp_4499;
  int prephitmp_4501;
  int prephitmp_4502;
  int prephitmp_4504;
  int prephitmp_4505;
  int prephitmp_4507;
  int prephitmp_4508;
  int prephitmp_4510;
  int prephitmp_4511;
  int prephitmp_4513;
  int prephitmp_4514;
  int prephitmp_4516;
  int prephitmp_4517;
  int prephitmp_4519;
  int prephitmp_4520;
  int prephitmp_4522;
  int prephitmp_4523;
  int prephitmp_4525;
  int prephitmp_4526;
  int prephitmp_4528;
  int prephitmp_4529;
  int prephitmp_4531;
  int prephitmp_4532;
  int prephitmp_4534;
  int prephitmp_4535;
  int prephitmp_4537;
  int prephitmp_4538;
  int prephitmp_4540;
  int prephitmp_4541;
  int prephitmp_4543;
  int prephitmp_4544;
  int prephitmp_4546;
  int prephitmp_4547;
  int prephitmp_4549;
  int prephitmp_4550;
  int prephitmp_4552;
  int prephitmp_4553;
  int prephitmp_4555;
  int prephitmp_4556;
  int prephitmp_4558;
  int prephitmp_4559;
  int prephitmp_4561;
  int prephitmp_4562;
  int prephitmp_4564;
  int prephitmp_4565;
  int prephitmp_4567;
  int prephitmp_4568;
  int prephitmp_4570;
  int prephitmp_4571;
  int prephitmp_4573;
  int prephitmp_4574;
  int prephitmp_4576;
  int prephitmp_4577;
  int prephitmp_4579;
  int prephitmp_4580;
  int prephitmp_4582;
  int prephitmp_4583;
  int prephitmp_4585;
  int prephitmp_4586;
  int prephitmp_4588;
  int prephitmp_4589;
  int prephitmp_4591;
  int prephitmp_4592;
  int prephitmp_4594;
  int prephitmp_4595;
  int prephitmp_4597;
  int prephitmp_4598;

  <bb 2>:
  # DEBUG h => h_2(D)
  # DEBUG m0 => m0_3(D)
  # DEBUG m1 => m1_4(D)
  # DEBUG i_weight => i_weight_5(D)
  # DEBUG i8 => i8_6(D)
  # DEBUG i_lambda2 => i_lambda2_7(D)
  # DEBUG rd => 1
  # DEBUG D#138 => i8_6(D) * 4
  # DEBUG D#137 => x264_scan8[D#138]
  # DEBUG D#136 => &h_2(D)->mb.cache.mv[0][D#137]
  # DEBUG cache0_mv => D#136
  # DEBUG D#135 => m0_3(D)->i_pixel
  # DEBUG D#134 => pixel_mv_offs[D#135]
  # DEBUG D#133 => (long unsigned int) D#134
  # DEBUG D#132 => D#133 * 2
  # DEBUG cache0_mv2 => D#136 + D#132
  # DEBUG D#131 => &h_2(D)->mb.cache.mv[1][D#137]
  # DEBUG cache1_mv => D#131
  # DEBUG cache1_mv2 => D#131 + D#132
  # DEBUG i_pixel => D#135
  # DEBUG D#130 => x264_pixel_size[D#135].w
  # DEBUG bw => D#130
  # DEBUG D#129 => x264_pixel_size[D#135].h
  # DEBUG bh => D#129
  # DEBUG D#128 => m0_3(D)->p_cost_mv
  _22 = h_2(D)->mb.mv_max_spel[0];
  _23 = h_2(D)->mb.mv_min_spel[0];
  _24 = m0_3(D)->mvp[0];
  _25 = (int) _24;
  # DEBUG v => _25
  # DEBUG i_min => _23
  # DEBUG i_max => _22
  if (_23 <= _25)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  iftmp.14_2411 = MIN_EXPR <_22, _25>;

  <bb 4>:
  # iftmp.14_2412 = PHI <_23(2), iftmp.14_2411(3)>
  # DEBUG v => NULL
  # DEBUG i_min => NULL
  # DEBUG i_max => NULL
  # DEBUG D#127 => (long unsigned int) iftmp.14_2412
  # DEBUG D#126 => D#127 * 2
  # DEBUG D#125 => -D#126
  # DEBUG p_cost_m0x => D#128 + D#125
  _31 = m0_3(D)->mvp[1];
  _32 = (int) _31;
  # DEBUG v => _32
  # DEBUG i_min => _23
  # DEBUG i_max => _22
  if (_23 <= _32)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  iftmp.14_2409 = MIN_EXPR <_22, _32>;

  <bb 6>:
  # iftmp.14_2410 = PHI <_23(4), iftmp.14_2409(5)>
  # DEBUG v => NULL
  # DEBUG i_min => NULL
  # DEBUG i_max => NULL
  # DEBUG D#124 => (long unsigned int) iftmp.14_2410
  # DEBUG D#123 => D#124 * 2
  # DEBUG D#122 => -D#123
  # DEBUG p_cost_m0y => D#128 + D#122
  # DEBUG D#121 => m1_4(D)->p_cost_mv
  _39 = m1_4(D)->mvp[0];
  _40 = (int) _39;
  # DEBUG v => _40
  # DEBUG i_min => _23
  # DEBUG i_max => _22
  if (_23 <= _40)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  iftmp.14_2407 = MIN_EXPR <_22, _40>;

  <bb 8>:
  # iftmp.14_2408 = PHI <_23(6), iftmp.14_2407(7)>
  # DEBUG v => NULL
  # DEBUG i_min => NULL
  # DEBUG i_max => NULL
  # DEBUG D#120 => (long unsigned int) iftmp.14_2408
  # DEBUG D#119 => D#120 * 2
  # DEBUG D#118 => -D#119
  # DEBUG p_cost_m1x => D#121 + D#118
  _46 = m1_4(D)->mvp[1];
  _47 = (int) _46;
  # DEBUG v => _47
  # DEBUG i_min => _23
  # DEBUG i_max => _22
  if (_23 <= _47)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  iftmp.14_8 = MIN_EXPR <_22, _47>;

  <bb 10>:
  # iftmp.14_2406 = PHI <_23(8), iftmp.14_8(9)>
  # DEBUG v => NULL
  # DEBUG i_min => NULL
  # DEBUG i_max => NULL
  # DEBUG D#117 => (long unsigned int) iftmp.14_2406
  # DEBUG D#116 => D#117 * 2
  # DEBUG D#115 => -D#116
  # DEBUG p_cost_m1y => D#121 + D#115
  # DEBUG D#114 => m0_3(D)->mv[0]
  # DEBUG D#113 => (int) D#114
  # DEBUG bm0x => D#113
  # DEBUG om0x => D#113
  _55 = m0_3(D)->mv[1];
  bm0y_56 = (int) _55;
  # DEBUG bm0y => bm0y_56
  # DEBUG om0y => bm0y_56
  # DEBUG D#112 => m1_4(D)->mv[0]
  # DEBUG D#111 => (int) D#112
  # DEBUG bm1x => D#111
  # DEBUG om1x => D#111
  _59 = m1_4(D)->mv[1];
  bm1y_60 = (int) _59;
  # DEBUG bm1y => bm1y_60
  # DEBUG om1y => bm1y_60
  # DEBUG bcost => 268435456
  # DEBUG pass => 0
  # DEBUG bcostrd => 1152921504606846976
  _61 = h_2(D)->mb.mv_max_spel[1];
  _62 = _61 + -7;
  _2254 = bm1y_60 >= _62;
  _2257 = bm0y_56 >= _62;
  _48 = _2254 | _2257;
  if (_48 != 0)
    goto <bb 217>;
  else
    goto <bb 11>;

  <bb 11>:
  _9 = i8_6(D) * 4;
  _10 = x264_scan8[_9];
  cache0_mv_11 = &h_2(D)->mb.cache.mv[0][_10];
  _12 = m0_3(D)->i_pixel;
  _13 = pixel_mv_offs[_12];
  _14 = (long unsigned int) _13;
  _15 = _14 * 2;
  cache0_mv2_16 = cache0_mv_11 + _15;
  cache1_mv_17 = &h_2(D)->mb.cache.mv[1][_10];
  cache1_mv2_18 = cache1_mv_17 + _15;
  bw_19 = x264_pixel_size[_12].w;
  bh_20 = x264_pixel_size[_12].h;
  _21 = m0_3(D)->p_cost_mv;
  _27 = (long unsigned int) iftmp.14_2412;
  _28 = _27 * 2;
  _29 = -_28;
  p_cost_m0x_30 = _21 + _29;
  _34 = (long unsigned int) iftmp.14_2410;
  _35 = _34 * 2;
  _36 = -_35;
  p_cost_m0y_37 = _21 + _36;
  _38 = m1_4(D)->p_cost_mv;
  _42 = (long unsigned int) iftmp.14_2408;
  _43 = _42 * 2;
  _44 = -_43;
  p_cost_m1x_45 = _38 + _44;
  _49 = (long unsigned int) iftmp.14_2406;
  _50 = _49 * 2;
  _51 = -_50;
  p_cost_m1y_52 = _38 + _51;
  _53 = m0_3(D)->mv[0];
  bm0x_54 = (int) _53;
  _57 = m1_4(D)->mv[0];
  bm1x_58 = (int) _57;
  _63 = h_2(D)->mc.memzero_aligned;
  _63 (&visited, 512);
  # DEBUG i => 4
  stride0[4] = bw_19;
  stride1[4] = bw_19;
  _64 = h_2(D)->mc.get_ref;
  _65 = m0_3(D)->i_stride[0];
  _66 = &m0_3(D)->p_fref;
  src0$4_67 = _64 (&MEM[(void *)&pix0 + 1024B], &MEM[(void *)&stride0 + 16B], _66, _65, bm0x_54, bm0y_56, bw_19, bh_20);
  # DEBUG src0$4 => src0$4_67
  _68 = h_2(D)->mc.get_ref;
  _69 = m1_4(D)->i_stride[0];
  _70 = &m1_4(D)->p_fref;
  src1$4_71 = _68 (&MEM[(void *)&pix1 + 1024B], &MEM[(void *)&stride1 + 16B], _70, _69, bm1x_58, bm1y_60, bw_19, bh_20);
  # DEBUG src1$4 => src1$4_71
  # DEBUG i0 => 4
  # DEBUG i1 => 4
  _72 = _53 & 7;
  _73 = _55 & 7;
  _74 = _57 & 7;
  _75 = (int) _72;
  _76 = (int) _73;
  _77 = (int) _74;
  _78 = visited[_75][_76][_77];
  _79 = (signed char) _78;
  _80 = _59 & 7;
  _81 = (int) _80;
  _82 = 1 << _81;
  _83 = (signed char) _82;
  _84 = _79 | _83;
  _85 = (unsigned char) _84;
  visited[_75][_76][_77] = _85;
  _86 = h_2(D)->mc.avg[_12];
  _87 = stride1[4];
  _88 = stride0[4];
  _86 (&pix, bw_19, src0$4_67, _88, src1$4_71, _87, i_weight_5(D));
  _89 = h_2(D)->pixf.mbcmp[_12];
  _90 = m0_3(D)->p_fenc[0];
  _91 = _89 (_90, 16, &pix, bw_19);
  _92 = (long unsigned int) _53;
  _93 = _92 * 2;
  _94 = p_cost_m0x_30 + _93;
  _95 = *_94;
  _96 = (int) _95;
  _97 = _91 + _96;
  _98 = (long unsigned int) _55;
  _99 = _98 * 2;
  _100 = p_cost_m0y_37 + _99;
  _101 = *_100;
  _102 = (int) _101;
  _103 = _97 + _102;
  _104 = (long unsigned int) _57;
  _105 = _104 * 2;
  _106 = p_cost_m1x_45 + _105;
  _107 = *_106;
  _108 = (int) _107;
  _109 = _103 + _108;
  _110 = (long unsigned int) _59;
  _111 = _110 * 2;
  _112 = p_cost_m1y_52 + _111;
  _113 = *_112;
  _114 = (int) _113;
  bcost_115 = _109 + _114;
  # DEBUG cost => bcost_115
  if (bcost_115 <= 16777215)
    goto <bb 12>;
  else
    goto <bb 14>;

  <bb 12>:
  # DEBUG bcost => bcost_115
  # DEBUG bcost => bcost_115
  # DEBUG a => D#113
  # DEBUG b => bm0y_56
  _116 = bm0x_54 & 65535;
  _117 = bm0y_56 << 16;
  _118 = _116 + _117;
  _119 = (unsigned int) _118;
  # DEBUG a => NULL
  # DEBUG b => NULL
  MEM[(uint32_t *)cache0_mv2_16] = _119;
  MEM[(uint32_t *)cache0_mv_11] = _119;
  # DEBUG a => D#111
  # DEBUG b => bm1y_60
  _120 = bm1x_58 & 65535;
  _121 = bm1y_60 << 16;
  _122 = _120 + _121;
  _123 = (unsigned int) _122;
  # DEBUG a => NULL
  # DEBUG b => NULL
  MEM[(uint32_t *)cache1_mv2_18] = _123;
  MEM[(uint32_t *)cache1_mv_17] = _123;
  _124 = m0_3(D)->i_pixel;
  bcostrd_125 = x264_rd_cost_part (h_2(D), i_lambda2_7(D), i8_6(D), _124);
  # DEBUG costrd => bcostrd_125
  if (bcostrd_125 <= 1152921504606846975)
    goto <bb 14>;
  else
    goto <bb 13>;

  <bb 13>:

  <bb 14>:
  # bcost_2259 = PHI <bcost_115(12), 268435456(11), bcost_115(13)>
  # bcostrd_26 = PHI <bcostrd_125(12), 1152921504606846976(11), 1152921504606846976(13)>
  # DEBUG src1$4 => src1$4_71
  # DEBUG src0$4 => src0$4_67
  # DEBUG bcostrd => bcostrd_26
  # DEBUG pass => 0
  # DEBUG bcost => bcost_2259
  # DEBUG om1y => bm1y_60
  # DEBUG bm1y => bm1y_60
  # DEBUG om1x => D#111
  # DEBUG bm1x => D#111
  # DEBUG om0y => bm0y_56
  # DEBUG bm0y => bm0y_56
  # DEBUG om0x => D#113
  # DEBUG bm0x => D#113

  <bb 15>:
  # bm0x_3230 = PHI <bm0x_2229(216), bm0x_54(14)>
  # bm0y_3227 = PHI <bm0y_2231(216), bm0y_56(14)>
  # bm1x_3231 = PHI <bm1x_2234(216), bm1x_58(14)>
  # bm1y_3228 = PHI <bm1y_2236(216), bm1y_60(14)>
  # pass_3229 = PHI <pass_2245(216), 0(14)>
  # src0$4_2816 = PHI <src0$4_2241(216), src0$4_67(14)>
  # bcost_2783 = PHI <bcost_2404(216), bcost_2259(14)>
  # bcostrd_3016 = PHI <bcostrd_2405(216), bcostrd_26(14)>
  # src1$4_3219 = PHI <src1$4_2244(216), src1$4_71(14)>
  # ivtmp_3569 = PHI <ivtmp_3568(216), 8(14)>
  # DEBUG src1$4 => src1$4_3219
  # DEBUG src0$4 => src0$4_2816
  # DEBUG bcostrd => bcostrd_3016
  # DEBUG pass => pass_3229
  # DEBUG bcost => bcost_2783
  # DEBUG om1y => bm1y_3228
  # DEBUG bm1y => bm1y_3228
  # DEBUG om1x => bm1x_3231
  # DEBUG bm1x => bm1x_3231
  # DEBUG om0y => bm0y_3227
  # DEBUG bm0y => bm0y_3227
  # DEBUG om0x => bm0x_3230
  # DEBUG bm0x => bm0x_3230
  # DEBUG i => 7
  stride0[7] = bw_19;
  stride1[7] = bw_19;
  _126 = h_2(D)->mc.get_ref;
  bm0x_128 = bm0x_3230 + 1;
  _129 = m0_3(D)->i_stride[0];
  _131 = _126 (&MEM[(void *)&pix0 + 1792B], &MEM[(void *)&stride0 + 28B], _66, _129, bm0x_128, bm0y_3227, bw_19, bh_20);
  # DEBUG src0$7 => _131
  _132 = h_2(D)->mc.get_ref;
  bm1x_134 = bm1x_3231 + 1;
  _135 = m1_4(D)->i_stride[0];
  _137 = _132 (&MEM[(void *)&pix1 + 1792B], &MEM[(void *)&stride1 + 28B], _70, _135, bm1x_134, bm1y_3228, bw_19, bh_20);
  # DEBUG src1$7 => _137
  # DEBUG i => 1
  stride0[1] = bw_19;
  stride1[1] = bw_19;
  _138 = h_2(D)->mc.get_ref;
  bm0x_139 = bm0x_3230 + -1;
  _140 = m0_3(D)->i_stride[0];
  _141 = _138 (&MEM[(void *)&pix0 + 256B], &MEM[(void *)&stride0 + 4B], _66, _140, bm0x_139, bm0y_3227, bw_19, bh_20);
  # DEBUG src0$1 => _141
  _142 = h_2(D)->mc.get_ref;
  bm1x_143 = bm1x_3231 + -1;
  _144 = m1_4(D)->i_stride[0];
  _145 = _142 (&MEM[(void *)&pix1 + 256B], &MEM[(void *)&stride1 + 4B], _70, _144, bm1x_143, bm1y_3228, bw_19, bh_20);
  # DEBUG src1$1 => _145
  # DEBUG i => 5
  stride0[5] = bw_19;
  stride1[5] = bw_19;
  _146 = h_2(D)->mc.get_ref;
  bm0y_147 = bm0y_3227 + 1;
  _148 = m0_3(D)->i_stride[0];
  _149 = _146 (&MEM[(void *)&pix0 + 1280B], &MEM[(void *)&stride0 + 20B], _66, _148, bm0x_3230, bm0y_147, bw_19, bh_20);
  # DEBUG src0$5 => _149
  _150 = h_2(D)->mc.get_ref;
  bm1y_151 = bm1y_3228 + 1;
  _152 = m1_4(D)->i_stride[0];
  _153 = _150 (&MEM[(void *)&pix1 + 1280B], &MEM[(void *)&stride1 + 20B], _70, _152, bm1x_3231, bm1y_151, bw_19, bh_20);
  # DEBUG src1$5 => _153
  # DEBUG i => 3
  stride0[3] = bw_19;
  stride1[3] = bw_19;
  _154 = h_2(D)->mc.get_ref;
  bm0y_155 = bm0y_3227 + -1;
  _156 = m0_3(D)->i_stride[0];
  _157 = _154 (&MEM[(void *)&pix0 + 768B], &MEM[(void *)&stride0 + 12B], _66, _156, bm0x_3230, bm0y_155, bw_19, bh_20);
  # DEBUG src0$3 => _157
  _158 = h_2(D)->mc.get_ref;
  bm1y_159 = bm1y_3228 + -1;
  _160 = m1_4(D)->i_stride[0];
  _161 = _158 (&MEM[(void *)&pix1 + 768B], &MEM[(void *)&stride1 + 12B], _70, _160, bm1x_3231, bm1y_159, bw_19, bh_20);
  # DEBUG src1$3 => _161
  # DEBUG i => 8
  stride0[8] = bw_19;
  stride1[8] = bw_19;
  _162 = h_2(D)->mc.get_ref;
  _163 = m0_3(D)->i_stride[0];
  _164 = _162 (&MEM[(void *)&pix0 + 2048B], &MEM[(void *)&stride0 + 32B], _66, _163, bm0x_128, bm0y_147, bw_19, bh_20);
  # DEBUG src0$8 => _164
  _165 = h_2(D)->mc.get_ref;
  _166 = m1_4(D)->i_stride[0];
  _167 = _165 (&MEM[(void *)&pix1 + 2048B], &MEM[(void *)&stride1 + 32B], _70, _166, bm1x_134, bm1y_151, bw_19, bh_20);
  # DEBUG src1$8 => _167
  # DEBUG i => 0
  stride0[0] = bw_19;
  stride1[0] = bw_19;
  _168 = h_2(D)->mc.get_ref;
  _169 = m0_3(D)->i_stride[0];
  _170 = _168 (&MEM[(void *)&pix0], &MEM[(void *)&stride0], _66, _169, bm0x_139, bm0y_155, bw_19, bh_20);
  # DEBUG src0$0 => _170
  _171 = h_2(D)->mc.get_ref;
  _172 = m1_4(D)->i_stride[0];
  _173 = _171 (&MEM[(void *)&pix1], &MEM[(void *)&stride1], _70, _172, bm1x_143, bm1y_159, bw_19, bh_20);
  # DEBUG src1$0 => _173
  # DEBUG i => 6
  stride0[6] = bw_19;
  stride1[6] = bw_19;
  _174 = h_2(D)->mc.get_ref;
  _175 = m0_3(D)->i_stride[0];
  _176 = _174 (&MEM[(void *)&pix0 + 1536B], &MEM[(void *)&stride0 + 24B], _66, _175, bm0x_128, bm0y_155, bw_19, bh_20);
  # DEBUG src0$6 => _176
  _177 = h_2(D)->mc.get_ref;
  _178 = m1_4(D)->i_stride[0];
  _179 = _177 (&MEM[(void *)&pix1 + 1536B], &MEM[(void *)&stride1 + 24B], _70, _178, bm1x_134, bm1y_159, bw_19, bh_20);
  # DEBUG src1$6 => _179
  # DEBUG i => 2
  stride0[2] = bw_19;
  stride1[2] = bw_19;
  _180 = h_2(D)->mc.get_ref;
  _181 = m0_3(D)->i_stride[0];
  _182 = _180 (&MEM[(void *)&pix0 + 512B], &MEM[(void *)&stride0 + 8B], _66, _181, bm0x_139, bm0y_147, bw_19, bh_20);
  # DEBUG src0$2 => _182
  _183 = h_2(D)->mc.get_ref;
  _184 = m1_4(D)->i_stride[0];
  _185 = _183 (&MEM[(void *)&pix1 + 512B], &MEM[(void *)&stride1 + 8B], _70, _184, bm1x_143, bm1y_151, bw_19, bh_20);
  # DEBUG src1$2 => _185
  if (pass_3229 == 0)
    goto <bb 16>;
  else
    goto <bb 17>;

  <bb 16>:
  pretmp_3959 = bm0x_3230 & 7;
  pretmp_3961 = bm0y_3227 & 7;
  pretmp_3963 = bm1x_3231 & 7;
  pretmp_3965 = visited[pretmp_3959][pretmp_3961][pretmp_3963];
  pretmp_3967 = bm1y_151 & 7;
  goto <bb 18>;

  <bb 17>:
  _187 = bm0x_3230 & 7;
  _188 = bm0y_3227 & 7;
  _189 = bm1x_3231 & 7;
  _190 = visited[_187][_188][_189];
  _191 = (int) _190;
  _192 = bm1y_151 & 7;
  _193 = _191 >> _192;
  _194 = _193 & 1;
  if (_194 == 0)
    goto <bb 18>;
  else
    goto <bb 24>;

  <bb 18>:
  # prephitmp_3960 = PHI <pretmp_3959(16), _187(17)>
  # prephitmp_3962 = PHI <pretmp_3961(16), _188(17)>
  # prephitmp_3964 = PHI <pretmp_3963(16), _189(17)>
  # prephitmp_3966 = PHI <pretmp_3965(16), _190(17)>
  # prephitmp_3968 = PHI <pretmp_3967(16), _192(17)>
  # DEBUG i0 => 4
  # DEBUG i1 => 5
  _199 = (signed char) prephitmp_3966;
  _201 = 1 << prephitmp_3968;
  _202 = (signed char) _201;
  _203 = _199 | _202;
  _204 = (unsigned char) _203;
  visited[prephitmp_3960][prephitmp_3962][prephitmp_3964] = _204;
  _205 = h_2(D)->mc.avg[_12];
  _206 = stride1[5];
  _207 = stride0[4];
  _205 (&pix, bw_19, src0$4_2816, _207, _153, _206, i_weight_5(D));
  _209 = h_2(D)->pixf.mbcmp[_12];
  _210 = m0_3(D)->p_fenc[0];
  _211 = _209 (_210, 16, &pix, bw_19);
  _212 = (long unsigned int) bm0x_3230;
  _213 = _212 * 2;
  _214 = p_cost_m0x_30 + _213;
  _215 = *_214;
  _216 = (int) _215;
  _217 = _211 + _216;
  _218 = (long unsigned int) bm0y_3227;
  _219 = _218 * 2;
  _220 = p_cost_m0y_37 + _219;
  _221 = *_220;
  _222 = (int) _221;
  _223 = _217 + _222;
  _224 = (long unsigned int) bm1x_3231;
  _225 = _224 * 2;
  _226 = p_cost_m1x_45 + _225;
  _227 = *_226;
  _228 = (int) _227;
  _229 = _223 + _228;
  _230 = (sizetype) bm1y_3228;
  _231 = _230 + 1;
  _232 = _231 * 2;
  _233 = p_cost_m1y_52 + _232;
  _234 = *_233;
  _235 = (int) _234;
  bcost_236 = _229 + _235;
  # DEBUG cost => bcost_236
  _238 = bcost_2783 * 17;
  _239 = _238 / 16;
  if (bcost_236 < _239)
    goto <bb 19>;
  else
    goto <bb 21>;

  <bb 19>:
  bcost_2805 = MIN_EXPR <bcost_236, bcost_2783>;
  # DEBUG bcost => bcost_2805
  # DEBUG a => bm0x_3230
  # DEBUG b => bm0y_3227
  _240 = bm0x_3230 & 65535;
  _241 = bm0y_3227 << 16;
  _242 = _240 + _241;
  _243 = (unsigned int) _242;
  # DEBUG a => NULL
  # DEBUG b => NULL
  MEM[(uint32_t *)cache0_mv2_16] = _243;
  MEM[(uint32_t *)cache0_mv_11] = _243;
  # DEBUG a => bm1x_3231
  # DEBUG b => bm1y_151
  _244 = bm1x_3231 & 65535;
  _245 = bm1y_151 << 16;
  _246 = _244 + _245;
  _247 = (unsigned int) _246;
  # DEBUG a => NULL
  # DEBUG b => NULL
  MEM[(uint32_t *)cache1_mv2_18] = _247;
  MEM[(uint32_t *)cache1_mv_17] = _247;
  _248 = m0_3(D)->i_pixel;
  bcostrd_249 = x264_rd_cost_part (h_2(D), i_lambda2_7(D), i8_6(D), _248);
  # DEBUG costrd => bcostrd_249
  if (bcostrd_249 < bcostrd_3016)
    goto <bb 21>;
  else
    goto <bb 20>;

  <bb 20>:

  <bb 21>:
  # bm1y_2261 = PHI <bm1y_151(19), bm1y_3228(18), bm1y_3228(20)>
  # bcost_300 = PHI <bcost_2805(19), bcost_2783(18), bcost_2805(20)>
  # bcostrd_313 = PHI <bcostrd_249(19), bcostrd_3016(18), bcostrd_3016(20)>
  # DEBUG bcostrd => bcostrd_313
  # DEBUG bcost => bcost_300
  # DEBUG bm1y => bm1y_2261
  # DEBUG bm1x => bm1x_3231
  # DEBUG bm0y => bm0y_3227
  # DEBUG bm0x => bm0x_3230
  if (pass_3229 == 0)
    goto <bb 22>;
  else
    goto <bb 23>;

  <bb 22>:
  pretmp_3947 = visited[prephitmp_3960][prephitmp_3962][prephitmp_3964];
  pretmp_3949 = bm1y_159 & 7;
  goto <bb 25>;

  <bb 23>:
  pretmp_3955 = visited[prephitmp_3960][prephitmp_3962][prephitmp_3964];
  pretmp_3957 = (int) pretmp_3955;

  <bb 24>:
  # bcost_3015 = PHI <bcost_300(23), bcost_2783(17)>
  # bcostrd_3223 = PHI <bcostrd_313(23), bcostrd_3016(17)>
  # bm1y_2954 = PHI <bm1y_2261(23), bm1y_3228(17)>
  # prephitmp_3951 = PHI <prephitmp_3960(23), _187(17)>
  # prephitmp_3952 = PHI <prephitmp_3962(23), _188(17)>
  # prephitmp_3953 = PHI <prephitmp_3964(23), _189(17)>
  # prephitmp_3954 = PHI <prephitmp_3968(23), _192(17)>
  # prephitmp_3956 = PHI <pretmp_3955(23), _190(17)>
  # prephitmp_3958 = PHI <pretmp_3957(23), _191(17)>
  # DEBUG bcostrd => bcostrd_3223
  # DEBUG bcost => bcost_3015
  # DEBUG bm1y => bm1y_2954
  # DEBUG bm1x => bm1x_3231
  # DEBUG bm0y => bm0y_3227
  # DEBUG bm0x => bm0x_3230
  _256 = bm1y_159 & 7;
  _257 = prephitmp_3958 >> _256;
  _258 = _257 & 1;
  if (_258 == 0)
    goto <bb 25>;
  else
    goto <bb 30>;

  <bb 25>:
  # bcost_3225 = PHI <bcost_300(22), bcost_3015(24)>
  # bcostrd_3226 = PHI <bcostrd_313(22), bcostrd_3223(24)>
  # bm1y_2858 = PHI <bm1y_2261(22), bm1y_2954(24)>
  # prephitmp_3944 = PHI <prephitmp_3960(22), prephitmp_3951(24)>
  # prephitmp_3945 = PHI <prephitmp_3962(22), prephitmp_3952(24)>
  # prephitmp_3946 = PHI <prephitmp_3964(22), prephitmp_3953(24)>
  # prephitmp_3948 = PHI <pretmp_3947(22), prephitmp_3956(24)>
  # prephitmp_3950 = PHI <pretmp_3949(22), _256(24)>
  # prephitmp_4145 = PHI <prephitmp_3968(22), prephitmp_3954(24)>
  # DEBUG i0 => 4
  # DEBUG i1 => 3
  _263 = (signed char) prephitmp_3948;
  _265 = 1 << prephitmp_3950;
  _266 = (signed char) _265;
  _267 = _263 | _266;
  _268 = (unsigned char) _267;
  visited[prephitmp_3944][prephitmp_3945][prephitmp_3946] = _268;
  _269 = h_2(D)->mc.avg[_12];
  _270 = stride1[3];
  _271 = stride0[4];
  _269 (&pix, bw_19, src0$4_2816, _271, _161, _270, i_weight_5(D));
  _272 = h_2(D)->pixf.mbcmp[_12];
  _273 = m0_3(D)->p_fenc[0];
  _274 = _272 (_273, 16, &pix, bw_19);
  _275 = (long unsigned int) bm0x_3230;
  _276 = _275 * 2;
  _277 = p_cost_m0x_30 + _276;
  _278 = *_277;
  _279 = (int) _278;
  _280 = _274 + _279;
  _281 = (long unsigned int) bm0y_3227;
  _282 = _281 * 2;
  _283 = p_cost_m0y_37 + _282;
  _284 = *_283;
  _285 = (int) _284;
  _286 = _280 + _285;
  _287 = (long unsigned int) bm1x_3231;
  _288 = _287 * 2;
  _289 = p_cost_m1x_45 + _288;
  _290 = *_289;
  _291 = (int) _290;
  _292 = _286 + _291;
  _293 = (long unsigned int) bm1y_3228;
  _294 = _293 * 2;
  _295 = _294 + 18446744073709551614;
  _296 = p_cost_m1y_52 + _295;
  _297 = *_296;
  _298 = (int) _297;
  bcost_299 = _292 + _298;
  # DEBUG cost => bcost_299
  _301 = bcost_3225 * 17;
  _302 = _301 / 16;
  if (bcost_299 < _302)
    goto <bb 26>;
  else
    goto <bb 28>;

  <bb 26>:
  bcost_3328 = MIN_EXPR <bcost_299, bcost_3225>;
  # DEBUG bcost => bcost_3328
  # DEBUG a => bm0x_3230
  # DEBUG b => bm0y_3227
  _303 = bm0x_3230 & 65535;
  _304 = bm0y_3227 << 16;
  _305 = _303 + _304;
  _306 = (unsigned int) _305;
  # DEBUG a => NULL
  # DEBUG b => NULL
  MEM[(uint32_t *)cache0_mv2_16] = _306;
  MEM[(uint32_t *)cache0_mv_11] = _306;
  # DEBUG a => bm1x_3231
  # DEBUG b => bm1y_159
  _307 = bm1x_3231 & 65535;
  _308 = bm1y_159 << 16;
  _309 = _307 + _308;
  _310 = (unsigned int) _309;
  # DEBUG a => NULL
  # DEBUG b => NULL
  MEM[(uint32_t *)cache1_mv2_18] = _310;
  MEM[(uint32_t *)cache1_mv_17] = _310;
  _311 = m0_3(D)->i_pixel;
  bcostrd_312 = x264_rd_cost_part (h_2(D), i_lambda2_7(D), i8_6(D), _311);
  # DEBUG costrd => bcostrd_312
  if (bcostrd_312 < bcostrd_3226)
    goto <bb 28>;
  else
    goto <bb 27>;

  <bb 27>:

  <bb 28>:
  # bm1y_2263 = PHI <bm1y_159(26), bm1y_2858(25), bm1y_2858(27)>
  # bcost_363 = PHI <bcost_3328(26), bcost_3225(25), bcost_3328(27)>
  # bcostrd_376 = PHI <bcostrd_312(26), bcostrd_3226(25), bcostrd_3226(27)>
  # DEBUG bcostrd => bcostrd_376
  # DEBUG bcost => bcost_363
  # DEBUG bm1y => bm1y_2263
  # DEBUG bm1x => bm1x_3231
  # DEBUG bm0y => bm0y_3227
  # DEBUG bm0x => bm0x_3230
  if (pass_3229 == 0)
    goto <bb 29>;
  else
    goto <bb 30>;

  <bb 29>:
  pretmp_3934 = bm1x_134 & 7;
  pretmp_3936 = visited[prephitmp_3944][prephitmp_3945][pretmp_3934];
  pretmp_3938 = bm1y_3228 & 7;
  goto <bb 31>;

  <bb 30>:
  # bcost_3224 = PHI <bcost_363(28), bcost_3015(24)>
  # bcostrd_2947 = PHI <bcostrd_376(28), bcostrd_3223(24)>
  # bm1y_2890 = PHI <bm1y_2263(28), bm1y_2954(24)>
  # prephitmp_3940 = PHI <prephitmp_3944(28), prephitmp_3951(24)>
  # prephitmp_3941 = PHI <prephitmp_3945(28), prephitmp_3952(24)>
  # prephitmp_3942 = PHI <prephitmp_3946(28), prephitmp_3953(24)>
  # prephitmp_3943 = PHI <prephitmp_3950(28), _256(24)>
  # prephitmp_4144 = PHI <prephitmp_4145(28), prephitmp_3954(24)>
  # DEBUG bcostrd => bcostrd_2947
  # DEBUG bcost => bcost_3224
  # DEBUG bm1y => bm1y_2890
  # DEBUG bm1x => bm1x_3231
  # DEBUG bm0y => bm0y_3227
  # DEBUG bm0x => bm0x_3230
  _316 = bm1x_134 & 7;
  _317 = visited[prephitmp_3940][prephitmp_3941][_316];
  _318 = (int) _317;
  _319 = bm1y_3228 & 7;
  _320 = _318 >> _319;
  _321 = _320 & 1;
  if (_321 == 0)
    goto <bb 31>;
  else
    goto <bb 36>;

  <bb 31>:
  # bcost_2915 = PHI <bcost_363(29), bcost_3224(30)>
  # bcostrd_2851 = PHI <bcostrd_376(29), bcostrd_2947(30)>
  # bm1y_3158 = PHI <bm1y_2263(29), bm1y_2890(30)>
  # prephitmp_3932 = PHI <prephitmp_3944(29), prephitmp_3940(30)>
  # prephitmp_3933 = PHI <prephitmp_3945(29), prephitmp_3941(30)>
  # prephitmp_3935 = PHI <pretmp_3934(29), _316(30)>
  # prephitmp_3937 = PHI <pretmp_3936(29), _317(30)>
  # prephitmp_3939 = PHI <pretmp_3938(29), _319(30)>
  # prephitmp_4141 = PHI <prephitmp_3946(29), prephitmp_3942(30)>
  # prephitmp_4142 = PHI <prephitmp_3950(29), prephitmp_3943(30)>
  # prephitmp_4298 = PHI <prephitmp_4145(29), prephitmp_4144(30)>
  # DEBUG i0 => 4
  # DEBUG i1 => 7
  _326 = (signed char) prephitmp_3937;
  _328 = 1 << prephitmp_3939;
  _329 = (signed char) _328;
  _330 = _326 | _329;
  _331 = (unsigned char) _330;
  visited[prephitmp_3932][prephitmp_3933][prephitmp_3935] = _331;
  _332 = h_2(D)->mc.avg[_12];
  _333 = stride1[7];
  _334 = stride0[4];
  _332 (&pix, bw_19, src0$4_2816, _334, _137, _333, i_weight_5(D));
  _335 = h_2(D)->pixf.mbcmp[_12];
  _336 = m0_3(D)->p_fenc[0];
  _337 = _335 (_336, 16, &pix, bw_19);
  _338 = (long unsigned int) bm0x_3230;
  _339 = _338 * 2;
  _340 = p_cost_m0x_30 + _339;
  _341 = *_340;
  _342 = (int) _341;
  _343 = _337 + _342;
  _344 = (long unsigned int) bm0y_3227;
  _345 = _344 * 2;
  _346 = p_cost_m0y_37 + _345;
  _347 = *_346;
  _348 = (int) _347;
  _349 = _343 + _348;
  _350 = (sizetype) bm1x_3231;
  _351 = _350 + 1;
  _352 = _351 * 2;
  _353 = p_cost_m1x_45 + _352;
  _354 = *_353;
  _355 = (int) _354;
  _356 = _349 + _355;
  _357 = (long unsigned int) bm1y_3228;
  _358 = _357 * 2;
  _359 = p_cost_m1y_52 + _358;
  _360 = *_359;
  _361 = (int) _360;
  bcost_362 = _356 + _361;
  # DEBUG cost => bcost_362
  _364 = bcost_2915 * 17;
  _365 = _364 / 16;
  if (bcost_362 < _365)
    goto <bb 32>;
  else
    goto <bb 34>;

  <bb 32>:
  bcost_3327 = MIN_EXPR <bcost_362, bcost_2915>;
  # DEBUG bcost => bcost_3327
  # DEBUG a => bm0x_3230
  # DEBUG b => bm0y_3227
  _366 = bm0x_3230 & 65535;
  _367 = bm0y_3227 << 16;
  _368 = _366 + _367;
  _369 = (unsigned int) _368;
  # DEBUG a => NULL
  # DEBUG b => NULL
  MEM[(uint32_t *)cache0_mv2_16] = _369;
  MEM[(uint32_t *)cache0_mv_11] = _369;
  # DEBUG a => bm1x_134
  # DEBUG b => bm1y_3228
  _370 = bm1x_134 & 65535;
  _371 = bm1y_3228 << 16;
  _372 = _370 + _371;
  _373 = (unsigned int) _372;
  # DEBUG a => NULL
  # DEBUG b => NULL
  MEM[(uint32_t *)cache1_mv2_18] = _373;
  MEM[(uint32_t *)cache1_mv_17] = _373;
  _374 = m0_3(D)->i_pixel;
  bcostrd_375 = x264_rd_cost_part (h_2(D), i_lambda2_7(D), i8_6(D), _374);
  # DEBUG costrd => bcostrd_375
  if (bcostrd_375 < bcostrd_2851)
    goto <bb 34>;
  else
    goto <bb 33>;

  <bb 33>:

  <bb 34>:
  # bm1x_2265 = PHI <bm1x_134(32), bm1x_3231(31), bm1x_3231(33)>
  # bm1y_2266 = PHI <bm1y_3228(32), bm1y_3158(31), bm1y_3158(33)>
  # bcost_426 = PHI <bcost_3327(32), bcost_2915(31), bcost_3327(33)>
  # bcostrd_439 = PHI <bcostrd_375(32), bcostrd_2851(31), bcostrd_2851(33)>
  # DEBUG bcostrd => bcostrd_439
  # DEBUG bcost => bcost_426
  # DEBUG bm1y => bm1y_2266
  # DEBUG bm1x => bm1x_2265
  # DEBUG bm0y => bm0y_3227
  # DEBUG bm0x => bm0x_3230
  if (pass_3229 == 0)
    goto <bb 35>;
  else
    goto <bb 36>;

  <bb 35>:
  pretmp_3924 = bm1x_143 & 7;
  pretmp_3926 = visited[prephitmp_3932][prephitmp_3933][pretmp_3924];
  goto <bb 37>;

  <bb 36>:
  # bcost_2883 = PHI <bcost_426(34), bcost_3224(30)>
  # bcostrd_3218 = PHI <bcostrd_439(34), bcostrd_2947(30)>
  # bm1x_3155 = PHI <bm1x_2265(34), bm1x_3231(30)>
  # bm1y_3156 = PHI <bm1y_2266(34), bm1y_2890(30)>
  # prephitmp_3928 = PHI <prephitmp_3932(34), prephitmp_3940(30)>
  # prephitmp_3929 = PHI <prephitmp_3933(34), prephitmp_3941(30)>
  # prephitmp_3930 = PHI <prephitmp_3935(34), _316(30)>
  # prephitmp_3931 = PHI <prephitmp_3939(34), _319(30)>
  # prephitmp_4138 = PHI <prephitmp_4141(34), prephitmp_3942(30)>
  # prephitmp_4140 = PHI <prephitmp_4142(34), prephitmp_3943(30)>
  # prephitmp_4297 = PHI <prephitmp_4298(34), prephitmp_4144(30)>
  # DEBUG bcostrd => bcostrd_3218
  # DEBUG bcost => bcost_2883
  # DEBUG bm1y => bm1y_3156
  # DEBUG bm1x => bm1x_3155
  # DEBUG bm0y => bm0y_3227
  # DEBUG bm0x => bm0x_3230
  _379 = bm1x_143 & 7;
  _380 = visited[prephitmp_3928][prephitmp_3929][_379];
  _381 = (int) _380;
  _383 = _381 >> prephitmp_3931;
  _384 = _383 & 1;
  if (_384 == 0)
    goto <bb 37>;
  else
    goto <bb 42>;

  <bb 37>:
  # bcost_3221 = PHI <bcost_426(35), bcost_2883(36)>
  # bcostrd_3222 = PHI <bcostrd_439(35), bcostrd_3218(36)>
  # bm1x_3159 = PHI <bm1x_2265(35), bm1x_3155(36)>
  # bm1y_3157 = PHI <bm1y_2266(35), bm1y_3156(36)>
  # prephitmp_3921 = PHI <prephitmp_3932(35), prephitmp_3928(36)>
  # prephitmp_3922 = PHI <prephitmp_3933(35), prephitmp_3929(36)>
  # prephitmp_3923 = PHI <prephitmp_3939(35), prephitmp_3931(36)>
  # prephitmp_3925 = PHI <pretmp_3924(35), _379(36)>
  # prephitmp_3927 = PHI <pretmp_3926(35), _380(36)>
  # prephitmp_4136 = PHI <prephitmp_3935(35), prephitmp_3930(36)>
  # prephitmp_4294 = PHI <prephitmp_4141(35), prephitmp_4138(36)>
  # prephitmp_4295 = PHI <prephitmp_4142(35), prephitmp_4140(36)>
  # prephitmp_4406 = PHI <prephitmp_4298(35), prephitmp_4297(36)>
  # DEBUG i0 => 4
  # DEBUG i1 => 1
  _389 = (signed char) prephitmp_3927;
  _391 = 1 << prephitmp_3923;
  _392 = (signed char) _391;
  _393 = _389 | _392;
  _394 = (unsigned char) _393;
  visited[prephitmp_3921][prephitmp_3922][prephitmp_3925] = _394;
  _395 = h_2(D)->mc.avg[_12];
  _396 = stride1[1];
  _397 = stride0[4];
  _395 (&pix, bw_19, src0$4_2816, _397, _145, _396, i_weight_5(D));
  _398 = h_2(D)->pixf.mbcmp[_12];
  _399 = m0_3(D)->p_fenc[0];
  _400 = _398 (_399, 16, &pix, bw_19);
  _401 = (long unsigned int) bm0x_3230;
  _402 = _401 * 2;
  _403 = p_cost_m0x_30 + _402;
  _404 = *_403;
  _405 = (int) _404;
  _406 = _400 + _405;
  _407 = (long unsigned int) bm0y_3227;
  _408 = _407 * 2;
  _409 = p_cost_m0y_37 + _408;
  _410 = *_409;
  _411 = (int) _410;
  _412 = _406 + _411;
  _413 = (long unsigned int) bm1x_3231;
  _414 = _413 * 2;
  _415 = _414 + 18446744073709551614;
  _416 = p_cost_m1x_45 + _415;
  _417 = *_416;
  _418 = (int) _417;
  _419 = _412 + _418;
  _420 = (long unsigned int) bm1y_3228;
  _421 = _420 * 2;
  _422 = p_cost_m1y_52 + _421;
  _423 = *_422;
  _424 = (int) _423;
  bcost_425 = _419 + _424;
  # DEBUG cost => bcost_425
  _427 = bcost_3221 * 17;
  _428 = _427 / 16;
  if (bcost_425 < _428)
    goto <bb 38>;
  else
    goto <bb 40>;

  <bb 38>:
  bcost_3330 = MIN_EXPR <bcost_425, bcost_3221>;
  # DEBUG bcost => bcost_3330
  # DEBUG a => bm0x_3230
  # DEBUG b => bm0y_3227
  _429 = bm0x_3230 & 65535;
  _430 = bm0y_3227 << 16;
  _431 = _429 + _430;
  _432 = (unsigned int) _431;
  # DEBUG a => NULL
  # DEBUG b => NULL
  MEM[(uint32_t *)cache0_mv2_16] = _432;
  MEM[(uint32_t *)cache0_mv_11] = _432;
  # DEBUG a => bm1x_143
  # DEBUG b => bm1y_3228
  _433 = bm1x_143 & 65535;
  _434 = bm1y_3228 << 16;
  _435 = _433 + _434;
  _436 = (unsigned int) _435;
  # DEBUG a => NULL
  # DEBUG b => NULL
  MEM[(uint32_t *)cache1_mv2_18] = _436;
  MEM[(uint32_t *)cache1_mv_17] = _436;
  _437 = m0_3(D)->i_pixel;
  bcostrd_438 = x264_rd_cost_part (h_2(D), i_lambda2_7(D), i8_6(D), _437);
  # DEBUG costrd => bcostrd_438
  if (bcostrd_438 < bcostrd_3222)
    goto <bb 40>;
  else
    goto <bb 39>;

  <bb 39>:

  <bb 40>:
  # bm1x_2268 = PHI <bm1x_143(38), bm1x_3159(37), bm1x_3159(39)>
  # bm1y_2269 = PHI <bm1y_3228(38), bm1y_3157(37), bm1y_3157(39)>
  # bcost_490 = PHI <bcost_3330(38), bcost_3221(37), bcost_3330(39)>
  # bcostrd_503 = PHI <bcostrd_438(38), bcostrd_3222(37), bcostrd_3222(39)>
  # DEBUG bcostrd => bcostrd_503
  # DEBUG bcost => bcost_490
  # DEBUG bm1y => bm1y_2269
  # DEBUG bm1x => bm1x_2268
  # DEBUG bm0y => bm0y_3227
  # DEBUG bm0x => bm0x_3230
  if (pass_3229 == 0)
    goto <bb 41>;
  else
    goto <bb 42>;

  <bb 41>:
  pretmp_3913 = bm0y_147 & 7;
  pretmp_3915 = visited[prephitmp_3921][pretmp_3913][prephitmp_4294];
  goto <bb 43>;

  <bb 42>:
  # bcost_3220 = PHI <bcost_490(40), bcost_2883(36)>
  # bcostrd_2784 = PHI <bcostrd_503(40), bcostrd_3218(36)>
  # bm1x_2824 = PHI <bm1x_2268(40), bm1x_3155(36)>
  # bm1y_3032 = PHI <bm1y_2269(40), bm1y_3156(36)>
  # prephitmp_3917 = PHI <prephitmp_3921(40), prephitmp_3928(36)>
  # prephitmp_3918 = PHI <prephitmp_3922(40), prephitmp_3929(36)>
  # prephitmp_3919 = PHI <prephitmp_3923(40), prephitmp_3931(36)>
  # prephitmp_3920 = PHI <prephitmp_3925(40), _379(36)>
  # prephitmp_4135 = PHI <prephitmp_4136(40), prephitmp_3930(36)>
  # prephitmp_4291 = PHI <prephitmp_4294(40), prephitmp_4138(36)>
  # prephitmp_4293 = PHI <prephitmp_4295(40), prephitmp_4140(36)>
  # prephitmp_4405 = PHI <prephitmp_4406(40), prephitmp_4297(36)>
  # DEBUG bcostrd => bcostrd_2784
  # DEBUG bcost => bcost_3220
  # DEBUG bm1y => bm1y_3032
  # DEBUG bm1x => bm1x_2824
  # DEBUG bm0y => bm0y_3227
  # DEBUG bm0x => bm0x_3230
  _441 = bm0y_147 & 7;
  _443 = visited[prephitmp_3917][_441][prephitmp_4291];
  _444 = (int) _443;
  _446 = _444 >> prephitmp_3919;
  _447 = _446 & 1;
  if (_447 == 0)
    goto <bb 43>;
  else
    goto <bb 48>;

  <bb 43>:
  # bcost_2817 = PHI <bcost_490(41), bcost_3220(42)>
  # bcostrd_3018 = PHI <bcostrd_503(41), bcostrd_2784(42)>
  # bm1x_2791 = PHI <bm1x_2268(41), bm1x_2824(42)>
  # bm1y_3031 = PHI <bm1y_2269(41), bm1y_3032(42)>
  # prephitmp_3909 = PHI <prephitmp_3921(41), prephitmp_3917(42)>
  # prephitmp_3911 = PHI <prephitmp_4294(41), prephitmp_4291(42)>
  # prephitmp_3912 = PHI <prephitmp_3923(41), prephitmp_3919(42)>
  # prephitmp_3914 = PHI <pretmp_3913(41), _441(42)>
  # prephitmp_3916 = PHI <pretmp_3915(41), _443(42)>
  # prephitmp_4132 = PHI <prephitmp_3922(41), prephitmp_3918(42)>
  # prephitmp_4133 = PHI <prephitmp_3925(41), prephitmp_3920(42)>
  # prephitmp_4289 = PHI <prephitmp_4136(41), prephitmp_4135(42)>
  # prephitmp_4403 = PHI <prephitmp_4295(41), prephitmp_4293(42)>
  # prephitmp_4496 = PHI <prephitmp_4406(41), prephitmp_4405(42)>
  # DEBUG i0 => 5
  # DEBUG i1 => 4
  _452 = (signed char) prephitmp_3916;
  _454 = 1 << prephitmp_3912;
  _455 = (signed char) _454;
  _456 = _452 | _455;
  _457 = (unsigned char) _456;
  visited[prephitmp_3909][prephitmp_3914][prephitmp_3911] = _457;
  _458 = h_2(D)->mc.avg[_12];
  _459 = stride1[4];
  _460 = stride0[5];
  _458 (&pix, bw_19, _149, _460, src1$4_3219, _459, i_weight_5(D));
  _462 = h_2(D)->pixf.mbcmp[_12];
  _463 = m0_3(D)->p_fenc[0];
  _464 = _462 (_463, 16, &pix, bw_19);
  _465 = (long unsigned int) bm0x_3230;
  _466 = _465 * 2;
  _467 = p_cost_m0x_30 + _466;
  _468 = *_467;
  _469 = (int) _468;
  _470 = _464 + _469;
  _471 = (sizetype) bm0y_3227;
  _472 = _471 + 1;
  _473 = _472 * 2;
  _474 = p_cost_m0y_37 + _473;
  _475 = *_474;
  _476 = (int) _475;
  _477 = _470 + _476;
  _478 = (long unsigned int) bm1x_3231;
  _479 = _478 * 2;
  _480 = p_cost_m1x_45 + _479;
  _481 = *_480;
  _482 = (int) _481;
  _483 = _477 + _482;
  _484 = (long unsigned int) bm1y_3228;
  _485 = _484 * 2;
  _486 = p_cost_m1y_52 + _485;
  _487 = *_486;
  _488 = (int) _487;
  bcost_489 = _483 + _488;
  # DEBUG cost => bcost_489
  _491 = bcost_2817 * 17;
  _492 = _491 / 16;
  if (bcost_489 < _492)
    goto <bb 44>;
  else
    goto <bb 46>;

  <bb 44>:
  bcost_3329 = MIN_EXPR <bcost_489, bcost_2817>;
  # DEBUG bcost => bcost_3329
  # DEBUG a => bm0x_3230
  # DEBUG b => bm0y_147
  _493 = bm0x_3230 & 65535;
  _494 = bm0y_147 << 16;
  _495 = _493 + _494;
  _496 = (unsigned int) _495;
  # DEBUG a => NULL
  # DEBUG b => NULL
  MEM[(uint32_t *)cache0_mv2_16] = _496;
  MEM[(uint32_t *)cache0_mv_11] = _496;
  # DEBUG a => bm1x_3231
  # DEBUG b => bm1y_3228
  _497 = bm1x_3231 & 65535;
  _498 = bm1y_3228 << 16;
  _499 = _497 + _498;
  _500 = (unsigned int) _499;
  # DEBUG a => NULL
  # DEBUG b => NULL
  MEM[(uint32_t *)cache1_mv2_18] = _500;
  MEM[(uint32_t *)cache1_mv_17] = _500;
  _501 = m0_3(D)->i_pixel;
  bcostrd_502 = x264_rd_cost_part (h_2(D), i_lambda2_7(D), i8_6(D), _501);
  # DEBUG costrd => bcostrd_502
  if (bcostrd_502 < bcostrd_3018)
    goto <bb 46>;
  else
    goto <bb 45>;

  <bb 45>:

  <bb 46>:
  # bm0y_2271 = PHI <bm0y_147(44), bm0y_3227(43), bm0y_3227(45)>
  # bm1x_2272 = PHI <bm1x_3231(44), bm1x_2791(43), bm1x_2791(45)>
  # bm1y_2273 = PHI <bm1y_3228(44), bm1y_3031(43), bm1y_3031(45)>
  # bcost_553 = PHI <bcost_3329(44), bcost_2817(43), bcost_3329(45)>
  # bcostrd_566 = PHI <bcostrd_502(44), bcostrd_3018(43), bcostrd_3018(45)>
  # DEBUG bcostrd => bcostrd_566
  # DEBUG bcost => bcost_553
  # DEBUG bm1y => bm1y_2273
  # DEBUG bm1x => bm1x_2272
  # DEBUG bm0y => bm0y_2271
  # DEBUG bm0x => bm0x_3230
  if (pass_3229 == 0)
    goto <bb 47>;
  else
    goto <bb 48>;

  <bb 47>:
  pretmp_3901 = bm0y_155 & 7;
  pretmp_3903 = visited[prephitmp_3909][pretmp_3901][prephitmp_3911];
  goto <bb 49>;

  <bb 48>:
  # bcost_3017 = PHI <bcost_553(46), bcost_3220(42)>
  # bcostrd_3214 = PHI <bcostrd_566(46), bcostrd_2784(42)>
  # bm0y_3153 = PHI <bm0y_2271(46), bm0y_3227(42)>
  # bm1x_3154 = PHI <bm1x_2272(46), bm1x_2824(42)>
  # bm1y_2923 = PHI <bm1y_2273(46), bm1y_3032(42)>
  # prephitmp_3905 = PHI <prephitmp_3909(46), prephitmp_3917(42)>
  # prephitmp_3906 = PHI <prephitmp_3911(46), prephitmp_4291(42)>
  # prephitmp_3907 = PHI <prephitmp_3912(46), prephitmp_3919(42)>
  # prephitmp_3908 = PHI <prephitmp_3914(46), _441(42)>
  # prephitmp_4129 = PHI <prephitmp_4132(46), prephitmp_3918(42)>
  # prephitmp_4131 = PHI <prephitmp_4133(46), prephitmp_3920(42)>
  # prephitmp_4288 = PHI <prephitmp_4289(46), prephitmp_4135(42)>
  # prephitmp_4402 = PHI <prephitmp_4403(46), prephitmp_4293(42)>
  # prephitmp_4495 = PHI <prephitmp_4496(46), prephitmp_4405(42)>
  # DEBUG bcostrd => bcostrd_3214
  # DEBUG bcost => bcost_3017
  # DEBUG bm1y => bm1y_2923
  # DEBUG bm1x => bm1x_3154
  # DEBUG bm0y => bm0y_3153
  # DEBUG bm0x => bm0x_3230
  _505 = bm0y_155 & 7;
  _507 = visited[prephitmp_3905][_505][prephitmp_3906];
  _508 = (int) _507;
  _510 = _508 >> prephitmp_3907;
  _511 = _510 & 1;
  if (_511 == 0)
    goto <bb 49>;
  else
    goto <bb 54>;

  <bb 49>:
  # bcost_3216 = PHI <bcost_553(47), bcost_3017(48)>
  # bcostrd_3217 = PHI <bcostrd_566(47), bcostrd_3214(48)>
  # bm0y_3151 = PHI <bm0y_2271(47), bm0y_3153(48)>
  # bm1x_3152 = PHI <bm1x_2272(47), bm1x_3154(48)>
  # bm1y_2955 = PHI <bm1y_2273(47), bm1y_2923(48)>
  # prephitmp_3898 = PHI <prephitmp_3909(47), prephitmp_3905(48)>
  # prephitmp_3899 = PHI <prephitmp_3911(47), prephitmp_3906(48)>
  # prephitmp_3900 = PHI <prephitmp_3912(47), prephitmp_3907(48)>
  # prephitmp_3902 = PHI <pretmp_3901(47), _505(48)>
  # prephitmp_3904 = PHI <pretmp_3903(47), _507(48)>
  # prephitmp_4127 = PHI <prephitmp_3914(47), prephitmp_3908(48)>
  # prephitmp_4285 = PHI <prephitmp_4132(47), prephitmp_4129(48)>
  # prephitmp_4286 = PHI <prephitmp_4133(47), prephitmp_4131(48)>
  # prephitmp_4400 = PHI <prephitmp_4289(47), prephitmp_4288(48)>
  # prephitmp_4493 = PHI <prephitmp_4403(47), prephitmp_4402(48)>
  # prephitmp_4550 = PHI <prephitmp_4496(47), prephitmp_4495(48)>
  # DEBUG i0 => 3
  # DEBUG i1 => 4
  _516 = (signed char) prephitmp_3904;
  _518 = 1 << prephitmp_3900;
  _519 = (signed char) _518;
  _520 = _516 | _519;
  _521 = (unsigned char) _520;
  visited[prephitmp_3898][prephitmp_3902][prephitmp_3899] = _521;
  _522 = h_2(D)->mc.avg[_12];
  _523 = stride1[4];
  _524 = stride0[3];
  _522 (&pix, bw_19, _157, _524, src1$4_3219, _523, i_weight_5(D));
  _525 = h_2(D)->pixf.mbcmp[_12];
  _526 = m0_3(D)->p_fenc[0];
  _527 = _525 (_526, 16, &pix, bw_19);
  _528 = (long unsigned int) bm0x_3230;
  _529 = _528 * 2;
  _530 = p_cost_m0x_30 + _529;
  _531 = *_530;
  _532 = (int) _531;
  _533 = _527 + _532;
  _534 = (long unsigned int) bm0y_3227;
  _535 = _534 * 2;
  _536 = _535 + 18446744073709551614;
  _537 = p_cost_m0y_37 + _536;
  _538 = *_537;
  _539 = (int) _538;
  _540 = _533 + _539;
  _541 = (long unsigned int) bm1x_3231;
  _542 = _541 * 2;
  _543 = p_cost_m1x_45 + _542;
  _544 = *_543;
  _545 = (int) _544;
  _546 = _540 + _545;
  _547 = (long unsigned int) bm1y_3228;
  _548 = _547 * 2;
  _549 = p_cost_m1y_52 + _548;
  _550 = *_549;
  _551 = (int) _550;
  bcost_552 = _546 + _551;
  # DEBUG cost => bcost_552
  _554 = bcost_3216 * 17;
  _555 = _554 / 16;
  if (bcost_552 < _555)
    goto <bb 50>;
  else
    goto <bb 52>;

  <bb 50>:
  bcost_2871 = MIN_EXPR <bcost_552, bcost_3216>;
  # DEBUG bcost => bcost_2871
  # DEBUG a => bm0x_3230
  # DEBUG b => bm0y_155
  _556 = bm0x_3230 & 65535;
  _557 = bm0y_155 << 16;
  _558 = _556 + _557;
  _559 = (unsigned int) _558;
  # DEBUG a => NULL
  # DEBUG b => NULL
  MEM[(uint32_t *)cache0_mv2_16] = _559;
  MEM[(uint32_t *)cache0_mv_11] = _559;
  # DEBUG a => bm1x_3231
  # DEBUG b => bm1y_3228
  _560 = bm1x_3231 & 65535;
  _561 = bm1y_3228 << 16;
  _562 = _560 + _561;
  _563 = (unsigned int) _562;
  # DEBUG a => NULL
  # DEBUG b => NULL
  MEM[(uint32_t *)cache1_mv2_18] = _563;
  MEM[(uint32_t *)cache1_mv_17] = _563;
  _564 = m0_3(D)->i_pixel;
  bcostrd_565 = x264_rd_cost_part (h_2(D), i_lambda2_7(D), i8_6(D), _564);
  # DEBUG costrd => bcostrd_565
  if (bcostrd_565 < bcostrd_3217)
    goto <bb 52>;
  else
    goto <bb 51>;

  <bb 51>:

  <bb 52>:
  # bm0y_2275 = PHI <bm0y_155(50), bm0y_3151(49), bm0y_3151(51)>
  # bm1x_2276 = PHI <bm1x_3231(50), bm1x_3152(49), bm1x_3152(51)>
  # bm1y_2277 = PHI <bm1y_3228(50), bm1y_2955(49), bm1y_2955(51)>
  # bcost_616 = PHI <bcost_2871(50), bcost_3216(49), bcost_2871(51)>
  # bcostrd_629 = PHI <bcostrd_565(50), bcostrd_3217(49), bcostrd_3217(51)>
  # DEBUG bcostrd => bcostrd_629
  # DEBUG bcost => bcost_616
  # DEBUG bm1y => bm1y_2277
  # DEBUG bm1x => bm1x_2276
  # DEBUG bm0y => bm0y_2275
  # DEBUG bm0x => bm0x_3230
  if (pass_3229 == 0)
    goto <bb 53>;
  else
    goto <bb 54>;

  <bb 53>:
  pretmp_3890 = bm0x_128 & 7;
  pretmp_3892 = visited[pretmp_3890][prephitmp_4285][prephitmp_3899];
  goto <bb 55>;

  <bb 54>:
  # bcost_3215 = PHI <bcost_616(52), bcost_3017(48)>
  # bcostrd_2948 = PHI <bcostrd_629(52), bcostrd_3214(48)>
  # bm0y_2859 = PHI <bm0y_2275(52), bm0y_3153(48)>
  # bm1x_3149 = PHI <bm1x_2276(52), bm1x_3154(48)>
  # bm1y_3150 = PHI <bm1y_2277(52), bm1y_2923(48)>
  # prephitmp_3894 = PHI <prephitmp_3898(52), prephitmp_3905(48)>
  # prephitmp_3895 = PHI <prephitmp_3899(52), prephitmp_3906(48)>
  # prephitmp_3896 = PHI <prephitmp_3900(52), prephitmp_3907(48)>
  # prephitmp_3897 = PHI <prephitmp_3902(52), _505(48)>
  # prephitmp_4126 = PHI <prephitmp_4127(52), prephitmp_3908(48)>
  # prephitmp_4282 = PHI <prephitmp_4285(52), prephitmp_4129(48)>
  # prephitmp_4284 = PHI <prephitmp_4286(52), prephitmp_4131(48)>
  # prephitmp_4399 = PHI <prephitmp_4400(52), prephitmp_4288(48)>
  # prephitmp_4492 = PHI <prephitmp_4493(52), prephitmp_4402(48)>
  # prephitmp_4549 = PHI <prephitmp_4550(52), prephitmp_4495(48)>
  # DEBUG bcostrd => bcostrd_2948
  # DEBUG bcost => bcost_3215
  # DEBUG bm1y => bm1y_3150
  # DEBUG bm1x => bm1x_3149
  # DEBUG bm0y => bm0y_2859
  # DEBUG bm0x => bm0x_3230
  _567 = bm0x_128 & 7;
  _570 = visited[_567][prephitmp_4282][prephitmp_3895];
  _571 = (int) _570;
  _573 = _571 >> prephitmp_3896;
  _574 = _573 & 1;
  if (_574 == 0)
    goto <bb 55>;
  else
    goto <bb 60>;

  <bb 55>:
  # bcost_2916 = PHI <bcost_616(53), bcost_3215(54)>
  # bcostrd_2852 = PHI <bcostrd_629(53), bcostrd_2948(54)>
  # bm0y_2891 = PHI <bm0y_2275(53), bm0y_2859(54)>
  # bm1x_3146 = PHI <bm1x_2276(53), bm1x_3149(54)>
  # bm1y_3147 = PHI <bm1y_2277(53), bm1y_3150(54)>
  # prephitmp_3887 = PHI <prephitmp_4285(53), prephitmp_4282(54)>
  # prephitmp_3888 = PHI <prephitmp_3899(53), prephitmp_3895(54)>
  # prephitmp_3889 = PHI <prephitmp_3900(53), prephitmp_3896(54)>
  # prephitmp_3891 = PHI <pretmp_3890(53), _567(54)>
  # prephitmp_3893 = PHI <pretmp_3892(53), _570(54)>
  # prephitmp_4123 = PHI <prephitmp_3898(53), prephitmp_3894(54)>
  # prephitmp_4124 = PHI <prephitmp_3902(53), prephitmp_3897(54)>
  # prephitmp_4280 = PHI <prephitmp_4127(53), prephitmp_4126(54)>
  # prephitmp_4397 = PHI <prephitmp_4286(53), prephitmp_4284(54)>
  # prephitmp_4490 = PHI <prephitmp_4400(53), prephitmp_4399(54)>
  # prephitmp_4547 = PHI <prephitmp_4493(53), prephitmp_4492(54)>
  # prephitmp_4580 = PHI <prephitmp_4550(53), prephitmp_4549(54)>
  # DEBUG i0 => 7
  # DEBUG i1 => 4
  _579 = (signed char) prephitmp_3893;
  _581 = 1 << prephitmp_3889;
  _582 = (signed char) _581;
  _583 = _579 | _582;
  _584 = (unsigned char) _583;
  visited[prephitmp_3891][prephitmp_3887][prephitmp_3888] = _584;
  _585 = h_2(D)->mc.avg[_12];
  _586 = stride1[4];
  _587 = stride0[7];
  _585 (&pix, bw_19, _131, _587, src1$4_3219, _586, i_weight_5(D));
  _588 = h_2(D)->pixf.mbcmp[_12];
  _589 = m0_3(D)->p_fenc[0];
  _590 = _588 (_589, 16, &pix, bw_19);
  _591 = (sizetype) bm0x_3230;
  _592 = _591 + 1;
  _593 = _592 * 2;
  _594 = p_cost_m0x_30 + _593;
  _595 = *_594;
  _596 = (int) _595;
  _597 = _590 + _596;
  _598 = (long unsigned int) bm0y_3227;
  _599 = _598 * 2;
  _600 = p_cost_m0y_37 + _599;
  _601 = *_600;
  _602 = (int) _601;
  _603 = _597 + _602;
  _604 = (long unsigned int) bm1x_3231;
  _605 = _604 * 2;
  _606 = p_cost_m1x_45 + _605;
  _607 = *_606;
  _608 = (int) _607;
  _609 = _603 + _608;
  _610 = (long unsigned int) bm1y_3228;
  _611 = _610 * 2;
  _612 = p_cost_m1y_52 + _611;
  _613 = *_612;
  _614 = (int) _613;
  bcost_615 = _609 + _614;
  # DEBUG cost => bcost_615
  _617 = bcost_2916 * 17;
  _618 = _617 / 16;
  if (bcost_615 < _618)
    goto <bb 56>;
  else
    goto <bb 58>;

  <bb 56>:
  bcost_2839 = MIN_EXPR <bcost_615, bcost_2916>;
  # DEBUG bcost => bcost_2839
  # DEBUG a => bm0x_128
  # DEBUG b => bm0y_3227
  _619 = bm0x_128 & 65535;
  _620 = bm0y_3227 << 16;
  _621 = _619 + _620;
  _622 = (unsigned int) _621;
  # DEBUG a => NULL
  # DEBUG b => NULL
  MEM[(uint32_t *)cache0_mv2_16] = _622;
  MEM[(uint32_t *)cache0_mv_11] = _622;
  # DEBUG a => bm1x_3231
  # DEBUG b => bm1y_3228
  _623 = bm1x_3231 & 65535;
  _624 = bm1y_3228 << 16;
  _625 = _623 + _624;
  _626 = (unsigned int) _625;
  # DEBUG a => NULL
  # DEBUG b => NULL
  MEM[(uint32_t *)cache1_mv2_18] = _626;
  MEM[(uint32_t *)cache1_mv_17] = _626;
  _627 = m0_3(D)->i_pixel;
  bcostrd_628 = x264_rd_cost_part (h_2(D), i_lambda2_7(D), i8_6(D), _627);
  # DEBUG costrd => bcostrd_628
  if (bcostrd_628 < bcostrd_2852)
    goto <bb 58>;
  else
    goto <bb 57>;

  <bb 57>:

  <bb 58>:
  # bm0x_2279 = PHI <bm0x_128(56), bm0x_3230(55), bm0x_3230(57)>
  # bm0y_2280 = PHI <bm0y_3227(56), bm0y_2891(55), bm0y_2891(57)>
  # bm1x_2281 = PHI <bm1x_3231(56), bm1x_3146(55), bm1x_3146(57)>
  # bm1y_2282 = PHI <bm1y_3228(56), bm1y_3147(55), bm1y_3147(57)>
  # bcost_679 = PHI <bcost_2839(56), bcost_2916(55), bcost_2839(57)>
  # bcostrd_692 = PHI <bcostrd_628(56), bcostrd_2852(55), bcostrd_2852(57)>
  # DEBUG bcostrd => bcostrd_692
  # DEBUG bcost => bcost_679
  # DEBUG bm1y => bm1y_2282
  # DEBUG bm1x => bm1x_2281
  # DEBUG bm0y => bm0y_2280
  # DEBUG bm0x => bm0x_2279
  if (pass_3229 == 0)
    goto <bb 59>;
  else
    goto <bb 60>;

  <bb 59>:
  pretmp_3878 = bm0x_139 & 7;
  pretmp_3880 = visited[pretmp_3878][prephitmp_3887][prephitmp_3888];
  goto <bb 61>;

  <bb 60>:
  # bcost_2884 = PHI <bcost_679(58), bcost_3215(54)>
  # bcostrd_3209 = PHI <bcostrd_692(58), bcostrd_2948(54)>
  # bm0x_3148 = PHI <bm0x_2279(58), bm0x_3230(54)>
  # bm0y_2792 = PHI <bm0y_2280(58), bm0y_2859(54)>
  # bm1x_3033 = PHI <bm1x_2281(58), bm1x_3149(54)>
  # bm1y_3142 = PHI <bm1y_2282(58), bm1y_3150(54)>
  # prephitmp_3882 = PHI <prephitmp_3887(58), prephitmp_4282(54)>
  # prephitmp_3883 = PHI <prephitmp_3888(58), prephitmp_3895(54)>
  # prephitmp_3884 = PHI <prephitmp_3889(58), prephitmp_3896(54)>
  # prephitmp_3885 = PHI <prephitmp_3891(58), _567(54)>
  # prephitmp_4120 = PHI <prephitmp_4123(58), prephitmp_3894(54)>
  # prephitmp_4122 = PHI <prephitmp_4124(58), prephitmp_3897(54)>
  # prephitmp_4279 = PHI <prephitmp_4280(58), prephitmp_4126(54)>
  # prephitmp_4396 = PHI <prephitmp_4397(58), prephitmp_4284(54)>
  # prephitmp_4489 = PHI <prephitmp_4490(58), prephitmp_4399(54)>
  # prephitmp_4546 = PHI <prephitmp_4547(58), prephitmp_4492(54)>
  # prephitmp_4579 = PHI <prephitmp_4580(58), prephitmp_4549(54)>
  # DEBUG bcostrd => bcostrd_3209
  # DEBUG bcost => bcost_2884
  # DEBUG bm1y => bm1y_3142
  # DEBUG bm1x => bm1x_3033
  # DEBUG bm0y => bm0y_2792
  # DEBUG bm0x => bm0x_3148
  _630 = bm0x_139 & 7;
  _633 = visited[_630][prephitmp_3882][prephitmp_3883];
  _634 = (int) _633;
  _636 = _634 >> prephitmp_3884;
  _637 = _636 & 1;
  if (_637 == 0)
    goto <bb 61>;
  else
    goto <bb 66>;

  <bb 61>:
  # bcost_3212 = PHI <bcost_679(59), bcost_2884(60)>
  # bcostrd_3213 = PHI <bcostrd_692(59), bcostrd_3209(60)>
  # bm0x_2825 = PHI <bm0x_2279(59), bm0x_3148(60)>
  # bm0y_3034 = PHI <bm0y_2280(59), bm0y_2792(60)>
  # bm1x_3144 = PHI <bm1x_2281(59), bm1x_3033(60)>
  # bm1y_3145 = PHI <bm1y_2282(59), bm1y_3142(60)>
  # prephitmp_3875 = PHI <prephitmp_3887(59), prephitmp_3882(60)>
  # prephitmp_3876 = PHI <prephitmp_3888(59), prephitmp_3883(60)>
  # prephitmp_3877 = PHI <prephitmp_3889(59), prephitmp_3884(60)>
  # prephitmp_3879 = PHI <pretmp_3878(59), _630(60)>
  # prephitmp_3881 = PHI <pretmp_3880(59), _633(60)>
  # prephitmp_4118 = PHI <prephitmp_3891(59), prephitmp_3885(60)>
  # prephitmp_4276 = PHI <prephitmp_4123(59), prephitmp_4120(60)>
  # prephitmp_4277 = PHI <prephitmp_4124(59), prephitmp_4122(60)>
  # prephitmp_4394 = PHI <prephitmp_4280(59), prephitmp_4279(60)>
  # prephitmp_4487 = PHI <prephitmp_4397(59), prephitmp_4396(60)>
  # prephitmp_4544 = PHI <prephitmp_4490(59), prephitmp_4489(60)>
  # prephitmp_4577 = PHI <prephitmp_4547(59), prephitmp_4546(60)>
  # prephitmp_4598 = PHI <prephitmp_4580(59), prephitmp_4579(60)>
  # DEBUG i0 => 1
  # DEBUG i1 => 4
  _642 = (signed char) prephitmp_3881;
  _644 = 1 << prephitmp_3877;
  _645 = (signed char) _644;
  _646 = _642 | _645;
  _647 = (unsigned char) _646;
  visited[prephitmp_3879][prephitmp_3875][prephitmp_3876] = _647;
  _648 = h_2(D)->mc.avg[_12];
  _649 = stride1[4];
  _650 = stride0[1];
  _648 (&pix, bw_19, _141, _650, src1$4_3219, _649, i_weight_5(D));
  _651 = h_2(D)->pixf.mbcmp[_12];
  _652 = m0_3(D)->p_fenc[0];
  _653 = _651 (_652, 16, &pix, bw_19);
  _654 = (long unsigned int) bm0x_3230;
  _655 = _654 * 2;
  _656 = _655 + 18446744073709551614;
  _657 = p_cost_m0x_30 + _656;
  _658 = *_657;
  _659 = (int) _658;
  _660 = _653 + _659;
  _661 = (long unsigned int) bm0y_3227;
  _662 = _661 * 2;
  _663 = p_cost_m0y_37 + _662;
  _664 = *_663;
  _665 = (int) _664;
  _666 = _660 + _665;
  _667 = (long unsigned int) bm1x_3231;
  _668 = _667 * 2;
  _669 = p_cost_m1x_45 + _668;
  _670 = *_669;
  _671 = (int) _670;
  _672 = _666 + _671;
  _673 = (long unsigned int) bm1y_3228;
  _674 = _673 * 2;
  _675 = p_cost_m1y_52 + _674;
  _676 = *_675;
  _677 = (int) _676;
  bcost_678 = _672 + _677;
  # DEBUG cost => bcost_678
  _680 = bcost_3212 * 17;
  _681 = _680 / 16;
  if (bcost_678 < _681)
    goto <bb 62>;
  else
    goto <bb 64>;

  <bb 62>:
  bcost_2935 = MIN_EXPR <bcost_678, bcost_3212>;
  # DEBUG bcost => bcost_2935
  # DEBUG a => bm0x_139
  # DEBUG b => bm0y_3227
  _682 = bm0x_139 & 65535;
  _683 = bm0y_3227 << 16;
  _684 = _682 + _683;
  _685 = (unsigned int) _684;
  # DEBUG a => NULL
  # DEBUG b => NULL
  MEM[(uint32_t *)cache0_mv2_16] = _685;
  MEM[(uint32_t *)cache0_mv_11] = _685;
  # DEBUG a => bm1x_3231
  # DEBUG b => bm1y_3228
  _686 = bm1x_3231 & 65535;
  _687 = bm1y_3228 << 16;
  _688 = _686 + _687;
  _689 = (unsigned int) _688;
  # DEBUG a => NULL
  # DEBUG b => NULL
  MEM[(uint32_t *)cache1_mv2_18] = _689;
  MEM[(uint32_t *)cache1_mv_17] = _689;
  _690 = m0_3(D)->i_pixel;
  bcostrd_691 = x264_rd_cost_part (h_2(D), i_lambda2_7(D), i8_6(D), _690);
  # DEBUG costrd => bcostrd_691
  if (bcostrd_691 < bcostrd_3213)
    goto <bb 64>;
  else
    goto <bb 63>;

  <bb 63>:

  <bb 64>:
  # bm0x_2284 = PHI <bm0x_139(62), bm0x_2825(61), bm0x_2825(63)>
  # bm0y_2285 = PHI <bm0y_3227(62), bm0y_3034(61), bm0y_3034(63)>
  # bm1x_2286 = PHI <bm1x_3231(62), bm1x_3144(61), bm1x_3144(63)>
  # bm1y_2287 = PHI <bm1y_3228(62), bm1y_3145(61), bm1y_3145(63)>
  # bcost_743 = PHI <bcost_2935(62), bcost_3212(61), bcost_2935(63)>
  # bcostrd_756 = PHI <bcostrd_691(62), bcostrd_3213(61), bcostrd_3213(63)>
  # DEBUG bcostrd => bcostrd_756
  # DEBUG bcost => bcost_743
  # DEBUG bm1y => bm1y_2287
  # DEBUG bm1x => bm1x_2286
  # DEBUG bm0y => bm0y_2285
  # DEBUG bm0x => bm0x_2284
  if (pass_3229 == 0)
    goto <bb 65>;
  else
    goto <bb 66>;

  <bb 65>:
  pretmp_3869 = visited[prephitmp_4276][prephitmp_3875][prephitmp_4544];
  goto <bb 67>;

  <bb 66>:
  # bcost_3210 = PHI <bcost_743(64), bcost_2884(60)>
  # bcostrd_2818 = PHI <bcostrd_756(64), bcostrd_3209(60)>
  # bm0x_3143 = PHI <bm0x_2284(64), bm0x_3148(60)>
  # bm0y_2956 = PHI <bm0y_2285(64), bm0y_2792(60)>
  # bm1x_2892 = PHI <bm1x_2286(64), bm1x_3033(60)>
  # bm1y_3137 = PHI <bm1y_2287(64), bm1y_3142(60)>
  # prephitmp_3871 = PHI <prephitmp_3875(64), prephitmp_3882(60)>
  # prephitmp_3872 = PHI <prephitmp_3876(64), prephitmp_3883(60)>
  # prephitmp_3873 = PHI <prephitmp_3877(64), prephitmp_3884(60)>
  # prephitmp_3874 = PHI <prephitmp_3879(64), _630(60)>
  # prephitmp_4117 = PHI <prephitmp_4118(64), prephitmp_3885(60)>
  # prephitmp_4273 = PHI <prephitmp_4276(64), prephitmp_4120(60)>
  # prephitmp_4275 = PHI <prephitmp_4277(64), prephitmp_4122(60)>
  # prephitmp_4393 = PHI <prephitmp_4394(64), prephitmp_4279(60)>
  # prephitmp_4486 = PHI <prephitmp_4487(64), prephitmp_4396(60)>
  # prephitmp_4543 = PHI <prephitmp_4544(64), prephitmp_4489(60)>
  # prephitmp_4576 = PHI <prephitmp_4577(64), prephitmp_4546(60)>
  # prephitmp_4597 = PHI <prephitmp_4598(64), prephitmp_4579(60)>
  # DEBUG bcostrd => bcostrd_2818
  # DEBUG bcost => bcost_3210
  # DEBUG bm1y => bm1y_3137
  # DEBUG bm1x => bm1x_2892
  # DEBUG bm0y => bm0y_2956
  # DEBUG bm0x => bm0x_3143
  _696 = visited[prephitmp_4273][prephitmp_3871][prephitmp_4543];
  _697 = (int) _696;
  _699 = _697 >> prephitmp_4597;
  _700 = _699 & 1;
  if (_700 == 0)
    goto <bb 67>;
  else
    goto <bb 72>;

  <bb 67>:
  # bcost_3211 = PHI <bcost_743(65), bcost_3210(66)>
  # bcostrd_2785 = PHI <bcostrd_756(65), bcostrd_2818(66)>
  # bm0x_2924 = PHI <bm0x_2284(65), bm0x_3143(66)>
  # bm0y_2860 = PHI <bm0y_2285(65), bm0y_2956(66)>
  # bm1x_3140 = PHI <bm1x_2286(65), bm1x_2892(66)>
  # bm1y_3141 = PHI <bm1y_2287(65), bm1y_3137(66)>
  # prephitmp_3863 = PHI <prephitmp_4276(65), prephitmp_4273(66)>
  # prephitmp_3864 = PHI <prephitmp_3875(65), prephitmp_3871(66)>
  # prephitmp_3866 = PHI <prephitmp_4598(65), prephitmp_4597(66)>
  # prephitmp_3868 = PHI <prephitmp_4544(65), prephitmp_4543(66)>
  # prephitmp_3870 = PHI <pretmp_3869(65), _696(66)>
  # prephitmp_4113 = PHI <prephitmp_3876(65), prephitmp_3872(66)>
  # prephitmp_4114 = PHI <prephitmp_3877(65), prephitmp_3873(66)>
  # prephitmp_4115 = PHI <prephitmp_3879(65), prephitmp_3874(66)>
  # prephitmp_4271 = PHI <prephitmp_4118(65), prephitmp_4117(66)>
  # prephitmp_4391 = PHI <prephitmp_4277(65), prephitmp_4275(66)>
  # prephitmp_4484 = PHI <prephitmp_4394(65), prephitmp_4393(66)>
  # prephitmp_4541 = PHI <prephitmp_4487(65), prephitmp_4486(66)>
  # prephitmp_4595 = PHI <prephitmp_4577(65), prephitmp_4576(66)>
  # DEBUG i0 => 4
  # DEBUG i1 => 8
  _705 = (signed char) prephitmp_3870;
  _707 = 1 << prephitmp_3866;
  _708 = (signed char) _707;
  _709 = _705 | _708;
  _710 = (unsigned char) _709;
  visited[prephitmp_3863][prephitmp_3864][prephitmp_3868] = _710;
  _711 = h_2(D)->mc.avg[_12];
  _712 = stride1[8];
  _713 = stride0[4];
  _711 (&pix, bw_19, src0$4_2816, _713, _167, _712, i_weight_5(D));
  _714 = h_2(D)->pixf.mbcmp[_12];
  _715 = m0_3(D)->p_fenc[0];
  _716 = _714 (_715, 16, &pix, bw_19);
  _717 = (long unsigned int) bm0x_3230;
  _718 = _717 * 2;
  _719 = p_cost_m0x_30 + _718;
  _720 = *_719;
  _721 = (int) _720;
  _722 = _716 + _721;
  _723 = (long unsigned int) bm0y_3227;
  _724 = _723 * 2;
  _725 = p_cost_m0y_37 + _724;
  _726 = *_725;
  _727 = (int) _726;
  _728 = _722 + _727;
  _729 = (sizetype) bm1x_3231;
  _730 = _729 + 1;
  _731 = _730 * 2;
  _732 = p_cost_m1x_45 + _731;
  _733 = *_732;
  _734 = (int) _733;
  _735 = _728 + _734;
  _736 = (sizetype) bm1y_3228;
  _737 = _736 + 1;
  _738 = _737 * 2;
  _739 = p_cost_m1y_52 + _738;
  _740 = *_739;
  _741 = (int) _740;
  bcost_742 = _735 + _741;
  # DEBUG cost => bcost_742
  _744 = bcost_3211 * 17;
  _745 = _744 / 16;
  if (bcost_742 < _745)
    goto <bb 68>;
  else
    goto <bb 70>;

  <bb 68>:
  bcost_2903 = MIN_EXPR <bcost_742, bcost_3211>;
  # DEBUG bcost => bcost_2903
  # DEBUG a => bm0x_3230
  # DEBUG b => bm0y_3227
  _746 = bm0x_3230 & 65535;
  _747 = bm0y_3227 << 16;
  _748 = _746 + _747;
  _749 = (unsigned int) _748;
  # DEBUG a => NULL
  # DEBUG b => NULL
  MEM[(uint32_t *)cache0_mv2_16] = _749;
  MEM[(uint32_t *)cache0_mv_11] = _749;
  # DEBUG a => bm1x_134
  # DEBUG b => bm1y_151
  _750 = bm1x_134 & 65535;
  _751 = bm1y_151 << 16;
  _752 = _750 + _751;
  _753 = (unsigned int) _752;
  # DEBUG a => NULL
  # DEBUG b => NULL
  MEM[(uint32_t *)cache1_mv2_18] = _753;
  MEM[(uint32_t *)cache1_mv_17] = _753;
  _754 = m0_3(D)->i_pixel;
  bcostrd_755 = x264_rd_cost_part (h_2(D), i_lambda2_7(D), i8_6(D), _754);
  # DEBUG costrd => bcostrd_755
  if (bcostrd_755 < bcostrd_2785)
    goto <bb 70>;
  else
    goto <bb 69>;

  <bb 69>:

  <bb 70>:
  # bm0x_2289 = PHI <bm0x_3230(68), bm0x_2924(67), bm0x_2924(69)>
  # bm0y_2290 = PHI <bm0y_3227(68), bm0y_2860(67), bm0y_2860(69)>
  # bm1x_2291 = PHI <bm1x_134(68), bm1x_3140(67), bm1x_3140(69)>
  # bm1y_2292 = PHI <bm1y_151(68), bm1y_3141(67), bm1y_3141(69)>
  # bcost_807 = PHI <bcost_2903(68), bcost_3211(67), bcost_2903(69)>
  # bcostrd_820 = PHI <bcostrd_755(68), bcostrd_2785(67), bcostrd_2785(69)>
  # DEBUG bcostrd => bcostrd_820
  # DEBUG bcost => bcost_807
  # DEBUG bm1y => bm1y_2292
  # DEBUG bm1x => bm1x_2291
  # DEBUG bm0y => bm0y_2290
  # DEBUG bm0x => bm0x_2289
  if (pass_3229 == 0)
    goto <bb 71>;
  else
    goto <bb 72>;

  <bb 71>:
  pretmp_3856 = visited[prephitmp_3863][prephitmp_3864][prephitmp_4541];
  goto <bb 73>;

  <bb 72>:
  # bcost_3020 = PHI <bcost_807(70), bcost_3210(66)>
  # bcostrd_3207 = PHI <bcostrd_820(70), bcostrd_2818(66)>
  # bm0x_3138 = PHI <bm0x_2289(70), bm0x_3143(66)>
  # bm0y_2826 = PHI <bm0y_2290(70), bm0y_2956(66)>
  # bm1x_3036 = PHI <bm1x_2291(70), bm1x_2892(66)>
  # bm1y_3135 = PHI <bm1y_2292(70), bm1y_3137(66)>
  # prephitmp_3858 = PHI <prephitmp_3863(70), prephitmp_4273(66)>
  # prephitmp_3859 = PHI <prephitmp_3864(70), prephitmp_3871(66)>
  # prephitmp_3860 = PHI <prephitmp_3866(70), prephitmp_4597(66)>
  # prephitmp_3861 = PHI <prephitmp_3868(70), prephitmp_4543(66)>
  # prephitmp_4108 = PHI <prephitmp_4113(70), prephitmp_3872(66)>
  # prephitmp_4110 = PHI <prephitmp_4114(70), prephitmp_3873(66)>
  # prephitmp_4112 = PHI <prephitmp_4115(70), prephitmp_3874(66)>
  # prephitmp_4270 = PHI <prephitmp_4271(70), prephitmp_4117(66)>
  # prephitmp_4390 = PHI <prephitmp_4391(70), prephitmp_4275(66)>
  # prephitmp_4483 = PHI <prephitmp_4484(70), prephitmp_4393(66)>
  # prephitmp_4540 = PHI <prephitmp_4541(70), prephitmp_4486(66)>
  # prephitmp_4594 = PHI <prephitmp_4595(70), prephitmp_4576(66)>
  # DEBUG bcostrd => bcostrd_3207
  # DEBUG bcost => bcost_3020
  # DEBUG bm1y => bm1y_3135
  # DEBUG bm1x => bm1x_3036
  # DEBUG bm0y => bm0y_2826
  # DEBUG bm0x => bm0x_3138
  _760 = visited[prephitmp_3858][prephitmp_3859][prephitmp_4540];
  _761 = (int) _760;
  _763 = _761 >> prephitmp_4594;
  _764 = _763 & 1;
  if (_764 == 0)
    goto <bb 73>;
  else
    goto <bb 78>;

  <bb 73>:
  # bcost_3019 = PHI <bcost_807(71), bcost_3020(72)>
  # bcostrd_3205 = PHI <bcostrd_820(71), bcostrd_3207(72)>
  # bm0x_3139 = PHI <bm0x_2289(71), bm0x_3138(72)>
  # bm0y_2793 = PHI <bm0y_2290(71), bm0y_2826(72)>
  # bm1x_3035 = PHI <bm1x_2291(71), bm1x_3036(72)>
  # bm1y_3133 = PHI <bm1y_2292(71), bm1y_3135(72)>
  # prephitmp_3850 = PHI <prephitmp_3863(71), prephitmp_3858(72)>
  # prephitmp_3851 = PHI <prephitmp_3864(71), prephitmp_3859(72)>
  # prephitmp_3853 = PHI <prephitmp_4595(71), prephitmp_4594(72)>
  # prephitmp_3855 = PHI <prephitmp_4541(71), prephitmp_4540(72)>
  # prephitmp_3857 = PHI <pretmp_3856(71), _760(72)>
  # prephitmp_4105 = PHI <prephitmp_3866(71), prephitmp_3860(72)>
  # prephitmp_4106 = PHI <prephitmp_3868(71), prephitmp_3861(72)>
  # prephitmp_4266 = PHI <prephitmp_4113(71), prephitmp_4108(72)>
  # prephitmp_4267 = PHI <prephitmp_4114(71), prephitmp_4110(72)>
  # prephitmp_4268 = PHI <prephitmp_4115(71), prephitmp_4112(72)>
  # prephitmp_4388 = PHI <prephitmp_4271(71), prephitmp_4270(72)>
  # prephitmp_4481 = PHI <prephitmp_4391(71), prephitmp_4390(72)>
  # prephitmp_4538 = PHI <prephitmp_4484(71), prephitmp_4483(72)>
  # DEBUG i0 => 4
  # DEBUG i1 => 0
  _769 = (signed char) prephitmp_3857;
  _771 = 1 << prephitmp_3853;
  _772 = (signed char) _771;
  _773 = _769 | _772;
  _774 = (unsigned char) _773;
  visited[prephitmp_3850][prephitmp_3851][prephitmp_3855] = _774;
  _775 = h_2(D)->mc.avg[_12];
  _776 = stride1[0];
  _777 = stride0[4];
  _775 (&pix, bw_19, src0$4_2816, _777, _173, _776, i_weight_5(D));
  _778 = h_2(D)->pixf.mbcmp[_12];
  _779 = m0_3(D)->p_fenc[0];
  _780 = _778 (_779, 16, &pix, bw_19);
  _781 = (long unsigned int) bm0x_3230;
  _782 = _781 * 2;
  _783 = p_cost_m0x_30 + _782;
  _784 = *_783;
  _785 = (int) _784;
  _786 = _780 + _785;
  _787 = (long unsigned int) bm0y_3227;
  _788 = _787 * 2;
  _789 = p_cost_m0y_37 + _788;
  _790 = *_789;
  _791 = (int) _790;
  _792 = _786 + _791;
  _793 = (long unsigned int) bm1x_3231;
  _794 = _793 * 2;
  _795 = _794 + 18446744073709551614;
  _796 = p_cost_m1x_45 + _795;
  _797 = *_796;
  _798 = (int) _797;
  _799 = _792 + _798;
  _800 = (long unsigned int) bm1y_3228;
  _801 = _800 * 2;
  _802 = _801 + 18446744073709551614;
  _803 = p_cost_m1y_52 + _802;
  _804 = *_803;
  _805 = (int) _804;
  bcost_806 = _799 + _805;
  # DEBUG cost => bcost_806
  _808 = bcost_3019 * 17;
  _809 = _808 / 16;
  if (bcost_806 < _809)
    goto <bb 74>;
  else
    goto <bb 76>;

  <bb 74>:
  bcost_3334 = MIN_EXPR <bcost_806, bcost_3019>;
  # DEBUG bcost => bcost_3334
  # DEBUG a => bm0x_3230
  # DEBUG b => bm0y_3227
  _810 = bm0x_3230 & 65535;
  _811 = bm0y_3227 << 16;
  _812 = _810 + _811;
  _813 = (unsigned int) _812;
  # DEBUG a => NULL
  # DEBUG b => NULL
  MEM[(uint32_t *)cache0_mv2_16] = _813;
  MEM[(uint32_t *)cache0_mv_11] = _813;
  # DEBUG a => bm1x_143
  # DEBUG b => bm1y_159
  _814 = bm1x_143 & 65535;
  _815 = bm1y_159 << 16;
  _816 = _814 + _815;
  _817 = (unsigned int) _816;
  # DEBUG a => NULL
  # DEBUG b => NULL
  MEM[(uint32_t *)cache1_mv2_18] = _817;
  MEM[(uint32_t *)cache1_mv_17] = _817;
  _818 = m0_3(D)->i_pixel;
  bcostrd_819 = x264_rd_cost_part (h_2(D), i_lambda2_7(D), i8_6(D), _818);
  # DEBUG costrd => bcostrd_819
  if (bcostrd_819 < bcostrd_3205)
    goto <bb 76>;
  else
    goto <bb 75>;

  <bb 75>:

  <bb 76>:
  # bm0x_2294 = PHI <bm0x_3230(74), bm0x_3139(73), bm0x_3139(75)>
  # bm0y_2295 = PHI <bm0y_3227(74), bm0y_2793(73), bm0y_2793(75)>
  # bm1x_2296 = PHI <bm1x_143(74), bm1x_3035(73), bm1x_3035(75)>
  # bm1y_2297 = PHI <bm1y_159(74), bm1y_3133(73), bm1y_3133(75)>
  # bcost_871 = PHI <bcost_3334(74), bcost_3019(73), bcost_3334(75)>
  # bcostrd_884 = PHI <bcostrd_819(74), bcostrd_3205(73), bcostrd_3205(75)>
  # DEBUG bcostrd => bcostrd_884
  # DEBUG bcost => bcost_871
  # DEBUG bm1y => bm1y_2297
  # DEBUG bm1x => bm1x_2296
  # DEBUG bm0y => bm0y_2295
  # DEBUG bm0x => bm0x_2294
  if (pass_3229 == 0)
    goto <bb 77>;
  else
    goto <bb 78>;

  <bb 77>:
  pretmp_3844 = visited[prephitmp_3850][prephitmp_4538][prephitmp_4106];
  goto <bb 79>;

  <bb 78>:
  # bcost_3208 = PHI <bcost_871(76), bcost_3020(72)>
  # bcostrd_2917 = PHI <bcostrd_884(76), bcostrd_3207(72)>
  # bm0x_3136 = PHI <bm0x_2294(76), bm0x_3138(72)>
  # bm0y_2925 = PHI <bm0y_2295(76), bm0y_2826(72)>
  # bm1x_2861 = PHI <bm1x_2296(76), bm1x_3036(72)>
  # bm1y_3131 = PHI <bm1y_2297(76), bm1y_3135(72)>
  # prephitmp_3846 = PHI <prephitmp_3850(76), prephitmp_3858(72)>
  # prephitmp_3847 = PHI <prephitmp_3851(76), prephitmp_3859(72)>
  # prephitmp_3848 = PHI <prephitmp_3853(76), prephitmp_4594(72)>
  # prephitmp_3849 = PHI <prephitmp_3855(76), prephitmp_4540(72)>
  # prephitmp_4102 = PHI <prephitmp_4105(76), prephitmp_3860(72)>
  # prephitmp_4104 = PHI <prephitmp_4106(76), prephitmp_3861(72)>
  # prephitmp_4261 = PHI <prephitmp_4266(76), prephitmp_4108(72)>
  # prephitmp_4263 = PHI <prephitmp_4267(76), prephitmp_4110(72)>
  # prephitmp_4265 = PHI <prephitmp_4268(76), prephitmp_4112(72)>
  # prephitmp_4387 = PHI <prephitmp_4388(76), prephitmp_4270(72)>
  # prephitmp_4480 = PHI <prephitmp_4481(76), prephitmp_4390(72)>
  # prephitmp_4537 = PHI <prephitmp_4538(76), prephitmp_4483(72)>
  # DEBUG bcostrd => bcostrd_2917
  # DEBUG bcost => bcost_3208
  # DEBUG bm1y => bm1y_3131
  # DEBUG bm1x => bm1x_2861
  # DEBUG bm0y => bm0y_2925
  # DEBUG bm0x => bm0x_3136
  _824 = visited[prephitmp_3846][prephitmp_4537][prephitmp_4104];
  _825 = (int) _824;
  _827 = _825 >> prephitmp_4263;
  _828 = _827 & 1;
  if (_828 == 0)
    goto <bb 79>;
  else
    goto <bb 84>;

  <bb 79>:
  # bcost_3206 = PHI <bcost_871(77), bcost_3208(78)>
  # bcostrd_2949 = PHI <bcostrd_884(77), bcostrd_2917(78)>
  # bm0x_3134 = PHI <bm0x_2294(77), bm0x_3136(78)>
  # bm0y_2957 = PHI <bm0y_2295(77), bm0y_2925(78)>
  # bm1x_2893 = PHI <bm1x_2296(77), bm1x_2861(78)>
  # bm1y_3128 = PHI <bm1y_2297(77), bm1y_3131(78)>
  # prephitmp_3837 = PHI <prephitmp_3850(77), prephitmp_3846(78)>
  # prephitmp_3839 = PHI <prephitmp_4106(77), prephitmp_4104(78)>
  # prephitmp_3841 = PHI <prephitmp_4267(77), prephitmp_4263(78)>
  # prephitmp_3843 = PHI <prephitmp_4538(77), prephitmp_4537(78)>
  # prephitmp_3845 = PHI <pretmp_3844(77), _824(78)>
  # prephitmp_4098 = PHI <prephitmp_3851(77), prephitmp_3847(78)>
  # prephitmp_4099 = PHI <prephitmp_3853(77), prephitmp_3848(78)>
  # prephitmp_4100 = PHI <prephitmp_3855(77), prephitmp_3849(78)>
  # prephitmp_4259 = PHI <prephitmp_4105(77), prephitmp_4102(78)>
  # prephitmp_4384 = PHI <prephitmp_4266(77), prephitmp_4261(78)>
  # prephitmp_4385 = PHI <prephitmp_4268(77), prephitmp_4265(78)>
  # prephitmp_4478 = PHI <prephitmp_4388(77), prephitmp_4387(78)>
  # prephitmp_4535 = PHI <prephitmp_4481(77), prephitmp_4480(78)>
  # DEBUG i0 => 5
  # DEBUG i1 => 7
  _833 = (signed char) prephitmp_3845;
  _835 = 1 << prephitmp_3841;
  _836 = (signed char) _835;
  _837 = _833 | _836;
  _838 = (unsigned char) _837;
  visited[prephitmp_3837][prephitmp_3843][prephitmp_3839] = _838;
  _839 = h_2(D)->mc.avg[_12];
  _840 = stride1[7];
  _841 = stride0[5];
  _839 (&pix, bw_19, _149, _841, _137, _840, i_weight_5(D));
  _842 = h_2(D)->pixf.mbcmp[_12];
  _843 = m0_3(D)->p_fenc[0];
  _844 = _842 (_843, 16, &pix, bw_19);
  _845 = (long unsigned int) bm0x_3230;
  _846 = _845 * 2;
  _847 = p_cost_m0x_30 + _846;
  _848 = *_847;
  _849 = (int) _848;
  _850 = _844 + _849;
  _851 = (sizetype) bm0y_3227;
  _852 = _851 + 1;
  _853 = _852 * 2;
  _854 = p_cost_m0y_37 + _853;
  _855 = *_854;
  _856 = (int) _855;
  _857 = _850 + _856;
  _858 = (sizetype) bm1x_3231;
  _859 = _858 + 1;
  _860 = _859 * 2;
  _861 = p_cost_m1x_45 + _860;
  _862 = *_861;
  _863 = (int) _862;
  _864 = _857 + _863;
  _865 = (long unsigned int) bm1y_3228;
  _866 = _865 * 2;
  _867 = p_cost_m1y_52 + _866;
  _868 = *_867;
  _869 = (int) _868;
  bcost_870 = _864 + _869;
  # DEBUG cost => bcost_870
  _872 = bcost_3206 * 17;
  _873 = _872 / 16;
  if (bcost_870 < _873)
    goto <bb 80>;
  else
    goto <bb 82>;

  <bb 80>:
  bcost_3331 = MIN_EXPR <bcost_870, bcost_3206>;
  # DEBUG bcost => bcost_3331
  # DEBUG a => bm0x_3230
  # DEBUG b => bm0y_147
  _874 = bm0x_3230 & 65535;
  _875 = bm0y_147 << 16;
  _876 = _874 + _875;
  _877 = (unsigned int) _876;
  # DEBUG a => NULL
  # DEBUG b => NULL
  MEM[(uint32_t *)cache0_mv2_16] = _877;
  MEM[(uint32_t *)cache0_mv_11] = _877;
  # DEBUG a => bm1x_134
  # DEBUG b => bm1y_3228
  _878 = bm1x_134 & 65535;
  _879 = bm1y_3228 << 16;
  _880 = _878 + _879;
  _881 = (unsigned int) _880;
  # DEBUG a => NULL
  # DEBUG b => NULL
  MEM[(uint32_t *)cache1_mv2_18] = _881;
  MEM[(uint32_t *)cache1_mv_17] = _881;
  _882 = m0_3(D)->i_pixel;
  bcostrd_883 = x264_rd_cost_part (h_2(D), i_lambda2_7(D), i8_6(D), _882);
  # DEBUG costrd => bcostrd_883
  if (bcostrd_883 < bcostrd_2949)
    goto <bb 82>;
  else
    goto <bb 81>;

  <bb 81>:

  <bb 82>:
  # bm0x_2299 = PHI <bm0x_3230(80), bm0x_3134(79), bm0x_3134(81)>
  # bm0y_2300 = PHI <bm0y_147(80), bm0y_2957(79), bm0y_2957(81)>
  # bm1x_2301 = PHI <bm1x_134(80), bm1x_2893(79), bm1x_2893(81)>
  # bm1y_2302 = PHI <bm1y_3228(80), bm1y_3128(79), bm1y_3128(81)>
  # bcost_935 = PHI <bcost_3331(80), bcost_3206(79), bcost_3331(81)>
  # bcostrd_948 = PHI <bcostrd_883(80), bcostrd_2949(79), bcostrd_2949(81)>
  # DEBUG bcostrd => bcostrd_948
  # DEBUG bcost => bcost_935
  # DEBUG bm1y => bm1y_2302
  # DEBUG bm1x => bm1x_2301
  # DEBUG bm0y => bm0y_2300
  # DEBUG bm0x => bm0x_2299
  if (pass_3229 == 0)
    goto <bb 83>;
  else
    goto <bb 84>;

  <bb 83>:
  pretmp_3831 = visited[prephitmp_3837][prephitmp_4535][prephitmp_4100];
  goto <bb 85>;

  <bb 84>:
  # bcost_2853 = PHI <bcost_935(82), bcost_3208(78)>
  # bcostrd_3203 = PHI <bcostrd_948(82), bcostrd_2917(78)>
  # bm0x_3132 = PHI <bm0x_2299(82), bm0x_3136(78)>
  # bm0y_3130 = PHI <bm0y_2300(82), bm0y_2925(78)>
  # bm1x_2794 = PHI <bm1x_2301(82), bm1x_2861(78)>
  # bm1y_3037 = PHI <bm1y_2302(82), bm1y_3131(78)>
  # prephitmp_3833 = PHI <prephitmp_3837(82), prephitmp_3846(78)>
  # prephitmp_3834 = PHI <prephitmp_3839(82), prephitmp_4104(78)>
  # prephitmp_3835 = PHI <prephitmp_3841(82), prephitmp_4263(78)>
  # prephitmp_3836 = PHI <prephitmp_3843(82), prephitmp_4537(78)>
  # prephitmp_4093 = PHI <prephitmp_4098(82), prephitmp_3847(78)>
  # prephitmp_4095 = PHI <prephitmp_4099(82), prephitmp_3848(78)>
  # prephitmp_4097 = PHI <prephitmp_4100(82), prephitmp_3849(78)>
  # prephitmp_4258 = PHI <prephitmp_4259(82), prephitmp_4102(78)>
  # prephitmp_4381 = PHI <prephitmp_4384(82), prephitmp_4261(78)>
  # prephitmp_4383 = PHI <prephitmp_4385(82), prephitmp_4265(78)>
  # prephitmp_4477 = PHI <prephitmp_4478(82), prephitmp_4387(78)>
  # prephitmp_4534 = PHI <prephitmp_4535(82), prephitmp_4480(78)>
  # DEBUG bcostrd => bcostrd_3203
  # DEBUG bcost => bcost_2853
  # DEBUG bm1y => bm1y_3037
  # DEBUG bm1x => bm1x_2794
  # DEBUG bm0y => bm0y_3130
  # DEBUG bm0x => bm0x_3132
  _888 = visited[prephitmp_3833][prephitmp_4534][prephitmp_4097];
  _889 = (int) _888;
  _891 = _889 >> prephitmp_3835;
  _892 = _891 & 1;
  if (_892 == 0)
    goto <bb 85>;
  else
    goto <bb 90>;

  <bb 85>:
  # bcost_2885 = PHI <bcost_935(83), bcost_2853(84)>
  # bcostrd_3200 = PHI <bcostrd_948(83), bcostrd_3203(84)>
  # bm0x_3129 = PHI <bm0x_2299(83), bm0x_3132(84)>
  # bm0y_2827 = PHI <bm0y_2300(83), bm0y_3130(84)>
  # bm1x_3038 = PHI <bm1x_2301(83), bm1x_2794(84)>
  # bm1y_3126 = PHI <bm1y_2302(83), bm1y_3037(84)>
  # prephitmp_3825 = PHI <prephitmp_3837(83), prephitmp_3833(84)>
  # prephitmp_3826 = PHI <prephitmp_3841(83), prephitmp_3835(84)>
  # prephitmp_3828 = PHI <prephitmp_4100(83), prephitmp_4097(84)>
  # prephitmp_3830 = PHI <prephitmp_4535(83), prephitmp_4534(84)>
  # prephitmp_3832 = PHI <pretmp_3831(83), _888(84)>
  # prephitmp_4090 = PHI <prephitmp_3839(83), prephitmp_3834(84)>
  # prephitmp_4091 = PHI <prephitmp_3843(83), prephitmp_3836(84)>
  # prephitmp_4255 = PHI <prephitmp_4098(83), prephitmp_4093(84)>
  # prephitmp_4256 = PHI <prephitmp_4099(83), prephitmp_4095(84)>
  # prephitmp_4379 = PHI <prephitmp_4259(83), prephitmp_4258(84)>
  # prephitmp_4474 = PHI <prephitmp_4384(83), prephitmp_4381(84)>
  # prephitmp_4475 = PHI <prephitmp_4385(83), prephitmp_4383(84)>
  # prephitmp_4532 = PHI <prephitmp_4478(83), prephitmp_4477(84)>
  # DEBUG i0 => 3
  # DEBUG i1 => 1
  _897 = (signed char) prephitmp_3832;
  _899 = 1 << prephitmp_3826;
  _900 = (signed char) _899;
  _901 = _897 | _900;
  _902 = (unsigned char) _901;
  visited[prephitmp_3825][prephitmp_3830][prephitmp_3828] = _902;
  _903 = h_2(D)->mc.avg[_12];
  _904 = stride1[1];
  _905 = stride0[3];
  _903 (&pix, bw_19, _157, _905, _145, _904, i_weight_5(D));
  _906 = h_2(D)->pixf.mbcmp[_12];
  _907 = m0_3(D)->p_fenc[0];
  _908 = _906 (_907, 16, &pix, bw_19);
  _909 = (long unsigned int) bm0x_3230;
  _910 = _909 * 2;
  _911 = p_cost_m0x_30 + _910;
  _912 = *_911;
  _913 = (int) _912;
  _914 = _908 + _913;
  _915 = (long unsigned int) bm0y_3227;
  _916 = _915 * 2;
  _917 = _916 + 18446744073709551614;
  _918 = p_cost_m0y_37 + _917;
  _919 = *_918;
  _920 = (int) _919;
  _921 = _914 + _920;
  _922 = (long unsigned int) bm1x_3231;
  _923 = _922 * 2;
  _924 = _923 + 18446744073709551614;
  _925 = p_cost_m1x_45 + _924;
  _926 = *_925;
  _927 = (int) _926;
  _928 = _921 + _927;
  _929 = (long unsigned int) bm1y_3228;
  _930 = _929 * 2;
  _931 = p_cost_m1y_52 + _930;
  _932 = *_931;
  _933 = (int) _932;
  bcost_934 = _928 + _933;
  # DEBUG cost => bcost_934
  _936 = bcost_2885 * 17;
  _937 = _936 / 16;
  if (bcost_934 < _937)
    goto <bb 86>;
  else
    goto <bb 88>;

  <bb 86>:
  bcost_3333 = MIN_EXPR <bcost_934, bcost_2885>;
  # DEBUG bcost => bcost_3333
  # DEBUG a => bm0x_3230
  # DEBUG b => bm0y_155
  _938 = bm0x_3230 & 65535;
  _939 = bm0y_155 << 16;
  _940 = _938 + _939;
  _941 = (unsigned int) _940;
  # DEBUG a => NULL
  # DEBUG b => NULL
  MEM[(uint32_t *)cache0_mv2_16] = _941;
  MEM[(uint32_t *)cache0_mv_11] = _941;
  # DEBUG a => bm1x_143
  # DEBUG b => bm1y_3228
  _942 = bm1x_143 & 65535;
  _943 = bm1y_3228 << 16;
  _944 = _942 + _943;
  _945 = (unsigned int) _944;
  # DEBUG a => NULL
  # DEBUG b => NULL
  MEM[(uint32_t *)cache1_mv2_18] = _945;
  MEM[(uint32_t *)cache1_mv_17] = _945;
  _946 = m0_3(D)->i_pixel;
  bcostrd_947 = x264_rd_cost_part (h_2(D), i_lambda2_7(D), i8_6(D), _946);
  # DEBUG costrd => bcostrd_947
  if (bcostrd_947 < bcostrd_3200)
    goto <bb 88>;
  else
    goto <bb 87>;

  <bb 87>:

  <bb 88>:
  # bm0x_2304 = PHI <bm0x_3230(86), bm0x_3129(85), bm0x_3129(87)>
  # bm0y_2305 = PHI <bm0y_155(86), bm0y_2827(85), bm0y_2827(87)>
  # bm1x_2306 = PHI <bm1x_143(86), bm1x_3038(85), bm1x_3038(87)>
  # bm1y_2307 = PHI <bm1y_3228(86), bm1y_3126(85), bm1y_3126(87)>
  # bcost_999 = PHI <bcost_3333(86), bcost_2885(85), bcost_3333(87)>
  # bcostrd_1012 = PHI <bcostrd_947(86), bcostrd_3200(85), bcostrd_3200(87)>
  # DEBUG bcostrd => bcostrd_1012
  # DEBUG bcost => bcost_999
  # DEBUG bm1y => bm1y_2307
  # DEBUG bm1x => bm1x_2306
  # DEBUG bm0y => bm0y_2305
  # DEBUG bm0x => bm0x_2304
  if (pass_3229 == 0)
    goto <bb 89>;
  else
    goto <bb 90>;

  <bb 89>:
  pretmp_3819 = visited[prephitmp_4532][prephitmp_4091][prephitmp_4474];
  goto <bb 91>;

  <bb 90>:
  # bcost_3204 = PHI <bcost_999(88), bcost_2853(84)>
  # bcostrd_3202 = PHI <bcostrd_1012(88), bcostrd_3203(84)>
  # bm0x_3124 = PHI <bm0x_2304(88), bm0x_3132(84)>
  # bm0y_3125 = PHI <bm0y_2305(88), bm0y_3130(84)>
  # bm1x_2958 = PHI <bm1x_2306(88), bm1x_2794(84)>
  # bm1y_2894 = PHI <bm1y_2307(88), bm1y_3037(84)>
  # prephitmp_3821 = PHI <prephitmp_3825(88), prephitmp_3833(84)>
  # prephitmp_3822 = PHI <prephitmp_3826(88), prephitmp_3835(84)>
  # prephitmp_3823 = PHI <prephitmp_3828(88), prephitmp_4097(84)>
  # prephitmp_3824 = PHI <prephitmp_3830(88), prephitmp_4534(84)>
  # prephitmp_4087 = PHI <prephitmp_4090(88), prephitmp_3834(84)>
  # prephitmp_4089 = PHI <prephitmp_4091(88), prephitmp_3836(84)>
  # prephitmp_4252 = PHI <prephitmp_4255(88), prephitmp_4093(84)>
  # prephitmp_4254 = PHI <prephitmp_4256(88), prephitmp_4095(84)>
  # prephitmp_4378 = PHI <prephitmp_4379(88), prephitmp_4258(84)>
  # prephitmp_4471 = PHI <prephitmp_4474(88), prephitmp_4381(84)>
  # prephitmp_4473 = PHI <prephitmp_4475(88), prephitmp_4383(84)>
  # prephitmp_4531 = PHI <prephitmp_4532(88), prephitmp_4477(84)>
  # DEBUG bcostrd => bcostrd_3202
  # DEBUG bcost => bcost_3204
  # DEBUG bm1y => bm1y_2894
  # DEBUG bm1x => bm1x_2958
  # DEBUG bm0y => bm0y_3125
  # DEBUG bm0x => bm0x_3124
  _952 = visited[prephitmp_4531][prephitmp_4089][prephitmp_4471];
  _953 = (int) _952;
  _955 = _953 >> prephitmp_3822;
  _956 = _955 & 1;
  if (_956 == 0)
    goto <bb 91>;
  else
    goto <bb 96>;

  <bb 91>:
  # bcost_3201 = PHI <bcost_999(89), bcost_3204(90)>
  # bcostrd_2819 = PHI <bcostrd_1012(89), bcostrd_3202(90)>
  # bm0x_3127 = PHI <bm0x_2304(89), bm0x_3124(90)>
  # bm0y_2926 = PHI <bm0y_2305(89), bm0y_3125(90)>
  # bm1x_2862 = PHI <bm1x_2306(89), bm1x_2958(90)>
  # bm1y_3122 = PHI <bm1y_2307(89), bm1y_2894(90)>
  # prephitmp_3813 = PHI <prephitmp_4474(89), prephitmp_4471(90)>
  # prephitmp_3814 = PHI <prephitmp_3826(89), prephitmp_3822(90)>
  # prephitmp_3816 = PHI <prephitmp_4091(89), prephitmp_4089(90)>
  # prephitmp_3818 = PHI <prephitmp_4532(89), prephitmp_4531(90)>
  # prephitmp_3820 = PHI <pretmp_3819(89), _952(90)>
  # prephitmp_4083 = PHI <prephitmp_3825(89), prephitmp_3821(90)>
  # prephitmp_4084 = PHI <prephitmp_3828(89), prephitmp_3823(90)>
  # prephitmp_4085 = PHI <prephitmp_3830(89), prephitmp_3824(90)>
  # prephitmp_4250 = PHI <prephitmp_4090(89), prephitmp_4087(90)>
  # prephitmp_4375 = PHI <prephitmp_4255(89), prephitmp_4252(90)>
  # prephitmp_4376 = PHI <prephitmp_4256(89), prephitmp_4254(90)>
  # prephitmp_4469 = PHI <prephitmp_4379(89), prephitmp_4378(90)>
  # prephitmp_4529 = PHI <prephitmp_4475(89), prephitmp_4473(90)>
  # DEBUG i0 => 8
  # DEBUG i1 => 4
  _961 = (signed char) prephitmp_3820;
  _963 = 1 << prephitmp_3814;
  _964 = (signed char) _963;
  _965 = _961 | _964;
  _966 = (unsigned char) _965;
  visited[prephitmp_3818][prephitmp_3816][prephitmp_3813] = _966;
  _967 = h_2(D)->mc.avg[_12];
  _968 = stride1[4];
  _969 = stride0[8];
  _967 (&pix, bw_19, _164, _969, src1$4_3219, _968, i_weight_5(D));
  _970 = h_2(D)->pixf.mbcmp[_12];
  _971 = m0_3(D)->p_fenc[0];
  _972 = _970 (_971, 16, &pix, bw_19);
  _973 = (sizetype) bm0x_3230;
  _974 = _973 + 1;
  _975 = _974 * 2;
  _976 = p_cost_m0x_30 + _975;
  _977 = *_976;
  _978 = (int) _977;
  _979 = _972 + _978;
  _980 = (sizetype) bm0y_3227;
  _981 = _980 + 1;
  _982 = _981 * 2;
  _983 = p_cost_m0y_37 + _982;
  _984 = *_983;
  _985 = (int) _984;
  _986 = _979 + _985;
  _987 = (long unsigned int) bm1x_3231;
  _988 = _987 * 2;
  _989 = p_cost_m1x_45 + _988;
  _990 = *_989;
  _991 = (int) _990;
  _992 = _986 + _991;
  _993 = (long unsigned int) bm1y_3228;
  _994 = _993 * 2;
  _995 = p_cost_m1y_52 + _994;
  _996 = *_995;
  _997 = (int) _996;
  bcost_998 = _992 + _997;
  # DEBUG cost => bcost_998
  _1000 = bcost_3201 * 17;
  _1001 = _1000 / 16;
  if (bcost_998 < _1001)
    goto <bb 92>;
  else
    goto <bb 94>;

  <bb 92>:
  bcost_2991 = MIN_EXPR <bcost_998, bcost_3201>;
  # DEBUG bcost => bcost_2991
  # DEBUG a => bm0x_128
  # DEBUG b => bm0y_147
  _1002 = bm0x_128 & 65535;
  _1003 = bm0y_147 << 16;
  _1004 = _1002 + _1003;
  _1005 = (unsigned int) _1004;
  # DEBUG a => NULL
  # DEBUG b => NULL
  MEM[(uint32_t *)cache0_mv2_16] = _1005;
  MEM[(uint32_t *)cache0_mv_11] = _1005;
  # DEBUG a => bm1x_3231
  # DEBUG b => bm1y_3228
  _1006 = bm1x_3231 & 65535;
  _1007 = bm1y_3228 << 16;
  _1008 = _1006 + _1007;
  _1009 = (unsigned int) _1008;
  # DEBUG a => NULL
  # DEBUG b => NULL
  MEM[(uint32_t *)cache1_mv2_18] = _1009;
  MEM[(uint32_t *)cache1_mv_17] = _1009;
  _1010 = m0_3(D)->i_pixel;
  bcostrd_1011 = x264_rd_cost_part (h_2(D), i_lambda2_7(D), i8_6(D), _1010);
  # DEBUG costrd => bcostrd_1011
  if (bcostrd_1011 < bcostrd_2819)
    goto <bb 94>;
  else
    goto <bb 93>;

  <bb 93>:

  <bb 94>:
  # bm0x_2309 = PHI <bm0x_128(92), bm0x_3127(91), bm0x_3127(93)>
  # bm0y_2310 = PHI <bm0y_147(92), bm0y_2926(91), bm0y_2926(93)>
  # bm1x_2311 = PHI <bm1x_3231(92), bm1x_2862(91), bm1x_2862(93)>
  # bm1y_2312 = PHI <bm1y_3228(92), bm1y_3122(91), bm1y_3122(93)>
  # bcost_1063 = PHI <bcost_2991(92), bcost_3201(91), bcost_2991(93)>
  # bcostrd_1076 = PHI <bcostrd_1011(92), bcostrd_2819(91), bcostrd_2819(93)>
  # DEBUG bcostrd => bcostrd_1076
  # DEBUG bcost => bcost_1063
  # DEBUG bm1y => bm1y_2312
  # DEBUG bm1x => bm1x_2311
  # DEBUG bm0y => bm0y_2310
  # DEBUG bm0x => bm0x_2309
  if (pass_3229 == 0)
    goto <bb 95>;
  else
    goto <bb 96>;

  <bb 95>:
  pretmp_3806 = visited[prephitmp_4529][prephitmp_4085][prephitmp_3813];
  goto <bb 97>;

  <bb 96>:
  # bcost_2786 = PHI <bcost_1063(94), bcost_3204(90)>
  # bcostrd_3021 = PHI <bcostrd_1076(94), bcostrd_3202(90)>
  # bm0x_3119 = PHI <bm0x_2309(94), bm0x_3124(90)>
  # bm0y_3120 = PHI <bm0y_2310(94), bm0y_3125(90)>
  # bm1x_2828 = PHI <bm1x_2311(94), bm1x_2958(90)>
  # bm1y_3040 = PHI <bm1y_2312(94), bm1y_2894(90)>
  # prephitmp_3808 = PHI <prephitmp_3813(94), prephitmp_4471(90)>
  # prephitmp_3809 = PHI <prephitmp_3814(94), prephitmp_3822(90)>
  # prephitmp_3810 = PHI <prephitmp_3816(94), prephitmp_4089(90)>
  # prephitmp_3811 = PHI <prephitmp_3818(94), prephitmp_4531(90)>
  # prephitmp_4078 = PHI <prephitmp_4083(94), prephitmp_3821(90)>
  # prephitmp_4080 = PHI <prephitmp_4084(94), prephitmp_3823(90)>
  # prephitmp_4082 = PHI <prephitmp_4085(94), prephitmp_3824(90)>
  # prephitmp_4249 = PHI <prephitmp_4250(94), prephitmp_4087(90)>
  # prephitmp_4372 = PHI <prephitmp_4375(94), prephitmp_4252(90)>
  # prephitmp_4374 = PHI <prephitmp_4376(94), prephitmp_4254(90)>
  # prephitmp_4468 = PHI <prephitmp_4469(94), prephitmp_4378(90)>
  # prephitmp_4528 = PHI <prephitmp_4529(94), prephitmp_4473(90)>
  # DEBUG bcostrd => bcostrd_3021
  # DEBUG bcost => bcost_2786
  # DEBUG bm1y => bm1y_3040
  # DEBUG bm1x => bm1x_2828
  # DEBUG bm0y => bm0y_3120
  # DEBUG bm0x => bm0x_3119
  _1016 = visited[prephitmp_4528][prephitmp_4082][prephitmp_3808];
  _1017 = (int) _1016;
  _1019 = _1017 >> prephitmp_3809;
  _1020 = _1019 & 1;
  if (_1020 == 0)
    goto <bb 97>;
  else
    goto <bb 102>;

  <bb 97>:
  # bcost_3022 = PHI <bcost_1063(95), bcost_2786(96)>
  # bcostrd_3198 = PHI <bcostrd_1076(95), bcostrd_3021(96)>
  # bm0x_3123 = PHI <bm0x_2309(95), bm0x_3119(96)>
  # bm0y_3121 = PHI <bm0y_2310(95), bm0y_3120(96)>
  # bm1x_2795 = PHI <bm1x_2311(95), bm1x_2828(96)>
  # bm1y_3039 = PHI <bm1y_2312(95), bm1y_3040(96)>
  # prephitmp_3800 = PHI <prephitmp_3813(95), prephitmp_3808(96)>
  # prephitmp_3801 = PHI <prephitmp_3814(95), prephitmp_3809(96)>
  # prephitmp_3803 = PHI <prephitmp_4085(95), prephitmp_4082(96)>
  # prephitmp_3805 = PHI <prephitmp_4529(95), prephitmp_4528(96)>
  # prephitmp_3807 = PHI <pretmp_3806(95), _1016(96)>
  # prephitmp_4075 = PHI <prephitmp_3816(95), prephitmp_3810(96)>
  # prephitmp_4076 = PHI <prephitmp_3818(95), prephitmp_3811(96)>
  # prephitmp_4246 = PHI <prephitmp_4083(95), prephitmp_4078(96)>
  # prephitmp_4247 = PHI <prephitmp_4084(95), prephitmp_4080(96)>
  # prephitmp_4370 = PHI <prephitmp_4250(95), prephitmp_4249(96)>
  # prephitmp_4465 = PHI <prephitmp_4375(95), prephitmp_4372(96)>
  # prephitmp_4466 = PHI <prephitmp_4376(95), prephitmp_4374(96)>
  # prephitmp_4526 = PHI <prephitmp_4469(95), prephitmp_4468(96)>
  # DEBUG i0 => 0
  # DEBUG i1 => 4
  _1025 = (signed char) prephitmp_3807;
  _1027 = 1 << prephitmp_3801;
  _1028 = (signed char) _1027;
  _1029 = _1025 | _1028;
  _1030 = (unsigned char) _1029;
  visited[prephitmp_3805][prephitmp_3803][prephitmp_3800] = _1030;
  _1031 = h_2(D)->mc.avg[_12];
  _1032 = stride1[4];
  _1033 = stride0[0];
  _1031 (&pix, bw_19, _170, _1033, src1$4_3219, _1032, i_weight_5(D));
  _1034 = h_2(D)->pixf.mbcmp[_12];
  _1035 = m0_3(D)->p_fenc[0];
  _1036 = _1034 (_1035, 16, &pix, bw_19);
  _1037 = (long unsigned int) bm0x_3230;
  _1038 = _1037 * 2;
  _1039 = _1038 + 18446744073709551614;
  _1040 = p_cost_m0x_30 + _1039;
  _1041 = *_1040;
  _1042 = (int) _1041;
  _1043 = _1036 + _1042;
  _1044 = (long unsigned int) bm0y_3227;
  _1045 = _1044 * 2;
  _1046 = _1045 + 18446744073709551614;
  _1047 = p_cost_m0y_37 + _1046;
  _1048 = *_1047;
  _1049 = (int) _1048;
  _1050 = _1043 + _1049;
  _1051 = (long unsigned int) bm1x_3231;
  _1052 = _1051 * 2;
  _1053 = p_cost_m1x_45 + _1052;
  _1054 = *_1053;
  _1055 = (int) _1054;
  _1056 = _1050 + _1055;
  _1057 = (long unsigned int) bm1y_3228;
  _1058 = _1057 * 2;
  _1059 = p_cost_m1y_52 + _1058;
  _1060 = *_1059;
  _1061 = (int) _1060;
  bcost_1062 = _1056 + _1061;
  # DEBUG cost => bcost_1062
  _1064 = bcost_3022 * 17;
  _1065 = _1064 / 16;
  if (bcost_1062 < _1065)
    goto <bb 98>;
  else
    goto <bb 100>;

  <bb 98>:
  bcost_2992 = MIN_EXPR <bcost_1062, bcost_3022>;
  # DEBUG bcost => bcost_2992
  # DEBUG a => bm0x_139
  # DEBUG b => bm0y_155
  _1066 = bm0x_139 & 65535;
  _1067 = bm0y_155 << 16;
  _1068 = _1066 + _1067;
  _1069 = (unsigned int) _1068;
  # DEBUG a => NULL
  # DEBUG b => NULL
  MEM[(uint32_t *)cache0_mv2_16] = _1069;
  MEM[(uint32_t *)cache0_mv_11] = _1069;
  # DEBUG a => bm1x_3231
  # DEBUG b => bm1y_3228
  _1070 = bm1x_3231 & 65535;
  _1071 = bm1y_3228 << 16;
  _1072 = _1070 + _1071;
  _1073 = (unsigned int) _1072;
  # DEBUG a => NULL
  # DEBUG b => NULL
  MEM[(uint32_t *)cache1_mv2_18] = _1073;
  MEM[(uint32_t *)cache1_mv_17] = _1073;
  _1074 = m0_3(D)->i_pixel;
  bcostrd_1075 = x264_rd_cost_part (h_2(D), i_lambda2_7(D), i8_6(D), _1074);
  # DEBUG costrd => bcostrd_1075
  if (bcostrd_1075 < bcostrd_3198)
    goto <bb 100>;
  else
    goto <bb 99>;

  <bb 99>:

  <bb 100>:
  # bm0x_2314 = PHI <bm0x_139(98), bm0x_3123(97), bm0x_3123(99)>
  # bm0y_2315 = PHI <bm0y_155(98), bm0y_3121(97), bm0y_3121(99)>
  # bm1x_2316 = PHI <bm1x_3231(98), bm1x_2795(97), bm1x_2795(99)>
  # bm1y_2317 = PHI <bm1y_3228(98), bm1y_3039(97), bm1y_3039(99)>
  # bcost_1127 = PHI <bcost_2992(98), bcost_3022(97), bcost_2992(99)>
  # bcostrd_1140 = PHI <bcostrd_1075(98), bcostrd_3198(97), bcostrd_3198(99)>
  # DEBUG bcostrd => bcostrd_1140
  # DEBUG bcost => bcost_1127
  # DEBUG bm1y => bm1y_2317
  # DEBUG bm1x => bm1x_2316
  # DEBUG bm0y => bm0y_2315
  # DEBUG bm0x => bm0x_2314
  if (pass_3229 == 0)
    goto <bb 101>;
  else
    goto <bb 102>;

  <bb 101>:
  pretmp_3794 = visited[prephitmp_4076][prephitmp_4465][prephitmp_3800];
  goto <bb 103>;

  <bb 102>:
  # bcost_3196 = PHI <bcost_1127(100), bcost_2786(96)>
  # bcostrd_3197 = PHI <bcostrd_1140(100), bcostrd_3021(96)>
  # bm0x_3117 = PHI <bm0x_2314(100), bm0x_3119(96)>
  # bm0y_3118 = PHI <bm0y_2315(100), bm0y_3120(96)>
  # bm1x_2927 = PHI <bm1x_2316(100), bm1x_2828(96)>
  # bm1y_2863 = PHI <bm1y_2317(100), bm1y_3040(96)>
  # prephitmp_3796 = PHI <prephitmp_3800(100), prephitmp_3808(96)>
  # prephitmp_3797 = PHI <prephitmp_3801(100), prephitmp_3809(96)>
  # prephitmp_3798 = PHI <prephitmp_3803(100), prephitmp_4082(96)>
  # prephitmp_3799 = PHI <prephitmp_3805(100), prephitmp_4528(96)>
  # prephitmp_4072 = PHI <prephitmp_4075(100), prephitmp_3810(96)>
  # prephitmp_4074 = PHI <prephitmp_4076(100), prephitmp_3811(96)>
  # prephitmp_4243 = PHI <prephitmp_4246(100), prephitmp_4078(96)>
  # prephitmp_4245 = PHI <prephitmp_4247(100), prephitmp_4080(96)>
  # prephitmp_4369 = PHI <prephitmp_4370(100), prephitmp_4249(96)>
  # prephitmp_4462 = PHI <prephitmp_4465(100), prephitmp_4372(96)>
  # prephitmp_4464 = PHI <prephitmp_4466(100), prephitmp_4374(96)>
  # prephitmp_4525 = PHI <prephitmp_4526(100), prephitmp_4468(96)>
  # DEBUG bcostrd => bcostrd_3197
  # DEBUG bcost => bcost_3196
  # DEBUG bm1y => bm1y_2863
  # DEBUG bm1x => bm1x_2927
  # DEBUG bm0y => bm0y_3118
  # DEBUG bm0x => bm0x_3117
  _1080 = visited[prephitmp_4074][prephitmp_4462][prephitmp_3796];
  _1081 = (int) _1080;
  _1083 = _1081 >> prephitmp_4525;
  _1084 = _1083 & 1;
  if (_1084 == 0)
    goto <bb 103>;
  else
    goto <bb 108>;

  <bb 103>:
  # bcost_3199 = PHI <bcost_1127(101), bcost_3196(102)>
  # bcostrd_2918 = PHI <bcostrd_1140(101), bcostrd_3197(102)>
  # bm0x_3115 = PHI <bm0x_2314(101), bm0x_3117(102)>
  # bm0y_3116 = PHI <bm0y_2315(101), bm0y_3118(102)>
  # bm1x_2959 = PHI <bm1x_2316(101), bm1x_2927(102)>
  # bm1y_2895 = PHI <bm1y_2317(101), bm1y_2863(102)>
  # prephitmp_3788 = PHI <prephitmp_4465(101), prephitmp_4462(102)>
  # prephitmp_3789 = PHI <prephitmp_3800(101), prephitmp_3796(102)>
  # prephitmp_3791 = PHI <prephitmp_4526(101), prephitmp_4525(102)>
  # prephitmp_3793 = PHI <prephitmp_4076(101), prephitmp_4074(102)>
  # prephitmp_3795 = PHI <pretmp_3794(101), _1080(102)>
  # prephitmp_4068 = PHI <prephitmp_3801(101), prephitmp_3797(102)>
  # prephitmp_4069 = PHI <prephitmp_3803(101), prephitmp_3798(102)>
  # prephitmp_4070 = PHI <prephitmp_3805(101), prephitmp_3799(102)>
  # prephitmp_4241 = PHI <prephitmp_4075(101), prephitmp_4072(102)>
  # prephitmp_4366 = PHI <prephitmp_4246(101), prephitmp_4243(102)>
  # prephitmp_4367 = PHI <prephitmp_4247(101), prephitmp_4245(102)>
  # prephitmp_4460 = PHI <prephitmp_4370(101), prephitmp_4369(102)>
  # prephitmp_4523 = PHI <prephitmp_4466(101), prephitmp_4464(102)>
  # DEBUG i0 => 7
  # DEBUG i1 => 5
  _1089 = (signed char) prephitmp_3795;
  _1091 = 1 << prephitmp_3791;
  _1092 = (signed char) _1091;
  _1093 = _1089 | _1092;
  _1094 = (unsigned char) _1093;
  visited[prephitmp_3793][prephitmp_3788][prephitmp_3789] = _1094;
  _1095 = h_2(D)->mc.avg[_12];
  _1096 = stride1[5];
  _1097 = stride0[7];
  _1095 (&pix, bw_19, _131, _1097, _153, _1096, i_weight_5(D));
  _1098 = h_2(D)->pixf.mbcmp[_12];
  _1099 = m0_3(D)->p_fenc[0];
  _1100 = _1098 (_1099, 16, &pix, bw_19);
  _1101 = (sizetype) bm0x_3230;
  _1102 = _1101 + 1;
  _1103 = _1102 * 2;
  _1104 = p_cost_m0x_30 + _1103;
  _1105 = *_1104;
  _1106 = (int) _1105;
  _1107 = _1100 + _1106;
  _1108 = (long unsigned int) bm0y_3227;
  _1109 = _1108 * 2;
  _1110 = p_cost_m0y_37 + _1109;
  _1111 = *_1110;
  _1112 = (int) _1111;
  _1113 = _1107 + _1112;
  _1114 = (long unsigned int) bm1x_3231;
  _1115 = _1114 * 2;
  _1116 = p_cost_m1x_45 + _1115;
  _1117 = *_1116;
  _1118 = (int) _1117;
  _1119 = _1113 + _1118;
  _1120 = (sizetype) bm1y_3228;
  _1121 = _1120 + 1;
  _1122 = _1121 * 2;
  _1123 = p_cost_m1y_52 + _1122;
  _1124 = *_1123;
  _1125 = (int) _1124;
  bcost_1126 = _1119 + _1125;
  # DEBUG cost => bcost_1126
  _1128 = bcost_3199 * 17;
  _1129 = _1128 / 16;
  if (bcost_1126 < _1129)
    goto <bb 104>;
  else
    goto <bb 106>;

  <bb 104>:
  bcost_3337 = MIN_EXPR <bcost_1126, bcost_3199>;
  # DEBUG bcost => bcost_3337
  # DEBUG a => bm0x_128
  # DEBUG b => bm0y_3227
  _1130 = bm0x_128 & 65535;
  _1131 = bm0y_3227 << 16;
  _1132 = _1130 + _1131;
  _1133 = (unsigned int) _1132;
  # DEBUG a => NULL
  # DEBUG b => NULL
  MEM[(uint32_t *)cache0_mv2_16] = _1133;
  MEM[(uint32_t *)cache0_mv_11] = _1133;
  # DEBUG a => bm1x_3231
  # DEBUG b => bm1y_151
  _1134 = bm1x_3231 & 65535;
  _1135 = bm1y_151 << 16;
  _1136 = _1134 + _1135;
  _1137 = (unsigned int) _1136;
  # DEBUG a => NULL
  # DEBUG b => NULL
  MEM[(uint32_t *)cache1_mv2_18] = _1137;
  MEM[(uint32_t *)cache1_mv_17] = _1137;
  _1138 = m0_3(D)->i_pixel;
  bcostrd_1139 = x264_rd_cost_part (h_2(D), i_lambda2_7(D), i8_6(D), _1138);
  # DEBUG costrd => bcostrd_1139
  if (bcostrd_1139 < bcostrd_2918)
    goto <bb 106>;
  else
    goto <bb 105>;

  <bb 105>:

  <bb 106>:
  # bm0x_2319 = PHI <bm0x_128(104), bm0x_3115(103), bm0x_3115(105)>
  # bm0y_2320 = PHI <bm0y_3227(104), bm0y_3116(103), bm0y_3116(105)>
  # bm1x_2321 = PHI <bm1x_3231(104), bm1x_2959(103), bm1x_2959(105)>
  # bm1y_2322 = PHI <bm1y_151(104), bm1y_2895(103), bm1y_2895(105)>
  # bcost_1191 = PHI <bcost_3337(104), bcost_3199(103), bcost_3337(105)>
  # bcostrd_1204 = PHI <bcostrd_1139(104), bcostrd_2918(103), bcostrd_2918(105)>
  # DEBUG bcostrd => bcostrd_1204
  # DEBUG bcost => bcost_1191
  # DEBUG bm1y => bm1y_2322
  # DEBUG bm1x => bm1x_2321
  # DEBUG bm0y => bm0y_2320
  # DEBUG bm0x => bm0x_2319
  if (pass_3229 == 0)
    goto <bb 107>;
  else
    goto <bb 108>;

  <bb 107>:
  pretmp_3781 = visited[prephitmp_4070][prephitmp_3788][prephitmp_3789];
  goto <bb 109>;

  <bb 108>:
  # bcost_2950 = PHI <bcost_1191(106), bcost_3196(102)>
  # bcostrd_2886 = PHI <bcostrd_1204(106), bcostrd_3197(102)>
  # bm0x_3113 = PHI <bm0x_2319(106), bm0x_3117(102)>
  # bm0y_3114 = PHI <bm0y_2320(106), bm0y_3118(102)>
  # bm1x_3112 = PHI <bm1x_2321(106), bm1x_2927(102)>
  # bm1y_2796 = PHI <bm1y_2322(106), bm1y_2863(102)>
  # prephitmp_3783 = PHI <prephitmp_3788(106), prephitmp_4462(102)>
  # prephitmp_3784 = PHI <prephitmp_3789(106), prephitmp_3796(102)>
  # prephitmp_3785 = PHI <prephitmp_3791(106), prephitmp_4525(102)>
  # prephitmp_3786 = PHI <prephitmp_3793(106), prephitmp_4074(102)>
  # prephitmp_4063 = PHI <prephitmp_4068(106), prephitmp_3797(102)>
  # prephitmp_4065 = PHI <prephitmp_4069(106), prephitmp_3798(102)>
  # prephitmp_4067 = PHI <prephitmp_4070(106), prephitmp_3799(102)>
  # prephitmp_4240 = PHI <prephitmp_4241(106), prephitmp_4072(102)>
  # prephitmp_4363 = PHI <prephitmp_4366(106), prephitmp_4243(102)>
  # prephitmp_4365 = PHI <prephitmp_4367(106), prephitmp_4245(102)>
  # prephitmp_4459 = PHI <prephitmp_4460(106), prephitmp_4369(102)>
  # prephitmp_4522 = PHI <prephitmp_4523(106), prephitmp_4464(102)>
  # DEBUG bcostrd => bcostrd_2886
  # DEBUG bcost => bcost_2950
  # DEBUG bm1y => bm1y_2796
  # DEBUG bm1x => bm1x_3112
  # DEBUG bm0y => bm0y_3114
  # DEBUG bm0x => bm0x_3113
  _1144 = visited[prephitmp_4067][prephitmp_3783][prephitmp_3784];
  _1145 = (int) _1144;
  _1147 = _1145 >> prephitmp_4522;
  _1148 = _1147 & 1;
  if (_1148 == 0)
    goto <bb 109>;
  else
    goto <bb 114>;

  <bb 109>:
  # bcost_2854 = PHI <bcost_1191(107), bcost_2950(108)>
  # bcostrd_3194 = PHI <bcostrd_1204(107), bcostrd_2886(108)>
  # bm0x_3110 = PHI <bm0x_2319(107), bm0x_3113(108)>
  # bm0y_3111 = PHI <bm0y_2320(107), bm0y_3114(108)>
  # bm1x_2829 = PHI <bm1x_2321(107), bm1x_3112(108)>
  # bm1y_3042 = PHI <bm1y_2322(107), bm1y_2796(108)>
  # prephitmp_3775 = PHI <prephitmp_3788(107), prephitmp_3783(108)>
  # prephitmp_3776 = PHI <prephitmp_3789(107), prephitmp_3784(108)>
  # prephitmp_3778 = PHI <prephitmp_4523(107), prephitmp_4522(108)>
  # prephitmp_3780 = PHI <prephitmp_4070(107), prephitmp_4067(108)>
  # prephitmp_3782 = PHI <pretmp_3781(107), _1144(108)>
  # prephitmp_4060 = PHI <prephitmp_3791(107), prephitmp_3785(108)>
  # prephitmp_4061 = PHI <prephitmp_3793(107), prephitmp_3786(108)>
  # prephitmp_4237 = PHI <prephitmp_4068(107), prephitmp_4063(108)>
  # prephitmp_4238 = PHI <prephitmp_4069(107), prephitmp_4065(108)>
  # prephitmp_4361 = PHI <prephitmp_4241(107), prephitmp_4240(108)>
  # prephitmp_4456 = PHI <prephitmp_4366(107), prephitmp_4363(108)>
  # prephitmp_4457 = PHI <prephitmp_4367(107), prephitmp_4365(108)>
  # prephitmp_4520 = PHI <prephitmp_4460(107), prephitmp_4459(108)>
  # DEBUG i0 => 1
  # DEBUG i1 => 3
  _1153 = (signed char) prephitmp_3782;
  _1155 = 1 << prephitmp_3778;
  _1156 = (signed char) _1155;
  _1157 = _1153 | _1156;
  _1158 = (unsigned char) _1157;
  visited[prephitmp_3780][prephitmp_3775][prephitmp_3776] = _1158;
  _1159 = h_2(D)->mc.avg[_12];
  _1160 = stride1[3];
  _1161 = stride0[1];
  _1159 (&pix, bw_19, _141, _1161, _161, _1160, i_weight_5(D));
  _1162 = h_2(D)->pixf.mbcmp[_12];
  _1163 = m0_3(D)->p_fenc[0];
  _1164 = _1162 (_1163, 16, &pix, bw_19);
  _1165 = (long unsigned int) bm0x_3230;
  _1166 = _1165 * 2;
  _1167 = _1166 + 18446744073709551614;
  _1168 = p_cost_m0x_30 + _1167;
  _1169 = *_1168;
  _1170 = (int) _1169;
  _1171 = _1164 + _1170;
  _1172 = (long unsigned int) bm0y_3227;
  _1173 = _1172 * 2;
  _1174 = p_cost_m0y_37 + _1173;
  _1175 = *_1174;
  _1176 = (int) _1175;
  _1177 = _1171 + _1176;
  _1178 = (long unsigned int) bm1x_3231;
  _1179 = _1178 * 2;
  _1180 = p_cost_m1x_45 + _1179;
  _1181 = *_1180;
  _1182 = (int) _1181;
  _1183 = _1177 + _1182;
  _1184 = (long unsigned int) bm1y_3228;
  _1185 = _1184 * 2;
  _1186 = _1185 + 18446744073709551614;
  _1187 = p_cost_m1y_52 + _1186;
  _1188 = *_1187;
  _1189 = (int) _1188;
  bcost_1190 = _1183 + _1189;
  # DEBUG cost => bcost_1190
  _1192 = bcost_2854 * 17;
  _1193 = _1192 / 16;
  if (bcost_1190 < _1193)
    goto <bb 110>;
  else
    goto <bb 112>;

  <bb 110>:
  bcost_3336 = MIN_EXPR <bcost_1190, bcost_2854>;
  # DEBUG bcost => bcost_3336
  # DEBUG a => bm0x_139
  # DEBUG b => bm0y_3227
  _1194 = bm0x_139 & 65535;
  _1195 = bm0y_3227 << 16;
  _1196 = _1194 + _1195;
  _1197 = (unsigned int) _1196;
  # DEBUG a => NULL
  # DEBUG b => NULL
  MEM[(uint32_t *)cache0_mv2_16] = _1197;
  MEM[(uint32_t *)cache0_mv_11] = _1197;
  # DEBUG a => bm1x_3231
  # DEBUG b => bm1y_159
  _1198 = bm1x_3231 & 65535;
  _1199 = bm1y_159 << 16;
  _1200 = _1198 + _1199;
  _1201 = (unsigned int) _1200;
  # DEBUG a => NULL
  # DEBUG b => NULL
  MEM[(uint32_t *)cache1_mv2_18] = _1201;
  MEM[(uint32_t *)cache1_mv_17] = _1201;
  _1202 = m0_3(D)->i_pixel;
  bcostrd_1203 = x264_rd_cost_part (h_2(D), i_lambda2_7(D), i8_6(D), _1202);
  # DEBUG costrd => bcostrd_1203
  if (bcostrd_1203 < bcostrd_3194)
    goto <bb 112>;
  else
    goto <bb 111>;

  <bb 111>:

  <bb 112>:
  # bm0x_2324 = PHI <bm0x_139(110), bm0x_3110(109), bm0x_3110(111)>
  # bm0y_2325 = PHI <bm0y_3227(110), bm0y_3111(109), bm0y_3111(111)>
  # bm1x_2326 = PHI <bm1x_3231(110), bm1x_2829(109), bm1x_2829(111)>
  # bm1y_2327 = PHI <bm1y_159(110), bm1y_3042(109), bm1y_3042(111)>
  # bcost_1255 = PHI <bcost_3336(110), bcost_2854(109), bcost_3336(111)>
  # bcostrd_1268 = PHI <bcostrd_1203(110), bcostrd_3194(109), bcostrd_3194(111)>
  # DEBUG bcostrd => bcostrd_1268
  # DEBUG bcost => bcost_1255
  # DEBUG bm1y => bm1y_2327
  # DEBUG bm1x => bm1x_2326
  # DEBUG bm0y => bm0y_2325
  # DEBUG bm0x => bm0x_2324
  if (pass_3229 == 0)
    goto <bb 113>;
  else
    goto <bb 114>;

  <bb 113>:
  pretmp_3769 = visited[prephitmp_4456][prephitmp_4361][prephitmp_3776];
  goto <bb 115>;

  <bb 114>:
  # bcost_3191 = PHI <bcost_1255(112), bcost_2950(108)>
  # bcostrd_3192 = PHI <bcostrd_1268(112), bcostrd_2886(108)>
  # bm0x_3041 = PHI <bm0x_2324(112), bm0x_3113(108)>
  # bm0y_3106 = PHI <bm0y_2325(112), bm0y_3114(108)>
  # bm1x_3107 = PHI <bm1x_2326(112), bm1x_3112(108)>
  # bm1y_2960 = PHI <bm1y_2327(112), bm1y_2796(108)>
  # prephitmp_3771 = PHI <prephitmp_3775(112), prephitmp_3783(108)>
  # prephitmp_3772 = PHI <prephitmp_3776(112), prephitmp_3784(108)>
  # prephitmp_3773 = PHI <prephitmp_3778(112), prephitmp_4522(108)>
  # prephitmp_3774 = PHI <prephitmp_3780(112), prephitmp_4067(108)>
  # prephitmp_4057 = PHI <prephitmp_4060(112), prephitmp_3785(108)>
  # prephitmp_4059 = PHI <prephitmp_4061(112), prephitmp_3786(108)>
  # prephitmp_4234 = PHI <prephitmp_4237(112), prephitmp_4063(108)>
  # prephitmp_4236 = PHI <prephitmp_4238(112), prephitmp_4065(108)>
  # prephitmp_4360 = PHI <prephitmp_4361(112), prephitmp_4240(108)>
  # prephitmp_4453 = PHI <prephitmp_4456(112), prephitmp_4363(108)>
  # prephitmp_4455 = PHI <prephitmp_4457(112), prephitmp_4365(108)>
  # prephitmp_4519 = PHI <prephitmp_4520(112), prephitmp_4459(108)>
  # DEBUG bcostrd => bcostrd_3192
  # DEBUG bcost => bcost_3191
  # DEBUG bm1y => bm1y_2960
  # DEBUG bm1x => bm1x_3107
  # DEBUG bm0y => bm0y_3106
  # DEBUG bm0x => bm0x_3041
  _1208 = visited[prephitmp_4453][prephitmp_4360][prephitmp_3772];
  _1209 = (int) _1208;
  _1211 = _1209 >> prephitmp_4057;
  _1212 = _1211 & 1;
  if (_1212 == 0)
    goto <bb 115>;
  else
    goto <bb 120>;

  <bb 115>:
  # bcost_3195 = PHI <bcost_1255(113), bcost_3191(114)>
  # bcostrd_3193 = PHI <bcostrd_1268(113), bcostrd_3192(114)>
  # bm0x_3108 = PHI <bm0x_2324(113), bm0x_3041(114)>
  # bm0y_3109 = PHI <bm0y_2325(113), bm0y_3106(114)>
  # bm1x_2928 = PHI <bm1x_2326(113), bm1x_3107(114)>
  # bm1y_2864 = PHI <bm1y_2327(113), bm1y_2960(114)>
  # prephitmp_3763 = PHI <prephitmp_4456(113), prephitmp_4453(114)>
  # prephitmp_3764 = PHI <prephitmp_3776(113), prephitmp_3772(114)>
  # prephitmp_3766 = PHI <prephitmp_4060(113), prephitmp_4057(114)>
  # prephitmp_3768 = PHI <prephitmp_4361(113), prephitmp_4360(114)>
  # prephitmp_3770 = PHI <pretmp_3769(113), _1208(114)>
  # prephitmp_4053 = PHI <prephitmp_3775(113), prephitmp_3771(114)>
  # prephitmp_4054 = PHI <prephitmp_3778(113), prephitmp_3773(114)>
  # prephitmp_4055 = PHI <prephitmp_3780(113), prephitmp_3774(114)>
  # prephitmp_4232 = PHI <prephitmp_4061(113), prephitmp_4059(114)>
  # prephitmp_4357 = PHI <prephitmp_4237(113), prephitmp_4234(114)>
  # prephitmp_4358 = PHI <prephitmp_4238(113), prephitmp_4236(114)>
  # prephitmp_4517 = PHI <prephitmp_4457(113), prephitmp_4455(114)>
  # prephitmp_4574 = PHI <prephitmp_4520(113), prephitmp_4519(114)>
  # DEBUG i0 => 5
  # DEBUG i1 => 5
  _1217 = (signed char) prephitmp_3770;
  _1219 = 1 << prephitmp_3766;
  _1220 = (signed char) _1219;
  _1221 = _1217 | _1220;
  _1222 = (unsigned char) _1221;
  visited[prephitmp_3763][prephitmp_3768][prephitmp_3764] = _1222;
  _1223 = h_2(D)->mc.avg[_12];
  _1224 = stride1[5];
  _1225 = stride0[5];
  _1223 (&pix, bw_19, _149, _1225, _153, _1224, i_weight_5(D));
  _1226 = h_2(D)->pixf.mbcmp[_12];
  _1227 = m0_3(D)->p_fenc[0];
  _1228 = _1226 (_1227, 16, &pix, bw_19);
  _1229 = (long unsigned int) bm0x_3230;
  _1230 = _1229 * 2;
  _1231 = p_cost_m0x_30 + _1230;
  _1232 = *_1231;
  _1233 = (int) _1232;
  _1234 = _1228 + _1233;
  _1235 = (sizetype) bm0y_3227;
  _1236 = _1235 + 1;
  _1237 = _1236 * 2;
  _1238 = p_cost_m0y_37 + _1237;
  _1239 = *_1238;
  _1240 = (int) _1239;
  _1241 = _1234 + _1240;
  _1242 = (long unsigned int) bm1x_3231;
  _1243 = _1242 * 2;
  _1244 = p_cost_m1x_45 + _1243;
  _1245 = *_1244;
  _1246 = (int) _1245;
  _1247 = _1241 + _1246;
  _1248 = (sizetype) bm1y_3228;
  _1249 = _1248 + 1;
  _1250 = _1249 * 2;
  _1251 = p_cost_m1y_52 + _1250;
  _1252 = *_1251;
  _1253 = (int) _1252;
  bcost_1254 = _1247 + _1253;
  # DEBUG cost => bcost_1254
  _1256 = bcost_3195 * 17;
  _1257 = _1256 / 16;
  if (bcost_1254 < _1257)
    goto <bb 116>;
  else
    goto <bb 118>;

  <bb 116>:
  bcost_3339 = MIN_EXPR <bcost_1254, bcost_3195>;
  # DEBUG bcost => bcost_3339
  # DEBUG a => bm0x_3230
  # DEBUG b => bm0y_147
  _1258 = bm0x_3230 & 65535;
  _1259 = bm0y_147 << 16;
  _1260 = _1258 + _1259;
  _1261 = (unsigned int) _1260;
  # DEBUG a => NULL
  # DEBUG b => NULL
  MEM[(uint32_t *)cache0_mv2_16] = _1261;
  MEM[(uint32_t *)cache0_mv_11] = _1261;
  # DEBUG a => bm1x_3231
  # DEBUG b => bm1y_151
  _1262 = bm1x_3231 & 65535;
  _1263 = bm1y_151 << 16;
  _1264 = _1262 + _1263;
  _1265 = (unsigned int) _1264;
  # DEBUG a => NULL
  # DEBUG b => NULL
  MEM[(uint32_t *)cache1_mv2_18] = _1265;
  MEM[(uint32_t *)cache1_mv_17] = _1265;
  _1266 = m0_3(D)->i_pixel;
  bcostrd_1267 = x264_rd_cost_part (h_2(D), i_lambda2_7(D), i8_6(D), _1266);
  # DEBUG costrd => bcostrd_1267
  if (bcostrd_1267 < bcostrd_3193)
    goto <bb 118>;
  else
    goto <bb 117>;

  <bb 117>:

  <bb 118>:
  # bm0x_2329 = PHI <bm0x_3230(116), bm0x_3108(115), bm0x_3108(117)>
  # bm0y_2330 = PHI <bm0y_147(116), bm0y_3109(115), bm0y_3109(117)>
  # bm1x_2331 = PHI <bm1x_3231(116), bm1x_2928(115), bm1x_2928(117)>
  # bm1y_2332 = PHI <bm1y_151(116), bm1y_2864(115), bm1y_2864(117)>
  # bcost_1319 = PHI <bcost_3339(116), bcost_3195(115), bcost_3339(117)>
  # bcostrd_1332 = PHI <bcostrd_1267(116), bcostrd_3193(115), bcostrd_3193(117)>
  # DEBUG bcostrd => bcostrd_1332
  # DEBUG bcost => bcost_1319
  # DEBUG bm1y => bm1y_2332
  # DEBUG bm1x => bm1x_2331
  # DEBUG bm0y => bm0y_2330
  # DEBUG bm0x => bm0x_2329
  if (pass_3229 == 0)
    goto <bb 119>;
  else
    goto <bb 120>;

  <bb 119>:
  pretmp_3756 = visited[prephitmp_3763][prephitmp_4358][prephitmp_3764];
  goto <bb 121>;

  <bb 120>:
  # bcost_2820 = PHI <bcost_1319(118), bcost_3191(114)>
  # bcostrd_3024 = PHI <bcostrd_1332(118), bcostrd_3192(114)>
  # bm0x_2896 = PHI <bm0x_2329(118), bm0x_3041(114)>
  # bm0y_3101 = PHI <bm0y_2330(118), bm0y_3106(114)>
  # bm1x_3102 = PHI <bm1x_2331(118), bm1x_3107(114)>
  # bm1y_2830 = PHI <bm1y_2332(118), bm1y_2960(114)>
  # prephitmp_3758 = PHI <prephitmp_3763(118), prephitmp_4453(114)>
  # prephitmp_3759 = PHI <prephitmp_3764(118), prephitmp_3772(114)>
  # prephitmp_3760 = PHI <prephitmp_3766(118), prephitmp_4057(114)>
  # prephitmp_3761 = PHI <prephitmp_3768(118), prephitmp_4360(114)>
  # prephitmp_4048 = PHI <prephitmp_4053(118), prephitmp_3771(114)>
  # prephitmp_4050 = PHI <prephitmp_4054(118), prephitmp_3773(114)>
  # prephitmp_4052 = PHI <prephitmp_4055(118), prephitmp_3774(114)>
  # prephitmp_4231 = PHI <prephitmp_4232(118), prephitmp_4059(114)>
  # prephitmp_4354 = PHI <prephitmp_4357(118), prephitmp_4234(114)>
  # prephitmp_4356 = PHI <prephitmp_4358(118), prephitmp_4236(114)>
  # prephitmp_4516 = PHI <prephitmp_4517(118), prephitmp_4455(114)>
  # prephitmp_4573 = PHI <prephitmp_4574(118), prephitmp_4519(114)>
  # DEBUG bcostrd => bcostrd_3024
  # DEBUG bcost => bcost_2820
  # DEBUG bm1y => bm1y_2830
  # DEBUG bm1x => bm1x_3102
  # DEBUG bm0y => bm0y_3101
  # DEBUG bm0x => bm0x_2896
  _1272 = visited[prephitmp_3758][prephitmp_4356][prephitmp_3759];
  _1273 = (int) _1272;
  _1275 = _1273 >> prephitmp_4050;
  _1276 = _1275 & 1;
  if (_1276 == 0)
    goto <bb 121>;
  else
    goto <bb 126>;

  <bb 121>:
  # bcost_2787 = PHI <bcost_1319(119), bcost_2820(120)>
  # bcostrd_3023 = PHI <bcostrd_1332(119), bcostrd_3024(120)>
  # bm0x_3104 = PHI <bm0x_2329(119), bm0x_2896(120)>
  # bm0y_3105 = PHI <bm0y_2330(119), bm0y_3101(120)>
  # bm1x_3103 = PHI <bm1x_2331(119), bm1x_3102(120)>
  # bm1y_2797 = PHI <bm1y_2332(119), bm1y_2830(120)>
  # prephitmp_3750 = PHI <prephitmp_3763(119), prephitmp_3758(120)>
  # prephitmp_3751 = PHI <prephitmp_3764(119), prephitmp_3759(120)>
  # prephitmp_3753 = PHI <prephitmp_4054(119), prephitmp_4050(120)>
  # prephitmp_3755 = PHI <prephitmp_4358(119), prephitmp_4356(120)>
  # prephitmp_3757 = PHI <pretmp_3756(119), _1272(120)>
  # prephitmp_4045 = PHI <prephitmp_3766(119), prephitmp_3760(120)>
  # prephitmp_4046 = PHI <prephitmp_3768(119), prephitmp_3761(120)>
  # prephitmp_4228 = PHI <prephitmp_4053(119), prephitmp_4048(120)>
  # prephitmp_4229 = PHI <prephitmp_4055(119), prephitmp_4052(120)>
  # prephitmp_4352 = PHI <prephitmp_4232(119), prephitmp_4231(120)>
  # prephitmp_4451 = PHI <prephitmp_4357(119), prephitmp_4354(120)>
  # prephitmp_4571 = PHI <prephitmp_4517(119), prephitmp_4516(120)>
  # prephitmp_4592 = PHI <prephitmp_4574(119), prephitmp_4573(120)>
  # DEBUG i0 => 3
  # DEBUG i1 => 3
  _1281 = (signed char) prephitmp_3757;
  _1283 = 1 << prephitmp_3753;
  _1284 = (signed char) _1283;
  _1285 = _1281 | _1284;
  _1286 = (unsigned char) _1285;
  visited[prephitmp_3750][prephitmp_3755][prephitmp_3751] = _1286;
  _1287 = h_2(D)->mc.avg[_12];
  _1288 = stride1[3];
  _1289 = stride0[3];
  _1287 (&pix, bw_19, _157, _1289, _161, _1288, i_weight_5(D));
  _1290 = h_2(D)->pixf.mbcmp[_12];
  _1291 = m0_3(D)->p_fenc[0];
  _1292 = _1290 (_1291, 16, &pix, bw_19);
  _1293 = (long unsigned int) bm0x_3230;
  _1294 = _1293 * 2;
  _1295 = p_cost_m0x_30 + _1294;
  _1296 = *_1295;
  _1297 = (int) _1296;
  _1298 = _1292 + _1297;
  _1299 = (long unsigned int) bm0y_3227;
  _1300 = _1299 * 2;
  _1301 = _1300 + 18446744073709551614;
  _1302 = p_cost_m0y_37 + _1301;
  _1303 = *_1302;
  _1304 = (int) _1303;
  _1305 = _1298 + _1304;
  _1306 = (long unsigned int) bm1x_3231;
  _1307 = _1306 * 2;
  _1308 = p_cost_m1x_45 + _1307;
  _1309 = *_1308;
  _1310 = (int) _1309;
  _1311 = _1305 + _1310;
  _1312 = (long unsigned int) bm1y_3228;
  _1313 = _1312 * 2;
  _1314 = _1313 + 18446744073709551614;
  _1315 = p_cost_m1y_52 + _1314;
  _1316 = *_1315;
  _1317 = (int) _1316;
  bcost_1318 = _1311 + _1317;
  # DEBUG cost => bcost_1318
  _1320 = bcost_2787 * 17;
  _1321 = _1320 / 16;
  if (bcost_1318 < _1321)
    goto <bb 122>;
  else
    goto <bb 124>;

  <bb 122>:
  bcost_3335 = MIN_EXPR <bcost_1318, bcost_2787>;
  # DEBUG bcost => bcost_3335
  # DEBUG a => bm0x_3230
  # DEBUG b => bm0y_155
  _1322 = bm0x_3230 & 65535;
  _1323 = bm0y_155 << 16;
  _1324 = _1322 + _1323;
  _1325 = (unsigned int) _1324;
  # DEBUG a => NULL
  # DEBUG b => NULL
  MEM[(uint32_t *)cache0_mv2_16] = _1325;
  MEM[(uint32_t *)cache0_mv_11] = _1325;
  # DEBUG a => bm1x_3231
  # DEBUG b => bm1y_159
  _1326 = bm1x_3231 & 65535;
  _1327 = bm1y_159 << 16;
  _1328 = _1326 + _1327;
  _1329 = (unsigned int) _1328;
  # DEBUG a => NULL
  # DEBUG b => NULL
  MEM[(uint32_t *)cache1_mv2_18] = _1329;
  MEM[(uint32_t *)cache1_mv_17] = _1329;
  _1330 = m0_3(D)->i_pixel;
  bcostrd_1331 = x264_rd_cost_part (h_2(D), i_lambda2_7(D), i8_6(D), _1330);
  # DEBUG costrd => bcostrd_1331
  if (bcostrd_1331 < bcostrd_3023)
    goto <bb 124>;
  else
    goto <bb 123>;

  <bb 123>:

  <bb 124>:
  # bm0x_2334 = PHI <bm0x_3230(122), bm0x_3104(121), bm0x_3104(123)>
  # bm0y_2335 = PHI <bm0y_155(122), bm0y_3105(121), bm0y_3105(123)>
  # bm1x_2336 = PHI <bm1x_3231(122), bm1x_3103(121), bm1x_3103(123)>
  # bm1y_2337 = PHI <bm1y_159(122), bm1y_2797(121), bm1y_2797(123)>
  # bcost_1383 = PHI <bcost_3335(122), bcost_2787(121), bcost_3335(123)>
  # bcostrd_1396 = PHI <bcostrd_1331(122), bcostrd_3023(121), bcostrd_3023(123)>
  # DEBUG bcostrd => bcostrd_1396
  # DEBUG bcost => bcost_1383
  # DEBUG bm1y => bm1y_2337
  # DEBUG bm1x => bm1x_2336
  # DEBUG bm0y => bm0y_2335
  # DEBUG bm0x => bm0x_2334
  if (pass_3229 == 0)
    goto <bb 125>;
  else
    goto <bb 126>;

  <bb 125>:
  pretmp_3744 = visited[prephitmp_4352][prephitmp_4228][prephitmp_4592];
  goto <bb 127>;

  <bb 126>:
  # bcost_3189 = PHI <bcost_1383(124), bcost_2820(120)>
  # bcostrd_3190 = PHI <bcostrd_1396(124), bcostrd_3024(120)>
  # bm0x_3044 = PHI <bm0x_2334(124), bm0x_2896(120)>
  # bm0y_3099 = PHI <bm0y_2335(124), bm0y_3101(120)>
  # bm1x_3100 = PHI <bm1x_2336(124), bm1x_3102(120)>
  # bm1y_2929 = PHI <bm1y_2337(124), bm1y_2830(120)>
  # prephitmp_3746 = PHI <prephitmp_3750(124), prephitmp_3758(120)>
  # prephitmp_3747 = PHI <prephitmp_3751(124), prephitmp_3759(120)>
  # prephitmp_3748 = PHI <prephitmp_3753(124), prephitmp_4050(120)>
  # prephitmp_3749 = PHI <prephitmp_3755(124), prephitmp_4356(120)>
  # prephitmp_4042 = PHI <prephitmp_4045(124), prephitmp_3760(120)>
  # prephitmp_4044 = PHI <prephitmp_4046(124), prephitmp_3761(120)>
  # prephitmp_4225 = PHI <prephitmp_4228(124), prephitmp_4048(120)>
  # prephitmp_4227 = PHI <prephitmp_4229(124), prephitmp_4052(120)>
  # prephitmp_4351 = PHI <prephitmp_4352(124), prephitmp_4231(120)>
  # prephitmp_4450 = PHI <prephitmp_4451(124), prephitmp_4354(120)>
  # prephitmp_4570 = PHI <prephitmp_4571(124), prephitmp_4516(120)>
  # prephitmp_4591 = PHI <prephitmp_4592(124), prephitmp_4573(120)>
  # DEBUG bcostrd => bcostrd_3190
  # DEBUG bcost => bcost_3189
  # DEBUG bm1y => bm1y_2929
  # DEBUG bm1x => bm1x_3100
  # DEBUG bm0y => bm0y_3099
  # DEBUG bm0x => bm0x_3044
  _1336 = visited[prephitmp_4351][prephitmp_4225][prephitmp_4591];
  _1337 = (int) _1336;
  _1339 = _1337 >> prephitmp_4450;
  _1340 = _1339 & 1;
  if (_1340 == 0)
    goto <bb 127>;
  else
    goto <bb 132>;

  <bb 127>:
  # bcost_3187 = PHI <bcost_1383(125), bcost_3189(126)>
  # bcostrd_3188 = PHI <bcostrd_1396(125), bcostrd_3190(126)>
  # bm0x_3043 = PHI <bm0x_2334(125), bm0x_3044(126)>
  # bm0y_3097 = PHI <bm0y_2335(125), bm0y_3099(126)>
  # bm1x_3098 = PHI <bm1x_2336(125), bm1x_3100(126)>
  # bm1y_2961 = PHI <bm1y_2337(125), bm1y_2929(126)>
  # prephitmp_3737 = PHI <prephitmp_4228(125), prephitmp_4225(126)>
  # prephitmp_3739 = PHI <prephitmp_4592(125), prephitmp_4591(126)>
  # prephitmp_3741 = PHI <prephitmp_4451(125), prephitmp_4450(126)>
  # prephitmp_3743 = PHI <prephitmp_4352(125), prephitmp_4351(126)>
  # prephitmp_3745 = PHI <pretmp_3744(125), _1336(126)>
  # prephitmp_4037 = PHI <prephitmp_3750(125), prephitmp_3746(126)>
  # prephitmp_4038 = PHI <prephitmp_3751(125), prephitmp_3747(126)>
  # prephitmp_4039 = PHI <prephitmp_3753(125), prephitmp_3748(126)>
  # prephitmp_4040 = PHI <prephitmp_3755(125), prephitmp_3749(126)>
  # prephitmp_4222 = PHI <prephitmp_4045(125), prephitmp_4042(126)>
  # prephitmp_4223 = PHI <prephitmp_4046(125), prephitmp_4044(126)>
  # prephitmp_4349 = PHI <prephitmp_4229(125), prephitmp_4227(126)>
  # prephitmp_4589 = PHI <prephitmp_4571(125), prephitmp_4570(126)>
  # DEBUG i0 => 7
  # DEBUG i1 => 7
  _1345 = (signed char) prephitmp_3745;
  _1347 = 1 << prephitmp_3741;
  _1348 = (signed char) _1347;
  _1349 = _1345 | _1348;
  _1350 = (unsigned char) _1349;
  visited[prephitmp_3743][prephitmp_3737][prephitmp_3739] = _1350;
  _1351 = h_2(D)->mc.avg[_12];
  _1352 = stride1[7];
  _1353 = stride0[7];
  _1351 (&pix, bw_19, _131, _1353, _137, _1352, i_weight_5(D));
  _1354 = h_2(D)->pixf.mbcmp[_12];
  _1355 = m0_3(D)->p_fenc[0];
  _1356 = _1354 (_1355, 16, &pix, bw_19);
  _1357 = (sizetype) bm0x_3230;
  _1358 = _1357 + 1;
  _1359 = _1358 * 2;
  _1360 = p_cost_m0x_30 + _1359;
  _1361 = *_1360;
  _1362 = (int) _1361;
  _1363 = _1356 + _1362;
  _1364 = (long unsigned int) bm0y_3227;
  _1365 = _1364 * 2;
  _1366 = p_cost_m0y_37 + _1365;
  _1367 = *_1366;
  _1368 = (int) _1367;
  _1369 = _1363 + _1368;
  _1370 = (sizetype) bm1x_3231;
  _1371 = _1370 + 1;
  _1372 = _1371 * 2;
  _1373 = p_cost_m1x_45 + _1372;
  _1374 = *_1373;
  _1375 = (int) _1374;
  _1376 = _1369 + _1375;
  _1377 = (long unsigned int) bm1y_3228;
  _1378 = _1377 * 2;
  _1379 = p_cost_m1y_52 + _1378;
  _1380 = *_1379;
  _1381 = (int) _1380;
  bcost_1382 = _1376 + _1381;
  # DEBUG cost => bcost_1382
  _1384 = bcost_3187 * 17;
  _1385 = _1384 / 16;
  if (bcost_1382 < _1385)
    goto <bb 128>;
  else
    goto <bb 130>;

  <bb 128>:
  bcost_3341 = MIN_EXPR <bcost_1382, bcost_3187>;
  # DEBUG bcost => bcost_3341
  # DEBUG a => bm0x_128
  # DEBUG b => bm0y_3227
  _1386 = bm0x_128 & 65535;
  _1387 = bm0y_3227 << 16;
  _1388 = _1386 + _1387;
  _1389 = (unsigned int) _1388;
  # DEBUG a => NULL
  # DEBUG b => NULL
  MEM[(uint32_t *)cache0_mv2_16] = _1389;
  MEM[(uint32_t *)cache0_mv_11] = _1389;
  # DEBUG a => bm1x_134
  # DEBUG b => bm1y_3228
  _1390 = bm1x_134 & 65535;
  _1391 = bm1y_3228 << 16;
  _1392 = _1390 + _1391;
  _1393 = (unsigned int) _1392;
  # DEBUG a => NULL
  # DEBUG b => NULL
  MEM[(uint32_t *)cache1_mv2_18] = _1393;
  MEM[(uint32_t *)cache1_mv_17] = _1393;
  _1394 = m0_3(D)->i_pixel;
  bcostrd_1395 = x264_rd_cost_part (h_2(D), i_lambda2_7(D), i8_6(D), _1394);
  # DEBUG costrd => bcostrd_1395
  if (bcostrd_1395 < bcostrd_3188)
    goto <bb 130>;
  else
    goto <bb 129>;

  <bb 129>:

  <bb 130>:
  # bm0x_2339 = PHI <bm0x_128(128), bm0x_3043(127), bm0x_3043(129)>
  # bm0y_2340 = PHI <bm0y_3227(128), bm0y_3097(127), bm0y_3097(129)>
  # bm1x_2341 = PHI <bm1x_134(128), bm1x_3098(127), bm1x_3098(129)>
  # bm1y_2342 = PHI <bm1y_3228(128), bm1y_2961(127), bm1y_2961(129)>
  # bcost_1447 = PHI <bcost_3341(128), bcost_3187(127), bcost_3341(129)>
  # bcostrd_1460 = PHI <bcostrd_1395(128), bcostrd_3188(127), bcostrd_3188(129)>
  # DEBUG bcostrd => bcostrd_1460
  # DEBUG bcost => bcost_1447
  # DEBUG bm1y => bm1y_2342
  # DEBUG bm1x => bm1x_2341
  # DEBUG bm0y => bm0y_2340
  # DEBUG bm0x => bm0x_2339
  if (pass_3229 == 0)
    goto <bb 131>;
  else
    goto <bb 132>;

  <bb 131>:
  pretmp_3730 = visited[prephitmp_4349][prephitmp_3737][prephitmp_4589];
  goto <bb 133>;

  <bb 132>:
  # bcost_2919 = PHI <bcost_1447(130), bcost_3189(126)>
  # bcostrd_2855 = PHI <bcostrd_1460(130), bcostrd_3190(126)>
  # bm0x_2865 = PHI <bm0x_2339(130), bm0x_3044(126)>
  # bm0y_3095 = PHI <bm0y_2340(130), bm0y_3099(126)>
  # bm1x_3096 = PHI <bm1x_2341(130), bm1x_3100(126)>
  # bm1y_3094 = PHI <bm1y_2342(130), bm1y_2929(126)>
  # prephitmp_3732 = PHI <prephitmp_3737(130), prephitmp_4225(126)>
  # prephitmp_3733 = PHI <prephitmp_3739(130), prephitmp_4591(126)>
  # prephitmp_3734 = PHI <prephitmp_3741(130), prephitmp_4450(126)>
  # prephitmp_3735 = PHI <prephitmp_3743(130), prephitmp_4351(126)>
  # prephitmp_4030 = PHI <prephitmp_4037(130), prephitmp_3746(126)>
  # prephitmp_4032 = PHI <prephitmp_4038(130), prephitmp_3747(126)>
  # prephitmp_4034 = PHI <prephitmp_4039(130), prephitmp_3748(126)>
  # prephitmp_4036 = PHI <prephitmp_4040(130), prephitmp_3749(126)>
  # prephitmp_4219 = PHI <prephitmp_4222(130), prephitmp_4042(126)>
  # prephitmp_4221 = PHI <prephitmp_4223(130), prephitmp_4044(126)>
  # prephitmp_4348 = PHI <prephitmp_4349(130), prephitmp_4227(126)>
  # prephitmp_4588 = PHI <prephitmp_4589(130), prephitmp_4570(126)>
  # DEBUG bcostrd => bcostrd_2855
  # DEBUG bcost => bcost_2919
  # DEBUG bm1y => bm1y_3094
  # DEBUG bm1x => bm1x_3096
  # DEBUG bm0y => bm0y_3095
  # DEBUG bm0x => bm0x_2865
  _1400 = visited[prephitmp_4348][prephitmp_3732][prephitmp_4588];
  _1401 = (int) _1400;
  _1403 = _1401 >> prephitmp_3734;
  _1404 = _1403 & 1;
  if (_1404 == 0)
    goto <bb 133>;
  else
    goto <bb 138>;

  <bb 133>:
  # bcost_2951 = PHI <bcost_1447(131), bcost_2919(132)>
  # bcostrd_2887 = PHI <bcostrd_1460(131), bcostrd_2855(132)>
  # bm0x_2897 = PHI <bm0x_2339(131), bm0x_2865(132)>
  # bm0y_3092 = PHI <bm0y_2340(131), bm0y_3095(132)>
  # bm1x_3093 = PHI <bm1x_2341(131), bm1x_3096(132)>
  # bm1y_2831 = PHI <bm1y_2342(131), bm1y_3094(132)>
  # prephitmp_3724 = PHI <prephitmp_3737(131), prephitmp_3732(132)>
  # prephitmp_3725 = PHI <prephitmp_3741(131), prephitmp_3734(132)>
  # prephitmp_3727 = PHI <prephitmp_4589(131), prephitmp_4588(132)>
  # prephitmp_3729 = PHI <prephitmp_4349(131), prephitmp_4348(132)>
  # prephitmp_3731 = PHI <pretmp_3730(131), _1400(132)>
  # prephitmp_4027 = PHI <prephitmp_3739(131), prephitmp_3733(132)>
  # prephitmp_4028 = PHI <prephitmp_3743(131), prephitmp_3735(132)>
  # prephitmp_4214 = PHI <prephitmp_4037(131), prephitmp_4030(132)>
  # prephitmp_4215 = PHI <prephitmp_4038(131), prephitmp_4032(132)>
  # prephitmp_4216 = PHI <prephitmp_4039(131), prephitmp_4034(132)>
  # prephitmp_4217 = PHI <prephitmp_4040(131), prephitmp_4036(132)>
  # prephitmp_4345 = PHI <prephitmp_4222(131), prephitmp_4219(132)>
  # prephitmp_4346 = PHI <prephitmp_4223(131), prephitmp_4221(132)>
  # DEBUG i0 => 1
  # DEBUG i1 => 1
  _1409 = (signed char) prephitmp_3731;
  _1411 = 1 << prephitmp_3725;
  _1412 = (signed char) _1411;
  _1413 = _1409 | _1412;
  _1414 = (unsigned char) _1413;
  visited[prephitmp_3729][prephitmp_3724][prephitmp_3727] = _1414;
  _1415 = h_2(D)->mc.avg[_12];
  _1416 = stride1[1];
  _1417 = stride0[1];
  _1415 (&pix, bw_19, _141, _1417, _145, _1416, i_weight_5(D));
  _1418 = h_2(D)->pixf.mbcmp[_12];
  _1419 = m0_3(D)->p_fenc[0];
  _1420 = _1418 (_1419, 16, &pix, bw_19);
  _1421 = (long unsigned int) bm0x_3230;
  _1422 = _1421 * 2;
  _1423 = _1422 + 18446744073709551614;
  _1424 = p_cost_m0x_30 + _1423;
  _1425 = *_1424;
  _1426 = (int) _1425;
  _1427 = _1420 + _1426;
  _1428 = (long unsigned int) bm0y_3227;
  _1429 = _1428 * 2;
  _1430 = p_cost_m0y_37 + _1429;
  _1431 = *_1430;
  _1432 = (int) _1431;
  _1433 = _1427 + _1432;
  _1434 = (long unsigned int) bm1x_3231;
  _1435 = _1434 * 2;
  _1436 = _1435 + 18446744073709551614;
  _1437 = p_cost_m1x_45 + _1436;
  _1438 = *_1437;
  _1439 = (int) _1438;
  _1440 = _1433 + _1439;
  _1441 = (long unsigned int) bm1y_3228;
  _1442 = _1441 * 2;
  _1443 = p_cost_m1y_52 + _1442;
  _1444 = *_1443;
  _1445 = (int) _1444;
  bcost_1446 = _1440 + _1445;
  # DEBUG cost => bcost_1446
  _1448 = bcost_2951 * 17;
  _1449 = _1448 / 16;
  if (bcost_1446 < _1449)
    goto <bb 134>;
  else
    goto <bb 136>;

  <bb 134>:
  bcost_3343 = MIN_EXPR <bcost_1446, bcost_2951>;
  # DEBUG bcost => bcost_3343
  # DEBUG a => bm0x_139
  # DEBUG b => bm0y_3227
  _1450 = bm0x_139 & 65535;
  _1451 = bm0y_3227 << 16;
  _1452 = _1450 + _1451;
  _1453 = (unsigned int) _1452;
  # DEBUG a => NULL
  # DEBUG b => NULL
  MEM[(uint32_t *)cache0_mv2_16] = _1453;
  MEM[(uint32_t *)cache0_mv_11] = _1453;
  # DEBUG a => bm1x_143
  # DEBUG b => bm1y_3228
  _1454 = bm1x_143 & 65535;
  _1455 = bm1y_3228 << 16;
  _1456 = _1454 + _1455;
  _1457 = (unsigned int) _1456;
  # DEBUG a => NULL
  # DEBUG b => NULL
  MEM[(uint32_t *)cache1_mv2_18] = _1457;
  MEM[(uint32_t *)cache1_mv_17] = _1457;
  _1458 = m0_3(D)->i_pixel;
  bcostrd_1459 = x264_rd_cost_part (h_2(D), i_lambda2_7(D), i8_6(D), _1458);
  # DEBUG costrd => bcostrd_1459
  if (bcostrd_1459 < bcostrd_2887)
    goto <bb 136>;
  else
    goto <bb 135>;

  <bb 135>:

  <bb 136>:
  # bm0x_2344 = PHI <bm0x_139(134), bm0x_2897(133), bm0x_2897(135)>
  # bm0y_2345 = PHI <bm0y_3227(134), bm0y_3092(133), bm0y_3092(135)>
  # bm1x_2346 = PHI <bm1x_143(134), bm1x_3093(133), bm1x_3093(135)>
  # bm1y_2347 = PHI <bm1y_3228(134), bm1y_2831(133), bm1y_2831(135)>
  # bcost_1511 = PHI <bcost_3343(134), bcost_2951(133), bcost_3343(135)>
  # bcostrd_1524 = PHI <bcostrd_1459(134), bcostrd_2887(133), bcostrd_2887(135)>
  # DEBUG bcostrd => bcostrd_1524
  # DEBUG bcost => bcost_1511
  # DEBUG bm1y => bm1y_2347
  # DEBUG bm1x => bm1x_2346
  # DEBUG bm0y => bm0y_2345
  # DEBUG bm0x => bm0x_2344
  if (pass_3229 == 0)
    goto <bb 137>;
  else
    goto <bb 138>;

  <bb 137>:
  pretmp_3718 = visited[prephitmp_4214][prephitmp_3724][prephitmp_3727];
  goto <bb 139>;

  <bb 138>:
  # bcost_3185 = PHI <bcost_1511(136), bcost_2919(132)>
  # bcostrd_3186 = PHI <bcostrd_1524(136), bcostrd_2855(132)>
  # bm0x_2798 = PHI <bm0x_2344(136), bm0x_2865(132)>
  # bm0y_3045 = PHI <bm0y_2345(136), bm0y_3095(132)>
  # bm1x_3088 = PHI <bm1x_2346(136), bm1x_3096(132)>
  # bm1y_3089 = PHI <bm1y_2347(136), bm1y_3094(132)>
  # prephitmp_3720 = PHI <prephitmp_3724(136), prephitmp_3732(132)>
  # prephitmp_3721 = PHI <prephitmp_3725(136), prephitmp_3734(132)>
  # prephitmp_3722 = PHI <prephitmp_3727(136), prephitmp_4588(132)>
  # prephitmp_3723 = PHI <prephitmp_3729(136), prephitmp_4348(132)>
  # prephitmp_4024 = PHI <prephitmp_4027(136), prephitmp_3733(132)>
  # prephitmp_4026 = PHI <prephitmp_4028(136), prephitmp_3735(132)>
  # prephitmp_4207 = PHI <prephitmp_4214(136), prephitmp_4030(132)>
  # prephitmp_4209 = PHI <prephitmp_4215(136), prephitmp_4032(132)>
  # prephitmp_4211 = PHI <prephitmp_4216(136), prephitmp_4034(132)>
  # prephitmp_4213 = PHI <prephitmp_4217(136), prephitmp_4036(132)>
  # prephitmp_4342 = PHI <prephitmp_4345(136), prephitmp_4219(132)>
  # prephitmp_4344 = PHI <prephitmp_4346(136), prephitmp_4221(132)>
  # DEBUG bcostrd => bcostrd_3186
  # DEBUG bcost => bcost_3185
  # DEBUG bm1y => bm1y_3089
  # DEBUG bm1x => bm1x_3088
  # DEBUG bm0y => bm0y_3045
  # DEBUG bm0x => bm0x_2798
  _1464 = visited[prephitmp_4207][prephitmp_3720][prephitmp_3722];
  _1465 = (int) _1464;
  _1467 = _1465 >> prephitmp_4342;
  _1468 = _1467 & 1;
  if (_1468 == 0)
    goto <bb 139>;
  else
    goto <bb 144>;

  <bb 139>:
  # bcost_3182 = PHI <bcost_1511(137), bcost_3185(138)>
  # bcostrd_3183 = PHI <bcostrd_1524(137), bcostrd_3186(138)>
  # bm0x_3046 = PHI <bm0x_2344(137), bm0x_2798(138)>
  # bm0y_3090 = PHI <bm0y_2345(137), bm0y_3045(138)>
  # bm1x_3091 = PHI <bm1x_2346(137), bm1x_3088(138)>
  # bm1y_2930 = PHI <bm1y_2347(137), bm1y_3089(138)>
  # prephitmp_3713 = PHI <prephitmp_4214(137), prephitmp_4207(138)>
  # prephitmp_3714 = PHI <prephitmp_3724(137), prephitmp_3720(138)>
  # prephitmp_3716 = PHI <prephitmp_4345(137), prephitmp_4342(138)>
  # prephitmp_3717 = PHI <prephitmp_3727(137), prephitmp_3722(138)>
  # prephitmp_3719 = PHI <pretmp_3718(137), _1464(138)>
  # prephitmp_4021 = PHI <prephitmp_3725(137), prephitmp_3721(138)>
  # prephitmp_4022 = PHI <prephitmp_3729(137), prephitmp_3723(138)>
  # prephitmp_4204 = PHI <prephitmp_4027(137), prephitmp_4024(138)>
  # prephitmp_4205 = PHI <prephitmp_4028(137), prephitmp_4026(138)>
  # prephitmp_4338 = PHI <prephitmp_4215(137), prephitmp_4209(138)>
  # prephitmp_4339 = PHI <prephitmp_4216(137), prephitmp_4211(138)>
  # prephitmp_4340 = PHI <prephitmp_4217(137), prephitmp_4213(138)>
  # prephitmp_4448 = PHI <prephitmp_4346(137), prephitmp_4344(138)>
  # DEBUG i0 => 4
  # DEBUG i1 => 2
  _1473 = (signed char) prephitmp_3719;
  _1475 = 1 << prephitmp_3716;
  _1476 = (signed char) _1475;
  _1477 = _1473 | _1476;
  _1478 = (unsigned char) _1477;
  visited[prephitmp_3713][prephitmp_3714][prephitmp_3717] = _1478;
  _1479 = h_2(D)->mc.avg[_12];
  _1480 = stride1[2];
  _1481 = stride0[4];
  _1479 (&pix, bw_19, src0$4_2816, _1481, _185, _1480, i_weight_5(D));
  _1482 = h_2(D)->pixf.mbcmp[_12];
  _1483 = m0_3(D)->p_fenc[0];
  _1484 = _1482 (_1483, 16, &pix, bw_19);
  _1485 = (long unsigned int) bm0x_3230;
  _1486 = _1485 * 2;
  _1487 = p_cost_m0x_30 + _1486;
  _1488 = *_1487;
  _1489 = (int) _1488;
  _1490 = _1484 + _1489;
  _1491 = (long unsigned int) bm0y_3227;
  _1492 = _1491 * 2;
  _1493 = p_cost_m0y_37 + _1492;
  _1494 = *_1493;
  _1495 = (int) _1494;
  _1496 = _1490 + _1495;
  _1497 = (long unsigned int) bm1x_3231;
  _1498 = _1497 * 2;
  _1499 = _1498 + 18446744073709551614;
  _1500 = p_cost_m1x_45 + _1499;
  _1501 = *_1500;
  _1502 = (int) _1501;
  _1503 = _1496 + _1502;
  _1504 = (sizetype) bm1y_3228;
  _1505 = _1504 + 1;
  _1506 = _1505 * 2;
  _1507 = p_cost_m1y_52 + _1506;
  _1508 = *_1507;
  _1509 = (int) _1508;
  bcost_1510 = _1503 + _1509;
  # DEBUG cost => bcost_1510
  _1512 = bcost_3182 * 17;
  _1513 = _1512 / 16;
  if (bcost_1510 < _1513)
    goto <bb 140>;
  else
    goto <bb 142>;

  <bb 140>:
  bcost_3340 = MIN_EXPR <bcost_1510, bcost_3182>;
  # DEBUG bcost => bcost_3340
  # DEBUG a => bm0x_3230
  # DEBUG b => bm0y_3227
  _1514 = bm0x_3230 & 65535;
  _1515 = bm0y_3227 << 16;
  _1516 = _1514 + _1515;
  _1517 = (unsigned int) _1516;
  # DEBUG a => NULL
  # DEBUG b => NULL
  MEM[(uint32_t *)cache0_mv2_16] = _1517;
  MEM[(uint32_t *)cache0_mv_11] = _1517;
  # DEBUG a => bm1x_143
  # DEBUG b => bm1y_151
  _1518 = bm1x_143 & 65535;
  _1519 = bm1y_151 << 16;
  _1520 = _1518 + _1519;
  _1521 = (unsigned int) _1520;
  # DEBUG a => NULL
  # DEBUG b => NULL
  MEM[(uint32_t *)cache1_mv2_18] = _1521;
  MEM[(uint32_t *)cache1_mv_17] = _1521;
  _1522 = m0_3(D)->i_pixel;
  bcostrd_1523 = x264_rd_cost_part (h_2(D), i_lambda2_7(D), i8_6(D), _1522);
  # DEBUG costrd => bcostrd_1523
  if (bcostrd_1523 < bcostrd_3183)
    goto <bb 142>;
  else
    goto <bb 141>;

  <bb 141>:

  <bb 142>:
  # bm0x_2349 = PHI <bm0x_3230(140), bm0x_3046(139), bm0x_3046(141)>
  # bm0y_2350 = PHI <bm0y_3227(140), bm0y_3090(139), bm0y_3090(141)>
  # bm1x_2351 = PHI <bm1x_143(140), bm1x_3091(139), bm1x_3091(141)>
  # bm1y_2352 = PHI <bm1y_151(140), bm1y_2930(139), bm1y_2930(141)>
  # bcost_1575 = PHI <bcost_3340(140), bcost_3182(139), bcost_3340(141)>
  # bcostrd_1588 = PHI <bcostrd_1523(140), bcostrd_3183(139), bcostrd_3183(141)>
  # DEBUG bcostrd => bcostrd_1588
  # DEBUG bcost => bcost_1575
  # DEBUG bm1y => bm1y_2352
  # DEBUG bm1x => bm1x_2351
  # DEBUG bm0y => bm0y_2350
  # DEBUG bm0x => bm0x_2349
  if (pass_3229 == 0)
    goto <bb 143>;
  else
    goto <bb 144>;

  <bb 143>:
  pretmp_3706 = visited[prephitmp_3713][prephitmp_3714][prephitmp_4204];
  goto <bb 145>;

  <bb 144>:
  # bcost_3184 = PHI <bcost_1575(142), bcost_3185(138)>
  # bcostrd_2788 = PHI <bcostrd_1588(142), bcostrd_3186(138)>
  # bm0x_2962 = PHI <bm0x_2349(142), bm0x_2798(138)>
  # bm0y_2898 = PHI <bm0y_2350(142), bm0y_3045(138)>
  # bm1x_3083 = PHI <bm1x_2351(142), bm1x_3088(138)>
  # bm1y_3084 = PHI <bm1y_2352(142), bm1y_3089(138)>
  # prephitmp_3708 = PHI <prephitmp_3713(142), prephitmp_4207(138)>
  # prephitmp_3709 = PHI <prephitmp_3714(142), prephitmp_3720(138)>
  # prephitmp_3710 = PHI <prephitmp_3716(142), prephitmp_4342(138)>
  # prephitmp_3711 = PHI <prephitmp_3717(142), prephitmp_3722(138)>
  # prephitmp_4018 = PHI <prephitmp_4021(142), prephitmp_3721(138)>
  # prephitmp_4020 = PHI <prephitmp_4022(142), prephitmp_3723(138)>
  # prephitmp_4201 = PHI <prephitmp_4204(142), prephitmp_4024(138)>
  # prephitmp_4203 = PHI <prephitmp_4205(142), prephitmp_4026(138)>
  # prephitmp_4333 = PHI <prephitmp_4338(142), prephitmp_4209(138)>
  # prephitmp_4335 = PHI <prephitmp_4339(142), prephitmp_4211(138)>
  # prephitmp_4337 = PHI <prephitmp_4340(142), prephitmp_4213(138)>
  # prephitmp_4447 = PHI <prephitmp_4448(142), prephitmp_4344(138)>
  # DEBUG bcostrd => bcostrd_2788
  # DEBUG bcost => bcost_3184
  # DEBUG bm1y => bm1y_3084
  # DEBUG bm1x => bm1x_3083
  # DEBUG bm0y => bm0y_2898
  # DEBUG bm0x => bm0x_2962
  _1528 = visited[prephitmp_3708][prephitmp_3709][prephitmp_4201];
  _1529 = (int) _1528;
  _1531 = _1529 >> prephitmp_4335;
  _1532 = _1531 & 1;
  if (_1532 == 0)
    goto <bb 145>;
  else
    goto <bb 150>;

  <bb 145>:
  # bcost_2821 = PHI <bcost_1575(143), bcost_3184(144)>
  # bcostrd_3026 = PHI <bcostrd_1588(143), bcostrd_2788(144)>
  # bm0x_2866 = PHI <bm0x_2349(143), bm0x_2962(144)>
  # bm0y_3086 = PHI <bm0y_2350(143), bm0y_2898(144)>
  # bm1x_3087 = PHI <bm1x_2351(143), bm1x_3083(144)>
  # bm1y_3085 = PHI <bm1y_2352(143), bm1y_3084(144)>
  # prephitmp_3700 = PHI <prephitmp_3713(143), prephitmp_3708(144)>
  # prephitmp_3701 = PHI <prephitmp_3714(143), prephitmp_3709(144)>
  # prephitmp_3703 = PHI <prephitmp_4339(143), prephitmp_4335(144)>
  # prephitmp_3705 = PHI <prephitmp_4204(143), prephitmp_4201(144)>
  # prephitmp_3707 = PHI <pretmp_3706(143), _1528(144)>
  # prephitmp_4015 = PHI <prephitmp_3716(143), prephitmp_3710(144)>
  # prephitmp_4016 = PHI <prephitmp_3717(143), prephitmp_3711(144)>
  # prephitmp_4198 = PHI <prephitmp_4021(143), prephitmp_4018(144)>
  # prephitmp_4199 = PHI <prephitmp_4022(143), prephitmp_4020(144)>
  # prephitmp_4331 = PHI <prephitmp_4205(143), prephitmp_4203(144)>
  # prephitmp_4444 = PHI <prephitmp_4338(143), prephitmp_4333(144)>
  # prephitmp_4445 = PHI <prephitmp_4340(143), prephitmp_4337(144)>
  # prephitmp_4514 = PHI <prephitmp_4448(143), prephitmp_4447(144)>
  # DEBUG i0 => 4
  # DEBUG i1 => 6
  _1537 = (signed char) prephitmp_3707;
  _1539 = 1 << prephitmp_3703;
  _1540 = (signed char) _1539;
  _1541 = _1537 | _1540;
  _1542 = (unsigned char) _1541;
  visited[prephitmp_3700][prephitmp_3701][prephitmp_3705] = _1542;
  _1543 = h_2(D)->mc.avg[_12];
  _1544 = stride1[6];
  _1545 = stride0[4];
  _1543 (&pix, bw_19, src0$4_2816, _1545, _179, _1544, i_weight_5(D));
  _1546 = h_2(D)->pixf.mbcmp[_12];
  _1547 = m0_3(D)->p_fenc[0];
  _1548 = _1546 (_1547, 16, &pix, bw_19);
  _1549 = (long unsigned int) bm0x_3230;
  _1550 = _1549 * 2;
  _1551 = p_cost_m0x_30 + _1550;
  _1552 = *_1551;
  _1553 = (int) _1552;
  _1554 = _1548 + _1553;
  _1555 = (long unsigned int) bm0y_3227;
  _1556 = _1555 * 2;
  _1557 = p_cost_m0y_37 + _1556;
  _1558 = *_1557;
  _1559 = (int) _1558;
  _1560 = _1554 + _1559;
  _1561 = (sizetype) bm1x_3231;
  _1562 = _1561 + 1;
  _1563 = _1562 * 2;
  _1564 = p_cost_m1x_45 + _1563;
  _1565 = *_1564;
  _1566 = (int) _1565;
  _1567 = _1560 + _1566;
  _1568 = (long unsigned int) bm1y_3228;
  _1569 = _1568 * 2;
  _1570 = _1569 + 18446744073709551614;
  _1571 = p_cost_m1y_52 + _1570;
  _1572 = *_1571;
  _1573 = (int) _1572;
  bcost_1574 = _1567 + _1573;
  # DEBUG cost => bcost_1574
  _1576 = bcost_2821 * 17;
  _1577 = _1576 / 16;
  if (bcost_1574 < _1577)
    goto <bb 146>;
  else
    goto <bb 148>;

  <bb 146>:
  bcost_3342 = MIN_EXPR <bcost_1574, bcost_2821>;
  # DEBUG bcost => bcost_3342
  # DEBUG a => bm0x_3230
  # DEBUG b => bm0y_3227
  _1578 = bm0x_3230 & 65535;
  _1579 = bm0y_3227 << 16;
  _1580 = _1578 + _1579;
  _1581 = (unsigned int) _1580;
  # DEBUG a => NULL
  # DEBUG b => NULL
  MEM[(uint32_t *)cache0_mv2_16] = _1581;
  MEM[(uint32_t *)cache0_mv_11] = _1581;
  # DEBUG a => bm1x_134
  # DEBUG b => bm1y_159
  _1582 = bm1x_134 & 65535;
  _1583 = bm1y_159 << 16;
  _1584 = _1582 + _1583;
  _1585 = (unsigned int) _1584;
  # DEBUG a => NULL
  # DEBUG b => NULL
  MEM[(uint32_t *)cache1_mv2_18] = _1585;
  MEM[(uint32_t *)cache1_mv_17] = _1585;
  _1586 = m0_3(D)->i_pixel;
  bcostrd_1587 = x264_rd_cost_part (h_2(D), i_lambda2_7(D), i8_6(D), _1586);
  # DEBUG costrd => bcostrd_1587
  if (bcostrd_1587 < bcostrd_3026)
    goto <bb 148>;
  else
    goto <bb 147>;

  <bb 147>:

  <bb 148>:
  # bm0x_2354 = PHI <bm0x_3230(146), bm0x_2866(145), bm0x_2866(147)>
  # bm0y_2355 = PHI <bm0y_3227(146), bm0y_3086(145), bm0y_3086(147)>
  # bm1x_2356 = PHI <bm1x_134(146), bm1x_3087(145), bm1x_3087(147)>
  # bm1y_2357 = PHI <bm1y_159(146), bm1y_3085(145), bm1y_3085(147)>
  # bcost_1639 = PHI <bcost_3342(146), bcost_2821(145), bcost_3342(147)>
  # bcostrd_1652 = PHI <bcostrd_1587(146), bcostrd_3026(145), bcostrd_3026(147)>
  # DEBUG bcostrd => bcostrd_1652
  # DEBUG bcost => bcost_1639
  # DEBUG bm1y => bm1y_2357
  # DEBUG bm1x => bm1x_2356
  # DEBUG bm0y => bm0y_2355
  # DEBUG bm0x => bm0x_2354
  if (pass_3229 == 0)
    goto <bb 149>;
  else
    goto <bb 150>;

  <bb 149>:
  pretmp_3694 = visited[prephitmp_3700][prephitmp_4445][prephitmp_3705];
  goto <bb 151>;

  <bb 150>:
  # bcost_3025 = PHI <bcost_1639(148), bcost_3184(144)>
  # bcostrd_3178 = PHI <bcostrd_1652(148), bcostrd_2788(144)>
  # bm0x_2832 = PHI <bm0x_2354(148), bm0x_2962(144)>
  # bm0y_3048 = PHI <bm0y_2355(148), bm0y_2898(144)>
  # bm1x_3081 = PHI <bm1x_2356(148), bm1x_3083(144)>
  # bm1y_3082 = PHI <bm1y_2357(148), bm1y_3084(144)>
  # prephitmp_3696 = PHI <prephitmp_3700(148), prephitmp_3708(144)>
  # prephitmp_3697 = PHI <prephitmp_3701(148), prephitmp_3709(144)>
  # prephitmp_3698 = PHI <prephitmp_3703(148), prephitmp_4335(144)>
  # prephitmp_3699 = PHI <prephitmp_3705(148), prephitmp_4201(144)>
  # prephitmp_4012 = PHI <prephitmp_4015(148), prephitmp_3710(144)>
  # prephitmp_4014 = PHI <prephitmp_4016(148), prephitmp_3711(144)>
  # prephitmp_4195 = PHI <prephitmp_4198(148), prephitmp_4018(144)>
  # prephitmp_4197 = PHI <prephitmp_4199(148), prephitmp_4020(144)>
  # prephitmp_4330 = PHI <prephitmp_4331(148), prephitmp_4203(144)>
  # prephitmp_4441 = PHI <prephitmp_4444(148), prephitmp_4333(144)>
  # prephitmp_4443 = PHI <prephitmp_4445(148), prephitmp_4337(144)>
  # prephitmp_4513 = PHI <prephitmp_4514(148), prephitmp_4447(144)>
  # DEBUG bcostrd => bcostrd_3178
  # DEBUG bcost => bcost_3025
  # DEBUG bm1y => bm1y_3082
  # DEBUG bm1x => bm1x_3081
  # DEBUG bm0y => bm0y_3048
  # DEBUG bm0x => bm0x_2832
  _1592 = visited[prephitmp_3696][prephitmp_4443][prephitmp_3699];
  _1593 = (int) _1592;
  _1595 = _1593 >> prephitmp_4195;
  _1596 = _1595 & 1;
  if (_1596 == 0)
    goto <bb 151>;
  else
    goto <bb 156>;

  <bb 151>:
  # bcost_3180 = PHI <bcost_1639(149), bcost_3025(150)>
  # bcostrd_3181 = PHI <bcostrd_1652(149), bcostrd_3178(150)>
  # bm0x_2799 = PHI <bm0x_2354(149), bm0x_2832(150)>
  # bm0y_3047 = PHI <bm0y_2355(149), bm0y_3048(150)>
  # bm1x_3079 = PHI <bm1x_2356(149), bm1x_3081(150)>
  # bm1y_3080 = PHI <bm1y_2357(149), bm1y_3082(150)>
  # prephitmp_3688 = PHI <prephitmp_3700(149), prephitmp_3696(150)>
  # prephitmp_3689 = PHI <prephitmp_3705(149), prephitmp_3699(150)>
  # prephitmp_3691 = PHI <prephitmp_4198(149), prephitmp_4195(150)>
  # prephitmp_3693 = PHI <prephitmp_4445(149), prephitmp_4443(150)>
  # prephitmp_3695 = PHI <pretmp_3694(149), _1592(150)>
  # prephitmp_4009 = PHI <prephitmp_3701(149), prephitmp_3697(150)>
  # prephitmp_4010 = PHI <prephitmp_3703(149), prephitmp_3698(150)>
  # prephitmp_4192 = PHI <prephitmp_4015(149), prephitmp_4012(150)>
  # prephitmp_4193 = PHI <prephitmp_4016(149), prephitmp_4014(150)>
  # prephitmp_4328 = PHI <prephitmp_4199(149), prephitmp_4197(150)>
  # prephitmp_4439 = PHI <prephitmp_4331(149), prephitmp_4330(150)>
  # prephitmp_4511 = PHI <prephitmp_4444(149), prephitmp_4441(150)>
  # prephitmp_4568 = PHI <prephitmp_4514(149), prephitmp_4513(150)>
  # DEBUG i0 => 3
  # DEBUG i1 => 7
  _1601 = (signed char) prephitmp_3695;
  _1603 = 1 << prephitmp_3691;
  _1604 = (signed char) _1603;
  _1605 = _1601 | _1604;
  _1606 = (unsigned char) _1605;
  visited[prephitmp_3688][prephitmp_3693][prephitmp_3689] = _1606;
  _1607 = h_2(D)->mc.avg[_12];
  _1608 = stride1[7];
  _1609 = stride0[3];
  _1607 (&pix, bw_19, _157, _1609, _137, _1608, i_weight_5(D));
  _1610 = h_2(D)->pixf.mbcmp[_12];
  _1611 = m0_3(D)->p_fenc[0];
  _1612 = _1610 (_1611, 16, &pix, bw_19);
  _1613 = (long unsigned int) bm0x_3230;
  _1614 = _1613 * 2;
  _1615 = p_cost_m0x_30 + _1614;
  _1616 = *_1615;
  _1617 = (int) _1616;
  _1618 = _1612 + _1617;
  _1619 = (long unsigned int) bm0y_3227;
  _1620 = _1619 * 2;
  _1621 = _1620 + 18446744073709551614;
  _1622 = p_cost_m0y_37 + _1621;
  _1623 = *_1622;
  _1624 = (int) _1623;
  _1625 = _1618 + _1624;
  _1626 = (sizetype) bm1x_3231;
  _1627 = _1626 + 1;
  _1628 = _1627 * 2;
  _1629 = p_cost_m1x_45 + _1628;
  _1630 = *_1629;
  _1631 = (int) _1630;
  _1632 = _1625 + _1631;
  _1633 = (long unsigned int) bm1y_3228;
  _1634 = _1633 * 2;
  _1635 = p_cost_m1y_52 + _1634;
  _1636 = *_1635;
  _1637 = (int) _1636;
  bcost_1638 = _1632 + _1637;
  # DEBUG cost => bcost_1638
  _1640 = bcost_3180 * 17;
  _1641 = _1640 / 16;
  if (bcost_1638 < _1641)
    goto <bb 152>;
  else
    goto <bb 154>;

  <bb 152>:
  bcost_2988 = MIN_EXPR <bcost_1638, bcost_3180>;
  # DEBUG bcost => bcost_2988
  # DEBUG a => bm0x_3230
  # DEBUG b => bm0y_155
  _1642 = bm0x_3230 & 65535;
  _1643 = bm0y_155 << 16;
  _1644 = _1642 + _1643;
  _1645 = (unsigned int) _1644;
  # DEBUG a => NULL
  # DEBUG b => NULL
  MEM[(uint32_t *)cache0_mv2_16] = _1645;
  MEM[(uint32_t *)cache0_mv_11] = _1645;
  # DEBUG a => bm1x_134
  # DEBUG b => bm1y_3228
  _1646 = bm1x_134 & 65535;
  _1647 = bm1y_3228 << 16;
  _1648 = _1646 + _1647;
  _1649 = (unsigned int) _1648;
  # DEBUG a => NULL
  # DEBUG b => NULL
  MEM[(uint32_t *)cache1_mv2_18] = _1649;
  MEM[(uint32_t *)cache1_mv_17] = _1649;
  _1650 = m0_3(D)->i_pixel;
  bcostrd_1651 = x264_rd_cost_part (h_2(D), i_lambda2_7(D), i8_6(D), _1650);
  # DEBUG costrd => bcostrd_1651
  if (bcostrd_1651 < bcostrd_3181)
    goto <bb 154>;
  else
    goto <bb 153>;

  <bb 153>:

  <bb 154>:
  # bm0x_2359 = PHI <bm0x_3230(152), bm0x_2799(151), bm0x_2799(153)>
  # bm0y_2360 = PHI <bm0y_155(152), bm0y_3047(151), bm0y_3047(153)>
  # bm1x_2361 = PHI <bm1x_134(152), bm1x_3079(151), bm1x_3079(153)>
  # bm1y_2362 = PHI <bm1y_3228(152), bm1y_3080(151), bm1y_3080(153)>
  # bcost_1703 = PHI <bcost_2988(152), bcost_3180(151), bcost_2988(153)>
  # bcostrd_1716 = PHI <bcostrd_1651(152), bcostrd_3181(151), bcostrd_3181(153)>
  # DEBUG bcostrd => bcostrd_1716
  # DEBUG bcost => bcost_1703
  # DEBUG bm1y => bm1y_2362
  # DEBUG bm1x => bm1x_2361
  # DEBUG bm0y => bm0y_2360
  # DEBUG bm0x => bm0x_2359
  if (pass_3229 == 0)
    goto <bb 155>;
  else
    goto <bb 156>;

  <bb 155>:
  pretmp_3682 = visited[prephitmp_3688][prephitmp_4568][prephitmp_4193];
  goto <bb 157>;

  <bb 156>:
  # bcost_3179 = PHI <bcost_1703(154), bcost_3025(150)>
  # bcostrd_2952 = PHI <bcostrd_1716(154), bcostrd_3178(150)>
  # bm0x_2931 = PHI <bm0x_2359(154), bm0x_2832(150)>
  # bm0y_2867 = PHI <bm0y_2360(154), bm0y_3048(150)>
  # bm1x_3077 = PHI <bm1x_2361(154), bm1x_3081(150)>
  # bm1y_3078 = PHI <bm1y_2362(154), bm1y_3082(150)>
  # prephitmp_3684 = PHI <prephitmp_3688(154), prephitmp_3696(150)>
  # prephitmp_3685 = PHI <prephitmp_3689(154), prephitmp_3699(150)>
  # prephitmp_3686 = PHI <prephitmp_3691(154), prephitmp_4195(150)>
  # prephitmp_3687 = PHI <prephitmp_3693(154), prephitmp_4443(150)>
  # prephitmp_4006 = PHI <prephitmp_4009(154), prephitmp_3697(150)>
  # prephitmp_4008 = PHI <prephitmp_4010(154), prephitmp_3698(150)>
  # prephitmp_4189 = PHI <prephitmp_4192(154), prephitmp_4012(150)>
  # prephitmp_4191 = PHI <prephitmp_4193(154), prephitmp_4014(150)>
  # prephitmp_4327 = PHI <prephitmp_4328(154), prephitmp_4197(150)>
  # prephitmp_4438 = PHI <prephitmp_4439(154), prephitmp_4330(150)>
  # prephitmp_4510 = PHI <prephitmp_4511(154), prephitmp_4441(150)>
  # prephitmp_4567 = PHI <prephitmp_4568(154), prephitmp_4513(150)>
  # DEBUG bcostrd => bcostrd_2952
  # DEBUG bcost => bcost_3179
  # DEBUG bm1y => bm1y_3078
  # DEBUG bm1x => bm1x_3077
  # DEBUG bm0y => bm0y_2867
  # DEBUG bm0x => bm0x_2931
  _1656 = visited[prephitmp_3684][prephitmp_4567][prephitmp_4191];
  _1657 = (int) _1656;
  _1659 = _1657 >> prephitmp_3686;
  _1660 = _1659 & 1;
  if (_1660 == 0)
    goto <bb 157>;
  else
    goto <bb 162>;

  <bb 157>:
  # bcost_2920 = PHI <bcost_1703(155), bcost_3179(156)>
  # bcostrd_2856 = PHI <bcostrd_1716(155), bcostrd_2952(156)>
  # bm0x_2963 = PHI <bm0x_2359(155), bm0x_2931(156)>
  # bm0y_2899 = PHI <bm0y_2360(155), bm0y_2867(156)>
  # bm1x_3074 = PHI <bm1x_2361(155), bm1x_3077(156)>
  # bm1y_3075 = PHI <bm1y_2362(155), bm1y_3078(156)>
  # prephitmp_3676 = PHI <prephitmp_3688(155), prephitmp_3684(156)>
  # prephitmp_3677 = PHI <prephitmp_3691(155), prephitmp_3686(156)>
  # prephitmp_3679 = PHI <prephitmp_4193(155), prephitmp_4191(156)>
  # prephitmp_3681 = PHI <prephitmp_4568(155), prephitmp_4567(156)>
  # prephitmp_3683 = PHI <pretmp_3682(155), _1656(156)>
  # prephitmp_4003 = PHI <prephitmp_3689(155), prephitmp_3685(156)>
  # prephitmp_4004 = PHI <prephitmp_3693(155), prephitmp_3687(156)>
  # prephitmp_4186 = PHI <prephitmp_4009(155), prephitmp_4006(156)>
  # prephitmp_4187 = PHI <prephitmp_4010(155), prephitmp_4008(156)>
  # prephitmp_4325 = PHI <prephitmp_4192(155), prephitmp_4189(156)>
  # prephitmp_4436 = PHI <prephitmp_4328(155), prephitmp_4327(156)>
  # prephitmp_4508 = PHI <prephitmp_4439(155), prephitmp_4438(156)>
  # prephitmp_4565 = PHI <prephitmp_4511(155), prephitmp_4510(156)>
  # DEBUG i0 => 5
  # DEBUG i1 => 1
  _1665 = (signed char) prephitmp_3683;
  _1667 = 1 << prephitmp_3677;
  _1668 = (signed char) _1667;
  _1669 = _1665 | _1668;
  _1670 = (unsigned char) _1669;
  visited[prephitmp_3676][prephitmp_3681][prephitmp_3679] = _1670;
  _1671 = h_2(D)->mc.avg[_12];
  _1672 = stride1[1];
  _1673 = stride0[5];
  _1671 (&pix, bw_19, _149, _1673, _145, _1672, i_weight_5(D));
  _1674 = h_2(D)->pixf.mbcmp[_12];
  _1675 = m0_3(D)->p_fenc[0];
  _1676 = _1674 (_1675, 16, &pix, bw_19);
  _1677 = (long unsigned int) bm0x_3230;
  _1678 = _1677 * 2;
  _1679 = p_cost_m0x_30 + _1678;
  _1680 = *_1679;
  _1681 = (int) _1680;
  _1682 = _1676 + _1681;
  _1683 = (sizetype) bm0y_3227;
  _1684 = _1683 + 1;
  _1685 = _1684 * 2;
  _1686 = p_cost_m0y_37 + _1685;
  _1687 = *_1686;
  _1688 = (int) _1687;
  _1689 = _1682 + _1688;
  _1690 = (long unsigned int) bm1x_3231;
  _1691 = _1690 * 2;
  _1692 = _1691 + 18446744073709551614;
  _1693 = p_cost_m1x_45 + _1692;
  _1694 = *_1693;
  _1695 = (int) _1694;
  _1696 = _1689 + _1695;
  _1697 = (long unsigned int) bm1y_3228;
  _1698 = _1697 * 2;
  _1699 = p_cost_m1y_52 + _1698;
  _1700 = *_1699;
  _1701 = (int) _1700;
  bcost_1702 = _1696 + _1701;
  # DEBUG cost => bcost_1702
  _1704 = bcost_2920 * 17;
  _1705 = _1704 / 16;
  if (bcost_1702 < _1705)
    goto <bb 158>;
  else
    goto <bb 160>;

  <bb 158>:
  bcost_3344 = MIN_EXPR <bcost_1702, bcost_2920>;
  # DEBUG bcost => bcost_3344
  # DEBUG a => bm0x_3230
  # DEBUG b => bm0y_147
  _1706 = bm0x_3230 & 65535;
  _1707 = bm0y_147 << 16;
  _1708 = _1706 + _1707;
  _1709 = (unsigned int) _1708;
  # DEBUG a => NULL
  # DEBUG b => NULL
  MEM[(uint32_t *)cache0_mv2_16] = _1709;
  MEM[(uint32_t *)cache0_mv_11] = _1709;
  # DEBUG a => bm1x_143
  # DEBUG b => bm1y_3228
  _1710 = bm1x_143 & 65535;
  _1711 = bm1y_3228 << 16;
  _1712 = _1710 + _1711;
  _1713 = (unsigned int) _1712;
  # DEBUG a => NULL
  # DEBUG b => NULL
  MEM[(uint32_t *)cache1_mv2_18] = _1713;
  MEM[(uint32_t *)cache1_mv_17] = _1713;
  _1714 = m0_3(D)->i_pixel;
  bcostrd_1715 = x264_rd_cost_part (h_2(D), i_lambda2_7(D), i8_6(D), _1714);
  # DEBUG costrd => bcostrd_1715
  if (bcostrd_1715 < bcostrd_2856)
    goto <bb 160>;
  else
    goto <bb 159>;

  <bb 159>:

  <bb 160>:
  # bm0x_2364 = PHI <bm0x_3230(158), bm0x_2963(157), bm0x_2963(159)>
  # bm0y_2365 = PHI <bm0y_147(158), bm0y_2899(157), bm0y_2899(159)>
  # bm1x_2366 = PHI <bm1x_143(158), bm1x_3074(157), bm1x_3074(159)>
  # bm1y_2367 = PHI <bm1y_3228(158), bm1y_3075(157), bm1y_3075(159)>
  # bcost_1767 = PHI <bcost_3344(158), bcost_2920(157), bcost_3344(159)>
  # bcostrd_1780 = PHI <bcostrd_1715(158), bcostrd_2856(157), bcostrd_2856(159)>
  # DEBUG bcostrd => bcostrd_1780
  # DEBUG bcost => bcost_1767
  # DEBUG bm1y => bm1y_2367
  # DEBUG bm1x => bm1x_2366
  # DEBUG bm0y => bm0y_2365
  # DEBUG bm0x => bm0x_2364
  if (pass_3229 == 0)
    goto <bb 161>;
  else
    goto <bb 162>;

  <bb 161>:
  pretmp_3670 = visited[prephitmp_4436][prephitmp_3681][prephitmp_4565];
  goto <bb 163>;

  <bb 162>:
  # bcost_2888 = PHI <bcost_1767(160), bcost_3179(156)>
  # bcostrd_3173 = PHI <bcostrd_1780(160), bcostrd_2952(156)>
  # bm0x_3076 = PHI <bm0x_2364(160), bm0x_2931(156)>
  # bm0y_2800 = PHI <bm0y_2365(160), bm0y_2867(156)>
  # bm1x_3049 = PHI <bm1x_2366(160), bm1x_3077(156)>
  # bm1y_3070 = PHI <bm1y_2367(160), bm1y_3078(156)>
  # prephitmp_3672 = PHI <prephitmp_3676(160), prephitmp_3684(156)>
  # prephitmp_3673 = PHI <prephitmp_3677(160), prephitmp_3686(156)>
  # prephitmp_3674 = PHI <prephitmp_3679(160), prephitmp_4191(156)>
  # prephitmp_3675 = PHI <prephitmp_3681(160), prephitmp_4567(156)>
  # prephitmp_4000 = PHI <prephitmp_4003(160), prephitmp_3685(156)>
  # prephitmp_4002 = PHI <prephitmp_4004(160), prephitmp_3687(156)>
  # prephitmp_4183 = PHI <prephitmp_4186(160), prephitmp_4006(156)>
  # prephitmp_4185 = PHI <prephitmp_4187(160), prephitmp_4008(156)>
  # prephitmp_4324 = PHI <prephitmp_4325(160), prephitmp_4189(156)>
  # prephitmp_4435 = PHI <prephitmp_4436(160), prephitmp_4327(156)>
  # prephitmp_4507 = PHI <prephitmp_4508(160), prephitmp_4438(156)>
  # prephitmp_4564 = PHI <prephitmp_4565(160), prephitmp_4510(156)>
  # DEBUG bcostrd => bcostrd_3173
  # DEBUG bcost => bcost_2888
  # DEBUG bm1y => bm1y_3070
  # DEBUG bm1x => bm1x_3049
  # DEBUG bm0y => bm0y_2800
  # DEBUG bm0x => bm0x_3076
  _1720 = visited[prephitmp_4435][prephitmp_3675][prephitmp_4564];
  _1721 = (int) _1720;
  _1723 = _1721 >> prephitmp_3673;
  _1724 = _1723 & 1;
  if (_1724 == 0)
    goto <bb 163>;
  else
    goto <bb 168>;

  <bb 163>:
  # bcost_3176 = PHI <bcost_1767(161), bcost_2888(162)>
  # bcostrd_3177 = PHI <bcostrd_1780(161), bcostrd_3173(162)>
  # bm0x_2833 = PHI <bm0x_2364(161), bm0x_3076(162)>
  # bm0y_3050 = PHI <bm0y_2365(161), bm0y_2800(162)>
  # bm1x_3072 = PHI <bm1x_2366(161), bm1x_3049(162)>
  # bm1y_3073 = PHI <bm1y_2367(161), bm1y_3070(162)>
  # prephitmp_3665 = PHI <prephitmp_4565(161), prephitmp_4564(162)>
  # prephitmp_3666 = PHI <prephitmp_3677(161), prephitmp_3673(162)>
  # prephitmp_3667 = PHI <prephitmp_3681(161), prephitmp_3675(162)>
  # prephitmp_3669 = PHI <prephitmp_4436(161), prephitmp_4435(162)>
  # prephitmp_3671 = PHI <pretmp_3670(161), _1720(162)>
  # prephitmp_3997 = PHI <prephitmp_3676(161), prephitmp_3672(162)>
  # prephitmp_3998 = PHI <prephitmp_3679(161), prephitmp_3674(162)>
  # prephitmp_4180 = PHI <prephitmp_4003(161), prephitmp_4000(162)>
  # prephitmp_4181 = PHI <prephitmp_4004(161), prephitmp_4002(162)>
  # prephitmp_4321 = PHI <prephitmp_4186(161), prephitmp_4183(162)>
  # prephitmp_4322 = PHI <prephitmp_4187(161), prephitmp_4185(162)>
  # prephitmp_4433 = PHI <prephitmp_4325(161), prephitmp_4324(162)>
  # prephitmp_4562 = PHI <prephitmp_4508(161), prephitmp_4507(162)>
  # DEBUG i0 => 2
  # DEBUG i1 => 4
  _1729 = (signed char) prephitmp_3671;
  _1731 = 1 << prephitmp_3666;
  _1732 = (signed char) _1731;
  _1733 = _1729 | _1732;
  _1734 = (unsigned char) _1733;
  visited[prephitmp_3669][prephitmp_3667][prephitmp_3665] = _1734;
  _1735 = h_2(D)->mc.avg[_12];
  _1736 = stride1[4];
  _1737 = stride0[2];
  _1735 (&pix, bw_19, _182, _1737, src1$4_3219, _1736, i_weight_5(D));
  _1738 = h_2(D)->pixf.mbcmp[_12];
  _1739 = m0_3(D)->p_fenc[0];
  _1740 = _1738 (_1739, 16, &pix, bw_19);
  _1741 = (long unsigned int) bm0x_3230;
  _1742 = _1741 * 2;
  _1743 = _1742 + 18446744073709551614;
  _1744 = p_cost_m0x_30 + _1743;
  _1745 = *_1744;
  _1746 = (int) _1745;
  _1747 = _1740 + _1746;
  _1748 = (sizetype) bm0y_3227;
  _1749 = _1748 + 1;
  _1750 = _1749 * 2;
  _1751 = p_cost_m0y_37 + _1750;
  _1752 = *_1751;
  _1753 = (int) _1752;
  _1754 = _1747 + _1753;
  _1755 = (long unsigned int) bm1x_3231;
  _1756 = _1755 * 2;
  _1757 = p_cost_m1x_45 + _1756;
  _1758 = *_1757;
  _1759 = (int) _1758;
  _1760 = _1754 + _1759;
  _1761 = (long unsigned int) bm1y_3228;
  _1762 = _1761 * 2;
  _1763 = p_cost_m1y_52 + _1762;
  _1764 = *_1763;
  _1765 = (int) _1764;
  bcost_1766 = _1760 + _1765;
  # DEBUG cost => bcost_1766
  _1768 = bcost_3176 * 17;
  _1769 = _1768 / 16;
  if (bcost_1766 < _1769)
    goto <bb 164>;
  else
    goto <bb 166>;

  <bb 164>:
  bcost_3345 = MIN_EXPR <bcost_1766, bcost_3176>;
  # DEBUG bcost => bcost_3345
  # DEBUG a => bm0x_139
  # DEBUG b => bm0y_147
  _1770 = bm0x_139 & 65535;
  _1771 = bm0y_147 << 16;
  _1772 = _1770 + _1771;
  _1773 = (unsigned int) _1772;
  # DEBUG a => NULL
  # DEBUG b => NULL
  MEM[(uint32_t *)cache0_mv2_16] = _1773;
  MEM[(uint32_t *)cache0_mv_11] = _1773;
  # DEBUG a => bm1x_3231
  # DEBUG b => bm1y_3228
  _1774 = bm1x_3231 & 65535;
  _1775 = bm1y_3228 << 16;
  _1776 = _1774 + _1775;
  _1777 = (unsigned int) _1776;
  # DEBUG a => NULL
  # DEBUG b => NULL
  MEM[(uint32_t *)cache1_mv2_18] = _1777;
  MEM[(uint32_t *)cache1_mv_17] = _1777;
  _1778 = m0_3(D)->i_pixel;
  bcostrd_1779 = x264_rd_cost_part (h_2(D), i_lambda2_7(D), i8_6(D), _1778);
  # DEBUG costrd => bcostrd_1779
  if (bcostrd_1779 < bcostrd_3177)
    goto <bb 166>;
  else
    goto <bb 165>;

  <bb 165>:

  <bb 166>:
  # bm0x_2369 = PHI <bm0x_139(164), bm0x_2833(163), bm0x_2833(165)>
  # bm0y_2370 = PHI <bm0y_147(164), bm0y_3050(163), bm0y_3050(165)>
  # bm1x_2371 = PHI <bm1x_3231(164), bm1x_3072(163), bm1x_3072(165)>
  # bm1y_2372 = PHI <bm1y_3228(164), bm1y_3073(163), bm1y_3073(165)>
  # bcost_1831 = PHI <bcost_3345(164), bcost_3176(163), bcost_3345(165)>
  # bcostrd_1844 = PHI <bcostrd_1779(164), bcostrd_3177(163), bcostrd_3177(165)>
  # DEBUG bcostrd => bcostrd_1844
  # DEBUG bcost => bcost_1831
  # DEBUG bm1y => bm1y_2372
  # DEBUG bm1x => bm1x_2371
  # DEBUG bm0y => bm0y_2370
  # DEBUG bm0x => bm0x_2369
  if (pass_3229 == 0)
    goto <bb 167>;
  else
    goto <bb 168>;

  <bb 167>:
  pretmp_3658 = visited[prephitmp_4562][prephitmp_4181][prephitmp_3665];
  goto <bb 169>;

  <bb 168>:
  # bcost_3174 = PHI <bcost_1831(166), bcost_2888(162)>
  # bcostrd_2822 = PHI <bcostrd_1844(166), bcostrd_3173(162)>
  # bm0x_3071 = PHI <bm0x_2369(166), bm0x_3076(162)>
  # bm0y_2964 = PHI <bm0y_2370(166), bm0y_2800(162)>
  # bm1x_2900 = PHI <bm1x_2371(166), bm1x_3049(162)>
  # bm1y_3065 = PHI <bm1y_2372(166), bm1y_3070(162)>
  # prephitmp_3660 = PHI <prephitmp_3665(166), prephitmp_4564(162)>
  # prephitmp_3661 = PHI <prephitmp_3666(166), prephitmp_3673(162)>
  # prephitmp_3662 = PHI <prephitmp_3667(166), prephitmp_3675(162)>
  # prephitmp_3663 = PHI <prephitmp_3669(166), prephitmp_4435(162)>
  # prephitmp_3994 = PHI <prephitmp_3997(166), prephitmp_3672(162)>
  # prephitmp_3996 = PHI <prephitmp_3998(166), prephitmp_3674(162)>
  # prephitmp_4177 = PHI <prephitmp_4180(166), prephitmp_4000(162)>
  # prephitmp_4179 = PHI <prephitmp_4181(166), prephitmp_4002(162)>
  # prephitmp_4318 = PHI <prephitmp_4321(166), prephitmp_4183(162)>
  # prephitmp_4320 = PHI <prephitmp_4322(166), prephitmp_4185(162)>
  # prephitmp_4432 = PHI <prephitmp_4433(166), prephitmp_4324(162)>
  # prephitmp_4561 = PHI <prephitmp_4562(166), prephitmp_4507(162)>
  # DEBUG bcostrd => bcostrd_2822
  # DEBUG bcost => bcost_3174
  # DEBUG bm1y => bm1y_3065
  # DEBUG bm1x => bm1x_2900
  # DEBUG bm0y => bm0y_2964
  # DEBUG bm0x => bm0x_3071
  _1784 = visited[prephitmp_4561][prephitmp_4179][prephitmp_3660];
  _1785 = (int) _1784;
  _1787 = _1785 >> prephitmp_3661;
  _1788 = _1787 & 1;
  if (_1788 == 0)
    goto <bb 169>;
  else
    goto <bb 174>;

  <bb 169>:
  # bcost_3175 = PHI <bcost_1831(167), bcost_3174(168)>
  # bcostrd_2789 = PHI <bcostrd_1844(167), bcostrd_2822(168)>
  # bm0x_2932 = PHI <bm0x_2369(167), bm0x_3071(168)>
  # bm0y_2868 = PHI <bm0y_2370(167), bm0y_2964(168)>
  # bm1x_3068 = PHI <bm1x_2371(167), bm1x_2900(168)>
  # bm1y_3069 = PHI <bm1y_2372(167), bm1y_3065(168)>
  # prephitmp_3652 = PHI <prephitmp_3665(167), prephitmp_3660(168)>
  # prephitmp_3653 = PHI <prephitmp_3666(167), prephitmp_3661(168)>
  # prephitmp_3655 = PHI <prephitmp_4181(167), prephitmp_4179(168)>
  # prephitmp_3657 = PHI <prephitmp_4562(167), prephitmp_4561(168)>
  # prephitmp_3659 = PHI <pretmp_3658(167), _1784(168)>
  # prephitmp_3991 = PHI <prephitmp_3667(167), prephitmp_3662(168)>
  # prephitmp_3992 = PHI <prephitmp_3669(167), prephitmp_3663(168)>
  # prephitmp_4174 = PHI <prephitmp_3997(167), prephitmp_3994(168)>
  # prephitmp_4175 = PHI <prephitmp_3998(167), prephitmp_3996(168)>
  # prephitmp_4316 = PHI <prephitmp_4180(167), prephitmp_4177(168)>
  # prephitmp_4429 = PHI <prephitmp_4321(167), prephitmp_4318(168)>
  # prephitmp_4430 = PHI <prephitmp_4322(167), prephitmp_4320(168)>
  # prephitmp_4505 = PHI <prephitmp_4433(167), prephitmp_4432(168)>
  # DEBUG i0 => 6
  # DEBUG i1 => 4
  _1793 = (signed char) prephitmp_3659;
  _1795 = 1 << prephitmp_3653;
  _1796 = (signed char) _1795;
  _1797 = _1793 | _1796;
  _1798 = (unsigned char) _1797;
  visited[prephitmp_3657][prephitmp_3655][prephitmp_3652] = _1798;
  _1799 = h_2(D)->mc.avg[_12];
  _1800 = stride1[4];
  _1801 = stride0[6];
  _1799 (&pix, bw_19, _176, _1801, src1$4_3219, _1800, i_weight_5(D));
  _1802 = h_2(D)->pixf.mbcmp[_12];
  _1803 = m0_3(D)->p_fenc[0];
  _1804 = _1802 (_1803, 16, &pix, bw_19);
  _1805 = (sizetype) bm0x_3230;
  _1806 = _1805 + 1;
  _1807 = _1806 * 2;
  _1808 = p_cost_m0x_30 + _1807;
  _1809 = *_1808;
  _1810 = (int) _1809;
  _1811 = _1804 + _1810;
  _1812 = (long unsigned int) bm0y_3227;
  _1813 = _1812 * 2;
  _1814 = _1813 + 18446744073709551614;
  _1815 = p_cost_m0y_37 + _1814;
  _1816 = *_1815;
  _1817 = (int) _1816;
  _1818 = _1811 + _1817;
  _1819 = (long unsigned int) bm1x_3231;
  _1820 = _1819 * 2;
  _1821 = p_cost_m1x_45 + _1820;
  _1822 = *_1821;
  _1823 = (int) _1822;
  _1824 = _1818 + _1823;
  _1825 = (long unsigned int) bm1y_3228;
  _1826 = _1825 * 2;
  _1827 = p_cost_m1y_52 + _1826;
  _1828 = *_1827;
  _1829 = (int) _1828;
  bcost_1830 = _1824 + _1829;
  # DEBUG cost => bcost_1830
  _1832 = bcost_3175 * 17;
  _1833 = _1832 / 16;
  if (bcost_1830 < _1833)
    goto <bb 170>;
  else
    goto <bb 172>;

  <bb 170>:
  bcost_2990 = MIN_EXPR <bcost_1830, bcost_3175>;
  # DEBUG bcost => bcost_2990
  # DEBUG a => bm0x_128
  # DEBUG b => bm0y_155
  _1834 = bm0x_128 & 65535;
  _1835 = bm0y_155 << 16;
  _1836 = _1834 + _1835;
  _1837 = (unsigned int) _1836;
  # DEBUG a => NULL
  # DEBUG b => NULL
  MEM[(uint32_t *)cache0_mv2_16] = _1837;
  MEM[(uint32_t *)cache0_mv_11] = _1837;
  # DEBUG a => bm1x_3231
  # DEBUG b => bm1y_3228
  _1838 = bm1x_3231 & 65535;
  _1839 = bm1y_3228 << 16;
  _1840 = _1838 + _1839;
  _1841 = (unsigned int) _1840;
  # DEBUG a => NULL
  # DEBUG b => NULL
  MEM[(uint32_t *)cache1_mv2_18] = _1841;
  MEM[(uint32_t *)cache1_mv_17] = _1841;
  _1842 = m0_3(D)->i_pixel;
  bcostrd_1843 = x264_rd_cost_part (h_2(D), i_lambda2_7(D), i8_6(D), _1842);
  # DEBUG costrd => bcostrd_1843
  if (bcostrd_1843 < bcostrd_2789)
    goto <bb 172>;
  else
    goto <bb 171>;

  <bb 171>:

  <bb 172>:
  # bm0x_2374 = PHI <bm0x_128(170), bm0x_2932(169), bm0x_2932(171)>
  # bm0y_2375 = PHI <bm0y_155(170), bm0y_2868(169), bm0y_2868(171)>
  # bm1x_2376 = PHI <bm1x_3231(170), bm1x_3068(169), bm1x_3068(171)>
  # bm1y_2377 = PHI <bm1y_3228(170), bm1y_3069(169), bm1y_3069(171)>
  # bcost_1895 = PHI <bcost_2990(170), bcost_3175(169), bcost_2990(171)>
  # bcostrd_1908 = PHI <bcostrd_1843(170), bcostrd_2789(169), bcostrd_2789(171)>
  # DEBUG bcostrd => bcostrd_1908
  # DEBUG bcost => bcost_1895
  # DEBUG bm1y => bm1y_2377
  # DEBUG bm1x => bm1x_2376
  # DEBUG bm0y => bm0y_2375
  # DEBUG bm0x => bm0x_2374
  if (pass_3229 == 0)
    goto <bb 173>;
  else
    goto <bb 174>;

  <bb 173>:
  pretmp_3646 = visited[prephitmp_3657][prephitmp_4429][prephitmp_3652];
  goto <bb 175>;

  <bb 174>:
  # bcost_3028 = PHI <bcost_1895(172), bcost_3174(168)>
  # bcostrd_3171 = PHI <bcostrd_1908(172), bcostrd_2822(168)>
  # bm0x_3066 = PHI <bm0x_2374(172), bm0x_3071(168)>
  # bm0y_2834 = PHI <bm0y_2375(172), bm0y_2964(168)>
  # bm1x_3052 = PHI <bm1x_2376(172), bm1x_2900(168)>
  # bm1y_3063 = PHI <bm1y_2377(172), bm1y_3065(168)>
  # prephitmp_3648 = PHI <prephitmp_3652(172), prephitmp_3660(168)>
  # prephitmp_3649 = PHI <prephitmp_3653(172), prephitmp_3661(168)>
  # prephitmp_3650 = PHI <prephitmp_3655(172), prephitmp_4179(168)>
  # prephitmp_3651 = PHI <prephitmp_3657(172), prephitmp_4561(168)>
  # prephitmp_3988 = PHI <prephitmp_3991(172), prephitmp_3662(168)>
  # prephitmp_3990 = PHI <prephitmp_3992(172), prephitmp_3663(168)>
  # prephitmp_4171 = PHI <prephitmp_4174(172), prephitmp_3994(168)>
  # prephitmp_4173 = PHI <prephitmp_4175(172), prephitmp_3996(168)>
  # prephitmp_4315 = PHI <prephitmp_4316(172), prephitmp_4177(168)>
  # prephitmp_4426 = PHI <prephitmp_4429(172), prephitmp_4318(168)>
  # prephitmp_4428 = PHI <prephitmp_4430(172), prephitmp_4320(168)>
  # prephitmp_4504 = PHI <prephitmp_4505(172), prephitmp_4432(168)>
  # DEBUG bcostrd => bcostrd_3171
  # DEBUG bcost => bcost_3028
  # DEBUG bm1y => bm1y_3063
  # DEBUG bm1x => bm1x_3052
  # DEBUG bm0y => bm0y_2834
  # DEBUG bm0x => bm0x_3066
  _1848 = visited[prephitmp_3651][prephitmp_4426][prephitmp_3648];
  _1849 = (int) _1848;
  _1851 = _1849 >> prephitmp_4428;
  _1852 = _1851 & 1;
  if (_1852 == 0)
    goto <bb 175>;
  else
    goto <bb 180>;

  <bb 175>:
  # bcost_3027 = PHI <bcost_1895(173), bcost_3028(174)>
  # bcostrd_3169 = PHI <bcostrd_1908(173), bcostrd_3171(174)>
  # bm0x_3067 = PHI <bm0x_2374(173), bm0x_3066(174)>
  # bm0y_2801 = PHI <bm0y_2375(173), bm0y_2834(174)>
  # bm1x_3051 = PHI <bm1x_2376(173), bm1x_3052(174)>
  # bm1y_3061 = PHI <bm1y_2377(173), bm1y_3063(174)>
  # prephitmp_3641 = PHI <prephitmp_4429(173), prephitmp_4426(174)>
  # prephitmp_3642 = PHI <prephitmp_3652(173), prephitmp_3648(174)>
  # prephitmp_3644 = PHI <prephitmp_4430(173), prephitmp_4428(174)>
  # prephitmp_3645 = PHI <prephitmp_3657(173), prephitmp_3651(174)>
  # prephitmp_3647 = PHI <pretmp_3646(173), _1848(174)>
  # prephitmp_3985 = PHI <prephitmp_3653(173), prephitmp_3649(174)>
  # prephitmp_3986 = PHI <prephitmp_3655(173), prephitmp_3650(174)>
  # prephitmp_4168 = PHI <prephitmp_3991(173), prephitmp_3988(174)>
  # prephitmp_4169 = PHI <prephitmp_3992(173), prephitmp_3990(174)>
  # prephitmp_4312 = PHI <prephitmp_4174(173), prephitmp_4171(174)>
  # prephitmp_4313 = PHI <prephitmp_4175(173), prephitmp_4173(174)>
  # prephitmp_4424 = PHI <prephitmp_4316(173), prephitmp_4315(174)>
  # prephitmp_4559 = PHI <prephitmp_4505(173), prephitmp_4504(174)>
  # DEBUG i0 => 7
  # DEBUG i1 => 3
  _1857 = (signed char) prephitmp_3647;
  _1859 = 1 << prephitmp_3644;
  _1860 = (signed char) _1859;
  _1861 = _1857 | _1860;
  _1862 = (unsigned char) _1861;
  visited[prephitmp_3645][prephitmp_3641][prephitmp_3642] = _1862;
  _1863 = h_2(D)->mc.avg[_12];
  _1864 = stride1[3];
  _1865 = stride0[7];
  _1863 (&pix, bw_19, _131, _1865, _161, _1864, i_weight_5(D));
  _1866 = h_2(D)->pixf.mbcmp[_12];
  _1867 = m0_3(D)->p_fenc[0];
  _1868 = _1866 (_1867, 16, &pix, bw_19);
  _1869 = (sizetype) bm0x_3230;
  _1870 = _1869 + 1;
  _1871 = _1870 * 2;
  _1872 = p_cost_m0x_30 + _1871;
  _1873 = *_1872;
  _1874 = (int) _1873;
  _1875 = _1868 + _1874;
  _1876 = (long unsigned int) bm0y_3227;
  _1877 = _1876 * 2;
  _1878 = p_cost_m0y_37 + _1877;
  _1879 = *_1878;
  _1880 = (int) _1879;
  _1881 = _1875 + _1880;
  _1882 = (long unsigned int) bm1x_3231;
  _1883 = _1882 * 2;
  _1884 = p_cost_m1x_45 + _1883;
  _1885 = *_1884;
  _1886 = (int) _1885;
  _1887 = _1881 + _1886;
  _1888 = (long unsigned int) bm1y_3228;
  _1889 = _1888 * 2;
  _1890 = _1889 + 18446744073709551614;
  _1891 = p_cost_m1y_52 + _1890;
  _1892 = *_1891;
  _1893 = (int) _1892;
  bcost_1894 = _1887 + _1893;
  # DEBUG cost => bcost_1894
  _1896 = bcost_3027 * 17;
  _1897 = _1896 / 16;
  if (bcost_1894 < _1897)
    goto <bb 176>;
  else
    goto <bb 178>;

  <bb 176>:
  bcost_3346 = MIN_EXPR <bcost_1894, bcost_3027>;
  # DEBUG bcost => bcost_3346
  # DEBUG a => bm0x_128
  # DEBUG b => bm0y_3227
  _1898 = bm0x_128 & 65535;
  _1899 = bm0y_3227 << 16;
  _1900 = _1898 + _1899;
  _1901 = (unsigned int) _1900;
  # DEBUG a => NULL
  # DEBUG b => NULL
  MEM[(uint32_t *)cache0_mv2_16] = _1901;
  MEM[(uint32_t *)cache0_mv_11] = _1901;
  # DEBUG a => bm1x_3231
  # DEBUG b => bm1y_159
  _1902 = bm1x_3231 & 65535;
  _1903 = bm1y_159 << 16;
  _1904 = _1902 + _1903;
  _1905 = (unsigned int) _1904;
  # DEBUG a => NULL
  # DEBUG b => NULL
  MEM[(uint32_t *)cache1_mv2_18] = _1905;
  MEM[(uint32_t *)cache1_mv_17] = _1905;
  _1906 = m0_3(D)->i_pixel;
  bcostrd_1907 = x264_rd_cost_part (h_2(D), i_lambda2_7(D), i8_6(D), _1906);
  # DEBUG costrd => bcostrd_1907
  if (bcostrd_1907 < bcostrd_3169)
    goto <bb 178>;
  else
    goto <bb 177>;

  <bb 177>:

  <bb 178>:
  # bm0x_2379 = PHI <bm0x_128(176), bm0x_3067(175), bm0x_3067(177)>
  # bm0y_2380 = PHI <bm0y_3227(176), bm0y_2801(175), bm0y_2801(177)>
  # bm1x_2381 = PHI <bm1x_3231(176), bm1x_3051(175), bm1x_3051(177)>
  # bm1y_2382 = PHI <bm1y_159(176), bm1y_3061(175), bm1y_3061(177)>
  # bcost_1959 = PHI <bcost_3346(176), bcost_3027(175), bcost_3346(177)>
  # bcostrd_1972 = PHI <bcostrd_1907(176), bcostrd_3169(175), bcostrd_3169(177)>
  # DEBUG bcostrd => bcostrd_1972
  # DEBUG bcost => bcost_1959
  # DEBUG bm1y => bm1y_2382
  # DEBUG bm1x => bm1x_2381
  # DEBUG bm0y => bm0y_2380
  # DEBUG bm0x => bm0x_2379
  if (pass_3229 == 0)
    goto <bb 179>;
  else
    goto <bb 180>;

  <bb 179>:
  pretmp_3634 = visited[prephitmp_4169][prephitmp_3641][prephitmp_3642];
  goto <bb 181>;

  <bb 180>:
  # bcost_3172 = PHI <bcost_1959(178), bcost_3028(174)>
  # bcostrd_2921 = PHI <bcostrd_1972(178), bcostrd_3171(174)>
  # bm0x_3064 = PHI <bm0x_2379(178), bm0x_3066(174)>
  # bm0y_2933 = PHI <bm0y_2380(178), bm0y_2834(174)>
  # bm1x_2869 = PHI <bm1x_2381(178), bm1x_3052(174)>
  # bm1y_3059 = PHI <bm1y_2382(178), bm1y_3063(174)>
  # prephitmp_3636 = PHI <prephitmp_3641(178), prephitmp_4426(174)>
  # prephitmp_3637 = PHI <prephitmp_3642(178), prephitmp_3648(174)>
  # prephitmp_3638 = PHI <prephitmp_3644(178), prephitmp_4428(174)>
  # prephitmp_3639 = PHI <prephitmp_3645(178), prephitmp_3651(174)>
  # prephitmp_3982 = PHI <prephitmp_3985(178), prephitmp_3649(174)>
  # prephitmp_3984 = PHI <prephitmp_3986(178), prephitmp_3650(174)>
  # prephitmp_4165 = PHI <prephitmp_4168(178), prephitmp_3988(174)>
  # prephitmp_4167 = PHI <prephitmp_4169(178), prephitmp_3990(174)>
  # prephitmp_4309 = PHI <prephitmp_4312(178), prephitmp_4171(174)>
  # prephitmp_4311 = PHI <prephitmp_4313(178), prephitmp_4173(174)>
  # prephitmp_4423 = PHI <prephitmp_4424(178), prephitmp_4315(174)>
  # prephitmp_4558 = PHI <prephitmp_4559(178), prephitmp_4504(174)>
  # DEBUG bcostrd => bcostrd_2921
  # DEBUG bcost => bcost_3172
  # DEBUG bm1y => bm1y_3059
  # DEBUG bm1x => bm1x_2869
  # DEBUG bm0y => bm0y_2933
  # DEBUG bm0x => bm0x_3064
  _1912 = visited[prephitmp_4167][prephitmp_3636][prephitmp_3637];
  _1913 = (int) _1912;
  _1915 = _1913 >> prephitmp_4558;
  _1916 = _1915 & 1;
  if (_1916 == 0)
    goto <bb 181>;
  else
    goto <bb 186>;

  <bb 181>:
  # bcost_3170 = PHI <bcost_1959(179), bcost_3172(180)>
  # bcostrd_2953 = PHI <bcostrd_1972(179), bcostrd_2921(180)>
  # bm0x_3062 = PHI <bm0x_2379(179), bm0x_3064(180)>
  # bm0y_2965 = PHI <bm0y_2380(179), bm0y_2933(180)>
  # bm1x_2901 = PHI <bm1x_2381(179), bm1x_2869(180)>
  # bm1y_3056 = PHI <bm1y_2382(179), bm1y_3059(180)>
  # prephitmp_3628 = PHI <prephitmp_3641(179), prephitmp_3636(180)>
  # prephitmp_3629 = PHI <prephitmp_3642(179), prephitmp_3637(180)>
  # prephitmp_3631 = PHI <prephitmp_4559(179), prephitmp_4558(180)>
  # prephitmp_3633 = PHI <prephitmp_4169(179), prephitmp_4167(180)>
  # prephitmp_3635 = PHI <pretmp_3634(179), _1912(180)>
  # prephitmp_3979 = PHI <prephitmp_3644(179), prephitmp_3638(180)>
  # prephitmp_3980 = PHI <prephitmp_3645(179), prephitmp_3639(180)>
  # prephitmp_4162 = PHI <prephitmp_3985(179), prephitmp_3982(180)>
  # prephitmp_4163 = PHI <prephitmp_3986(179), prephitmp_3984(180)>
  # prephitmp_4307 = PHI <prephitmp_4168(179), prephitmp_4165(180)>
  # prephitmp_4420 = PHI <prephitmp_4312(179), prephitmp_4309(180)>
  # prephitmp_4421 = PHI <prephitmp_4313(179), prephitmp_4311(180)>
  # prephitmp_4502 = PHI <prephitmp_4424(179), prephitmp_4423(180)>
  # DEBUG i0 => 1
  # DEBUG i1 => 5
  _1921 = (signed char) prephitmp_3635;
  _1923 = 1 << prephitmp_3631;
  _1924 = (signed char) _1923;
  _1925 = _1921 | _1924;
  _1926 = (unsigned char) _1925;
  visited[prephitmp_3633][prephitmp_3628][prephitmp_3629] = _1926;
  _1927 = h_2(D)->mc.avg[_12];
  _1928 = stride1[5];
  _1929 = stride0[1];
  _1927 (&pix, bw_19, _141, _1929, _153, _1928, i_weight_5(D));
  _1930 = h_2(D)->pixf.mbcmp[_12];
  _1931 = m0_3(D)->p_fenc[0];
  _1932 = _1930 (_1931, 16, &pix, bw_19);
  _1933 = (long unsigned int) bm0x_3230;
  _1934 = _1933 * 2;
  _1935 = _1934 + 18446744073709551614;
  _1936 = p_cost_m0x_30 + _1935;
  _1937 = *_1936;
  _1938 = (int) _1937;
  _1939 = _1932 + _1938;
  _1940 = (long unsigned int) bm0y_3227;
  _1941 = _1940 * 2;
  _1942 = p_cost_m0y_37 + _1941;
  _1943 = *_1942;
  _1944 = (int) _1943;
  _1945 = _1939 + _1944;
  _1946 = (long unsigned int) bm1x_3231;
  _1947 = _1946 * 2;
  _1948 = p_cost_m1x_45 + _1947;
  _1949 = *_1948;
  _1950 = (int) _1949;
  _1951 = _1945 + _1950;
  _1952 = (sizetype) bm1y_3228;
  _1953 = _1952 + 1;
  _1954 = _1953 * 2;
  _1955 = p_cost_m1y_52 + _1954;
  _1956 = *_1955;
  _1957 = (int) _1956;
  bcost_1958 = _1951 + _1957;
  # DEBUG cost => bcost_1958
  _1960 = bcost_3170 * 17;
  _1961 = _1960 / 16;
  if (bcost_1958 < _1961)
    goto <bb 182>;
  else
    goto <bb 184>;

  <bb 182>:
  bcost_3347 = MIN_EXPR <bcost_1958, bcost_3170>;
  # DEBUG bcost => bcost_3347
  # DEBUG a => bm0x_139
  # DEBUG b => bm0y_3227
  _1962 = bm0x_139 & 65535;
  _1963 = bm0y_3227 << 16;
  _1964 = _1962 + _1963;
  _1965 = (unsigned int) _1964;
  # DEBUG a => NULL
  # DEBUG b => NULL
  MEM[(uint32_t *)cache0_mv2_16] = _1965;
  MEM[(uint32_t *)cache0_mv_11] = _1965;
  # DEBUG a => bm1x_3231
  # DEBUG b => bm1y_151
  _1966 = bm1x_3231 & 65535;
  _1967 = bm1y_151 << 16;
  _1968 = _1966 + _1967;
  _1969 = (unsigned int) _1968;
  # DEBUG a => NULL
  # DEBUG b => NULL
  MEM[(uint32_t *)cache1_mv2_18] = _1969;
  MEM[(uint32_t *)cache1_mv_17] = _1969;
  _1970 = m0_3(D)->i_pixel;
  bcostrd_1971 = x264_rd_cost_part (h_2(D), i_lambda2_7(D), i8_6(D), _1970);
  # DEBUG costrd => bcostrd_1971
  if (bcostrd_1971 < bcostrd_2953)
    goto <bb 184>;
  else
    goto <bb 183>;

  <bb 183>:

  <bb 184>:
  # bm0x_2384 = PHI <bm0x_139(182), bm0x_3062(181), bm0x_3062(183)>
  # bm0y_2385 = PHI <bm0y_3227(182), bm0y_2965(181), bm0y_2965(183)>
  # bm1x_2386 = PHI <bm1x_3231(182), bm1x_2901(181), bm1x_2901(183)>
  # bm1y_2387 = PHI <bm1y_151(182), bm1y_3056(181), bm1y_3056(183)>
  # bcost_2023 = PHI <bcost_3347(182), bcost_3170(181), bcost_3347(183)>
  # bcostrd_2036 = PHI <bcostrd_1971(182), bcostrd_2953(181), bcostrd_2953(183)>
  # DEBUG bcostrd => bcostrd_2036
  # DEBUG bcost => bcost_2023
  # DEBUG bm1y => bm1y_2387
  # DEBUG bm1x => bm1x_2386
  # DEBUG bm0y => bm0y_2385
  # DEBUG bm0x => bm0x_2384
  if (pass_3229 == 0)
    goto <bb 185>;
  else
    goto <bb 186>;

  <bb 185>:
  pretmp_3622 = visited[prephitmp_4420][prephitmp_4163][prephitmp_3629];
  goto <bb 187>;

  <bb 186>:
  # bcost_2857 = PHI <bcost_2023(184), bcost_3172(180)>
  # bcostrd_3167 = PHI <bcostrd_2036(184), bcostrd_2921(180)>
  # bm0x_3060 = PHI <bm0x_2384(184), bm0x_3064(180)>
  # bm0y_3058 = PHI <bm0y_2385(184), bm0y_2933(180)>
  # bm1x_2802 = PHI <bm1x_2386(184), bm1x_2869(180)>
  # bm1y_3053 = PHI <bm1y_2387(184), bm1y_3059(180)>
  # prephitmp_3624 = PHI <prephitmp_3628(184), prephitmp_3636(180)>
  # prephitmp_3625 = PHI <prephitmp_3629(184), prephitmp_3637(180)>
  # prephitmp_3626 = PHI <prephitmp_3631(184), prephitmp_4558(180)>
  # prephitmp_3627 = PHI <prephitmp_3633(184), prephitmp_4167(180)>
  # prephitmp_3976 = PHI <prephitmp_3979(184), prephitmp_3638(180)>
  # prephitmp_3978 = PHI <prephitmp_3980(184), prephitmp_3639(180)>
  # prephitmp_4159 = PHI <prephitmp_4162(184), prephitmp_3982(180)>
  # prephitmp_4161 = PHI <prephitmp_4163(184), prephitmp_3984(180)>
  # prephitmp_4306 = PHI <prephitmp_4307(184), prephitmp_4165(180)>
  # prephitmp_4417 = PHI <prephitmp_4420(184), prephitmp_4309(180)>
  # prephitmp_4419 = PHI <prephitmp_4421(184), prephitmp_4311(180)>
  # prephitmp_4501 = PHI <prephitmp_4502(184), prephitmp_4423(180)>
  # DEBUG bcostrd => bcostrd_3167
  # DEBUG bcost => bcost_2857
  # DEBUG bm1y => bm1y_3053
  # DEBUG bm1x => bm1x_2802
  # DEBUG bm0y => bm0y_3058
  # DEBUG bm0x => bm0x_3060
  _1976 = visited[prephitmp_4417][prephitmp_4161][prephitmp_3625];
  _1977 = (int) _1976;
  _1979 = _1977 >> prephitmp_3626;
  _1980 = _1979 & 1;
  if (_1980 == 0)
    goto <bb 187>;
  else
    goto <bb 192>;

  <bb 187>:
  # bcost_2889 = PHI <bcost_2023(185), bcost_2857(186)>
  # bcostrd_3164 = PHI <bcostrd_2036(185), bcostrd_3167(186)>
  # bm0x_3057 = PHI <bm0x_2384(185), bm0x_3060(186)>
  # bm0y_2835 = PHI <bm0y_2385(185), bm0y_3058(186)>
  # bm1x_3054 = PHI <bm1x_2386(185), bm1x_2802(186)>
  # bm1y_2838 = PHI <bm1y_2387(185), bm1y_3053(186)>
  # prephitmp_3617 = PHI <prephitmp_4420(185), prephitmp_4417(186)>
  # prephitmp_3618 = PHI <prephitmp_3629(185), prephitmp_3625(186)>
  # prephitmp_3619 = PHI <prephitmp_3631(185), prephitmp_3626(186)>
  # prephitmp_3621 = PHI <prephitmp_4163(185), prephitmp_4161(186)>
  # prephitmp_3623 = PHI <pretmp_3622(185), _1976(186)>
  # prephitmp_3973 = PHI <prephitmp_3628(185), prephitmp_3624(186)>
  # prephitmp_3974 = PHI <prephitmp_3633(185), prephitmp_3627(186)>
  # prephitmp_4156 = PHI <prephitmp_3979(185), prephitmp_3976(186)>
  # prephitmp_4157 = PHI <prephitmp_3980(185), prephitmp_3978(186)>
  # prephitmp_4304 = PHI <prephitmp_4162(185), prephitmp_4159(186)>
  # prephitmp_4415 = PHI <prephitmp_4307(185), prephitmp_4306(186)>
  # prephitmp_4499 = PHI <prephitmp_4421(185), prephitmp_4419(186)>
  # prephitmp_4556 = PHI <prephitmp_4502(185), prephitmp_4501(186)>
  # DEBUG i0 => 3
  # DEBUG i1 => 5
  _1985 = (signed char) prephitmp_3623;
  _1987 = 1 << prephitmp_3619;
  _1988 = (signed char) _1987;
  _1989 = _1985 | _1988;
  _1990 = (unsigned char) _1989;
  visited[prephitmp_3617][prephitmp_3621][prephitmp_3618] = _1990;
  _1991 = h_2(D)->mc.avg[_12];
  _1992 = stride1[5];
  _1993 = stride0[3];
  _1991 (&pix, bw_19, _157, _1993, _153, _1992, i_weight_5(D));
  _1994 = h_2(D)->pixf.mbcmp[_12];
  _1995 = m0_3(D)->p_fenc[0];
  _1996 = _1994 (_1995, 16, &pix, bw_19);
  _1997 = (long unsigned int) bm0x_3230;
  _1998 = _1997 * 2;
  _1999 = p_cost_m0x_30 + _1998;
  _2000 = *_1999;
  _2001 = (int) _2000;
  _2002 = _1996 + _2001;
  _2003 = (long unsigned int) bm0y_3227;
  _2004 = _2003 * 2;
  _2005 = _2004 + 18446744073709551614;
  _2006 = p_cost_m0y_37 + _2005;
  _2007 = *_2006;
  _2008 = (int) _2007;
  _2009 = _2002 + _2008;
  _2010 = (long unsigned int) bm1x_3231;
  _2011 = _2010 * 2;
  _2012 = p_cost_m1x_45 + _2011;
  _2013 = *_2012;
  _2014 = (int) _2013;
  _2015 = _2009 + _2014;
  _2016 = (sizetype) bm1y_3228;
  _2017 = _2016 + 1;
  _2018 = _2017 * 2;
  _2019 = p_cost_m1y_52 + _2018;
  _2020 = *_2019;
  _2021 = (int) _2020;
  bcost_2022 = _2015 + _2021;
  # DEBUG cost => bcost_2022
  _2024 = bcost_2889 * 17;
  _2025 = _2024 / 16;
  if (bcost_2022 < _2025)
    goto <bb 188>;
  else
    goto <bb 190>;

  <bb 188>:
  bcost_2256 = MIN_EXPR <bcost_2022, bcost_2889>;
  # DEBUG bcost => bcost_2256
  # DEBUG a => bm0x_3230
  # DEBUG b => bm0y_155
  _2026 = bm0x_3230 & 65535;
  _2027 = bm0y_155 << 16;
  _2028 = _2026 + _2027;
  _2029 = (unsigned int) _2028;
  # DEBUG a => NULL
  # DEBUG b => NULL
  MEM[(uint32_t *)cache0_mv2_16] = _2029;
  MEM[(uint32_t *)cache0_mv_11] = _2029;
  # DEBUG a => bm1x_3231
  # DEBUG b => bm1y_151
  _2030 = bm1x_3231 & 65535;
  _2031 = bm1y_151 << 16;
  _2032 = _2030 + _2031;
  _2033 = (unsigned int) _2032;
  # DEBUG a => NULL
  # DEBUG b => NULL
  MEM[(uint32_t *)cache1_mv2_18] = _2033;
  MEM[(uint32_t *)cache1_mv_17] = _2033;
  _2034 = m0_3(D)->i_pixel;
  bcostrd_2035 = x264_rd_cost_part (h_2(D), i_lambda2_7(D), i8_6(D), _2034);
  # DEBUG costrd => bcostrd_2035
  if (bcostrd_2035 < bcostrd_3164)
    goto <bb 190>;
  else
    goto <bb 189>;

  <bb 189>:

  <bb 190>:
  # bm0x_2389 = PHI <bm0x_3230(188), bm0x_3057(187), bm0x_3057(189)>
  # bm0y_2390 = PHI <bm0y_155(188), bm0y_2835(187), bm0y_2835(189)>
  # bm1x_2391 = PHI <bm1x_3231(188), bm1x_3054(187), bm1x_3054(189)>
  # bm1y_2392 = PHI <bm1y_151(188), bm1y_2838(187), bm1y_2838(189)>
  # bcost_2087 = PHI <bcost_2256(188), bcost_2889(187), bcost_2256(189)>
  # bcostrd_2100 = PHI <bcostrd_2035(188), bcostrd_3164(187), bcostrd_3164(189)>
  # DEBUG bcostrd => bcostrd_2100
  # DEBUG bcost => bcost_2087
  # DEBUG bm1y => bm1y_2392
  # DEBUG bm1x => bm1x_2391
  # DEBUG bm0y => bm0y_2390
  # DEBUG bm0x => bm0x_2389
  if (pass_3229 == 0)
    goto <bb 191>;
  else
    goto <bb 192>;

  <bb 191>:
  pretmp_3612 = visited[prephitmp_3617][prephitmp_4415][prephitmp_3618];
  goto <bb 193>;

  <bb 192>:
  # bcost_3168 = PHI <bcost_2087(190), bcost_2857(186)>
  # bcostrd_3166 = PHI <bcostrd_2100(190), bcostrd_3167(186)>
  # bm0x_2804 = PHI <bm0x_2389(190), bm0x_3060(186)>
  # bm0y_2985 = PHI <bm0y_2390(190), bm0y_3058(186)>
  # bm1x_2836 = PHI <bm1x_2391(190), bm1x_2802(186)>
  # bm1y_2966 = PHI <bm1y_2392(190), bm1y_3053(186)>
  # prephitmp_3614 = PHI <prephitmp_3617(190), prephitmp_4417(186)>
  # prephitmp_3615 = PHI <prephitmp_3618(190), prephitmp_3625(186)>
  # prephitmp_3970 = PHI <prephitmp_3973(190), prephitmp_3624(186)>
  # prephitmp_3972 = PHI <prephitmp_3974(190), prephitmp_3627(186)>
  # prephitmp_4153 = PHI <prephitmp_4156(190), prephitmp_3976(186)>
  # prephitmp_4155 = PHI <prephitmp_4157(190), prephitmp_3978(186)>
  # prephitmp_4303 = PHI <prephitmp_4304(190), prephitmp_4159(186)>
  # prephitmp_4414 = PHI <prephitmp_4415(190), prephitmp_4306(186)>
  # prephitmp_4498 = PHI <prephitmp_4499(190), prephitmp_4419(186)>
  # prephitmp_4555 = PHI <prephitmp_4556(190), prephitmp_4501(186)>
  # DEBUG bcostrd => bcostrd_3166
  # DEBUG bcost => bcost_3168
  # DEBUG bm1y => bm1y_2966
  # DEBUG bm1x => bm1x_2836
  # DEBUG bm0y => bm0y_2985
  # DEBUG bm0x => bm0x_2804
  _2040 = visited[prephitmp_3614][prephitmp_4414][prephitmp_3615];
  _2041 = (int) _2040;
  _2043 = _2041 >> prephitmp_4153;
  _2044 = _2043 & 1;
  if (_2044 == 0)
    goto <bb 193>;
  else
    goto <bb 198>;

  <bb 193>:
  # bcost_3165 = PHI <bcost_2087(191), bcost_3168(192)>
  # bcostrd_2823 = PHI <bcostrd_2100(191), bcostrd_3166(192)>
  # bm0x_3055 = PHI <bm0x_2389(191), bm0x_2804(192)>
  # bm0y_2986 = PHI <bm0y_2390(191), bm0y_2985(192)>
  # bm1x_2934 = PHI <bm1x_2391(191), bm1x_2836(192)>
  # bm1y_2870 = PHI <bm1y_2392(191), bm1y_2966(192)>
  # prephitmp_3606 = PHI <prephitmp_3617(191), prephitmp_3614(192)>
  # prephitmp_3607 = PHI <prephitmp_3618(191), prephitmp_3615(192)>
  # prephitmp_3609 = PHI <prephitmp_4156(191), prephitmp_4153(192)>
  # prephitmp_3611 = PHI <prephitmp_4415(191), prephitmp_4414(192)>
  # prephitmp_3613 = PHI <pretmp_3612(191), _2040(192)>
  # prephitmp_4150 = PHI <prephitmp_3973(191), prephitmp_3970(192)>
  # prephitmp_4151 = PHI <prephitmp_3974(191), prephitmp_3972(192)>
  # prephitmp_4301 = PHI <prephitmp_4157(191), prephitmp_4155(192)>
  # prephitmp_4412 = PHI <prephitmp_4304(191), prephitmp_4303(192)>
  # prephitmp_4553 = PHI <prephitmp_4499(191), prephitmp_4498(192)>
  # prephitmp_4586 = PHI <prephitmp_4556(191), prephitmp_4555(192)>
  # DEBUG i0 => 5
  # DEBUG i1 => 3
  _2049 = (signed char) prephitmp_3613;
  _2051 = 1 << prephitmp_3609;
  _2052 = (signed char) _2051;
  _2053 = _2049 | _2052;
  _2054 = (unsigned char) _2053;
  visited[prephitmp_3606][prephitmp_3611][prephitmp_3607] = _2054;
  _2055 = h_2(D)->mc.avg[_12];
  _2056 = stride1[3];
  _2057 = stride0[5];
  _2055 (&pix, bw_19, _149, _2057, _161, _2056, i_weight_5(D));
  _2058 = h_2(D)->pixf.mbcmp[_12];
  _2059 = m0_3(D)->p_fenc[0];
  _2060 = _2058 (_2059, 16, &pix, bw_19);
  _2061 = (long unsigned int) bm0x_3230;
  _2062 = _2061 * 2;
  _2063 = p_cost_m0x_30 + _2062;
  _2064 = *_2063;
  _2065 = (int) _2064;
  _2066 = _2060 + _2065;
  _2067 = (sizetype) bm0y_3227;
  _2068 = _2067 + 1;
  _2069 = _2068 * 2;
  _2070 = p_cost_m0y_37 + _2069;
  _2071 = *_2070;
  _2072 = (int) _2071;
  _2073 = _2066 + _2072;
  _2074 = (long unsigned int) bm1x_3231;
  _2075 = _2074 * 2;
  _2076 = p_cost_m1x_45 + _2075;
  _2077 = *_2076;
  _2078 = (int) _2077;
  _2079 = _2073 + _2078;
  _2080 = (long unsigned int) bm1y_3228;
  _2081 = _2080 * 2;
  _2082 = _2081 + 18446744073709551614;
  _2083 = p_cost_m1y_52 + _2082;
  _2084 = *_2083;
  _2085 = (int) _2084;
  bcost_2086 = _2079 + _2085;
  # DEBUG cost => bcost_2086
  _2088 = bcost_3165 * 17;
  _2089 = _2088 / 16;
  if (bcost_2086 < _2089)
    goto <bb 194>;
  else
    goto <bb 196>;

  <bb 194>:
  bcost_2255 = MIN_EXPR <bcost_2086, bcost_3165>;
  # DEBUG bcost => bcost_2255
  # DEBUG a => bm0x_3230
  # DEBUG b => bm0y_147
  _2090 = bm0x_3230 & 65535;
  _2091 = bm0y_147 << 16;
  _2092 = _2090 + _2091;
  _2093 = (unsigned int) _2092;
  # DEBUG a => NULL
  # DEBUG b => NULL
  MEM[(uint32_t *)cache0_mv2_16] = _2093;
  MEM[(uint32_t *)cache0_mv_11] = _2093;
  # DEBUG a => bm1x_3231
  # DEBUG b => bm1y_159
  _2094 = bm1x_3231 & 65535;
  _2095 = bm1y_159 << 16;
  _2096 = _2094 + _2095;
  _2097 = (unsigned int) _2096;
  # DEBUG a => NULL
  # DEBUG b => NULL
  MEM[(uint32_t *)cache1_mv2_18] = _2097;
  MEM[(uint32_t *)cache1_mv_17] = _2097;
  _2098 = m0_3(D)->i_pixel;
  bcostrd_2099 = x264_rd_cost_part (h_2(D), i_lambda2_7(D), i8_6(D), _2098);
  # DEBUG costrd => bcostrd_2099
  if (bcostrd_2099 < bcostrd_2823)
    goto <bb 196>;
  else
    goto <bb 195>;

  <bb 195>:

  <bb 196>:
  # bm0x_2394 = PHI <bm0x_3230(194), bm0x_3055(193), bm0x_3055(195)>
  # bm0y_2395 = PHI <bm0y_147(194), bm0y_2986(193), bm0y_2986(195)>
  # bm1x_2396 = PHI <bm1x_3231(194), bm1x_2934(193), bm1x_2934(195)>
  # bm1y_2397 = PHI <bm1y_159(194), bm1y_2870(193), bm1y_2870(195)>
  # bcost_2151 = PHI <bcost_2255(194), bcost_3165(193), bcost_2255(195)>
  # bcostrd_2164 = PHI <bcostrd_2099(194), bcostrd_2823(193), bcostrd_2823(195)>
  # DEBUG bcostrd => bcostrd_2164
  # DEBUG bcost => bcost_2151
  # DEBUG bm1y => bm1y_2397
  # DEBUG bm1x => bm1x_2396
  # DEBUG bm0y => bm0y_2395
  # DEBUG bm0x => bm0x_2394
  if (pass_3229 == 0)
    goto <bb 197>;
  else
    goto <bb 198>;

  <bb 197>:
  pretmp_3604 = visited[prephitmp_4151][prephitmp_4150][prephitmp_4586];
  goto <bb 199>;

  <bb 198>:
  # bcost_2790 = PHI <bcost_2151(196), bcost_3168(192)>
  # bcostrd_3029 = PHI <bcostrd_2164(196), bcostrd_3166(192)>
  # bm0x_2902 = PHI <bm0x_2394(196), bm0x_2804(192)>
  # bm0y_2983 = PHI <bm0y_2395(196), bm0y_2985(192)>
  # bm1x_2980 = PHI <bm1x_2396(196), bm1x_2836(192)>
  # bm1y_2979 = PHI <bm1y_2397(196), bm1y_2966(192)>
  # prephitmp_4147 = PHI <prephitmp_4150(196), prephitmp_3970(192)>
  # prephitmp_4149 = PHI <prephitmp_4151(196), prephitmp_3972(192)>
  # prephitmp_4300 = PHI <prephitmp_4301(196), prephitmp_4155(192)>
  # prephitmp_4411 = PHI <prephitmp_4412(196), prephitmp_4303(192)>
  # prephitmp_4552 = PHI <prephitmp_4553(196), prephitmp_4498(192)>
  # prephitmp_4585 = PHI <prephitmp_4586(196), prephitmp_4555(192)>
  # DEBUG bcostrd => bcostrd_3029
  # DEBUG bcost => bcost_2790
  # DEBUG bm1y => bm1y_2979
  # DEBUG bm1x => bm1x_2980
  # DEBUG bm0y => bm0y_2983
  # DEBUG bm0x => bm0x_2902
  _2104 = visited[prephitmp_4149][prephitmp_4147][prephitmp_4585];
  _2105 = (int) _2104;
  _2107 = _2105 >> prephitmp_4411;
  _2108 = _2107 & 1;
  if (_2108 == 0)
    goto <bb 199>;
  else
    goto <bb 204>;

  <bb 199>:
  # bcost_3030 = PHI <bcost_2151(197), bcost_2790(198)>
  # bcostrd_3162 = PHI <bcostrd_2164(197), bcostrd_3029(198)>
  # bm0x_2982 = PHI <bm0x_2394(197), bm0x_2902(198)>
  # bm0y_2984 = PHI <bm0y_2395(197), bm0y_2983(198)>
  # bm1x_2981 = PHI <bm1x_2396(197), bm1x_2980(198)>
  # bm1y_2978 = PHI <bm1y_2397(197), bm1y_2979(198)>
  # prephitmp_3597 = PHI <prephitmp_4150(197), prephitmp_4147(198)>
  # prephitmp_3599 = PHI <prephitmp_4586(197), prephitmp_4585(198)>
  # prephitmp_3601 = PHI <prephitmp_4412(197), prephitmp_4411(198)>
  # prephitmp_3603 = PHI <prephitmp_4151(197), prephitmp_4149(198)>
  # prephitmp_3605 = PHI <pretmp_3604(197), _2104(198)>
  # prephitmp_4409 = PHI <prephitmp_4301(197), prephitmp_4300(198)>
  # prephitmp_4583 = PHI <prephitmp_4553(197), prephitmp_4552(198)>
  # DEBUG i0 => 1
  # DEBUG i1 => 7
  _2113 = (signed char) prephitmp_3605;
  _2115 = 1 << prephitmp_3601;
  _2116 = (signed char) _2115;
  _2117 = _2113 | _2116;
  _2118 = (unsigned char) _2117;
  visited[prephitmp_3603][prephitmp_3597][prephitmp_3599] = _2118;
  _2119 = h_2(D)->mc.avg[_12];
  _2120 = stride1[7];
  _2121 = stride0[1];
  _2119 (&pix, bw_19, _141, _2121, _137, _2120, i_weight_5(D));
  _2122 = h_2(D)->pixf.mbcmp[_12];
  _2123 = m0_3(D)->p_fenc[0];
  _2124 = _2122 (_2123, 16, &pix, bw_19);
  _2125 = (long unsigned int) bm0x_3230;
  _2126 = _2125 * 2;
  _2127 = _2126 + 18446744073709551614;
  _2128 = p_cost_m0x_30 + _2127;
  _2129 = *_2128;
  _2130 = (int) _2129;
  _2131 = _2124 + _2130;
  _2132 = (long unsigned int) bm0y_3227;
  _2133 = _2132 * 2;
  _2134 = p_cost_m0y_37 + _2133;
  _2135 = *_2134;
  _2136 = (int) _2135;
  _2137 = _2131 + _2136;
  _2138 = (sizetype) bm1x_3231;
  _2139 = _2138 + 1;
  _2140 = _2139 * 2;
  _2141 = p_cost_m1x_45 + _2140;
  _2142 = *_2141;
  _2143 = (int) _2142;
  _2144 = _2137 + _2143;
  _2145 = (long unsigned int) bm1y_3228;
  _2146 = _2145 * 2;
  _2147 = p_cost_m1y_52 + _2146;
  _2148 = *_2147;
  _2149 = (int) _2148;
  bcost_2150 = _2144 + _2149;
  # DEBUG cost => bcost_2150
  _2152 = bcost_3030 * 17;
  _2153 = _2152 / 16;
  if (bcost_2150 < _2153)
    goto <bb 200>;
  else
    goto <bb 202>;

  <bb 200>:
  bcost_2413 = MIN_EXPR <bcost_2150, bcost_3030>;
  # DEBUG bcost => bcost_2413
  # DEBUG a => bm0x_139
  # DEBUG b => bm0y_3227
  _2154 = bm0x_139 & 65535;
  _2155 = bm0y_3227 << 16;
  _2156 = _2154 + _2155;
  _2157 = (unsigned int) _2156;
  # DEBUG a => NULL
  # DEBUG b => NULL
  MEM[(uint32_t *)cache0_mv2_16] = _2157;
  MEM[(uint32_t *)cache0_mv_11] = _2157;
  # DEBUG a => bm1x_134
  # DEBUG b => bm1y_3228
  _2158 = bm1x_134 & 65535;
  _2159 = bm1y_3228 << 16;
  _2160 = _2158 + _2159;
  _2161 = (unsigned int) _2160;
  # DEBUG a => NULL
  # DEBUG b => NULL
  MEM[(uint32_t *)cache1_mv2_18] = _2161;
  MEM[(uint32_t *)cache1_mv_17] = _2161;
  _2162 = m0_3(D)->i_pixel;
  bcostrd_2163 = x264_rd_cost_part (h_2(D), i_lambda2_7(D), i8_6(D), _2162);
  # DEBUG costrd => bcostrd_2163
  if (bcostrd_2163 < bcostrd_3162)
    goto <bb 202>;
  else
    goto <bb 201>;

  <bb 201>:

  <bb 202>:
  # bm0x_2399 = PHI <bm0x_139(200), bm0x_2982(199), bm0x_2982(201)>
  # bm0y_2400 = PHI <bm0y_3227(200), bm0y_2984(199), bm0y_2984(201)>
  # bm1x_2401 = PHI <bm1x_134(200), bm1x_2981(199), bm1x_2981(201)>
  # bm1y_2402 = PHI <bm1y_3228(200), bm1y_2978(199), bm1y_2978(201)>
  # bcost_2215 = PHI <bcost_2413(200), bcost_3030(199), bcost_2413(201)>
  # bcostrd_2228 = PHI <bcostrd_2163(200), bcostrd_3162(199), bcostrd_3162(201)>
  # DEBUG bcostrd => bcostrd_2228
  # DEBUG bcost => bcost_2215
  # DEBUG bm1y => bm1y_2402
  # DEBUG bm1x => bm1x_2401
  # DEBUG bm0y => bm0y_2400
  # DEBUG bm0x => bm0x_2399
  if (pass_3229 == 0)
    goto <bb 203>;
  else
    goto <bb 204>;

  <bb 203>:
  pretmp_3592 = visited[prephitmp_4409][prephitmp_3597][prephitmp_4583];
  goto <bb 206>;

  <bb 204>:
  # bcost_3160 = PHI <bcost_2215(202), bcost_2790(198)>
  # bcostrd_3161 = PHI <bcostrd_2228(202), bcostrd_3029(198)>
  # bm0x_2967 = PHI <bm0x_2399(202), bm0x_2902(198)>
  # bm0y_2977 = PHI <bm0y_2400(202), bm0y_2983(198)>
  # bm1x_2970 = PHI <bm1x_2401(202), bm1x_2980(198)>
  # bm1y_2976 = PHI <bm1y_2402(202), bm1y_2979(198)>
  # prephitmp_3594 = PHI <prephitmp_3597(202), prephitmp_4147(198)>
  # prephitmp_3595 = PHI <prephitmp_3601(202), prephitmp_4411(198)>
  # prephitmp_4408 = PHI <prephitmp_4409(202), prephitmp_4300(198)>
  # prephitmp_4582 = PHI <prephitmp_4583(202), prephitmp_4552(198)>
  # DEBUG bcostrd => bcostrd_3161
  # DEBUG bcost => bcost_3160
  # DEBUG bm1y => bm1y_2976
  # DEBUG bm1x => bm1x_2970
  # DEBUG bm0y => bm0y_2977
  # DEBUG bm0x => bm0x_2967
  _2168 = visited[prephitmp_4408][prephitmp_3594][prephitmp_4582];
  _2169 = (int) _2168;
  _2171 = _2169 >> prephitmp_3595;
  _2172 = _2171 & 1;
  if (_2172 == 0)
    goto <bb 206>;
  else
    goto <bb 205>;

  <bb 205>:
  pretmp_3582 = bm0y_2977 == bm0y_3227;
  goto <bb 210>;

  <bb 206>:
  # bcost_3163 = PHI <bcost_2215(203), bcost_3160(204)>
  # bcostrd_2922 = PHI <bcostrd_2228(203), bcostrd_3161(204)>
  # bm0x_2968 = PHI <bm0x_2399(203), bm0x_2967(204)>
  # bm0y_2969 = PHI <bm0y_2400(203), bm0y_2977(204)>
  # bm1x_2837 = PHI <bm1x_2401(203), bm1x_2970(204)>
  # bm1y_2971 = PHI <bm1y_2402(203), bm1y_2976(204)>
  # prephitmp_3586 = PHI <prephitmp_3597(203), prephitmp_3594(204)>
  # prephitmp_3587 = PHI <prephitmp_3601(203), prephitmp_3595(204)>
  # prephitmp_3589 = PHI <prephitmp_4583(203), prephitmp_4582(204)>
  # prephitmp_3591 = PHI <prephitmp_4409(203), prephitmp_4408(204)>
  # prephitmp_3593 = PHI <pretmp_3592(203), _2168(204)>
  # DEBUG i0 => 7
  # DEBUG i1 => 1
  _2177 = (signed char) prephitmp_3593;
  _2179 = 1 << prephitmp_3587;
  _2180 = (signed char) _2179;
  _2181 = _2177 | _2180;
  _2182 = (unsigned char) _2181;
  visited[prephitmp_3591][prephitmp_3586][prephitmp_3589] = _2182;
  _2183 = h_2(D)->mc.avg[_12];
  _2184 = stride1[1];
  _2185 = stride0[7];
  _2183 (&pix, bw_19, _131, _2185, _145, _2184, i_weight_5(D));
  _2186 = h_2(D)->pixf.mbcmp[_12];
  _2187 = m0_3(D)->p_fenc[0];
  _2188 = _2186 (_2187, 16, &pix, bw_19);
  _2189 = (sizetype) bm0x_3230;
  _2190 = _2189 + 1;
  _2191 = _2190 * 2;
  _2192 = p_cost_m0x_30 + _2191;
  _2193 = *_2192;
  _2194 = (int) _2193;
  _2195 = _2188 + _2194;
  _2196 = (long unsigned int) bm0y_3227;
  _2197 = _2196 * 2;
  _2198 = p_cost_m0y_37 + _2197;
  _2199 = *_2198;
  _2200 = (int) _2199;
  _2201 = _2195 + _2200;
  _2202 = (long unsigned int) bm1x_3231;
  _2203 = _2202 * 2;
  _2204 = _2203 + 18446744073709551614;
  _2205 = p_cost_m1x_45 + _2204;
  _2206 = *_2205;
  _2207 = (int) _2206;
  _2208 = _2201 + _2207;
  _2209 = (long unsigned int) bm1y_3228;
  _2210 = _2209 * 2;
  _2211 = p_cost_m1y_52 + _2210;
  _2212 = *_2211;
  _2213 = (int) _2212;
  bcost_2214 = _2208 + _2213;
  # DEBUG cost => bcost_2214
  _2216 = bcost_3163 * 17;
  _2217 = _2216 / 16;
  if (bcost_2214 < _2217)
    goto <bb 208>;
  else
    goto <bb 207>;

  <bb 207>:
  pretmp_3583 = bm0y_2969 == bm0y_3227;
  goto <bb 210>;

  <bb 208>:
  bcost_33 = MIN_EXPR <bcost_2214, bcost_3163>;
  # DEBUG bcost => bcost_33
  # DEBUG a => bm0x_128
  # DEBUG b => bm0y_3227
  _2218 = bm0x_128 & 65535;
  _2219 = bm0y_3227 << 16;
  _2220 = _2218 + _2219;
  _2221 = (unsigned int) _2220;
  # DEBUG a => NULL
  # DEBUG b => NULL
  MEM[(uint32_t *)cache0_mv2_16] = _2221;
  MEM[(uint32_t *)cache0_mv_11] = _2221;
  # DEBUG a => bm1x_143
  # DEBUG b => bm1y_3228
  _2222 = bm1x_143 & 65535;
  _2223 = bm1y_3228 << 16;
  _2224 = _2222 + _2223;
  _2225 = (unsigned int) _2224;
  # DEBUG a => NULL
  # DEBUG b => NULL
  MEM[(uint32_t *)cache1_mv2_18] = _2225;
  MEM[(uint32_t *)cache1_mv_17] = _2225;
  _2226 = m0_3(D)->i_pixel;
  bcostrd_2227 = x264_rd_cost_part (h_2(D), i_lambda2_7(D), i8_6(D), _2226);
  # DEBUG costrd => bcostrd_2227
  if (bcostrd_2227 < bcostrd_2922)
    goto <bb 210>;
  else
    goto <bb 209>;

  <bb 209>:
  pretmp_3584 = bm0y_2969 == bm0y_3227;

  <bb 210>:
  # bm0x_2229 = PHI <bm0x_2967(205), bm0x_2968(207), bm0x_2968(209), bm0x_128(208)>
  # bm0y_2231 = PHI <bm0y_2977(205), bm0y_2969(207), bm0y_2969(209), bm0y_3227(208)>
  # bm1x_2234 = PHI <bm1x_2970(205), bm1x_2837(207), bm1x_2837(209), bm1x_143(208)>
  # bm1y_2236 = PHI <bm1y_2976(205), bm1y_2971(207), bm1y_2971(209), bm1y_3228(208)>
  # bcost_2404 = PHI <bcost_3160(205), bcost_3163(207), bcost_33(209), bcost_33(208)>
  # bcostrd_2405 = PHI <bcostrd_3161(205), bcostrd_2922(207), bcostrd_2922(209), bcostrd_2227(208)>
  # prephitmp_3585 = PHI <pretmp_3582(205), pretmp_3583(207), pretmp_3584(209), 1(208)>
  # DEBUG bcostrd => bcostrd_2405
  # DEBUG bcost => bcost_2404
  # DEBUG bm1y => bm1y_2236
  # DEBUG bm1x => bm1x_2234
  # DEBUG bm0y => bm0y_2231
  # DEBUG bm0x => bm0x_2229
  _2230 = bm0x_2229 == bm0x_3230;
  _2233 = _2230 & prephitmp_3585;
  if (_2233 != 0)
    goto <bb 211>;
  else
    goto <bb 214>;

  <bb 211>:
  _2235 = bm1x_2234 == bm1x_3231;
  _2237 = bm1y_2236 == bm1y_3228;
  _2238 = _2235 & _2237;
  if (_2238 != 0)
    goto <bb 212>;
  else
    goto <bb 214>;

  <bb 212>:
  # bm0x_2447 = PHI <bm0x_2229(211)>
  # bm0y_3579 = PHI <bm0y_2231(211)>
  # bm1x_3577 = PHI <bm1x_2234(211)>
  # bm1y_3575 = PHI <bm1y_2236(211)>

  <bb 213>:
  # bm0x_3573 = PHI <bm0x_2447(212), bm0x_3580(215)>
  # bm0y_3572 = PHI <bm0y_3579(212), bm0y_3578(215)>
  # bm1x_3571 = PHI <bm1x_3577(212), bm1x_3576(215)>
  # bm1y_3570 = PHI <bm1y_3575(212), bm1y_3574(215)>
  # DEBUG bm1y => bm1y_3570
  # DEBUG bm1x => bm1x_3571
  # DEBUG bm0y => bm0y_3572
  # DEBUG bm0x => bm0x_3573
  _2247 = (short int) bm0x_3573;
  m0_3(D)->mv[0] = _2247;
  _2249 = (short int) bm0y_3572;
  m0_3(D)->mv[1] = _2249;
  _2251 = (short int) bm1x_3571;
  m1_4(D)->mv[0] = _2251;
  _2253 = (short int) bm1y_3570;
  m1_4(D)->mv[1] = _2253;
  pix0 ={v} {CLOBBER};
  pix1 ={v} {CLOBBER};
  pix ={v} {CLOBBER};
  stride0 ={v} {CLOBBER};
  stride1 ={v} {CLOBBER};
  visited ={v} {CLOBBER};
  goto <bb 218>;

  <bb 214>:
  # DEBUG om0x => bm0x_2229
  # DEBUG om0y => bm0y_2231
  # DEBUG om1x => bm1x_2234
  # DEBUG om1y => bm1y_2236
  # DEBUG i => 4
  stride0[4] = bw_19;
  stride1[4] = bw_19;
  _2239 = h_2(D)->mc.get_ref;
  _2240 = m0_3(D)->i_stride[0];
  src0$4_2241 = _2239 (&MEM[(void *)&pix0 + 1024B], &MEM[(void *)&stride0 + 16B], _66, _2240, bm0x_2229, bm0y_2231, bw_19, bh_20);
  # DEBUG src0$4 => src0$4_2241
  _2242 = h_2(D)->mc.get_ref;
  _2243 = m1_4(D)->i_stride[0];
  src1$4_2244 = _2242 (&MEM[(void *)&pix1 + 1024B], &MEM[(void *)&stride1 + 16B], _70, _2243, bm1x_2234, bm1y_2236, bw_19, bh_20);
  # DEBUG src1$4 => src1$4_2244
  pass_2245 = pass_3229 + 1;
  # DEBUG pass => pass_2245
  # DEBUG src1$4 => src1$4_2244
  # DEBUG src0$4 => src0$4_2241
  # DEBUG bcostrd => bcostrd_2405
  # DEBUG pass => pass_2245
  # DEBUG bcost => bcost_2404
  # DEBUG om1y => bm1y_2236
  # DEBUG bm1y => bm1y_2236
  # DEBUG om1x => bm1x_2234
  # DEBUG bm1x => bm1x_2234
  # DEBUG om0y => bm0y_2231
  # DEBUG bm0y => bm0y_2231
  # DEBUG om0x => bm0x_2229
  # DEBUG bm0x => bm0x_2229
  ivtmp_3568 = ivtmp_3569 - 1;
  if (ivtmp_3568 != 0)
    goto <bb 216>;
  else
    goto <bb 215>;

  <bb 215>:
  # bm0x_3580 = PHI <bm0x_2229(214)>
  # bm0y_3578 = PHI <bm0y_2231(214)>
  # bm1x_3576 = PHI <bm1x_2234(214)>
  # bm1y_3574 = PHI <bm1y_2236(214)>
  goto <bb 213>;

  <bb 216>:
  goto <bb 15>;

  <bb 217>:
  pix0 ={v} {CLOBBER};
  pix1 ={v} {CLOBBER};
  pix ={v} {CLOBBER};
  stride0 ={v} {CLOBBER};
  stride1 ={v} {CLOBBER};
  visited ={v} {CLOBBER};

  <bb 218>:
  # DEBUG h => NULL
  # DEBUG m0 => NULL
  # DEBUG m1 => NULL
  # DEBUG i_weight => NULL
  # DEBUG i8 => NULL
  # DEBUG i_lambda2 => NULL
  # DEBUG rd => NULL
  # DEBUG src1$4 => NULL
  # DEBUG src0$4 => NULL
  # DEBUG bcostrd => NULL
  # DEBUG pass => NULL
  # DEBUG bcost => NULL
  # DEBUG bm1y => NULL
  # DEBUG bm1x => NULL
  # DEBUG bm0y => NULL
  # DEBUG bm0x => NULL
  # DEBUG p_cost_m1y => NULL
  # DEBUG p_cost_m1x => NULL
  # DEBUG p_cost_m0y => NULL
  # DEBUG p_cost_m0x => NULL
  # DEBUG bh => NULL
  # DEBUG bw => NULL
  # DEBUG cache1_mv2 => NULL
  # DEBUG cache1_mv => NULL
  # DEBUG cache0_mv2 => NULL
  # DEBUG cache0_mv => NULL
  return;

}



;; Function x264_me_refine_qpel_rd (x264_me_refine_qpel_rd, funcdef_no=122, decl_uid=5783, cgraph_uid=122, symbol_order=169)


Analyzing loop at ./common/macroblock.h:373
./common/macroblock.h:373:9: note: ===== analyze_loop_nest =====
./common/macroblock.h:373:9: note: === vect_analyze_loop_form ===
./common/macroblock.h:373:9: note: === get_loop_niters ===
Analyzing # of iterations of loop 8
  exit condition [1, + , 1](no_overflow) < bh_95
  bounds on difference of bases: 0 ... 536870910
  result:
    # of iterations (unsigned int) bh_95 + 4294967295, bounded by 536870910
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:49, generic-match.c:3223
./common/macroblock.h:373:9: note: Symbolic number of iterations is (unsigned int) bh_95
./common/macroblock.h:373:9: note: === vect_analyze_data_refs ===
Creating dr for *_427
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
success.
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
	base_address: h_81(D) + ((sizetype) (_387 * 8 + _389) + (sizetype) i_list_82(D) * 48) * 4
	offset from base address: 0
	constant offset from base address: 19632
	step: 32
	aligned to: 128
	base_object: MEM[(uint32_t *)h_81(D) + ((sizetype) (_387 * 8 + _389) + (sizetype) i_list_82(D) * 48) * 4]
	Access function 0: {19632B, +, 32}_8
./common/macroblock.h:373:9: note: got vectype for stmt: *_427 = _445;
vector(4) unsigned int
./common/macroblock.h:373:9: note: === vect_analyze_scalar_cycles ===
./common/macroblock.h:373:9: note: Analyze phi: .MEM_551 = PHI <.MEM_621(88), .MEM_490(90)>

./common/macroblock.h:373:9: note: Analyze phi: dy_423 = PHI <0(88), dy_429(90)>

./common/macroblock.h:373:9: note: Access function of PHI: {0, +, 1}_8
./common/macroblock.h:373:9: note: step: 1,  init: 0
./common/macroblock.h:373:9: note: Detected induction.
./common/macroblock.h:373:9: note: === vect_pattern_recog ===
./common/macroblock.h:373:9: note: vect_is_simple_use: operand dy_423
./common/macroblock.h:373:9: note: def_stmt: dy_423 = PHI <0(88), dy_429(90)>
./common/macroblock.h:373:9: note: type of def: 4.
./common/macroblock.h:373:9: note: vect_is_simple_use: operand _425
./common/macroblock.h:373:9: note: def_stmt: _425 = (long unsigned int) _422;
./common/macroblock.h:373:9: note: type of def: 3.
./common/macroblock.h:373:9: note: vect_is_simple_use: operand _422
./common/macroblock.h:373:9: note: def_stmt: _422 = dy_423 * 8;
./common/macroblock.h:373:9: note: type of def: 3.
./common/macroblock.h:373:9: note: vect_is_simple_use: operand 4
./common/macroblock.h:373:9: note: === vect_analyze_data_ref_accesses ===
./common/macroblock.h:373:9: note: not consecutive access *_427 = _445;

./common/macroblock.h:373:9: note: not vectorized: complicated access pattern.
./common/macroblock.h:373:9: note: bad data access.

Analyzing loop at ./common/macroblock.h:380
./common/macroblock.h:380:9: note: ===== analyze_loop_nest =====
./common/macroblock.h:380:9: note: === vect_analyze_loop_form ===
./common/macroblock.h:380:9: note: ===== analyze_loop_nest_1 =====
./common/macroblock.h:380:9: note: === vect_analyze_loop_form ===
./common/macroblock.h:380:9: note: === get_loop_niters ===
Analyzing # of iterations of loop 11
  exit condition [1, + , 1](no_overflow) < pretmp_69
  bounds on difference of bases: 0 ... 2147483646
  result:
    # of iterations (unsigned int) pretmp_69 + 4294967295, bounded by 2147483646
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:49, generic-match.c:3223
./common/macroblock.h:380:9: note: Symbolic number of iterations is (unsigned int) pretmp_69
./common/macroblock.h:380:9: note: not vectorized: control flow in loop.
./common/macroblock.h:380:9: note: bad loop form.

Analyzing loop at ./common/macroblock.h:381
./common/macroblock.h:381:13: note: ===== analyze_loop_nest =====
./common/macroblock.h:381:13: note: === vect_analyze_loop_form ===
./common/macroblock.h:381:13: note: === get_loop_niters ===
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:49, generic-match.c:3223
./common/macroblock.h:381:13: note: Symbolic number of iterations is (unsigned int) pretmp_69
./common/macroblock.h:381:13: note: === vect_analyze_data_refs ===
Creating dr for *_439
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:749, generic-match.c:1467
success.
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:749, generic-match.c:1467
	base_address: (uint64_t *) (h_81(D) + ((sizetype) (_387 * 8 + _389) + (sizetype) i_list_82(D) * 48) * 4) + (sizetype) ((long unsigned int) (dy_424 * 4) * 8)
	offset from base address: 0
	constant offset from base address: 19632
	step: 8
	aligned to: 128
	base_object: *(uint64_t *) (h_81(D) + ((sizetype) (_387 * 8 + _389) + (sizetype) i_list_82(D) * 48) * 4) + (sizetype) ((long unsigned int) (dy_424 * 4) * 8)
	Access function 0: {19632B, +, 8}_11
./common/macroblock.h:381:13: note: got vectype for stmt: *_439 = val64_432;
vector(2) long unsigned int
./common/macroblock.h:381:13: note: === vect_analyze_scalar_cycles ===
./common/macroblock.h:381:13: note: Analyze phi: dx_522 = PHI <0(100), dx_440(93)>

./common/macroblock.h:381:13: note: Access function of PHI: {0, +, 1}_11
./common/macroblock.h:381:13: note: step: 1,  init: 0
./common/macroblock.h:381:13: note: Detected induction.
./common/macroblock.h:381:13: note: Analyze phi: .MEM_59 = PHI <.MEM_32(100), .MEM_489(93)>

./common/macroblock.h:381:13: note: === vect_pattern_recog ===
./common/macroblock.h:381:13: note: vect_is_simple_use: operand _437
./common/macroblock.h:381:13: note: def_stmt: _437 = (long unsigned int) _436;
./common/macroblock.h:381:13: note: type of def: 3.
./common/macroblock.h:381:13: note: vect_is_simple_use: operand _436
./common/macroblock.h:381:13: note: def_stmt: _436 = pretmp_203 + dx_522;
./common/macroblock.h:381:13: note: type of def: 3.
./common/macroblock.h:381:13: note: vect_is_simple_use: operand 8
./common/macroblock.h:381:13: note: === vect_analyze_data_ref_accesses ===
./common/macroblock.h:381:13: note: === vect_mark_stmts_to_be_vectorized ===
./common/macroblock.h:381:13: note: init: phi relevant? dx_522 = PHI <0(100), dx_440(93)>
./common/macroblock.h:381:13: note: init: phi relevant? .MEM_59 = PHI <.MEM_32(100), .MEM_489(93)>
./common/macroblock.h:381:13: note: init: stmt relevant? # DEBUG dx => dx_522
./common/macroblock.h:381:13: note: init: stmt relevant? _436 = pretmp_203 + dx_522;
./common/macroblock.h:381:13: note: init: stmt relevant? _437 = (long unsigned int) _436;
./common/macroblock.h:381:13: note: init: stmt relevant? _438 = _437 * 8;
./common/macroblock.h:381:13: note: init: stmt relevant? _439 = _420 + _438;
./common/macroblock.h:381:13: note: init: stmt relevant? *_439 = val64_432;
./common/macroblock.h:381:13: note: vec_stmt_relevant_p: stmt has vdefs.
./common/macroblock.h:381:13: note: mark relevant 4, live 0.
./common/macroblock.h:381:13: note: init: stmt relevant? dx_440 = dx_522 + 1;
./common/macroblock.h:381:13: note: init: stmt relevant? # DEBUG dx => dx_440
./common/macroblock.h:381:13: note: init: stmt relevant? # DEBUG dx => dx_440
./common/macroblock.h:381:13: note: init: stmt relevant? if (pretmp_69 > dx_440)
./common/macroblock.h:381:13: note: worklist: examine stmt: *_439 = val64_432;
./common/macroblock.h:381:13: note: vect_is_simple_use: operand val64_432
./common/macroblock.h:381:13: note: def_stmt: val64_432 = _430 + _431;
./common/macroblock.h:381:13: note: type of def: 2.
./common/macroblock.h:381:13: note: def_stmt is out of loop.
./common/macroblock.h:381:13: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: *_439 = val64_432;
  stmt_b: *_439 = val64_432;
(analyze_overlapping_iterations 
  (chrec_a = {19632B, +, 8}_11)
  (chrec_b = {19632B, +, 8}_11)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
./common/macroblock.h:381:13: note: === vect_determine_vectorization_factor ===
./common/macroblock.h:381:13: note: ==> examining phi: dx_522 = PHI <0(100), dx_440(93)>

./common/macroblock.h:381:13: note: ==> examining phi: .MEM_59 = PHI <.MEM_32(100), .MEM_489(93)>

./common/macroblock.h:381:13: note: ==> examining statement: # DEBUG dx => dx_522

./common/macroblock.h:381:13: note: skip.
./common/macroblock.h:381:13: note: ==> examining statement: _436 = pretmp_203 + dx_522;

./common/macroblock.h:381:13: note: skip.
./common/macroblock.h:381:13: note: ==> examining statement: _437 = (long unsigned int) _436;

./common/macroblock.h:381:13: note: skip.
./common/macroblock.h:381:13: note: ==> examining statement: _438 = _437 * 8;

./common/macroblock.h:381:13: note: skip.
./common/macroblock.h:381:13: note: ==> examining statement: _439 = _420 + _438;

./common/macroblock.h:381:13: note: skip.
./common/macroblock.h:381:13: note: ==> examining statement: *_439 = val64_432;

./common/macroblock.h:381:13: note: get vectype for scalar type:  uint64_t
./common/macroblock.h:381:13: note: vectype: vector(2) long unsigned int
./common/macroblock.h:381:13: note: nunits = 2
./common/macroblock.h:381:13: note: ==> examining statement: dx_440 = dx_522 + 1;

./common/macroblock.h:381:13: note: skip.
./common/macroblock.h:381:13: note: ==> examining statement: # DEBUG dx => dx_440

./common/macroblock.h:381:13: note: skip.
./common/macroblock.h:381:13: note: ==> examining statement: # DEBUG dx => dx_440

./common/macroblock.h:381:13: note: skip.
./common/macroblock.h:381:13: note: ==> examining statement: if (pretmp_69 > dx_440)

./common/macroblock.h:381:13: note: skip.
./common/macroblock.h:381:13: note: vectorization factor = 2
./common/macroblock.h:381:13: note: === vect_analyze_data_refs_alignment ===
./common/macroblock.h:381:13: note: vect_compute_data_ref_alignment:
./common/macroblock.h:381:13: note: can't force alignment of ref: *_439
./common/macroblock.h:381:13: note: === vect_prune_runtime_alias_test_list ===
./common/macroblock.h:381:13: note: === vect_enhance_data_refs_alignment ===
./common/macroblock.h:381:13: note: Unknown misalignment, is_packed = 0
./common/macroblock.h:381:13: note: vect_can_advance_ivs_p:
./common/macroblock.h:381:13: note: Analyze phi: dx_522 = PHI <0(100), dx_440(93)>

./common/macroblock.h:381:13: note: Analyze phi: .MEM_59 = PHI <.MEM_32(100), .MEM_489(93)>

./common/macroblock.h:381:13: note: virtual phi. skip.
./common/macroblock.h:381:13: note: Disable peeling, max peels reached: 1
./common/macroblock.h:381:13: note: Vectorizing an unaligned access.
./common/macroblock.h:381:13: note: === vect_analyze_slp ===
./common/macroblock.h:381:13: note: === vect_make_slp_decision ===
./common/macroblock.h:381:13: note: === vect_detect_hybrid_slp ===
./common/macroblock.h:381:13: note: === vect_analyze_loop_operations ===
./common/macroblock.h:381:13: note: examining phi: dx_522 = PHI <0(100), dx_440(93)>

./common/macroblock.h:381:13: note: examining phi: .MEM_59 = PHI <.MEM_32(100), .MEM_489(93)>

./common/macroblock.h:381:13: note: ==> examining statement: # DEBUG dx => dx_522
./common/macroblock.h:381:13: note: irrelevant.
./common/macroblock.h:381:13: note: ==> examining statement: _436 = pretmp_203 + dx_522;
./common/macroblock.h:381:13: note: irrelevant.
./common/macroblock.h:381:13: note: ==> examining statement: _437 = (long unsigned int) _436;
./common/macroblock.h:381:13: note: irrelevant.
./common/macroblock.h:381:13: note: ==> examining statement: _438 = _437 * 8;
./common/macroblock.h:381:13: note: irrelevant.
./common/macroblock.h:381:13: note: ==> examining statement: _439 = _420 + _438;
./common/macroblock.h:381:13: note: irrelevant.
./common/macroblock.h:381:13: note: ==> examining statement: *_439 = val64_432;
./common/macroblock.h:381:13: note: vect_is_simple_use: operand val64_432
./common/macroblock.h:381:13: note: def_stmt: val64_432 = _430 + _431;
./common/macroblock.h:381:13: note: type of def: 2.
./common/macroblock.h:381:13: note: vect_model_store_cost: unaligned supported by hardware.
./common/macroblock.h:381:13: note: vect_model_store_cost: inside_cost = 2, prologue_cost = 1 .
./common/macroblock.h:381:13: note: ==> examining statement: dx_440 = dx_522 + 1;
./common/macroblock.h:381:13: note: irrelevant.
./common/macroblock.h:381:13: note: ==> examining statement: # DEBUG dx => dx_440
./common/macroblock.h:381:13: note: irrelevant.
./common/macroblock.h:381:13: note: ==> examining statement: # DEBUG dx => dx_440
./common/macroblock.h:381:13: note: irrelevant.
./common/macroblock.h:381:13: note: ==> examining statement: if (pretmp_69 > dx_440)
./common/macroblock.h:381:13: note: irrelevant.
./common/macroblock.h:381:13: note: === vect_update_slp_costs_according_to_vf ===
./common/macroblock.h:381:13: note: cost model: epilogue peel iters set to vf/2 because loop iterations are unknown .
./common/macroblock.h:381:13: note: Cost model analysis: 
  Vector inside of loop cost: 2
  Vector prologue cost: 7
  Vector epilogue cost: 1
  Scalar iteration cost: 1
  Scalar outside cost: 6
  Vector outside cost: 8
  prologue iterations: 0
  epilogue iterations: 1
./common/macroblock.h:381:13: note: cost model: the vector iteration cost = 2 divided by the scalar iteration cost = 1 is greater or equal to the vectorization factor = 2.
./common/macroblock.h:381:13: note: not vectorized: vectorization not profitable.
./common/macroblock.h:381:13: note: not vectorized: vector version will never be profitable.
./common/macroblock.h:381:13: note: bad operation or unsupported loop bound.

Analyzing loop at ./common/macroblock.h:373
./common/macroblock.h:373:9: note: ===== analyze_loop_nest =====
./common/macroblock.h:373:9: note: === vect_analyze_loop_form ===
./common/macroblock.h:373:9: note: === get_loop_niters ===
Analyzing # of iterations of loop 12
  exit condition [1, + , 1](no_overflow) < bh_95
  bounds on difference of bases: 0 ... 536870910
  result:
    # of iterations (unsigned int) bh_95 + 4294967295, bounded by 536870910
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:49, generic-match.c:3223
./common/macroblock.h:373:9: note: Symbolic number of iterations is (unsigned int) bh_95
./common/macroblock.h:373:9: note: === vect_analyze_data_refs ===
Creating dr for *_456
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
success.
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
	base_address: h_81(D) + ((sizetype) (_387 * 8 + _389) + (sizetype) i_list_82(D) * 48) * 4
	offset from base address: 0
	constant offset from base address: 19248
	step: 32
	aligned to: 128
	base_object: MEM[(uint32_t *)h_81(D) + ((sizetype) (_387 * 8 + _389) + (sizetype) i_list_82(D) * 48) * 4]
	Access function 0: {19248B, +, 32}_12
./common/macroblock.h:373:9: note: got vectype for stmt: *_456 = _474;
vector(4) unsigned int
./common/macroblock.h:373:9: note: === vect_analyze_scalar_cycles ===
./common/macroblock.h:373:9: note: Analyze phi: .MEM_543 = PHI <.MEM_384(72), .MEM_488(74)>

./common/macroblock.h:373:9: note: Analyze phi: dy_609 = PHI <0(72), dy_458(74)>

./common/macroblock.h:373:9: note: Access function of PHI: {0, +, 1}_12
./common/macroblock.h:373:9: note: step: 1,  init: 0
./common/macroblock.h:373:9: note: Detected induction.
./common/macroblock.h:373:9: note: === vect_pattern_recog ===
./common/macroblock.h:373:9: note: vect_is_simple_use: operand dy_609
./common/macroblock.h:373:9: note: def_stmt: dy_609 = PHI <0(72), dy_458(74)>
./common/macroblock.h:373:9: note: type of def: 4.
./common/macroblock.h:373:9: note: vect_is_simple_use: operand _454
./common/macroblock.h:373:9: note: def_stmt: _454 = (long unsigned int) _451;
./common/macroblock.h:373:9: note: type of def: 3.
./common/macroblock.h:373:9: note: vect_is_simple_use: operand _451
./common/macroblock.h:373:9: note: def_stmt: _451 = dy_609 * 8;
./common/macroblock.h:373:9: note: type of def: 3.
./common/macroblock.h:373:9: note: vect_is_simple_use: operand 4
./common/macroblock.h:373:9: note: === vect_analyze_data_ref_accesses ===
./common/macroblock.h:373:9: note: not consecutive access *_456 = _474;

./common/macroblock.h:373:9: note: not vectorized: complicated access pattern.
./common/macroblock.h:373:9: note: bad data access.

Analyzing loop at ./common/macroblock.h:380
./common/macroblock.h:380:9: note: ===== analyze_loop_nest =====
./common/macroblock.h:380:9: note: === vect_analyze_loop_form ===
./common/macroblock.h:380:9: note: ===== analyze_loop_nest_1 =====
./common/macroblock.h:380:9: note: === vect_analyze_loop_form ===
./common/macroblock.h:380:9: note: === get_loop_niters ===
Analyzing # of iterations of loop 15
  exit condition [1, + , 1](no_overflow) < pretmp_498
  bounds on difference of bases: 0 ... 2147483646
  result:
    # of iterations (unsigned int) pretmp_498 + 4294967295, bounded by 2147483646
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:49, generic-match.c:3223
./common/macroblock.h:380:9: note: Symbolic number of iterations is (unsigned int) pretmp_498
./common/macroblock.h:380:9: note: not vectorized: control flow in loop.
./common/macroblock.h:380:9: note: bad loop form.

Analyzing loop at ./common/macroblock.h:381
./common/macroblock.h:381:13: note: ===== analyze_loop_nest =====
./common/macroblock.h:381:13: note: === vect_analyze_loop_form ===
./common/macroblock.h:381:13: note: === get_loop_niters ===
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:49, generic-match.c:3223
./common/macroblock.h:381:13: note: Symbolic number of iterations is (unsigned int) pretmp_498
./common/macroblock.h:381:13: note: === vect_analyze_data_refs ===
Creating dr for *_468
analyze_innermost: Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:749, generic-match.c:1467
success.
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:494, generic-match.c:3721
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:749, generic-match.c:1467
	base_address: (uint64_t *) (h_81(D) + ((sizetype) (_387 * 8 + _389) + (sizetype) i_list_82(D) * 48) * 4) + (sizetype) ((long unsigned int) (dy_54 * 4) * 8)
	offset from base address: 0
	constant offset from base address: 19248
	step: 8
	aligned to: 128
	base_object: *(uint64_t *) (h_81(D) + ((sizetype) (_387 * 8 + _389) + (sizetype) i_list_82(D) * 48) * 4) + (sizetype) ((long unsigned int) (dy_54 * 4) * 8)
	Access function 0: {19248B, +, 8}_15
./common/macroblock.h:381:13: note: got vectype for stmt: *_468 = val64_461;
vector(2) long unsigned int
./common/macroblock.h:381:13: note: === vect_analyze_scalar_cycles ===
./common/macroblock.h:381:13: note: Analyze phi: dx_36 = PHI <0(84), dx_469(77)>

./common/macroblock.h:381:13: note: Access function of PHI: {0, +, 1}_15
./common/macroblock.h:381:13: note: step: 1,  init: 0
./common/macroblock.h:381:13: note: Detected induction.
./common/macroblock.h:381:13: note: Analyze phi: .MEM_541 = PHI <.MEM_531(84), .MEM_487(77)>

./common/macroblock.h:381:13: note: === vect_pattern_recog ===
./common/macroblock.h:381:13: note: vect_is_simple_use: operand _466
./common/macroblock.h:381:13: note: def_stmt: _466 = (long unsigned int) _465;
./common/macroblock.h:381:13: note: type of def: 3.
./common/macroblock.h:381:13: note: vect_is_simple_use: operand _465
./common/macroblock.h:381:13: note: def_stmt: _465 = dx_36 + pretmp_554;
./common/macroblock.h:381:13: note: type of def: 3.
./common/macroblock.h:381:13: note: vect_is_simple_use: operand 8
./common/macroblock.h:381:13: note: === vect_analyze_data_ref_accesses ===
./common/macroblock.h:381:13: note: === vect_mark_stmts_to_be_vectorized ===
./common/macroblock.h:381:13: note: init: phi relevant? dx_36 = PHI <0(84), dx_469(77)>
./common/macroblock.h:381:13: note: init: phi relevant? .MEM_541 = PHI <.MEM_531(84), .MEM_487(77)>
./common/macroblock.h:381:13: note: init: stmt relevant? # DEBUG dx => dx_36
./common/macroblock.h:381:13: note: init: stmt relevant? _465 = dx_36 + pretmp_554;
./common/macroblock.h:381:13: note: init: stmt relevant? _466 = (long unsigned int) _465;
./common/macroblock.h:381:13: note: init: stmt relevant? _467 = _466 * 8;
./common/macroblock.h:381:13: note: init: stmt relevant? _468 = _449 + _467;
./common/macroblock.h:381:13: note: init: stmt relevant? *_468 = val64_461;
./common/macroblock.h:381:13: note: vec_stmt_relevant_p: stmt has vdefs.
./common/macroblock.h:381:13: note: mark relevant 4, live 0.
./common/macroblock.h:381:13: note: init: stmt relevant? dx_469 = dx_36 + 1;
./common/macroblock.h:381:13: note: init: stmt relevant? # DEBUG dx => dx_469
./common/macroblock.h:381:13: note: init: stmt relevant? # DEBUG dx => dx_469
./common/macroblock.h:381:13: note: init: stmt relevant? if (dx_469 < pretmp_498)
./common/macroblock.h:381:13: note: worklist: examine stmt: *_468 = val64_461;
./common/macroblock.h:381:13: note: vect_is_simple_use: operand val64_461
./common/macroblock.h:381:13: note: def_stmt: val64_461 = _459 + _460;
./common/macroblock.h:381:13: note: type of def: 2.
./common/macroblock.h:381:13: note: def_stmt is out of loop.
./common/macroblock.h:381:13: note: === vect_analyze_data_ref_dependences ===
(compute_affine_dependence
  stmt_a: *_468 = val64_461;
  stmt_b: *_468 = val64_461;
(analyze_overlapping_iterations 
  (chrec_a = {19248B, +, 8}_15)
  (chrec_b = {19248B, +, 8}_15)
  (overlap_iterations_a = [0])
  (overlap_iterations_b = [0]))
)
./common/macroblock.h:381:13: note: === vect_determine_vectorization_factor ===
./common/macroblock.h:381:13: note: ==> examining phi: dx_36 = PHI <0(84), dx_469(77)>

./common/macroblock.h:381:13: note: ==> examining phi: .MEM_541 = PHI <.MEM_531(84), .MEM_487(77)>

./common/macroblock.h:381:13: note: ==> examining statement: # DEBUG dx => dx_36

./common/macroblock.h:381:13: note: skip.
./common/macroblock.h:381:13: note: ==> examining statement: _465 = dx_36 + pretmp_554;

./common/macroblock.h:381:13: note: skip.
./common/macroblock.h:381:13: note: ==> examining statement: _466 = (long unsigned int) _465;

./common/macroblock.h:381:13: note: skip.
./common/macroblock.h:381:13: note: ==> examining statement: _467 = _466 * 8;

./common/macroblock.h:381:13: note: skip.
./common/macroblock.h:381:13: note: ==> examining statement: _468 = _449 + _467;

./common/macroblock.h:381:13: note: skip.
./common/macroblock.h:381:13: note: ==> examining statement: *_468 = val64_461;

./common/macroblock.h:381:13: note: get vectype for scalar type:  uint64_t
./common/macroblock.h:381:13: note: vectype: vector(2) long unsigned int
./common/macroblock.h:381:13: note: nunits = 2
./common/macroblock.h:381:13: note: ==> examining statement: dx_469 = dx_36 + 1;

./common/macroblock.h:381:13: note: skip.
./common/macroblock.h:381:13: note: ==> examining statement: # DEBUG dx => dx_469

./common/macroblock.h:381:13: note: skip.
./common/macroblock.h:381:13: note: ==> examining statement: # DEBUG dx => dx_469

./common/macroblock.h:381:13: note: skip.
./common/macroblock.h:381:13: note: ==> examining statement: if (dx_469 < pretmp_498)

./common/macroblock.h:381:13: note: skip.
./common/macroblock.h:381:13: note: vectorization factor = 2
./common/macroblock.h:381:13: note: === vect_analyze_data_refs_alignment ===
./common/macroblock.h:381:13: note: vect_compute_data_ref_alignment:
./common/macroblock.h:381:13: note: can't force alignment of ref: *_468
./common/macroblock.h:381:13: note: === vect_prune_runtime_alias_test_list ===
./common/macroblock.h:381:13: note: === vect_enhance_data_refs_alignment ===
./common/macroblock.h:381:13: note: Unknown misalignment, is_packed = 0
./common/macroblock.h:381:13: note: vect_can_advance_ivs_p:
./common/macroblock.h:381:13: note: Analyze phi: dx_36 = PHI <0(84), dx_469(77)>

./common/macroblock.h:381:13: note: Analyze phi: .MEM_541 = PHI <.MEM_531(84), .MEM_487(77)>

./common/macroblock.h:381:13: note: virtual phi. skip.
./common/macroblock.h:381:13: note: Disable peeling, max peels reached: 1
./common/macroblock.h:381:13: note: Vectorizing an unaligned access.
./common/macroblock.h:381:13: note: === vect_analyze_slp ===
./common/macroblock.h:381:13: note: === vect_make_slp_decision ===
./common/macroblock.h:381:13: note: === vect_detect_hybrid_slp ===
./common/macroblock.h:381:13: note: === vect_analyze_loop_operations ===
./common/macroblock.h:381:13: note: examining phi: dx_36 = PHI <0(84), dx_469(77)>

./common/macroblock.h:381:13: note: examining phi: .MEM_541 = PHI <.MEM_531(84), .MEM_487(77)>

./common/macroblock.h:381:13: note: ==> examining statement: # DEBUG dx => dx_36
./common/macroblock.h:381:13: note: irrelevant.
./common/macroblock.h:381:13: note: ==> examining statement: _465 = dx_36 + pretmp_554;
./common/macroblock.h:381:13: note: irrelevant.
./common/macroblock.h:381:13: note: ==> examining statement: _466 = (long unsigned int) _465;
./common/macroblock.h:381:13: note: irrelevant.
./common/macroblock.h:381:13: note: ==> examining statement: _467 = _466 * 8;
./common/macroblock.h:381:13: note: irrelevant.
./common/macroblock.h:381:13: note: ==> examining statement: _468 = _449 + _467;
./common/macroblock.h:381:13: note: irrelevant.
./common/macroblock.h:381:13: note: ==> examining statement: *_468 = val64_461;
./common/macroblock.h:381:13: note: vect_is_simple_use: operand val64_461
./common/macroblock.h:381:13: note: def_stmt: val64_461 = _459 + _460;
./common/macroblock.h:381:13: note: type of def: 2.
./common/macroblock.h:381:13: note: vect_model_store_cost: unaligned supported by hardware.
./common/macroblock.h:381:13: note: vect_model_store_cost: inside_cost = 2, prologue_cost = 1 .
./common/macroblock.h:381:13: note: ==> examining statement: dx_469 = dx_36 + 1;
./common/macroblock.h:381:13: note: irrelevant.
./common/macroblock.h:381:13: note: ==> examining statement: # DEBUG dx => dx_469
./common/macroblock.h:381:13: note: irrelevant.
./common/macroblock.h:381:13: note: ==> examining statement: # DEBUG dx => dx_469
./common/macroblock.h:381:13: note: irrelevant.
./common/macroblock.h:381:13: note: ==> examining statement: if (dx_469 < pretmp_498)
./common/macroblock.h:381:13: note: irrelevant.
./common/macroblock.h:381:13: note: === vect_update_slp_costs_according_to_vf ===
./common/macroblock.h:381:13: note: cost model: epilogue peel iters set to vf/2 because loop iterations are unknown .
./common/macroblock.h:381:13: note: Cost model analysis: 
  Vector inside of loop cost: 2
  Vector prologue cost: 7
  Vector epilogue cost: 1
  Scalar iteration cost: 1
  Scalar outside cost: 6
  Vector outside cost: 8
  prologue iterations: 0
  epilogue iterations: 1
./common/macroblock.h:381:13: note: cost model: the vector iteration cost = 2 divided by the scalar iteration cost = 1 is greater or equal to the vectorization factor = 2.
./common/macroblock.h:381:13: note: not vectorized: vectorization not profitable.
./common/macroblock.h:381:13: note: not vectorized: vector version will never be profitable.
./common/macroblock.h:381:13: note: bad operation or unsupported loop bound.

Analyzing loop at encoder/me.c:1048
encoder/me.c:1048:5: note: ===== analyze_loop_nest =====
encoder/me.c:1048:5: note: === vect_analyze_loop_form ===
encoder/me.c:1048:5: note: not vectorized: control flow in loop.
encoder/me.c:1048:5: note: bad loop form.

Analyzing loop at encoder/me.c:1047
encoder/me.c:1047:5: note: ===== analyze_loop_nest =====
encoder/me.c:1047:5: note: === vect_analyze_loop_form ===
encoder/me.c:1047:5: note: not vectorized: control flow in loop.
encoder/me.c:1047:5: note: bad loop form.

Analyzing loop at encoder/me.c:1030
encoder/me.c:1030:40: note: ===== analyze_loop_nest =====
encoder/me.c:1030:40: note: === vect_analyze_loop_form ===
encoder/me.c:1030:40: note: not vectorized: multiple nested loops.
encoder/me.c:1030:40: note: bad loop form.

Analyzing loop at encoder/me.c:1038
encoder/me.c:1038:13: note: ===== analyze_loop_nest =====
encoder/me.c:1038:13: note: === vect_analyze_loop_form ===
encoder/me.c:1038:13: note: not vectorized: control flow in loop.
encoder/me.c:1038:13: note: bad loop form.

Analyzing loop at encoder/me.c:1037
encoder/me.c:1037:13: note: ===== analyze_loop_nest =====
encoder/me.c:1037:13: note: === vect_analyze_loop_form ===
encoder/me.c:1037:13: note: not vectorized: control flow in loop.
encoder/me.c:1037:13: note: bad loop form.

Analyzing loop at encoder/me.c:1023
encoder/me.c:1023:5: note: ===== analyze_loop_nest =====
encoder/me.c:1023:5: note: === vect_analyze_loop_form ===
encoder/me.c:1023:5: note: not vectorized: control flow in loop.
encoder/me.c:1023:5: note: bad loop form.

Analyzing loop at encoder/me.c:1022
encoder/me.c:1022:5: note: ===== analyze_loop_nest =====
encoder/me.c:1022:5: note: === vect_analyze_loop_form ===
encoder/me.c:1022:5: note: not vectorized: control flow in loop.
encoder/me.c:1022:5: note: bad loop form.
encoder/me.c:970:6: note: vectorized 0 loops in function.
x264_me_refine_qpel_rd (struct x264_t * h, struct x264_me_t * m, int i_lambda2, int i4, int i_list)
{
  uint64_t val64;
  int dx;
  int dy;
  uint64_t val64;
  int dx;
  int dy;
  uint8_t * src;
  int stride;
  uint8_t * src;
  int stride;
  const int odir;
  uint8_t * src;
  int stride;
  uint8_t * src;
  int stride;
  uint8_t * src;
  int stride;
  int satds[8];
  int dir;
  int satd;
  unsigned int bsatd;
  int j;
  int i;
  int bmy;
  int bmx;
  uint64_t bcost;
  uint8_t pix[256];
  const int bh;
  const int bw;
  const int16_t * p_cost_mvy;
  const int16_t * p_cost_mvx;
  int16_t * cache_mv2;
  int16_t * cache_mv;
  static const int pixel_mv_offs[7] = {0, 4, 32, 0, 2, 16, 0};
  unsigned int ivtmp_62;
  int pretmp_69;
  int prephitmp_72;
  int pretmp_75;
  int prephitmp_77;
  int _80;
  int _85;
  int _86;
  long unsigned int _87;
  long unsigned int _88;
  int _91;
  int _94;
  int pretmp_96;
  int _98;
  unsigned int pretmp_101;
  unsigned int pretmp_102;
  int16_t[2] * _106;
  short int _108;
  short int _110;
  int16_t * _112;
  long unsigned int _113;
  long unsigned int _114;
  sizetype _115;
  long unsigned int _118;
  long unsigned int _119;
  sizetype _120;
  uint8_t * (*<Tf83>) (uint8_t *, int *, uint8_t * *, int, int, int, int, int) _123;
  int _124;
  int _125;
  int _126;
  uint8_t *[6] * _127;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _130;
  int stride.25_131;
  uint8_t * _132;
  int _134;
  long unsigned int _135;
  long unsigned int _136;
  const int16_t * _137;
  short int _138;
  int _139;
  int _140;
  long unsigned int _141;
  long unsigned int _142;
  const int16_t * _143;
  short int _144;
  int _145;
  int _146;
  unsigned int _149;
  int _153;
  _Bool _158;
  _Bool _159;
  _Bool _160;
  int _161;
  int _162;
  int _163;
  int _164;
  uint8_t * (*<Tf83>) (uint8_t *, int *, uint8_t * *, int, int, int, int, int) _166;
  unsigned int pretmp_168;
  int _169;
  unsigned int pretmp_170;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _173;
  int stride.26_174;
  uint8_t * _175;
  int _177;
  const int16_t * _179;
  short int _180;
  int _181;
  int _182;
  int prephitmp_184;
  const int16_t * _185;
  short int _186;
  int _187;
  unsigned int _192;
  unsigned int _193;
  int _195;
  int _199;
  int pretmp_203;
  _Bool _204;
  _Bool _205;
  _Bool _206;
  short int _207;
  short int _209;
  int _212;
  int _213;
  int pretmp_214;
  int _216;
  uint8_t * (*<Tf83>) (uint8_t *, int *, uint8_t * *, int, int, int, int, int) _219;
  int _227;
  unsigned int pretmp_228;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _231;
  int stride.28_232;
  uint8_t * _233;
  int _235;
  long unsigned int _238;
  long unsigned int _239;
  const int16_t * _240;
  short int _241;
  int _242;
  int _243;
  long unsigned int _244;
  long unsigned int _245;
  const int16_t * _246;
  short int _247;
  int _248;
  int _249;
  int _253;
  unsigned int _254;
  int _257;
  int _258;
  int _260;
  int _262;
  int _265;
  int _269;
  int _271;
  int _272;
  int _273;
  int _274;
  int _275;
  int _276;
  int _277;
  int _278;
  int _279;
  uint8_t * (*<Tf83>) (uint8_t *, int *, uint8_t * *, int, int, int, int, int) _282;
  int _285;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _288;
  int stride.29_289;
  uint8_t * _290;
  int _292;
  long unsigned int _293;
  long unsigned int _294;
  const int16_t * _295;
  short int _296;
  int _297;
  int _298;
  long unsigned int _299;
  long unsigned int _300;
  const int16_t * _301;
  short int _302;
  int _303;
  int _304;
  int _309;
  unsigned int _310;
  int _313;
  int _314;
  int _316;
  int _318;
  int _321;
  int _324;
  int _328;
  int _329;
  int _331;
  uint8_t * (*<Tf83>) (uint8_t *, int *, uint8_t * *, int, int, int, int, int) _334;
  int _337;
  int (*<Ted6>) (uint8_t *, int, uint8_t *, int) _340;
  int stride.30_341;
  uint8_t * _342;
  int _344;
  long unsigned int _345;
  long unsigned int _346;
  const int16_t * _347;
  short int _348;
  int _349;
  int _350;
  long unsigned int _351;
  long unsigned int _352;
  const int16_t * _353;
  short int _354;
  int _355;
  int _356;
  int _361;
  unsigned int _362;
  int _365;
  int _367;
  unsigned int _369;
  int _372;
  int _376;
  int _377;
  int _378;
  int _379;
  short int _381;
  short int _383;
  int _385;
  unsigned char _386;
  int _387;
  unsigned char _388;
  int _389;
  int _390;
  short int _391;
  int _392;
  int _393;
  short int _394;
  int _395;
  int _396;
  int _397;
  int _402;
  int _405;
  int _406;
  int _407;
  unsigned int _408;
  int _409;
  int _410;
  int _411;
  unsigned int _412;
  int _413;
  int _414;
  int _415;
  unsigned int _416;
  int16_t[2] * _420;
  int _422;
  long unsigned int _425;
  long unsigned int _426;
  uint32_t * _427;
  long unsigned int _430;
  long unsigned int _431;
  int _436;
  long unsigned int _437;
  long unsigned int _438;
  uint64_t * _439;
  int _443;
  int _444;
  unsigned int _445;
  int _446;
  int _447;
  int _448;
  int16_t[2] * _449;
  int _451;
  long unsigned int _454;
  long unsigned int _455;
  uint32_t * _456;
  long unsigned int _459;
  long unsigned int _460;
  int _465;
  long unsigned int _466;
  long unsigned int _467;
  uint64_t * _468;
  int _472;
  int _473;
  unsigned int _474;
  int iftmp.14_475;
  int iftmp.14_476;
  unsigned int pretmp_477;
  unsigned int ivtmp_481;
  unsigned int ivtmp_486;
  int pretmp_492;
  unsigned int ivtmp_496;
  int pretmp_498;
  unsigned int ivtmp_501;
  unsigned int ivtmp_502;
  unsigned int ivtmp_503;
  short int _542;
  int pretmp_544;
  int prephitmp_545;
  int pretmp_554;
  int pretmp_558;
  int pretmp_559;
  int prephitmp_560;
  int prephitmp_561;
  int pretmp_563;
  short int _568;
  short int _569;
  short int _570;
  unsigned int ivtmp_599;
  unsigned int ivtmp_600;
  unsigned int ivtmp_602;
  unsigned int ivtmp_603;
  unsigned int ivtmp_604;
  unsigned int ivtmp_605;
  unsigned int ivtmp_606;
  short int _612;
  short int _615;

  <bb 2>:
  _80 = x264_scan8[i4_79(D)];
  cache_mv_83 = &h_81(D)->mb.cache.mv[i_list_82(D)][_80];
  # DEBUG cache_mv => cache_mv_83
  _85 = m_84(D)->i_pixel;
  _86 = pixel_mv_offs[_85];
  _87 = (long unsigned int) _86;
  _88 = _87 * 2;
  cache_mv2_89 = cache_mv_83 + _88;
  # DEBUG cache_mv2 => cache_mv2_89
  _91 = x264_pixel_size[_85].w;
  bw_92 = _91 >> 2;
  # DEBUG bw => bw_92
  _94 = x264_pixel_size[_85].h;
  bh_95 = _94 >> 2;
  # DEBUG bh => bh_95
  # DEBUG i_pixel => _85
  if (_85 == 0)
    goto <bb 3>;
  else
    goto <bb 103>;

  <bb 3>:
  _98 = m_84(D)->cost;
  bcost_99 = (uint64_t) _98;
  # DEBUG bcost => bcost_99
  _615 = m_84(D)->mv[0];
  bmx_565 = (int) _615;
  # DEBUG bmx => bmx_565
  _612 = m_84(D)->mv[1];
  bmy_613 = (int) _612;
  # DEBUG bmy => bmy_613
  # DEBUG omx => bmx_565
  # DEBUG omy => bmy_613
  # DEBUG satd => 0
  # DEBUG dir => -2
  goto <bb 5>;

  <bb 4>:
  _106 = &m_84(D)->mvp;
  x264_mb_predict_mv (h_81(D), i_list_82(D), i4_79(D), bw_92, _106);

  <bb 5>:
  # bcost_582 = PHI <bcost_99(3), 1152921504606846976(103), 1152921504606846976(4)>
  # _570 = PHI <_615(3), _568(103), _568(4)>
  # bmx_586 = PHI <bmx_565(3), bmx_618(103), bmx_618(4)>
  # _542 = PHI <_612(3), _569(103), _569(4)>
  # bmy_587 = PHI <bmy_613(3), bmy_619(103), bmy_619(4)>
  _108 = m_84(D)->mvp[0];
  bmx_109 = (int) _108;
  # DEBUG pmx => bmx_109
  _110 = m_84(D)->mvp[1];
  bmy_111 = (int) _110;
  # DEBUG pmy => bmy_111
  _112 = m_84(D)->p_cost_mv;
  _113 = (long unsigned int) _108;
  _114 = _113 * 2;
  _115 = -_114;
  p_cost_mvx_116 = _112 + _115;
  # DEBUG p_cost_mvx => p_cost_mvx_116
  _118 = (long unsigned int) _110;
  _119 = _118 * 2;
  _120 = -_119;
  p_cost_mvy_121 = _112 + _120;
  # DEBUG p_cost_mvy => p_cost_mvy_121
  stride = 16;
  _123 = h_81(D)->mc.get_ref;
  _124 = bh_95 * 4;
  _125 = bw_92 * 4;
  _126 = m_84(D)->i_stride[0];
  _127 = &m_84(D)->p_fref;
  src_129 = _123 (&pix, &stride, _127, _126, bmx_586, bmy_587, _125, _124);
  # DEBUG src => src_129
  _130 = h_81(D)->pixf.mbcmp_unaligned[_85];
  stride.25_131 = stride;
  _132 = m_84(D)->p_fenc[0];
  _134 = _130 (_132, 16, src_129, stride.25_131);
  _135 = (long unsigned int) _570;
  _136 = _135 * 2;
  _137 = p_cost_mvx_116 + _136;
  _138 = *_137;
  _139 = (int) _138;
  _140 = _134 + _139;
  _141 = (long unsigned int) _542;
  _142 = _141 * 2;
  _143 = p_cost_mvy_121 + _142;
  _144 = *_143;
  _145 = (int) _144;
  _146 = _140 + _145;
  bsatd_147 = (unsigned int) _146;
  # DEBUG bsatd => bsatd_147
  stride ={v} {CLOBBER};
  # DEBUG a => bmx_586
  # DEBUG b => bmy_587
  _397 = bmx_586 & 65535;
  _385 = bmy_587 << 16;
  _378 = _385 + _397;
  _369 = (unsigned int) _378;
  # DEBUG a => NULL
  # DEBUG b => NULL
  MEM[(uint32_t *)cache_mv2_89] = _369;
  MEM[(uint32_t *)cache_mv_83] = _369;
  _153 = m_84(D)->i_pixel;
  bcost_156 = x264_rd_cost_part (h_81(D), i_lambda2_154(D), i4_79(D), _153);
  # DEBUG cost => bcost_156
  bcost_2 = MIN_EXPR <bcost_156, bcost_582>;
  # DEBUG dir => -2
  # DEBUG bmy => bmy_587
  # DEBUG bmx => bmx_586
  # DEBUG bcost => bcost_2
  _158 = bmx_109 != bmx_586;
  _159 = bmy_111 != bmy_587;
  _160 = _158 | _159;
  if (_160 != 0)
    goto <bb 6>;
  else
    goto <bb 14>;

  <bb 6>:
  _161 = h_81(D)->mb.mv_min_spel[0];
  if (bmx_109 >= _161)
    goto <bb 7>;
  else
    goto <bb 14>;

  <bb 7>:
  _162 = h_81(D)->mb.mv_max_spel[0];
  if (bmx_109 <= _162)
    goto <bb 8>;
  else
    goto <bb 14>;

  <bb 8>:
  _163 = h_81(D)->mb.mv_min_spel[1];
  if (bmy_111 >= _163)
    goto <bb 9>;
  else
    goto <bb 14>;

  <bb 9>:
  _164 = h_81(D)->mb.mv_max_spel[1];
  if (bmy_111 <= _164)
    goto <bb 10>;
  else
    goto <bb 14>;

  <bb 10>:
  stride = 16;
  _166 = h_81(D)->mc.get_ref;
  _169 = m_84(D)->i_stride[0];
  src_172 = _166 (&pix, &stride, _127, _169, bmx_109, bmy_111, _125, _124);
  # DEBUG src => src_172
  _173 = h_81(D)->pixf.mbcmp_unaligned[_85];
  stride.26_174 = stride;
  _175 = m_84(D)->p_fenc[0];
  _177 = _173 (_175, 16, src_172, stride.26_174);
  _179 = p_cost_mvx_116 + _114;
  _180 = *_179;
  _181 = (int) _180;
  _182 = _177 + _181;
  _185 = p_cost_mvy_121 + _119;
  _186 = *_185;
  _187 = (int) _186;
  satd_188 = _182 + _187;
  # DEBUG satd => satd_188
  bsatd_189 = (unsigned int) satd_188;
  bsatd_617 = MIN_EXPR <bsatd_147, bsatd_189>;
  # DEBUG bsatd => bsatd_617
  stride ={v} {CLOBBER};
  _192 = bsatd_617 * 17;
  _193 = _192 >> 4;
  if (bsatd_189 <= _193)
    goto <bb 12>;
  else
    goto <bb 11>;

  <bb 11>:
  # DEBUG bmy => bmy_587
  # DEBUG bmx => bmx_586
  # DEBUG bcost => bcost_2
  _204 = bmx_109 == bmx_586;
  _205 = bmy_111 == bmy_587;
  _206 = _204 & _205;
  if (_206 != 0)
    goto <bb 13>;
  else
    goto <bb 14>;

  <bb 12>:
  # DEBUG a => bmx_109
  # DEBUG b => bmy_111
  _318 = bmx_109 & 65535;
  _262 = bmy_111 << 16;
  _195 = _262 + _318;
  _149 = (unsigned int) _195;
  # DEBUG a => NULL
  # DEBUG b => NULL
  MEM[(uint32_t *)cache_mv2_89] = _149;
  MEM[(uint32_t *)cache_mv_83] = _149;
  _199 = m_84(D)->i_pixel;
  bcost_201 = x264_rd_cost_part (h_81(D), i_lambda2_154(D), i4_79(D), _199);
  # DEBUG cost => bcost_201
  if (bcost_2 > bcost_201)
    goto <bb 13>;
  else
    goto <bb 11>;

  <bb 13>:
  # bcost_596 = PHI <bcost_2(11), bcost_201(12)>
  # bmx_594 = PHI <bmx_586(11), bmx_109(12)>
  # bmy_592 = PHI <bmy_587(11), bmy_111(12)>
  # DEBUG bmy => bmy_592
  # DEBUG bmx => bmx_594
  # DEBUG bcost => bcost_596
  _207 = m_84(D)->mv[0];
  bmx_208 = (int) _207;
  # DEBUG pmx => bmx_208
  _209 = m_84(D)->mv[1];
  bmy_210 = (int) _209;
  # DEBUG pmy => bmy_210

  <bb 14>:
  # bcost_3 = PHI <bcost_2(5), bcost_2(6), bcost_2(7), bcost_2(8), bcost_2(9), bcost_2(11), bcost_596(13)>
  # bmx_14 = PHI <bmx_586(5), bmx_586(6), bmx_586(7), bmx_586(8), bmx_586(9), bmx_586(11), bmx_594(13)>
  # bmy_24 = PHI <bmy_587(5), bmy_587(6), bmy_587(7), bmy_587(8), bmy_587(9), bmy_587(11), bmy_592(13)>
  # bmx_33 = PHI <bmx_109(5), bmx_109(6), bmx_109(7), bmx_109(8), bmx_109(9), bmx_109(11), bmx_208(13)>
  # bmy_34 = PHI <bmy_111(5), bmy_111(6), bmy_111(7), bmy_111(8), bmy_111(9), bmy_111(11), bmy_210(13)>
  # bsatd_43 = PHI <bsatd_147(5), bsatd_147(6), bsatd_147(7), bsatd_147(8), bsatd_147(9), bsatd_617(11), bsatd_617(13)>
  # DEBUG bsatd => bsatd_43
  # DEBUG pmy => bmy_34
  # DEBUG pmx => bmx_33
  # DEBUG bmy => bmy_24
  # DEBUG bmx => bmx_14
  # DEBUG bcost => bcost_3
  # DEBUG dir => -2
  # DEBUG omx => bmx_14
  # DEBUG omy => bmy_24
  # DEBUG j => 0
  # DEBUG bsatd => bsatd_43
  # DEBUG j => 0

  <bb 15>:
  # j_591 = PHI <j_211(21), 0(14)>
  # bsatd_584 = PHI <bsatd_45(21), bsatd_43(14)>
  # prephitmp_184 = PHI <pretmp_492(21), 0(14)>
  # ivtmp_501 = PHI <ivtmp_496(21), 6(14)>
  # DEBUG bsatd => bsatd_584
  # DEBUG j => j_591
  j_211 = j_591 + 1;
  _212 = hex2[j_211][0];
  _213 = bmx_14 + _212;
  if (bmx_33 != _213)
    goto <bb 16>;
  else
    goto <bb 17>;

  <bb 16>:
  pretmp_558 = bmy_24 + prephitmp_184;
  goto <bb 18>;

  <bb 17>:
  _216 = bmy_24 + prephitmp_184;
  if (bmy_34 != _216)
    goto <bb 18>;
  else
    goto <bb 19>;

  <bb 18>:
  # prephitmp_561 = PHI <pretmp_558(16), _216(17)>
  stride = 16;
  _219 = h_81(D)->mc.get_ref;
  _227 = m_84(D)->i_stride[0];
  src_230 = _219 (&pix, &stride, _127, _227, _213, prephitmp_561, _125, _124);
  # DEBUG src => src_230
  _231 = h_81(D)->pixf.mbcmp_unaligned[_85];
  stride.28_232 = stride;
  _233 = m_84(D)->p_fenc[0];
  _235 = _231 (_233, 16, src_230, stride.28_232);
  _238 = (long unsigned int) _213;
  _239 = _238 * 2;
  _240 = p_cost_mvx_116 + _239;
  _241 = *_240;
  _242 = (int) _241;
  _243 = _235 + _242;
  _244 = (long unsigned int) prephitmp_561;
  _245 = _244 * 2;
  _246 = p_cost_mvy_121 + _245;
  _247 = *_246;
  _248 = (int) _247;
  _249 = _243 + _248;
  satds[j_591] = _249;
  bsatd_251 = (unsigned int) _249;
  bsatd_616 = MIN_EXPR <bsatd_251, bsatd_584>;
  # DEBUG bsatd => bsatd_616
  stride ={v} {CLOBBER};
  goto <bb 20>;

  <bb 19>:
  satds[j_591] = 268435456;

  <bb 20>:
  # bsatd_45 = PHI <bsatd_584(19), bsatd_616(18)>
  # DEBUG bsatd => bsatd_45
  # DEBUG j => j_211
  ivtmp_496 = ivtmp_501 - 1;
  if (ivtmp_496 != 0)
    goto <bb 21>;
  else
    goto <bb 22>;

  <bb 21>:
  pretmp_96 = j_211 + 1;
  pretmp_492 = hex2[pretmp_96][1];
  goto <bb 15>;

  <bb 22>:
  # bsatd_526 = PHI <bsatd_45(20)>
  pretmp_228 = bsatd_526 * 17;
  pretmp_477 = pretmp_228 >> 4;

  <bb 23>:
  # bcost_517 = PHI <bcost_3(22), bcost_4(28)>
  # bmx_536 = PHI <bmx_14(22), bmx_15(28)>
  # bmy_532 = PHI <bmy_24(22), bmy_25(28)>
  # dir_516 = PHI <0(22), prephitmp_77(28)>
  # dir_579 = PHI <-2(22), dir_55(28)>
  # ivtmp_503 = PHI <6(22), ivtmp_502(28)>
  # DEBUG dir => dir_579
  # DEBUG j => dir_516
  # DEBUG bmy => bmy_532
  # DEBUG bmx => bmx_536
  # DEBUG bcost => bcost_517
  _253 = satds[dir_516];
  _254 = (unsigned int) _253;
  if (_254 <= pretmp_477)
    goto <bb 25>;
  else
    goto <bb 24>;

  <bb 24>:
  pretmp_214 = dir_516 + 1;
  goto <bb 27>;

  <bb 25>:
  _257 = dir_516 + 1;
  _258 = hex2[_257][1];
  bmy_259 = bmy_24 + _258;
  _260 = hex2[_257][0];
  bmx_261 = bmx_14 + _260;
  # DEBUG a => bmx_261
  # DEBUG b => bmy_259
  _405 = bmx_261 & 65535;
  _406 = bmy_259 << 16;
  _407 = _405 + _406;
  _408 = (unsigned int) _407;
  # DEBUG a => NULL
  # DEBUG b => NULL
  MEM[(uint32_t *)cache_mv2_89] = _408;
  MEM[(uint32_t *)cache_mv_83] = _408;
  _265 = m_84(D)->i_pixel;
  bcost_267 = x264_rd_cost_part (h_81(D), i_lambda2_154(D), i4_79(D), _265);
  # DEBUG cost => bcost_267
  if (bcost_267 < bcost_517)
    goto <bb 27>;
  else
    goto <bb 26>;

  <bb 26>:

  <bb 27>:
  # bcost_4 = PHI <bcost_517(24), bcost_517(26), bcost_267(25)>
  # bmx_15 = PHI <bmx_536(24), bmx_536(26), bmx_261(25)>
  # bmy_25 = PHI <bmy_532(24), bmy_532(26), bmy_259(25)>
  # dir_55 = PHI <dir_579(24), dir_579(26), dir_516(25)>
  # prephitmp_77 = PHI <pretmp_214(24), _257(26), _257(25)>
  # DEBUG dir => dir_55
  # DEBUG bmy => bmy_25
  # DEBUG bmx => bmx_15
  # DEBUG bcost => bcost_4
  # DEBUG D#142 => dir_516 + 1
  # DEBUG j => D#142
  # DEBUG dir => dir_55
  # DEBUG j => D#142
  # DEBUG bmy => bmy_25
  # DEBUG bmx => bmx_15
  # DEBUG bcost => bcost_4
  ivtmp_502 = ivtmp_503 - 1;
  if (ivtmp_502 != 0)
    goto <bb 28>;
  else
    goto <bb 29>;

  <bb 28>:
  goto <bb 23>;

  <bb 29>:
  # bcost_566 = PHI <bcost_4(27)>
  # bmx_547 = PHI <bmx_15(27)>
  # bmy_534 = PHI <bmy_25(27)>
  # dir_514 = PHI <dir_55(27)>
  if (dir_514 != -2)
    goto <bb 30>;
  else
    goto <bb 54>;

  <bb 30>:

  <bb 31>:
  # bcost_518 = PHI <bcost_566(30), bcost_555(53)>
  # bmx_537 = PHI <bmx_547(30), bmx_540(53)>
  # bmy_572 = PHI <bmy_534(30), bmy_530(53)>
  # i_523 = PHI <1(30), i_327(53)>
  # bsatd_585 = PHI <bsatd_526(30), bsatd_525(53)>
  # dir_581 = PHI <dir_514(30), dir_513(53)>
  # ivtmp_481 = PHI <9(30), ivtmp_486(53)>
  # DEBUG dir => dir_581
  # DEBUG bsatd => bsatd_585
  # DEBUG i => i_523
  # DEBUG bmy => bmy_572
  # DEBUG bmx => bmx_537
  # DEBUG bcost => bcost_518
  _269 = dir_581 + 1;
  odir_270 = mod6m1[_269];
  # DEBUG odir => odir_270
  _271 = h_81(D)->mb.mv_max_spel[1];
  _272 = _271 + -1;
  if (_272 <= bmy_572)
    goto <bb 32>;
  else
    goto <bb 33>;

  <bb 32>:
  # bcost_511 = PHI <bcost_518(31)>
  # bmx_509 = PHI <bmx_537(31)>
  # bmy_507 = PHI <bmy_572(31)>
  # bsatd_505 = PHI <bsatd_585(31)>
  goto <bb 54>;

  <bb 33>:
  _273 = h_81(D)->mb.mv_min_spel[1];
  _274 = _273 + -2;
  if (_274 > bmy_572)
    goto <bb 34>;
  else
    goto <bb 35>;

  <bb 34>:
  # bcost_510 = PHI <bcost_518(33)>
  # bmx_508 = PHI <bmx_537(33)>
  # bmy_506 = PHI <bmy_572(33)>
  # bsatd_504 = PHI <bsatd_585(33)>
  goto <bb 54>;

  <bb 35>:

  <bb 36>:
  # j_557 = PHI <0(35), j_308(42)>
  # bsatd_589 = PHI <bsatd_585(35), bsatd_48(42)>
  # ivtmp_600 = PHI <3(35), ivtmp_599(42)>
  # DEBUG bsatd => bsatd_589
  # DEBUG j => j_557
  _275 = odir_270 + j_557;
  _276 = hex2[_275][0];
  _277 = _276 + bmx_537;
  if (bmx_33 != _277)
    goto <bb 37>;
  else
    goto <bb 38>;

  <bb 37>:
  pretmp_563 = hex2[_275][1];
  pretmp_544 = pretmp_563 + bmy_572;
  goto <bb 39>;

  <bb 38>:
  _278 = hex2[_275][1];
  _279 = _278 + bmy_572;
  if (bmy_34 != _279)
    goto <bb 39>;
  else
    goto <bb 40>;

  <bb 39>:
  # prephitmp_545 = PHI <pretmp_544(37), _279(38)>
  stride = 16;
  _282 = h_81(D)->mc.get_ref;
  _285 = m_84(D)->i_stride[0];
  src_287 = _282 (&pix, &stride, _127, _285, _277, prephitmp_545, _125, _124);
  # DEBUG src => src_287
  _288 = h_81(D)->pixf.mbcmp_unaligned[_85];
  stride.29_289 = stride;
  _290 = m_84(D)->p_fenc[0];
  _292 = _288 (_290, 16, src_287, stride.29_289);
  _293 = (long unsigned int) _277;
  _294 = _293 * 2;
  _295 = p_cost_mvx_116 + _294;
  _296 = *_295;
  _297 = (int) _296;
  _298 = _292 + _297;
  _299 = (long unsigned int) prephitmp_545;
  _300 = _299 * 2;
  _301 = p_cost_mvy_121 + _300;
  _302 = *_301;
  _303 = (int) _302;
  _304 = _298 + _303;
  satds[j_557] = _304;
  bsatd_306 = (unsigned int) _304;
  bsatd_567 = MIN_EXPR <bsatd_306, bsatd_589>;
  # DEBUG bsatd => bsatd_567
  stride ={v} {CLOBBER};
  goto <bb 41>;

  <bb 40>:
  satds[j_557] = 268435456;

  <bb 41>:
  # bsatd_48 = PHI <bsatd_567(39), bsatd_589(40)>
  # DEBUG bsatd => bsatd_48
  j_308 = j_557 + 1;
  # DEBUG j => j_308
  # DEBUG bsatd => bsatd_48
  # DEBUG j => j_308
  ivtmp_599 = ivtmp_600 - 1;
  if (ivtmp_599 != 0)
    goto <bb 42>;
  else
    goto <bb 43>;

  <bb 42>:
  goto <bb 36>;

  <bb 43>:
  # bsatd_525 = PHI <bsatd_48(41)>
  pretmp_102 = bsatd_525 * 17;
  pretmp_101 = pretmp_102 >> 4;

  <bb 44>:
  # bcost_597 = PHI <bcost_518(43), bcost_6(48)>
  # bmx_595 = PHI <bmx_537(43), bmx_17(48)>
  # bmy_578 = PHI <bmy_572(43), bmy_27(48)>
  # j_588 = PHI <0(43), j_326(48)>
  # dir_580 = PHI <-2(43), dir_57(48)>
  # ivtmp_603 = PHI <3(43), ivtmp_602(48)>
  # DEBUG dir => dir_580
  # DEBUG j => j_588
  # DEBUG bmy => bmy_578
  # DEBUG bmx => bmx_595
  # DEBUG bcost => bcost_597
  _309 = satds[j_588];
  _310 = (unsigned int) _309;
  if (pretmp_101 >= _310)
    goto <bb 45>;
  else
    goto <bb 47>;

  <bb 45>:
  _313 = odir_270 + j_588;
  _314 = hex2[_313][1];
  bmy_315 = _314 + bmy_572;
  _316 = hex2[_313][0];
  bmx_317 = _316 + bmx_537;
  # DEBUG a => bmx_317
  # DEBUG b => bmy_315
  _409 = bmx_317 & 65535;
  _410 = bmy_315 << 16;
  _411 = _409 + _410;
  _412 = (unsigned int) _411;
  # DEBUG a => NULL
  # DEBUG b => NULL
  MEM[(uint32_t *)cache_mv2_89] = _412;
  MEM[(uint32_t *)cache_mv_83] = _412;
  _321 = m_84(D)->i_pixel;
  bcost_323 = x264_rd_cost_part (h_81(D), i_lambda2_154(D), i4_79(D), _321);
  # DEBUG cost => bcost_323
  if (bcost_323 < bcost_597)
    goto <bb 46>;
  else
    goto <bb 47>;

  <bb 46>:
  # DEBUG bcost => bcost_323
  # DEBUG bmx => bmx_317
  # DEBUG bmy => bmy_315
  _324 = odir_270 + -1;
  dir_325 = _324 + j_588;
  # DEBUG dir => dir_325

  <bb 47>:
  # bcost_6 = PHI <bcost_597(44), bcost_597(45), bcost_323(46)>
  # bmx_17 = PHI <bmx_595(44), bmx_595(45), bmx_317(46)>
  # bmy_27 = PHI <bmy_578(44), bmy_578(45), bmy_315(46)>
  # dir_57 = PHI <dir_580(44), dir_580(45), dir_325(46)>
  # DEBUG dir => dir_57
  # DEBUG bmy => bmy_27
  # DEBUG bmx => bmx_17
  # DEBUG bcost => bcost_6
  j_326 = j_588 + 1;
  # DEBUG j => j_326
  # DEBUG dir => dir_57
  # DEBUG j => j_326
  # DEBUG bmy => bmy_27
  # DEBUG bmx => bmx_17
  # DEBUG bcost => bcost_6
  ivtmp_602 = ivtmp_603 - 1;
  if (ivtmp_602 != 0)
    goto <bb 48>;
  else
    goto <bb 49>;

  <bb 48>:
  goto <bb 44>;

  <bb 49>:
  # bcost_555 = PHI <bcost_6(47)>
  # bmx_540 = PHI <bmx_17(47)>
  # bmy_530 = PHI <bmy_27(47)>
  # dir_513 = PHI <dir_57(47)>
  if (dir_513 == -2)
    goto <bb 50>;
  else
    goto <bb 51>;

  <bb 50>:
  # bcost_553 = PHI <bcost_555(49)>
  # bmx_539 = PHI <bmx_540(49)>
  # bmy_529 = PHI <bmy_530(49)>
  # bsatd_521 = PHI <bsatd_525(49)>
  goto <bb 54>;

  <bb 51>:
  i_327 = i_523 + 1;
  # DEBUG i => i_327
  # DEBUG dir => dir_513
  # DEBUG bsatd => bsatd_525
  # DEBUG i => i_327
  # DEBUG bmy => bmy_530
  # DEBUG bmx => bmx_540
  # DEBUG bcost => bcost_555
  ivtmp_486 = ivtmp_481 - 1;
  if (ivtmp_486 != 0)
    goto <bb 53>;
  else
    goto <bb 52>;

  <bb 52>:
  # bcost_549 = PHI <bcost_555(51)>
  # bmx_538 = PHI <bmx_540(51)>
  # bmy_528 = PHI <bmy_530(51)>
  # bsatd_520 = PHI <bsatd_525(51)>
  goto <bb 54>;

  <bb 53>:
  goto <bb 31>;

  <bb 54>:
  # bcost_9 = PHI <bcost_566(29), bcost_511(32), bcost_510(34), bcost_553(50), bcost_549(52)>
  # bmx_20 = PHI <bmx_547(29), bmx_509(32), bmx_508(34), bmx_539(50), bmx_538(52)>
  # bmy_30 = PHI <bmy_534(29), bmy_507(32), bmy_506(34), bmy_529(50), bmy_528(52)>
  # bsatd_51 = PHI <bsatd_526(29), bsatd_505(32), bsatd_504(34), bsatd_521(50), bsatd_520(52)>
  # DEBUG dir => NULL
  # DEBUG bsatd => bsatd_51
  # DEBUG bmy => bmy_30
  # DEBUG bmx => bmx_20
  # DEBUG bcost => bcost_9
  # DEBUG omx => bmx_20
  # DEBUG omy => bmy_30
  # DEBUG i => 0
  # DEBUG bsatd => bsatd_51
  # DEBUG i => 0

  <bb 55>:
  # i_590 = PHI <i_360(61), 0(54)>
  # bsatd_556 = PHI <bsatd_53(61), bsatd_51(54)>
  # prephitmp_72 = PHI <pretmp_75(61), -1(54)>
  # ivtmp_605 = PHI <ivtmp_604(61), 8(54)>
  # DEBUG bsatd => bsatd_556
  # DEBUG i => i_590
  _328 = square1[i_590][0];
  _329 = bmx_20 + _328;
  if (bmx_33 != _329)
    goto <bb 56>;
  else
    goto <bb 57>;

  <bb 56>:
  pretmp_559 = bmy_30 + prephitmp_72;
  goto <bb 58>;

  <bb 57>:
  _331 = bmy_30 + prephitmp_72;
  if (bmy_34 != _331)
    goto <bb 58>;
  else
    goto <bb 59>;

  <bb 58>:
  # prephitmp_560 = PHI <pretmp_559(56), _331(57)>
  stride = 16;
  _334 = h_81(D)->mc.get_ref;
  _337 = m_84(D)->i_stride[0];
  src_339 = _334 (&pix, &stride, _127, _337, _329, prephitmp_560, _125, _124);
  # DEBUG src => src_339
  _340 = h_81(D)->pixf.mbcmp_unaligned[_85];
  stride.30_341 = stride;
  _342 = m_84(D)->p_fenc[0];
  _344 = _340 (_342, 16, src_339, stride.30_341);
  _345 = (long unsigned int) _329;
  _346 = _345 * 2;
  _347 = p_cost_mvx_116 + _346;
  _348 = *_347;
  _349 = (int) _348;
  _350 = _344 + _349;
  _351 = (long unsigned int) prephitmp_560;
  _352 = _351 * 2;
  _353 = p_cost_mvy_121 + _352;
  _354 = *_353;
  _355 = (int) _354;
  _356 = _350 + _355;
  satds[i_590] = _356;
  bsatd_358 = (unsigned int) _356;
  bsatd_564 = MIN_EXPR <bsatd_358, bsatd_556>;
  # DEBUG bsatd => bsatd_564
  stride ={v} {CLOBBER};
  goto <bb 60>;

  <bb 59>:
  satds[i_590] = 268435456;

  <bb 60>:
  # bsatd_53 = PHI <bsatd_564(58), bsatd_556(59)>
  # DEBUG bsatd => bsatd_53
  i_360 = i_590 + 1;
  # DEBUG i => i_360
  # DEBUG bsatd => bsatd_53
  # DEBUG i => i_360
  ivtmp_604 = ivtmp_605 - 1;
  if (ivtmp_604 != 0)
    goto <bb 61>;
  else
    goto <bb 62>;

  <bb 61>:
  pretmp_75 = square1[i_360][1];
  goto <bb 55>;

  <bb 62>:
  # bsatd_519 = PHI <bsatd_53(60)>
  pretmp_170 = bsatd_519 * 17;
  pretmp_168 = pretmp_170 >> 4;

  <bb 63>:
  # bcost_533 = PHI <bcost_9(62), bcost_10(67)>
  # bmx_593 = PHI <bmx_20(62), bmx_21(67)>
  # bmy_524 = PHI <bmy_30(62), bmy_31(67)>
  # i_515 = PHI <0(62), i_375(67)>
  # ivtmp_62 = PHI <8(62), ivtmp_606(67)>
  # DEBUG dir => NULL
  # DEBUG i => i_515
  # DEBUG bmy => bmy_524
  # DEBUG bmx => bmx_593
  # DEBUG bcost => bcost_533
  _361 = satds[i_515];
  _362 = (unsigned int) _361;
  if (pretmp_168 >= _362)
    goto <bb 64>;
  else
    goto <bb 66>;

  <bb 64>:
  _365 = square1[i_515][1];
  bmy_366 = bmy_30 + _365;
  _367 = square1[i_515][0];
  bmx_368 = bmx_20 + _367;
  # DEBUG a => bmx_368
  # DEBUG b => bmy_366
  _413 = bmx_368 & 65535;
  _414 = bmy_366 << 16;
  _415 = _413 + _414;
  _416 = (unsigned int) _415;
  # DEBUG a => NULL
  # DEBUG b => NULL
  MEM[(uint32_t *)cache_mv2_89] = _416;
  MEM[(uint32_t *)cache_mv_83] = _416;
  _372 = m_84(D)->i_pixel;
  bcost_374 = x264_rd_cost_part (h_81(D), i_lambda2_154(D), i4_79(D), _372);
  # DEBUG cost => bcost_374
  if (bcost_374 < bcost_533)
    goto <bb 66>;
  else
    goto <bb 65>;

  <bb 65>:

  <bb 66>:
  # bcost_10 = PHI <bcost_533(63), bcost_533(65), bcost_374(64)>
  # bmx_21 = PHI <bmx_593(63), bmx_593(65), bmx_368(64)>
  # bmy_31 = PHI <bmy_524(63), bmy_524(65), bmy_366(64)>
  # DEBUG dir => NULL
  # DEBUG bmy => bmy_31
  # DEBUG bmx => bmx_21
  # DEBUG bcost => bcost_10
  i_375 = i_515 + 1;
  # DEBUG i => i_375
  # DEBUG dir => NULL
  # DEBUG i => i_375
  # DEBUG bmy => bmy_31
  # DEBUG bmx => bmx_21
  # DEBUG bcost => bcost_10
  ivtmp_606 = ivtmp_62 - 1;
  if (ivtmp_606 != 0)
    goto <bb 67>;
  else
    goto <bb 68>;

  <bb 67>:
  goto <bb 63>;

  <bb 68>:
  # bcost_548 = PHI <bcost_10(66)>
  # bmx_535 = PHI <bmx_21(66)>
  # bmy_527 = PHI <bmy_31(66)>
  _376 = h_81(D)->mb.mv_max_spel[1];
  _377 = h_81(D)->mb.mv_min_spel[1];
  # DEBUG v => bmy_527
  # DEBUG i_min => _377
  # DEBUG i_max => _376
  if (bmy_527 >= _377)
    goto <bb 69>;
  else
    goto <bb 70>;

  <bb 69>:
  iftmp.14_475 = MIN_EXPR <bmy_527, _376>;

  <bb 70>:
  # iftmp.14_476 = PHI <_377(68), iftmp.14_475(69)>
  # DEBUG v => NULL
  # DEBUG i_min => NULL
  # DEBUG i_max => NULL
  # DEBUG bmy => NULL
  _379 = (int) bcost_548;
  m_84(D)->cost = _379;
  _381 = (short int) bmx_535;
  m_84(D)->mv[0] = _381;
  _383 = (short int) iftmp.14_476;
  m_84(D)->mv[1] = _383;
  # DEBUG a => bmx_535
  # DEBUG b => NULL
  _390 = bmx_535 & 65535;
  _472 = iftmp.14_476 << 16;
  _473 = _390 + _472;
  _474 = (unsigned int) _473;
  # DEBUG a => NULL
  # DEBUG b => NULL
  _386 = block_idx_y[i4_79(D)];
  _387 = (int) _386;
  _388 = block_idx_x[i4_79(D)];
  _389 = (int) _388;
  # DEBUG h => h_81(D)
  # DEBUG x => _389
  # DEBUG y => _387
  # DEBUG width => bw_92
  # DEBUG height => bh_95
  # DEBUG i_list => i_list_82(D)
  # DEBUG mv => NULL
  _446 = _389 + 12;
  _447 = _387 * 8;
  _448 = _446 + _447;
  _449 = &h_81(D)->mb.cache.mv[i_list_82(D)][_448];
  # DEBUG dst => _449
  # DEBUG width => bw_92
  # DEBUG height => bh_95
  # DEBUG val => NULL
  if (bw_92 == 1)
    goto <bb 71>;
  else
    goto <bb 75>;

  <bb 71>:
  # DEBUG dy => 0
  if (bh_95 > 0)
    goto <bb 72>;
  else
    goto <bb 86>;

  <bb 72>:

  <bb 73>:
  # dy_609 = PHI <0(72), dy_458(74)>
  # DEBUG dy => dy_609
  # DEBUG dx => 0
  _451 = dy_609 * 8;
  _454 = (long unsigned int) _451;
  _455 = _454 * 4;
  _456 = _449 + _455;
  *_456 = _474;
  # DEBUG dx => 1
  # DEBUG dx => 1
  dy_458 = dy_609 + 1;
  # DEBUG dy => dy_458
  # DEBUG dy => dy_458
  if (bh_95 > dy_458)
    goto <bb 74>;
  else
    goto <bb 85>;

  <bb 74>:
  goto <bb 73>;

  <bb 75>:
  _459 = (long unsigned int) _474;
  _460 = _459 << 32;
  val64_461 = _459 + _460;
  # DEBUG val64 => val64_461
  # DEBUG dy => 0
  # DEBUG dy => 0
  if (bh_95 > 0)
    goto <bb 76>;
  else
    goto <bb 86>;

  <bb 76>:
  pretmp_498 = bw_92 / 2;
  goto <bb 83>;

  <bb 77>:

  <bb 78>:
  # dx_36 = PHI <0(84), dx_469(77)>
  # DEBUG dx => dx_36
  _465 = dx_36 + pretmp_554;
  _466 = (long unsigned int) _465;
  _467 = _466 * 8;
  _468 = _449 + _467;
  *_468 = val64_461;
  dx_469 = dx_36 + 1;
  # DEBUG dx => dx_469
  # DEBUG dx => dx_469
  if (dx_469 < pretmp_498)
    goto <bb 77>;
  else
    goto <bb 79>;

  <bb 79>:

  <bb 80>:
  dy_471 = dy_54 + 1;
  # DEBUG dy => dy_471
  # DEBUG dy => dy_471
  if (bh_95 > dy_471)
    goto <bb 82>;
  else
    goto <bb 81>;

  <bb 81>:
  goto <bb 86>;

  <bb 82>:

  <bb 83>:
  # dy_54 = PHI <0(76), dy_471(82)>
  # DEBUG dy => dy_54
  # DEBUG dx => 0
  if (pretmp_498 > 0)
    goto <bb 84>;
  else
    goto <bb 80>;

  <bb 84>:
  pretmp_554 = dy_54 * 4;
  goto <bb 78>;

  <bb 85>:

  <bb 86>:
  # DEBUG dst => NULL
  # DEBUG width => NULL
  # DEBUG height => NULL
  # DEBUG val => NULL
  # DEBUG val64 => NULL
  # DEBUG dx => NULL
  # DEBUG dy => NULL
  # DEBUG h => NULL
  # DEBUG x => NULL
  # DEBUG y => NULL
  # DEBUG width => NULL
  # DEBUG height => NULL
  # DEBUG i_list => NULL
  # DEBUG mv => NULL
  # DEBUG dy => NULL
  # DEBUG dx => NULL
  # DEBUG val64 => NULL
  _391 = m_84(D)->mvp[1];
  _392 = (int) _391;
  _393 = iftmp.14_476 - _392;
  _394 = m_84(D)->mvp[0];
  _395 = (int) _394;
  _396 = bmx_535 - _395;
  # DEBUG a => _396
  # DEBUG b => _393
  _402 = _396 & 65535;
  _443 = _393 << 16;
  _444 = _402 + _443;
  _445 = (unsigned int) _444;
  # DEBUG a => NULL
  # DEBUG b => NULL
  # DEBUG h => h_81(D)
  # DEBUG x => _389
  # DEBUG y => _387
  # DEBUG width => bw_92
  # DEBUG height => bh_95
  # DEBUG i_list => i_list_82(D)
  # DEBUG mv => NULL
  _420 = &h_81(D)->mb.cache.mvd[i_list_82(D)][_448];
  # DEBUG dst => _420
  # DEBUG width => bw_92
  # DEBUG height => bh_95
  # DEBUG val => NULL
  if (bw_92 == 1)
    goto <bb 87>;
  else
    goto <bb 91>;

  <bb 87>:
  # DEBUG dy => 0
  if (bh_95 > 0)
    goto <bb 88>;
  else
    goto <bb 102>;

  <bb 88>:

  <bb 89>:
  # dy_423 = PHI <0(88), dy_429(90)>
  # DEBUG dy => dy_423
  # DEBUG dx => 0
  _422 = dy_423 * 8;
  _425 = (long unsigned int) _422;
  _426 = _425 * 4;
  _427 = _420 + _426;
  *_427 = _445;
  # DEBUG dx => 1
  # DEBUG dx => 1
  dy_429 = dy_423 + 1;
  # DEBUG dy => dy_429
  # DEBUG dy => dy_429
  if (bh_95 > dy_429)
    goto <bb 90>;
  else
    goto <bb 101>;

  <bb 90>:
  goto <bb 89>;

  <bb 91>:
  _430 = (long unsigned int) _445;
  _431 = _430 << 32;
  val64_432 = _430 + _431;
  # DEBUG val64 => val64_432
  # DEBUG dy => 0
  # DEBUG dy => 0
  if (bh_95 > 0)
    goto <bb 92>;
  else
    goto <bb 102>;

  <bb 92>:
  pretmp_69 = bw_92 / 2;
  goto <bb 99>;

  <bb 93>:

  <bb 94>:
  # dx_522 = PHI <0(100), dx_440(93)>
  # DEBUG dx => dx_522
  _436 = pretmp_203 + dx_522;
  _437 = (long unsigned int) _436;
  _438 = _437 * 8;
  _439 = _420 + _438;
  *_439 = val64_432;
  dx_440 = dx_522 + 1;
  # DEBUG dx => dx_440
  # DEBUG dx => dx_440
  if (pretmp_69 > dx_440)
    goto <bb 93>;
  else
    goto <bb 95>;

  <bb 95>:

  <bb 96>:
  dy_442 = dy_424 + 1;
  # DEBUG dy => dy_442
  # DEBUG dy => dy_442
  if (bh_95 > dy_442)
    goto <bb 98>;
  else
    goto <bb 97>;

  <bb 97>:
  goto <bb 102>;

  <bb 98>:

  <bb 99>:
  # dy_424 = PHI <0(92), dy_442(98)>
  # DEBUG dy => dy_424
  # DEBUG dx => 0
  if (pretmp_69 > 0)
    goto <bb 100>;
  else
    goto <bb 96>;

  <bb 100>:
  pretmp_203 = dy_424 * 4;
  goto <bb 94>;

  <bb 101>:

  <bb 102>:
  # DEBUG dst => NULL
  # DEBUG width => NULL
  # DEBUG height => NULL
  # DEBUG val => NULL
  # DEBUG val64 => NULL
  # DEBUG dx => NULL
  # DEBUG dy => NULL
  # DEBUG h => NULL
  # DEBUG x => NULL
  # DEBUG y => NULL
  # DEBUG width => NULL
  # DEBUG height => NULL
  # DEBUG i_list => NULL
  # DEBUG mv => NULL
  # DEBUG dy => NULL
  # DEBUG dx => NULL
  # DEBUG val64 => NULL
  pix ={v} {CLOBBER};
  satds ={v} {CLOBBER};
  return;

  <bb 103>:
  # DEBUG bcost => 1152921504606846976
  _568 = m_84(D)->mv[0];
  bmx_618 = (int) _568;
  # DEBUG bmx => bmx_618
  _569 = m_84(D)->mv[1];
  bmy_619 = (int) _569;
  # DEBUG bmy => bmy_619
  # DEBUG omx => bmx_618
  # DEBUG omy => bmy_619
  # DEBUG satd => 0
  # DEBUG dir => -2
  # DEBUG bcost => 1152921504606846976
  # DEBUG bmx => bmx_618
  # DEBUG bmy => bmy_619
  # DEBUG omx => bmx_618
  # DEBUG omy => bmy_619
  # DEBUG satd => 0
  # DEBUG dir => -2
  if (i4_79(D) != 0)
    goto <bb 4>;
  else
    goto <bb 5>;

}


